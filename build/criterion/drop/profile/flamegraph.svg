<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="885.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="885.00"> </text><svg id="frames" x="10" width="1180" total_samples="1275"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.1569%" y="485" width="0.0784%" height="15" fill="rgb(252,55,47)" fg:x="2" fg:w="1"/><text x="0.4069%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1569%" y="469" width="0.0784%" height="15" fill="rgb(240,198,32)" fg:x="2" fg:w="1"/><text x="0.4069%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1569%" y="453" width="0.0784%" height="15" fill="rgb(224,203,19)" fg:x="2" fg:w="1"/><text x="0.4069%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1569%" y="437" width="0.0784%" height="15" fill="rgb(205,27,16)" fg:x="2" fg:w="1"/><text x="0.4069%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3137%" y="405" width="0.0784%" height="15" fill="rgb(224,226,17)" fg:x="4" fg:w="1"/><text x="0.5637%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.39%)</title><rect x="0.3922%" y="405" width="0.3922%" height="15" fill="rgb(205,216,54)" fg:x="5" fg:w="5"/><text x="0.6422%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.5490%" y="389" width="0.2353%" height="15" fill="rgb(248,168,46)" fg:x="7" fg:w="3"/><text x="0.7990%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7843%" y="373" width="0.0784%" height="15" fill="rgb(226,111,45)" fg:x="10" fg:w="1"/><text x="1.0343%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.7843%" y="389" width="0.1569%" height="15" fill="rgb(231,15,9)" fg:x="10" fg:w="2"/><text x="1.0343%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.8627%" y="373" width="0.0784%" height="15" fill="rgb(243,168,3)" fg:x="11" fg:w="1"/><text x="1.1127%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8627%" y="357" width="0.0784%" height="15" fill="rgb(221,220,54)" fg:x="11" fg:w="1"/><text x="1.1127%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.9412%" y="389" width="0.2353%" height="15" fill="rgb(232,174,38)" fg:x="12" fg:w="3"/><text x="1.1912%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0980%" y="373" width="0.0784%" height="15" fill="rgb(205,14,38)" fg:x="14" fg:w="1"/><text x="1.3480%" y="383.50"></text></g><g><title>__libc_free (4 samples, 0.31%)</title><rect x="1.1765%" y="373" width="0.3137%" height="15" fill="rgb(234,89,19)" fg:x="15" fg:w="4"/><text x="1.4265%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.4902%" y="373" width="0.0784%" height="15" fill="rgb(216,68,51)" fg:x="19" fg:w="1"/><text x="1.7402%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4902%" y="357" width="0.0784%" height="15" fill="rgb(213,49,2)" fg:x="19" fg:w="1"/><text x="1.7402%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.33%)</title><rect x="0.3137%" y="421" width="1.3333%" height="15" fill="rgb(242,146,30)" fg:x="4" fg:w="17"/><text x="0.5637%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="0.7843%" y="405" width="0.8627%" height="15" fill="rgb(224,188,11)" fg:x="10" fg:w="11"/><text x="1.0343%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="1.1765%" y="389" width="0.4706%" height="15" fill="rgb(213,159,11)" fg:x="15" fg:w="6"/><text x="1.4265%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.5686%" y="373" width="0.0784%" height="15" fill="rgb(229,13,31)" fg:x="20" fg:w="1"/><text x="1.8186%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (20 samples, 1.57%)</title><rect x="0.2353%" y="485" width="1.5686%" height="15" fill="rgb(209,103,11)" fg:x="3" fg:w="20"/><text x="0.4853%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.57%)</title><rect x="0.2353%" y="469" width="1.5686%" height="15" fill="rgb(206,3,4)" fg:x="3" fg:w="20"/><text x="0.4853%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.57%)</title><rect x="0.2353%" y="453" width="1.5686%" height="15" fill="rgb(252,10,49)" fg:x="3" fg:w="20"/><text x="0.4853%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.49%)</title><rect x="0.3137%" y="437" width="1.4902%" height="15" fill="rgb(217,160,32)" fg:x="4" fg:w="19"/><text x="0.5637%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.6471%" y="421" width="0.1569%" height="15" fill="rgb(249,196,0)" fg:x="21" fg:w="2"/><text x="1.8971%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.88%)</title><rect x="0.0784%" y="501" width="1.8824%" height="15" fill="rgb(213,17,48)" fg:x="1" fg:w="24"/><text x="0.3284%" y="511.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (2 samples, 0.16%)</title><rect x="1.8039%" y="485" width="0.1569%" height="15" fill="rgb(206,42,46)" fg:x="23" fg:w="2"/><text x="2.0539%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="1.8039%" y="469" width="0.1569%" height="15" fill="rgb(212,105,24)" fg:x="23" fg:w="2"/><text x="2.0539%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.8824%" y="453" width="0.0784%" height="15" fill="rgb(243,216,30)" fg:x="24" fg:w="1"/><text x="2.1324%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (2 samples, 0.16%)</title><rect x="2.0392%" y="469" width="0.1569%" height="15" fill="rgb(207,121,3)" fg:x="26" fg:w="2"/><text x="2.2892%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.1176%" y="453" width="0.0784%" height="15" fill="rgb(249,78,0)" fg:x="27" fg:w="1"/><text x="2.3676%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="2.3529%" y="453" width="0.0784%" height="15" fill="rgb(244,151,32)" fg:x="30" fg:w="1"/><text x="2.6029%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="2.3529%" y="437" width="0.0784%" height="15" fill="rgb(228,63,25)" fg:x="30" fg:w="1"/><text x="2.6029%" y="447.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="2.4314%" y="453" width="0.0784%" height="15" fill="rgb(231,158,23)" fg:x="31" fg:w="1"/><text x="2.6814%" y="463.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="2.5098%" y="405" width="0.0784%" height="15" fill="rgb(248,107,23)" fg:x="32" fg:w="1"/><text x="2.7598%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.5098%" y="389" width="0.0784%" height="15" fill="rgb(215,168,21)" fg:x="32" fg:w="1"/><text x="2.7598%" y="399.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="2.5882%" y="389" width="0.0784%" height="15" fill="rgb(227,83,22)" fg:x="33" fg:w="1"/><text x="2.8382%" y="399.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="2.5882%" y="373" width="0.0784%" height="15" fill="rgb(217,118,43)" fg:x="33" fg:w="1"/><text x="2.8382%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="2.5882%" y="357" width="0.0784%" height="15" fill="rgb(229,220,41)" fg:x="33" fg:w="1"/><text x="2.8382%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="2.5882%" y="341" width="0.0784%" height="15" fill="rgb(254,146,46)" fg:x="33" fg:w="1"/><text x="2.8382%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="2.5882%" y="325" width="0.0784%" height="15" fill="rgb(233,208,31)" fg:x="33" fg:w="1"/><text x="2.8382%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="2.5882%" y="309" width="0.0784%" height="15" fill="rgb(222,162,7)" fg:x="33" fg:w="1"/><text x="2.8382%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.5882%" y="293" width="0.0784%" height="15" fill="rgb(230,117,45)" fg:x="33" fg:w="1"/><text x="2.8382%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.5882%" y="277" width="0.0784%" height="15" fill="rgb(239,163,6)" fg:x="33" fg:w="1"/><text x="2.8382%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.5882%" y="261" width="0.0784%" height="15" fill="rgb(246,130,17)" fg:x="33" fg:w="1"/><text x="2.8382%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.5882%" y="245" width="0.0784%" height="15" fill="rgb(216,84,5)" fg:x="33" fg:w="1"/><text x="2.8382%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.5882%" y="229" width="0.0784%" height="15" fill="rgb(230,200,21)" fg:x="33" fg:w="1"/><text x="2.8382%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="2.5882%" y="213" width="0.0784%" height="15" fill="rgb(224,2,8)" fg:x="33" fg:w="1"/><text x="2.8382%" y="223.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="3.0588%" y="357" width="0.0784%" height="15" fill="rgb(238,178,10)" fg:x="39" fg:w="1"/><text x="3.3088%" y="367.50"></text></g><g><title>dlerror (7 samples, 0.55%)</title><rect x="2.6667%" y="389" width="0.5490%" height="15" fill="rgb(242,153,24)" fg:x="34" fg:w="7"/><text x="2.9167%" y="399.50"></text></g><g><title>__asprintf (6 samples, 0.47%)</title><rect x="2.7451%" y="373" width="0.4706%" height="15" fill="rgb(242,32,48)" fg:x="35" fg:w="6"/><text x="2.9951%" y="383.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="3.1373%" y="357" width="0.0784%" height="15" fill="rgb(227,36,0)" fg:x="40" fg:w="1"/><text x="3.3873%" y="367.50"></text></g><g><title>dlopen (29 samples, 2.27%)</title><rect x="3.2157%" y="389" width="2.2745%" height="15" fill="rgb(251,33,35)" fg:x="41" fg:w="29"/><text x="3.4657%" y="399.50">d..</text></g><g><title>_dl_catch_error (26 samples, 2.04%)</title><rect x="3.4510%" y="373" width="2.0392%" height="15" fill="rgb(232,168,51)" fg:x="44" fg:w="26"/><text x="3.7010%" y="383.50">_..</text></g><g><title>_dl_catch_exception (26 samples, 2.04%)</title><rect x="3.4510%" y="357" width="2.0392%" height="15" fill="rgb(228,56,10)" fg:x="44" fg:w="26"/><text x="3.7010%" y="367.50">_..</text></g><g><title>_dl_catch_exception (26 samples, 2.04%)</title><rect x="3.4510%" y="341" width="2.0392%" height="15" fill="rgb(231,10,26)" fg:x="44" fg:w="26"/><text x="3.7010%" y="351.50">_..</text></g><g><title>_dl_catch_exception (26 samples, 2.04%)</title><rect x="3.4510%" y="325" width="2.0392%" height="15" fill="rgb(226,202,12)" fg:x="44" fg:w="26"/><text x="3.7010%" y="335.50">_..</text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="5.4118%" y="309" width="0.0784%" height="15" fill="rgb(251,49,21)" fg:x="69" fg:w="1"/><text x="5.6618%" y="319.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="5.4118%" y="293" width="0.0784%" height="15" fill="rgb(206,228,28)" fg:x="69" fg:w="1"/><text x="5.6618%" y="303.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (39 samples, 3.06%)</title><rect x="2.5098%" y="421" width="3.0588%" height="15" fill="rgb(205,198,31)" fg:x="32" fg:w="39"/><text x="2.7598%" y="431.50">&lt;pl..</text></g><g><title>libloading::safe::Library::new (38 samples, 2.98%)</title><rect x="2.5882%" y="405" width="2.9804%" height="15" fill="rgb(213,69,1)" fg:x="33" fg:w="38"/><text x="2.8382%" y="415.50">lib..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="5.4902%" y="389" width="0.0784%" height="15" fill="rgb(209,177,9)" fg:x="70" fg:w="1"/><text x="5.7402%" y="399.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="5.4902%" y="373" width="0.0784%" height="15" fill="rgb(227,119,30)" fg:x="70" fg:w="1"/><text x="5.7402%" y="383.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="5.4902%" y="357" width="0.0784%" height="15" fill="rgb(234,106,41)" fg:x="70" fg:w="1"/><text x="5.7402%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="5.4902%" y="341" width="0.0784%" height="15" fill="rgb(244,103,47)" fg:x="70" fg:w="1"/><text x="5.7402%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.4902%" y="325" width="0.0784%" height="15" fill="rgb(212,211,25)" fg:x="70" fg:w="1"/><text x="5.7402%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.4902%" y="309" width="0.0784%" height="15" fill="rgb(208,63,53)" fg:x="70" fg:w="1"/><text x="5.7402%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.4902%" y="293" width="0.0784%" height="15" fill="rgb(213,176,21)" fg:x="70" fg:w="1"/><text x="5.7402%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.4902%" y="277" width="0.0784%" height="15" fill="rgb(243,124,12)" fg:x="70" fg:w="1"/><text x="5.7402%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.4902%" y="261" width="0.0784%" height="15" fill="rgb(239,2,35)" fg:x="70" fg:w="1"/><text x="5.7402%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.4902%" y="245" width="0.0784%" height="15" fill="rgb(253,169,22)" fg:x="70" fg:w="1"/><text x="5.7402%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.4902%" y="229" width="0.0784%" height="15" fill="rgb(254,51,12)" fg:x="70" fg:w="1"/><text x="5.7402%" y="239.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (40 samples, 3.14%)</title><rect x="2.5098%" y="437" width="3.1373%" height="15" fill="rgb(244,17,47)" fg:x="32" fg:w="40"/><text x="2.7598%" y="447.50">ker..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.5686%" y="421" width="0.0784%" height="15" fill="rgb(251,45,46)" fg:x="71" fg:w="1"/><text x="5.8186%" y="431.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="5.5686%" y="405" width="0.0784%" height="15" fill="rgb(223,87,43)" fg:x="71" fg:w="1"/><text x="5.8186%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.7255%" y="421" width="0.0784%" height="15" fill="rgb(230,132,31)" fg:x="73" fg:w="1"/><text x="5.9755%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.7255%" y="405" width="0.0784%" height="15" fill="rgb(206,99,1)" fg:x="73" fg:w="1"/><text x="5.9755%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="5.8824%" y="389" width="0.0784%" height="15" fill="rgb(227,110,25)" fg:x="75" fg:w="1"/><text x="6.1324%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.8824%" y="373" width="0.0784%" height="15" fill="rgb(217,182,7)" fg:x="75" fg:w="1"/><text x="6.1324%" y="383.50"></text></g><g><title>engine::session::Session::initialize (48 samples, 3.76%)</title><rect x="2.5098%" y="453" width="3.7647%" height="15" fill="rgb(250,176,4)" fg:x="32" fg:w="48"/><text x="2.7598%" y="463.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (8 samples, 0.63%)</title><rect x="5.6471%" y="437" width="0.6275%" height="15" fill="rgb(244,98,30)" fg:x="72" fg:w="8"/><text x="5.8971%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.47%)</title><rect x="5.8039%" y="421" width="0.4706%" height="15" fill="rgb(228,150,42)" fg:x="74" fg:w="6"/><text x="6.0539%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.47%)</title><rect x="5.8039%" y="405" width="0.4706%" height="15" fill="rgb(231,91,46)" fg:x="74" fg:w="6"/><text x="6.0539%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.31%)</title><rect x="5.9608%" y="389" width="0.3137%" height="15" fill="rgb(252,161,32)" fg:x="76" fg:w="4"/><text x="6.2108%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.31%)</title><rect x="5.9608%" y="373" width="0.3137%" height="15" fill="rgb(236,69,41)" fg:x="76" fg:w="4"/><text x="6.2108%" y="383.50"></text></g><g><title>realloc (4 samples, 0.31%)</title><rect x="5.9608%" y="357" width="0.3137%" height="15" fill="rgb(212,160,3)" fg:x="76" fg:w="4"/><text x="6.2108%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::parser::PutInsideActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="6.2745%" y="405" width="0.0784%" height="15" fill="rgb(216,5,50)" fg:x="80" fg:w="1"/><text x="6.5245%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="6.3529%" y="405" width="0.0784%" height="15" fill="rgb(241,138,25)" fg:x="81" fg:w="1"/><text x="6.6029%" y="415.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (58 samples, 4.55%)</title><rect x="1.9608%" y="501" width="4.5490%" height="15" fill="rgb(239,42,18)" fg:x="25" fg:w="58"/><text x="2.2108%" y="511.50">&lt;engi..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (57 samples, 4.47%)</title><rect x="2.0392%" y="485" width="4.4706%" height="15" fill="rgb(239,40,7)" fg:x="26" fg:w="57"/><text x="2.2892%" y="495.50">engin..</text></g><g><title>engine::session::Session::new (55 samples, 4.31%)</title><rect x="2.1961%" y="469" width="4.3137%" height="15" fill="rgb(239,11,31)" fg:x="28" fg:w="55"/><text x="2.4461%" y="479.50">engin..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="6.2745%" y="453" width="0.2353%" height="15" fill="rgb(224,77,40)" fg:x="80" fg:w="3"/><text x="6.5245%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="6.2745%" y="437" width="0.2353%" height="15" fill="rgb(226,15,5)" fg:x="80" fg:w="3"/><text x="6.5245%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="6.2745%" y="421" width="0.2353%" height="15" fill="rgb(254,188,5)" fg:x="80" fg:w="3"/><text x="6.5245%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.4314%" y="405" width="0.0784%" height="15" fill="rgb(241,148,52)" fg:x="82" fg:w="1"/><text x="6.6814%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.4314%" y="389" width="0.0784%" height="15" fill="rgb(251,48,36)" fg:x="82" fg:w="1"/><text x="6.6814%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.4314%" y="373" width="0.0784%" height="15" fill="rgb(243,83,13)" fg:x="82" fg:w="1"/><text x="6.6814%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7451%" y="485" width="0.0784%" height="15" fill="rgb(210,105,0)" fg:x="86" fg:w="1"/><text x="6.9951%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="6.8235%" y="485" width="0.0784%" height="15" fill="rgb(239,60,36)" fg:x="87" fg:w="1"/><text x="7.0735%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="6.9020%" y="485" width="0.0784%" height="15" fill="rgb(210,20,0)" fg:x="88" fg:w="1"/><text x="7.1520%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.9020%" y="469" width="0.0784%" height="15" fill="rgb(244,26,53)" fg:x="88" fg:w="1"/><text x="7.1520%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.31%)</title><rect x="6.9804%" y="469" width="0.3137%" height="15" fill="rgb(240,100,49)" fg:x="89" fg:w="4"/><text x="7.2304%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="7.0588%" y="453" width="0.2353%" height="15" fill="rgb(250,46,45)" fg:x="90" fg:w="3"/><text x="7.3088%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2157%" y="437" width="0.0784%" height="15" fill="rgb(220,181,29)" fg:x="92" fg:w="1"/><text x="7.4657%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="7.2941%" y="469" width="0.0784%" height="15" fill="rgb(213,137,33)" fg:x="93" fg:w="1"/><text x="7.5441%" y="479.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="7.2941%" y="453" width="0.0784%" height="15" fill="rgb(213,27,48)" fg:x="93" fg:w="1"/><text x="7.5441%" y="463.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="7.2941%" y="437" width="0.0784%" height="15" fill="rgb(245,180,39)" fg:x="93" fg:w="1"/><text x="7.5441%" y="447.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="7.2941%" y="421" width="0.0784%" height="15" fill="rgb(212,158,42)" fg:x="93" fg:w="1"/><text x="7.5441%" y="431.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="7.2941%" y="405" width="0.0784%" height="15" fill="rgb(228,193,18)" fg:x="93" fg:w="1"/><text x="7.5441%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="7.2941%" y="389" width="0.0784%" height="15" fill="rgb(245,172,29)" fg:x="93" fg:w="1"/><text x="7.5441%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="7.2941%" y="373" width="0.0784%" height="15" fill="rgb(207,98,24)" fg:x="93" fg:w="1"/><text x="7.5441%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="7.4510%" y="437" width="0.3137%" height="15" fill="rgb(249,92,26)" fg:x="95" fg:w="4"/><text x="7.7010%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.31%)</title><rect x="7.4510%" y="421" width="0.3137%" height="15" fill="rgb(217,176,26)" fg:x="95" fg:w="4"/><text x="7.7010%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="7.5294%" y="405" width="0.2353%" height="15" fill="rgb(221,8,39)" fg:x="96" fg:w="3"/><text x="7.7794%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.6863%" y="389" width="0.0784%" height="15" fill="rgb(208,90,18)" fg:x="98" fg:w="1"/><text x="7.9363%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.6863%" y="373" width="0.0784%" height="15" fill="rgb(207,202,30)" fg:x="98" fg:w="1"/><text x="7.9363%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.6863%" y="357" width="0.0784%" height="15" fill="rgb(231,124,22)" fg:x="98" fg:w="1"/><text x="7.9363%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.6863%" y="341" width="0.0784%" height="15" fill="rgb(206,15,5)" fg:x="98" fg:w="1"/><text x="7.9363%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.6863%" y="325" width="0.0784%" height="15" fill="rgb(239,16,52)" fg:x="98" fg:w="1"/><text x="7.9363%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.6863%" y="309" width="0.0784%" height="15" fill="rgb(245,213,29)" fg:x="98" fg:w="1"/><text x="7.9363%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.6863%" y="293" width="0.0784%" height="15" fill="rgb(213,203,36)" fg:x="98" fg:w="1"/><text x="7.9363%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.6863%" y="277" width="0.0784%" height="15" fill="rgb(209,55,18)" fg:x="98" fg:w="1"/><text x="7.9363%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.6863%" y="261" width="0.0784%" height="15" fill="rgb(207,133,49)" fg:x="98" fg:w="1"/><text x="7.9363%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.6863%" y="245" width="0.0784%" height="15" fill="rgb(240,33,46)" fg:x="98" fg:w="1"/><text x="7.9363%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.6863%" y="229" width="0.0784%" height="15" fill="rgb(212,35,2)" fg:x="98" fg:w="1"/><text x="7.9363%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.6863%" y="213" width="0.0784%" height="15" fill="rgb(231,119,28)" fg:x="98" fg:w="1"/><text x="7.9363%" y="223.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="7.9216%" y="373" width="0.3922%" height="15" fill="rgb(252,178,7)" fg:x="101" fg:w="5"/><text x="8.1716%" y="383.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="7.9216%" y="357" width="0.3922%" height="15" fill="rgb(251,91,4)" fg:x="101" fg:w="5"/><text x="8.1716%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="8.0784%" y="341" width="0.2353%" height="15" fill="rgb(233,122,19)" fg:x="103" fg:w="3"/><text x="8.3284%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.2353%" y="325" width="0.0784%" height="15" fill="rgb(231,208,46)" fg:x="105" fg:w="1"/><text x="8.4853%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.55%)</title><rect x="7.9216%" y="389" width="0.5490%" height="15" fill="rgb(243,15,41)" fg:x="101" fg:w="7"/><text x="8.1716%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.3137%" y="373" width="0.1569%" height="15" fill="rgb(210,32,43)" fg:x="106" fg:w="2"/><text x="8.5637%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.3922%" y="357" width="0.0784%" height="15" fill="rgb(222,177,15)" fg:x="107" fg:w="1"/><text x="8.6422%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.3922%" y="341" width="0.0784%" height="15" fill="rgb(244,121,34)" fg:x="107" fg:w="1"/><text x="8.6422%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.7843%" y="373" width="0.0784%" height="15" fill="rgb(234,138,4)" fg:x="112" fg:w="1"/><text x="9.0343%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="8.8627%" y="373" width="0.3137%" height="15" fill="rgb(240,97,48)" fg:x="113" fg:w="4"/><text x="9.1127%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.0196%" y="357" width="0.1569%" height="15" fill="rgb(237,65,54)" fg:x="115" fg:w="2"/><text x="9.2696%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.0980%" y="341" width="0.0784%" height="15" fill="rgb(214,25,24)" fg:x="116" fg:w="1"/><text x="9.3480%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.1765%" y="357" width="0.0784%" height="15" fill="rgb(213,5,3)" fg:x="117" fg:w="1"/><text x="9.4265%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.2549%" y="325" width="0.1569%" height="15" fill="rgb(219,81,29)" fg:x="118" fg:w="2"/><text x="9.5049%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.2549%" y="309" width="0.1569%" height="15" fill="rgb(220,43,48)" fg:x="118" fg:w="2"/><text x="9.5049%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.2549%" y="293" width="0.1569%" height="15" fill="rgb(239,157,2)" fg:x="118" fg:w="2"/><text x="9.5049%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.2549%" y="277" width="0.1569%" height="15" fill="rgb(213,104,43)" fg:x="118" fg:w="2"/><text x="9.5049%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="9.2549%" y="261" width="0.1569%" height="15" fill="rgb(237,84,9)" fg:x="118" fg:w="2"/><text x="9.5049%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.2549%" y="245" width="0.1569%" height="15" fill="rgb(252,6,33)" fg:x="118" fg:w="2"/><text x="9.5049%" y="255.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.2549%" y="229" width="0.1569%" height="15" fill="rgb(251,172,22)" fg:x="118" fg:w="2"/><text x="9.5049%" y="239.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="9.2549%" y="357" width="0.3137%" height="15" fill="rgb(244,91,53)" fg:x="118" fg:w="4"/><text x="9.5049%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="9.2549%" y="341" width="0.3137%" height="15" fill="rgb(219,29,30)" fg:x="118" fg:w="4"/><text x="9.5049%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="9.4118%" y="325" width="0.1569%" height="15" fill="rgb(213,3,15)" fg:x="120" fg:w="2"/><text x="9.6618%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.4902%" y="309" width="0.0784%" height="15" fill="rgb(208,25,28)" fg:x="121" fg:w="1"/><text x="9.7402%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.4902%" y="293" width="0.0784%" height="15" fill="rgb(252,144,25)" fg:x="121" fg:w="1"/><text x="9.7402%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (11 samples, 0.86%)</title><rect x="9.5686%" y="357" width="0.8627%" height="15" fill="rgb(226,220,25)" fg:x="122" fg:w="11"/><text x="9.8186%" y="367.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.63%)</title><rect x="9.8039%" y="341" width="0.6275%" height="15" fill="rgb(212,131,28)" fg:x="125" fg:w="8"/><text x="10.0539%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.47%)</title><rect x="9.9608%" y="325" width="0.4706%" height="15" fill="rgb(219,143,52)" fg:x="127" fg:w="6"/><text x="10.2108%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.39%)</title><rect x="10.0392%" y="309" width="0.3922%" height="15" fill="rgb(215,56,7)" fg:x="128" fg:w="5"/><text x="10.2892%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="10.1961%" y="293" width="0.2353%" height="15" fill="rgb(239,59,51)" fg:x="130" fg:w="3"/><text x="10.4461%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="10.1961%" y="277" width="0.2353%" height="15" fill="rgb(209,215,4)" fg:x="130" fg:w="3"/><text x="10.4461%" y="287.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="10.1961%" y="261" width="0.2353%" height="15" fill="rgb(221,118,39)" fg:x="130" fg:w="3"/><text x="10.4461%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.5098%" y="341" width="0.1569%" height="15" fill="rgb(236,6,44)" fg:x="134" fg:w="2"/><text x="10.7598%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="10.7451%" y="325" width="0.3137%" height="15" fill="rgb(216,122,9)" fg:x="137" fg:w="4"/><text x="10.9951%" y="335.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.8235%" y="309" width="0.2353%" height="15" fill="rgb(244,134,42)" fg:x="138" fg:w="3"/><text x="11.0735%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="10.8235%" y="293" width="0.2353%" height="15" fill="rgb(209,189,35)" fg:x="138" fg:w="3"/><text x="11.0735%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="10.8235%" y="277" width="0.2353%" height="15" fill="rgb(250,47,36)" fg:x="138" fg:w="3"/><text x="11.0735%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="11.0588%" y="309" width="0.0784%" height="15" fill="rgb(252,112,4)" fg:x="141" fg:w="1"/><text x="11.3088%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="11.0588%" y="325" width="0.1569%" height="15" fill="rgb(221,79,51)" fg:x="141" fg:w="2"/><text x="11.3088%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.1373%" y="309" width="0.0784%" height="15" fill="rgb(232,65,53)" fg:x="142" fg:w="1"/><text x="11.3873%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="10.6667%" y="341" width="0.6275%" height="15" fill="rgb(211,37,7)" fg:x="136" fg:w="8"/><text x="10.9167%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.2157%" y="325" width="0.0784%" height="15" fill="rgb(234,221,18)" fg:x="143" fg:w="1"/><text x="11.4657%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="10.4314%" y="357" width="0.9412%" height="15" fill="rgb(220,158,26)" fg:x="133" fg:w="12"/><text x="10.6814%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.2941%" y="341" width="0.0784%" height="15" fill="rgb(220,70,6)" fg:x="144" fg:w="1"/><text x="11.5441%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.2941%" y="325" width="0.0784%" height="15" fill="rgb(250,39,48)" fg:x="144" fg:w="1"/><text x="11.5441%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.2941%" y="309" width="0.0784%" height="15" fill="rgb(206,40,27)" fg:x="144" fg:w="1"/><text x="11.5441%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.35%)</title><rect x="9.1765%" y="373" width="2.3529%" height="15" fill="rgb(247,80,36)" fg:x="117" fg:w="30"/><text x="9.4265%" y="383.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.3725%" y="357" width="0.1569%" height="15" fill="rgb(222,9,20)" fg:x="145" fg:w="2"/><text x="11.6225%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.3725%" y="341" width="0.1569%" height="15" fill="rgb(217,26,45)" fg:x="145" fg:w="2"/><text x="11.6225%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 3.53%)</title><rect x="8.4706%" y="389" width="3.5294%" height="15" fill="rgb(221,67,14)" fg:x="108" fg:w="45"/><text x="8.7206%" y="399.50">ser..</text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="11.5294%" y="373" width="0.4706%" height="15" fill="rgb(248,100,24)" fg:x="147" fg:w="6"/><text x="11.7794%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.47%)</title><rect x="11.5294%" y="357" width="0.4706%" height="15" fill="rgb(230,187,16)" fg:x="147" fg:w="6"/><text x="11.7794%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="11.7647%" y="341" width="0.2353%" height="15" fill="rgb(205,108,13)" fg:x="150" fg:w="3"/><text x="12.0147%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.9216%" y="325" width="0.0784%" height="15" fill="rgb(235,71,51)" fg:x="152" fg:w="1"/><text x="12.1716%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.9216%" y="309" width="0.0784%" height="15" fill="rgb(251,172,48)" fg:x="152" fg:w="1"/><text x="12.1716%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.9216%" y="293" width="0.0784%" height="15" fill="rgb(240,96,49)" fg:x="152" fg:w="1"/><text x="12.1716%" y="303.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (55 samples, 4.31%)</title><rect x="7.7647%" y="405" width="4.3137%" height="15" fill="rgb(235,46,36)" fg:x="99" fg:w="55"/><text x="8.0147%" y="415.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.0000%" y="389" width="0.0784%" height="15" fill="rgb(244,3,49)" fg:x="153" fg:w="1"/><text x="12.2500%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.0000%" y="373" width="0.0784%" height="15" fill="rgb(206,78,54)" fg:x="153" fg:w="1"/><text x="12.2500%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.0000%" y="357" width="0.0784%" height="15" fill="rgb(208,85,42)" fg:x="153" fg:w="1"/><text x="12.2500%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="12.0784%" y="373" width="0.1569%" height="15" fill="rgb(219,196,21)" fg:x="154" fg:w="2"/><text x="12.3284%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.2353%" y="373" width="0.0784%" height="15" fill="rgb(238,19,9)" fg:x="156" fg:w="1"/><text x="12.4853%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3137%" y="357" width="0.0784%" height="15" fill="rgb(206,86,13)" fg:x="157" fg:w="1"/><text x="12.5637%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.3922%" y="357" width="0.0784%" height="15" fill="rgb(214,123,40)" fg:x="158" fg:w="1"/><text x="12.6422%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5490%" y="325" width="0.0784%" height="15" fill="rgb(243,53,5)" fg:x="160" fg:w="1"/><text x="12.7990%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.6275%" y="309" width="0.0784%" height="15" fill="rgb(254,186,31)" fg:x="161" fg:w="1"/><text x="12.8775%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="12.0784%" y="405" width="0.8627%" height="15" fill="rgb(221,216,25)" fg:x="154" fg:w="11"/><text x="12.3284%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.86%)</title><rect x="12.0784%" y="389" width="0.8627%" height="15" fill="rgb(248,107,42)" fg:x="154" fg:w="11"/><text x="12.3284%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="12.3137%" y="373" width="0.6275%" height="15" fill="rgb(221,85,43)" fg:x="157" fg:w="8"/><text x="12.5637%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="12.4706%" y="357" width="0.4706%" height="15" fill="rgb(225,34,24)" fg:x="159" fg:w="6"/><text x="12.7206%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="12.4706%" y="341" width="0.4706%" height="15" fill="rgb(211,119,1)" fg:x="159" fg:w="6"/><text x="12.7206%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="12.6275%" y="325" width="0.3137%" height="15" fill="rgb(254,216,46)" fg:x="161" fg:w="4"/><text x="12.8775%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="12.7059%" y="309" width="0.2353%" height="15" fill="rgb(238,11,38)" fg:x="162" fg:w="3"/><text x="12.9559%" y="319.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="13.0196%" y="389" width="0.0784%" height="15" fill="rgb(233,50,15)" fg:x="166" fg:w="1"/><text x="13.2696%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0196%" y="373" width="0.0784%" height="15" fill="rgb(217,181,29)" fg:x="166" fg:w="1"/><text x="13.2696%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="13.2549%" y="357" width="0.3137%" height="15" fill="rgb(214,56,3)" fg:x="169" fg:w="4"/><text x="13.5049%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="13.3333%" y="341" width="0.2353%" height="15" fill="rgb(230,69,45)" fg:x="170" fg:w="3"/><text x="13.5833%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.4902%" y="325" width="0.0784%" height="15" fill="rgb(224,201,50)" fg:x="172" fg:w="1"/><text x="13.7402%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.5686%" y="357" width="0.0784%" height="15" fill="rgb(217,228,18)" fg:x="173" fg:w="1"/><text x="13.8186%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="13.5686%" y="341" width="0.0784%" height="15" fill="rgb(239,33,44)" fg:x="173" fg:w="1"/><text x="13.8186%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="13.6471%" y="357" width="0.1569%" height="15" fill="rgb(248,210,23)" fg:x="174" fg:w="2"/><text x="13.8971%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.7255%" y="341" width="0.0784%" height="15" fill="rgb(253,135,8)" fg:x="175" fg:w="1"/><text x="13.9755%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.7255%" y="325" width="0.0784%" height="15" fill="rgb(217,98,21)" fg:x="175" fg:w="1"/><text x="13.9755%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="13.8039%" y="341" width="0.2353%" height="15" fill="rgb(253,130,21)" fg:x="176" fg:w="3"/><text x="14.0539%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9608%" y="325" width="0.0784%" height="15" fill="rgb(207,81,54)" fg:x="178" fg:w="1"/><text x="14.2108%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.31%)</title><rect x="13.8039%" y="357" width="0.3137%" height="15" fill="rgb(232,48,33)" fg:x="176" fg:w="4"/><text x="14.0539%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="14.0392%" y="341" width="0.0784%" height="15" fill="rgb(211,9,35)" fg:x="179" fg:w="1"/><text x="14.2892%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="14.1176%" y="341" width="0.0784%" height="15" fill="rgb(205,152,21)" fg:x="180" fg:w="1"/><text x="14.3676%" y="351.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="14.4314%" y="293" width="0.0784%" height="15" fill="rgb(249,21,27)" fg:x="184" fg:w="1"/><text x="14.6814%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="14.3529%" y="309" width="0.2353%" height="15" fill="rgb(252,29,24)" fg:x="183" fg:w="3"/><text x="14.6029%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="14.5098%" y="293" width="0.0784%" height="15" fill="rgb(230,130,50)" fg:x="185" fg:w="1"/><text x="14.7598%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5098%" y="277" width="0.0784%" height="15" fill="rgb(239,144,14)" fg:x="185" fg:w="1"/><text x="14.7598%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.8235%" y="277" width="0.1569%" height="15" fill="rgb(227,111,50)" fg:x="189" fg:w="2"/><text x="15.0735%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.8235%" y="261" width="0.1569%" height="15" fill="rgb(254,84,20)" fg:x="189" fg:w="2"/><text x="15.0735%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9020%" y="245" width="0.0784%" height="15" fill="rgb(232,90,48)" fg:x="190" fg:w="1"/><text x="15.1520%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="14.9804%" y="261" width="0.3137%" height="15" fill="rgb(253,63,47)" fg:x="191" fg:w="4"/><text x="15.2304%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="15.0588%" y="245" width="0.2353%" height="15" fill="rgb(251,146,35)" fg:x="192" fg:w="3"/><text x="15.3088%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="15.0588%" y="229" width="0.2353%" height="15" fill="rgb(229,192,35)" fg:x="192" fg:w="3"/><text x="15.3088%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2157%" y="213" width="0.0784%" height="15" fill="rgb(225,68,9)" fg:x="194" fg:w="1"/><text x="15.4657%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.18%)</title><rect x="14.2745%" y="325" width="1.1765%" height="15" fill="rgb(214,97,34)" fg:x="182" fg:w="15"/><text x="14.5245%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.86%)</title><rect x="14.5882%" y="309" width="0.8627%" height="15" fill="rgb(253,31,26)" fg:x="186" fg:w="11"/><text x="14.8382%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.78%)</title><rect x="14.6667%" y="293" width="0.7843%" height="15" fill="rgb(225,151,47)" fg:x="187" fg:w="10"/><text x="14.9167%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="14.9804%" y="277" width="0.4706%" height="15" fill="rgb(206,185,9)" fg:x="191" fg:w="6"/><text x="15.2304%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.2941%" y="261" width="0.1569%" height="15" fill="rgb(249,65,17)" fg:x="195" fg:w="2"/><text x="15.5441%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (18 samples, 1.41%)</title><rect x="14.1961%" y="341" width="1.4118%" height="15" fill="rgb(220,110,10)" fg:x="181" fg:w="18"/><text x="14.4461%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="15.4510%" y="325" width="0.1569%" height="15" fill="rgb(222,198,49)" fg:x="197" fg:w="2"/><text x="15.7010%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6078%" y="341" width="0.0784%" height="15" fill="rgb(239,81,13)" fg:x="199" fg:w="1"/><text x="15.8578%" y="351.50"></text></g><g><title>engine::session::Session::flush (113 samples, 8.86%)</title><rect x="6.9804%" y="485" width="8.8627%" height="15" fill="rgb(216,128,11)" fg:x="89" fg:w="113"/><text x="7.2304%" y="495.50">engine::sessi..</text></g><g><title>engine::session::state::State::close (108 samples, 8.47%)</title><rect x="7.3725%" y="469" width="8.4706%" height="15" fill="rgb(247,156,8)" fg:x="94" fg:w="108"/><text x="7.6225%" y="479.50">engine::sess..</text></g><g><title>engine::session::state::State::flush_entities (108 samples, 8.47%)</title><rect x="7.3725%" y="453" width="8.4706%" height="15" fill="rgb(219,173,1)" fg:x="94" fg:w="108"/><text x="7.6225%" y="463.50">engine::sess..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (103 samples, 8.08%)</title><rect x="7.7647%" y="437" width="8.0784%" height="15" fill="rgb(227,42,24)" fg:x="99" fg:w="103"/><text x="8.0147%" y="447.50">engine::ses..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (103 samples, 8.08%)</title><rect x="7.7647%" y="421" width="8.0784%" height="15" fill="rgb(253,219,50)" fg:x="99" fg:w="103"/><text x="8.0147%" y="431.50">engine::ses..</text></g><g><title>kernel::model::any_entity_changes (37 samples, 2.90%)</title><rect x="12.9412%" y="405" width="2.9020%" height="15" fill="rgb(215,191,54)" fg:x="165" fg:w="37"/><text x="13.1912%" y="415.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (35 samples, 2.75%)</title><rect x="13.0980%" y="389" width="2.7451%" height="15" fill="rgb(238,83,12)" fg:x="167" fg:w="35"/><text x="13.3480%" y="399.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.59%)</title><rect x="13.2549%" y="373" width="2.5882%" height="15" fill="rgb(205,124,9)" fg:x="169" fg:w="33"/><text x="13.5049%" y="383.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.73%)</title><rect x="14.1176%" y="357" width="1.7255%" height="15" fill="rgb(253,174,7)" fg:x="180" fg:w="22"/><text x="14.3676%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.6863%" y="341" width="0.1569%" height="15" fill="rgb(206,134,49)" fg:x="200" fg:w="2"/><text x="15.9363%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.7647%" y="325" width="0.0784%" height="15" fill="rgb(221,89,20)" fg:x="201" fg:w="1"/><text x="16.0147%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="15.7647%" y="309" width="0.0784%" height="15" fill="rgb(240,205,13)" fg:x="201" fg:w="1"/><text x="16.0147%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8431%" y="453" width="0.0784%" height="15" fill="rgb(237,174,32)" fg:x="202" fg:w="1"/><text x="16.0931%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8431%" y="437" width="0.0784%" height="15" fill="rgb(226,12,15)" fg:x="202" fg:w="1"/><text x="16.0931%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.8431%" y="421" width="0.0784%" height="15" fill="rgb(245,160,52)" fg:x="202" fg:w="1"/><text x="16.0931%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.8431%" y="405" width="0.0784%" height="15" fill="rgb(253,80,21)" fg:x="202" fg:w="1"/><text x="16.0931%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.8431%" y="389" width="0.0784%" height="15" fill="rgb(231,225,22)" fg:x="202" fg:w="1"/><text x="16.0931%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8431%" y="373" width="0.0784%" height="15" fill="rgb(253,185,12)" fg:x="202" fg:w="1"/><text x="16.0931%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8431%" y="357" width="0.0784%" height="15" fill="rgb(234,197,21)" fg:x="202" fg:w="1"/><text x="16.0931%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.8431%" y="341" width="0.0784%" height="15" fill="rgb(210,47,30)" fg:x="202" fg:w="1"/><text x="16.0931%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.8431%" y="325" width="0.0784%" height="15" fill="rgb(246,139,27)" fg:x="202" fg:w="1"/><text x="16.0931%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.8431%" y="309" width="0.0784%" height="15" fill="rgb(226,130,16)" fg:x="202" fg:w="1"/><text x="16.0931%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.8431%" y="293" width="0.0784%" height="15" fill="rgb(237,208,20)" fg:x="202" fg:w="1"/><text x="16.0931%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8431%" y="277" width="0.0784%" height="15" fill="rgb(245,186,28)" fg:x="202" fg:w="1"/><text x="16.0931%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9216%" y="405" width="0.0784%" height="15" fill="rgb(238,105,39)" fg:x="203" fg:w="1"/><text x="16.1716%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="16.0000%" y="341" width="0.0784%" height="15" fill="rgb(253,228,11)" fg:x="204" fg:w="1"/><text x="16.2500%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.0000%" y="325" width="0.0784%" height="15" fill="rgb(224,136,38)" fg:x="204" fg:w="1"/><text x="16.2500%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.9216%" y="437" width="0.2353%" height="15" fill="rgb(211,3,25)" fg:x="203" fg:w="3"/><text x="16.1716%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.9216%" y="421" width="0.2353%" height="15" fill="rgb(238,66,34)" fg:x="203" fg:w="3"/><text x="16.1716%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="16.0000%" y="405" width="0.1569%" height="15" fill="rgb(223,188,11)" fg:x="204" fg:w="2"/><text x="16.2500%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.0000%" y="389" width="0.1569%" height="15" fill="rgb(221,10,35)" fg:x="204" fg:w="2"/><text x="16.2500%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="16.0000%" y="373" width="0.1569%" height="15" fill="rgb(223,18,44)" fg:x="204" fg:w="2"/><text x="16.2500%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.0000%" y="357" width="0.1569%" height="15" fill="rgb(220,97,41)" fg:x="204" fg:w="2"/><text x="16.2500%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.0784%" y="341" width="0.0784%" height="15" fill="rgb(206,95,45)" fg:x="205" fg:w="1"/><text x="16.3284%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0784%" y="325" width="0.0784%" height="15" fill="rgb(209,96,13)" fg:x="205" fg:w="1"/><text x="16.3284%" y="335.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="16.0784%" y="309" width="0.0784%" height="15" fill="rgb(237,39,34)" fg:x="205" fg:w="1"/><text x="16.3284%" y="319.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="16.1569%" y="437" width="0.0784%" height="15" fill="rgb(213,49,47)" fg:x="206" fg:w="1"/><text x="16.4069%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.1569%" y="421" width="0.0784%" height="15" fill="rgb(205,107,27)" fg:x="206" fg:w="1"/><text x="16.4069%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="16.1569%" y="405" width="0.0784%" height="15" fill="rgb(212,142,9)" fg:x="206" fg:w="1"/><text x="16.4069%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.1569%" y="389" width="0.0784%" height="15" fill="rgb(226,182,0)" fg:x="206" fg:w="1"/><text x="16.4069%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1569%" y="373" width="0.0784%" height="15" fill="rgb(231,3,53)" fg:x="206" fg:w="1"/><text x="16.4069%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1569%" y="357" width="0.0784%" height="15" fill="rgb(246,111,28)" fg:x="206" fg:w="1"/><text x="16.4069%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="16.4706%" y="293" width="0.0784%" height="15" fill="rgb(254,183,7)" fg:x="210" fg:w="1"/><text x="16.7206%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="16.4706%" y="277" width="0.0784%" height="15" fill="rgb(247,177,28)" fg:x="210" fg:w="1"/><text x="16.7206%" y="287.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.39%)</title><rect x="16.2353%" y="389" width="0.3922%" height="15" fill="rgb(244,43,1)" fg:x="207" fg:w="5"/><text x="16.4853%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.39%)</title><rect x="16.2353%" y="373" width="0.3922%" height="15" fill="rgb(207,2,35)" fg:x="207" fg:w="5"/><text x="16.4853%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="16.3922%" y="357" width="0.2353%" height="15" fill="rgb(213,83,22)" fg:x="209" fg:w="3"/><text x="16.6422%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="16.3922%" y="341" width="0.2353%" height="15" fill="rgb(246,212,13)" fg:x="209" fg:w="3"/><text x="16.6422%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="16.3922%" y="325" width="0.2353%" height="15" fill="rgb(213,127,46)" fg:x="209" fg:w="3"/><text x="16.6422%" y="335.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="16.3922%" y="309" width="0.2353%" height="15" fill="rgb(219,215,39)" fg:x="209" fg:w="3"/><text x="16.6422%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.5490%" y="293" width="0.0784%" height="15" fill="rgb(227,99,17)" fg:x="211" fg:w="1"/><text x="16.7990%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.6275%" y="373" width="0.0784%" height="15" fill="rgb(208,155,18)" fg:x="212" fg:w="1"/><text x="16.8775%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.6275%" y="357" width="0.0784%" height="15" fill="rgb(223,204,38)" fg:x="212" fg:w="1"/><text x="16.8775%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="16.7059%" y="373" width="0.0784%" height="15" fill="rgb(212,114,21)" fg:x="213" fg:w="1"/><text x="16.9559%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.7059%" y="357" width="0.0784%" height="15" fill="rgb(250,74,13)" fg:x="213" fg:w="1"/><text x="16.9559%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.7059%" y="341" width="0.0784%" height="15" fill="rgb(234,7,1)" fg:x="213" fg:w="1"/><text x="16.9559%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.71%)</title><rect x="16.2353%" y="421" width="0.7059%" height="15" fill="rgb(207,138,31)" fg:x="207" fg:w="9"/><text x="16.4853%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.71%)</title><rect x="16.2353%" y="405" width="0.7059%" height="15" fill="rgb(215,186,42)" fg:x="207" fg:w="9"/><text x="16.4853%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="16.6275%" y="389" width="0.3137%" height="15" fill="rgb(229,205,49)" fg:x="212" fg:w="4"/><text x="16.8775%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="16.7843%" y="373" width="0.1569%" height="15" fill="rgb(216,156,32)" fg:x="214" fg:w="2"/><text x="17.0343%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.7843%" y="357" width="0.1569%" height="15" fill="rgb(238,7,21)" fg:x="214" fg:w="2"/><text x="17.0343%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="16.7843%" y="341" width="0.1569%" height="15" fill="rgb(249,190,22)" fg:x="214" fg:w="2"/><text x="17.0343%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.7843%" y="325" width="0.1569%" height="15" fill="rgb(253,51,31)" fg:x="214" fg:w="2"/><text x="17.0343%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="16.7843%" y="309" width="0.1569%" height="15" fill="rgb(237,90,54)" fg:x="214" fg:w="2"/><text x="17.0343%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.7843%" y="293" width="0.1569%" height="15" fill="rgb(250,214,33)" fg:x="214" fg:w="2"/><text x="17.0343%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8627%" y="277" width="0.0784%" height="15" fill="rgb(237,10,49)" fg:x="215" fg:w="1"/><text x="17.1127%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.78%)</title><rect x="16.2353%" y="437" width="0.7843%" height="15" fill="rgb(241,56,36)" fg:x="207" fg:w="10"/><text x="16.4853%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="16.9412%" y="421" width="0.0784%" height="15" fill="rgb(227,164,12)" fg:x="216" fg:w="1"/><text x="17.1912%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9412%" y="405" width="0.0784%" height="15" fill="rgb(249,149,35)" fg:x="216" fg:w="1"/><text x="17.1912%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9412%" y="389" width="0.0784%" height="15" fill="rgb(238,227,50)" fg:x="216" fg:w="1"/><text x="17.1912%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="16.9412%" y="373" width="0.0784%" height="15" fill="rgb(235,102,45)" fg:x="216" fg:w="1"/><text x="17.1912%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9412%" y="357" width="0.0784%" height="15" fill="rgb(211,10,38)" fg:x="216" fg:w="1"/><text x="17.1912%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.0196%" y="405" width="0.0784%" height="15" fill="rgb(219,77,48)" fg:x="217" fg:w="1"/><text x="17.2696%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0980%" y="389" width="0.0784%" height="15" fill="rgb(246,6,15)" fg:x="218" fg:w="1"/><text x="17.3480%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0980%" y="373" width="0.0784%" height="15" fill="rgb(207,220,2)" fg:x="218" fg:w="1"/><text x="17.3480%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0980%" y="357" width="0.0784%" height="15" fill="rgb(242,48,14)" fg:x="218" fg:w="1"/><text x="17.3480%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="17.0196%" y="421" width="0.3137%" height="15" fill="rgb(218,19,27)" fg:x="217" fg:w="4"/><text x="17.2696%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.0980%" y="405" width="0.2353%" height="15" fill="rgb(228,0,35)" fg:x="218" fg:w="3"/><text x="17.3480%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.1765%" y="389" width="0.1569%" height="15" fill="rgb(244,142,54)" fg:x="219" fg:w="2"/><text x="17.4265%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.1765%" y="373" width="0.1569%" height="15" fill="rgb(243,217,40)" fg:x="219" fg:w="2"/><text x="17.4265%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.1765%" y="357" width="0.1569%" height="15" fill="rgb(207,114,16)" fg:x="219" fg:w="2"/><text x="17.4265%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.1765%" y="341" width="0.1569%" height="15" fill="rgb(224,33,25)" fg:x="219" fg:w="2"/><text x="17.4265%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.1765%" y="325" width="0.1569%" height="15" fill="rgb(230,93,54)" fg:x="219" fg:w="2"/><text x="17.4265%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.1765%" y="309" width="0.1569%" height="15" fill="rgb(224,56,24)" fg:x="219" fg:w="2"/><text x="17.4265%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.2549%" y="293" width="0.0784%" height="15" fill="rgb(235,189,50)" fg:x="220" fg:w="1"/><text x="17.5049%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.2549%" y="277" width="0.0784%" height="15" fill="rgb(242,173,8)" fg:x="220" fg:w="1"/><text x="17.5049%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3333%" y="389" width="0.0784%" height="15" fill="rgb(209,206,10)" fg:x="221" fg:w="1"/><text x="17.5833%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3333%" y="373" width="0.0784%" height="15" fill="rgb(213,182,44)" fg:x="221" fg:w="1"/><text x="17.5833%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3333%" y="357" width="0.0784%" height="15" fill="rgb(243,51,15)" fg:x="221" fg:w="1"/><text x="17.5833%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.47%)</title><rect x="17.0196%" y="437" width="0.4706%" height="15" fill="rgb(241,13,14)" fg:x="217" fg:w="6"/><text x="17.2696%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="17.3333%" y="421" width="0.1569%" height="15" fill="rgb(239,147,24)" fg:x="221" fg:w="2"/><text x="17.5833%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.3333%" y="405" width="0.1569%" height="15" fill="rgb(223,129,16)" fg:x="221" fg:w="2"/><text x="17.5833%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="17.4118%" y="389" width="0.0784%" height="15" fill="rgb(209,169,13)" fg:x="222" fg:w="1"/><text x="17.6618%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.4118%" y="373" width="0.0784%" height="15" fill="rgb(235,159,41)" fg:x="222" fg:w="1"/><text x="17.6618%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.4118%" y="357" width="0.0784%" height="15" fill="rgb(223,219,48)" fg:x="222" fg:w="1"/><text x="17.6618%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4902%" y="373" width="0.0784%" height="15" fill="rgb(236,80,13)" fg:x="223" fg:w="1"/><text x="17.7402%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4902%" y="357" width="0.0784%" height="15" fill="rgb(213,5,6)" fg:x="223" fg:w="1"/><text x="17.7402%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4902%" y="341" width="0.0784%" height="15" fill="rgb(205,59,21)" fg:x="223" fg:w="1"/><text x="17.7402%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.4902%" y="325" width="0.0784%" height="15" fill="rgb(247,137,35)" fg:x="223" fg:w="1"/><text x="17.7402%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.4902%" y="309" width="0.0784%" height="15" fill="rgb(242,208,28)" fg:x="223" fg:w="1"/><text x="17.7402%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.4902%" y="293" width="0.0784%" height="15" fill="rgb(245,62,25)" fg:x="223" fg:w="1"/><text x="17.7402%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.4902%" y="277" width="0.0784%" height="15" fill="rgb(233,99,54)" fg:x="223" fg:w="1"/><text x="17.7402%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.4902%" y="261" width="0.0784%" height="15" fill="rgb(213,10,37)" fg:x="223" fg:w="1"/><text x="17.7402%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.4902%" y="245" width="0.0784%" height="15" fill="rgb(235,143,30)" fg:x="223" fg:w="1"/><text x="17.7402%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.4902%" y="229" width="0.0784%" height="15" fill="rgb(250,146,33)" fg:x="223" fg:w="1"/><text x="17.7402%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.4902%" y="213" width="0.0784%" height="15" fill="rgb(226,198,42)" fg:x="223" fg:w="1"/><text x="17.7402%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.4902%" y="197" width="0.0784%" height="15" fill="rgb(222,55,6)" fg:x="223" fg:w="1"/><text x="17.7402%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.4902%" y="181" width="0.0784%" height="15" fill="rgb(213,224,31)" fg:x="223" fg:w="1"/><text x="17.7402%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.4902%" y="165" width="0.0784%" height="15" fill="rgb(226,103,35)" fg:x="223" fg:w="1"/><text x="17.7402%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4902%" y="149" width="0.0784%" height="15" fill="rgb(205,66,45)" fg:x="223" fg:w="1"/><text x="17.7402%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="17.5686%" y="373" width="0.0784%" height="15" fill="rgb(226,51,42)" fg:x="224" fg:w="1"/><text x="17.8186%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.5686%" y="357" width="0.0784%" height="15" fill="rgb(206,69,1)" fg:x="224" fg:w="1"/><text x="17.8186%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.5686%" y="341" width="0.0784%" height="15" fill="rgb(213,228,47)" fg:x="224" fg:w="1"/><text x="17.8186%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.5686%" y="325" width="0.0784%" height="15" fill="rgb(224,204,18)" fg:x="224" fg:w="1"/><text x="17.8186%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5686%" y="309" width="0.0784%" height="15" fill="rgb(253,187,47)" fg:x="224" fg:w="1"/><text x="17.8186%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="17.6471%" y="309" width="0.0784%" height="15" fill="rgb(232,61,2)" fg:x="225" fg:w="1"/><text x="17.8971%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="17.4902%" y="405" width="0.3137%" height="15" fill="rgb(213,132,35)" fg:x="223" fg:w="4"/><text x="17.7402%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="17.4902%" y="389" width="0.3137%" height="15" fill="rgb(247,33,21)" fg:x="223" fg:w="4"/><text x="17.7402%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.6471%" y="373" width="0.1569%" height="15" fill="rgb(233,71,46)" fg:x="225" fg:w="2"/><text x="17.8971%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.6471%" y="357" width="0.1569%" height="15" fill="rgb(222,173,43)" fg:x="225" fg:w="2"/><text x="17.8971%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.6471%" y="341" width="0.1569%" height="15" fill="rgb(249,218,47)" fg:x="225" fg:w="2"/><text x="17.8971%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.6471%" y="325" width="0.1569%" height="15" fill="rgb(254,185,48)" fg:x="225" fg:w="2"/><text x="17.8971%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.7255%" y="309" width="0.0784%" height="15" fill="rgb(252,165,50)" fg:x="226" fg:w="1"/><text x="17.9755%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7255%" y="293" width="0.0784%" height="15" fill="rgb(206,219,6)" fg:x="226" fg:w="1"/><text x="17.9755%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8039%" y="389" width="0.0784%" height="15" fill="rgb(212,212,45)" fg:x="227" fg:w="1"/><text x="18.0539%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8039%" y="373" width="0.0784%" height="15" fill="rgb(221,31,9)" fg:x="227" fg:w="1"/><text x="18.0539%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8039%" y="357" width="0.0784%" height="15" fill="rgb(234,198,39)" fg:x="227" fg:w="1"/><text x="18.0539%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8039%" y="341" width="0.0784%" height="15" fill="rgb(252,145,46)" fg:x="227" fg:w="1"/><text x="18.0539%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8039%" y="325" width="0.0784%" height="15" fill="rgb(237,149,0)" fg:x="227" fg:w="1"/><text x="18.0539%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.8039%" y="309" width="0.0784%" height="15" fill="rgb(229,65,5)" fg:x="227" fg:w="1"/><text x="18.0539%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.8039%" y="293" width="0.0784%" height="15" fill="rgb(235,60,36)" fg:x="227" fg:w="1"/><text x="18.0539%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (26 samples, 2.04%)</title><rect x="15.9216%" y="453" width="2.0392%" height="15" fill="rgb(222,47,18)" fg:x="203" fg:w="26"/><text x="16.1716%" y="463.50">&lt;..</text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.47%)</title><rect x="17.4902%" y="437" width="0.4706%" height="15" fill="rgb(235,114,22)" fg:x="223" fg:w="6"/><text x="17.7402%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.47%)</title><rect x="17.4902%" y="421" width="0.4706%" height="15" fill="rgb(209,167,11)" fg:x="223" fg:w="6"/><text x="17.7402%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="17.8039%" y="405" width="0.1569%" height="15" fill="rgb(251,73,18)" fg:x="227" fg:w="2"/><text x="18.0539%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.8824%" y="389" width="0.0784%" height="15" fill="rgb(217,60,17)" fg:x="228" fg:w="1"/><text x="18.1324%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.8824%" y="373" width="0.0784%" height="15" fill="rgb(224,36,37)" fg:x="228" fg:w="1"/><text x="18.1324%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.8824%" y="357" width="0.0784%" height="15" fill="rgb(211,21,32)" fg:x="228" fg:w="1"/><text x="18.1324%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.8824%" y="341" width="0.0784%" height="15" fill="rgb(231,55,48)" fg:x="228" fg:w="1"/><text x="18.1324%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.8824%" y="325" width="0.0784%" height="15" fill="rgb(227,42,18)" fg:x="228" fg:w="1"/><text x="18.1324%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="17.8824%" y="309" width="0.0784%" height="15" fill="rgb(217,2,27)" fg:x="228" fg:w="1"/><text x="18.1324%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="18.0392%" y="421" width="0.0784%" height="15" fill="rgb(251,138,23)" fg:x="230" fg:w="1"/><text x="18.2892%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.0392%" y="405" width="0.0784%" height="15" fill="rgb(226,184,11)" fg:x="230" fg:w="1"/><text x="18.2892%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.0392%" y="389" width="0.0784%" height="15" fill="rgb(242,142,12)" fg:x="230" fg:w="1"/><text x="18.2892%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.0392%" y="373" width="0.0784%" height="15" fill="rgb(234,187,18)" fg:x="230" fg:w="1"/><text x="18.2892%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.0392%" y="357" width="0.0784%" height="15" fill="rgb(237,44,42)" fg:x="230" fg:w="1"/><text x="18.2892%" y="367.50"></text></g><g><title>plugins_core::build::Build::into_entry (30 samples, 2.35%)</title><rect x="15.8431%" y="469" width="2.3529%" height="15" fill="rgb(211,90,23)" fg:x="202" fg:w="30"/><text x="16.0931%" y="479.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="17.9608%" y="453" width="0.2353%" height="15" fill="rgb(207,81,18)" fg:x="229" fg:w="3"/><text x="18.2108%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.9608%" y="437" width="0.2353%" height="15" fill="rgb(222,107,28)" fg:x="229" fg:w="3"/><text x="18.2108%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.1176%" y="421" width="0.0784%" height="15" fill="rgb(237,83,52)" fg:x="231" fg:w="1"/><text x="18.3676%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1176%" y="405" width="0.0784%" height="15" fill="rgb(208,67,11)" fg:x="231" fg:w="1"/><text x="18.3676%" y="415.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="18.1176%" y="389" width="0.0784%" height="15" fill="rgb(249,157,49)" fg:x="231" fg:w="1"/><text x="18.3676%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="18.1961%" y="453" width="0.0784%" height="15" fill="rgb(243,200,1)" fg:x="232" fg:w="1"/><text x="18.4461%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2745%" y="453" width="0.0784%" height="15" fill="rgb(225,162,37)" fg:x="233" fg:w="1"/><text x="18.5245%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="18.3529%" y="453" width="0.0784%" height="15" fill="rgb(242,92,13)" fg:x="234" fg:w="1"/><text x="18.6029%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.3529%" y="437" width="0.0784%" height="15" fill="rgb(220,43,36)" fg:x="234" fg:w="1"/><text x="18.6029%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="18.4314%" y="325" width="0.0784%" height="15" fill="rgb(213,165,48)" fg:x="235" fg:w="1"/><text x="18.6814%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.4314%" y="309" width="0.0784%" height="15" fill="rgb(227,200,9)" fg:x="235" fg:w="1"/><text x="18.6814%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="18.4314%" y="421" width="0.2353%" height="15" fill="rgb(221,222,28)" fg:x="235" fg:w="3"/><text x="18.6814%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.4314%" y="405" width="0.2353%" height="15" fill="rgb(223,142,26)" fg:x="235" fg:w="3"/><text x="18.6814%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="18.4314%" y="389" width="0.2353%" height="15" fill="rgb(243,46,9)" fg:x="235" fg:w="3"/><text x="18.6814%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.4314%" y="373" width="0.2353%" height="15" fill="rgb(250,56,11)" fg:x="235" fg:w="3"/><text x="18.6814%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="18.4314%" y="357" width="0.2353%" height="15" fill="rgb(229,113,5)" fg:x="235" fg:w="3"/><text x="18.6814%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.4314%" y="341" width="0.2353%" height="15" fill="rgb(244,108,28)" fg:x="235" fg:w="3"/><text x="18.6814%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="18.5098%" y="325" width="0.1569%" height="15" fill="rgb(242,119,50)" fg:x="236" fg:w="2"/><text x="18.7598%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.5882%" y="309" width="0.0784%" height="15" fill="rgb(224,164,23)" fg:x="237" fg:w="1"/><text x="18.8382%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="18.4314%" y="453" width="0.3137%" height="15" fill="rgb(214,227,44)" fg:x="235" fg:w="4"/><text x="18.6814%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="18.4314%" y="437" width="0.3137%" height="15" fill="rgb(238,202,4)" fg:x="235" fg:w="4"/><text x="18.6814%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="18.6667%" y="421" width="0.0784%" height="15" fill="rgb(213,190,30)" fg:x="238" fg:w="1"/><text x="18.9167%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.6667%" y="405" width="0.0784%" height="15" fill="rgb(239,15,2)" fg:x="238" fg:w="1"/><text x="18.9167%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.6667%" y="389" width="0.0784%" height="15" fill="rgb(249,229,4)" fg:x="238" fg:w="1"/><text x="18.9167%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6667%" y="373" width="0.0784%" height="15" fill="rgb(239,75,44)" fg:x="238" fg:w="1"/><text x="18.9167%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.6667%" y="357" width="0.0784%" height="15" fill="rgb(251,206,23)" fg:x="238" fg:w="1"/><text x="18.9167%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6667%" y="341" width="0.0784%" height="15" fill="rgb(215,208,0)" fg:x="238" fg:w="1"/><text x="18.9167%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.6667%" y="325" width="0.0784%" height="15" fill="rgb(230,75,50)" fg:x="238" fg:w="1"/><text x="18.9167%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6667%" y="309" width="0.0784%" height="15" fill="rgb(246,180,39)" fg:x="238" fg:w="1"/><text x="18.9167%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.7451%" y="405" width="0.0784%" height="15" fill="rgb(249,175,24)" fg:x="239" fg:w="1"/><text x="18.9951%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.7451%" y="389" width="0.0784%" height="15" fill="rgb(247,176,22)" fg:x="239" fg:w="1"/><text x="18.9951%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7451%" y="373" width="0.0784%" height="15" fill="rgb(241,100,24)" fg:x="239" fg:w="1"/><text x="18.9951%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="18.7451%" y="453" width="0.1569%" height="15" fill="rgb(233,4,35)" fg:x="239" fg:w="2"/><text x="18.9951%" y="463.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="18.7451%" y="437" width="0.1569%" height="15" fill="rgb(211,164,46)" fg:x="239" fg:w="2"/><text x="18.9951%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.7451%" y="421" width="0.1569%" height="15" fill="rgb(242,99,53)" fg:x="239" fg:w="2"/><text x="18.9951%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.8235%" y="405" width="0.0784%" height="15" fill="rgb(243,45,33)" fg:x="240" fg:w="1"/><text x="19.0735%" y="415.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8235%" y="389" width="0.0784%" height="15" fill="rgb(217,55,21)" fg:x="240" fg:w="1"/><text x="19.0735%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="18.9804%" y="373" width="0.0784%" height="15" fill="rgb(245,145,46)" fg:x="242" fg:w="1"/><text x="19.2304%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.9804%" y="357" width="0.0784%" height="15" fill="rgb(215,112,45)" fg:x="242" fg:w="1"/><text x="19.2304%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.9804%" y="341" width="0.0784%" height="15" fill="rgb(228,104,16)" fg:x="242" fg:w="1"/><text x="19.2304%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.9804%" y="405" width="0.1569%" height="15" fill="rgb(239,186,38)" fg:x="242" fg:w="2"/><text x="19.2304%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.9804%" y="389" width="0.1569%" height="15" fill="rgb(228,38,35)" fg:x="242" fg:w="2"/><text x="19.2304%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.0588%" y="373" width="0.0784%" height="15" fill="rgb(251,42,40)" fg:x="243" fg:w="1"/><text x="19.3088%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0588%" y="357" width="0.0784%" height="15" fill="rgb(210,51,19)" fg:x="243" fg:w="1"/><text x="19.3088%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.0588%" y="341" width="0.0784%" height="15" fill="rgb(236,94,42)" fg:x="243" fg:w="1"/><text x="19.3088%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0588%" y="325" width="0.0784%" height="15" fill="rgb(239,167,16)" fg:x="243" fg:w="1"/><text x="19.3088%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.0588%" y="309" width="0.0784%" height="15" fill="rgb(252,175,31)" fg:x="243" fg:w="1"/><text x="19.3088%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0588%" y="293" width="0.0784%" height="15" fill="rgb(206,166,30)" fg:x="243" fg:w="1"/><text x="19.3088%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.2157%" y="341" width="0.0784%" height="15" fill="rgb(206,209,37)" fg:x="245" fg:w="1"/><text x="19.4657%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.2157%" y="373" width="0.1569%" height="15" fill="rgb(226,91,4)" fg:x="245" fg:w="2"/><text x="19.4657%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.2157%" y="357" width="0.1569%" height="15" fill="rgb(222,167,0)" fg:x="245" fg:w="2"/><text x="19.4657%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2941%" y="341" width="0.0784%" height="15" fill="rgb(211,70,14)" fg:x="246" fg:w="1"/><text x="19.5441%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2941%" y="325" width="0.0784%" height="15" fill="rgb(214,84,42)" fg:x="246" fg:w="1"/><text x="19.5441%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.2941%" y="309" width="0.0784%" height="15" fill="rgb(235,157,37)" fg:x="246" fg:w="1"/><text x="19.5441%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.2941%" y="293" width="0.0784%" height="15" fill="rgb(225,13,6)" fg:x="246" fg:w="1"/><text x="19.5441%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.2941%" y="277" width="0.0784%" height="15" fill="rgb(205,202,1)" fg:x="246" fg:w="1"/><text x="19.5441%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2941%" y="261" width="0.0784%" height="15" fill="rgb(232,195,26)" fg:x="246" fg:w="1"/><text x="19.5441%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2941%" y="245" width="0.0784%" height="15" fill="rgb(208,102,26)" fg:x="246" fg:w="1"/><text x="19.5441%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.2941%" y="229" width="0.0784%" height="15" fill="rgb(215,41,39)" fg:x="246" fg:w="1"/><text x="19.5441%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.2941%" y="213" width="0.0784%" height="15" fill="rgb(247,139,11)" fg:x="246" fg:w="1"/><text x="19.5441%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.2941%" y="197" width="0.0784%" height="15" fill="rgb(243,99,6)" fg:x="246" fg:w="1"/><text x="19.5441%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.2941%" y="181" width="0.0784%" height="15" fill="rgb(230,168,48)" fg:x="246" fg:w="1"/><text x="19.5441%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2941%" y="165" width="0.0784%" height="15" fill="rgb(238,227,13)" fg:x="246" fg:w="1"/><text x="19.5441%" y="175.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.55%)</title><rect x="18.9020%" y="453" width="0.5490%" height="15" fill="rgb(209,109,13)" fg:x="241" fg:w="7"/><text x="19.1520%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (7 samples, 0.55%)</title><rect x="18.9020%" y="437" width="0.5490%" height="15" fill="rgb(228,195,1)" fg:x="241" fg:w="7"/><text x="19.1520%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.47%)</title><rect x="18.9804%" y="421" width="0.4706%" height="15" fill="rgb(230,218,0)" fg:x="242" fg:w="6"/><text x="19.2304%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="19.1373%" y="405" width="0.3137%" height="15" fill="rgb(206,1,45)" fg:x="244" fg:w="4"/><text x="19.3873%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="19.1373%" y="389" width="0.3137%" height="15" fill="rgb(209,124,26)" fg:x="244" fg:w="4"/><text x="19.3873%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.3725%" y="373" width="0.0784%" height="15" fill="rgb(220,59,8)" fg:x="247" fg:w="1"/><text x="19.6225%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3725%" y="357" width="0.0784%" height="15" fill="rgb(251,41,37)" fg:x="247" fg:w="1"/><text x="19.6225%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (48 samples, 3.76%)</title><rect x="15.8431%" y="485" width="3.7647%" height="15" fill="rgb(239,152,21)" fg:x="202" fg:w="48"/><text x="16.0931%" y="495.50">plug..</text></g><g><title>plugins_core::tools::set_container (18 samples, 1.41%)</title><rect x="18.1961%" y="469" width="1.4118%" height="15" fill="rgb(226,32,1)" fg:x="232" fg:w="18"/><text x="18.4461%" y="479.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="19.4510%" y="453" width="0.1569%" height="15" fill="rgb(230,154,36)" fg:x="248" fg:w="2"/><text x="19.7010%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="19.4510%" y="437" width="0.1569%" height="15" fill="rgb(208,228,43)" fg:x="248" fg:w="2"/><text x="19.7010%" y="447.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="19.4510%" y="421" width="0.1569%" height="15" fill="rgb(214,203,3)" fg:x="248" fg:w="2"/><text x="19.7010%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.4510%" y="405" width="0.1569%" height="15" fill="rgb(207,149,29)" fg:x="248" fg:w="2"/><text x="19.7010%" y="415.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="19.5294%" y="389" width="0.0784%" height="15" fill="rgb(250,105,7)" fg:x="249" fg:w="1"/><text x="19.7794%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.5294%" y="373" width="0.0784%" height="15" fill="rgb(232,222,16)" fg:x="249" fg:w="1"/><text x="19.7794%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5294%" y="357" width="0.0784%" height="15" fill="rgb(209,32,24)" fg:x="249" fg:w="1"/><text x="19.7794%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5294%" y="341" width="0.0784%" height="15" fill="rgb(225,13,6)" fg:x="249" fg:w="1"/><text x="19.7794%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.5294%" y="325" width="0.0784%" height="15" fill="rgb(245,226,26)" fg:x="249" fg:w="1"/><text x="19.7794%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.6863%" y="421" width="0.1569%" height="15" fill="rgb(229,178,27)" fg:x="251" fg:w="2"/><text x="19.9363%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.6863%" y="405" width="0.1569%" height="15" fill="rgb(205,227,28)" fg:x="251" fg:w="2"/><text x="19.9363%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7647%" y="389" width="0.0784%" height="15" fill="rgb(210,191,45)" fg:x="252" fg:w="1"/><text x="20.0147%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.7647%" y="373" width="0.0784%" height="15" fill="rgb(206,124,16)" fg:x="252" fg:w="1"/><text x="20.0147%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.7647%" y="357" width="0.0784%" height="15" fill="rgb(210,162,0)" fg:x="252" fg:w="1"/><text x="20.0147%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.7647%" y="341" width="0.0784%" height="15" fill="rgb(211,54,38)" fg:x="252" fg:w="1"/><text x="20.0147%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.7647%" y="325" width="0.0784%" height="15" fill="rgb(248,192,3)" fg:x="252" fg:w="1"/><text x="20.0147%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.7647%" y="309" width="0.0784%" height="15" fill="rgb(233,187,18)" fg:x="252" fg:w="1"/><text x="20.0147%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.7647%" y="293" width="0.0784%" height="15" fill="rgb(237,208,14)" fg:x="252" fg:w="1"/><text x="20.0147%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.7647%" y="277" width="0.0784%" height="15" fill="rgb(212,77,1)" fg:x="252" fg:w="1"/><text x="20.0147%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.7647%" y="261" width="0.0784%" height="15" fill="rgb(210,163,22)" fg:x="252" fg:w="1"/><text x="20.0147%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.7647%" y="245" width="0.0784%" height="15" fill="rgb(250,58,28)" fg:x="252" fg:w="1"/><text x="20.0147%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.7647%" y="229" width="0.0784%" height="15" fill="rgb(254,28,41)" fg:x="252" fg:w="1"/><text x="20.0147%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.7647%" y="213" width="0.0784%" height="15" fill="rgb(237,162,36)" fg:x="252" fg:w="1"/><text x="20.0147%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7647%" y="197" width="0.0784%" height="15" fill="rgb(232,56,6)" fg:x="252" fg:w="1"/><text x="20.0147%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.8431%" y="357" width="0.0784%" height="15" fill="rgb(216,127,42)" fg:x="253" fg:w="1"/><text x="20.0931%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.8431%" y="341" width="0.0784%" height="15" fill="rgb(241,69,15)" fg:x="253" fg:w="1"/><text x="20.0931%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.8431%" y="325" width="0.0784%" height="15" fill="rgb(227,180,19)" fg:x="253" fg:w="1"/><text x="20.0931%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.39%)</title><rect x="19.6078%" y="453" width="0.3922%" height="15" fill="rgb(231,188,29)" fg:x="250" fg:w="5"/><text x="19.8578%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.39%)</title><rect x="19.6078%" y="437" width="0.3922%" height="15" fill="rgb(224,176,27)" fg:x="250" fg:w="5"/><text x="19.8578%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.8431%" y="421" width="0.1569%" height="15" fill="rgb(249,214,19)" fg:x="253" fg:w="2"/><text x="20.0931%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.8431%" y="405" width="0.1569%" height="15" fill="rgb(240,0,4)" fg:x="253" fg:w="2"/><text x="20.0931%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.8431%" y="389" width="0.1569%" height="15" fill="rgb(233,28,41)" fg:x="253" fg:w="2"/><text x="20.0931%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.8431%" y="373" width="0.1569%" height="15" fill="rgb(220,90,51)" fg:x="253" fg:w="2"/><text x="20.0931%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.9216%" y="357" width="0.0784%" height="15" fill="rgb(250,52,22)" fg:x="254" fg:w="1"/><text x="20.1716%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9216%" y="341" width="0.0784%" height="15" fill="rgb(231,152,36)" fg:x="254" fg:w="1"/><text x="20.1716%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9216%" y="325" width="0.0784%" height="15" fill="rgb(250,218,4)" fg:x="254" fg:w="1"/><text x="20.1716%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0000%" y="405" width="0.0784%" height="15" fill="rgb(210,38,21)" fg:x="255" fg:w="1"/><text x="20.2500%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="20.0000%" y="437" width="0.1569%" height="15" fill="rgb(230,75,13)" fg:x="255" fg:w="2"/><text x="20.2500%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.0000%" y="421" width="0.1569%" height="15" fill="rgb(250,68,53)" fg:x="255" fg:w="2"/><text x="20.2500%" y="431.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.0784%" y="405" width="0.0784%" height="15" fill="rgb(250,210,16)" fg:x="256" fg:w="1"/><text x="20.3284%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.0784%" y="389" width="0.0784%" height="15" fill="rgb(240,132,5)" fg:x="256" fg:w="1"/><text x="20.3284%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.0784%" y="373" width="0.0784%" height="15" fill="rgb(222,148,48)" fg:x="256" fg:w="1"/><text x="20.3284%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.0784%" y="357" width="0.0784%" height="15" fill="rgb(247,181,24)" fg:x="256" fg:w="1"/><text x="20.3284%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.0784%" y="341" width="0.0784%" height="15" fill="rgb(239,5,31)" fg:x="256" fg:w="1"/><text x="20.3284%" y="351.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1569%" y="421" width="0.0784%" height="15" fill="rgb(241,152,38)" fg:x="257" fg:w="1"/><text x="20.4069%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.1569%" y="405" width="0.0784%" height="15" fill="rgb(246,200,37)" fg:x="257" fg:w="1"/><text x="20.4069%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2353%" y="389" width="0.0784%" height="15" fill="rgb(243,210,26)" fg:x="258" fg:w="1"/><text x="20.4853%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.39%)</title><rect x="20.0000%" y="453" width="0.3922%" height="15" fill="rgb(222,22,22)" fg:x="255" fg:w="5"/><text x="20.2500%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="20.1569%" y="437" width="0.2353%" height="15" fill="rgb(208,129,28)" fg:x="257" fg:w="3"/><text x="20.4069%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="20.2353%" y="421" width="0.1569%" height="15" fill="rgb(254,169,28)" fg:x="258" fg:w="2"/><text x="20.4853%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="20.2353%" y="405" width="0.1569%" height="15" fill="rgb(225,45,17)" fg:x="258" fg:w="2"/><text x="20.4853%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.3137%" y="389" width="0.0784%" height="15" fill="rgb(232,199,2)" fg:x="259" fg:w="1"/><text x="20.5637%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.3137%" y="373" width="0.0784%" height="15" fill="rgb(235,33,40)" fg:x="259" fg:w="1"/><text x="20.5637%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3922%" y="373" width="0.0784%" height="15" fill="rgb(237,89,50)" fg:x="260" fg:w="1"/><text x="20.6422%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3922%" y="357" width="0.0784%" height="15" fill="rgb(238,126,5)" fg:x="260" fg:w="1"/><text x="20.6422%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.3922%" y="341" width="0.0784%" height="15" fill="rgb(247,214,42)" fg:x="260" fg:w="1"/><text x="20.6422%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="20.4706%" y="373" width="0.0784%" height="15" fill="rgb(238,60,45)" fg:x="261" fg:w="1"/><text x="20.7206%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.4706%" y="357" width="0.0784%" height="15" fill="rgb(225,69,44)" fg:x="261" fg:w="1"/><text x="20.7206%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.4706%" y="341" width="0.0784%" height="15" fill="rgb(241,13,44)" fg:x="261" fg:w="1"/><text x="20.7206%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.4706%" y="325" width="0.0784%" height="15" fill="rgb(227,121,22)" fg:x="261" fg:w="1"/><text x="20.7206%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5490%" y="293" width="0.0784%" height="15" fill="rgb(231,160,23)" fg:x="262" fg:w="1"/><text x="20.7990%" y="303.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="20.3922%" y="453" width="0.3137%" height="15" fill="rgb(250,179,43)" fg:x="260" fg:w="4"/><text x="20.6422%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.31%)</title><rect x="20.3922%" y="437" width="0.3137%" height="15" fill="rgb(233,54,46)" fg:x="260" fg:w="4"/><text x="20.6422%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.31%)</title><rect x="20.3922%" y="421" width="0.3137%" height="15" fill="rgb(247,120,42)" fg:x="260" fg:w="4"/><text x="20.6422%" y="431.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.31%)</title><rect x="20.3922%" y="405" width="0.3137%" height="15" fill="rgb(221,219,12)" fg:x="260" fg:w="4"/><text x="20.6422%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.31%)</title><rect x="20.3922%" y="389" width="0.3137%" height="15" fill="rgb(211,126,8)" fg:x="260" fg:w="4"/><text x="20.6422%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="20.5490%" y="373" width="0.1569%" height="15" fill="rgb(218,154,33)" fg:x="262" fg:w="2"/><text x="20.7990%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.5490%" y="357" width="0.1569%" height="15" fill="rgb(212,199,16)" fg:x="262" fg:w="2"/><text x="20.7990%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="20.5490%" y="341" width="0.1569%" height="15" fill="rgb(236,215,46)" fg:x="262" fg:w="2"/><text x="20.7990%" y="351.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="20.5490%" y="325" width="0.1569%" height="15" fill="rgb(232,32,22)" fg:x="262" fg:w="2"/><text x="20.7990%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="20.5490%" y="309" width="0.1569%" height="15" fill="rgb(234,79,15)" fg:x="262" fg:w="2"/><text x="20.7990%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.6275%" y="293" width="0.0784%" height="15" fill="rgb(235,187,47)" fg:x="263" fg:w="1"/><text x="20.8775%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="20.7059%" y="437" width="0.0784%" height="15" fill="rgb(244,69,37)" fg:x="264" fg:w="1"/><text x="20.9559%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.7059%" y="421" width="0.0784%" height="15" fill="rgb(249,140,25)" fg:x="264" fg:w="1"/><text x="20.9559%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.7059%" y="405" width="0.0784%" height="15" fill="rgb(213,69,8)" fg:x="264" fg:w="1"/><text x="20.9559%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7059%" y="389" width="0.0784%" height="15" fill="rgb(220,136,2)" fg:x="264" fg:w="1"/><text x="20.9559%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.7059%" y="373" width="0.0784%" height="15" fill="rgb(237,50,36)" fg:x="264" fg:w="1"/><text x="20.9559%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7059%" y="357" width="0.0784%" height="15" fill="rgb(226,18,11)" fg:x="264" fg:w="1"/><text x="20.9559%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.7059%" y="341" width="0.0784%" height="15" fill="rgb(243,156,2)" fg:x="264" fg:w="1"/><text x="20.9559%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7059%" y="325" width="0.0784%" height="15" fill="rgb(218,8,34)" fg:x="264" fg:w="1"/><text x="20.9559%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.7059%" y="309" width="0.0784%" height="15" fill="rgb(250,94,35)" fg:x="264" fg:w="1"/><text x="20.9559%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8627%" y="405" width="0.0784%" height="15" fill="rgb(229,127,21)" fg:x="266" fg:w="1"/><text x="21.1127%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8627%" y="389" width="0.0784%" height="15" fill="rgb(234,49,5)" fg:x="266" fg:w="1"/><text x="21.1127%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8627%" y="373" width="0.0784%" height="15" fill="rgb(248,12,16)" fg:x="266" fg:w="1"/><text x="21.1127%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.8627%" y="357" width="0.0784%" height="15" fill="rgb(208,220,31)" fg:x="266" fg:w="1"/><text x="21.1127%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.8627%" y="341" width="0.0784%" height="15" fill="rgb(243,184,0)" fg:x="266" fg:w="1"/><text x="21.1127%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.8627%" y="325" width="0.0784%" height="15" fill="rgb(217,38,21)" fg:x="266" fg:w="1"/><text x="21.1127%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.8627%" y="309" width="0.0784%" height="15" fill="rgb(239,120,45)" fg:x="266" fg:w="1"/><text x="21.1127%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.8627%" y="293" width="0.0784%" height="15" fill="rgb(235,33,2)" fg:x="266" fg:w="1"/><text x="21.1127%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.8627%" y="277" width="0.0784%" height="15" fill="rgb(249,161,5)" fg:x="266" fg:w="1"/><text x="21.1127%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.8627%" y="261" width="0.0784%" height="15" fill="rgb(250,165,48)" fg:x="266" fg:w="1"/><text x="21.1127%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.8627%" y="245" width="0.0784%" height="15" fill="rgb(221,23,45)" fg:x="266" fg:w="1"/><text x="21.1127%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.8627%" y="229" width="0.0784%" height="15" fill="rgb(217,108,46)" fg:x="266" fg:w="1"/><text x="21.1127%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.8627%" y="213" width="0.0784%" height="15" fill="rgb(254,26,35)" fg:x="266" fg:w="1"/><text x="21.1127%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.8627%" y="197" width="0.0784%" height="15" fill="rgb(218,223,28)" fg:x="266" fg:w="1"/><text x="21.1127%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="20.7843%" y="437" width="0.3137%" height="15" fill="rgb(242,27,47)" fg:x="265" fg:w="4"/><text x="21.0343%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="20.7843%" y="421" width="0.3137%" height="15" fill="rgb(218,39,35)" fg:x="265" fg:w="4"/><text x="21.0343%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.9412%" y="405" width="0.1569%" height="15" fill="rgb(232,127,16)" fg:x="267" fg:w="2"/><text x="21.1912%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.9412%" y="389" width="0.1569%" height="15" fill="rgb(231,219,51)" fg:x="267" fg:w="2"/><text x="21.1912%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.0196%" y="373" width="0.0784%" height="15" fill="rgb(217,220,46)" fg:x="268" fg:w="1"/><text x="21.2696%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.0196%" y="357" width="0.0784%" height="15" fill="rgb(230,75,1)" fg:x="268" fg:w="1"/><text x="21.2696%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.0196%" y="341" width="0.0784%" height="15" fill="rgb(218,2,8)" fg:x="268" fg:w="1"/><text x="21.2696%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.0196%" y="325" width="0.0784%" height="15" fill="rgb(206,111,30)" fg:x="268" fg:w="1"/><text x="21.2696%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.47%)</title><rect x="20.7059%" y="453" width="0.4706%" height="15" fill="rgb(209,135,6)" fg:x="264" fg:w="6"/><text x="20.9559%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.0980%" y="437" width="0.0784%" height="15" fill="rgb(205,169,10)" fg:x="269" fg:w="1"/><text x="21.3480%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.0980%" y="421" width="0.0784%" height="15" fill="rgb(212,204,38)" fg:x="269" fg:w="1"/><text x="21.3480%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.0980%" y="405" width="0.0784%" height="15" fill="rgb(205,199,14)" fg:x="269" fg:w="1"/><text x="21.3480%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.0980%" y="389" width="0.0784%" height="15" fill="rgb(212,4,6)" fg:x="269" fg:w="1"/><text x="21.3480%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.0980%" y="373" width="0.0784%" height="15" fill="rgb(250,15,10)" fg:x="269" fg:w="1"/><text x="21.3480%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="21.0980%" y="357" width="0.0784%" height="15" fill="rgb(212,49,51)" fg:x="269" fg:w="1"/><text x="21.3480%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="21.0980%" y="341" width="0.0784%" height="15" fill="rgb(235,21,9)" fg:x="269" fg:w="1"/><text x="21.3480%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="21.0980%" y="325" width="0.0784%" height="15" fill="rgb(251,31,32)" fg:x="269" fg:w="1"/><text x="21.3480%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="21.0980%" y="309" width="0.0784%" height="15" fill="rgb(246,23,9)" fg:x="269" fg:w="1"/><text x="21.3480%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.0980%" y="293" width="0.0784%" height="15" fill="rgb(225,216,14)" fg:x="269" fg:w="1"/><text x="21.3480%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.0980%" y="277" width="0.0784%" height="15" fill="rgb(215,200,26)" fg:x="269" fg:w="1"/><text x="21.3480%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.0980%" y="261" width="0.0784%" height="15" fill="rgb(237,130,47)" fg:x="269" fg:w="1"/><text x="21.3480%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="21.0980%" y="245" width="0.0784%" height="15" fill="rgb(247,74,14)" fg:x="269" fg:w="1"/><text x="21.3480%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.0980%" y="229" width="0.0784%" height="15" fill="rgb(254,97,46)" fg:x="269" fg:w="1"/><text x="21.3480%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="21.0980%" y="213" width="0.0784%" height="15" fill="rgb(234,191,1)" fg:x="269" fg:w="1"/><text x="21.3480%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="21.0980%" y="197" width="0.0784%" height="15" fill="rgb(215,165,14)" fg:x="269" fg:w="1"/><text x="21.3480%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="21.0980%" y="181" width="0.0784%" height="15" fill="rgb(230,182,6)" fg:x="269" fg:w="1"/><text x="21.3480%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="21.1765%" y="389" width="0.0784%" height="15" fill="rgb(210,127,39)" fg:x="270" fg:w="1"/><text x="21.4265%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.1765%" y="373" width="0.0784%" height="15" fill="rgb(223,212,51)" fg:x="270" fg:w="1"/><text x="21.4265%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1765%" y="357" width="0.0784%" height="15" fill="rgb(226,176,43)" fg:x="270" fg:w="1"/><text x="21.4265%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1765%" y="341" width="0.0784%" height="15" fill="rgb(222,155,4)" fg:x="270" fg:w="1"/><text x="21.4265%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.1765%" y="325" width="0.0784%" height="15" fill="rgb(215,149,7)" fg:x="270" fg:w="1"/><text x="21.4265%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.1765%" y="309" width="0.0784%" height="15" fill="rgb(252,199,23)" fg:x="270" fg:w="1"/><text x="21.4265%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.3333%" y="325" width="0.0784%" height="15" fill="rgb(245,52,29)" fg:x="272" fg:w="1"/><text x="21.5833%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.3333%" y="309" width="0.0784%" height="15" fill="rgb(221,228,19)" fg:x="272" fg:w="1"/><text x="21.5833%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3333%" y="293" width="0.0784%" height="15" fill="rgb(253,101,6)" fg:x="272" fg:w="1"/><text x="21.5833%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="21.1765%" y="421" width="0.3137%" height="15" fill="rgb(211,130,8)" fg:x="270" fg:w="4"/><text x="21.4265%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="21.1765%" y="405" width="0.3137%" height="15" fill="rgb(238,37,53)" fg:x="270" fg:w="4"/><text x="21.4265%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="21.2549%" y="389" width="0.2353%" height="15" fill="rgb(235,145,5)" fg:x="271" fg:w="3"/><text x="21.5049%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="21.2549%" y="373" width="0.2353%" height="15" fill="rgb(244,12,43)" fg:x="271" fg:w="3"/><text x="21.5049%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="21.3333%" y="357" width="0.1569%" height="15" fill="rgb(246,195,24)" fg:x="272" fg:w="2"/><text x="21.5833%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.3333%" y="341" width="0.1569%" height="15" fill="rgb(235,163,6)" fg:x="272" fg:w="2"/><text x="21.5833%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.4118%" y="325" width="0.0784%" height="15" fill="rgb(236,218,17)" fg:x="273" fg:w="1"/><text x="21.6618%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.4118%" y="309" width="0.0784%" height="15" fill="rgb(235,12,38)" fg:x="273" fg:w="1"/><text x="21.6618%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4902%" y="389" width="0.0784%" height="15" fill="rgb(225,195,33)" fg:x="274" fg:w="1"/><text x="21.7402%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4902%" y="373" width="0.0784%" height="15" fill="rgb(238,54,35)" fg:x="274" fg:w="1"/><text x="21.7402%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4902%" y="357" width="0.0784%" height="15" fill="rgb(238,33,7)" fg:x="274" fg:w="1"/><text x="21.7402%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4902%" y="341" width="0.0784%" height="15" fill="rgb(245,5,14)" fg:x="274" fg:w="1"/><text x="21.7402%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4902%" y="325" width="0.0784%" height="15" fill="rgb(251,95,31)" fg:x="274" fg:w="1"/><text x="21.7402%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.4902%" y="309" width="0.0784%" height="15" fill="rgb(222,15,46)" fg:x="274" fg:w="1"/><text x="21.7402%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.4902%" y="293" width="0.0784%" height="15" fill="rgb(226,182,24)" fg:x="274" fg:w="1"/><text x="21.7402%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.4902%" y="277" width="0.0784%" height="15" fill="rgb(229,105,41)" fg:x="274" fg:w="1"/><text x="21.7402%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4902%" y="261" width="0.0784%" height="15" fill="rgb(216,99,53)" fg:x="274" fg:w="1"/><text x="21.7402%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4902%" y="245" width="0.0784%" height="15" fill="rgb(253,26,20)" fg:x="274" fg:w="1"/><text x="21.7402%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.4902%" y="229" width="0.0784%" height="15" fill="rgb(249,155,28)" fg:x="274" fg:w="1"/><text x="21.7402%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.4902%" y="213" width="0.0784%" height="15" fill="rgb(241,221,2)" fg:x="274" fg:w="1"/><text x="21.7402%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.4902%" y="197" width="0.0784%" height="15" fill="rgb(219,124,6)" fg:x="274" fg:w="1"/><text x="21.7402%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.4902%" y="181" width="0.0784%" height="15" fill="rgb(233,37,6)" fg:x="274" fg:w="1"/><text x="21.7402%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4902%" y="165" width="0.0784%" height="15" fill="rgb(238,20,14)" fg:x="274" fg:w="1"/><text x="21.7402%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (26 samples, 2.04%)</title><rect x="19.6078%" y="469" width="2.0392%" height="15" fill="rgb(232,106,27)" fg:x="250" fg:w="26"/><text x="19.8578%" y="479.50">&lt;..</text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.47%)</title><rect x="21.1765%" y="453" width="0.4706%" height="15" fill="rgb(246,157,24)" fg:x="270" fg:w="6"/><text x="21.4265%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.47%)</title><rect x="21.1765%" y="437" width="0.4706%" height="15" fill="rgb(214,153,10)" fg:x="270" fg:w="6"/><text x="21.4265%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="21.4902%" y="421" width="0.1569%" height="15" fill="rgb(212,94,6)" fg:x="274" fg:w="2"/><text x="21.7402%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.4902%" y="405" width="0.1569%" height="15" fill="rgb(254,25,27)" fg:x="274" fg:w="2"/><text x="21.7402%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.5686%" y="389" width="0.0784%" height="15" fill="rgb(250,43,52)" fg:x="275" fg:w="1"/><text x="21.8186%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.5686%" y="373" width="0.0784%" height="15" fill="rgb(221,226,40)" fg:x="275" fg:w="1"/><text x="21.8186%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.5686%" y="357" width="0.0784%" height="15" fill="rgb(235,162,34)" fg:x="275" fg:w="1"/><text x="21.8186%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.5686%" y="341" width="0.0784%" height="15" fill="rgb(239,24,26)" fg:x="275" fg:w="1"/><text x="21.8186%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.5686%" y="325" width="0.0784%" height="15" fill="rgb(244,226,11)" fg:x="275" fg:w="1"/><text x="21.8186%" y="335.50"></text></g><g><title>plugins_core::build::Build::into_entry (27 samples, 2.12%)</title><rect x="19.6078%" y="485" width="2.1176%" height="15" fill="rgb(225,23,10)" fg:x="250" fg:w="27"/><text x="19.8578%" y="495.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="21.6471%" y="469" width="0.0784%" height="15" fill="rgb(249,125,6)" fg:x="276" fg:w="1"/><text x="21.8971%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.6471%" y="453" width="0.0784%" height="15" fill="rgb(246,212,12)" fg:x="276" fg:w="1"/><text x="21.8971%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6471%" y="437" width="0.0784%" height="15" fill="rgb(230,43,32)" fg:x="276" fg:w="1"/><text x="21.8971%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6471%" y="421" width="0.0784%" height="15" fill="rgb(210,95,23)" fg:x="276" fg:w="1"/><text x="21.8971%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6471%" y="405" width="0.0784%" height="15" fill="rgb(229,103,33)" fg:x="276" fg:w="1"/><text x="21.8971%" y="415.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="21.7255%" y="453" width="0.0784%" height="15" fill="rgb(222,104,27)" fg:x="277" fg:w="1"/><text x="21.9755%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7255%" y="437" width="0.0784%" height="15" fill="rgb(239,221,23)" fg:x="277" fg:w="1"/><text x="21.9755%" y="447.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="21.8039%" y="453" width="0.1569%" height="15" fill="rgb(222,98,21)" fg:x="278" fg:w="2"/><text x="22.0539%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="21.8824%" y="437" width="0.0784%" height="15" fill="rgb(231,101,20)" fg:x="279" fg:w="1"/><text x="22.1324%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8824%" y="421" width="0.0784%" height="15" fill="rgb(215,150,22)" fg:x="279" fg:w="1"/><text x="22.1324%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.8824%" y="405" width="0.0784%" height="15" fill="rgb(248,3,34)" fg:x="279" fg:w="1"/><text x="22.1324%" y="415.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.31%)</title><rect x="21.7255%" y="485" width="0.3137%" height="15" fill="rgb(220,141,21)" fg:x="277" fg:w="4"/><text x="21.9755%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.31%)</title><rect x="21.7255%" y="469" width="0.3137%" height="15" fill="rgb(223,41,48)" fg:x="277" fg:w="4"/><text x="21.9755%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.9608%" y="453" width="0.0784%" height="15" fill="rgb(247,12,5)" fg:x="280" fg:w="1"/><text x="22.2108%" y="463.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="22.1961%" y="453" width="0.0784%" height="15" fill="rgb(206,173,10)" fg:x="283" fg:w="1"/><text x="22.4461%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.1961%" y="437" width="0.0784%" height="15" fill="rgb(233,214,37)" fg:x="283" fg:w="1"/><text x="22.4461%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.1961%" y="421" width="0.0784%" height="15" fill="rgb(238,86,43)" fg:x="283" fg:w="1"/><text x="22.4461%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.1961%" y="405" width="0.0784%" height="15" fill="rgb(212,182,8)" fg:x="283" fg:w="1"/><text x="22.4461%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1961%" y="389" width="0.0784%" height="15" fill="rgb(240,91,47)" fg:x="283" fg:w="1"/><text x="22.4461%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1961%" y="373" width="0.0784%" height="15" fill="rgb(209,138,26)" fg:x="283" fg:w="1"/><text x="22.4461%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.1961%" y="357" width="0.0784%" height="15" fill="rgb(231,163,20)" fg:x="283" fg:w="1"/><text x="22.4461%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="22.1961%" y="469" width="0.1569%" height="15" fill="rgb(214,91,54)" fg:x="283" fg:w="2"/><text x="22.4461%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.2745%" y="453" width="0.0784%" height="15" fill="rgb(230,32,17)" fg:x="284" fg:w="1"/><text x="22.5245%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.2745%" y="437" width="0.0784%" height="15" fill="rgb(231,34,34)" fg:x="284" fg:w="1"/><text x="22.5245%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2745%" y="421" width="0.0784%" height="15" fill="rgb(224,228,27)" fg:x="284" fg:w="1"/><text x="22.5245%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.2745%" y="405" width="0.0784%" height="15" fill="rgb(219,35,40)" fg:x="284" fg:w="1"/><text x="22.5245%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="22.3529%" y="437" width="0.0784%" height="15" fill="rgb(234,42,8)" fg:x="285" fg:w="1"/><text x="22.6029%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="22.3529%" y="469" width="0.1569%" height="15" fill="rgb(226,75,22)" fg:x="285" fg:w="2"/><text x="22.6029%" y="479.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="22.3529%" y="453" width="0.1569%" height="15" fill="rgb(242,203,28)" fg:x="285" fg:w="2"/><text x="22.6029%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="22.4314%" y="437" width="0.0784%" height="15" fill="rgb(221,3,9)" fg:x="286" fg:w="1"/><text x="22.6814%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.4314%" y="421" width="0.0784%" height="15" fill="rgb(214,34,31)" fg:x="286" fg:w="1"/><text x="22.6814%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.4314%" y="405" width="0.0784%" height="15" fill="rgb(252,119,15)" fg:x="286" fg:w="1"/><text x="22.6814%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.4314%" y="389" width="0.0784%" height="15" fill="rgb(244,224,31)" fg:x="286" fg:w="1"/><text x="22.6814%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5098%" y="437" width="0.0784%" height="15" fill="rgb(215,8,51)" fg:x="287" fg:w="1"/><text x="22.7598%" y="447.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="22.5882%" y="405" width="0.0784%" height="15" fill="rgb(207,24,1)" fg:x="288" fg:w="1"/><text x="22.8382%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5882%" y="389" width="0.0784%" height="15" fill="rgb(245,90,0)" fg:x="288" fg:w="1"/><text x="22.8382%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.5882%" y="373" width="0.0784%" height="15" fill="rgb(246,43,48)" fg:x="288" fg:w="1"/><text x="22.8382%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.31%)</title><rect x="22.5882%" y="421" width="0.3137%" height="15" fill="rgb(252,218,10)" fg:x="288" fg:w="4"/><text x="22.8382%" y="431.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="22.6667%" y="405" width="0.2353%" height="15" fill="rgb(231,24,35)" fg:x="289" fg:w="3"/><text x="22.9167%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.6667%" y="389" width="0.2353%" height="15" fill="rgb(225,66,19)" fg:x="289" fg:w="3"/><text x="22.9167%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8235%" y="373" width="0.0784%" height="15" fill="rgb(214,96,51)" fg:x="291" fg:w="1"/><text x="23.0735%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.8235%" y="357" width="0.0784%" height="15" fill="rgb(251,151,47)" fg:x="291" fg:w="1"/><text x="23.0735%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.8235%" y="341" width="0.0784%" height="15" fill="rgb(236,79,14)" fg:x="291" fg:w="1"/><text x="23.0735%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8235%" y="325" width="0.0784%" height="15" fill="rgb(210,205,11)" fg:x="291" fg:w="1"/><text x="23.0735%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8235%" y="309" width="0.0784%" height="15" fill="rgb(233,142,53)" fg:x="291" fg:w="1"/><text x="23.0735%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8235%" y="293" width="0.0784%" height="15" fill="rgb(212,116,48)" fg:x="291" fg:w="1"/><text x="23.0735%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="22.9020%" y="373" width="0.0784%" height="15" fill="rgb(234,55,33)" fg:x="292" fg:w="1"/><text x="23.1520%" y="383.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="22.9020%" y="357" width="0.0784%" height="15" fill="rgb(253,92,27)" fg:x="292" fg:w="1"/><text x="23.1520%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.9020%" y="341" width="0.0784%" height="15" fill="rgb(220,7,35)" fg:x="292" fg:w="1"/><text x="23.1520%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.9804%" y="373" width="0.0784%" height="15" fill="rgb(246,124,6)" fg:x="293" fg:w="1"/><text x="23.2304%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.9804%" y="357" width="0.0784%" height="15" fill="rgb(212,111,51)" fg:x="293" fg:w="1"/><text x="23.2304%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.9804%" y="341" width="0.0784%" height="15" fill="rgb(253,116,7)" fg:x="293" fg:w="1"/><text x="23.2304%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9804%" y="325" width="0.0784%" height="15" fill="rgb(213,145,18)" fg:x="293" fg:w="1"/><text x="23.2304%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.9804%" y="309" width="0.0784%" height="15" fill="rgb(219,149,7)" fg:x="293" fg:w="1"/><text x="23.2304%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9804%" y="293" width="0.0784%" height="15" fill="rgb(225,156,20)" fg:x="293" fg:w="1"/><text x="23.2304%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.9804%" y="277" width="0.0784%" height="15" fill="rgb(211,98,19)" fg:x="293" fg:w="1"/><text x="23.2304%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.9804%" y="261" width="0.0784%" height="15" fill="rgb(231,192,31)" fg:x="293" fg:w="1"/><text x="23.2304%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9804%" y="245" width="0.0784%" height="15" fill="rgb(249,95,19)" fg:x="293" fg:w="1"/><text x="23.2304%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.0588%" y="373" width="0.0784%" height="15" fill="rgb(247,101,36)" fg:x="294" fg:w="1"/><text x="23.3088%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="23.1373%" y="373" width="0.0784%" height="15" fill="rgb(221,45,43)" fg:x="295" fg:w="1"/><text x="23.3873%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="23.1373%" y="357" width="0.0784%" height="15" fill="rgb(220,42,1)" fg:x="295" fg:w="1"/><text x="23.3873%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.1373%" y="341" width="0.0784%" height="15" fill="rgb(236,19,24)" fg:x="295" fg:w="1"/><text x="23.3873%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1373%" y="325" width="0.0784%" height="15" fill="rgb(225,192,6)" fg:x="295" fg:w="1"/><text x="23.3873%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1373%" y="309" width="0.0784%" height="15" fill="rgb(242,30,19)" fg:x="295" fg:w="1"/><text x="23.3873%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1373%" y="293" width="0.0784%" height="15" fill="rgb(240,36,6)" fg:x="295" fg:w="1"/><text x="23.3873%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1373%" y="277" width="0.0784%" height="15" fill="rgb(246,40,28)" fg:x="295" fg:w="1"/><text x="23.3873%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.1373%" y="261" width="0.0784%" height="15" fill="rgb(225,155,33)" fg:x="295" fg:w="1"/><text x="23.3873%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.1373%" y="245" width="0.0784%" height="15" fill="rgb(240,65,18)" fg:x="295" fg:w="1"/><text x="23.3873%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.1373%" y="229" width="0.0784%" height="15" fill="rgb(217,0,48)" fg:x="295" fg:w="1"/><text x="23.3873%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.1373%" y="213" width="0.0784%" height="15" fill="rgb(217,80,15)" fg:x="295" fg:w="1"/><text x="23.3873%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.1373%" y="197" width="0.0784%" height="15" fill="rgb(253,43,51)" fg:x="295" fg:w="1"/><text x="23.3873%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2941%" y="261" width="0.0784%" height="15" fill="rgb(246,60,4)" fg:x="297" fg:w="1"/><text x="23.5441%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.2157%" y="293" width="0.2353%" height="15" fill="rgb(230,40,54)" fg:x="296" fg:w="3"/><text x="23.4657%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.2157%" y="277" width="0.2353%" height="15" fill="rgb(208,20,44)" fg:x="296" fg:w="3"/><text x="23.4657%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3725%" y="261" width="0.0784%" height="15" fill="rgb(230,22,22)" fg:x="298" fg:w="1"/><text x="23.6225%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3725%" y="245" width="0.0784%" height="15" fill="rgb(207,57,4)" fg:x="298" fg:w="1"/><text x="23.6225%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.3725%" y="229" width="0.0784%" height="15" fill="rgb(242,130,33)" fg:x="298" fg:w="1"/><text x="23.6225%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.3725%" y="213" width="0.0784%" height="15" fill="rgb(218,66,43)" fg:x="298" fg:w="1"/><text x="23.6225%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.3725%" y="197" width="0.0784%" height="15" fill="rgb(236,105,16)" fg:x="298" fg:w="1"/><text x="23.6225%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3725%" y="181" width="0.0784%" height="15" fill="rgb(230,46,15)" fg:x="298" fg:w="1"/><text x="23.6225%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3725%" y="165" width="0.0784%" height="15" fill="rgb(251,172,40)" fg:x="298" fg:w="1"/><text x="23.6225%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.3725%" y="149" width="0.0784%" height="15" fill="rgb(225,217,32)" fg:x="298" fg:w="1"/><text x="23.6225%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.3725%" y="133" width="0.0784%" height="15" fill="rgb(243,10,29)" fg:x="298" fg:w="1"/><text x="23.6225%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.3725%" y="117" width="0.0784%" height="15" fill="rgb(207,102,10)" fg:x="298" fg:w="1"/><text x="23.6225%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.3725%" y="101" width="0.0784%" height="15" fill="rgb(241,125,5)" fg:x="298" fg:w="1"/><text x="23.6225%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3725%" y="85" width="0.0784%" height="15" fill="rgb(230,125,29)" fg:x="298" fg:w="1"/><text x="23.6225%" y="95.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.31%)</title><rect x="23.2157%" y="325" width="0.3137%" height="15" fill="rgb(223,65,44)" fg:x="296" fg:w="4"/><text x="23.4657%" y="335.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.31%)</title><rect x="23.2157%" y="309" width="0.3137%" height="15" fill="rgb(224,188,28)" fg:x="296" fg:w="4"/><text x="23.4657%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4510%" y="293" width="0.0784%" height="15" fill="rgb(254,197,27)" fg:x="299" fg:w="1"/><text x="23.7010%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4510%" y="277" width="0.0784%" height="15" fill="rgb(220,200,25)" fg:x="299" fg:w="1"/><text x="23.7010%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="23.5294%" y="309" width="0.0784%" height="15" fill="rgb(239,225,54)" fg:x="300" fg:w="1"/><text x="23.7794%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.5294%" y="293" width="0.0784%" height="15" fill="rgb(211,59,40)" fg:x="300" fg:w="1"/><text x="23.7794%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.5294%" y="277" width="0.0784%" height="15" fill="rgb(213,176,46)" fg:x="300" fg:w="1"/><text x="23.7794%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5294%" y="261" width="0.0784%" height="15" fill="rgb(226,99,4)" fg:x="300" fg:w="1"/><text x="23.7794%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.47%)</title><rect x="23.2157%" y="357" width="0.4706%" height="15" fill="rgb(239,203,43)" fg:x="296" fg:w="6"/><text x="23.4657%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.47%)</title><rect x="23.2157%" y="341" width="0.4706%" height="15" fill="rgb(246,1,45)" fg:x="296" fg:w="6"/><text x="23.4657%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.5294%" y="325" width="0.1569%" height="15" fill="rgb(231,42,52)" fg:x="300" fg:w="2"/><text x="23.7794%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.6078%" y="309" width="0.0784%" height="15" fill="rgb(240,13,50)" fg:x="301" fg:w="1"/><text x="23.8578%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6078%" y="293" width="0.0784%" height="15" fill="rgb(225,81,14)" fg:x="301" fg:w="1"/><text x="23.8578%" y="303.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.55%)</title><rect x="23.2157%" y="373" width="0.5490%" height="15" fill="rgb(216,182,23)" fg:x="296" fg:w="7"/><text x="23.4657%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="23.6863%" y="357" width="0.0784%" height="15" fill="rgb(233,137,19)" fg:x="302" fg:w="1"/><text x="23.9363%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7647%" y="325" width="0.0784%" height="15" fill="rgb(242,61,46)" fg:x="303" fg:w="1"/><text x="24.0147%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7647%" y="309" width="0.0784%" height="15" fill="rgb(221,168,51)" fg:x="303" fg:w="1"/><text x="24.0147%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7647%" y="293" width="0.0784%" height="15" fill="rgb(238,48,15)" fg:x="303" fg:w="1"/><text x="24.0147%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7647%" y="277" width="0.0784%" height="15" fill="rgb(216,13,16)" fg:x="303" fg:w="1"/><text x="24.0147%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7647%" y="261" width="0.0784%" height="15" fill="rgb(223,185,34)" fg:x="303" fg:w="1"/><text x="24.0147%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.7647%" y="245" width="0.0784%" height="15" fill="rgb(228,94,42)" fg:x="303" fg:w="1"/><text x="24.0147%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.7647%" y="229" width="0.0784%" height="15" fill="rgb(218,166,43)" fg:x="303" fg:w="1"/><text x="24.0147%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.7647%" y="213" width="0.0784%" height="15" fill="rgb(232,30,50)" fg:x="303" fg:w="1"/><text x="24.0147%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7647%" y="197" width="0.0784%" height="15" fill="rgb(245,206,45)" fg:x="303" fg:w="1"/><text x="24.0147%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7647%" y="181" width="0.0784%" height="15" fill="rgb(220,56,22)" fg:x="303" fg:w="1"/><text x="24.0147%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.7647%" y="165" width="0.0784%" height="15" fill="rgb(239,129,38)" fg:x="303" fg:w="1"/><text x="24.0147%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.7647%" y="149" width="0.0784%" height="15" fill="rgb(207,68,41)" fg:x="303" fg:w="1"/><text x="24.0147%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.7647%" y="133" width="0.0784%" height="15" fill="rgb(221,21,7)" fg:x="303" fg:w="1"/><text x="24.0147%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.7647%" y="117" width="0.0784%" height="15" fill="rgb(240,33,25)" fg:x="303" fg:w="1"/><text x="24.0147%" y="127.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="23.7647%" y="101" width="0.0784%" height="15" fill="rgb(242,119,10)" fg:x="303" fg:w="1"/><text x="24.0147%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="23.8431%" y="325" width="0.0784%" height="15" fill="rgb(214,149,40)" fg:x="304" fg:w="1"/><text x="24.0931%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="23.7647%" y="357" width="0.2353%" height="15" fill="rgb(228,25,36)" fg:x="303" fg:w="3"/><text x="24.0147%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="23.7647%" y="341" width="0.2353%" height="15" fill="rgb(222,59,15)" fg:x="303" fg:w="3"/><text x="24.0147%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.9216%" y="325" width="0.0784%" height="15" fill="rgb(218,170,0)" fg:x="305" fg:w="1"/><text x="24.1716%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9216%" y="309" width="0.0784%" height="15" fill="rgb(232,173,23)" fg:x="305" fg:w="1"/><text x="24.1716%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.9216%" y="293" width="0.0784%" height="15" fill="rgb(218,116,1)" fg:x="305" fg:w="1"/><text x="24.1716%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9216%" y="277" width="0.0784%" height="15" fill="rgb(207,34,4)" fg:x="305" fg:w="1"/><text x="24.1716%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="23.9216%" y="261" width="0.0784%" height="15" fill="rgb(229,54,52)" fg:x="305" fg:w="1"/><text x="24.1716%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.9216%" y="245" width="0.0784%" height="15" fill="rgb(211,86,23)" fg:x="305" fg:w="1"/><text x="24.1716%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9216%" y="229" width="0.0784%" height="15" fill="rgb(254,153,34)" fg:x="305" fg:w="1"/><text x="24.1716%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0000%" y="341" width="0.0784%" height="15" fill="rgb(219,220,14)" fg:x="306" fg:w="1"/><text x="24.2500%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1569%" y="325" width="0.0784%" height="15" fill="rgb(247,8,26)" fg:x="308" fg:w="1"/><text x="24.4069%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1569%" y="309" width="0.0784%" height="15" fill="rgb(213,129,42)" fg:x="308" fg:w="1"/><text x="24.4069%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1569%" y="293" width="0.0784%" height="15" fill="rgb(225,95,41)" fg:x="308" fg:w="1"/><text x="24.4069%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1569%" y="277" width="0.0784%" height="15" fill="rgb(215,134,24)" fg:x="308" fg:w="1"/><text x="24.4069%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.1569%" y="261" width="0.0784%" height="15" fill="rgb(235,23,54)" fg:x="308" fg:w="1"/><text x="24.4069%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.1569%" y="245" width="0.0784%" height="15" fill="rgb(229,96,31)" fg:x="308" fg:w="1"/><text x="24.4069%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.1569%" y="229" width="0.0784%" height="15" fill="rgb(206,111,12)" fg:x="308" fg:w="1"/><text x="24.4069%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1569%" y="213" width="0.0784%" height="15" fill="rgb(222,177,8)" fg:x="308" fg:w="1"/><text x="24.4069%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1569%" y="197" width="0.0784%" height="15" fill="rgb(251,36,52)" fg:x="308" fg:w="1"/><text x="24.4069%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.1569%" y="181" width="0.0784%" height="15" fill="rgb(216,182,29)" fg:x="308" fg:w="1"/><text x="24.4069%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.1569%" y="165" width="0.0784%" height="15" fill="rgb(241,145,50)" fg:x="308" fg:w="1"/><text x="24.4069%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.1569%" y="149" width="0.0784%" height="15" fill="rgb(231,71,35)" fg:x="308" fg:w="1"/><text x="24.4069%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.1569%" y="133" width="0.0784%" height="15" fill="rgb(218,22,17)" fg:x="308" fg:w="1"/><text x="24.4069%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1569%" y="117" width="0.0784%" height="15" fill="rgb(225,227,6)" fg:x="308" fg:w="1"/><text x="24.4069%" y="127.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.55%)</title><rect x="23.7647%" y="373" width="0.5490%" height="15" fill="rgb(224,204,17)" fg:x="303" fg:w="7"/><text x="24.0147%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="24.0000%" y="357" width="0.3137%" height="15" fill="rgb(227,61,28)" fg:x="306" fg:w="4"/><text x="24.2500%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="24.0784%" y="341" width="0.2353%" height="15" fill="rgb(242,148,23)" fg:x="307" fg:w="3"/><text x="24.3284%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.2353%" y="325" width="0.0784%" height="15" fill="rgb(237,105,33)" fg:x="309" fg:w="1"/><text x="24.4853%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2353%" y="309" width="0.0784%" height="15" fill="rgb(238,218,40)" fg:x="309" fg:w="1"/><text x="24.4853%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.2353%" y="293" width="0.0784%" height="15" fill="rgb(209,126,11)" fg:x="309" fg:w="1"/><text x="24.4853%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2353%" y="277" width="0.0784%" height="15" fill="rgb(245,90,11)" fg:x="309" fg:w="1"/><text x="24.4853%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.2353%" y="261" width="0.0784%" height="15" fill="rgb(211,195,10)" fg:x="309" fg:w="1"/><text x="24.4853%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="24.3137%" y="357" width="0.0784%" height="15" fill="rgb(231,45,45)" fg:x="310" fg:w="1"/><text x="24.5637%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="24.3922%" y="309" width="0.0784%" height="15" fill="rgb(246,100,43)" fg:x="311" fg:w="1"/><text x="24.6422%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.3922%" y="293" width="0.0784%" height="15" fill="rgb(241,193,8)" fg:x="311" fg:w="1"/><text x="24.6422%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.3922%" y="277" width="0.0784%" height="15" fill="rgb(208,76,19)" fg:x="311" fg:w="1"/><text x="24.6422%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.3922%" y="261" width="0.0784%" height="15" fill="rgb(223,69,40)" fg:x="311" fg:w="1"/><text x="24.6422%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="24.3922%" y="341" width="0.1569%" height="15" fill="rgb(207,120,39)" fg:x="311" fg:w="2"/><text x="24.6422%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.3922%" y="325" width="0.1569%" height="15" fill="rgb(212,209,28)" fg:x="311" fg:w="2"/><text x="24.6422%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.4706%" y="309" width="0.0784%" height="15" fill="rgb(246,82,29)" fg:x="312" fg:w="1"/><text x="24.7206%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4706%" y="293" width="0.0784%" height="15" fill="rgb(239,6,40)" fg:x="312" fg:w="1"/><text x="24.7206%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.4706%" y="277" width="0.0784%" height="15" fill="rgb(228,181,35)" fg:x="312" fg:w="1"/><text x="24.7206%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4706%" y="261" width="0.0784%" height="15" fill="rgb(238,151,2)" fg:x="312" fg:w="1"/><text x="24.7206%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.4706%" y="245" width="0.0784%" height="15" fill="rgb(236,94,18)" fg:x="312" fg:w="1"/><text x="24.7206%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4706%" y="229" width="0.0784%" height="15" fill="rgb(208,38,14)" fg:x="312" fg:w="1"/><text x="24.7206%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.4706%" y="213" width="0.0784%" height="15" fill="rgb(234,215,27)" fg:x="312" fg:w="1"/><text x="24.7206%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5490%" y="325" width="0.0784%" height="15" fill="rgb(254,211,53)" fg:x="313" fg:w="1"/><text x="24.7990%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.80%)</title><rect x="22.9020%" y="389" width="1.8039%" height="15" fill="rgb(216,175,11)" fg:x="292" fg:w="23"/><text x="23.1520%" y="399.50">&lt;..</text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.39%)</title><rect x="24.3137%" y="373" width="0.3922%" height="15" fill="rgb(246,179,26)" fg:x="310" fg:w="5"/><text x="24.5637%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.31%)</title><rect x="24.3922%" y="357" width="0.3137%" height="15" fill="rgb(249,19,52)" fg:x="311" fg:w="4"/><text x="24.6422%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="24.5490%" y="341" width="0.1569%" height="15" fill="rgb(230,42,52)" fg:x="313" fg:w="2"/><text x="24.7990%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.6275%" y="325" width="0.0784%" height="15" fill="rgb(221,171,0)" fg:x="314" fg:w="1"/><text x="24.8775%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6275%" y="309" width="0.0784%" height="15" fill="rgb(222,177,40)" fg:x="314" fg:w="1"/><text x="24.8775%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6275%" y="293" width="0.0784%" height="15" fill="rgb(247,34,16)" fg:x="314" fg:w="1"/><text x="24.8775%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6275%" y="277" width="0.0784%" height="15" fill="rgb(213,217,37)" fg:x="314" fg:w="1"/><text x="24.8775%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (24 samples, 1.88%)</title><rect x="22.9020%" y="405" width="1.8824%" height="15" fill="rgb(231,189,24)" fg:x="292" fg:w="24"/><text x="23.1520%" y="415.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.7059%" y="389" width="0.0784%" height="15" fill="rgb(214,22,9)" fg:x="315" fg:w="1"/><text x="24.9559%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.7059%" y="373" width="0.0784%" height="15" fill="rgb(212,70,22)" fg:x="315" fg:w="1"/><text x="24.9559%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="24.7059%" y="357" width="0.0784%" height="15" fill="rgb(249,64,51)" fg:x="315" fg:w="1"/><text x="24.9559%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.7059%" y="341" width="0.0784%" height="15" fill="rgb(249,148,20)" fg:x="315" fg:w="1"/><text x="24.9559%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.7059%" y="325" width="0.0784%" height="15" fill="rgb(246,46,48)" fg:x="315" fg:w="1"/><text x="24.9559%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.7059%" y="309" width="0.0784%" height="15" fill="rgb(217,34,48)" fg:x="315" fg:w="1"/><text x="24.9559%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.7843%" y="389" width="0.0784%" height="15" fill="rgb(222,45,26)" fg:x="316" fg:w="1"/><text x="25.0343%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.8627%" y="357" width="0.0784%" height="15" fill="rgb(230,201,36)" fg:x="317" fg:w="1"/><text x="25.1127%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.8627%" y="341" width="0.0784%" height="15" fill="rgb(217,30,43)" fg:x="317" fg:w="1"/><text x="25.1127%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.8627%" y="325" width="0.0784%" height="15" fill="rgb(230,197,40)" fg:x="317" fg:w="1"/><text x="25.1127%" y="335.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="24.8627%" y="389" width="0.1569%" height="15" fill="rgb(239,181,18)" fg:x="317" fg:w="2"/><text x="25.1127%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="24.8627%" y="373" width="0.1569%" height="15" fill="rgb(222,60,39)" fg:x="317" fg:w="2"/><text x="25.1127%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.9412%" y="357" width="0.0784%" height="15" fill="rgb(210,60,22)" fg:x="318" fg:w="1"/><text x="25.1912%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.9412%" y="341" width="0.0784%" height="15" fill="rgb(239,213,48)" fg:x="318" fg:w="1"/><text x="25.1912%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.9412%" y="325" width="0.0784%" height="15" fill="rgb(253,214,23)" fg:x="318" fg:w="1"/><text x="25.1912%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.9412%" y="309" width="0.0784%" height="15" fill="rgb(211,98,45)" fg:x="318" fg:w="1"/><text x="25.1912%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.9412%" y="293" width="0.0784%" height="15" fill="rgb(239,130,44)" fg:x="318" fg:w="1"/><text x="25.1912%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.9412%" y="277" width="0.0784%" height="15" fill="rgb(222,181,35)" fg:x="318" fg:w="1"/><text x="25.1912%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="24.9412%" y="261" width="0.0784%" height="15" fill="rgb(219,219,49)" fg:x="318" fg:w="1"/><text x="25.1912%" y="271.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="25.0980%" y="373" width="0.0784%" height="15" fill="rgb(227,161,51)" fg:x="320" fg:w="1"/><text x="25.3480%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="25.0196%" y="389" width="0.2353%" height="15" fill="rgb(239,112,27)" fg:x="319" fg:w="3"/><text x="25.2696%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.1765%" y="373" width="0.0784%" height="15" fill="rgb(248,122,18)" fg:x="321" fg:w="1"/><text x="25.4265%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.1765%" y="357" width="0.0784%" height="15" fill="rgb(245,130,23)" fg:x="321" fg:w="1"/><text x="25.4265%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="25.1765%" y="341" width="0.0784%" height="15" fill="rgb(211,225,28)" fg:x="321" fg:w="1"/><text x="25.4265%" y="351.50"></text></g><g><title>plugins_core::build::Build::leads_to (33 samples, 2.59%)</title><rect x="22.9020%" y="421" width="2.5882%" height="15" fill="rgb(242,105,44)" fg:x="292" fg:w="33"/><text x="23.1520%" y="431.50">pl..</text></g><g><title>plugins_core::tools::leads_to (9 samples, 0.71%)</title><rect x="24.7843%" y="405" width="0.7059%" height="15" fill="rgb(216,183,46)" fg:x="316" fg:w="9"/><text x="25.0343%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="25.2549%" y="389" width="0.2353%" height="15" fill="rgb(227,112,9)" fg:x="322" fg:w="3"/><text x="25.5049%" y="399.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="25.3333%" y="373" width="0.1569%" height="15" fill="rgb(244,21,0)" fg:x="323" fg:w="2"/><text x="25.5833%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.3333%" y="357" width="0.1569%" height="15" fill="rgb(236,185,14)" fg:x="323" fg:w="2"/><text x="25.5833%" y="367.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="25.4118%" y="341" width="0.0784%" height="15" fill="rgb(236,170,30)" fg:x="324" fg:w="1"/><text x="25.6618%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.4118%" y="325" width="0.0784%" height="15" fill="rgb(209,198,51)" fg:x="324" fg:w="1"/><text x="25.6618%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4118%" y="309" width="0.0784%" height="15" fill="rgb(205,171,26)" fg:x="324" fg:w="1"/><text x="25.6618%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (39 samples, 3.06%)</title><rect x="22.5098%" y="469" width="3.0588%" height="15" fill="rgb(246,41,49)" fg:x="287" fg:w="39"/><text x="22.7598%" y="479.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 3.06%)</title><rect x="22.5098%" y="453" width="3.0588%" height="15" fill="rgb(240,229,12)" fg:x="287" fg:w="39"/><text x="22.7598%" y="463.50">&lt;al..</text></g><g><title>plugins_core::build::QuickThing::make (38 samples, 2.98%)</title><rect x="22.5882%" y="437" width="2.9804%" height="15" fill="rgb(212,8,54)" fg:x="288" fg:w="38"/><text x="22.8382%" y="447.50">plu..</text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="25.4902%" y="421" width="0.0784%" height="15" fill="rgb(230,114,13)" fg:x="325" fg:w="1"/><text x="25.7402%" y="431.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="25.4902%" y="405" width="0.0784%" height="15" fill="rgb(229,130,28)" fg:x="325" fg:w="1"/><text x="25.7402%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="25.4902%" y="389" width="0.0784%" height="15" fill="rgb(206,139,15)" fg:x="325" fg:w="1"/><text x="25.7402%" y="399.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="25.4902%" y="373" width="0.0784%" height="15" fill="rgb(241,188,35)" fg:x="325" fg:w="1"/><text x="25.7402%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.4902%" y="357" width="0.0784%" height="15" fill="rgb(208,224,26)" fg:x="325" fg:w="1"/><text x="25.7402%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.4902%" y="341" width="0.0784%" height="15" fill="rgb(251,131,28)" fg:x="325" fg:w="1"/><text x="25.7402%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.4902%" y="325" width="0.0784%" height="15" fill="rgb(208,153,1)" fg:x="325" fg:w="1"/><text x="25.7402%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.4902%" y="309" width="0.0784%" height="15" fill="rgb(234,33,36)" fg:x="325" fg:w="1"/><text x="25.7402%" y="319.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="25.6471%" y="453" width="0.0784%" height="15" fill="rgb(246,42,29)" fg:x="327" fg:w="1"/><text x="25.8971%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6471%" y="437" width="0.0784%" height="15" fill="rgb(251,114,16)" fg:x="327" fg:w="1"/><text x="25.8971%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="25.7255%" y="437" width="0.0784%" height="15" fill="rgb(233,13,38)" fg:x="328" fg:w="1"/><text x="25.9755%" y="447.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="25.7255%" y="421" width="0.0784%" height="15" fill="rgb(247,120,19)" fg:x="328" fg:w="1"/><text x="25.9755%" y="431.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="25.7255%" y="405" width="0.0784%" height="15" fill="rgb(205,11,16)" fg:x="328" fg:w="1"/><text x="25.9755%" y="415.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="25.7255%" y="389" width="0.0784%" height="15" fill="rgb(228,185,19)" fg:x="328" fg:w="1"/><text x="25.9755%" y="399.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="25.7255%" y="373" width="0.0784%" height="15" fill="rgb(239,88,52)" fg:x="328" fg:w="1"/><text x="25.9755%" y="383.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="25.7255%" y="357" width="0.0784%" height="15" fill="rgb(219,23,1)" fg:x="328" fg:w="1"/><text x="25.9755%" y="367.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="25.7255%" y="341" width="0.0784%" height="15" fill="rgb(253,177,16)" fg:x="328" fg:w="1"/><text x="25.9755%" y="351.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="25.7255%" y="325" width="0.0784%" height="15" fill="rgb(225,150,40)" fg:x="328" fg:w="1"/><text x="25.9755%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="25.8039%" y="405" width="0.1569%" height="15" fill="rgb(208,108,30)" fg:x="329" fg:w="2"/><text x="26.0539%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.8824%" y="389" width="0.0784%" height="15" fill="rgb(214,122,4)" fg:x="330" fg:w="1"/><text x="26.1324%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.8824%" y="373" width="0.0784%" height="15" fill="rgb(229,74,37)" fg:x="330" fg:w="1"/><text x="26.1324%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.8824%" y="357" width="0.0784%" height="15" fill="rgb(233,61,41)" fg:x="330" fg:w="1"/><text x="26.1324%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="25.9608%" y="405" width="0.0784%" height="15" fill="rgb(238,191,5)" fg:x="331" fg:w="1"/><text x="26.2108%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="25.9608%" y="389" width="0.0784%" height="15" fill="rgb(233,78,24)" fg:x="331" fg:w="1"/><text x="26.2108%" y="399.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="25.9608%" y="373" width="0.0784%" height="15" fill="rgb(211,142,8)" fg:x="331" fg:w="1"/><text x="26.2108%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.9608%" y="357" width="0.0784%" height="15" fill="rgb(253,38,53)" fg:x="331" fg:w="1"/><text x="26.2108%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="26.1961%" y="373" width="0.0784%" height="15" fill="rgb(234,63,51)" fg:x="334" fg:w="1"/><text x="26.4461%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="26.1961%" y="357" width="0.0784%" height="15" fill="rgb(205,23,31)" fg:x="334" fg:w="1"/><text x="26.4461%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.1961%" y="341" width="0.0784%" height="15" fill="rgb(210,184,50)" fg:x="334" fg:w="1"/><text x="26.4461%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.1961%" y="325" width="0.0784%" height="15" fill="rgb(222,112,26)" fg:x="334" fg:w="1"/><text x="26.4461%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.1961%" y="309" width="0.0784%" height="15" fill="rgb(250,98,18)" fg:x="334" fg:w="1"/><text x="26.4461%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.1961%" y="293" width="0.0784%" height="15" fill="rgb(250,34,12)" fg:x="334" fg:w="1"/><text x="26.4461%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.1961%" y="277" width="0.0784%" height="15" fill="rgb(236,141,30)" fg:x="334" fg:w="1"/><text x="26.4461%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1961%" y="261" width="0.0784%" height="15" fill="rgb(246,134,38)" fg:x="334" fg:w="1"/><text x="26.4461%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="26.2745%" y="341" width="0.2353%" height="15" fill="rgb(240,114,4)" fg:x="335" fg:w="3"/><text x="26.5245%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.2745%" y="325" width="0.2353%" height="15" fill="rgb(243,113,39)" fg:x="335" fg:w="3"/><text x="26.5245%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.3529%" y="309" width="0.1569%" height="15" fill="rgb(239,215,4)" fg:x="336" fg:w="2"/><text x="26.6029%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="26.3529%" y="293" width="0.1569%" height="15" fill="rgb(236,229,45)" fg:x="336" fg:w="2"/><text x="26.6029%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.63%)</title><rect x="26.2745%" y="357" width="0.6275%" height="15" fill="rgb(242,2,6)" fg:x="335" fg:w="8"/><text x="26.5245%" y="367.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="26.5098%" y="341" width="0.3922%" height="15" fill="rgb(239,108,21)" fg:x="338" fg:w="5"/><text x="26.7598%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.7451%" y="325" width="0.1569%" height="15" fill="rgb(215,168,34)" fg:x="341" fg:w="2"/><text x="26.9951%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.7451%" y="309" width="0.1569%" height="15" fill="rgb(238,31,17)" fg:x="341" fg:w="2"/><text x="26.9951%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.0588%" y="341" width="0.0784%" height="15" fill="rgb(220,133,11)" fg:x="345" fg:w="1"/><text x="27.3088%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.63%)</title><rect x="27.1373%" y="341" width="0.6275%" height="15" fill="rgb(212,158,23)" fg:x="346" fg:w="8"/><text x="27.3873%" y="351.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.55%)</title><rect x="27.2157%" y="325" width="0.5490%" height="15" fill="rgb(223,172,7)" fg:x="347" fg:w="7"/><text x="27.4657%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.39%)</title><rect x="27.3725%" y="309" width="0.3922%" height="15" fill="rgb(244,3,52)" fg:x="349" fg:w="5"/><text x="27.6225%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="27.4510%" y="293" width="0.3137%" height="15" fill="rgb(207,69,27)" fg:x="350" fg:w="4"/><text x="27.7010%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="27.6078%" y="277" width="0.1569%" height="15" fill="rgb(213,136,45)" fg:x="352" fg:w="2"/><text x="27.8578%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="27.6078%" y="261" width="0.1569%" height="15" fill="rgb(218,79,17)" fg:x="352" fg:w="2"/><text x="27.8578%" y="271.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="27.6078%" y="245" width="0.1569%" height="15" fill="rgb(216,106,36)" fg:x="352" fg:w="2"/><text x="27.8578%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="27.9216%" y="277" width="0.3137%" height="15" fill="rgb(251,27,45)" fg:x="356" fg:w="4"/><text x="28.1716%" y="287.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="27.9216%" y="261" width="0.3137%" height="15" fill="rgb(232,21,34)" fg:x="356" fg:w="4"/><text x="28.1716%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.0784%" y="245" width="0.1569%" height="15" fill="rgb(249,191,16)" fg:x="358" fg:w="2"/><text x="28.3284%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.1569%" y="229" width="0.0784%" height="15" fill="rgb(224,88,20)" fg:x="359" fg:w="1"/><text x="28.4069%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="27.9216%" y="293" width="0.3922%" height="15" fill="rgb(237,93,27)" fg:x="356" fg:w="5"/><text x="28.1716%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.2353%" y="277" width="0.0784%" height="15" fill="rgb(226,198,48)" fg:x="360" fg:w="1"/><text x="28.4853%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.2353%" y="261" width="0.0784%" height="15" fill="rgb(207,162,53)" fg:x="360" fg:w="1"/><text x="28.4853%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="27.9216%" y="309" width="0.6275%" height="15" fill="rgb(207,169,9)" fg:x="356" fg:w="8"/><text x="28.1716%" y="319.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.3137%" y="293" width="0.2353%" height="15" fill="rgb(224,166,46)" fg:x="361" fg:w="3"/><text x="28.5637%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.4706%" y="277" width="0.0784%" height="15" fill="rgb(233,26,6)" fg:x="363" fg:w="1"/><text x="28.7206%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (10 samples, 0.78%)</title><rect x="27.9216%" y="325" width="0.7843%" height="15" fill="rgb(218,106,45)" fg:x="356" fg:w="10"/><text x="28.1716%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.5490%" y="309" width="0.1569%" height="15" fill="rgb(240,217,4)" fg:x="364" fg:w="2"/><text x="28.7990%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.5490%" y="293" width="0.1569%" height="15" fill="rgb(246,171,10)" fg:x="364" fg:w="2"/><text x="28.7990%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.5490%" y="277" width="0.1569%" height="15" fill="rgb(223,197,30)" fg:x="364" fg:w="2"/><text x="28.7990%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.9412%" y="277" width="0.1569%" height="15" fill="rgb(207,92,16)" fg:x="369" fg:w="2"/><text x="29.1912%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.0196%" y="261" width="0.0784%" height="15" fill="rgb(211,6,44)" fg:x="370" fg:w="1"/><text x="29.2696%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="28.7059%" y="325" width="0.4706%" height="15" fill="rgb(219,139,2)" fg:x="366" fg:w="6"/><text x="28.9559%" y="335.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="28.8627%" y="309" width="0.3137%" height="15" fill="rgb(224,103,21)" fg:x="368" fg:w="4"/><text x="29.1127%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.9412%" y="293" width="0.2353%" height="15" fill="rgb(254,110,48)" fg:x="369" fg:w="3"/><text x="29.1912%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.0980%" y="277" width="0.0784%" height="15" fill="rgb(212,88,19)" fg:x="371" fg:w="1"/><text x="29.3480%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="29.2549%" y="309" width="0.3137%" height="15" fill="rgb(248,103,6)" fg:x="373" fg:w="4"/><text x="29.5049%" y="319.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.3333%" y="293" width="0.2353%" height="15" fill="rgb(214,53,46)" fg:x="374" fg:w="3"/><text x="29.5833%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.4118%" y="277" width="0.1569%" height="15" fill="rgb(236,190,24)" fg:x="375" fg:w="2"/><text x="29.6618%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="29.6471%" y="293" width="0.4706%" height="15" fill="rgb(254,58,28)" fg:x="378" fg:w="6"/><text x="29.8971%" y="303.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="29.8039%" y="277" width="0.3137%" height="15" fill="rgb(243,63,27)" fg:x="380" fg:w="4"/><text x="30.0539%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="29.8039%" y="261" width="0.3137%" height="15" fill="rgb(206,81,20)" fg:x="380" fg:w="4"/><text x="30.0539%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="29.8824%" y="245" width="0.2353%" height="15" fill="rgb(252,69,51)" fg:x="381" fg:w="3"/><text x="30.1324%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="30.1176%" y="293" width="0.0784%" height="15" fill="rgb(222,213,4)" fg:x="384" fg:w="1"/><text x="30.3676%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="30.1176%" y="277" width="0.0784%" height="15" fill="rgb(226,198,12)" fg:x="384" fg:w="1"/><text x="30.3676%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.1176%" y="261" width="0.0784%" height="15" fill="rgb(248,115,11)" fg:x="384" fg:w="1"/><text x="30.3676%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="29.5686%" y="309" width="0.7843%" height="15" fill="rgb(221,148,54)" fg:x="377" fg:w="10"/><text x="29.8186%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.1961%" y="293" width="0.1569%" height="15" fill="rgb(214,209,51)" fg:x="385" fg:w="2"/><text x="30.4461%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.2745%" y="277" width="0.0784%" height="15" fill="rgb(249,116,53)" fg:x="386" fg:w="1"/><text x="30.5245%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.2745%" y="261" width="0.0784%" height="15" fill="rgb(248,170,1)" fg:x="386" fg:w="1"/><text x="30.5245%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.4314%" y="277" width="0.0784%" height="15" fill="rgb(244,105,10)" fg:x="388" fg:w="1"/><text x="30.6814%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.41%)</title><rect x="29.1765%" y="325" width="1.4118%" height="15" fill="rgb(229,100,5)" fg:x="372" fg:w="18"/><text x="29.4265%" y="335.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="30.3529%" y="309" width="0.2353%" height="15" fill="rgb(233,221,39)" fg:x="387" fg:w="3"/><text x="30.6029%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.4314%" y="293" width="0.1569%" height="15" fill="rgb(233,88,21)" fg:x="388" fg:w="2"/><text x="30.6814%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="30.5098%" y="277" width="0.0784%" height="15" fill="rgb(206,13,0)" fg:x="389" fg:w="1"/><text x="30.7598%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.90%)</title><rect x="27.7647%" y="341" width="2.9020%" height="15" fill="rgb(242,15,35)" fg:x="354" fg:w="37"/><text x="28.0147%" y="351.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.5882%" y="325" width="0.0784%" height="15" fill="rgb(247,142,41)" fg:x="390" fg:w="1"/><text x="30.8382%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.5882%" y="309" width="0.0784%" height="15" fill="rgb(245,51,29)" fg:x="390" fg:w="1"/><text x="30.8382%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.5882%" y="293" width="0.0784%" height="15" fill="rgb(228,209,43)" fg:x="390" fg:w="1"/><text x="30.8382%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (55 samples, 4.31%)</title><rect x="26.9020%" y="357" width="4.3137%" height="15" fill="rgb(233,185,9)" fg:x="343" fg:w="55"/><text x="27.1520%" y="367.50">serde..</text></g><g><title>std::io::Write::write_all (7 samples, 0.55%)</title><rect x="30.6667%" y="341" width="0.5490%" height="15" fill="rgb(226,93,0)" fg:x="391" fg:w="7"/><text x="30.9167%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.39%)</title><rect x="30.8235%" y="325" width="0.3922%" height="15" fill="rgb(245,194,43)" fg:x="393" fg:w="5"/><text x="31.0735%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="30.9804%" y="309" width="0.2353%" height="15" fill="rgb(211,145,34)" fg:x="395" fg:w="3"/><text x="31.2304%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="31.0588%" y="293" width="0.1569%" height="15" fill="rgb(231,228,28)" fg:x="396" fg:w="2"/><text x="31.3088%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="31.0588%" y="277" width="0.1569%" height="15" fill="rgb(236,149,4)" fg:x="396" fg:w="2"/><text x="31.3088%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.1373%" y="261" width="0.0784%" height="15" fill="rgb(234,114,38)" fg:x="397" fg:w="1"/><text x="31.3873%" y="271.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (64 samples, 5.02%)</title><rect x="26.2745%" y="373" width="5.0196%" height="15" fill="rgb(246,132,51)" fg:x="335" fg:w="64"/><text x="26.5245%" y="383.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.2157%" y="357" width="0.0784%" height="15" fill="rgb(251,137,22)" fg:x="398" fg:w="1"/><text x="31.4657%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.2941%" y="341" width="0.1569%" height="15" fill="rgb(243,59,52)" fg:x="399" fg:w="2"/><text x="31.5441%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4510%" y="325" width="0.0784%" height="15" fill="rgb(239,56,28)" fg:x="401" fg:w="1"/><text x="31.7010%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.6078%" y="309" width="0.0784%" height="15" fill="rgb(218,168,27)" fg:x="403" fg:w="1"/><text x="31.8578%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.6863%" y="309" width="0.0784%" height="15" fill="rgb(232,165,11)" fg:x="404" fg:w="1"/><text x="31.9363%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.8431%" y="293" width="0.0784%" height="15" fill="rgb(253,55,41)" fg:x="406" fg:w="1"/><text x="32.0931%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.9216%" y="277" width="0.1569%" height="15" fill="rgb(233,206,24)" fg:x="407" fg:w="2"/><text x="32.1716%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.10%)</title><rect x="31.2941%" y="373" width="1.0980%" height="15" fill="rgb(220,199,8)" fg:x="399" fg:w="14"/><text x="31.5441%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.10%)</title><rect x="31.2941%" y="357" width="1.0980%" height="15" fill="rgb(254,65,26)" fg:x="399" fg:w="14"/><text x="31.5441%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.94%)</title><rect x="31.4510%" y="341" width="0.9412%" height="15" fill="rgb(253,102,23)" fg:x="401" fg:w="12"/><text x="31.7010%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="31.5294%" y="325" width="0.8627%" height="15" fill="rgb(231,103,35)" fg:x="402" fg:w="11"/><text x="31.7794%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="31.7647%" y="309" width="0.6275%" height="15" fill="rgb(238,26,10)" fg:x="405" fg:w="8"/><text x="32.0147%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="31.9216%" y="293" width="0.4706%" height="15" fill="rgb(234,191,34)" fg:x="407" fg:w="6"/><text x="32.1716%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.31%)</title><rect x="32.0784%" y="277" width="0.3137%" height="15" fill="rgb(206,210,9)" fg:x="409" fg:w="4"/><text x="32.3284%" y="287.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="32.1569%" y="261" width="0.2353%" height="15" fill="rgb(219,155,3)" fg:x="410" fg:w="3"/><text x="32.4069%" y="271.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="32.3922%" y="357" width="0.1569%" height="15" fill="rgb(221,62,52)" fg:x="413" fg:w="2"/><text x="32.6422%" y="367.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="32.4706%" y="341" width="0.0784%" height="15" fill="rgb(215,197,36)" fg:x="414" fg:w="1"/><text x="32.7206%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.5490%" y="325" width="0.1569%" height="15" fill="rgb(226,222,6)" fg:x="415" fg:w="2"/><text x="32.7990%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="32.7059%" y="325" width="0.3137%" height="15" fill="rgb(215,58,28)" fg:x="417" fg:w="4"/><text x="32.9559%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.7843%" y="309" width="0.2353%" height="15" fill="rgb(212,148,2)" fg:x="418" fg:w="3"/><text x="33.0343%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="32.7843%" y="293" width="0.2353%" height="15" fill="rgb(208,21,42)" fg:x="418" fg:w="3"/><text x="33.0343%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="33.0196%" y="325" width="0.0784%" height="15" fill="rgb(209,107,26)" fg:x="421" fg:w="1"/><text x="33.2696%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.0196%" y="309" width="0.0784%" height="15" fill="rgb(254,60,47)" fg:x="421" fg:w="1"/><text x="33.2696%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.0196%" y="293" width="0.0784%" height="15" fill="rgb(207,226,45)" fg:x="421" fg:w="1"/><text x="33.2696%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.2549%" y="293" width="0.0784%" height="15" fill="rgb(223,124,22)" fg:x="424" fg:w="1"/><text x="33.5049%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.3333%" y="277" width="0.1569%" height="15" fill="rgb(240,162,13)" fg:x="425" fg:w="2"/><text x="33.5833%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4118%" y="261" width="0.0784%" height="15" fill="rgb(244,199,31)" fg:x="426" fg:w="1"/><text x="33.6618%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4118%" y="245" width="0.0784%" height="15" fill="rgb(207,92,16)" fg:x="426" fg:w="1"/><text x="33.6618%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="33.4902%" y="277" width="0.2353%" height="15" fill="rgb(215,31,19)" fg:x="427" fg:w="3"/><text x="33.7402%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="33.4902%" y="261" width="0.2353%" height="15" fill="rgb(245,118,14)" fg:x="427" fg:w="3"/><text x="33.7402%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="33.5686%" y="245" width="0.1569%" height="15" fill="rgb(248,12,46)" fg:x="428" fg:w="2"/><text x="33.8186%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.5686%" y="229" width="0.1569%" height="15" fill="rgb(209,119,0)" fg:x="428" fg:w="2"/><text x="33.8186%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.5686%" y="213" width="0.1569%" height="15" fill="rgb(254,51,44)" fg:x="428" fg:w="2"/><text x="33.8186%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6471%" y="197" width="0.0784%" height="15" fill="rgb(253,182,35)" fg:x="429" fg:w="1"/><text x="33.8971%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="34.0392%" y="261" width="0.0784%" height="15" fill="rgb(205,198,39)" fg:x="434" fg:w="1"/><text x="34.2892%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.1961%" y="245" width="0.2353%" height="15" fill="rgb(251,175,48)" fg:x="436" fg:w="3"/><text x="34.4461%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="34.2745%" y="229" width="0.1569%" height="15" fill="rgb(239,38,17)" fg:x="437" fg:w="2"/><text x="34.5245%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.3529%" y="213" width="0.0784%" height="15" fill="rgb(212,101,8)" fg:x="438" fg:w="1"/><text x="34.6029%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.47%)</title><rect x="34.5882%" y="213" width="0.4706%" height="15" fill="rgb(228,35,17)" fg:x="441" fg:w="6"/><text x="34.8382%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.8235%" y="197" width="0.2353%" height="15" fill="rgb(214,95,8)" fg:x="444" fg:w="3"/><text x="35.0735%" y="207.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="34.8235%" y="181" width="0.2353%" height="15" fill="rgb(210,176,35)" fg:x="444" fg:w="3"/><text x="35.0735%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 2.04%)</title><rect x="33.1765%" y="309" width="2.0392%" height="15" fill="rgb(226,4,3)" fg:x="423" fg:w="26"/><text x="33.4265%" y="319.50">&lt;..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.88%)</title><rect x="33.3333%" y="293" width="1.8824%" height="15" fill="rgb(232,133,14)" fg:x="425" fg:w="24"/><text x="33.5833%" y="303.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.49%)</title><rect x="33.7255%" y="277" width="1.4902%" height="15" fill="rgb(250,191,8)" fg:x="430" fg:w="19"/><text x="33.9755%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.10%)</title><rect x="34.1176%" y="261" width="1.0980%" height="15" fill="rgb(213,12,45)" fg:x="435" fg:w="14"/><text x="34.3676%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.78%)</title><rect x="34.4314%" y="245" width="0.7843%" height="15" fill="rgb(233,78,26)" fg:x="439" fg:w="10"/><text x="34.6814%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.78%)</title><rect x="34.4314%" y="229" width="0.7843%" height="15" fill="rgb(245,222,11)" fg:x="439" fg:w="10"/><text x="34.6814%" y="239.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="35.0588%" y="213" width="0.1569%" height="15" fill="rgb(216,174,12)" fg:x="447" fg:w="2"/><text x="35.3088%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.0588%" y="197" width="0.1569%" height="15" fill="rgb(213,15,9)" fg:x="447" fg:w="2"/><text x="35.3088%" y="207.50"></text></g><g><title>engine::session::Session::save_changes (123 samples, 9.65%)</title><rect x="25.7255%" y="453" width="9.6471%" height="15" fill="rgb(238,103,32)" fg:x="328" fg:w="123"/><text x="25.9755%" y="463.50">engine::sessio..</text></g><g><title>engine::session::state::State::close (122 samples, 9.57%)</title><rect x="25.8039%" y="437" width="9.5686%" height="15" fill="rgb(245,85,15)" fg:x="329" fg:w="122"/><text x="26.0539%" y="447.50">engine::sessio..</text></g><g><title>engine::session::state::State::flush_entities (122 samples, 9.57%)</title><rect x="25.8039%" y="421" width="9.5686%" height="15" fill="rgb(254,204,5)" fg:x="329" fg:w="122"/><text x="26.0539%" y="431.50">engine::sessio..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (119 samples, 9.33%)</title><rect x="26.0392%" y="405" width="9.3333%" height="15" fill="rgb(231,178,15)" fg:x="332" fg:w="119"/><text x="26.2892%" y="415.50">engine::sessi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (118 samples, 9.25%)</title><rect x="26.1176%" y="389" width="9.2549%" height="15" fill="rgb(248,151,3)" fg:x="333" fg:w="118"/><text x="26.3676%" y="399.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (38 samples, 2.98%)</title><rect x="32.3922%" y="373" width="2.9804%" height="15" fill="rgb(250,139,13)" fg:x="413" fg:w="38"/><text x="32.6422%" y="383.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (36 samples, 2.82%)</title><rect x="32.5490%" y="357" width="2.8235%" height="15" fill="rgb(243,107,53)" fg:x="415" fg:w="36"/><text x="32.7990%" y="367.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 2.82%)</title><rect x="32.5490%" y="341" width="2.8235%" height="15" fill="rgb(232,81,15)" fg:x="415" fg:w="36"/><text x="32.7990%" y="351.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.27%)</title><rect x="33.0980%" y="325" width="2.2745%" height="15" fill="rgb(225,187,48)" fg:x="422" fg:w="29"/><text x="33.3480%" y="335.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.2157%" y="309" width="0.1569%" height="15" fill="rgb(205,116,12)" fg:x="449" fg:w="2"/><text x="35.4657%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2941%" y="293" width="0.0784%" height="15" fill="rgb(220,222,31)" fg:x="450" fg:w="1"/><text x="35.5441%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2941%" y="277" width="0.0784%" height="15" fill="rgb(233,187,49)" fg:x="450" fg:w="1"/><text x="35.5441%" y="287.50"></text></g><g><title>engine::session::Session::flush (126 samples, 9.88%)</title><rect x="25.5686%" y="469" width="9.8824%" height="15" fill="rgb(211,168,53)" fg:x="326" fg:w="126"/><text x="25.8186%" y="479.50">engine::sessio..</text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="35.3725%" y="453" width="0.0784%" height="15" fill="rgb(206,160,16)" fg:x="451" fg:w="1"/><text x="35.6225%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="35.5294%" y="437" width="0.0784%" height="15" fill="rgb(254,164,13)" fg:x="453" fg:w="1"/><text x="35.7794%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="35.6078%" y="389" width="0.1569%" height="15" fill="rgb(229,45,30)" fg:x="454" fg:w="2"/><text x="35.8578%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.7647%" y="373" width="0.0784%" height="15" fill="rgb(237,32,10)" fg:x="456" fg:w="1"/><text x="36.0147%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="35.8431%" y="373" width="0.0784%" height="15" fill="rgb(251,20,47)" fg:x="457" fg:w="1"/><text x="36.0931%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.8431%" y="357" width="0.0784%" height="15" fill="rgb(251,116,12)" fg:x="457" fg:w="1"/><text x="36.0931%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.8431%" y="341" width="0.0784%" height="15" fill="rgb(214,227,27)" fg:x="457" fg:w="1"/><text x="36.0931%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.8431%" y="325" width="0.0784%" height="15" fill="rgb(248,10,53)" fg:x="457" fg:w="1"/><text x="36.0931%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8431%" y="309" width="0.0784%" height="15" fill="rgb(221,176,25)" fg:x="457" fg:w="1"/><text x="36.0931%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.47%)</title><rect x="35.6078%" y="405" width="0.4706%" height="15" fill="rgb(205,70,46)" fg:x="454" fg:w="6"/><text x="35.8578%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="35.7647%" y="389" width="0.3137%" height="15" fill="rgb(217,45,38)" fg:x="456" fg:w="4"/><text x="36.0147%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="35.9216%" y="373" width="0.1569%" height="15" fill="rgb(243,6,54)" fg:x="458" fg:w="2"/><text x="36.1716%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9216%" y="357" width="0.1569%" height="15" fill="rgb(242,76,23)" fg:x="458" fg:w="2"/><text x="36.1716%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.0000%" y="341" width="0.0784%" height="15" fill="rgb(239,166,0)" fg:x="459" fg:w="1"/><text x="36.2500%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.0000%" y="325" width="0.0784%" height="15" fill="rgb(238,174,32)" fg:x="459" fg:w="1"/><text x="36.2500%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.0000%" y="309" width="0.0784%" height="15" fill="rgb(238,124,44)" fg:x="459" fg:w="1"/><text x="36.2500%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.0000%" y="293" width="0.0784%" height="15" fill="rgb(206,185,9)" fg:x="459" fg:w="1"/><text x="36.2500%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1569%" y="373" width="0.0784%" height="15" fill="rgb(215,157,17)" fg:x="461" fg:w="1"/><text x="36.4069%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1569%" y="357" width="0.0784%" height="15" fill="rgb(251,17,29)" fg:x="461" fg:w="1"/><text x="36.4069%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2353%" y="373" width="0.0784%" height="15" fill="rgb(227,113,27)" fg:x="462" fg:w="1"/><text x="36.4853%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (10 samples, 0.78%)</title><rect x="35.6078%" y="437" width="0.7843%" height="15" fill="rgb(217,226,24)" fg:x="454" fg:w="10"/><text x="35.8578%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (10 samples, 0.78%)</title><rect x="35.6078%" y="421" width="0.7843%" height="15" fill="rgb(251,99,38)" fg:x="454" fg:w="10"/><text x="35.8578%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="36.0784%" y="405" width="0.3137%" height="15" fill="rgb(231,147,19)" fg:x="460" fg:w="4"/><text x="36.3284%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="36.1569%" y="389" width="0.2353%" height="15" fill="rgb(230,86,8)" fg:x="461" fg:w="3"/><text x="36.4069%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="36.3137%" y="373" width="0.0784%" height="15" fill="rgb(237,159,39)" fg:x="463" fg:w="1"/><text x="36.5637%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.3137%" y="357" width="0.0784%" height="15" fill="rgb(247,179,47)" fg:x="463" fg:w="1"/><text x="36.5637%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.3137%" y="341" width="0.0784%" height="15" fill="rgb(253,152,26)" fg:x="463" fg:w="1"/><text x="36.5637%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="36.3922%" y="437" width="0.0784%" height="15" fill="rgb(222,211,15)" fg:x="464" fg:w="1"/><text x="36.6422%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.3922%" y="421" width="0.0784%" height="15" fill="rgb(236,193,6)" fg:x="464" fg:w="1"/><text x="36.6422%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4706%" y="389" width="0.0784%" height="15" fill="rgb(226,206,10)" fg:x="465" fg:w="1"/><text x="36.7206%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="36.5490%" y="373" width="0.0784%" height="15" fill="rgb(213,125,22)" fg:x="466" fg:w="1"/><text x="36.7990%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5490%" y="357" width="0.0784%" height="15" fill="rgb(221,66,28)" fg:x="466" fg:w="1"/><text x="36.7990%" y="367.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="36.4706%" y="437" width="0.2353%" height="15" fill="rgb(222,84,53)" fg:x="465" fg:w="3"/><text x="36.7206%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="36.4706%" y="421" width="0.2353%" height="15" fill="rgb(243,50,15)" fg:x="465" fg:w="3"/><text x="36.7206%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="36.4706%" y="405" width="0.2353%" height="15" fill="rgb(208,184,23)" fg:x="465" fg:w="3"/><text x="36.7206%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="36.5490%" y="389" width="0.1569%" height="15" fill="rgb(221,83,2)" fg:x="466" fg:w="2"/><text x="36.7990%" y="399.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="36.6275%" y="373" width="0.0784%" height="15" fill="rgb(236,53,24)" fg:x="467" fg:w="1"/><text x="36.8775%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.6275%" y="357" width="0.0784%" height="15" fill="rgb(244,171,29)" fg:x="467" fg:w="1"/><text x="36.8775%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6275%" y="341" width="0.0784%" height="15" fill="rgb(205,19,11)" fg:x="467" fg:w="1"/><text x="36.8775%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6275%" y="325" width="0.0784%" height="15" fill="rgb(207,108,29)" fg:x="467" fg:w="1"/><text x="36.8775%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6275%" y="309" width="0.0784%" height="15" fill="rgb(236,215,43)" fg:x="467" fg:w="1"/><text x="36.8775%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7843%" y="357" width="0.0784%" height="15" fill="rgb(213,58,35)" fg:x="469" fg:w="1"/><text x="37.0343%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7843%" y="341" width="0.0784%" height="15" fill="rgb(220,211,46)" fg:x="469" fg:w="1"/><text x="37.0343%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7843%" y="325" width="0.0784%" height="15" fill="rgb(212,134,16)" fg:x="469" fg:w="1"/><text x="37.0343%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7843%" y="309" width="0.0784%" height="15" fill="rgb(232,90,44)" fg:x="469" fg:w="1"/><text x="37.0343%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7843%" y="293" width="0.0784%" height="15" fill="rgb(212,18,36)" fg:x="469" fg:w="1"/><text x="37.0343%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.7843%" y="277" width="0.0784%" height="15" fill="rgb(206,112,24)" fg:x="469" fg:w="1"/><text x="37.0343%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.7843%" y="261" width="0.0784%" height="15" fill="rgb(238,223,40)" fg:x="469" fg:w="1"/><text x="37.0343%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.7843%" y="245" width="0.0784%" height="15" fill="rgb(226,169,20)" fg:x="469" fg:w="1"/><text x="37.0343%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.7843%" y="229" width="0.0784%" height="15" fill="rgb(241,64,52)" fg:x="469" fg:w="1"/><text x="37.0343%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.7843%" y="213" width="0.0784%" height="15" fill="rgb(228,120,25)" fg:x="469" fg:w="1"/><text x="37.0343%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="36.7843%" y="389" width="0.3137%" height="15" fill="rgb(234,108,19)" fg:x="469" fg:w="4"/><text x="37.0343%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="36.7843%" y="373" width="0.3137%" height="15" fill="rgb(236,133,29)" fg:x="469" fg:w="4"/><text x="37.0343%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="36.8627%" y="357" width="0.2353%" height="15" fill="rgb(246,174,53)" fg:x="470" fg:w="3"/><text x="37.1127%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="36.8627%" y="341" width="0.2353%" height="15" fill="rgb(210,105,35)" fg:x="470" fg:w="3"/><text x="37.1127%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.9412%" y="325" width="0.1569%" height="15" fill="rgb(225,27,26)" fg:x="471" fg:w="2"/><text x="37.1912%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.9412%" y="309" width="0.1569%" height="15" fill="rgb(233,2,39)" fg:x="471" fg:w="2"/><text x="37.1912%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0196%" y="293" width="0.0784%" height="15" fill="rgb(219,164,26)" fg:x="472" fg:w="1"/><text x="37.2696%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.0196%" y="277" width="0.0784%" height="15" fill="rgb(236,211,5)" fg:x="472" fg:w="1"/><text x="37.2696%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.0196%" y="261" width="0.0784%" height="15" fill="rgb(244,227,23)" fg:x="472" fg:w="1"/><text x="37.2696%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0980%" y="357" width="0.0784%" height="15" fill="rgb(230,184,8)" fg:x="473" fg:w="1"/><text x="37.3480%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0980%" y="341" width="0.0784%" height="15" fill="rgb(217,125,48)" fg:x="473" fg:w="1"/><text x="37.3480%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0980%" y="325" width="0.0784%" height="15" fill="rgb(223,192,47)" fg:x="473" fg:w="1"/><text x="37.3480%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.0980%" y="309" width="0.0784%" height="15" fill="rgb(226,119,10)" fg:x="473" fg:w="1"/><text x="37.3480%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.2549%" y="325" width="0.0784%" height="15" fill="rgb(221,49,29)" fg:x="475" fg:w="1"/><text x="37.5049%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.2549%" y="309" width="0.0784%" height="15" fill="rgb(217,205,19)" fg:x="475" fg:w="1"/><text x="37.5049%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (8 samples, 0.63%)</title><rect x="36.7843%" y="421" width="0.6275%" height="15" fill="rgb(242,104,7)" fg:x="469" fg:w="8"/><text x="37.0343%" y="431.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.63%)</title><rect x="36.7843%" y="405" width="0.6275%" height="15" fill="rgb(209,154,48)" fg:x="469" fg:w="8"/><text x="37.0343%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="37.0980%" y="389" width="0.3137%" height="15" fill="rgb(219,213,46)" fg:x="473" fg:w="4"/><text x="37.3480%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="37.0980%" y="373" width="0.3137%" height="15" fill="rgb(229,105,38)" fg:x="473" fg:w="4"/><text x="37.3480%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="37.1765%" y="357" width="0.2353%" height="15" fill="rgb(205,151,5)" fg:x="474" fg:w="3"/><text x="37.4265%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.2549%" y="341" width="0.1569%" height="15" fill="rgb(248,115,40)" fg:x="475" fg:w="2"/><text x="37.5049%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.3333%" y="325" width="0.0784%" height="15" fill="rgb(206,179,2)" fg:x="476" fg:w="1"/><text x="37.5833%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.78%)</title><rect x="36.7059%" y="437" width="0.7843%" height="15" fill="rgb(230,103,24)" fg:x="468" fg:w="10"/><text x="36.9559%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="37.4118%" y="421" width="0.0784%" height="15" fill="rgb(218,152,4)" fg:x="477" fg:w="1"/><text x="37.6618%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.4118%" y="405" width="0.0784%" height="15" fill="rgb(236,161,54)" fg:x="477" fg:w="1"/><text x="37.6618%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="37.4118%" y="389" width="0.0784%" height="15" fill="rgb(226,65,17)" fg:x="477" fg:w="1"/><text x="37.6618%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="37.4118%" y="373" width="0.0784%" height="15" fill="rgb(221,134,44)" fg:x="477" fg:w="1"/><text x="37.6618%" y="383.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.4118%" y="357" width="0.0784%" height="15" fill="rgb(251,129,4)" fg:x="477" fg:w="1"/><text x="37.6618%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.4118%" y="341" width="0.0784%" height="15" fill="rgb(244,32,34)" fg:x="477" fg:w="1"/><text x="37.6618%" y="351.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="37.4118%" y="325" width="0.0784%" height="15" fill="rgb(251,224,37)" fg:x="477" fg:w="1"/><text x="37.6618%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="37.4118%" y="309" width="0.0784%" height="15" fill="rgb(248,117,31)" fg:x="477" fg:w="1"/><text x="37.6618%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4118%" y="293" width="0.0784%" height="15" fill="rgb(222,208,37)" fg:x="477" fg:w="1"/><text x="37.6618%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4118%" y="277" width="0.0784%" height="15" fill="rgb(234,211,25)" fg:x="477" fg:w="1"/><text x="37.6618%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.4118%" y="261" width="0.0784%" height="15" fill="rgb(211,72,6)" fg:x="477" fg:w="1"/><text x="37.6618%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.4118%" y="245" width="0.0784%" height="15" fill="rgb(249,198,38)" fg:x="477" fg:w="1"/><text x="37.6618%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.4118%" y="229" width="0.0784%" height="15" fill="rgb(221,86,51)" fg:x="477" fg:w="1"/><text x="37.6618%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.4118%" y="213" width="0.0784%" height="15" fill="rgb(226,178,43)" fg:x="477" fg:w="1"/><text x="37.6618%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4118%" y="197" width="0.0784%" height="15" fill="rgb(215,145,7)" fg:x="477" fg:w="1"/><text x="37.6618%" y="207.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="37.5686%" y="421" width="0.0784%" height="15" fill="rgb(250,202,36)" fg:x="479" fg:w="1"/><text x="37.8186%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.5686%" y="405" width="0.0784%" height="15" fill="rgb(215,86,13)" fg:x="479" fg:w="1"/><text x="37.8186%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5686%" y="389" width="0.0784%" height="15" fill="rgb(221,134,12)" fg:x="479" fg:w="1"/><text x="37.8186%" y="399.50"></text></g><g><title>plugins_core::build::Build::holding (30 samples, 2.35%)</title><rect x="35.4510%" y="469" width="2.3529%" height="15" fill="rgb(213,82,10)" fg:x="452" fg:w="30"/><text x="35.7010%" y="479.50">p..</text></g><g><title>plugins_core::tools::set_container (30 samples, 2.35%)</title><rect x="35.4510%" y="453" width="2.3529%" height="15" fill="rgb(214,142,0)" fg:x="452" fg:w="30"/><text x="35.7010%" y="463.50">p..</text></g><g><title>plugins_core::location::Location::set (4 samples, 0.31%)</title><rect x="37.4902%" y="437" width="0.3137%" height="15" fill="rgb(205,145,9)" fg:x="478" fg:w="4"/><text x="37.7402%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="37.6471%" y="421" width="0.1569%" height="15" fill="rgb(244,214,8)" fg:x="480" fg:w="2"/><text x="37.8971%" y="431.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="37.6471%" y="405" width="0.1569%" height="15" fill="rgb(224,72,51)" fg:x="480" fg:w="2"/><text x="37.8971%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.7255%" y="389" width="0.0784%" height="15" fill="rgb(233,137,37)" fg:x="481" fg:w="1"/><text x="37.9755%" y="399.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="37.7255%" y="373" width="0.0784%" height="15" fill="rgb(208,71,28)" fg:x="481" fg:w="1"/><text x="37.9755%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.7255%" y="357" width="0.0784%" height="15" fill="rgb(226,31,7)" fg:x="481" fg:w="1"/><text x="37.9755%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="37.8039%" y="453" width="0.0784%" height="15" fill="rgb(229,62,18)" fg:x="482" fg:w="1"/><text x="38.0539%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.8039%" y="437" width="0.0784%" height="15" fill="rgb(226,74,28)" fg:x="482" fg:w="1"/><text x="38.0539%" y="447.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="37.8824%" y="453" width="0.0784%" height="15" fill="rgb(214,170,18)" fg:x="483" fg:w="1"/><text x="38.1324%" y="463.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="37.8039%" y="469" width="0.2353%" height="15" fill="rgb(227,229,35)" fg:x="482" fg:w="3"/><text x="38.0539%" y="479.50"></text></g><g><title>kernel::model::builder::build_entity (1 samples, 0.08%)</title><rect x="37.9608%" y="453" width="0.0784%" height="15" fill="rgb(225,181,39)" fg:x="484" fg:w="1"/><text x="38.2108%" y="463.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="37.9608%" y="437" width="0.0784%" height="15" fill="rgb(253,124,44)" fg:x="484" fg:w="1"/><text x="38.2108%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9608%" y="421" width="0.0784%" height="15" fill="rgb(220,75,18)" fg:x="484" fg:w="1"/><text x="38.2108%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0392%" y="373" width="0.0784%" height="15" fill="rgb(239,175,43)" fg:x="485" fg:w="1"/><text x="38.2892%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.0392%" y="357" width="0.0784%" height="15" fill="rgb(228,112,50)" fg:x="485" fg:w="1"/><text x="38.2892%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.0392%" y="341" width="0.0784%" height="15" fill="rgb(232,105,36)" fg:x="485" fg:w="1"/><text x="38.2892%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0392%" y="325" width="0.0784%" height="15" fill="rgb(227,137,47)" fg:x="485" fg:w="1"/><text x="38.2892%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="38.1176%" y="373" width="0.0784%" height="15" fill="rgb(217,51,9)" fg:x="486" fg:w="1"/><text x="38.3676%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.1176%" y="357" width="0.0784%" height="15" fill="rgb(245,117,0)" fg:x="486" fg:w="1"/><text x="38.3676%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.1176%" y="341" width="0.0784%" height="15" fill="rgb(252,52,30)" fg:x="486" fg:w="1"/><text x="38.3676%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="38.0392%" y="405" width="0.2353%" height="15" fill="rgb(227,85,33)" fg:x="485" fg:w="3"/><text x="38.2892%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="38.0392%" y="389" width="0.2353%" height="15" fill="rgb(220,157,20)" fg:x="485" fg:w="3"/><text x="38.2892%" y="399.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.1961%" y="373" width="0.0784%" height="15" fill="rgb(254,14,34)" fg:x="487" fg:w="1"/><text x="38.4461%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.1961%" y="357" width="0.0784%" height="15" fill="rgb(216,103,41)" fg:x="487" fg:w="1"/><text x="38.4461%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.1961%" y="341" width="0.0784%" height="15" fill="rgb(245,221,9)" fg:x="487" fg:w="1"/><text x="38.4461%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1961%" y="325" width="0.0784%" height="15" fill="rgb(254,136,47)" fg:x="487" fg:w="1"/><text x="38.4461%" y="335.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.31%)</title><rect x="38.0392%" y="421" width="0.3137%" height="15" fill="rgb(235,71,46)" fg:x="485" fg:w="4"/><text x="38.2892%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="38.2745%" y="405" width="0.0784%" height="15" fill="rgb(242,154,29)" fg:x="488" fg:w="1"/><text x="38.5245%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.2745%" y="389" width="0.0784%" height="15" fill="rgb(210,65,31)" fg:x="488" fg:w="1"/><text x="38.5245%" y="399.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="38.3529%" y="373" width="0.0784%" height="15" fill="rgb(244,9,50)" fg:x="489" fg:w="1"/><text x="38.6029%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3529%" y="357" width="0.0784%" height="15" fill="rgb(215,141,38)" fg:x="489" fg:w="1"/><text x="38.6029%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="38.3529%" y="405" width="0.1569%" height="15" fill="rgb(241,129,6)" fg:x="489" fg:w="2"/><text x="38.6029%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="38.3529%" y="389" width="0.1569%" height="15" fill="rgb(253,169,4)" fg:x="489" fg:w="2"/><text x="38.6029%" y="399.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="38.4314%" y="373" width="0.0784%" height="15" fill="rgb(237,82,36)" fg:x="490" fg:w="1"/><text x="38.6814%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="38.4314%" y="357" width="0.0784%" height="15" fill="rgb(209,171,11)" fg:x="490" fg:w="1"/><text x="38.6814%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.4314%" y="341" width="0.0784%" height="15" fill="rgb(242,19,22)" fg:x="490" fg:w="1"/><text x="38.6814%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.4314%" y="325" width="0.0784%" height="15" fill="rgb(251,122,24)" fg:x="490" fg:w="1"/><text x="38.6814%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="38.4314%" y="309" width="0.0784%" height="15" fill="rgb(226,166,42)" fg:x="490" fg:w="1"/><text x="38.6814%" y="319.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="38.4314%" y="293" width="0.0784%" height="15" fill="rgb(244,101,48)" fg:x="490" fg:w="1"/><text x="38.6814%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.4314%" y="277" width="0.0784%" height="15" fill="rgb(227,125,1)" fg:x="490" fg:w="1"/><text x="38.6814%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.4314%" y="261" width="0.0784%" height="15" fill="rgb(206,79,43)" fg:x="490" fg:w="1"/><text x="38.6814%" y="271.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="38.3529%" y="421" width="0.2353%" height="15" fill="rgb(241,109,41)" fg:x="489" fg:w="3"/><text x="38.6029%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="38.5098%" y="405" width="0.0784%" height="15" fill="rgb(219,73,4)" fg:x="491" fg:w="1"/><text x="38.7598%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.5098%" y="389" width="0.0784%" height="15" fill="rgb(239,25,41)" fg:x="491" fg:w="1"/><text x="38.7598%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.5882%" y="405" width="0.0784%" height="15" fill="rgb(208,88,46)" fg:x="492" fg:w="1"/><text x="38.8382%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.5882%" y="389" width="0.0784%" height="15" fill="rgb(239,184,9)" fg:x="492" fg:w="1"/><text x="38.8382%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.5882%" y="373" width="0.0784%" height="15" fill="rgb(223,114,13)" fg:x="492" fg:w="1"/><text x="38.8382%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.5882%" y="357" width="0.0784%" height="15" fill="rgb(214,28,42)" fg:x="492" fg:w="1"/><text x="38.8382%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.5882%" y="341" width="0.0784%" height="15" fill="rgb(252,32,44)" fg:x="492" fg:w="1"/><text x="38.8382%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="38.5882%" y="325" width="0.0784%" height="15" fill="rgb(231,159,4)" fg:x="492" fg:w="1"/><text x="38.8382%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.5882%" y="309" width="0.0784%" height="15" fill="rgb(210,35,26)" fg:x="492" fg:w="1"/><text x="38.8382%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.6667%" y="357" width="0.0784%" height="15" fill="rgb(208,190,37)" fg:x="493" fg:w="1"/><text x="38.9167%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.6667%" y="405" width="0.1569%" height="15" fill="rgb(226,148,22)" fg:x="493" fg:w="2"/><text x="38.9167%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.6667%" y="389" width="0.1569%" height="15" fill="rgb(242,153,24)" fg:x="493" fg:w="2"/><text x="38.9167%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.6667%" y="373" width="0.1569%" height="15" fill="rgb(213,133,7)" fg:x="493" fg:w="2"/><text x="38.9167%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.7451%" y="357" width="0.0784%" height="15" fill="rgb(248,206,18)" fg:x="494" fg:w="1"/><text x="38.9951%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="38.8235%" y="405" width="0.1569%" height="15" fill="rgb(233,157,4)" fg:x="495" fg:w="2"/><text x="39.0735%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.8235%" y="389" width="0.1569%" height="15" fill="rgb(249,179,32)" fg:x="495" fg:w="2"/><text x="39.0735%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.8235%" y="373" width="0.1569%" height="15" fill="rgb(248,69,35)" fg:x="495" fg:w="2"/><text x="39.0735%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.8235%" y="357" width="0.1569%" height="15" fill="rgb(249,158,38)" fg:x="495" fg:w="2"/><text x="39.0735%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.8235%" y="341" width="0.1569%" height="15" fill="rgb(223,18,43)" fg:x="495" fg:w="2"/><text x="39.0735%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.8235%" y="325" width="0.1569%" height="15" fill="rgb(238,42,45)" fg:x="495" fg:w="2"/><text x="39.0735%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.9020%" y="309" width="0.0784%" height="15" fill="rgb(219,65,47)" fg:x="496" fg:w="1"/><text x="39.1520%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.9020%" y="293" width="0.0784%" height="15" fill="rgb(248,153,12)" fg:x="496" fg:w="1"/><text x="39.1520%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.47%)</title><rect x="38.5882%" y="421" width="0.4706%" height="15" fill="rgb(240,118,4)" fg:x="492" fg:w="6"/><text x="38.8382%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.9804%" y="405" width="0.0784%" height="15" fill="rgb(250,96,34)" fg:x="497" fg:w="1"/><text x="39.2304%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.9804%" y="389" width="0.0784%" height="15" fill="rgb(221,15,4)" fg:x="497" fg:w="1"/><text x="39.2304%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.9804%" y="373" width="0.0784%" height="15" fill="rgb(217,149,33)" fg:x="497" fg:w="1"/><text x="39.2304%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.9804%" y="357" width="0.0784%" height="15" fill="rgb(213,58,29)" fg:x="497" fg:w="1"/><text x="39.2304%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.9804%" y="341" width="0.0784%" height="15" fill="rgb(236,218,9)" fg:x="497" fg:w="1"/><text x="39.2304%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="38.9804%" y="325" width="0.0784%" height="15" fill="rgb(248,40,19)" fg:x="497" fg:w="1"/><text x="39.2304%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="38.9804%" y="309" width="0.0784%" height="15" fill="rgb(212,17,6)" fg:x="497" fg:w="1"/><text x="39.2304%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="38.9804%" y="293" width="0.0784%" height="15" fill="rgb(206,212,20)" fg:x="497" fg:w="1"/><text x="39.2304%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="38.9804%" y="277" width="0.0784%" height="15" fill="rgb(229,80,37)" fg:x="497" fg:w="1"/><text x="39.2304%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="38.9804%" y="261" width="0.0784%" height="15" fill="rgb(253,8,37)" fg:x="497" fg:w="1"/><text x="39.2304%" y="271.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="39.0588%" y="373" width="0.1569%" height="15" fill="rgb(215,16,43)" fg:x="498" fg:w="2"/><text x="39.3088%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="39.0588%" y="389" width="0.2353%" height="15" fill="rgb(236,219,16)" fg:x="498" fg:w="3"/><text x="39.3088%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.2157%" y="373" width="0.0784%" height="15" fill="rgb(251,0,3)" fg:x="500" fg:w="1"/><text x="39.4657%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.2157%" y="357" width="0.0784%" height="15" fill="rgb(207,133,37)" fg:x="500" fg:w="1"/><text x="39.4657%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2157%" y="341" width="0.0784%" height="15" fill="rgb(250,143,20)" fg:x="500" fg:w="1"/><text x="39.4657%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.2157%" y="325" width="0.0784%" height="15" fill="rgb(242,19,50)" fg:x="500" fg:w="1"/><text x="39.4657%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2157%" y="309" width="0.0784%" height="15" fill="rgb(206,124,43)" fg:x="500" fg:w="1"/><text x="39.4657%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.2157%" y="293" width="0.0784%" height="15" fill="rgb(229,4,38)" fg:x="500" fg:w="1"/><text x="39.4657%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="39.2941%" y="357" width="0.0784%" height="15" fill="rgb(247,220,45)" fg:x="501" fg:w="1"/><text x="39.5441%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.2941%" y="341" width="0.0784%" height="15" fill="rgb(247,195,0)" fg:x="501" fg:w="1"/><text x="39.5441%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.2941%" y="325" width="0.0784%" height="15" fill="rgb(252,12,19)" fg:x="501" fg:w="1"/><text x="39.5441%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.2941%" y="309" width="0.0784%" height="15" fill="rgb(222,49,50)" fg:x="501" fg:w="1"/><text x="39.5441%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.2941%" y="293" width="0.0784%" height="15" fill="rgb(209,157,28)" fg:x="501" fg:w="1"/><text x="39.5441%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2941%" y="277" width="0.0784%" height="15" fill="rgb(238,174,24)" fg:x="501" fg:w="1"/><text x="39.5441%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3725%" y="293" width="0.0784%" height="15" fill="rgb(224,17,28)" fg:x="502" fg:w="1"/><text x="39.6225%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.3725%" y="277" width="0.0784%" height="15" fill="rgb(249,7,29)" fg:x="502" fg:w="1"/><text x="39.6225%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.49%)</title><rect x="38.0392%" y="437" width="1.4902%" height="15" fill="rgb(243,178,4)" fg:x="485" fg:w="19"/><text x="38.2892%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.47%)</title><rect x="39.0588%" y="421" width="0.4706%" height="15" fill="rgb(246,138,35)" fg:x="498" fg:w="6"/><text x="39.3088%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.47%)</title><rect x="39.0588%" y="405" width="0.4706%" height="15" fill="rgb(251,85,18)" fg:x="498" fg:w="6"/><text x="39.3088%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="39.2941%" y="389" width="0.2353%" height="15" fill="rgb(254,55,9)" fg:x="501" fg:w="3"/><text x="39.5441%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="39.2941%" y="373" width="0.2353%" height="15" fill="rgb(248,4,50)" fg:x="501" fg:w="3"/><text x="39.5441%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.3725%" y="357" width="0.1569%" height="15" fill="rgb(215,208,14)" fg:x="502" fg:w="2"/><text x="39.6225%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.3725%" y="341" width="0.1569%" height="15" fill="rgb(218,37,18)" fg:x="502" fg:w="2"/><text x="39.6225%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.3725%" y="325" width="0.1569%" height="15" fill="rgb(206,104,13)" fg:x="502" fg:w="2"/><text x="39.6225%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.3725%" y="309" width="0.1569%" height="15" fill="rgb(248,94,22)" fg:x="502" fg:w="2"/><text x="39.6225%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.4510%" y="293" width="0.0784%" height="15" fill="rgb(235,42,46)" fg:x="503" fg:w="1"/><text x="39.7010%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4510%" y="277" width="0.0784%" height="15" fill="rgb(220,228,48)" fg:x="503" fg:w="1"/><text x="39.7010%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="39.5294%" y="421" width="0.0784%" height="15" fill="rgb(216,58,12)" fg:x="504" fg:w="1"/><text x="39.7794%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.5294%" y="405" width="0.0784%" height="15" fill="rgb(223,97,52)" fg:x="504" fg:w="1"/><text x="39.7794%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6078%" y="373" width="0.0784%" height="15" fill="rgb(208,159,17)" fg:x="505" fg:w="1"/><text x="39.8578%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6078%" y="357" width="0.0784%" height="15" fill="rgb(215,172,9)" fg:x="505" fg:w="1"/><text x="39.8578%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6078%" y="341" width="0.0784%" height="15" fill="rgb(252,175,30)" fg:x="505" fg:w="1"/><text x="39.8578%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.6078%" y="325" width="0.0784%" height="15" fill="rgb(209,159,10)" fg:x="505" fg:w="1"/><text x="39.8578%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.6078%" y="309" width="0.0784%" height="15" fill="rgb(229,73,51)" fg:x="505" fg:w="1"/><text x="39.8578%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.6078%" y="293" width="0.0784%" height="15" fill="rgb(208,212,43)" fg:x="505" fg:w="1"/><text x="39.8578%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6078%" y="277" width="0.0784%" height="15" fill="rgb(254,123,53)" fg:x="505" fg:w="1"/><text x="39.8578%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6078%" y="261" width="0.0784%" height="15" fill="rgb(254,128,49)" fg:x="505" fg:w="1"/><text x="39.8578%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.6078%" y="245" width="0.0784%" height="15" fill="rgb(246,16,16)" fg:x="505" fg:w="1"/><text x="39.8578%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.6078%" y="229" width="0.0784%" height="15" fill="rgb(209,200,1)" fg:x="505" fg:w="1"/><text x="39.8578%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.6078%" y="213" width="0.0784%" height="15" fill="rgb(235,9,3)" fg:x="505" fg:w="1"/><text x="39.8578%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.6078%" y="197" width="0.0784%" height="15" fill="rgb(233,121,54)" fg:x="505" fg:w="1"/><text x="39.8578%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6078%" y="181" width="0.0784%" height="15" fill="rgb(236,80,25)" fg:x="505" fg:w="1"/><text x="39.8578%" y="191.50"></text></g><g><title>plugins_core::build::Build::into_entry (22 samples, 1.73%)</title><rect x="38.0392%" y="453" width="1.7255%" height="15" fill="rgb(220,44,24)" fg:x="485" fg:w="22"/><text x="38.2892%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="39.5294%" y="437" width="0.2353%" height="15" fill="rgb(236,225,16)" fg:x="504" fg:w="3"/><text x="39.7794%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.6078%" y="421" width="0.1569%" height="15" fill="rgb(237,140,0)" fg:x="505" fg:w="2"/><text x="39.8578%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.6078%" y="405" width="0.1569%" height="15" fill="rgb(243,225,53)" fg:x="505" fg:w="2"/><text x="39.8578%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.6078%" y="389" width="0.1569%" height="15" fill="rgb(240,140,30)" fg:x="505" fg:w="2"/><text x="39.8578%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6863%" y="373" width="0.0784%" height="15" fill="rgb(217,51,16)" fg:x="506" fg:w="1"/><text x="39.9363%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6863%" y="357" width="0.0784%" height="15" fill="rgb(245,75,50)" fg:x="506" fg:w="1"/><text x="39.9363%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.6863%" y="341" width="0.0784%" height="15" fill="rgb(208,174,22)" fg:x="506" fg:w="1"/><text x="39.9363%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.6863%" y="325" width="0.0784%" height="15" fill="rgb(219,98,50)" fg:x="506" fg:w="1"/><text x="39.9363%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.6863%" y="309" width="0.0784%" height="15" fill="rgb(243,138,3)" fg:x="506" fg:w="1"/><text x="39.9363%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6863%" y="293" width="0.0784%" height="15" fill="rgb(243,132,26)" fg:x="506" fg:w="1"/><text x="39.9363%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6863%" y="277" width="0.0784%" height="15" fill="rgb(250,201,8)" fg:x="506" fg:w="1"/><text x="39.9363%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.6863%" y="261" width="0.0784%" height="15" fill="rgb(213,91,26)" fg:x="506" fg:w="1"/><text x="39.9363%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.6863%" y="245" width="0.0784%" height="15" fill="rgb(229,117,1)" fg:x="506" fg:w="1"/><text x="39.9363%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.6863%" y="229" width="0.0784%" height="15" fill="rgb(229,24,6)" fg:x="506" fg:w="1"/><text x="39.9363%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.6863%" y="213" width="0.0784%" height="15" fill="rgb(206,69,11)" fg:x="506" fg:w="1"/><text x="39.9363%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6863%" y="197" width="0.0784%" height="15" fill="rgb(234,111,34)" fg:x="506" fg:w="1"/><text x="39.9363%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="39.8431%" y="437" width="0.0784%" height="15" fill="rgb(213,187,51)" fg:x="508" fg:w="1"/><text x="40.0931%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="39.8431%" y="421" width="0.0784%" height="15" fill="rgb(207,45,11)" fg:x="508" fg:w="1"/><text x="40.0931%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.8431%" y="405" width="0.0784%" height="15" fill="rgb(225,151,47)" fg:x="508" fg:w="1"/><text x="40.0931%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9216%" y="405" width="0.0784%" height="15" fill="rgb(211,226,5)" fg:x="509" fg:w="1"/><text x="40.1716%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9216%" y="389" width="0.0784%" height="15" fill="rgb(214,83,52)" fg:x="509" fg:w="1"/><text x="40.1716%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.9216%" y="373" width="0.0784%" height="15" fill="rgb(229,49,53)" fg:x="509" fg:w="1"/><text x="40.1716%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.9216%" y="357" width="0.0784%" height="15" fill="rgb(246,8,28)" fg:x="509" fg:w="1"/><text x="40.1716%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.9216%" y="341" width="0.0784%" height="15" fill="rgb(207,28,41)" fg:x="509" fg:w="1"/><text x="40.1716%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.9216%" y="325" width="0.0784%" height="15" fill="rgb(254,22,25)" fg:x="509" fg:w="1"/><text x="40.1716%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.9216%" y="309" width="0.0784%" height="15" fill="rgb(209,120,42)" fg:x="509" fg:w="1"/><text x="40.1716%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.9216%" y="293" width="0.0784%" height="15" fill="rgb(216,194,18)" fg:x="509" fg:w="1"/><text x="40.1716%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.9216%" y="277" width="0.0784%" height="15" fill="rgb(213,70,17)" fg:x="509" fg:w="1"/><text x="40.1716%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.9216%" y="261" width="0.0784%" height="15" fill="rgb(228,66,19)" fg:x="509" fg:w="1"/><text x="40.1716%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.9216%" y="245" width="0.0784%" height="15" fill="rgb(236,221,54)" fg:x="509" fg:w="1"/><text x="40.1716%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9216%" y="229" width="0.0784%" height="15" fill="rgb(207,175,15)" fg:x="509" fg:w="1"/><text x="40.1716%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0000%" y="309" width="0.0784%" height="15" fill="rgb(234,76,8)" fg:x="510" fg:w="1"/><text x="40.2500%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="40.0000%" y="405" width="0.1569%" height="15" fill="rgb(243,106,0)" fg:x="510" fg:w="2"/><text x="40.2500%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.0000%" y="389" width="0.1569%" height="15" fill="rgb(208,48,19)" fg:x="510" fg:w="2"/><text x="40.2500%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="40.0000%" y="373" width="0.1569%" height="15" fill="rgb(251,50,29)" fg:x="510" fg:w="2"/><text x="40.2500%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="40.0000%" y="357" width="0.1569%" height="15" fill="rgb(222,31,49)" fg:x="510" fg:w="2"/><text x="40.2500%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.0000%" y="341" width="0.1569%" height="15" fill="rgb(232,33,18)" fg:x="510" fg:w="2"/><text x="40.2500%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.0000%" y="325" width="0.1569%" height="15" fill="rgb(209,1,44)" fg:x="510" fg:w="2"/><text x="40.2500%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.0784%" y="309" width="0.0784%" height="15" fill="rgb(211,7,1)" fg:x="511" fg:w="1"/><text x="40.3284%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="40.1569%" y="389" width="0.0784%" height="15" fill="rgb(224,111,27)" fg:x="512" fg:w="1"/><text x="40.4069%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1569%" y="373" width="0.0784%" height="15" fill="rgb(252,195,39)" fg:x="512" fg:w="1"/><text x="40.4069%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.2353%" y="373" width="0.0784%" height="15" fill="rgb(237,198,5)" fg:x="513" fg:w="1"/><text x="40.4853%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.2353%" y="357" width="0.0784%" height="15" fill="rgb(232,148,1)" fg:x="513" fg:w="1"/><text x="40.4853%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2353%" y="341" width="0.0784%" height="15" fill="rgb(249,41,3)" fg:x="513" fg:w="1"/><text x="40.4853%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3137%" y="341" width="0.0784%" height="15" fill="rgb(215,14,33)" fg:x="514" fg:w="1"/><text x="40.5637%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3137%" y="325" width="0.0784%" height="15" fill="rgb(209,146,24)" fg:x="514" fg:w="1"/><text x="40.5637%" y="335.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (7 samples, 0.55%)</title><rect x="39.9216%" y="437" width="0.5490%" height="15" fill="rgb(219,51,47)" fg:x="509" fg:w="7"/><text x="40.1716%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.55%)</title><rect x="39.9216%" y="421" width="0.5490%" height="15" fill="rgb(234,217,40)" fg:x="509" fg:w="7"/><text x="40.1716%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="40.1569%" y="405" width="0.3137%" height="15" fill="rgb(228,34,26)" fg:x="512" fg:w="4"/><text x="40.4069%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="40.2353%" y="389" width="0.2353%" height="15" fill="rgb(224,50,29)" fg:x="513" fg:w="3"/><text x="40.4853%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="40.3137%" y="373" width="0.1569%" height="15" fill="rgb(205,79,51)" fg:x="514" fg:w="2"/><text x="40.5637%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.3137%" y="357" width="0.1569%" height="15" fill="rgb(218,136,28)" fg:x="514" fg:w="2"/><text x="40.5637%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.3922%" y="341" width="0.0784%" height="15" fill="rgb(220,150,10)" fg:x="515" fg:w="1"/><text x="40.6422%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3922%" y="325" width="0.0784%" height="15" fill="rgb(242,158,47)" fg:x="515" fg:w="1"/><text x="40.6422%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.3922%" y="309" width="0.0784%" height="15" fill="rgb(209,68,0)" fg:x="515" fg:w="1"/><text x="40.6422%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3922%" y="293" width="0.0784%" height="15" fill="rgb(208,13,41)" fg:x="515" fg:w="1"/><text x="40.6422%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.6275%" y="421" width="0.0784%" height="15" fill="rgb(226,201,7)" fg:x="518" fg:w="1"/><text x="40.8775%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.6275%" y="405" width="0.0784%" height="15" fill="rgb(236,103,26)" fg:x="518" fg:w="1"/><text x="40.8775%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="40.6275%" y="389" width="0.0784%" height="15" fill="rgb(243,162,8)" fg:x="518" fg:w="1"/><text x="40.8775%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7059%" y="389" width="0.0784%" height="15" fill="rgb(237,225,11)" fg:x="519" fg:w="1"/><text x="40.9559%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="40.7843%" y="389" width="0.0784%" height="15" fill="rgb(247,186,32)" fg:x="520" fg:w="1"/><text x="41.0343%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.7843%" y="373" width="0.0784%" height="15" fill="rgb(215,26,28)" fg:x="520" fg:w="1"/><text x="41.0343%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9412%" y="341" width="0.0784%" height="15" fill="rgb(208,121,6)" fg:x="522" fg:w="1"/><text x="41.1912%" y="351.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.63%)</title><rect x="40.4706%" y="437" width="0.6275%" height="15" fill="rgb(225,91,3)" fg:x="516" fg:w="8"/><text x="40.7206%" y="447.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (5 samples, 0.39%)</title><rect x="40.7059%" y="421" width="0.3922%" height="15" fill="rgb(246,119,36)" fg:x="519" fg:w="5"/><text x="40.9559%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.39%)</title><rect x="40.7059%" y="405" width="0.3922%" height="15" fill="rgb(254,173,2)" fg:x="519" fg:w="5"/><text x="40.9559%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="40.8627%" y="389" width="0.2353%" height="15" fill="rgb(209,87,54)" fg:x="521" fg:w="3"/><text x="41.1127%" y="399.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="40.8627%" y="373" width="0.2353%" height="15" fill="rgb(223,216,20)" fg:x="521" fg:w="3"/><text x="41.1127%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="40.8627%" y="357" width="0.2353%" height="15" fill="rgb(220,31,8)" fg:x="521" fg:w="3"/><text x="41.1127%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0196%" y="341" width="0.0784%" height="15" fill="rgb(220,185,15)" fg:x="523" fg:w="1"/><text x="41.2696%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0196%" y="325" width="0.0784%" height="15" fill="rgb(247,190,50)" fg:x="523" fg:w="1"/><text x="41.2696%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.0196%" y="309" width="0.0784%" height="15" fill="rgb(239,173,47)" fg:x="523" fg:w="1"/><text x="41.2696%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="41.0980%" y="389" width="0.0784%" height="15" fill="rgb(218,190,42)" fg:x="524" fg:w="1"/><text x="41.3480%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.0980%" y="373" width="0.0784%" height="15" fill="rgb(251,207,16)" fg:x="524" fg:w="1"/><text x="41.3480%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.0980%" y="357" width="0.0784%" height="15" fill="rgb(222,199,47)" fg:x="524" fg:w="1"/><text x="41.3480%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.0980%" y="341" width="0.0784%" height="15" fill="rgb(245,190,7)" fg:x="524" fg:w="1"/><text x="41.3480%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.0980%" y="325" width="0.0784%" height="15" fill="rgb(239,85,38)" fg:x="524" fg:w="1"/><text x="41.3480%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.1765%" y="373" width="0.0784%" height="15" fill="rgb(229,69,51)" fg:x="525" fg:w="1"/><text x="41.4265%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2549%" y="357" width="0.0784%" height="15" fill="rgb(231,104,51)" fg:x="526" fg:w="1"/><text x="41.5049%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2549%" y="341" width="0.0784%" height="15" fill="rgb(235,49,4)" fg:x="526" fg:w="1"/><text x="41.5049%" y="351.50"></text></g><g><title>plugins_core::build::Build::occupying (43 samples, 3.37%)</title><rect x="38.0392%" y="469" width="3.3725%" height="15" fill="rgb(246,166,20)" fg:x="485" fg:w="43"/><text x="38.2892%" y="479.50">plu..</text></g><g><title>plugins_core::tools::set_occupying (21 samples, 1.65%)</title><rect x="39.7647%" y="453" width="1.6471%" height="15" fill="rgb(230,119,37)" fg:x="507" fg:w="21"/><text x="40.0147%" y="463.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.31%)</title><rect x="41.0980%" y="437" width="0.3137%" height="15" fill="rgb(234,77,34)" fg:x="524" fg:w="4"/><text x="41.3480%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="41.0980%" y="421" width="0.3137%" height="15" fill="rgb(211,222,33)" fg:x="524" fg:w="4"/><text x="41.3480%" y="431.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="41.0980%" y="405" width="0.3137%" height="15" fill="rgb(226,45,42)" fg:x="524" fg:w="4"/><text x="41.3480%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="41.1765%" y="389" width="0.2353%" height="15" fill="rgb(215,174,28)" fg:x="525" fg:w="3"/><text x="41.4265%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.2549%" y="373" width="0.1569%" height="15" fill="rgb(254,173,49)" fg:x="526" fg:w="2"/><text x="41.5049%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="41.3333%" y="357" width="0.0784%" height="15" fill="rgb(229,191,6)" fg:x="527" fg:w="1"/><text x="41.5833%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.3333%" y="341" width="0.0784%" height="15" fill="rgb(212,145,22)" fg:x="527" fg:w="1"/><text x="41.5833%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.3333%" y="325" width="0.0784%" height="15" fill="rgb(226,6,51)" fg:x="527" fg:w="1"/><text x="41.5833%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="41.4902%" y="421" width="0.0784%" height="15" fill="rgb(227,128,8)" fg:x="529" fg:w="1"/><text x="41.7402%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.4902%" y="405" width="0.0784%" height="15" fill="rgb(205,24,10)" fg:x="529" fg:w="1"/><text x="41.7402%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.4902%" y="389" width="0.0784%" height="15" fill="rgb(217,147,27)" fg:x="529" fg:w="1"/><text x="41.7402%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4902%" y="373" width="0.0784%" height="15" fill="rgb(250,82,42)" fg:x="529" fg:w="1"/><text x="41.7402%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.4902%" y="357" width="0.0784%" height="15" fill="rgb(248,93,17)" fg:x="529" fg:w="1"/><text x="41.7402%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4902%" y="341" width="0.0784%" height="15" fill="rgb(254,212,40)" fg:x="529" fg:w="1"/><text x="41.7402%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.4902%" y="325" width="0.0784%" height="15" fill="rgb(229,209,2)" fg:x="529" fg:w="1"/><text x="41.7402%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5686%" y="421" width="0.0784%" height="15" fill="rgb(211,50,43)" fg:x="530" fg:w="1"/><text x="41.8186%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="41.6471%" y="421" width="0.0784%" height="15" fill="rgb(245,196,29)" fg:x="531" fg:w="1"/><text x="41.8971%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="41.6471%" y="405" width="0.0784%" height="15" fill="rgb(216,132,13)" fg:x="531" fg:w="1"/><text x="41.8971%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.6471%" y="389" width="0.0784%" height="15" fill="rgb(251,108,21)" fg:x="531" fg:w="1"/><text x="41.8971%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="41.6471%" y="373" width="0.0784%" height="15" fill="rgb(229,174,54)" fg:x="531" fg:w="1"/><text x="41.8971%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.6471%" y="357" width="0.0784%" height="15" fill="rgb(211,175,47)" fg:x="531" fg:w="1"/><text x="41.8971%" y="367.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="41.7255%" y="373" width="0.0784%" height="15" fill="rgb(234,5,37)" fg:x="532" fg:w="1"/><text x="41.9755%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="41.7255%" y="357" width="0.0784%" height="15" fill="rgb(244,150,43)" fg:x="532" fg:w="1"/><text x="41.9755%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="41.7255%" y="341" width="0.0784%" height="15" fill="rgb(242,172,38)" fg:x="532" fg:w="1"/><text x="41.9755%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.7255%" y="325" width="0.0784%" height="15" fill="rgb(205,27,8)" fg:x="532" fg:w="1"/><text x="41.9755%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="41.7255%" y="309" width="0.0784%" height="15" fill="rgb(217,57,3)" fg:x="532" fg:w="1"/><text x="41.9755%" y="319.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="41.7255%" y="293" width="0.0784%" height="15" fill="rgb(242,21,38)" fg:x="532" fg:w="1"/><text x="41.9755%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="41.7255%" y="277" width="0.0784%" height="15" fill="rgb(209,64,43)" fg:x="532" fg:w="1"/><text x="41.9755%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.7255%" y="261" width="0.0784%" height="15" fill="rgb(222,2,46)" fg:x="532" fg:w="1"/><text x="41.9755%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.7255%" y="245" width="0.0784%" height="15" fill="rgb(218,19,44)" fg:x="532" fg:w="1"/><text x="41.9755%" y="255.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="41.7255%" y="405" width="0.1569%" height="15" fill="rgb(240,203,42)" fg:x="532" fg:w="2"/><text x="41.9755%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="41.7255%" y="389" width="0.1569%" height="15" fill="rgb(229,23,45)" fg:x="532" fg:w="2"/><text x="41.9755%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.8039%" y="373" width="0.0784%" height="15" fill="rgb(205,228,51)" fg:x="533" fg:w="1"/><text x="42.0539%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8039%" y="357" width="0.0784%" height="15" fill="rgb(239,36,20)" fg:x="533" fg:w="1"/><text x="42.0539%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8039%" y="341" width="0.0784%" height="15" fill="rgb(248,172,27)" fg:x="533" fg:w="1"/><text x="42.0539%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8039%" y="325" width="0.0784%" height="15" fill="rgb(244,55,32)" fg:x="533" fg:w="1"/><text x="42.0539%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8039%" y="309" width="0.0784%" height="15" fill="rgb(215,97,16)" fg:x="533" fg:w="1"/><text x="42.0539%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8039%" y="293" width="0.0784%" height="15" fill="rgb(224,80,29)" fg:x="533" fg:w="1"/><text x="42.0539%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8039%" y="277" width="0.0784%" height="15" fill="rgb(216,93,47)" fg:x="533" fg:w="1"/><text x="42.0539%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="41.7255%" y="421" width="0.2353%" height="15" fill="rgb(238,159,10)" fg:x="532" fg:w="3"/><text x="41.9755%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="41.8824%" y="405" width="0.0784%" height="15" fill="rgb(223,98,29)" fg:x="534" fg:w="1"/><text x="42.1324%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9608%" y="373" width="0.0784%" height="15" fill="rgb(210,176,23)" fg:x="535" fg:w="1"/><text x="42.2108%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9608%" y="357" width="0.0784%" height="15" fill="rgb(242,162,27)" fg:x="535" fg:w="1"/><text x="42.2108%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9608%" y="341" width="0.0784%" height="15" fill="rgb(245,109,32)" fg:x="535" fg:w="1"/><text x="42.2108%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9608%" y="325" width="0.0784%" height="15" fill="rgb(248,87,8)" fg:x="535" fg:w="1"/><text x="42.2108%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9608%" y="309" width="0.0784%" height="15" fill="rgb(250,160,50)" fg:x="535" fg:w="1"/><text x="42.2108%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.9608%" y="293" width="0.0784%" height="15" fill="rgb(246,165,25)" fg:x="535" fg:w="1"/><text x="42.2108%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.9608%" y="277" width="0.0784%" height="15" fill="rgb(249,219,3)" fg:x="535" fg:w="1"/><text x="42.2108%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.9608%" y="261" width="0.0784%" height="15" fill="rgb(226,66,5)" fg:x="535" fg:w="1"/><text x="42.2108%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9608%" y="245" width="0.0784%" height="15" fill="rgb(250,220,43)" fg:x="535" fg:w="1"/><text x="42.2108%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9608%" y="229" width="0.0784%" height="15" fill="rgb(225,111,31)" fg:x="535" fg:w="1"/><text x="42.2108%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.9608%" y="213" width="0.0784%" height="15" fill="rgb(248,106,18)" fg:x="535" fg:w="1"/><text x="42.2108%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.9608%" y="197" width="0.0784%" height="15" fill="rgb(220,226,45)" fg:x="535" fg:w="1"/><text x="42.2108%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.9608%" y="181" width="0.0784%" height="15" fill="rgb(208,58,53)" fg:x="535" fg:w="1"/><text x="42.2108%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.9608%" y="165" width="0.0784%" height="15" fill="rgb(209,133,1)" fg:x="535" fg:w="1"/><text x="42.2108%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9608%" y="149" width="0.0784%" height="15" fill="rgb(228,216,27)" fg:x="535" fg:w="1"/><text x="42.2108%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.9608%" y="405" width="0.1569%" height="15" fill="rgb(238,155,2)" fg:x="535" fg:w="2"/><text x="42.2108%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.9608%" y="389" width="0.1569%" height="15" fill="rgb(244,99,37)" fg:x="535" fg:w="2"/><text x="42.2108%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.0392%" y="373" width="0.0784%" height="15" fill="rgb(254,32,3)" fg:x="536" fg:w="1"/><text x="42.2892%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0392%" y="357" width="0.0784%" height="15" fill="rgb(234,46,50)" fg:x="536" fg:w="1"/><text x="42.2892%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.0392%" y="341" width="0.0784%" height="15" fill="rgb(232,118,51)" fg:x="536" fg:w="1"/><text x="42.2892%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0392%" y="325" width="0.0784%" height="15" fill="rgb(207,24,32)" fg:x="536" fg:w="1"/><text x="42.2892%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.0392%" y="309" width="0.0784%" height="15" fill="rgb(208,107,43)" fg:x="536" fg:w="1"/><text x="42.2892%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0392%" y="293" width="0.0784%" height="15" fill="rgb(231,28,9)" fg:x="536" fg:w="1"/><text x="42.2892%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="41.9608%" y="421" width="0.2353%" height="15" fill="rgb(241,204,15)" fg:x="535" fg:w="3"/><text x="42.2108%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.1176%" y="405" width="0.0784%" height="15" fill="rgb(214,54,15)" fg:x="537" fg:w="1"/><text x="42.3676%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.1176%" y="389" width="0.0784%" height="15" fill="rgb(230,12,28)" fg:x="537" fg:w="1"/><text x="42.3676%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.1176%" y="373" width="0.0784%" height="15" fill="rgb(221,171,5)" fg:x="537" fg:w="1"/><text x="42.3676%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.1176%" y="357" width="0.0784%" height="15" fill="rgb(207,72,25)" fg:x="537" fg:w="1"/><text x="42.3676%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.1176%" y="341" width="0.0784%" height="15" fill="rgb(249,79,37)" fg:x="537" fg:w="1"/><text x="42.3676%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.1176%" y="325" width="0.0784%" height="15" fill="rgb(209,98,49)" fg:x="537" fg:w="1"/><text x="42.3676%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="42.1176%" y="309" width="0.0784%" height="15" fill="rgb(221,62,13)" fg:x="537" fg:w="1"/><text x="42.3676%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="42.1176%" y="293" width="0.0784%" height="15" fill="rgb(223,39,6)" fg:x="537" fg:w="1"/><text x="42.3676%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="42.1176%" y="277" width="0.0784%" height="15" fill="rgb(246,163,20)" fg:x="537" fg:w="1"/><text x="42.3676%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="42.1176%" y="261" width="0.0784%" height="15" fill="rgb(211,111,29)" fg:x="537" fg:w="1"/><text x="42.3676%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.1176%" y="245" width="0.0784%" height="15" fill="rgb(243,118,5)" fg:x="537" fg:w="1"/><text x="42.3676%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.1176%" y="229" width="0.0784%" height="15" fill="rgb(240,144,52)" fg:x="537" fg:w="1"/><text x="42.3676%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.1176%" y="213" width="0.0784%" height="15" fill="rgb(244,158,36)" fg:x="537" fg:w="1"/><text x="42.3676%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="42.1176%" y="197" width="0.0784%" height="15" fill="rgb(241,109,37)" fg:x="537" fg:w="1"/><text x="42.3676%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.1176%" y="181" width="0.0784%" height="15" fill="rgb(213,95,32)" fg:x="537" fg:w="1"/><text x="42.3676%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="42.1176%" y="165" width="0.0784%" height="15" fill="rgb(252,193,9)" fg:x="537" fg:w="1"/><text x="42.3676%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="42.1176%" y="149" width="0.0784%" height="15" fill="rgb(225,213,21)" fg:x="537" fg:w="1"/><text x="42.3676%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="42.1176%" y="133" width="0.0784%" height="15" fill="rgb(220,172,46)" fg:x="537" fg:w="1"/><text x="42.3676%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="42.1961%" y="405" width="0.0784%" height="15" fill="rgb(235,75,41)" fg:x="538" fg:w="1"/><text x="42.4461%" y="415.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="42.1961%" y="389" width="0.0784%" height="15" fill="rgb(213,86,9)" fg:x="538" fg:w="1"/><text x="42.4461%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="42.2745%" y="389" width="0.0784%" height="15" fill="rgb(238,127,51)" fg:x="539" fg:w="1"/><text x="42.5245%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="42.2745%" y="373" width="0.0784%" height="15" fill="rgb(215,2,54)" fg:x="539" fg:w="1"/><text x="42.5245%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.2745%" y="357" width="0.0784%" height="15" fill="rgb(245,80,6)" fg:x="539" fg:w="1"/><text x="42.5245%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.2745%" y="341" width="0.0784%" height="15" fill="rgb(233,106,42)" fg:x="539" fg:w="1"/><text x="42.5245%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.2745%" y="325" width="0.0784%" height="15" fill="rgb(244,86,38)" fg:x="539" fg:w="1"/><text x="42.5245%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.2745%" y="309" width="0.0784%" height="15" fill="rgb(242,167,7)" fg:x="539" fg:w="1"/><text x="42.5245%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.2745%" y="293" width="0.0784%" height="15" fill="rgb(218,216,3)" fg:x="539" fg:w="1"/><text x="42.5245%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.2745%" y="277" width="0.0784%" height="15" fill="rgb(206,136,36)" fg:x="539" fg:w="1"/><text x="42.5245%" y="287.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="42.2745%" y="261" width="0.0784%" height="15" fill="rgb(206,206,15)" fg:x="539" fg:w="1"/><text x="42.5245%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="42.3529%" y="357" width="0.0784%" height="15" fill="rgb(207,163,34)" fg:x="540" fg:w="1"/><text x="42.6029%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.3529%" y="341" width="0.0784%" height="15" fill="rgb(240,127,22)" fg:x="540" fg:w="1"/><text x="42.6029%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.3529%" y="325" width="0.0784%" height="15" fill="rgb(227,49,5)" fg:x="540" fg:w="1"/><text x="42.6029%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.3529%" y="309" width="0.0784%" height="15" fill="rgb(231,8,6)" fg:x="540" fg:w="1"/><text x="42.6029%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3529%" y="293" width="0.0784%" height="15" fill="rgb(223,21,24)" fg:x="540" fg:w="1"/><text x="42.6029%" y="303.50"></text></g><g><title>plugins_core::build::Build::into_entry (14 samples, 1.10%)</title><rect x="41.4118%" y="453" width="1.0980%" height="15" fill="rgb(244,44,52)" fg:x="528" fg:w="14"/><text x="41.6618%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.10%)</title><rect x="41.4118%" y="437" width="1.0980%" height="15" fill="rgb(207,73,28)" fg:x="528" fg:w="14"/><text x="41.6618%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.31%)</title><rect x="42.1961%" y="421" width="0.3137%" height="15" fill="rgb(234,215,10)" fg:x="538" fg:w="4"/><text x="42.4461%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="42.2745%" y="405" width="0.2353%" height="15" fill="rgb(236,85,3)" fg:x="539" fg:w="3"/><text x="42.5245%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="42.3529%" y="389" width="0.1569%" height="15" fill="rgb(236,102,39)" fg:x="540" fg:w="2"/><text x="42.6029%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="42.3529%" y="373" width="0.1569%" height="15" fill="rgb(243,50,8)" fg:x="540" fg:w="2"/><text x="42.6029%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.4314%" y="357" width="0.0784%" height="15" fill="rgb(207,111,4)" fg:x="541" fg:w="1"/><text x="42.6814%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.4314%" y="341" width="0.0784%" height="15" fill="rgb(230,52,42)" fg:x="541" fg:w="1"/><text x="42.6814%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (263 samples, 20.63%)</title><rect x="22.0392%" y="485" width="20.6275%" height="15" fill="rgb(252,178,50)" fg:x="281" fg:w="263"/><text x="22.2892%" y="495.50">plugins_core::build::BuildSurrou..</text></g><g><title>plugins_core::build::Build::wearing (16 samples, 1.25%)</title><rect x="41.4118%" y="469" width="1.2549%" height="15" fill="rgb(234,46,35)" fg:x="528" fg:w="16"/><text x="41.6618%" y="479.50"></text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="42.5098%" y="453" width="0.1569%" height="15" fill="rgb(228,69,37)" fg:x="542" fg:w="2"/><text x="42.7598%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="42.5098%" y="437" width="0.1569%" height="15" fill="rgb(221,21,11)" fg:x="542" fg:w="2"/><text x="42.7598%" y="447.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="42.5882%" y="421" width="0.0784%" height="15" fill="rgb(223,56,9)" fg:x="543" fg:w="1"/><text x="42.8382%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="42.5882%" y="405" width="0.0784%" height="15" fill="rgb(234,30,19)" fg:x="543" fg:w="1"/><text x="42.8382%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="42.6667%" y="485" width="0.0784%" height="15" fill="rgb(211,64,54)" fg:x="544" fg:w="1"/><text x="42.9167%" y="495.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="42.6667%" y="469" width="0.0784%" height="15" fill="rgb(250,189,5)" fg:x="544" fg:w="1"/><text x="42.9167%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="42.8235%" y="421" width="0.0784%" height="15" fill="rgb(214,180,13)" fg:x="546" fg:w="1"/><text x="43.0735%" y="431.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="42.8235%" y="405" width="0.0784%" height="15" fill="rgb(238,40,40)" fg:x="546" fg:w="1"/><text x="43.0735%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.8235%" y="389" width="0.0784%" height="15" fill="rgb(214,101,38)" fg:x="546" fg:w="1"/><text x="43.0735%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="42.9020%" y="389" width="0.1569%" height="15" fill="rgb(242,65,53)" fg:x="547" fg:w="2"/><text x="43.1520%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="42.9020%" y="373" width="0.1569%" height="15" fill="rgb(230,22,45)" fg:x="547" fg:w="2"/><text x="43.1520%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="42.9020%" y="357" width="0.1569%" height="15" fill="rgb(223,77,1)" fg:x="547" fg:w="2"/><text x="43.1520%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.9804%" y="341" width="0.0784%" height="15" fill="rgb(227,33,37)" fg:x="548" fg:w="1"/><text x="43.2304%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="42.9020%" y="421" width="0.2353%" height="15" fill="rgb(224,148,39)" fg:x="547" fg:w="3"/><text x="43.1520%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="42.9020%" y="405" width="0.2353%" height="15" fill="rgb(232,212,39)" fg:x="547" fg:w="3"/><text x="43.1520%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0588%" y="389" width="0.0784%" height="15" fill="rgb(251,172,7)" fg:x="549" fg:w="1"/><text x="43.3088%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0588%" y="373" width="0.0784%" height="15" fill="rgb(219,39,9)" fg:x="549" fg:w="1"/><text x="43.3088%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0588%" y="357" width="0.0784%" height="15" fill="rgb(228,118,14)" fg:x="549" fg:w="1"/><text x="43.3088%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0588%" y="341" width="0.0784%" height="15" fill="rgb(207,140,10)" fg:x="549" fg:w="1"/><text x="43.3088%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.0588%" y="325" width="0.0784%" height="15" fill="rgb(227,111,53)" fg:x="549" fg:w="1"/><text x="43.3088%" y="335.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="43.1373%" y="421" width="0.0784%" height="15" fill="rgb(216,165,16)" fg:x="550" fg:w="1"/><text x="43.3873%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="43.1373%" y="405" width="0.0784%" height="15" fill="rgb(226,111,18)" fg:x="550" fg:w="1"/><text x="43.3873%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.1373%" y="389" width="0.0784%" height="15" fill="rgb(251,27,17)" fg:x="550" fg:w="1"/><text x="43.3873%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2157%" y="341" width="0.0784%" height="15" fill="rgb(254,69,9)" fg:x="551" fg:w="1"/><text x="43.4657%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2157%" y="325" width="0.0784%" height="15" fill="rgb(234,140,37)" fg:x="551" fg:w="1"/><text x="43.4657%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2157%" y="309" width="0.0784%" height="15" fill="rgb(220,93,8)" fg:x="551" fg:w="1"/><text x="43.4657%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.2157%" y="293" width="0.0784%" height="15" fill="rgb(236,113,3)" fg:x="551" fg:w="1"/><text x="43.4657%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.2157%" y="277" width="0.0784%" height="15" fill="rgb(234,108,23)" fg:x="551" fg:w="1"/><text x="43.4657%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.2157%" y="261" width="0.0784%" height="15" fill="rgb(205,114,34)" fg:x="551" fg:w="1"/><text x="43.4657%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.2157%" y="245" width="0.0784%" height="15" fill="rgb(236,200,45)" fg:x="551" fg:w="1"/><text x="43.4657%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.2157%" y="229" width="0.0784%" height="15" fill="rgb(227,194,29)" fg:x="551" fg:w="1"/><text x="43.4657%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.2157%" y="213" width="0.0784%" height="15" fill="rgb(250,76,42)" fg:x="551" fg:w="1"/><text x="43.4657%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.2157%" y="197" width="0.0784%" height="15" fill="rgb(208,128,8)" fg:x="551" fg:w="1"/><text x="43.4657%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.2157%" y="181" width="0.0784%" height="15" fill="rgb(229,209,35)" fg:x="551" fg:w="1"/><text x="43.4657%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.2157%" y="165" width="0.0784%" height="15" fill="rgb(215,39,53)" fg:x="551" fg:w="1"/><text x="43.4657%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.2157%" y="149" width="0.0784%" height="15" fill="rgb(219,123,41)" fg:x="551" fg:w="1"/><text x="43.4657%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.2157%" y="133" width="0.0784%" height="15" fill="rgb(212,158,18)" fg:x="551" fg:w="1"/><text x="43.4657%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2157%" y="117" width="0.0784%" height="15" fill="rgb(234,196,53)" fg:x="551" fg:w="1"/><text x="43.4657%" y="127.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="43.2157%" y="373" width="0.1569%" height="15" fill="rgb(210,139,12)" fg:x="551" fg:w="2"/><text x="43.4657%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="43.2157%" y="357" width="0.1569%" height="15" fill="rgb(220,116,54)" fg:x="551" fg:w="2"/><text x="43.4657%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="43.2941%" y="341" width="0.0784%" height="15" fill="rgb(247,103,28)" fg:x="552" fg:w="1"/><text x="43.5441%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.2941%" y="325" width="0.0784%" height="15" fill="rgb(253,156,45)" fg:x="552" fg:w="1"/><text x="43.5441%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="43.2941%" y="309" width="0.0784%" height="15" fill="rgb(237,157,52)" fg:x="552" fg:w="1"/><text x="43.5441%" y="319.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="43.2941%" y="293" width="0.0784%" height="15" fill="rgb(253,112,16)" fg:x="552" fg:w="1"/><text x="43.5441%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="43.2941%" y="277" width="0.0784%" height="15" fill="rgb(234,70,18)" fg:x="552" fg:w="1"/><text x="43.5441%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2941%" y="261" width="0.0784%" height="15" fill="rgb(247,138,19)" fg:x="552" fg:w="1"/><text x="43.5441%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.3725%" y="357" width="0.0784%" height="15" fill="rgb(207,171,1)" fg:x="553" fg:w="1"/><text x="43.6225%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="43.2157%" y="421" width="0.3137%" height="15" fill="rgb(239,213,3)" fg:x="551" fg:w="4"/><text x="43.4657%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.31%)</title><rect x="43.2157%" y="405" width="0.3137%" height="15" fill="rgb(226,112,4)" fg:x="551" fg:w="4"/><text x="43.4657%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.31%)</title><rect x="43.2157%" y="389" width="0.3137%" height="15" fill="rgb(252,170,12)" fg:x="551" fg:w="4"/><text x="43.4657%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.3725%" y="373" width="0.1569%" height="15" fill="rgb(241,106,13)" fg:x="553" fg:w="2"/><text x="43.6225%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.4510%" y="357" width="0.0784%" height="15" fill="rgb(225,73,23)" fg:x="554" fg:w="1"/><text x="43.7010%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4510%" y="341" width="0.0784%" height="15" fill="rgb(251,227,29)" fg:x="554" fg:w="1"/><text x="43.7010%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.4510%" y="325" width="0.0784%" height="15" fill="rgb(237,144,13)" fg:x="554" fg:w="1"/><text x="43.7010%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4510%" y="309" width="0.0784%" height="15" fill="rgb(232,106,46)" fg:x="554" fg:w="1"/><text x="43.7010%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4510%" y="293" width="0.0784%" height="15" fill="rgb(245,154,53)" fg:x="554" fg:w="1"/><text x="43.7010%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.5294%" y="309" width="0.0784%" height="15" fill="rgb(212,119,47)" fg:x="555" fg:w="1"/><text x="43.7794%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="43.5294%" y="421" width="0.1569%" height="15" fill="rgb(253,135,25)" fg:x="555" fg:w="2"/><text x="43.7794%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="43.5294%" y="405" width="0.1569%" height="15" fill="rgb(253,208,39)" fg:x="555" fg:w="2"/><text x="43.7794%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.5294%" y="389" width="0.1569%" height="15" fill="rgb(226,64,12)" fg:x="555" fg:w="2"/><text x="43.7794%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.5294%" y="373" width="0.1569%" height="15" fill="rgb(214,162,37)" fg:x="555" fg:w="2"/><text x="43.7794%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5294%" y="357" width="0.1569%" height="15" fill="rgb(250,104,5)" fg:x="555" fg:w="2"/><text x="43.7794%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.5294%" y="341" width="0.1569%" height="15" fill="rgb(220,202,50)" fg:x="555" fg:w="2"/><text x="43.7794%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5294%" y="325" width="0.1569%" height="15" fill="rgb(248,67,38)" fg:x="555" fg:w="2"/><text x="43.7794%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.6078%" y="309" width="0.0784%" height="15" fill="rgb(242,94,35)" fg:x="556" fg:w="1"/><text x="43.8578%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.6078%" y="293" width="0.0784%" height="15" fill="rgb(209,78,37)" fg:x="556" fg:w="1"/><text x="43.8578%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.6863%" y="389" width="0.0784%" height="15" fill="rgb(230,126,47)" fg:x="557" fg:w="1"/><text x="43.9363%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.6863%" y="373" width="0.0784%" height="15" fill="rgb(222,110,35)" fg:x="557" fg:w="1"/><text x="43.9363%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.6863%" y="357" width="0.0784%" height="15" fill="rgb(233,154,20)" fg:x="557" fg:w="1"/><text x="43.9363%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.6863%" y="341" width="0.0784%" height="15" fill="rgb(223,53,50)" fg:x="557" fg:w="1"/><text x="43.9363%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.10%)</title><rect x="42.7451%" y="437" width="1.0980%" height="15" fill="rgb(251,27,26)" fg:x="545" fg:w="14"/><text x="42.9951%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="43.6863%" y="421" width="0.1569%" height="15" fill="rgb(223,189,16)" fg:x="557" fg:w="2"/><text x="43.9363%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="43.6863%" y="405" width="0.1569%" height="15" fill="rgb(207,5,54)" fg:x="557" fg:w="2"/><text x="43.9363%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="43.7647%" y="389" width="0.0784%" height="15" fill="rgb(254,124,50)" fg:x="558" fg:w="1"/><text x="44.0147%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.7647%" y="373" width="0.0784%" height="15" fill="rgb(253,193,24)" fg:x="558" fg:w="1"/><text x="44.0147%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.7647%" y="357" width="0.0784%" height="15" fill="rgb(235,170,24)" fg:x="558" fg:w="1"/><text x="44.0147%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.7647%" y="341" width="0.0784%" height="15" fill="rgb(222,212,52)" fg:x="558" fg:w="1"/><text x="44.0147%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.7647%" y="325" width="0.0784%" height="15" fill="rgb(223,17,45)" fg:x="558" fg:w="1"/><text x="44.0147%" y="335.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (15 samples, 1.18%)</title><rect x="42.7451%" y="485" width="1.1765%" height="15" fill="rgb(227,103,26)" fg:x="545" fg:w="15"/><text x="42.9951%" y="495.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.18%)</title><rect x="42.7451%" y="469" width="1.1765%" height="15" fill="rgb(251,151,25)" fg:x="545" fg:w="15"/><text x="42.9951%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (15 samples, 1.18%)</title><rect x="42.7451%" y="453" width="1.1765%" height="15" fill="rgb(248,144,29)" fg:x="545" fg:w="15"/><text x="42.9951%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.8431%" y="437" width="0.0784%" height="15" fill="rgb(245,97,16)" fg:x="559" fg:w="1"/><text x="44.0931%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.8431%" y="421" width="0.0784%" height="15" fill="rgb(220,200,29)" fg:x="559" fg:w="1"/><text x="44.0931%" y="431.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="43.9216%" y="453" width="0.1569%" height="15" fill="rgb(206,38,29)" fg:x="560" fg:w="2"/><text x="44.1716%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="43.9216%" y="437" width="0.1569%" height="15" fill="rgb(245,19,52)" fg:x="560" fg:w="2"/><text x="44.1716%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="44.0000%" y="421" width="0.0784%" height="15" fill="rgb(205,67,43)" fg:x="561" fg:w="1"/><text x="44.2500%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.0000%" y="405" width="0.0784%" height="15" fill="rgb(217,128,23)" fg:x="561" fg:w="1"/><text x="44.2500%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.0000%" y="389" width="0.0784%" height="15" fill="rgb(210,109,28)" fg:x="561" fg:w="1"/><text x="44.2500%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="43.9216%" y="469" width="0.2353%" height="15" fill="rgb(233,181,7)" fg:x="560" fg:w="3"/><text x="44.1716%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.0784%" y="453" width="0.0784%" height="15" fill="rgb(244,11,22)" fg:x="562" fg:w="1"/><text x="44.3284%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="44.1569%" y="437" width="0.0784%" height="15" fill="rgb(205,124,54)" fg:x="563" fg:w="1"/><text x="44.4069%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.1569%" y="421" width="0.0784%" height="15" fill="rgb(218,21,27)" fg:x="563" fg:w="1"/><text x="44.4069%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.1569%" y="405" width="0.0784%" height="15" fill="rgb(224,153,33)" fg:x="563" fg:w="1"/><text x="44.4069%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.1569%" y="389" width="0.0784%" height="15" fill="rgb(240,219,28)" fg:x="563" fg:w="1"/><text x="44.4069%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="44.3137%" y="373" width="0.0784%" height="15" fill="rgb(214,80,29)" fg:x="565" fg:w="1"/><text x="44.5637%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4706%" y="357" width="0.0784%" height="15" fill="rgb(247,148,44)" fg:x="567" fg:w="1"/><text x="44.7206%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4706%" y="341" width="0.0784%" height="15" fill="rgb(243,110,30)" fg:x="567" fg:w="1"/><text x="44.7206%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.4706%" y="325" width="0.0784%" height="15" fill="rgb(243,173,41)" fg:x="567" fg:w="1"/><text x="44.7206%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="44.5490%" y="341" width="0.0784%" height="15" fill="rgb(225,160,47)" fg:x="568" fg:w="1"/><text x="44.7990%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6275%" y="309" width="0.0784%" height="15" fill="rgb(215,44,21)" fg:x="569" fg:w="1"/><text x="44.8775%" y="319.50"></text></g><g><title>kernel::model::props::save_props (6 samples, 0.47%)</title><rect x="44.3137%" y="389" width="0.4706%" height="15" fill="rgb(248,90,3)" fg:x="565" fg:w="6"/><text x="44.5637%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.39%)</title><rect x="44.3922%" y="373" width="0.3922%" height="15" fill="rgb(220,196,49)" fg:x="566" fg:w="5"/><text x="44.6422%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="44.5490%" y="357" width="0.2353%" height="15" fill="rgb(217,138,14)" fg:x="568" fg:w="3"/><text x="44.7990%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="44.6275%" y="341" width="0.1569%" height="15" fill="rgb(219,111,20)" fg:x="569" fg:w="2"/><text x="44.8775%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="44.6275%" y="325" width="0.1569%" height="15" fill="rgb(218,114,4)" fg:x="569" fg:w="2"/><text x="44.8775%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7059%" y="309" width="0.0784%" height="15" fill="rgb(238,133,3)" fg:x="570" fg:w="1"/><text x="44.9559%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7059%" y="293" width="0.0784%" height="15" fill="rgb(224,95,0)" fg:x="570" fg:w="1"/><text x="44.9559%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="44.7059%" y="277" width="0.0784%" height="15" fill="rgb(220,169,35)" fg:x="570" fg:w="1"/><text x="44.9559%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.78%)</title><rect x="44.2353%" y="437" width="0.7843%" height="15" fill="rgb(242,116,47)" fg:x="564" fg:w="10"/><text x="44.4853%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.71%)</title><rect x="44.3137%" y="421" width="0.7059%" height="15" fill="rgb(251,42,20)" fg:x="565" fg:w="9"/><text x="44.5637%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.71%)</title><rect x="44.3137%" y="405" width="0.7059%" height="15" fill="rgb(234,7,34)" fg:x="565" fg:w="9"/><text x="44.5637%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="44.7843%" y="389" width="0.2353%" height="15" fill="rgb(243,208,13)" fg:x="571" fg:w="3"/><text x="45.0343%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.7843%" y="373" width="0.2353%" height="15" fill="rgb(227,33,28)" fg:x="571" fg:w="3"/><text x="45.0343%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.7843%" y="357" width="0.2353%" height="15" fill="rgb(250,47,37)" fg:x="571" fg:w="3"/><text x="45.0343%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.7843%" y="341" width="0.2353%" height="15" fill="rgb(235,111,52)" fg:x="571" fg:w="3"/><text x="45.0343%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.8627%" y="325" width="0.1569%" height="15" fill="rgb(223,64,28)" fg:x="572" fg:w="2"/><text x="45.1127%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.8627%" y="309" width="0.1569%" height="15" fill="rgb(236,67,22)" fg:x="572" fg:w="2"/><text x="45.1127%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="44.8627%" y="293" width="0.1569%" height="15" fill="rgb(243,79,24)" fg:x="572" fg:w="2"/><text x="45.1127%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="44.8627%" y="277" width="0.1569%" height="15" fill="rgb(241,225,22)" fg:x="572" fg:w="2"/><text x="45.1127%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="44.8627%" y="261" width="0.1569%" height="15" fill="rgb(228,214,26)" fg:x="572" fg:w="2"/><text x="45.1127%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.8627%" y="245" width="0.1569%" height="15" fill="rgb(219,84,52)" fg:x="572" fg:w="2"/><text x="45.1127%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.8627%" y="229" width="0.1569%" height="15" fill="rgb(220,12,22)" fg:x="572" fg:w="2"/><text x="45.1127%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="44.8627%" y="213" width="0.1569%" height="15" fill="rgb(219,9,49)" fg:x="572" fg:w="2"/><text x="45.1127%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="44.8627%" y="197" width="0.1569%" height="15" fill="rgb(237,40,43)" fg:x="572" fg:w="2"/><text x="45.1127%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="44.8627%" y="181" width="0.1569%" height="15" fill="rgb(212,189,32)" fg:x="572" fg:w="2"/><text x="45.1127%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="44.8627%" y="165" width="0.1569%" height="15" fill="rgb(247,48,9)" fg:x="572" fg:w="2"/><text x="45.1127%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.8627%" y="149" width="0.1569%" height="15" fill="rgb(247,112,3)" fg:x="572" fg:w="2"/><text x="45.1127%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="45.0196%" y="405" width="0.0784%" height="15" fill="rgb(243,110,18)" fg:x="574" fg:w="1"/><text x="45.2696%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0196%" y="389" width="0.0784%" height="15" fill="rgb(233,223,44)" fg:x="574" fg:w="1"/><text x="45.2696%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="45.0980%" y="389" width="0.0784%" height="15" fill="rgb(245,160,20)" fg:x="575" fg:w="1"/><text x="45.3480%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.39%)</title><rect x="45.0196%" y="421" width="0.3922%" height="15" fill="rgb(225,37,1)" fg:x="574" fg:w="5"/><text x="45.2696%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="45.0980%" y="405" width="0.3137%" height="15" fill="rgb(253,227,39)" fg:x="575" fg:w="4"/><text x="45.3480%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="45.1765%" y="389" width="0.2353%" height="15" fill="rgb(240,179,26)" fg:x="576" fg:w="3"/><text x="45.4265%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.1765%" y="373" width="0.2353%" height="15" fill="rgb(237,212,23)" fg:x="576" fg:w="3"/><text x="45.4265%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="45.1765%" y="357" width="0.2353%" height="15" fill="rgb(221,38,11)" fg:x="576" fg:w="3"/><text x="45.4265%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.1765%" y="341" width="0.2353%" height="15" fill="rgb(215,85,6)" fg:x="576" fg:w="3"/><text x="45.4265%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (3 samples, 0.24%)</title><rect x="45.1765%" y="325" width="0.2353%" height="15" fill="rgb(239,64,14)" fg:x="576" fg:w="3"/><text x="45.4265%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.1765%" y="309" width="0.2353%" height="15" fill="rgb(215,150,32)" fg:x="576" fg:w="3"/><text x="45.4265%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.4118%" y="389" width="0.1569%" height="15" fill="rgb(238,15,13)" fg:x="579" fg:w="2"/><text x="45.6618%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.4118%" y="373" width="0.1569%" height="15" fill="rgb(251,87,8)" fg:x="579" fg:w="2"/><text x="45.6618%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.4902%" y="357" width="0.0784%" height="15" fill="rgb(206,86,1)" fg:x="580" fg:w="1"/><text x="45.7402%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.4902%" y="341" width="0.0784%" height="15" fill="rgb(208,151,45)" fg:x="580" fg:w="1"/><text x="45.7402%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.63%)</title><rect x="45.0196%" y="437" width="0.6275%" height="15" fill="rgb(231,181,24)" fg:x="574" fg:w="8"/><text x="45.2696%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="45.4118%" y="421" width="0.2353%" height="15" fill="rgb(240,106,29)" fg:x="579" fg:w="3"/><text x="45.6618%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="45.4118%" y="405" width="0.2353%" height="15" fill="rgb(227,166,11)" fg:x="579" fg:w="3"/><text x="45.6618%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.5686%" y="389" width="0.0784%" height="15" fill="rgb(254,14,34)" fg:x="581" fg:w="1"/><text x="45.8186%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.5686%" y="373" width="0.0784%" height="15" fill="rgb(223,222,6)" fg:x="581" fg:w="1"/><text x="45.8186%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.5686%" y="357" width="0.0784%" height="15" fill="rgb(245,69,24)" fg:x="581" fg:w="1"/><text x="45.8186%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (21 samples, 1.65%)</title><rect x="44.1569%" y="453" width="1.6471%" height="15" fill="rgb(213,193,7)" fg:x="563" fg:w="21"/><text x="44.4069%" y="463.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="45.6471%" y="437" width="0.1569%" height="15" fill="rgb(237,92,51)" fg:x="582" fg:w="2"/><text x="45.8971%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="45.7255%" y="421" width="0.0784%" height="15" fill="rgb(225,194,6)" fg:x="583" fg:w="1"/><text x="45.9755%" y="431.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="45.7255%" y="405" width="0.0784%" height="15" fill="rgb(205,159,49)" fg:x="583" fg:w="1"/><text x="45.9755%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.8039%" y="421" width="0.1569%" height="15" fill="rgb(219,69,2)" fg:x="584" fg:w="2"/><text x="46.0539%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.8039%" y="405" width="0.1569%" height="15" fill="rgb(215,107,24)" fg:x="584" fg:w="2"/><text x="46.0539%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.8039%" y="389" width="0.1569%" height="15" fill="rgb(249,208,29)" fg:x="584" fg:w="2"/><text x="46.0539%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.8039%" y="373" width="0.1569%" height="15" fill="rgb(213,147,10)" fg:x="584" fg:w="2"/><text x="46.0539%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.8039%" y="357" width="0.1569%" height="15" fill="rgb(254,140,42)" fg:x="584" fg:w="2"/><text x="46.0539%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="45.8039%" y="341" width="0.1569%" height="15" fill="rgb(249,9,15)" fg:x="584" fg:w="2"/><text x="46.0539%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="45.8039%" y="325" width="0.1569%" height="15" fill="rgb(210,19,33)" fg:x="584" fg:w="2"/><text x="46.0539%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="45.8039%" y="309" width="0.1569%" height="15" fill="rgb(241,121,22)" fg:x="584" fg:w="2"/><text x="46.0539%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="45.8039%" y="293" width="0.1569%" height="15" fill="rgb(244,69,52)" fg:x="584" fg:w="2"/><text x="46.0539%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="45.8039%" y="277" width="0.1569%" height="15" fill="rgb(244,191,54)" fg:x="584" fg:w="2"/><text x="46.0539%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="45.8039%" y="261" width="0.1569%" height="15" fill="rgb(250,3,53)" fg:x="584" fg:w="2"/><text x="46.0539%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="45.8039%" y="245" width="0.1569%" height="15" fill="rgb(205,77,3)" fg:x="584" fg:w="2"/><text x="46.0539%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="45.8039%" y="229" width="0.1569%" height="15" fill="rgb(207,155,3)" fg:x="584" fg:w="2"/><text x="46.0539%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="45.8039%" y="213" width="0.1569%" height="15" fill="rgb(224,79,2)" fg:x="584" fg:w="2"/><text x="46.0539%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.8039%" y="197" width="0.1569%" height="15" fill="rgb(243,172,5)" fg:x="584" fg:w="2"/><text x="46.0539%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.9608%" y="357" width="0.0784%" height="15" fill="rgb(217,23,43)" fg:x="586" fg:w="1"/><text x="46.2108%" y="367.50"></text></g><g><title>plugins_core::build::Build::into_entry (25 samples, 1.96%)</title><rect x="44.1569%" y="469" width="1.9608%" height="15" fill="rgb(223,109,20)" fg:x="563" fg:w="25"/><text x="44.4069%" y="479.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="45.8039%" y="453" width="0.3137%" height="15" fill="rgb(232,159,21)" fg:x="584" fg:w="4"/><text x="46.0539%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="45.8039%" y="437" width="0.3137%" height="15" fill="rgb(219,58,2)" fg:x="584" fg:w="4"/><text x="46.0539%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.9608%" y="421" width="0.1569%" height="15" fill="rgb(241,56,8)" fg:x="586" fg:w="2"/><text x="46.2108%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.9608%" y="405" width="0.1569%" height="15" fill="rgb(249,10,27)" fg:x="586" fg:w="2"/><text x="46.2108%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.9608%" y="389" width="0.1569%" height="15" fill="rgb(248,177,5)" fg:x="586" fg:w="2"/><text x="46.2108%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.9608%" y="373" width="0.1569%" height="15" fill="rgb(239,12,30)" fg:x="586" fg:w="2"/><text x="46.2108%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.0392%" y="357" width="0.0784%" height="15" fill="rgb(229,164,25)" fg:x="587" fg:w="1"/><text x="46.2892%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.0392%" y="341" width="0.0784%" height="15" fill="rgb(231,217,50)" fg:x="587" fg:w="1"/><text x="46.2892%" y="351.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="46.1961%" y="453" width="0.0784%" height="15" fill="rgb(247,99,32)" fg:x="589" fg:w="1"/><text x="46.4461%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="46.1961%" y="437" width="0.0784%" height="15" fill="rgb(240,74,50)" fg:x="589" fg:w="1"/><text x="46.4461%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="46.1961%" y="421" width="0.0784%" height="15" fill="rgb(218,54,8)" fg:x="589" fg:w="1"/><text x="46.4461%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.1961%" y="405" width="0.0784%" height="15" fill="rgb(227,132,20)" fg:x="589" fg:w="1"/><text x="46.4461%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="46.1961%" y="389" width="0.0784%" height="15" fill="rgb(232,134,12)" fg:x="589" fg:w="1"/><text x="46.4461%" y="399.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (508 samples, 39.84%)</title><rect x="6.5098%" y="501" width="39.8431%" height="15" fill="rgb(250,129,18)" fg:x="83" fg:w="508"/><text x="6.7598%" y="511.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (31 samples, 2.43%)</title><rect x="43.9216%" y="485" width="2.4314%" height="15" fill="rgb(232,129,47)" fg:x="560" fg:w="31"/><text x="44.1716%" y="495.50">pl..</text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="46.1176%" y="469" width="0.2353%" height="15" fill="rgb(230,31,40)" fg:x="588" fg:w="3"/><text x="46.3676%" y="479.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="46.2745%" y="453" width="0.0784%" height="15" fill="rgb(232,126,10)" fg:x="590" fg:w="1"/><text x="46.5245%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.3529%" y="501" width="0.0784%" height="15" fill="rgb(205,46,31)" fg:x="591" fg:w="1"/><text x="46.6029%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.3529%" y="485" width="0.0784%" height="15" fill="rgb(232,37,37)" fg:x="591" fg:w="1"/><text x="46.6029%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="46.4314%" y="501" width="0.1569%" height="15" fill="rgb(240,91,16)" fg:x="592" fg:w="2"/><text x="46.6814%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.5098%" y="485" width="0.0784%" height="15" fill="rgb(224,160,9)" fg:x="593" fg:w="1"/><text x="46.7598%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.5098%" y="469" width="0.0784%" height="15" fill="rgb(215,116,14)" fg:x="593" fg:w="1"/><text x="46.7598%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.5098%" y="453" width="0.0784%" height="15" fill="rgb(235,46,36)" fg:x="593" fg:w="1"/><text x="46.7598%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.5882%" y="485" width="0.0784%" height="15" fill="rgb(238,39,28)" fg:x="594" fg:w="1"/><text x="46.8382%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="46.6667%" y="373" width="0.0784%" height="15" fill="rgb(242,125,29)" fg:x="595" fg:w="1"/><text x="46.9167%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.6667%" y="357" width="0.0784%" height="15" fill="rgb(238,211,30)" fg:x="595" fg:w="1"/><text x="46.9167%" y="367.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="46.6667%" y="421" width="0.1569%" height="15" fill="rgb(227,201,28)" fg:x="595" fg:w="2"/><text x="46.9167%" y="431.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="46.6667%" y="405" width="0.1569%" height="15" fill="rgb(238,77,29)" fg:x="595" fg:w="2"/><text x="46.9167%" y="415.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="46.6667%" y="389" width="0.1569%" height="15" fill="rgb(213,221,40)" fg:x="595" fg:w="2"/><text x="46.9167%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.7451%" y="373" width="0.0784%" height="15" fill="rgb(226,220,44)" fg:x="596" fg:w="1"/><text x="46.9951%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.7451%" y="357" width="0.0784%" height="15" fill="rgb(228,90,23)" fg:x="596" fg:w="1"/><text x="46.9951%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="46.7451%" y="341" width="0.0784%" height="15" fill="rgb(235,72,29)" fg:x="596" fg:w="1"/><text x="46.9951%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="46.7451%" y="325" width="0.0784%" height="15" fill="rgb(248,117,39)" fg:x="596" fg:w="1"/><text x="46.9951%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.7451%" y="309" width="0.0784%" height="15" fill="rgb(225,43,28)" fg:x="596" fg:w="1"/><text x="46.9951%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.7451%" y="293" width="0.0784%" height="15" fill="rgb(240,93,4)" fg:x="596" fg:w="1"/><text x="46.9951%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="46.7451%" y="277" width="0.0784%" height="15" fill="rgb(234,178,27)" fg:x="596" fg:w="1"/><text x="46.9951%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="46.7451%" y="261" width="0.0784%" height="15" fill="rgb(254,88,22)" fg:x="596" fg:w="1"/><text x="46.9951%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="46.7451%" y="245" width="0.0784%" height="15" fill="rgb(240,206,50)" fg:x="596" fg:w="1"/><text x="46.9951%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="46.7451%" y="229" width="0.0784%" height="15" fill="rgb(249,103,8)" fg:x="596" fg:w="1"/><text x="46.9951%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.7451%" y="213" width="0.0784%" height="15" fill="rgb(241,178,36)" fg:x="596" fg:w="1"/><text x="46.9951%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.7451%" y="197" width="0.0784%" height="15" fill="rgb(246,110,15)" fg:x="596" fg:w="1"/><text x="46.9951%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.7451%" y="181" width="0.0784%" height="15" fill="rgb(207,14,43)" fg:x="596" fg:w="1"/><text x="46.9951%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="46.7451%" y="165" width="0.0784%" height="15" fill="rgb(253,219,19)" fg:x="596" fg:w="1"/><text x="46.9951%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.7451%" y="149" width="0.0784%" height="15" fill="rgb(216,126,5)" fg:x="596" fg:w="1"/><text x="46.9951%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7451%" y="133" width="0.0784%" height="15" fill="rgb(218,78,42)" fg:x="596" fg:w="1"/><text x="46.9951%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="46.6667%" y="485" width="0.2353%" height="15" fill="rgb(215,154,40)" fg:x="595" fg:w="3"/><text x="46.9167%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="46.6667%" y="469" width="0.2353%" height="15" fill="rgb(235,129,32)" fg:x="595" fg:w="3"/><text x="46.9167%" y="479.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="46.6667%" y="453" width="0.2353%" height="15" fill="rgb(218,51,8)" fg:x="595" fg:w="3"/><text x="46.9167%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="46.6667%" y="437" width="0.2353%" height="15" fill="rgb(245,48,4)" fg:x="595" fg:w="3"/><text x="46.9167%" y="447.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.08%)</title><rect x="46.8235%" y="421" width="0.0784%" height="15" fill="rgb(250,175,12)" fg:x="597" fg:w="1"/><text x="47.0735%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.0588%" y="437" width="0.0784%" height="15" fill="rgb(237,95,40)" fg:x="600" fg:w="1"/><text x="47.3088%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="47.0588%" y="453" width="0.1569%" height="15" fill="rgb(244,120,0)" fg:x="600" fg:w="2"/><text x="47.3088%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="47.1373%" y="437" width="0.0784%" height="15" fill="rgb(241,19,42)" fg:x="601" fg:w="1"/><text x="47.3873%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.1373%" y="421" width="0.0784%" height="15" fill="rgb(217,174,48)" fg:x="601" fg:w="1"/><text x="47.3873%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="47.2157%" y="453" width="0.0784%" height="15" fill="rgb(239,36,38)" fg:x="602" fg:w="1"/><text x="47.4657%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="47.2157%" y="437" width="0.0784%" height="15" fill="rgb(220,63,49)" fg:x="602" fg:w="1"/><text x="47.4657%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.2157%" y="421" width="0.0784%" height="15" fill="rgb(240,101,13)" fg:x="602" fg:w="1"/><text x="47.4657%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="47.2941%" y="437" width="0.0784%" height="15" fill="rgb(209,184,51)" fg:x="603" fg:w="1"/><text x="47.5441%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="47.5294%" y="389" width="0.3137%" height="15" fill="rgb(206,136,39)" fg:x="606" fg:w="4"/><text x="47.7794%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="47.5294%" y="373" width="0.3137%" height="15" fill="rgb(254,47,45)" fg:x="606" fg:w="4"/><text x="47.7794%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="47.6078%" y="357" width="0.2353%" height="15" fill="rgb(252,103,20)" fg:x="607" fg:w="3"/><text x="47.8578%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="47.6078%" y="341" width="0.2353%" height="15" fill="rgb(230,69,12)" fg:x="607" fg:w="3"/><text x="47.8578%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.63%)</title><rect x="47.4510%" y="405" width="0.6275%" height="15" fill="rgb(219,2,28)" fg:x="605" fg:w="8"/><text x="47.7010%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="47.8431%" y="389" width="0.2353%" height="15" fill="rgb(210,9,12)" fg:x="610" fg:w="3"/><text x="48.0931%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="47.8431%" y="373" width="0.2353%" height="15" fill="rgb(235,99,33)" fg:x="610" fg:w="3"/><text x="48.0931%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.9216%" y="357" width="0.1569%" height="15" fill="rgb(230,11,38)" fg:x="611" fg:w="2"/><text x="48.1716%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="48.3137%" y="389" width="0.0784%" height="15" fill="rgb(217,129,0)" fg:x="616" fg:w="1"/><text x="48.5637%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="48.3137%" y="373" width="0.0784%" height="15" fill="rgb(222,198,4)" fg:x="616" fg:w="1"/><text x="48.5637%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="48.3922%" y="389" width="0.1569%" height="15" fill="rgb(246,170,27)" fg:x="617" fg:w="2"/><text x="48.6422%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="48.5490%" y="341" width="0.2353%" height="15" fill="rgb(229,17,28)" fg:x="619" fg:w="3"/><text x="48.7990%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.6275%" y="325" width="0.1569%" height="15" fill="rgb(233,198,48)" fg:x="620" fg:w="2"/><text x="48.8775%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.7059%" y="309" width="0.0784%" height="15" fill="rgb(238,103,23)" fg:x="621" fg:w="1"/><text x="48.9559%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.7059%" y="293" width="0.0784%" height="15" fill="rgb(206,91,41)" fg:x="621" fg:w="1"/><text x="48.9559%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.7059%" y="277" width="0.0784%" height="15" fill="rgb(227,34,25)" fg:x="621" fg:w="1"/><text x="48.9559%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.7059%" y="261" width="0.0784%" height="15" fill="rgb(210,110,44)" fg:x="621" fg:w="1"/><text x="48.9559%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="48.5490%" y="373" width="0.3922%" height="15" fill="rgb(216,189,8)" fg:x="619" fg:w="5"/><text x="48.7990%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="48.5490%" y="357" width="0.3922%" height="15" fill="rgb(234,9,46)" fg:x="619" fg:w="5"/><text x="48.7990%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="48.7843%" y="341" width="0.1569%" height="15" fill="rgb(251,200,5)" fg:x="622" fg:w="2"/><text x="49.0343%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="48.7843%" y="325" width="0.1569%" height="15" fill="rgb(238,165,37)" fg:x="622" fg:w="2"/><text x="49.0343%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.7843%" y="309" width="0.1569%" height="15" fill="rgb(232,77,38)" fg:x="622" fg:w="2"/><text x="49.0343%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.8627%" y="293" width="0.0784%" height="15" fill="rgb(253,179,33)" fg:x="623" fg:w="1"/><text x="49.1127%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.8627%" y="277" width="0.0784%" height="15" fill="rgb(240,13,35)" fg:x="623" fg:w="1"/><text x="49.1127%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="48.9412%" y="373" width="0.3922%" height="15" fill="rgb(242,150,49)" fg:x="624" fg:w="5"/><text x="49.1912%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="49.0196%" y="357" width="0.3137%" height="15" fill="rgb(237,176,28)" fg:x="625" fg:w="4"/><text x="49.2696%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="49.1765%" y="341" width="0.1569%" height="15" fill="rgb(214,176,33)" fg:x="627" fg:w="2"/><text x="49.4265%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="49.1765%" y="325" width="0.1569%" height="15" fill="rgb(214,25,12)" fg:x="627" fg:w="2"/><text x="49.4265%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.2549%" y="309" width="0.0784%" height="15" fill="rgb(238,190,20)" fg:x="628" fg:w="1"/><text x="49.5049%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.2549%" y="293" width="0.0784%" height="15" fill="rgb(208,11,19)" fg:x="628" fg:w="1"/><text x="49.5049%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.2549%" y="277" width="0.0784%" height="15" fill="rgb(239,90,4)" fg:x="628" fg:w="1"/><text x="49.5049%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="49.4118%" y="341" width="0.1569%" height="15" fill="rgb(248,110,3)" fg:x="630" fg:w="2"/><text x="49.6618%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.4118%" y="325" width="0.1569%" height="15" fill="rgb(210,41,30)" fg:x="630" fg:w="2"/><text x="49.6618%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="49.4118%" y="309" width="0.1569%" height="15" fill="rgb(239,36,8)" fg:x="630" fg:w="2"/><text x="49.6618%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4902%" y="293" width="0.0784%" height="15" fill="rgb(237,201,47)" fg:x="631" fg:w="1"/><text x="49.7402%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="49.4118%" y="357" width="0.2353%" height="15" fill="rgb(224,140,29)" fg:x="630" fg:w="3"/><text x="49.6618%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="49.5686%" y="341" width="0.0784%" height="15" fill="rgb(231,209,17)" fg:x="632" fg:w="1"/><text x="49.8186%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.5686%" y="325" width="0.0784%" height="15" fill="rgb(249,196,1)" fg:x="632" fg:w="1"/><text x="49.8186%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.5686%" y="309" width="0.0784%" height="15" fill="rgb(223,207,51)" fg:x="632" fg:w="1"/><text x="49.8186%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.5686%" y="293" width="0.0784%" height="15" fill="rgb(210,14,40)" fg:x="632" fg:w="1"/><text x="49.8186%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.7255%" y="325" width="0.0784%" height="15" fill="rgb(250,20,52)" fg:x="634" fg:w="1"/><text x="49.9755%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="49.3333%" y="373" width="0.5490%" height="15" fill="rgb(241,46,11)" fg:x="629" fg:w="7"/><text x="49.5833%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="49.6471%" y="357" width="0.2353%" height="15" fill="rgb(219,105,5)" fg:x="633" fg:w="3"/><text x="49.8971%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="49.6471%" y="341" width="0.2353%" height="15" fill="rgb(252,77,35)" fg:x="633" fg:w="3"/><text x="49.8971%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="49.8039%" y="325" width="0.0784%" height="15" fill="rgb(243,119,2)" fg:x="635" fg:w="1"/><text x="50.0539%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.49%)</title><rect x="48.5490%" y="389" width="1.4902%" height="15" fill="rgb(206,82,28)" fg:x="619" fg:w="19"/><text x="48.7990%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.8824%" y="373" width="0.1569%" height="15" fill="rgb(227,120,12)" fg:x="636" fg:w="2"/><text x="50.1324%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="49.8824%" y="357" width="0.1569%" height="15" fill="rgb(229,134,41)" fg:x="636" fg:w="2"/><text x="50.1324%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9608%" y="341" width="0.0784%" height="15" fill="rgb(239,96,32)" fg:x="637" fg:w="1"/><text x="50.2108%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.43%)</title><rect x="48.0784%" y="405" width="2.4314%" height="15" fill="rgb(225,46,27)" fg:x="613" fg:w="31"/><text x="48.3284%" y="415.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="50.0392%" y="389" width="0.4706%" height="15" fill="rgb(215,168,2)" fg:x="638" fg:w="6"/><text x="50.2892%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.47%)</title><rect x="50.0392%" y="373" width="0.4706%" height="15" fill="rgb(207,170,52)" fg:x="638" fg:w="6"/><text x="50.2892%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="50.1961%" y="357" width="0.3137%" height="15" fill="rgb(237,198,36)" fg:x="640" fg:w="4"/><text x="50.4461%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="50.2745%" y="341" width="0.2353%" height="15" fill="rgb(213,27,14)" fg:x="641" fg:w="3"/><text x="50.5245%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="50.2745%" y="325" width="0.2353%" height="15" fill="rgb(218,77,5)" fg:x="641" fg:w="3"/><text x="50.5245%" y="335.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="50.2745%" y="309" width="0.2353%" height="15" fill="rgb(230,219,39)" fg:x="641" fg:w="3"/><text x="50.5245%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (40 samples, 3.14%)</title><rect x="47.4510%" y="421" width="3.1373%" height="15" fill="rgb(245,177,7)" fg:x="605" fg:w="40"/><text x="47.7010%" y="431.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.5098%" y="405" width="0.0784%" height="15" fill="rgb(246,44,46)" fg:x="644" fg:w="1"/><text x="50.7598%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.5882%" y="389" width="0.0784%" height="15" fill="rgb(207,173,15)" fg:x="645" fg:w="1"/><text x="50.8382%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="50.8235%" y="373" width="0.1569%" height="15" fill="rgb(245,170,50)" fg:x="648" fg:w="2"/><text x="51.0735%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.8235%" y="357" width="0.1569%" height="15" fill="rgb(233,156,21)" fg:x="648" fg:w="2"/><text x="51.0735%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.0588%" y="357" width="0.1569%" height="15" fill="rgb(253,146,27)" fg:x="651" fg:w="2"/><text x="51.3088%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.2157%" y="341" width="0.0784%" height="15" fill="rgb(247,66,29)" fg:x="653" fg:w="1"/><text x="51.4657%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.2941%" y="341" width="0.0784%" height="15" fill="rgb(218,207,26)" fg:x="654" fg:w="1"/><text x="51.5441%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.94%)</title><rect x="50.5882%" y="421" width="0.9412%" height="15" fill="rgb(234,93,26)" fg:x="645" fg:w="12"/><text x="50.8382%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.94%)</title><rect x="50.5882%" y="405" width="0.9412%" height="15" fill="rgb(214,75,48)" fg:x="645" fg:w="12"/><text x="50.8382%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="50.6667%" y="389" width="0.8627%" height="15" fill="rgb(229,119,22)" fg:x="646" fg:w="11"/><text x="50.9167%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="50.9804%" y="373" width="0.5490%" height="15" fill="rgb(226,153,19)" fg:x="650" fg:w="7"/><text x="51.2304%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="51.2157%" y="357" width="0.3137%" height="15" fill="rgb(220,204,36)" fg:x="653" fg:w="4"/><text x="51.4657%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="51.3725%" y="341" width="0.1569%" height="15" fill="rgb(253,181,43)" fg:x="655" fg:w="2"/><text x="51.6225%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.4510%" y="325" width="0.0784%" height="15" fill="rgb(211,41,51)" fg:x="656" fg:w="1"/><text x="51.7010%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8431%" y="341" width="0.0784%" height="15" fill="rgb(207,215,0)" fg:x="661" fg:w="1"/><text x="52.0931%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0000%" y="325" width="0.0784%" height="15" fill="rgb(212,153,10)" fg:x="663" fg:w="1"/><text x="52.2500%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.39%)</title><rect x="52.0784%" y="325" width="0.3922%" height="15" fill="rgb(251,171,36)" fg:x="664" fg:w="5"/><text x="52.3284%" y="335.50"></text></g><g><title>__libc_free (5 samples, 0.39%)</title><rect x="52.0784%" y="309" width="0.3922%" height="15" fill="rgb(225,219,41)" fg:x="664" fg:w="5"/><text x="52.3284%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.4706%" y="309" width="0.1569%" height="15" fill="rgb(208,200,1)" fg:x="669" fg:w="2"/><text x="52.7206%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="52.6275%" y="309" width="0.2353%" height="15" fill="rgb(206,75,47)" fg:x="671" fg:w="3"/><text x="52.8775%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.7059%" y="293" width="0.1569%" height="15" fill="rgb(248,3,16)" fg:x="672" fg:w="2"/><text x="52.9559%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.25%)</title><rect x="51.6863%" y="389" width="1.2549%" height="15" fill="rgb(242,157,36)" fg:x="659" fg:w="16"/><text x="51.9363%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.25%)</title><rect x="51.6863%" y="373" width="1.2549%" height="15" fill="rgb(215,175,11)" fg:x="659" fg:w="16"/><text x="51.9363%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.18%)</title><rect x="51.7647%" y="357" width="1.1765%" height="15" fill="rgb(252,222,22)" fg:x="660" fg:w="15"/><text x="52.0147%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.02%)</title><rect x="51.9216%" y="341" width="1.0196%" height="15" fill="rgb(250,121,35)" fg:x="662" fg:w="13"/><text x="52.1716%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="52.4706%" y="325" width="0.4706%" height="15" fill="rgb(233,120,49)" fg:x="669" fg:w="6"/><text x="52.7206%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="52.8627%" y="309" width="0.0784%" height="15" fill="rgb(205,201,14)" fg:x="674" fg:w="1"/><text x="53.1127%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.8627%" y="293" width="0.0784%" height="15" fill="rgb(219,58,45)" fg:x="674" fg:w="1"/><text x="53.1127%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.8627%" y="277" width="0.0784%" height="15" fill="rgb(251,65,12)" fg:x="674" fg:w="1"/><text x="53.1127%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="53.0196%" y="341" width="0.2353%" height="15" fill="rgb(224,47,31)" fg:x="676" fg:w="3"/><text x="53.2696%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="53.0980%" y="325" width="0.1569%" height="15" fill="rgb(233,74,26)" fg:x="677" fg:w="2"/><text x="53.3480%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="53.1765%" y="309" width="0.0784%" height="15" fill="rgb(231,211,31)" fg:x="678" fg:w="1"/><text x="53.4265%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.39%)</title><rect x="52.9412%" y="373" width="0.3922%" height="15" fill="rgb(239,167,5)" fg:x="675" fg:w="5"/><text x="53.1912%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.31%)</title><rect x="53.0196%" y="357" width="0.3137%" height="15" fill="rgb(241,85,0)" fg:x="676" fg:w="4"/><text x="53.2696%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.2549%" y="341" width="0.0784%" height="15" fill="rgb(229,130,21)" fg:x="679" fg:w="1"/><text x="53.5049%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (24 samples, 1.88%)</title><rect x="51.6078%" y="405" width="1.8824%" height="15" fill="rgb(254,84,49)" fg:x="658" fg:w="24"/><text x="51.8578%" y="415.50">&lt;..</text></g><g><title>treediff::diff::diff (7 samples, 0.55%)</title><rect x="52.9412%" y="389" width="0.5490%" height="15" fill="rgb(235,85,21)" fg:x="675" fg:w="7"/><text x="53.1912%" y="399.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (2 samples, 0.16%)</title><rect x="53.3333%" y="373" width="0.1569%" height="15" fill="rgb(246,128,52)" fg:x="680" fg:w="2"/><text x="53.5833%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.4118%" y="357" width="0.0784%" height="15" fill="rgb(243,114,49)" fg:x="681" fg:w="1"/><text x="53.6618%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7255%" y="373" width="0.0784%" height="15" fill="rgb(240,224,22)" fg:x="685" fg:w="1"/><text x="53.9755%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="53.8039%" y="373" width="0.3137%" height="15" fill="rgb(247,201,52)" fg:x="686" fg:w="4"/><text x="54.0539%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.8824%" y="357" width="0.2353%" height="15" fill="rgb(231,70,45)" fg:x="687" fg:w="3"/><text x="54.1324%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="54.1176%" y="373" width="0.0784%" height="15" fill="rgb(217,215,20)" fg:x="690" fg:w="1"/><text x="54.3676%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="54.1176%" y="357" width="0.0784%" height="15" fill="rgb(226,170,30)" fg:x="690" fg:w="1"/><text x="54.3676%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (5 samples, 0.39%)</title><rect x="54.1961%" y="373" width="0.3922%" height="15" fill="rgb(220,190,43)" fg:x="691" fg:w="5"/><text x="54.4461%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.31%)</title><rect x="54.2745%" y="357" width="0.3137%" height="15" fill="rgb(218,20,18)" fg:x="692" fg:w="4"/><text x="54.5245%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.9020%" y="341" width="0.1569%" height="15" fill="rgb(245,37,26)" fg:x="700" fg:w="2"/><text x="55.1520%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (7 samples, 0.55%)</title><rect x="54.5882%" y="373" width="0.5490%" height="15" fill="rgb(241,127,29)" fg:x="696" fg:w="7"/><text x="54.8382%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.39%)</title><rect x="54.7451%" y="357" width="0.3922%" height="15" fill="rgb(241,33,26)" fg:x="698" fg:w="5"/><text x="54.9951%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0588%" y="341" width="0.0784%" height="15" fill="rgb(220,106,21)" fg:x="702" fg:w="1"/><text x="55.3088%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0588%" y="325" width="0.0784%" height="15" fill="rgb(225,125,35)" fg:x="702" fg:w="1"/><text x="55.3088%" y="335.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="55.6863%" y="325" width="0.0784%" height="15" fill="rgb(248,80,22)" fg:x="710" fg:w="1"/><text x="55.9363%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.7647%" y="325" width="0.1569%" height="15" fill="rgb(231,117,39)" fg:x="711" fg:w="2"/><text x="56.0147%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.8431%" y="309" width="0.0784%" height="15" fill="rgb(239,183,16)" fg:x="712" fg:w="1"/><text x="56.0931%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.8431%" y="293" width="0.0784%" height="15" fill="rgb(221,61,19)" fg:x="712" fg:w="1"/><text x="56.0931%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.0000%" y="277" width="0.2353%" height="15" fill="rgb(239,196,44)" fg:x="714" fg:w="3"/><text x="56.2500%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.1569%" y="261" width="0.0784%" height="15" fill="rgb(206,113,19)" fg:x="716" fg:w="1"/><text x="56.4069%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="55.9216%" y="325" width="0.3922%" height="15" fill="rgb(245,114,12)" fg:x="713" fg:w="5"/><text x="56.1716%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="55.9216%" y="309" width="0.3922%" height="15" fill="rgb(247,89,39)" fg:x="713" fg:w="5"/><text x="56.1716%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="55.9216%" y="293" width="0.3922%" height="15" fill="rgb(213,85,14)" fg:x="713" fg:w="5"/><text x="56.1716%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="56.2353%" y="277" width="0.0784%" height="15" fill="rgb(249,206,33)" fg:x="717" fg:w="1"/><text x="56.4853%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="56.2353%" y="261" width="0.0784%" height="15" fill="rgb(235,167,47)" fg:x="717" fg:w="1"/><text x="56.4853%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="56.2353%" y="245" width="0.0784%" height="15" fill="rgb(217,177,16)" fg:x="717" fg:w="1"/><text x="56.4853%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="56.4706%" y="293" width="0.3137%" height="15" fill="rgb(250,228,29)" fg:x="720" fg:w="4"/><text x="56.7206%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.5490%" y="277" width="0.2353%" height="15" fill="rgb(216,195,42)" fg:x="721" fg:w="3"/><text x="56.7990%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="56.5490%" y="261" width="0.2353%" height="15" fill="rgb(232,192,32)" fg:x="721" fg:w="3"/><text x="56.7990%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2549%" y="261" width="0.0784%" height="15" fill="rgb(211,8,47)" fg:x="730" fg:w="1"/><text x="57.5049%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2549%" y="245" width="0.0784%" height="15" fill="rgb(251,201,9)" fg:x="730" fg:w="1"/><text x="57.5049%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2549%" y="229" width="0.0784%" height="15" fill="rgb(206,185,47)" fg:x="730" fg:w="1"/><text x="57.5049%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="57.1765%" y="277" width="0.2353%" height="15" fill="rgb(245,54,32)" fg:x="729" fg:w="3"/><text x="57.4265%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="57.3333%" y="261" width="0.0784%" height="15" fill="rgb(208,1,8)" fg:x="731" fg:w="1"/><text x="57.5833%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.3333%" y="245" width="0.0784%" height="15" fill="rgb(228,57,24)" fg:x="731" fg:w="1"/><text x="57.5833%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (26 samples, 2.04%)</title><rect x="55.6078%" y="341" width="2.0392%" height="15" fill="rgb(251,24,8)" fg:x="709" fg:w="26"/><text x="55.8578%" y="351.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.33%)</title><rect x="56.3137%" y="325" width="1.3333%" height="15" fill="rgb(236,196,50)" fg:x="718" fg:w="17"/><text x="56.5637%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.18%)</title><rect x="56.4706%" y="309" width="1.1765%" height="15" fill="rgb(246,222,29)" fg:x="720" fg:w="15"/><text x="56.7206%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.86%)</title><rect x="56.7843%" y="293" width="0.8627%" height="15" fill="rgb(211,34,40)" fg:x="724" fg:w="11"/><text x="57.0343%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="57.4118%" y="277" width="0.2353%" height="15" fill="rgb(210,66,51)" fg:x="732" fg:w="3"/><text x="57.6618%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 2.43%)</title><rect x="55.3725%" y="357" width="2.4314%" height="15" fill="rgb(250,56,43)" fg:x="706" fg:w="31"/><text x="55.6225%" y="367.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="57.6471%" y="341" width="0.1569%" height="15" fill="rgb(240,111,50)" fg:x="735" fg:w="2"/><text x="57.8971%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.7255%" y="325" width="0.0784%" height="15" fill="rgb(209,117,13)" fg:x="736" fg:w="1"/><text x="57.9755%" y="335.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (57 samples, 4.47%)</title><rect x="53.4902%" y="405" width="4.4706%" height="15" fill="rgb(232,164,45)" fg:x="682" fg:w="57"/><text x="53.7402%" y="415.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (57 samples, 4.47%)</title><rect x="53.4902%" y="389" width="4.4706%" height="15" fill="rgb(205,69,32)" fg:x="682" fg:w="57"/><text x="53.7402%" y="399.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.82%)</title><rect x="55.1373%" y="373" width="2.8235%" height="15" fill="rgb(240,147,45)" fg:x="703" fg:w="36"/><text x="55.3873%" y="383.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.8039%" y="357" width="0.1569%" height="15" fill="rgb(221,94,48)" fg:x="737" fg:w="2"/><text x="58.0539%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8824%" y="341" width="0.0784%" height="15" fill="rgb(249,209,17)" fg:x="738" fg:w="1"/><text x="58.1324%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.8824%" y="325" width="0.0784%" height="15" fill="rgb(228,57,28)" fg:x="738" fg:w="1"/><text x="58.1324%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.3529%" y="261" width="0.0784%" height="15" fill="rgb(250,133,26)" fg:x="744" fg:w="1"/><text x="58.6029%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.3529%" y="245" width="0.0784%" height="15" fill="rgb(254,15,16)" fg:x="744" fg:w="1"/><text x="58.6029%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.4314%" y="229" width="0.0784%" height="15" fill="rgb(209,147,42)" fg:x="745" fg:w="1"/><text x="58.6814%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.5098%" y="229" width="0.0784%" height="15" fill="rgb(208,5,29)" fg:x="746" fg:w="1"/><text x="58.7598%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.5098%" y="213" width="0.0784%" height="15" fill="rgb(250,73,31)" fg:x="746" fg:w="1"/><text x="58.7598%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5098%" y="197" width="0.0784%" height="15" fill="rgb(238,45,10)" fg:x="746" fg:w="1"/><text x="58.7598%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="58.2745%" y="277" width="0.3922%" height="15" fill="rgb(214,104,5)" fg:x="743" fg:w="5"/><text x="58.5245%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.4314%" y="261" width="0.2353%" height="15" fill="rgb(242,217,19)" fg:x="745" fg:w="3"/><text x="58.6814%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="58.4314%" y="245" width="0.2353%" height="15" fill="rgb(246,113,27)" fg:x="745" fg:w="3"/><text x="58.6814%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5882%" y="229" width="0.0784%" height="15" fill="rgb(221,34,27)" fg:x="747" fg:w="1"/><text x="58.8382%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.6667%" y="277" width="0.0784%" height="15" fill="rgb(246,109,6)" fg:x="748" fg:w="1"/><text x="58.9167%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.6667%" y="261" width="0.0784%" height="15" fill="rgb(217,12,25)" fg:x="748" fg:w="1"/><text x="58.9167%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="58.2745%" y="293" width="0.5490%" height="15" fill="rgb(250,195,5)" fg:x="743" fg:w="7"/><text x="58.5245%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.7451%" y="277" width="0.0784%" height="15" fill="rgb(244,140,45)" fg:x="749" fg:w="1"/><text x="58.9951%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.7451%" y="261" width="0.0784%" height="15" fill="rgb(230,64,14)" fg:x="749" fg:w="1"/><text x="58.9951%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7451%" y="245" width="0.0784%" height="15" fill="rgb(206,27,27)" fg:x="749" fg:w="1"/><text x="58.9951%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.71%)</title><rect x="58.2745%" y="309" width="0.7059%" height="15" fill="rgb(230,14,50)" fg:x="743" fg:w="9"/><text x="58.5245%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.8235%" y="293" width="0.1569%" height="15" fill="rgb(237,172,14)" fg:x="750" fg:w="2"/><text x="59.0735%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.9804%" y="309" width="0.0784%" height="15" fill="rgb(209,25,21)" fg:x="752" fg:w="1"/><text x="59.2304%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.9804%" y="293" width="0.0784%" height="15" fill="rgb(248,148,22)" fg:x="752" fg:w="1"/><text x="59.2304%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="58.2745%" y="341" width="0.8627%" height="15" fill="rgb(234,100,22)" fg:x="743" fg:w="11"/><text x="58.5245%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="58.2745%" y="325" width="0.8627%" height="15" fill="rgb(210,20,30)" fg:x="743" fg:w="11"/><text x="58.5245%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0588%" y="309" width="0.0784%" height="15" fill="rgb(232,58,0)" fg:x="753" fg:w="1"/><text x="59.3088%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0588%" y="293" width="0.0784%" height="15" fill="rgb(221,68,13)" fg:x="753" fg:w="1"/><text x="59.3088%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.0588%" y="277" width="0.0784%" height="15" fill="rgb(231,194,11)" fg:x="753" fg:w="1"/><text x="59.3088%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.1373%" y="341" width="0.0784%" height="15" fill="rgb(235,51,41)" fg:x="754" fg:w="1"/><text x="59.3873%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.1373%" y="325" width="0.0784%" height="15" fill="rgb(240,50,32)" fg:x="754" fg:w="1"/><text x="59.3873%" y="335.50"></text></g><g><title>engine::session::state::State::close (161 samples, 12.63%)</title><rect x="46.9020%" y="485" width="12.6275%" height="15" fill="rgb(240,185,36)" fg:x="598" fg:w="161"/><text x="47.1520%" y="495.50">engine::session::st..</text></g><g><title>engine::session::state::State::flush_entities (159 samples, 12.47%)</title><rect x="47.0588%" y="469" width="12.4706%" height="15" fill="rgb(211,168,15)" fg:x="600" fg:w="159"/><text x="47.3088%" y="479.50">engine::session::st..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (156 samples, 12.24%)</title><rect x="47.2941%" y="453" width="12.2353%" height="15" fill="rgb(221,70,0)" fg:x="603" fg:w="156"/><text x="47.5441%" y="463.50">engine::session::i..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (155 samples, 12.16%)</title><rect x="47.3725%" y="437" width="12.1569%" height="15" fill="rgb(205,21,33)" fg:x="604" fg:w="155"/><text x="47.6225%" y="447.50">engine::session::s..</text></g><g><title>kernel::model::any_entity_changes (102 samples, 8.00%)</title><rect x="51.5294%" y="421" width="8.0000%" height="15" fill="rgb(225,106,10)" fg:x="657" fg:w="102"/><text x="51.7794%" y="431.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (20 samples, 1.57%)</title><rect x="57.9608%" y="405" width="1.5686%" height="15" fill="rgb(236,200,50)" fg:x="739" fg:w="20"/><text x="58.2108%" y="415.50"></text></g><g><title>serde_json::de::from_trait (20 samples, 1.57%)</title><rect x="57.9608%" y="389" width="1.5686%" height="15" fill="rgb(249,93,23)" fg:x="739" fg:w="20"/><text x="58.2108%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.57%)</title><rect x="57.9608%" y="373" width="1.5686%" height="15" fill="rgb(244,115,35)" fg:x="739" fg:w="20"/><text x="58.2108%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.49%)</title><rect x="58.0392%" y="357" width="1.4902%" height="15" fill="rgb(231,129,47)" fg:x="740" fg:w="19"/><text x="58.2892%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="59.2157%" y="341" width="0.3137%" height="15" fill="rgb(225,160,50)" fg:x="755" fg:w="4"/><text x="59.4657%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="59.2941%" y="325" width="0.2353%" height="15" fill="rgb(218,135,23)" fg:x="756" fg:w="3"/><text x="59.5441%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="59.2941%" y="309" width="0.2353%" height="15" fill="rgb(227,119,14)" fg:x="756" fg:w="3"/><text x="59.5441%" y="319.50"></text></g><g><title>engine::session::Session::close (168 samples, 13.18%)</title><rect x="46.5882%" y="501" width="13.1765%" height="15" fill="rgb(242,138,13)" fg:x="594" fg:w="168"/><text x="46.8382%" y="511.50">engine::session::Ses..</text></g><g><title>kernel::plugins::SessionPlugins::stop (3 samples, 0.24%)</title><rect x="59.5294%" y="485" width="0.2353%" height="15" fill="rgb(215,11,16)" fg:x="759" fg:w="3"/><text x="59.7794%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0784%" y="293" width="0.0784%" height="15" fill="rgb(234,170,50)" fg:x="766" fg:w="1"/><text x="60.3284%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0784%" y="277" width="0.0784%" height="15" fill="rgb(233,34,20)" fg:x="766" fg:w="1"/><text x="60.3284%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0784%" y="261" width="0.0784%" height="15" fill="rgb(237,100,45)" fg:x="766" fg:w="1"/><text x="60.3284%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.1569%" y="261" width="0.0784%" height="15" fill="rgb(231,184,36)" fg:x="767" fg:w="1"/><text x="60.4069%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.1569%" y="245" width="0.0784%" height="15" fill="rgb(252,93,2)" fg:x="767" fg:w="1"/><text x="60.4069%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="60.0784%" y="325" width="0.3137%" height="15" fill="rgb(248,176,47)" fg:x="766" fg:w="4"/><text x="60.3284%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="60.0784%" y="309" width="0.3137%" height="15" fill="rgb(249,125,23)" fg:x="766" fg:w="4"/><text x="60.3284%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="60.1569%" y="293" width="0.2353%" height="15" fill="rgb(239,67,42)" fg:x="767" fg:w="3"/><text x="60.4069%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.1569%" y="277" width="0.2353%" height="15" fill="rgb(244,162,4)" fg:x="767" fg:w="3"/><text x="60.4069%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="60.2353%" y="261" width="0.1569%" height="15" fill="rgb(214,150,38)" fg:x="768" fg:w="2"/><text x="60.4853%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.2353%" y="245" width="0.1569%" height="15" fill="rgb(228,211,28)" fg:x="768" fg:w="2"/><text x="60.4853%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="60.2353%" y="229" width="0.1569%" height="15" fill="rgb(212,98,48)" fg:x="768" fg:w="2"/><text x="60.4853%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.2353%" y="213" width="0.1569%" height="15" fill="rgb(213,45,13)" fg:x="768" fg:w="2"/><text x="60.4853%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.4706%" y="293" width="0.1569%" height="15" fill="rgb(218,35,29)" fg:x="771" fg:w="2"/><text x="60.7206%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.4706%" y="277" width="0.1569%" height="15" fill="rgb(244,13,3)" fg:x="771" fg:w="2"/><text x="60.7206%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.4706%" y="261" width="0.1569%" height="15" fill="rgb(235,170,19)" fg:x="771" fg:w="2"/><text x="60.7206%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="60.6275%" y="293" width="0.0784%" height="15" fill="rgb(233,193,43)" fg:x="773" fg:w="1"/><text x="60.8775%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="60.6275%" y="277" width="0.0784%" height="15" fill="rgb(228,223,20)" fg:x="773" fg:w="1"/><text x="60.8775%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6275%" y="261" width="0.0784%" height="15" fill="rgb(208,85,54)" fg:x="773" fg:w="1"/><text x="60.8775%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.6275%" y="245" width="0.0784%" height="15" fill="rgb(254,14,45)" fg:x="773" fg:w="1"/><text x="60.8775%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.7059%" y="213" width="0.0784%" height="15" fill="rgb(247,99,29)" fg:x="774" fg:w="1"/><text x="60.9559%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.47%)</title><rect x="60.3922%" y="325" width="0.4706%" height="15" fill="rgb(225,180,54)" fg:x="770" fg:w="6"/><text x="60.6422%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="60.3922%" y="309" width="0.4706%" height="15" fill="rgb(239,88,43)" fg:x="770" fg:w="6"/><text x="60.6422%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="60.7059%" y="293" width="0.1569%" height="15" fill="rgb(209,47,11)" fg:x="774" fg:w="2"/><text x="60.9559%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.7059%" y="277" width="0.1569%" height="15" fill="rgb(219,179,23)" fg:x="774" fg:w="2"/><text x="60.9559%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="60.7059%" y="261" width="0.1569%" height="15" fill="rgb(213,183,19)" fg:x="774" fg:w="2"/><text x="60.9559%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.7059%" y="245" width="0.1569%" height="15" fill="rgb(210,11,9)" fg:x="774" fg:w="2"/><text x="60.9559%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.7059%" y="229" width="0.1569%" height="15" fill="rgb(239,194,16)" fg:x="774" fg:w="2"/><text x="60.9559%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.7843%" y="213" width="0.0784%" height="15" fill="rgb(246,23,50)" fg:x="775" fg:w="1"/><text x="61.0343%" y="223.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="60.8627%" y="309" width="0.0784%" height="15" fill="rgb(245,10,41)" fg:x="776" fg:w="1"/><text x="61.1127%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="60.8627%" y="293" width="0.0784%" height="15" fill="rgb(228,43,24)" fg:x="776" fg:w="1"/><text x="61.1127%" y="303.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="60.8627%" y="277" width="0.0784%" height="15" fill="rgb(220,151,0)" fg:x="776" fg:w="1"/><text x="61.1127%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="60.8627%" y="261" width="0.0784%" height="15" fill="rgb(232,219,10)" fg:x="776" fg:w="1"/><text x="61.1127%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="60.8627%" y="245" width="0.0784%" height="15" fill="rgb(227,217,48)" fg:x="776" fg:w="1"/><text x="61.1127%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="60.8627%" y="229" width="0.0784%" height="15" fill="rgb(210,66,35)" fg:x="776" fg:w="1"/><text x="61.1127%" y="239.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="60.8627%" y="213" width="0.0784%" height="15" fill="rgb(254,6,7)" fg:x="776" fg:w="1"/><text x="61.1127%" y="223.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (13 samples, 1.02%)</title><rect x="60.0784%" y="373" width="1.0196%" height="15" fill="rgb(235,222,42)" fg:x="766" fg:w="13"/><text x="60.3284%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (13 samples, 1.02%)</title><rect x="60.0784%" y="357" width="1.0196%" height="15" fill="rgb(245,126,5)" fg:x="766" fg:w="13"/><text x="60.3284%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::new (13 samples, 1.02%)</title><rect x="60.0784%" y="341" width="1.0196%" height="15" fill="rgb(215,73,17)" fg:x="766" fg:w="13"/><text x="60.3284%" y="351.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="60.8627%" y="325" width="0.2353%" height="15" fill="rgb(219,198,52)" fg:x="776" fg:w="3"/><text x="61.1127%" y="335.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="60.9412%" y="309" width="0.1569%" height="15" fill="rgb(217,159,18)" fg:x="777" fg:w="2"/><text x="61.1912%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="60.9412%" y="293" width="0.1569%" height="15" fill="rgb(212,177,18)" fg:x="777" fg:w="2"/><text x="61.1912%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="60.9412%" y="277" width="0.1569%" height="15" fill="rgb(241,10,11)" fg:x="777" fg:w="2"/><text x="61.1912%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="60.9412%" y="261" width="0.1569%" height="15" fill="rgb(232,114,35)" fg:x="777" fg:w="2"/><text x="61.1912%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="60.9412%" y="245" width="0.1569%" height="15" fill="rgb(238,222,8)" fg:x="777" fg:w="2"/><text x="61.1912%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="60.9412%" y="229" width="0.1569%" height="15" fill="rgb(251,153,44)" fg:x="777" fg:w="2"/><text x="61.1912%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="60.9412%" y="213" width="0.1569%" height="15" fill="rgb(210,140,51)" fg:x="777" fg:w="2"/><text x="61.1912%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="60.9412%" y="197" width="0.1569%" height="15" fill="rgb(222,63,0)" fg:x="777" fg:w="2"/><text x="61.1912%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="60.9412%" y="181" width="0.1569%" height="15" fill="rgb(240,18,40)" fg:x="777" fg:w="2"/><text x="61.1912%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="60.9412%" y="165" width="0.1569%" height="15" fill="rgb(237,88,16)" fg:x="777" fg:w="2"/><text x="61.1912%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="60.9412%" y="149" width="0.1569%" height="15" fill="rgb(251,117,13)" fg:x="777" fg:w="2"/><text x="61.1912%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="60.9412%" y="133" width="0.1569%" height="15" fill="rgb(251,228,8)" fg:x="777" fg:w="2"/><text x="61.1912%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="60.9412%" y="117" width="0.1569%" height="15" fill="rgb(205,107,49)" fg:x="777" fg:w="2"/><text x="61.1912%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="60.9412%" y="101" width="0.1569%" height="15" fill="rgb(238,72,41)" fg:x="777" fg:w="2"/><text x="61.1912%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="60.9412%" y="85" width="0.1569%" height="15" fill="rgb(248,183,52)" fg:x="777" fg:w="2"/><text x="61.1912%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="60.9412%" y="69" width="0.1569%" height="15" fill="rgb(215,58,20)" fg:x="777" fg:w="2"/><text x="61.1912%" y="79.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="60.9412%" y="53" width="0.1569%" height="15" fill="rgb(209,49,13)" fg:x="777" fg:w="2"/><text x="61.1912%" y="63.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="60.9412%" y="37" width="0.1569%" height="15" fill="rgb(208,113,17)" fg:x="777" fg:w="2"/><text x="61.1912%" y="47.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.1765%" y="197" width="0.0784%" height="15" fill="rgb(208,14,22)" fg:x="780" fg:w="1"/><text x="61.4265%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.1765%" y="181" width="0.0784%" height="15" fill="rgb(222,95,2)" fg:x="780" fg:w="1"/><text x="61.4265%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.2549%" y="197" width="0.0784%" height="15" fill="rgb(253,180,37)" fg:x="781" fg:w="1"/><text x="61.5049%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.2549%" y="181" width="0.0784%" height="15" fill="rgb(250,81,33)" fg:x="781" fg:w="1"/><text x="61.5049%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.2549%" y="165" width="0.0784%" height="15" fill="rgb(251,151,41)" fg:x="781" fg:w="1"/><text x="61.5049%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.4118%" y="165" width="0.0784%" height="15" fill="rgb(210,135,17)" fg:x="783" fg:w="1"/><text x="61.6618%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4118%" y="149" width="0.0784%" height="15" fill="rgb(239,21,29)" fg:x="783" fg:w="1"/><text x="61.6618%" y="159.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.47%)</title><rect x="61.0980%" y="277" width="0.4706%" height="15" fill="rgb(231,215,16)" fg:x="779" fg:w="6"/><text x="61.3480%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="61.0980%" y="261" width="0.4706%" height="15" fill="rgb(239,151,54)" fg:x="779" fg:w="6"/><text x="61.3480%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="61.0980%" y="245" width="0.4706%" height="15" fill="rgb(222,122,38)" fg:x="779" fg:w="6"/><text x="61.3480%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="61.0980%" y="229" width="0.4706%" height="15" fill="rgb(243,128,1)" fg:x="779" fg:w="6"/><text x="61.3480%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="61.0980%" y="213" width="0.4706%" height="15" fill="rgb(225,74,21)" fg:x="779" fg:w="6"/><text x="61.3480%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="61.3333%" y="197" width="0.2353%" height="15" fill="rgb(216,210,10)" fg:x="782" fg:w="3"/><text x="61.5833%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.4118%" y="181" width="0.1569%" height="15" fill="rgb(228,76,19)" fg:x="783" fg:w="2"/><text x="61.6618%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.4902%" y="165" width="0.0784%" height="15" fill="rgb(236,80,34)" fg:x="784" fg:w="1"/><text x="61.7402%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.4902%" y="149" width="0.0784%" height="15" fill="rgb(225,173,23)" fg:x="784" fg:w="1"/><text x="61.7402%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.4902%" y="133" width="0.0784%" height="15" fill="rgb(253,38,1)" fg:x="784" fg:w="1"/><text x="61.7402%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4902%" y="117" width="0.0784%" height="15" fill="rgb(206,155,35)" fg:x="784" fg:w="1"/><text x="61.7402%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4902%" y="101" width="0.0784%" height="15" fill="rgb(254,27,53)" fg:x="784" fg:w="1"/><text x="61.7402%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4902%" y="85" width="0.0784%" height="15" fill="rgb(225,52,41)" fg:x="784" fg:w="1"/><text x="61.7402%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="61.5686%" y="245" width="0.0784%" height="15" fill="rgb(244,53,18)" fg:x="785" fg:w="1"/><text x="61.8186%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.6471%" y="213" width="0.0784%" height="15" fill="rgb(254,206,48)" fg:x="786" fg:w="1"/><text x="61.8971%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="61.8039%" y="101" width="0.0784%" height="15" fill="rgb(236,182,23)" fg:x="788" fg:w="1"/><text x="62.0539%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.8039%" y="133" width="0.1569%" height="15" fill="rgb(236,191,37)" fg:x="788" fg:w="2"/><text x="62.0539%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.8039%" y="117" width="0.1569%" height="15" fill="rgb(245,53,8)" fg:x="788" fg:w="2"/><text x="62.0539%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.8824%" y="101" width="0.0784%" height="15" fill="rgb(245,147,9)" fg:x="789" fg:w="1"/><text x="62.1324%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="61.8039%" y="165" width="0.2353%" height="15" fill="rgb(218,24,48)" fg:x="788" fg:w="3"/><text x="62.0539%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.8039%" y="149" width="0.2353%" height="15" fill="rgb(254,23,9)" fg:x="788" fg:w="3"/><text x="62.0539%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.9608%" y="133" width="0.0784%" height="15" fill="rgb(244,105,9)" fg:x="790" fg:w="1"/><text x="62.2108%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.9608%" y="117" width="0.0784%" height="15" fill="rgb(212,142,22)" fg:x="790" fg:w="1"/><text x="62.2108%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9608%" y="101" width="0.0784%" height="15" fill="rgb(221,114,49)" fg:x="790" fg:w="1"/><text x="62.2108%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9608%" y="85" width="0.0784%" height="15" fill="rgb(223,210,25)" fg:x="790" fg:w="1"/><text x="62.2108%" y="95.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.0392%" y="101" width="0.0784%" height="15" fill="rgb(235,162,44)" fg:x="791" fg:w="1"/><text x="62.2892%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.0392%" y="85" width="0.0784%" height="15" fill="rgb(237,65,45)" fg:x="791" fg:w="1"/><text x="62.2892%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.55%)</title><rect x="61.7255%" y="197" width="0.5490%" height="15" fill="rgb(208,79,9)" fg:x="787" fg:w="7"/><text x="61.9755%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="61.8039%" y="181" width="0.4706%" height="15" fill="rgb(215,228,8)" fg:x="788" fg:w="6"/><text x="62.0539%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="62.0392%" y="165" width="0.2353%" height="15" fill="rgb(205,185,17)" fg:x="791" fg:w="3"/><text x="62.2892%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="62.0392%" y="149" width="0.2353%" height="15" fill="rgb(213,62,36)" fg:x="791" fg:w="3"/><text x="62.2892%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="62.0392%" y="133" width="0.2353%" height="15" fill="rgb(209,34,9)" fg:x="791" fg:w="3"/><text x="62.2892%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.0392%" y="117" width="0.2353%" height="15" fill="rgb(246,151,27)" fg:x="791" fg:w="3"/><text x="62.2892%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.1176%" y="101" width="0.1569%" height="15" fill="rgb(218,206,3)" fg:x="792" fg:w="2"/><text x="62.3676%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="62.2745%" y="197" width="0.0784%" height="15" fill="rgb(242,202,1)" fg:x="794" fg:w="1"/><text x="62.5245%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.2745%" y="181" width="0.0784%" height="15" fill="rgb(227,185,16)" fg:x="794" fg:w="1"/><text x="62.5245%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="62.5882%" y="149" width="0.1569%" height="15" fill="rgb(241,1,14)" fg:x="798" fg:w="2"/><text x="62.8382%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="62.5882%" y="133" width="0.1569%" height="15" fill="rgb(212,113,25)" fg:x="798" fg:w="2"/><text x="62.8382%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.6667%" y="117" width="0.0784%" height="15" fill="rgb(247,37,43)" fg:x="799" fg:w="1"/><text x="62.9167%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.6667%" y="101" width="0.0784%" height="15" fill="rgb(226,54,8)" fg:x="799" fg:w="1"/><text x="62.9167%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.6667%" y="85" width="0.0784%" height="15" fill="rgb(251,205,25)" fg:x="799" fg:w="1"/><text x="62.9167%" y="95.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (15 samples, 1.18%)</title><rect x="61.6471%" y="245" width="1.1765%" height="15" fill="rgb(246,87,35)" fg:x="786" fg:w="15"/><text x="61.8971%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.18%)</title><rect x="61.6471%" y="229" width="1.1765%" height="15" fill="rgb(251,145,46)" fg:x="786" fg:w="15"/><text x="61.8971%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (14 samples, 1.10%)</title><rect x="61.7255%" y="213" width="1.0980%" height="15" fill="rgb(210,210,33)" fg:x="787" fg:w="14"/><text x="61.9755%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="62.3529%" y="197" width="0.4706%" height="15" fill="rgb(221,151,11)" fg:x="795" fg:w="6"/><text x="62.6029%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="62.3529%" y="181" width="0.4706%" height="15" fill="rgb(208,160,28)" fg:x="795" fg:w="6"/><text x="62.6029%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.31%)</title><rect x="62.5098%" y="165" width="0.3137%" height="15" fill="rgb(243,69,29)" fg:x="797" fg:w="4"/><text x="62.7598%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.7451%" y="149" width="0.0784%" height="15" fill="rgb(224,144,4)" fg:x="800" fg:w="1"/><text x="62.9951%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.7451%" y="133" width="0.0784%" height="15" fill="rgb(211,140,38)" fg:x="800" fg:w="1"/><text x="62.9951%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="62.7451%" y="117" width="0.0784%" height="15" fill="rgb(252,189,15)" fg:x="800" fg:w="1"/><text x="62.9951%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.7451%" y="101" width="0.0784%" height="15" fill="rgb(251,175,23)" fg:x="800" fg:w="1"/><text x="62.9951%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.7451%" y="85" width="0.0784%" height="15" fill="rgb(212,184,11)" fg:x="800" fg:w="1"/><text x="62.9951%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="62.7451%" y="69" width="0.0784%" height="15" fill="rgb(217,205,6)" fg:x="800" fg:w="1"/><text x="62.9951%" y="79.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (23 samples, 1.80%)</title><rect x="61.0980%" y="293" width="1.8039%" height="15" fill="rgb(235,45,45)" fg:x="779" fg:w="23"/><text x="61.3480%" y="303.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.33%)</title><rect x="61.5686%" y="277" width="1.3333%" height="15" fill="rgb(211,157,53)" fg:x="785" fg:w="17"/><text x="61.8186%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.33%)</title><rect x="61.5686%" y="261" width="1.3333%" height="15" fill="rgb(212,13,8)" fg:x="785" fg:w="17"/><text x="61.8186%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.8235%" y="245" width="0.0784%" height="15" fill="rgb(218,80,36)" fg:x="801" fg:w="1"/><text x="63.0735%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.8235%" y="229" width="0.0784%" height="15" fill="rgb(211,123,43)" fg:x="801" fg:w="1"/><text x="63.0735%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9020%" y="277" width="0.0784%" height="15" fill="rgb(206,165,2)" fg:x="802" fg:w="1"/><text x="63.1520%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="62.9804%" y="277" width="0.0784%" height="15" fill="rgb(248,63,35)" fg:x="803" fg:w="1"/><text x="63.2304%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="62.9020%" y="293" width="0.3137%" height="15" fill="rgb(219,133,41)" fg:x="802" fg:w="4"/><text x="63.1520%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="63.0588%" y="277" width="0.1569%" height="15" fill="rgb(206,175,46)" fg:x="804" fg:w="2"/><text x="63.3088%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.1373%" y="261" width="0.0784%" height="15" fill="rgb(224,41,35)" fg:x="805" fg:w="1"/><text x="63.3873%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.1373%" y="245" width="0.0784%" height="15" fill="rgb(226,113,24)" fg:x="805" fg:w="1"/><text x="63.3873%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.1373%" y="229" width="0.0784%" height="15" fill="rgb(219,51,41)" fg:x="805" fg:w="1"/><text x="63.3873%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.1373%" y="213" width="0.0784%" height="15" fill="rgb(220,145,47)" fg:x="805" fg:w="1"/><text x="63.3873%" y="223.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.1373%" y="197" width="0.0784%" height="15" fill="rgb(239,121,47)" fg:x="805" fg:w="1"/><text x="63.3873%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.1373%" y="181" width="0.0784%" height="15" fill="rgb(207,60,40)" fg:x="805" fg:w="1"/><text x="63.3873%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.1373%" y="165" width="0.0784%" height="15" fill="rgb(224,229,11)" fg:x="805" fg:w="1"/><text x="63.3873%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (28 samples, 2.20%)</title><rect x="61.0980%" y="325" width="2.1961%" height="15" fill="rgb(252,28,32)" fg:x="779" fg:w="28"/><text x="61.3480%" y="335.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (28 samples, 2.20%)</title><rect x="61.0980%" y="309" width="2.1961%" height="15" fill="rgb(207,52,49)" fg:x="779" fg:w="28"/><text x="61.3480%" y="319.50">e..</text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="63.2157%" y="293" width="0.0784%" height="15" fill="rgb(243,51,50)" fg:x="806" fg:w="1"/><text x="63.4657%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.3725%" y="261" width="0.0784%" height="15" fill="rgb(212,92,21)" fg:x="808" fg:w="1"/><text x="63.6225%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.3725%" y="245" width="0.0784%" height="15" fill="rgb(230,183,50)" fg:x="808" fg:w="1"/><text x="63.6225%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.3725%" y="229" width="0.0784%" height="15" fill="rgb(225,48,9)" fg:x="808" fg:w="1"/><text x="63.6225%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3725%" y="213" width="0.0784%" height="15" fill="rgb(254,44,4)" fg:x="808" fg:w="1"/><text x="63.6225%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3725%" y="197" width="0.0784%" height="15" fill="rgb(252,128,37)" fg:x="808" fg:w="1"/><text x="63.6225%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.3725%" y="181" width="0.0784%" height="15" fill="rgb(227,178,8)" fg:x="808" fg:w="1"/><text x="63.6225%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.3725%" y="165" width="0.0784%" height="15" fill="rgb(205,206,32)" fg:x="808" fg:w="1"/><text x="63.6225%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.3725%" y="149" width="0.0784%" height="15" fill="rgb(220,218,22)" fg:x="808" fg:w="1"/><text x="63.6225%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.3725%" y="133" width="0.0784%" height="15" fill="rgb(236,41,28)" fg:x="808" fg:w="1"/><text x="63.6225%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.3725%" y="117" width="0.0784%" height="15" fill="rgb(219,37,7)" fg:x="808" fg:w="1"/><text x="63.6225%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.3725%" y="101" width="0.0784%" height="15" fill="rgb(206,160,15)" fg:x="808" fg:w="1"/><text x="63.6225%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.3725%" y="85" width="0.0784%" height="15" fill="rgb(208,82,21)" fg:x="808" fg:w="1"/><text x="63.6225%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.3725%" y="69" width="0.0784%" height="15" fill="rgb(226,130,25)" fg:x="808" fg:w="1"/><text x="63.6225%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.3725%" y="53" width="0.0784%" height="15" fill="rgb(212,72,24)" fg:x="808" fg:w="1"/><text x="63.6225%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.3725%" y="37" width="0.0784%" height="15" fill="rgb(206,28,16)" fg:x="808" fg:w="1"/><text x="63.6225%" y="47.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.4510%" y="261" width="0.0784%" height="15" fill="rgb(249,41,5)" fg:x="809" fg:w="1"/><text x="63.7010%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="63.2941%" y="293" width="0.3137%" height="15" fill="rgb(233,96,48)" fg:x="807" fg:w="4"/><text x="63.5441%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="63.2941%" y="277" width="0.3137%" height="15" fill="rgb(240,198,11)" fg:x="807" fg:w="4"/><text x="63.5441%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.5294%" y="261" width="0.0784%" height="15" fill="rgb(209,175,35)" fg:x="810" fg:w="1"/><text x="63.7794%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.5294%" y="245" width="0.0784%" height="15" fill="rgb(214,40,51)" fg:x="810" fg:w="1"/><text x="63.7794%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.5294%" y="229" width="0.0784%" height="15" fill="rgb(252,56,4)" fg:x="810" fg:w="1"/><text x="63.7794%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.6078%" y="261" width="0.1569%" height="15" fill="rgb(219,131,5)" fg:x="811" fg:w="2"/><text x="63.8578%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.6078%" y="245" width="0.1569%" height="15" fill="rgb(223,67,53)" fg:x="811" fg:w="2"/><text x="63.8578%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6863%" y="229" width="0.0784%" height="15" fill="rgb(227,154,8)" fg:x="812" fg:w="1"/><text x="63.9363%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.7647%" y="197" width="0.0784%" height="15" fill="rgb(216,174,51)" fg:x="813" fg:w="1"/><text x="64.0147%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (36 samples, 2.82%)</title><rect x="61.0980%" y="341" width="2.8235%" height="15" fill="rgb(239,60,34)" fg:x="779" fg:w="36"/><text x="61.3480%" y="351.50">&lt;e..</text></g><g><title>kernel::model::entity::Entity::entity_ref (8 samples, 0.63%)</title><rect x="63.2941%" y="325" width="0.6275%" height="15" fill="rgb(236,165,48)" fg:x="807" fg:w="8"/><text x="63.5441%" y="335.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.63%)</title><rect x="63.2941%" y="309" width="0.6275%" height="15" fill="rgb(210,37,26)" fg:x="807" fg:w="8"/><text x="63.5441%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="63.6078%" y="293" width="0.3137%" height="15" fill="rgb(211,3,17)" fg:x="811" fg:w="4"/><text x="63.8578%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="63.6078%" y="277" width="0.3137%" height="15" fill="rgb(234,88,49)" fg:x="811" fg:w="4"/><text x="63.8578%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.7647%" y="261" width="0.1569%" height="15" fill="rgb(233,40,17)" fg:x="813" fg:w="2"/><text x="64.0147%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.7647%" y="245" width="0.1569%" height="15" fill="rgb(235,127,31)" fg:x="813" fg:w="2"/><text x="64.0147%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.7647%" y="229" width="0.1569%" height="15" fill="rgb(248,167,17)" fg:x="813" fg:w="2"/><text x="64.0147%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.7647%" y="213" width="0.1569%" height="15" fill="rgb(218,179,8)" fg:x="813" fg:w="2"/><text x="64.0147%" y="223.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.8431%" y="197" width="0.0784%" height="15" fill="rgb(216,92,14)" fg:x="814" fg:w="1"/><text x="64.0931%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.8431%" y="181" width="0.0784%" height="15" fill="rgb(221,198,46)" fg:x="814" fg:w="1"/><text x="64.0931%" y="191.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9216%" y="341" width="0.0784%" height="15" fill="rgb(244,7,25)" fg:x="815" fg:w="1"/><text x="64.1716%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.9216%" y="325" width="0.0784%" height="15" fill="rgb(233,75,6)" fg:x="815" fg:w="1"/><text x="64.1716%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.9216%" y="309" width="0.0784%" height="15" fill="rgb(240,189,41)" fg:x="815" fg:w="1"/><text x="64.1716%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.0000%" y="341" width="0.0784%" height="15" fill="rgb(237,157,21)" fg:x="816" fg:w="1"/><text x="64.2500%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.0000%" y="325" width="0.0784%" height="15" fill="rgb(210,136,49)" fg:x="816" fg:w="1"/><text x="64.2500%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (2 samples, 0.16%)</title><rect x="64.0784%" y="341" width="0.1569%" height="15" fill="rgb(210,68,29)" fg:x="817" fg:w="2"/><text x="64.3284%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.1569%" y="325" width="0.0784%" height="15" fill="rgb(247,207,20)" fg:x="818" fg:w="1"/><text x="64.4069%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.7059%" y="277" width="0.0784%" height="15" fill="rgb(224,73,48)" fg:x="825" fg:w="1"/><text x="64.9559%" y="287.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (62 samples, 4.86%)</title><rect x="60.0000%" y="389" width="4.8627%" height="15" fill="rgb(215,136,47)" fg:x="765" fg:w="62"/><text x="60.2500%" y="399.50">&lt;plugi..</text></g><g><title>kernel::model::entry::Entry::scope (48 samples, 3.76%)</title><rect x="61.0980%" y="373" width="3.7647%" height="15" fill="rgb(232,222,16)" fg:x="779" fg:w="48"/><text x="61.3480%" y="383.50">kern..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (48 samples, 3.76%)</title><rect x="61.0980%" y="357" width="3.7647%" height="15" fill="rgb(249,202,47)" fg:x="779" fg:w="48"/><text x="61.3480%" y="367.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="64.2353%" y="341" width="0.6275%" height="15" fill="rgb(236,56,8)" fg:x="819" fg:w="8"/><text x="64.4853%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="64.2353%" y="325" width="0.6275%" height="15" fill="rgb(222,6,3)" fg:x="819" fg:w="8"/><text x="64.4853%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="64.3137%" y="309" width="0.5490%" height="15" fill="rgb(254,222,28)" fg:x="820" fg:w="7"/><text x="64.5637%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="64.3137%" y="293" width="0.5490%" height="15" fill="rgb(219,57,23)" fg:x="820" fg:w="7"/><text x="64.5637%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7843%" y="277" width="0.0784%" height="15" fill="rgb(251,106,48)" fg:x="826" fg:w="1"/><text x="65.0343%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8627%" y="341" width="0.0784%" height="15" fill="rgb(242,2,23)" fg:x="827" fg:w="1"/><text x="65.1127%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.0196%" y="277" width="0.1569%" height="15" fill="rgb(212,109,31)" fg:x="829" fg:w="2"/><text x="65.2696%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.0196%" y="261" width="0.1569%" height="15" fill="rgb(241,9,22)" fg:x="829" fg:w="2"/><text x="65.2696%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.0196%" y="245" width="0.1569%" height="15" fill="rgb(209,64,27)" fg:x="829" fg:w="2"/><text x="65.2696%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="65.0196%" y="229" width="0.1569%" height="15" fill="rgb(248,13,44)" fg:x="829" fg:w="2"/><text x="65.2696%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="65.0196%" y="213" width="0.1569%" height="15" fill="rgb(213,86,6)" fg:x="829" fg:w="2"/><text x="65.2696%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="65.0196%" y="197" width="0.1569%" height="15" fill="rgb(247,11,18)" fg:x="829" fg:w="2"/><text x="65.2696%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.0196%" y="181" width="0.1569%" height="15" fill="rgb(252,31,11)" fg:x="829" fg:w="2"/><text x="65.2696%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.0196%" y="165" width="0.1569%" height="15" fill="rgb(215,63,51)" fg:x="829" fg:w="2"/><text x="65.2696%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="65.0196%" y="149" width="0.1569%" height="15" fill="rgb(222,180,4)" fg:x="829" fg:w="2"/><text x="65.2696%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="65.0196%" y="133" width="0.1569%" height="15" fill="rgb(233,4,23)" fg:x="829" fg:w="2"/><text x="65.2696%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="65.0196%" y="117" width="0.1569%" height="15" fill="rgb(230,116,22)" fg:x="829" fg:w="2"/><text x="65.2696%" y="127.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="65.0196%" y="101" width="0.1569%" height="15" fill="rgb(222,20,14)" fg:x="829" fg:w="2"/><text x="65.2696%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.0196%" y="85" width="0.1569%" height="15" fill="rgb(210,176,43)" fg:x="829" fg:w="2"/><text x="65.2696%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.0196%" y="309" width="0.2353%" height="15" fill="rgb(219,67,32)" fg:x="829" fg:w="3"/><text x="65.2696%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.0196%" y="293" width="0.2353%" height="15" fill="rgb(228,91,39)" fg:x="829" fg:w="3"/><text x="65.2696%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1765%" y="277" width="0.0784%" height="15" fill="rgb(254,63,14)" fg:x="831" fg:w="1"/><text x="65.4265%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1765%" y="261" width="0.0784%" height="15" fill="rgb(216,171,39)" fg:x="831" fg:w="1"/><text x="65.4265%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.1765%" y="245" width="0.0784%" height="15" fill="rgb(248,68,25)" fg:x="831" fg:w="1"/><text x="65.4265%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.1765%" y="229" width="0.0784%" height="15" fill="rgb(239,63,16)" fg:x="831" fg:w="1"/><text x="65.4265%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.1765%" y="213" width="0.0784%" height="15" fill="rgb(225,111,43)" fg:x="831" fg:w="1"/><text x="65.4265%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1765%" y="197" width="0.0784%" height="15" fill="rgb(246,165,17)" fg:x="831" fg:w="1"/><text x="65.4265%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1765%" y="181" width="0.0784%" height="15" fill="rgb(208,124,1)" fg:x="831" fg:w="1"/><text x="65.4265%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.1765%" y="165" width="0.0784%" height="15" fill="rgb(234,147,33)" fg:x="831" fg:w="1"/><text x="65.4265%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.1765%" y="149" width="0.0784%" height="15" fill="rgb(240,86,30)" fg:x="831" fg:w="1"/><text x="65.4265%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.1765%" y="133" width="0.0784%" height="15" fill="rgb(237,34,51)" fg:x="831" fg:w="1"/><text x="65.4265%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.1765%" y="117" width="0.0784%" height="15" fill="rgb(232,131,41)" fg:x="831" fg:w="1"/><text x="65.4265%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1765%" y="101" width="0.0784%" height="15" fill="rgb(227,129,53)" fg:x="831" fg:w="1"/><text x="65.4265%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.55%)</title><rect x="64.9412%" y="341" width="0.5490%" height="15" fill="rgb(230,90,35)" fg:x="828" fg:w="7"/><text x="65.1912%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="65.0196%" y="325" width="0.4706%" height="15" fill="rgb(248,88,27)" fg:x="829" fg:w="6"/><text x="65.2696%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="65.2549%" y="309" width="0.2353%" height="15" fill="rgb(223,18,17)" fg:x="832" fg:w="3"/><text x="65.5049%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.2549%" y="293" width="0.2353%" height="15" fill="rgb(241,11,10)" fg:x="832" fg:w="3"/><text x="65.5049%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.3333%" y="277" width="0.1569%" height="15" fill="rgb(232,111,52)" fg:x="833" fg:w="2"/><text x="65.5833%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3333%" y="261" width="0.1569%" height="15" fill="rgb(228,67,8)" fg:x="833" fg:w="2"/><text x="65.5833%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.3333%" y="245" width="0.1569%" height="15" fill="rgb(251,168,31)" fg:x="833" fg:w="2"/><text x="65.5833%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.4118%" y="229" width="0.0784%" height="15" fill="rgb(249,164,11)" fg:x="834" fg:w="1"/><text x="65.6618%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.4118%" y="213" width="0.0784%" height="15" fill="rgb(239,81,9)" fg:x="834" fg:w="1"/><text x="65.6618%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.4118%" y="197" width="0.0784%" height="15" fill="rgb(222,145,38)" fg:x="834" fg:w="1"/><text x="65.6618%" y="207.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="65.5686%" y="325" width="0.1569%" height="15" fill="rgb(238,80,54)" fg:x="836" fg:w="2"/><text x="65.8186%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.6471%" y="309" width="0.0784%" height="15" fill="rgb(237,116,16)" fg:x="837" fg:w="1"/><text x="65.8971%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.6471%" y="293" width="0.0784%" height="15" fill="rgb(218,135,19)" fg:x="837" fg:w="1"/><text x="65.8971%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.7255%" y="309" width="0.0784%" height="15" fill="rgb(216,207,44)" fg:x="838" fg:w="1"/><text x="65.9755%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7255%" y="293" width="0.0784%" height="15" fill="rgb(226,152,40)" fg:x="838" fg:w="1"/><text x="65.9755%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7255%" y="277" width="0.0784%" height="15" fill="rgb(219,98,35)" fg:x="838" fg:w="1"/><text x="65.9755%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.7255%" y="261" width="0.0784%" height="15" fill="rgb(222,136,46)" fg:x="838" fg:w="1"/><text x="65.9755%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.7255%" y="245" width="0.0784%" height="15" fill="rgb(222,71,8)" fg:x="838" fg:w="1"/><text x="65.9755%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.7255%" y="229" width="0.0784%" height="15" fill="rgb(209,89,53)" fg:x="838" fg:w="1"/><text x="65.9755%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7255%" y="213" width="0.0784%" height="15" fill="rgb(210,97,51)" fg:x="838" fg:w="1"/><text x="65.9755%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7255%" y="197" width="0.0784%" height="15" fill="rgb(248,65,21)" fg:x="838" fg:w="1"/><text x="65.9755%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.7255%" y="181" width="0.0784%" height="15" fill="rgb(222,5,31)" fg:x="838" fg:w="1"/><text x="65.9755%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.7255%" y="165" width="0.0784%" height="15" fill="rgb(241,16,30)" fg:x="838" fg:w="1"/><text x="65.9755%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.7255%" y="149" width="0.0784%" height="15" fill="rgb(215,86,30)" fg:x="838" fg:w="1"/><text x="65.9755%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.7255%" y="133" width="0.0784%" height="15" fill="rgb(235,26,44)" fg:x="838" fg:w="1"/><text x="65.9755%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7255%" y="117" width="0.0784%" height="15" fill="rgb(228,147,14)" fg:x="838" fg:w="1"/><text x="65.9755%" y="127.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (75 samples, 5.88%)</title><rect x="60.0000%" y="405" width="5.8824%" height="15" fill="rgb(253,38,50)" fg:x="765" fg:w="75"/><text x="60.2500%" y="415.50">&lt;engine..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (13 samples, 1.02%)</title><rect x="64.8627%" y="389" width="1.0196%" height="15" fill="rgb(251,151,16)" fg:x="827" fg:w="13"/><text x="65.1127%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (13 samples, 1.02%)</title><rect x="64.8627%" y="373" width="1.0196%" height="15" fill="rgb(224,64,19)" fg:x="827" fg:w="13"/><text x="65.1127%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (13 samples, 1.02%)</title><rect x="64.8627%" y="357" width="1.0196%" height="15" fill="rgb(235,214,47)" fg:x="827" fg:w="13"/><text x="65.1127%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="65.4902%" y="341" width="0.3922%" height="15" fill="rgb(218,15,19)" fg:x="835" fg:w="5"/><text x="65.7402%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="65.7255%" y="325" width="0.1569%" height="15" fill="rgb(247,209,3)" fg:x="838" fg:w="2"/><text x="65.9755%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.8039%" y="309" width="0.0784%" height="15" fill="rgb(217,29,2)" fg:x="839" fg:w="1"/><text x="66.0539%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8039%" y="293" width="0.0784%" height="15" fill="rgb(234,9,9)" fg:x="839" fg:w="1"/><text x="66.0539%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.8039%" y="277" width="0.0784%" height="15" fill="rgb(207,43,14)" fg:x="839" fg:w="1"/><text x="66.0539%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8039%" y="261" width="0.0784%" height="15" fill="rgb(216,219,36)" fg:x="839" fg:w="1"/><text x="66.0539%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="66.0392%" y="277" width="0.1569%" height="15" fill="rgb(238,12,26)" fg:x="842" fg:w="2"/><text x="66.2892%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.1961%" y="229" width="0.0784%" height="15" fill="rgb(226,67,30)" fg:x="844" fg:w="1"/><text x="66.4461%" y="239.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.16%)</title><rect x="66.1961%" y="261" width="0.1569%" height="15" fill="rgb(229,154,7)" fg:x="844" fg:w="2"/><text x="66.4461%" y="271.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="66.1961%" y="245" width="0.1569%" height="15" fill="rgb(249,90,18)" fg:x="844" fg:w="2"/><text x="66.4461%" y="255.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::SimpleReply&gt;::serialize (1 samples, 0.08%)</title><rect x="66.2745%" y="229" width="0.0784%" height="15" fill="rgb(223,53,15)" fg:x="845" fg:w="1"/><text x="66.5245%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (84 samples, 6.59%)</title><rect x="59.9216%" y="469" width="6.5882%" height="15" fill="rgb(253,86,38)" fg:x="764" fg:w="84"/><text x="60.1716%" y="479.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (84 samples, 6.59%)</title><rect x="59.9216%" y="453" width="6.5882%" height="15" fill="rgb(222,198,9)" fg:x="764" fg:w="84"/><text x="60.1716%" y="463.50">kernel::p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (84 samples, 6.59%)</title><rect x="59.9216%" y="437" width="6.5882%" height="15" fill="rgb(240,146,25)" fg:x="764" fg:w="84"/><text x="60.1716%" y="447.50">kernel::p..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (84 samples, 6.59%)</title><rect x="59.9216%" y="421" width="6.5882%" height="15" fill="rgb(225,38,10)" fg:x="764" fg:w="84"/><text x="60.1716%" y="431.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (8 samples, 0.63%)</title><rect x="65.8824%" y="405" width="0.6275%" height="15" fill="rgb(246,93,4)" fg:x="840" fg:w="8"/><text x="66.1324%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (8 samples, 0.63%)</title><rect x="65.8824%" y="389" width="0.6275%" height="15" fill="rgb(222,55,18)" fg:x="840" fg:w="8"/><text x="66.1324%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (7 samples, 0.55%)</title><rect x="65.9608%" y="373" width="0.5490%" height="15" fill="rgb(233,137,48)" fg:x="841" fg:w="7"/><text x="66.2108%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.47%)</title><rect x="66.0392%" y="357" width="0.4706%" height="15" fill="rgb(214,8,54)" fg:x="842" fg:w="6"/><text x="66.2892%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (6 samples, 0.47%)</title><rect x="66.0392%" y="341" width="0.4706%" height="15" fill="rgb(206,75,4)" fg:x="842" fg:w="6"/><text x="66.2892%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.47%)</title><rect x="66.0392%" y="325" width="0.4706%" height="15" fill="rgb(238,171,14)" fg:x="842" fg:w="6"/><text x="66.2892%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.47%)</title><rect x="66.0392%" y="309" width="0.4706%" height="15" fill="rgb(233,70,41)" fg:x="842" fg:w="6"/><text x="66.2892%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (6 samples, 0.47%)</title><rect x="66.0392%" y="293" width="0.4706%" height="15" fill="rgb(214,68,36)" fg:x="842" fg:w="6"/><text x="66.2892%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (4 samples, 0.31%)</title><rect x="66.1961%" y="277" width="0.3137%" height="15" fill="rgb(223,29,5)" fg:x="844" fg:w="4"/><text x="66.4461%" y="287.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="66.3529%" y="261" width="0.1569%" height="15" fill="rgb(251,22,40)" fg:x="846" fg:w="2"/><text x="66.6029%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.5098%" y="373" width="0.0784%" height="15" fill="rgb(210,67,41)" fg:x="848" fg:w="1"/><text x="66.7598%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="66.5098%" y="357" width="0.0784%" height="15" fill="rgb(225,177,31)" fg:x="848" fg:w="1"/><text x="66.7598%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="66.5882%" y="373" width="0.2353%" height="15" fill="rgb(221,229,11)" fg:x="849" fg:w="3"/><text x="66.8382%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.7451%" y="357" width="0.0784%" height="15" fill="rgb(247,172,52)" fg:x="851" fg:w="1"/><text x="66.9951%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.8235%" y="341" width="0.0784%" height="15" fill="rgb(212,73,19)" fg:x="852" fg:w="1"/><text x="67.0735%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="66.8235%" y="325" width="0.0784%" height="15" fill="rgb(244,7,46)" fg:x="852" fg:w="1"/><text x="67.0735%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.9804%" y="293" width="0.0784%" height="15" fill="rgb(230,113,20)" fg:x="854" fg:w="1"/><text x="67.2304%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.9804%" y="277" width="0.0784%" height="15" fill="rgb(209,97,30)" fg:x="854" fg:w="1"/><text x="67.2304%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="66.9804%" y="261" width="0.0784%" height="15" fill="rgb(243,89,12)" fg:x="854" fg:w="1"/><text x="67.2304%" y="271.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.63%)</title><rect x="66.5098%" y="421" width="0.6275%" height="15" fill="rgb(228,32,19)" fg:x="848" fg:w="8"/><text x="66.7598%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.63%)</title><rect x="66.5098%" y="405" width="0.6275%" height="15" fill="rgb(248,25,17)" fg:x="848" fg:w="8"/><text x="66.7598%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="66.5098%" y="389" width="0.6275%" height="15" fill="rgb(232,161,29)" fg:x="848" fg:w="8"/><text x="66.7598%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="66.8235%" y="373" width="0.3137%" height="15" fill="rgb(251,192,11)" fg:x="852" fg:w="4"/><text x="67.0735%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="66.8235%" y="357" width="0.3137%" height="15" fill="rgb(240,47,32)" fg:x="852" fg:w="4"/><text x="67.0735%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="66.9020%" y="341" width="0.2353%" height="15" fill="rgb(250,16,45)" fg:x="853" fg:w="3"/><text x="67.1520%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.9804%" y="325" width="0.1569%" height="15" fill="rgb(227,217,42)" fg:x="854" fg:w="2"/><text x="67.2304%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.9804%" y="309" width="0.1569%" height="15" fill="rgb(206,82,54)" fg:x="854" fg:w="2"/><text x="67.2304%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.0588%" y="293" width="0.0784%" height="15" fill="rgb(243,145,25)" fg:x="855" fg:w="1"/><text x="67.3088%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0588%" y="277" width="0.0784%" height="15" fill="rgb(207,166,24)" fg:x="855" fg:w="1"/><text x="67.3088%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.0588%" y="261" width="0.0784%" height="15" fill="rgb(215,191,44)" fg:x="855" fg:w="1"/><text x="67.3088%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.1373%" y="389" width="0.0784%" height="15" fill="rgb(234,218,51)" fg:x="856" fg:w="1"/><text x="67.3873%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.2941%" y="309" width="0.1569%" height="15" fill="rgb(245,133,21)" fg:x="858" fg:w="2"/><text x="67.5441%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.2941%" y="293" width="0.1569%" height="15" fill="rgb(230,136,45)" fg:x="858" fg:w="2"/><text x="67.5441%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.3725%" y="277" width="0.0784%" height="15" fill="rgb(247,63,43)" fg:x="859" fg:w="1"/><text x="67.6225%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.3725%" y="261" width="0.0784%" height="15" fill="rgb(254,223,31)" fg:x="859" fg:w="1"/><text x="67.6225%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.3725%" y="245" width="0.0784%" height="15" fill="rgb(236,185,0)" fg:x="859" fg:w="1"/><text x="67.6225%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="67.2157%" y="341" width="0.3137%" height="15" fill="rgb(231,139,46)" fg:x="857" fg:w="4"/><text x="67.4657%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="67.2157%" y="325" width="0.3137%" height="15" fill="rgb(236,147,31)" fg:x="857" fg:w="4"/><text x="67.4657%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.4510%" y="309" width="0.0784%" height="15" fill="rgb(225,222,22)" fg:x="860" fg:w="1"/><text x="67.7010%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.4510%" y="293" width="0.0784%" height="15" fill="rgb(225,193,14)" fg:x="860" fg:w="1"/><text x="67.7010%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.4510%" y="277" width="0.0784%" height="15" fill="rgb(253,193,46)" fg:x="860" fg:w="1"/><text x="67.7010%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.4510%" y="261" width="0.0784%" height="15" fill="rgb(218,187,39)" fg:x="860" fg:w="1"/><text x="67.7010%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4510%" y="245" width="0.0784%" height="15" fill="rgb(227,162,48)" fg:x="860" fg:w="1"/><text x="67.7010%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.5294%" y="309" width="0.0784%" height="15" fill="rgb(222,25,5)" fg:x="861" fg:w="1"/><text x="67.7794%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.47%)</title><rect x="67.2157%" y="389" width="0.4706%" height="15" fill="rgb(211,205,16)" fg:x="857" fg:w="6"/><text x="67.4657%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="67.2157%" y="373" width="0.4706%" height="15" fill="rgb(244,191,2)" fg:x="857" fg:w="6"/><text x="67.4657%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.47%)</title><rect x="67.2157%" y="357" width="0.4706%" height="15" fill="rgb(248,159,12)" fg:x="857" fg:w="6"/><text x="67.4657%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.5294%" y="341" width="0.1569%" height="15" fill="rgb(235,204,17)" fg:x="861" fg:w="2"/><text x="67.7794%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.5294%" y="325" width="0.1569%" height="15" fill="rgb(240,21,27)" fg:x="861" fg:w="2"/><text x="67.7794%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="67.6078%" y="309" width="0.0784%" height="15" fill="rgb(224,170,31)" fg:x="862" fg:w="1"/><text x="67.8578%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6078%" y="293" width="0.0784%" height="15" fill="rgb(223,145,32)" fg:x="862" fg:w="1"/><text x="67.8578%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.6078%" y="277" width="0.0784%" height="15" fill="rgb(243,100,5)" fg:x="862" fg:w="1"/><text x="67.8578%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.6078%" y="261" width="0.0784%" height="15" fill="rgb(242,131,51)" fg:x="862" fg:w="1"/><text x="67.8578%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.6078%" y="245" width="0.0784%" height="15" fill="rgb(223,156,46)" fg:x="862" fg:w="1"/><text x="67.8578%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6078%" y="229" width="0.0784%" height="15" fill="rgb(215,10,40)" fg:x="862" fg:w="1"/><text x="67.8578%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (17 samples, 1.33%)</title><rect x="66.5098%" y="437" width="1.3333%" height="15" fill="rgb(233,155,0)" fg:x="848" fg:w="17"/><text x="66.7598%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.71%)</title><rect x="67.1373%" y="421" width="0.7059%" height="15" fill="rgb(247,78,6)" fg:x="856" fg:w="9"/><text x="67.3873%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.71%)</title><rect x="67.1373%" y="405" width="0.7059%" height="15" fill="rgb(237,217,21)" fg:x="856" fg:w="9"/><text x="67.3873%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="67.6863%" y="389" width="0.1569%" height="15" fill="rgb(212,1,21)" fg:x="863" fg:w="2"/><text x="67.9363%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.6863%" y="373" width="0.1569%" height="15" fill="rgb(213,7,14)" fg:x="863" fg:w="2"/><text x="67.9363%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="67.6863%" y="357" width="0.1569%" height="15" fill="rgb(225,84,14)" fg:x="863" fg:w="2"/><text x="67.9363%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.6863%" y="341" width="0.1569%" height="15" fill="rgb(239,216,39)" fg:x="863" fg:w="2"/><text x="67.9363%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (19 samples, 1.49%)</title><rect x="66.5098%" y="469" width="1.4902%" height="15" fill="rgb(253,29,23)" fg:x="848" fg:w="19"/><text x="66.7598%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.49%)</title><rect x="66.5098%" y="453" width="1.4902%" height="15" fill="rgb(220,167,50)" fg:x="848" fg:w="19"/><text x="66.7598%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="67.8431%" y="437" width="0.1569%" height="15" fill="rgb(232,141,1)" fg:x="865" fg:w="2"/><text x="68.0931%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="67.8431%" y="421" width="0.1569%" height="15" fill="rgb(222,210,1)" fg:x="865" fg:w="2"/><text x="68.0931%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.9216%" y="405" width="0.0784%" height="15" fill="rgb(219,84,10)" fg:x="866" fg:w="1"/><text x="68.1716%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9216%" y="389" width="0.0784%" height="15" fill="rgb(245,188,6)" fg:x="866" fg:w="1"/><text x="68.1716%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.9216%" y="373" width="0.0784%" height="15" fill="rgb(252,139,39)" fg:x="866" fg:w="1"/><text x="68.1716%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9216%" y="357" width="0.0784%" height="15" fill="rgb(218,42,26)" fg:x="866" fg:w="1"/><text x="68.1716%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.9216%" y="341" width="0.0784%" height="15" fill="rgb(237,226,51)" fg:x="866" fg:w="1"/><text x="68.1716%" y="351.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="68.0000%" y="469" width="0.1569%" height="15" fill="rgb(246,15,17)" fg:x="867" fg:w="2"/><text x="68.2500%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="68.0000%" y="453" width="0.1569%" height="15" fill="rgb(228,170,42)" fg:x="867" fg:w="2"/><text x="68.2500%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="68.0784%" y="437" width="0.0784%" height="15" fill="rgb(248,118,53)" fg:x="868" fg:w="1"/><text x="68.3284%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="68.0784%" y="421" width="0.0784%" height="15" fill="rgb(207,30,10)" fg:x="868" fg:w="1"/><text x="68.3284%" y="431.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="68.0784%" y="405" width="0.0784%" height="15" fill="rgb(217,104,38)" fg:x="868" fg:w="1"/><text x="68.3284%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="68.0784%" y="389" width="0.0784%" height="15" fill="rgb(211,165,26)" fg:x="868" fg:w="1"/><text x="68.3284%" y="399.50"></text></g><g><title>plugins_core::library::parser::spaces (1 samples, 0.08%)</title><rect x="68.0784%" y="373" width="0.0784%" height="15" fill="rgb(247,38,9)" fg:x="868" fg:w="1"/><text x="68.3284%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.1569%" y="453" width="0.0784%" height="15" fill="rgb(218,187,8)" fg:x="869" fg:w="1"/><text x="68.4069%" y="463.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.39%)</title><rect x="68.1569%" y="469" width="0.3922%" height="15" fill="rgb(247,94,28)" fg:x="869" fg:w="5"/><text x="68.4069%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.31%)</title><rect x="68.2353%" y="453" width="0.3137%" height="15" fill="rgb(218,173,30)" fg:x="870" fg:w="4"/><text x="68.4853%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="68.2353%" y="437" width="0.3137%" height="15" fill="rgb(245,45,36)" fg:x="870" fg:w="4"/><text x="68.4853%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="68.2353%" y="421" width="0.3137%" height="15" fill="rgb(221,172,44)" fg:x="870" fg:w="4"/><text x="68.4853%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="68.2353%" y="405" width="0.3137%" height="15" fill="rgb(222,45,12)" fg:x="870" fg:w="4"/><text x="68.4853%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.31%)</title><rect x="68.2353%" y="389" width="0.3137%" height="15" fill="rgb(250,10,22)" fg:x="870" fg:w="4"/><text x="68.4853%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="68.2353%" y="373" width="0.3137%" height="15" fill="rgb(239,27,0)" fg:x="870" fg:w="4"/><text x="68.4853%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="68.3922%" y="357" width="0.1569%" height="15" fill="rgb(223,118,22)" fg:x="872" fg:w="2"/><text x="68.6422%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4706%" y="341" width="0.0784%" height="15" fill="rgb(251,81,25)" fg:x="873" fg:w="1"/><text x="68.7206%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.6275%" y="389" width="0.0784%" height="15" fill="rgb(237,225,53)" fg:x="875" fg:w="1"/><text x="68.8775%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.6275%" y="421" width="0.1569%" height="15" fill="rgb(237,186,51)" fg:x="875" fg:w="2"/><text x="68.8775%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.6275%" y="405" width="0.1569%" height="15" fill="rgb(247,209,11)" fg:x="875" fg:w="2"/><text x="68.8775%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7059%" y="389" width="0.0784%" height="15" fill="rgb(223,109,27)" fg:x="876" fg:w="1"/><text x="68.9559%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="68.7843%" y="421" width="0.0784%" height="15" fill="rgb(246,181,13)" fg:x="877" fg:w="1"/><text x="69.0343%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.7843%" y="405" width="0.0784%" height="15" fill="rgb(234,57,44)" fg:x="877" fg:w="1"/><text x="69.0343%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.7843%" y="389" width="0.0784%" height="15" fill="rgb(211,227,50)" fg:x="877" fg:w="1"/><text x="69.0343%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.7843%" y="373" width="0.0784%" height="15" fill="rgb(254,57,34)" fg:x="877" fg:w="1"/><text x="69.0343%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.7843%" y="357" width="0.0784%" height="15" fill="rgb(227,212,26)" fg:x="877" fg:w="1"/><text x="69.0343%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.8627%" y="357" width="0.0784%" height="15" fill="rgb(244,169,44)" fg:x="878" fg:w="1"/><text x="69.1127%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.9412%" y="357" width="0.0784%" height="15" fill="rgb(236,135,50)" fg:x="879" fg:w="1"/><text x="69.1912%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.9412%" y="341" width="0.0784%" height="15" fill="rgb(241,89,30)" fg:x="879" fg:w="1"/><text x="69.1912%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.55%)</title><rect x="68.5490%" y="453" width="0.5490%" height="15" fill="rgb(206,113,34)" fg:x="874" fg:w="7"/><text x="68.7990%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.55%)</title><rect x="68.5490%" y="437" width="0.5490%" height="15" fill="rgb(218,104,52)" fg:x="874" fg:w="7"/><text x="68.7990%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.8627%" y="421" width="0.2353%" height="15" fill="rgb(223,82,32)" fg:x="878" fg:w="3"/><text x="69.1127%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.8627%" y="405" width="0.2353%" height="15" fill="rgb(249,219,30)" fg:x="878" fg:w="3"/><text x="69.1127%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.8627%" y="389" width="0.2353%" height="15" fill="rgb(233,141,21)" fg:x="878" fg:w="3"/><text x="69.1127%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.8627%" y="373" width="0.2353%" height="15" fill="rgb(252,87,44)" fg:x="878" fg:w="3"/><text x="69.1127%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.0196%" y="357" width="0.0784%" height="15" fill="rgb(229,48,33)" fg:x="880" fg:w="1"/><text x="69.2696%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0196%" y="341" width="0.0784%" height="15" fill="rgb(229,23,22)" fg:x="880" fg:w="1"/><text x="69.2696%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.0196%" y="325" width="0.0784%" height="15" fill="rgb(244,116,16)" fg:x="880" fg:w="1"/><text x="69.2696%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0196%" y="309" width="0.0784%" height="15" fill="rgb(247,45,10)" fg:x="880" fg:w="1"/><text x="69.2696%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.63%)</title><rect x="68.5490%" y="469" width="0.6275%" height="15" fill="rgb(228,60,29)" fg:x="874" fg:w="8"/><text x="68.7990%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="69.0980%" y="453" width="0.0784%" height="15" fill="rgb(205,129,15)" fg:x="881" fg:w="1"/><text x="69.3480%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.0980%" y="437" width="0.0784%" height="15" fill="rgb(206,229,4)" fg:x="881" fg:w="1"/><text x="69.3480%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0980%" y="421" width="0.0784%" height="15" fill="rgb(249,191,30)" fg:x="881" fg:w="1"/><text x="69.3480%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.2549%" y="357" width="0.1569%" height="15" fill="rgb(250,84,54)" fg:x="883" fg:w="2"/><text x="69.5049%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.4118%" y="325" width="0.0784%" height="15" fill="rgb(207,25,53)" fg:x="885" fg:w="1"/><text x="69.6618%" y="335.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.55%)</title><rect x="69.1765%" y="405" width="0.5490%" height="15" fill="rgb(235,40,8)" fg:x="882" fg:w="7"/><text x="69.4265%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.55%)</title><rect x="69.1765%" y="389" width="0.5490%" height="15" fill="rgb(226,169,33)" fg:x="882" fg:w="7"/><text x="69.4265%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="69.2549%" y="373" width="0.4706%" height="15" fill="rgb(238,110,8)" fg:x="883" fg:w="6"/><text x="69.5049%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="69.4118%" y="357" width="0.3137%" height="15" fill="rgb(251,206,12)" fg:x="885" fg:w="4"/><text x="69.6618%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="69.4118%" y="341" width="0.3137%" height="15" fill="rgb(248,171,18)" fg:x="885" fg:w="4"/><text x="69.6618%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.4902%" y="325" width="0.2353%" height="15" fill="rgb(213,65,46)" fg:x="886" fg:w="3"/><text x="69.7402%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.6471%" y="309" width="0.0784%" height="15" fill="rgb(211,154,15)" fg:x="888" fg:w="1"/><text x="69.8971%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.6471%" y="293" width="0.0784%" height="15" fill="rgb(217,75,43)" fg:x="888" fg:w="1"/><text x="69.8971%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.6471%" y="277" width="0.0784%" height="15" fill="rgb(230,32,33)" fg:x="888" fg:w="1"/><text x="69.8971%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.6471%" y="261" width="0.0784%" height="15" fill="rgb(221,100,16)" fg:x="888" fg:w="1"/><text x="69.8971%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.6471%" y="245" width="0.0784%" height="15" fill="rgb(212,129,47)" fg:x="888" fg:w="1"/><text x="69.8971%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.6471%" y="229" width="0.0784%" height="15" fill="rgb(239,217,47)" fg:x="888" fg:w="1"/><text x="69.8971%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6471%" y="213" width="0.0784%" height="15" fill="rgb(230,84,24)" fg:x="888" fg:w="1"/><text x="69.8971%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8824%" y="373" width="0.0784%" height="15" fill="rgb(214,153,51)" fg:x="891" fg:w="1"/><text x="70.1324%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.9608%" y="293" width="0.1569%" height="15" fill="rgb(231,6,35)" fg:x="892" fg:w="2"/><text x="70.2108%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.0392%" y="277" width="0.0784%" height="15" fill="rgb(229,122,30)" fg:x="893" fg:w="1"/><text x="70.2892%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.0392%" y="261" width="0.0784%" height="15" fill="rgb(234,71,10)" fg:x="893" fg:w="1"/><text x="70.2892%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.0392%" y="245" width="0.0784%" height="15" fill="rgb(215,173,26)" fg:x="893" fg:w="1"/><text x="70.2892%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="70.0392%" y="229" width="0.0784%" height="15" fill="rgb(248,118,52)" fg:x="893" fg:w="1"/><text x="70.2892%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="69.9608%" y="373" width="0.2353%" height="15" fill="rgb(237,55,46)" fg:x="892" fg:w="3"/><text x="70.2108%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.9608%" y="357" width="0.2353%" height="15" fill="rgb(243,214,43)" fg:x="892" fg:w="3"/><text x="70.2108%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.9608%" y="341" width="0.2353%" height="15" fill="rgb(252,123,30)" fg:x="892" fg:w="3"/><text x="70.2108%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.9608%" y="325" width="0.2353%" height="15" fill="rgb(215,73,39)" fg:x="892" fg:w="3"/><text x="70.2108%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.9608%" y="309" width="0.2353%" height="15" fill="rgb(251,194,29)" fg:x="892" fg:w="3"/><text x="70.2108%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="70.1176%" y="293" width="0.0784%" height="15" fill="rgb(224,58,52)" fg:x="894" fg:w="1"/><text x="70.3676%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.1176%" y="277" width="0.0784%" height="15" fill="rgb(248,106,46)" fg:x="894" fg:w="1"/><text x="70.3676%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.10%)</title><rect x="69.1765%" y="421" width="1.0980%" height="15" fill="rgb(223,80,29)" fg:x="882" fg:w="14"/><text x="69.4265%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="69.7255%" y="405" width="0.5490%" height="15" fill="rgb(243,137,9)" fg:x="889" fg:w="7"/><text x="69.9755%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="69.7255%" y="389" width="0.5490%" height="15" fill="rgb(235,121,28)" fg:x="889" fg:w="7"/><text x="69.9755%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.1961%" y="373" width="0.0784%" height="15" fill="rgb(219,121,41)" fg:x="895" fg:w="1"/><text x="70.4461%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1961%" y="357" width="0.0784%" height="15" fill="rgb(251,60,6)" fg:x="895" fg:w="1"/><text x="70.4461%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.1961%" y="341" width="0.0784%" height="15" fill="rgb(208,12,30)" fg:x="895" fg:w="1"/><text x="70.4461%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1961%" y="325" width="0.0784%" height="15" fill="rgb(207,176,36)" fg:x="895" fg:w="1"/><text x="70.4461%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.2745%" y="421" width="0.0784%" height="15" fill="rgb(211,188,29)" fg:x="896" fg:w="1"/><text x="70.5245%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="70.2745%" y="405" width="0.0784%" height="15" fill="rgb(220,184,37)" fg:x="896" fg:w="1"/><text x="70.5245%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.2745%" y="389" width="0.0784%" height="15" fill="rgb(239,87,37)" fg:x="896" fg:w="1"/><text x="70.5245%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.25%)</title><rect x="69.1765%" y="453" width="1.2549%" height="15" fill="rgb(232,113,44)" fg:x="882" fg:w="16"/><text x="69.4265%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.25%)</title><rect x="69.1765%" y="437" width="1.2549%" height="15" fill="rgb(246,25,39)" fg:x="882" fg:w="16"/><text x="69.4265%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="70.3529%" y="421" width="0.0784%" height="15" fill="rgb(247,30,13)" fg:x="897" fg:w="1"/><text x="70.6029%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.3529%" y="405" width="0.0784%" height="15" fill="rgb(230,176,35)" fg:x="897" fg:w="1"/><text x="70.6029%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.3529%" y="389" width="0.0784%" height="15" fill="rgb(222,23,18)" fg:x="897" fg:w="1"/><text x="70.6029%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="70.4314%" y="437" width="0.1569%" height="15" fill="rgb(234,86,8)" fg:x="898" fg:w="2"/><text x="70.6814%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.4314%" y="421" width="0.1569%" height="15" fill="rgb(206,218,47)" fg:x="898" fg:w="2"/><text x="70.6814%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.5098%" y="405" width="0.0784%" height="15" fill="rgb(229,35,31)" fg:x="899" fg:w="1"/><text x="70.7598%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.5098%" y="389" width="0.0784%" height="15" fill="rgb(242,81,7)" fg:x="899" fg:w="1"/><text x="70.7598%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.6667%" y="405" width="0.1569%" height="15" fill="rgb(231,11,35)" fg:x="901" fg:w="2"/><text x="70.9167%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7451%" y="389" width="0.0784%" height="15" fill="rgb(219,218,17)" fg:x="902" fg:w="1"/><text x="70.9951%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7451%" y="373" width="0.0784%" height="15" fill="rgb(221,83,32)" fg:x="902" fg:w="1"/><text x="70.9951%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7451%" y="357" width="0.0784%" height="15" fill="rgb(233,49,54)" fg:x="902" fg:w="1"/><text x="70.9951%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7451%" y="341" width="0.0784%" height="15" fill="rgb(206,18,51)" fg:x="902" fg:w="1"/><text x="70.9951%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7451%" y="325" width="0.0784%" height="15" fill="rgb(249,193,15)" fg:x="902" fg:w="1"/><text x="70.9951%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.7451%" y="309" width="0.0784%" height="15" fill="rgb(245,186,19)" fg:x="902" fg:w="1"/><text x="70.9951%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.7451%" y="293" width="0.0784%" height="15" fill="rgb(230,4,24)" fg:x="902" fg:w="1"/><text x="70.9951%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8235%" y="405" width="0.0784%" height="15" fill="rgb(234,75,27)" fg:x="903" fg:w="1"/><text x="71.0735%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.9020%" y="373" width="0.0784%" height="15" fill="rgb(244,187,35)" fg:x="904" fg:w="1"/><text x="71.1520%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.9020%" y="357" width="0.0784%" height="15" fill="rgb(241,97,43)" fg:x="904" fg:w="1"/><text x="71.1520%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="70.9020%" y="405" width="0.1569%" height="15" fill="rgb(236,94,2)" fg:x="904" fg:w="2"/><text x="71.1520%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="70.9020%" y="389" width="0.1569%" height="15" fill="rgb(231,175,7)" fg:x="904" fg:w="2"/><text x="71.1520%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.9804%" y="373" width="0.0784%" height="15" fill="rgb(236,89,47)" fg:x="905" fg:w="1"/><text x="71.2304%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.9804%" y="357" width="0.0784%" height="15" fill="rgb(213,191,37)" fg:x="905" fg:w="1"/><text x="71.2304%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.1373%" y="341" width="0.0784%" height="15" fill="rgb(252,0,34)" fg:x="907" fg:w="1"/><text x="71.3873%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.1373%" y="325" width="0.0784%" height="15" fill="rgb(208,145,44)" fg:x="907" fg:w="1"/><text x="71.3873%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1373%" y="309" width="0.0784%" height="15" fill="rgb(227,95,50)" fg:x="907" fg:w="1"/><text x="71.3873%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.78%)</title><rect x="70.5882%" y="437" width="0.7843%" height="15" fill="rgb(222,136,24)" fg:x="900" fg:w="10"/><text x="70.8382%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.78%)</title><rect x="70.5882%" y="421" width="0.7843%" height="15" fill="rgb(218,105,10)" fg:x="900" fg:w="10"/><text x="70.8382%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.31%)</title><rect x="71.0588%" y="405" width="0.3137%" height="15" fill="rgb(216,65,28)" fg:x="906" fg:w="4"/><text x="71.3088%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="71.0588%" y="389" width="0.3137%" height="15" fill="rgb(229,6,28)" fg:x="906" fg:w="4"/><text x="71.3088%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.31%)</title><rect x="71.0588%" y="373" width="0.3137%" height="15" fill="rgb(222,160,42)" fg:x="906" fg:w="4"/><text x="71.3088%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="71.0588%" y="357" width="0.3137%" height="15" fill="rgb(235,83,49)" fg:x="906" fg:w="4"/><text x="71.3088%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.2157%" y="341" width="0.1569%" height="15" fill="rgb(236,86,36)" fg:x="908" fg:w="2"/><text x="71.4657%" y="351.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (149 samples, 11.69%)</title><rect x="59.7647%" y="501" width="11.6863%" height="15" fill="rgb(236,19,41)" fg:x="762" fg:w="149"/><text x="60.0147%" y="511.50">engine::session::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (149 samples, 11.69%)</title><rect x="59.7647%" y="485" width="11.6863%" height="15" fill="rgb(217,71,31)" fg:x="762" fg:w="149"/><text x="60.0147%" y="495.50">engine::session::..</text></g><g><title>kernel::model::entry::EntryResolver::world (29 samples, 2.27%)</title><rect x="69.1765%" y="469" width="2.2745%" height="15" fill="rgb(236,209,25)" fg:x="882" fg:w="29"/><text x="69.4265%" y="479.50">k..</text></g><g><title>kernel::model::entry::Entry::new (13 samples, 1.02%)</title><rect x="70.4314%" y="453" width="1.0196%" height="15" fill="rgb(247,104,21)" fg:x="898" fg:w="13"/><text x="70.6814%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="71.3725%" y="437" width="0.0784%" height="15" fill="rgb(243,80,38)" fg:x="910" fg:w="1"/><text x="71.6225%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.3725%" y="421" width="0.0784%" height="15" fill="rgb(232,109,38)" fg:x="910" fg:w="1"/><text x="71.6225%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.3725%" y="405" width="0.0784%" height="15" fill="rgb(212,177,53)" fg:x="910" fg:w="1"/><text x="71.6225%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.3725%" y="389" width="0.0784%" height="15" fill="rgb(227,30,34)" fg:x="910" fg:w="1"/><text x="71.6225%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (912 samples, 71.53%)</title><rect x="0.0000%" y="549" width="71.5294%" height="15" fill="rgb(205,175,25)" fg:x="0" fg:w="912"/><text x="0.2500%" y="559.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (912 samples, 71.53%)</title><rect x="0.0000%" y="533" width="71.5294%" height="15" fill="rgb(249,39,54)" fg:x="0" fg:w="912"/><text x="0.2500%" y="543.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (912 samples, 71.53%)</title><rect x="0.0000%" y="517" width="71.5294%" height="15" fill="rgb(215,54,37)" fg:x="0" fg:w="912"/><text x="0.2500%" y="527.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="71.4510%" y="501" width="0.0784%" height="15" fill="rgb(205,60,46)" fg:x="911" fg:w="1"/><text x="71.7010%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="71.4510%" y="485" width="0.0784%" height="15" fill="rgb(238,89,29)" fg:x="911" fg:w="1"/><text x="71.7010%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.4510%" y="469" width="0.0784%" height="15" fill="rgb(212,48,10)" fg:x="911" fg:w="1"/><text x="71.7010%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.4510%" y="453" width="0.0784%" height="15" fill="rgb(237,186,28)" fg:x="911" fg:w="1"/><text x="71.7010%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="71.5294%" y="485" width="0.1569%" height="15" fill="rgb(237,204,4)" fg:x="912" fg:w="2"/><text x="71.7794%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="71.5294%" y="469" width="0.1569%" height="15" fill="rgb(237,15,47)" fg:x="912" fg:w="2"/><text x="71.7794%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="72.0000%" y="389" width="0.1569%" height="15" fill="rgb(244,110,25)" fg:x="918" fg:w="2"/><text x="72.2500%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.0000%" y="373" width="0.1569%" height="15" fill="rgb(241,12,16)" fg:x="918" fg:w="2"/><text x="72.2500%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1569%" y="389" width="0.0784%" height="15" fill="rgb(235,25,9)" fg:x="920" fg:w="1"/><text x="72.4069%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.2353%" y="389" width="0.0784%" height="15" fill="rgb(245,159,19)" fg:x="921" fg:w="1"/><text x="72.4853%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2353%" y="373" width="0.0784%" height="15" fill="rgb(236,63,32)" fg:x="921" fg:w="1"/><text x="72.4853%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.63%)</title><rect x="71.7647%" y="421" width="0.6275%" height="15" fill="rgb(235,32,52)" fg:x="915" fg:w="8"/><text x="72.0147%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="71.8431%" y="405" width="0.5490%" height="15" fill="rgb(209,176,21)" fg:x="916" fg:w="7"/><text x="72.0931%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.3137%" y="389" width="0.0784%" height="15" fill="rgb(205,90,42)" fg:x="922" fg:w="1"/><text x="72.5637%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3137%" y="373" width="0.0784%" height="15" fill="rgb(213,132,16)" fg:x="922" fg:w="1"/><text x="72.5637%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.71%)</title><rect x="71.7647%" y="469" width="0.7059%" height="15" fill="rgb(232,11,22)" fg:x="915" fg:w="9"/><text x="72.0147%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.71%)</title><rect x="71.7647%" y="453" width="0.7059%" height="15" fill="rgb(248,167,41)" fg:x="915" fg:w="9"/><text x="72.0147%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.71%)</title><rect x="71.7647%" y="437" width="0.7059%" height="15" fill="rgb(209,127,6)" fg:x="915" fg:w="9"/><text x="72.0147%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3922%" y="421" width="0.0784%" height="15" fill="rgb(246,210,34)" fg:x="923" fg:w="1"/><text x="72.6422%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.02%)</title><rect x="71.5294%" y="501" width="1.0196%" height="15" fill="rgb(238,165,13)" fg:x="912" fg:w="13"/><text x="71.7794%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (11 samples, 0.86%)</title><rect x="71.6863%" y="485" width="0.8627%" height="15" fill="rgb(233,98,15)" fg:x="914" fg:w="11"/><text x="71.9363%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.4706%" y="469" width="0.0784%" height="15" fill="rgb(215,215,51)" fg:x="924" fg:w="1"/><text x="72.7206%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="72.5490%" y="453" width="0.0784%" height="15" fill="rgb(217,161,25)" fg:x="925" fg:w="1"/><text x="72.7990%" y="463.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="72.6275%" y="453" width="0.0784%" height="15" fill="rgb(217,167,48)" fg:x="926" fg:w="1"/><text x="72.8775%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6275%" y="437" width="0.0784%" height="15" fill="rgb(205,163,34)" fg:x="926" fg:w="1"/><text x="72.8775%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.7059%" y="437" width="0.0784%" height="15" fill="rgb(241,197,31)" fg:x="927" fg:w="1"/><text x="72.9559%" y="447.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="72.7843%" y="325" width="0.0784%" height="15" fill="rgb(225,123,11)" fg:x="928" fg:w="1"/><text x="73.0343%" y="335.50"></text></g><g><title>libloading::safe::Library::new (8 samples, 0.63%)</title><rect x="72.7843%" y="405" width="0.6275%" height="15" fill="rgb(217,4,20)" fg:x="928" fg:w="8"/><text x="73.0343%" y="415.50"></text></g><g><title>dlopen (8 samples, 0.63%)</title><rect x="72.7843%" y="389" width="0.6275%" height="15" fill="rgb(215,55,9)" fg:x="928" fg:w="8"/><text x="73.0343%" y="399.50"></text></g><g><title>_dl_catch_error (8 samples, 0.63%)</title><rect x="72.7843%" y="373" width="0.6275%" height="15" fill="rgb(218,165,5)" fg:x="928" fg:w="8"/><text x="73.0343%" y="383.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.63%)</title><rect x="72.7843%" y="357" width="0.6275%" height="15" fill="rgb(222,175,15)" fg:x="928" fg:w="8"/><text x="73.0343%" y="367.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.63%)</title><rect x="72.7843%" y="341" width="0.6275%" height="15" fill="rgb(223,85,34)" fg:x="928" fg:w="8"/><text x="73.0343%" y="351.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.55%)</title><rect x="72.8627%" y="325" width="0.5490%" height="15" fill="rgb(234,228,29)" fg:x="929" fg:w="7"/><text x="73.1127%" y="335.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="73.3333%" y="309" width="0.0784%" height="15" fill="rgb(239,7,28)" fg:x="935" fg:w="1"/><text x="73.5833%" y="319.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (9 samples, 0.71%)</title><rect x="72.7843%" y="437" width="0.7059%" height="15" fill="rgb(252,222,53)" fg:x="928" fg:w="9"/><text x="73.0343%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.71%)</title><rect x="72.7843%" y="421" width="0.7059%" height="15" fill="rgb(232,146,44)" fg:x="928" fg:w="9"/><text x="73.0343%" y="431.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="73.4118%" y="405" width="0.0784%" height="15" fill="rgb(243,223,53)" fg:x="936" fg:w="1"/><text x="73.6618%" y="415.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="73.4118%" y="389" width="0.0784%" height="15" fill="rgb(219,128,25)" fg:x="936" fg:w="1"/><text x="73.6618%" y="399.50"></text></g><g><title>engine::session::Session::initialize (14 samples, 1.10%)</title><rect x="72.7059%" y="453" width="1.0980%" height="15" fill="rgb(223,56,32)" fg:x="927" fg:w="14"/><text x="72.9559%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.31%)</title><rect x="73.4902%" y="437" width="0.3137%" height="15" fill="rgb(237,41,3)" fg:x="937" fg:w="4"/><text x="73.7402%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.31%)</title><rect x="73.4902%" y="421" width="0.3137%" height="15" fill="rgb(235,138,9)" fg:x="937" fg:w="4"/><text x="73.7402%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="73.4902%" y="405" width="0.3137%" height="15" fill="rgb(214,131,10)" fg:x="937" fg:w="4"/><text x="73.7402%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.31%)</title><rect x="73.4902%" y="389" width="0.3137%" height="15" fill="rgb(229,89,7)" fg:x="937" fg:w="4"/><text x="73.7402%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.31%)</title><rect x="73.4902%" y="373" width="0.3137%" height="15" fill="rgb(240,24,42)" fg:x="937" fg:w="4"/><text x="73.7402%" y="383.50"></text></g><g><title>realloc (4 samples, 0.31%)</title><rect x="73.4902%" y="357" width="0.3137%" height="15" fill="rgb(243,188,54)" fg:x="937" fg:w="4"/><text x="73.7402%" y="367.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (18 samples, 1.41%)</title><rect x="72.5490%" y="501" width="1.4118%" height="15" fill="rgb(246,92,22)" fg:x="925" fg:w="18"/><text x="72.7990%" y="511.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (18 samples, 1.41%)</title><rect x="72.5490%" y="485" width="1.4118%" height="15" fill="rgb(211,176,51)" fg:x="925" fg:w="18"/><text x="72.7990%" y="495.50"></text></g><g><title>engine::session::Session::new (18 samples, 1.41%)</title><rect x="72.5490%" y="469" width="1.4118%" height="15" fill="rgb(246,207,34)" fg:x="925" fg:w="18"/><text x="72.7990%" y="479.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="73.8039%" y="453" width="0.1569%" height="15" fill="rgb(239,95,2)" fg:x="941" fg:w="2"/><text x="74.0539%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="73.8039%" y="437" width="0.1569%" height="15" fill="rgb(211,124,25)" fg:x="941" fg:w="2"/><text x="74.0539%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="73.8039%" y="421" width="0.1569%" height="15" fill="rgb(231,221,19)" fg:x="941" fg:w="2"/><text x="74.0539%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="73.8824%" y="405" width="0.0784%" height="15" fill="rgb(239,183,19)" fg:x="942" fg:w="1"/><text x="74.1324%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8824%" y="389" width="0.0784%" height="15" fill="rgb(221,130,29)" fg:x="942" fg:w="1"/><text x="74.1324%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="73.9608%" y="485" width="0.0784%" height="15" fill="rgb(206,130,36)" fg:x="943" fg:w="1"/><text x="74.2108%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9608%" y="469" width="0.0784%" height="15" fill="rgb(215,70,19)" fg:x="943" fg:w="1"/><text x="74.2108%" y="479.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="74.0392%" y="469" width="0.0784%" height="15" fill="rgb(244,16,43)" fg:x="944" fg:w="1"/><text x="74.2892%" y="479.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="74.0392%" y="453" width="0.0784%" height="15" fill="rgb(222,115,32)" fg:x="944" fg:w="1"/><text x="74.2892%" y="463.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="74.0392%" y="437" width="0.0784%" height="15" fill="rgb(247,48,25)" fg:x="944" fg:w="1"/><text x="74.2892%" y="447.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="74.0392%" y="421" width="0.0784%" height="15" fill="rgb(226,180,51)" fg:x="944" fg:w="1"/><text x="74.2892%" y="431.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="74.0392%" y="405" width="0.0784%" height="15" fill="rgb(217,142,42)" fg:x="944" fg:w="1"/><text x="74.2892%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="74.0392%" y="389" width="0.0784%" height="15" fill="rgb(220,178,3)" fg:x="944" fg:w="1"/><text x="74.2892%" y="399.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="74.0392%" y="373" width="0.0784%" height="15" fill="rgb(217,221,4)" fg:x="944" fg:w="1"/><text x="74.2892%" y="383.50"></text></g><g><title>std::sys::unix::os::env_read_lock (1 samples, 0.08%)</title><rect x="74.0392%" y="357" width="0.0784%" height="15" fill="rgb(237,63,43)" fg:x="944" fg:w="1"/><text x="74.2892%" y="367.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.08%)</title><rect x="74.0392%" y="341" width="0.0784%" height="15" fill="rgb(220,57,8)" fg:x="944" fg:w="1"/><text x="74.2892%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (1 samples, 0.08%)</title><rect x="74.0392%" y="325" width="0.0784%" height="15" fill="rgb(254,186,27)" fg:x="944" fg:w="1"/><text x="74.2892%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.1176%" y="437" width="0.0784%" height="15" fill="rgb(251,57,28)" fg:x="945" fg:w="1"/><text x="74.3676%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="74.1176%" y="421" width="0.0784%" height="15" fill="rgb(215,228,0)" fg:x="945" fg:w="1"/><text x="74.3676%" y="431.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="74.1176%" y="405" width="0.0784%" height="15" fill="rgb(237,218,39)" fg:x="945" fg:w="1"/><text x="74.3676%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1176%" y="389" width="0.0784%" height="15" fill="rgb(207,2,54)" fg:x="945" fg:w="1"/><text x="74.3676%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.2745%" y="373" width="0.1569%" height="15" fill="rgb(232,76,50)" fg:x="947" fg:w="2"/><text x="74.5245%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.2745%" y="357" width="0.1569%" height="15" fill="rgb(211,85,31)" fg:x="947" fg:w="2"/><text x="74.5245%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.2745%" y="341" width="0.1569%" height="15" fill="rgb(223,210,27)" fg:x="947" fg:w="2"/><text x="74.5245%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="74.2745%" y="325" width="0.1569%" height="15" fill="rgb(254,36,8)" fg:x="947" fg:w="2"/><text x="74.5245%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="74.2745%" y="389" width="0.2353%" height="15" fill="rgb(213,4,25)" fg:x="947" fg:w="3"/><text x="74.5245%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.4314%" y="373" width="0.0784%" height="15" fill="rgb(224,2,39)" fg:x="949" fg:w="1"/><text x="74.6814%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.4314%" y="357" width="0.0784%" height="15" fill="rgb(208,8,39)" fg:x="949" fg:w="1"/><text x="74.6814%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="74.4314%" y="341" width="0.0784%" height="15" fill="rgb(216,226,3)" fg:x="949" fg:w="1"/><text x="74.6814%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.5098%" y="373" width="0.1569%" height="15" fill="rgb(249,139,31)" fg:x="950" fg:w="2"/><text x="74.7598%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.5882%" y="357" width="0.0784%" height="15" fill="rgb(242,170,35)" fg:x="951" fg:w="1"/><text x="74.8382%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.5882%" y="341" width="0.0784%" height="15" fill="rgb(238,14,9)" fg:x="951" fg:w="1"/><text x="74.8382%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.5882%" y="325" width="0.0784%" height="15" fill="rgb(251,81,46)" fg:x="951" fg:w="1"/><text x="74.8382%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="74.6667%" y="357" width="0.3922%" height="15" fill="rgb(230,23,4)" fg:x="952" fg:w="5"/><text x="74.9167%" y="367.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="74.6667%" y="341" width="0.3922%" height="15" fill="rgb(211,85,25)" fg:x="952" fg:w="5"/><text x="74.9167%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="74.7451%" y="325" width="0.3137%" height="15" fill="rgb(252,23,31)" fg:x="953" fg:w="4"/><text x="74.9951%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="74.7451%" y="309" width="0.3137%" height="15" fill="rgb(234,163,38)" fg:x="953" fg:w="4"/><text x="74.9951%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.31%)</title><rect x="74.7451%" y="293" width="0.3137%" height="15" fill="rgb(210,190,50)" fg:x="953" fg:w="4"/><text x="74.9951%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.31%)</title><rect x="74.7451%" y="277" width="0.3137%" height="15" fill="rgb(228,158,3)" fg:x="953" fg:w="4"/><text x="74.9951%" y="287.50"></text></g><g><title>realloc (4 samples, 0.31%)</title><rect x="74.7451%" y="261" width="0.3137%" height="15" fill="rgb(216,130,0)" fg:x="953" fg:w="4"/><text x="74.9951%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="75.0588%" y="341" width="0.2353%" height="15" fill="rgb(224,184,10)" fg:x="957" fg:w="3"/><text x="75.3088%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="75.0588%" y="325" width="0.2353%" height="15" fill="rgb(214,202,18)" fg:x="957" fg:w="3"/><text x="75.3088%" y="335.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="75.0588%" y="309" width="0.2353%" height="15" fill="rgb(213,229,54)" fg:x="957" fg:w="3"/><text x="75.3088%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.2157%" y="293" width="0.0784%" height="15" fill="rgb(246,120,0)" fg:x="959" fg:w="1"/><text x="75.4657%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="75.0588%" y="357" width="0.3137%" height="15" fill="rgb(237,6,15)" fg:x="957" fg:w="4"/><text x="75.3088%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.2941%" y="341" width="0.0784%" height="15" fill="rgb(252,156,15)" fg:x="960" fg:w="1"/><text x="75.5441%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.2941%" y="325" width="0.0784%" height="15" fill="rgb(249,78,18)" fg:x="960" fg:w="1"/><text x="75.5441%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.2941%" y="309" width="0.0784%" height="15" fill="rgb(230,223,44)" fg:x="960" fg:w="1"/><text x="75.5441%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="74.6667%" y="373" width="0.7843%" height="15" fill="rgb(230,222,32)" fg:x="952" fg:w="10"/><text x="74.9167%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.3725%" y="357" width="0.0784%" height="15" fill="rgb(247,54,6)" fg:x="961" fg:w="1"/><text x="75.6225%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.3725%" y="341" width="0.0784%" height="15" fill="rgb(247,115,45)" fg:x="961" fg:w="1"/><text x="75.6225%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.3725%" y="325" width="0.0784%" height="15" fill="rgb(213,203,37)" fg:x="961" fg:w="1"/><text x="75.6225%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.02%)</title><rect x="74.5098%" y="389" width="1.0196%" height="15" fill="rgb(248,188,18)" fg:x="950" fg:w="13"/><text x="74.7598%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4510%" y="373" width="0.0784%" height="15" fill="rgb(206,80,8)" fg:x="962" fg:w="1"/><text x="75.7010%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.41%)</title><rect x="74.1961%" y="405" width="1.4118%" height="15" fill="rgb(245,217,31)" fg:x="946" fg:w="18"/><text x="74.4461%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.5294%" y="389" width="0.0784%" height="15" fill="rgb(220,193,15)" fg:x="963" fg:w="1"/><text x="75.7794%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.6078%" y="373" width="0.0784%" height="15" fill="rgb(226,7,19)" fg:x="964" fg:w="1"/><text x="75.8578%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.6863%" y="357" width="0.0784%" height="15" fill="rgb(222,145,31)" fg:x="965" fg:w="1"/><text x="75.9363%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="75.7647%" y="341" width="0.1569%" height="15" fill="rgb(241,193,36)" fg:x="966" fg:w="2"/><text x="76.0147%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="75.7647%" y="325" width="0.1569%" height="15" fill="rgb(225,123,33)" fg:x="966" fg:w="2"/><text x="76.0147%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.0000%" y="325" width="0.0784%" height="15" fill="rgb(246,136,38)" fg:x="969" fg:w="1"/><text x="76.2500%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0000%" y="309" width="0.0784%" height="15" fill="rgb(243,56,24)" fg:x="969" fg:w="1"/><text x="76.2500%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="75.6078%" y="405" width="0.6275%" height="15" fill="rgb(215,147,2)" fg:x="964" fg:w="8"/><text x="75.8578%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.63%)</title><rect x="75.6078%" y="389" width="0.6275%" height="15" fill="rgb(209,155,27)" fg:x="964" fg:w="8"/><text x="75.8578%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="75.6863%" y="373" width="0.5490%" height="15" fill="rgb(222,177,11)" fg:x="965" fg:w="7"/><text x="75.9363%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="75.7647%" y="357" width="0.4706%" height="15" fill="rgb(212,227,15)" fg:x="966" fg:w="6"/><text x="76.0147%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="75.9216%" y="341" width="0.3137%" height="15" fill="rgb(214,138,20)" fg:x="968" fg:w="4"/><text x="76.1716%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.0784%" y="325" width="0.1569%" height="15" fill="rgb(221,170,31)" fg:x="970" fg:w="2"/><text x="76.3284%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1569%" y="309" width="0.0784%" height="15" fill="rgb(253,207,5)" fg:x="971" fg:w="1"/><text x="76.4069%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.2353%" y="357" width="0.1569%" height="15" fill="rgb(212,64,37)" fg:x="972" fg:w="2"/><text x="76.4853%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3137%" y="341" width="0.0784%" height="15" fill="rgb(208,113,51)" fg:x="973" fg:w="1"/><text x="76.5637%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4706%" y="309" width="0.0784%" height="15" fill="rgb(237,15,5)" fg:x="975" fg:w="1"/><text x="76.7206%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4706%" y="293" width="0.0784%" height="15" fill="rgb(238,33,18)" fg:x="975" fg:w="1"/><text x="76.7206%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4706%" y="277" width="0.0784%" height="15" fill="rgb(253,206,50)" fg:x="975" fg:w="1"/><text x="76.7206%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.5490%" y="309" width="0.0784%" height="15" fill="rgb(242,158,43)" fg:x="976" fg:w="1"/><text x="76.7990%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5490%" y="293" width="0.0784%" height="15" fill="rgb(213,125,27)" fg:x="976" fg:w="1"/><text x="76.7990%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.5490%" y="277" width="0.0784%" height="15" fill="rgb(233,161,31)" fg:x="976" fg:w="1"/><text x="76.7990%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5490%" y="261" width="0.0784%" height="15" fill="rgb(218,135,6)" fg:x="976" fg:w="1"/><text x="76.7990%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5490%" y="245" width="0.0784%" height="15" fill="rgb(222,73,53)" fg:x="976" fg:w="1"/><text x="76.7990%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.5490%" y="229" width="0.0784%" height="15" fill="rgb(229,66,53)" fg:x="976" fg:w="1"/><text x="76.7990%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.6275%" y="277" width="0.1569%" height="15" fill="rgb(208,128,19)" fg:x="977" fg:w="2"/><text x="76.8775%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.9412%" y="245" width="0.1569%" height="15" fill="rgb(235,70,27)" fg:x="981" fg:w="2"/><text x="77.1912%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0196%" y="229" width="0.0784%" height="15" fill="rgb(241,130,30)" fg:x="982" fg:w="1"/><text x="77.2696%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="77.0196%" y="213" width="0.0784%" height="15" fill="rgb(222,57,48)" fg:x="982" fg:w="1"/><text x="77.2696%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="76.6275%" y="293" width="0.5490%" height="15" fill="rgb(225,204,29)" fg:x="977" fg:w="7"/><text x="76.8775%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="76.7843%" y="277" width="0.3922%" height="15" fill="rgb(240,196,35)" fg:x="979" fg:w="5"/><text x="77.0343%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="76.8627%" y="261" width="0.3137%" height="15" fill="rgb(215,150,16)" fg:x="980" fg:w="4"/><text x="77.1127%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.0980%" y="245" width="0.0784%" height="15" fill="rgb(209,170,13)" fg:x="983" fg:w="1"/><text x="77.3480%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.0980%" y="229" width="0.0784%" height="15" fill="rgb(235,75,31)" fg:x="983" fg:w="1"/><text x="77.3480%" y="239.50"></text></g><g><title>engine::session::Session::flush (41 samples, 3.22%)</title><rect x="74.0392%" y="485" width="3.2157%" height="15" fill="rgb(252,1,47)" fg:x="944" fg:w="41"/><text x="74.2892%" y="495.50">eng..</text></g><g><title>engine::session::state::State::close (40 samples, 3.14%)</title><rect x="74.1176%" y="469" width="3.1373%" height="15" fill="rgb(241,2,36)" fg:x="945" fg:w="40"/><text x="74.3676%" y="479.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (40 samples, 3.14%)</title><rect x="74.1176%" y="453" width="3.1373%" height="15" fill="rgb(236,191,4)" fg:x="945" fg:w="40"/><text x="74.3676%" y="463.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (39 samples, 3.06%)</title><rect x="74.1961%" y="437" width="3.0588%" height="15" fill="rgb(212,65,35)" fg:x="946" fg:w="39"/><text x="74.4461%" y="447.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (39 samples, 3.06%)</title><rect x="74.1961%" y="421" width="3.0588%" height="15" fill="rgb(209,49,33)" fg:x="946" fg:w="39"/><text x="74.4461%" y="431.50">eng..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 1.02%)</title><rect x="76.2353%" y="405" width="1.0196%" height="15" fill="rgb(208,36,46)" fg:x="972" fg:w="13"/><text x="76.4853%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.02%)</title><rect x="76.2353%" y="389" width="1.0196%" height="15" fill="rgb(210,125,2)" fg:x="972" fg:w="13"/><text x="76.4853%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.02%)</title><rect x="76.2353%" y="373" width="1.0196%" height="15" fill="rgb(225,62,6)" fg:x="972" fg:w="13"/><text x="76.4853%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.86%)</title><rect x="76.3922%" y="357" width="0.8627%" height="15" fill="rgb(210,54,27)" fg:x="974" fg:w="11"/><text x="76.6422%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.78%)</title><rect x="76.4706%" y="341" width="0.7843%" height="15" fill="rgb(249,189,52)" fg:x="975" fg:w="10"/><text x="76.7206%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.78%)</title><rect x="76.4706%" y="325" width="0.7843%" height="15" fill="rgb(225,134,40)" fg:x="975" fg:w="10"/><text x="76.7206%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.63%)</title><rect x="76.6275%" y="309" width="0.6275%" height="15" fill="rgb(206,13,37)" fg:x="977" fg:w="8"/><text x="76.8775%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="77.1765%" y="293" width="0.0784%" height="15" fill="rgb(232,114,28)" fg:x="984" fg:w="1"/><text x="77.4265%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.1765%" y="277" width="0.0784%" height="15" fill="rgb(253,215,8)" fg:x="984" fg:w="1"/><text x="77.4265%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.2549%" y="437" width="0.0784%" height="15" fill="rgb(254,64,19)" fg:x="985" fg:w="1"/><text x="77.5049%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.2549%" y="421" width="0.0784%" height="15" fill="rgb(242,18,46)" fg:x="985" fg:w="1"/><text x="77.5049%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.3333%" y="437" width="0.0784%" height="15" fill="rgb(239,192,30)" fg:x="986" fg:w="1"/><text x="77.5833%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.3333%" y="421" width="0.0784%" height="15" fill="rgb(232,73,14)" fg:x="986" fg:w="1"/><text x="77.5833%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.3333%" y="405" width="0.0784%" height="15" fill="rgb(225,51,9)" fg:x="986" fg:w="1"/><text x="77.5833%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.3333%" y="389" width="0.0784%" height="15" fill="rgb(242,217,54)" fg:x="986" fg:w="1"/><text x="77.5833%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.3333%" y="373" width="0.0784%" height="15" fill="rgb(216,93,3)" fg:x="986" fg:w="1"/><text x="77.5833%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="77.2549%" y="453" width="0.2353%" height="15" fill="rgb(230,119,33)" fg:x="985" fg:w="3"/><text x="77.5049%" y="463.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="77.4118%" y="437" width="0.0784%" height="15" fill="rgb(238,170,27)" fg:x="987" fg:w="1"/><text x="77.6618%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.4118%" y="421" width="0.0784%" height="15" fill="rgb(229,8,2)" fg:x="987" fg:w="1"/><text x="77.6618%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.4118%" y="405" width="0.0784%" height="15" fill="rgb(205,214,42)" fg:x="987" fg:w="1"/><text x="77.6618%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.4118%" y="389" width="0.0784%" height="15" fill="rgb(245,113,1)" fg:x="987" fg:w="1"/><text x="77.6618%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.4118%" y="373" width="0.0784%" height="15" fill="rgb(252,50,2)" fg:x="987" fg:w="1"/><text x="77.6618%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4118%" y="357" width="0.0784%" height="15" fill="rgb(225,122,24)" fg:x="987" fg:w="1"/><text x="77.6618%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.4118%" y="341" width="0.0784%" height="15" fill="rgb(234,129,31)" fg:x="987" fg:w="1"/><text x="77.6618%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4118%" y="325" width="0.0784%" height="15" fill="rgb(219,177,4)" fg:x="987" fg:w="1"/><text x="77.6618%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.4118%" y="309" width="0.0784%" height="15" fill="rgb(225,142,27)" fg:x="987" fg:w="1"/><text x="77.6618%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.4118%" y="293" width="0.0784%" height="15" fill="rgb(205,107,51)" fg:x="987" fg:w="1"/><text x="77.6618%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.4118%" y="277" width="0.0784%" height="15" fill="rgb(236,223,15)" fg:x="987" fg:w="1"/><text x="77.6618%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.31%)</title><rect x="77.2549%" y="469" width="0.3137%" height="15" fill="rgb(235,133,11)" fg:x="985" fg:w="4"/><text x="77.5049%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.4902%" y="453" width="0.0784%" height="15" fill="rgb(247,172,13)" fg:x="988" fg:w="1"/><text x="77.7402%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.4902%" y="437" width="0.0784%" height="15" fill="rgb(233,191,41)" fg:x="988" fg:w="1"/><text x="77.7402%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4902%" y="421" width="0.0784%" height="15" fill="rgb(250,65,16)" fg:x="988" fg:w="1"/><text x="77.7402%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4902%" y="405" width="0.0784%" height="15" fill="rgb(206,10,27)" fg:x="988" fg:w="1"/><text x="77.7402%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4902%" y="389" width="0.0784%" height="15" fill="rgb(212,96,22)" fg:x="988" fg:w="1"/><text x="77.7402%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.5686%" y="421" width="0.0784%" height="15" fill="rgb(206,50,0)" fg:x="989" fg:w="1"/><text x="77.8186%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.5686%" y="405" width="0.0784%" height="15" fill="rgb(249,105,52)" fg:x="989" fg:w="1"/><text x="77.8186%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5686%" y="389" width="0.0784%" height="15" fill="rgb(216,93,51)" fg:x="989" fg:w="1"/><text x="77.8186%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5686%" y="373" width="0.0784%" height="15" fill="rgb(217,172,13)" fg:x="989" fg:w="1"/><text x="77.8186%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5686%" y="357" width="0.0784%" height="15" fill="rgb(235,199,38)" fg:x="989" fg:w="1"/><text x="77.8186%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5686%" y="341" width="0.0784%" height="15" fill="rgb(221,97,33)" fg:x="989" fg:w="1"/><text x="77.8186%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5686%" y="325" width="0.0784%" height="15" fill="rgb(205,156,50)" fg:x="989" fg:w="1"/><text x="77.8186%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.5686%" y="309" width="0.0784%" height="15" fill="rgb(215,142,19)" fg:x="989" fg:w="1"/><text x="77.8186%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.5686%" y="293" width="0.0784%" height="15" fill="rgb(232,170,7)" fg:x="989" fg:w="1"/><text x="77.8186%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.5686%" y="277" width="0.0784%" height="15" fill="rgb(223,50,17)" fg:x="989" fg:w="1"/><text x="77.8186%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.5686%" y="261" width="0.0784%" height="15" fill="rgb(230,103,46)" fg:x="989" fg:w="1"/><text x="77.8186%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.5686%" y="245" width="0.0784%" height="15" fill="rgb(254,30,34)" fg:x="989" fg:w="1"/><text x="77.8186%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.5686%" y="229" width="0.0784%" height="15" fill="rgb(235,198,1)" fg:x="989" fg:w="1"/><text x="77.8186%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.5686%" y="213" width="0.0784%" height="15" fill="rgb(217,105,47)" fg:x="989" fg:w="1"/><text x="77.8186%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.5686%" y="197" width="0.0784%" height="15" fill="rgb(231,18,12)" fg:x="989" fg:w="1"/><text x="77.8186%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.5686%" y="181" width="0.0784%" height="15" fill="rgb(218,196,1)" fg:x="989" fg:w="1"/><text x="77.8186%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5686%" y="165" width="0.0784%" height="15" fill="rgb(210,32,3)" fg:x="989" fg:w="1"/><text x="77.8186%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="77.6471%" y="389" width="0.0784%" height="15" fill="rgb(227,178,30)" fg:x="990" fg:w="1"/><text x="77.8971%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.6471%" y="373" width="0.0784%" height="15" fill="rgb(231,140,27)" fg:x="990" fg:w="1"/><text x="77.8971%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6471%" y="357" width="0.0784%" height="15" fill="rgb(206,66,35)" fg:x="990" fg:w="1"/><text x="77.8971%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6471%" y="341" width="0.0784%" height="15" fill="rgb(212,34,2)" fg:x="990" fg:w="1"/><text x="77.8971%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="77.5686%" y="453" width="0.3137%" height="15" fill="rgb(207,201,33)" fg:x="989" fg:w="4"/><text x="77.8186%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="77.5686%" y="437" width="0.3137%" height="15" fill="rgb(221,135,32)" fg:x="989" fg:w="4"/><text x="77.8186%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="77.6471%" y="421" width="0.2353%" height="15" fill="rgb(206,77,31)" fg:x="990" fg:w="3"/><text x="77.8971%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="77.6471%" y="405" width="0.2353%" height="15" fill="rgb(252,198,50)" fg:x="990" fg:w="3"/><text x="77.8971%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="77.7255%" y="389" width="0.1569%" height="15" fill="rgb(206,79,27)" fg:x="991" fg:w="2"/><text x="77.9755%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.7255%" y="373" width="0.1569%" height="15" fill="rgb(228,108,9)" fg:x="991" fg:w="2"/><text x="77.9755%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="77.7255%" y="357" width="0.1569%" height="15" fill="rgb(213,9,39)" fg:x="991" fg:w="2"/><text x="77.9755%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.7255%" y="341" width="0.1569%" height="15" fill="rgb(252,51,13)" fg:x="991" fg:w="2"/><text x="77.9755%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="77.7255%" y="325" width="0.1569%" height="15" fill="rgb(218,202,39)" fg:x="991" fg:w="2"/><text x="77.9755%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.7255%" y="309" width="0.1569%" height="15" fill="rgb(214,122,21)" fg:x="991" fg:w="2"/><text x="77.9755%" y="319.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.71%)</title><rect x="77.2549%" y="485" width="0.7059%" height="15" fill="rgb(217,205,48)" fg:x="985" fg:w="9"/><text x="77.5049%" y="495.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.39%)</title><rect x="77.5686%" y="469" width="0.3922%" height="15" fill="rgb(230,216,13)" fg:x="989" fg:w="5"/><text x="77.8186%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="77.8824%" y="453" width="0.0784%" height="15" fill="rgb(249,118,4)" fg:x="993" fg:w="1"/><text x="78.1324%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.8824%" y="437" width="0.0784%" height="15" fill="rgb(212,207,40)" fg:x="993" fg:w="1"/><text x="78.1324%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.8824%" y="421" width="0.0784%" height="15" fill="rgb(217,156,26)" fg:x="993" fg:w="1"/><text x="78.1324%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.8824%" y="405" width="0.0784%" height="15" fill="rgb(226,86,34)" fg:x="993" fg:w="1"/><text x="78.1324%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.8824%" y="389" width="0.0784%" height="15" fill="rgb(217,111,30)" fg:x="993" fg:w="1"/><text x="78.1324%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.8824%" y="373" width="0.0784%" height="15" fill="rgb(228,64,18)" fg:x="993" fg:w="1"/><text x="78.1324%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8824%" y="357" width="0.0784%" height="15" fill="rgb(254,217,48)" fg:x="993" fg:w="1"/><text x="78.1324%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.8824%" y="341" width="0.0784%" height="15" fill="rgb(226,156,48)" fg:x="993" fg:w="1"/><text x="78.1324%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8824%" y="325" width="0.0784%" height="15" fill="rgb(236,168,20)" fg:x="993" fg:w="1"/><text x="78.1324%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.8824%" y="309" width="0.0784%" height="15" fill="rgb(239,210,33)" fg:x="993" fg:w="1"/><text x="78.1324%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8824%" y="293" width="0.0784%" height="15" fill="rgb(242,85,17)" fg:x="993" fg:w="1"/><text x="78.1324%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.9608%" y="405" width="0.0784%" height="15" fill="rgb(221,196,15)" fg:x="994" fg:w="1"/><text x="78.2108%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.9608%" y="389" width="0.0784%" height="15" fill="rgb(249,76,21)" fg:x="994" fg:w="1"/><text x="78.2108%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.9608%" y="373" width="0.0784%" height="15" fill="rgb(243,67,29)" fg:x="994" fg:w="1"/><text x="78.2108%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.9608%" y="357" width="0.0784%" height="15" fill="rgb(240,159,2)" fg:x="994" fg:w="1"/><text x="78.2108%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.9608%" y="341" width="0.0784%" height="15" fill="rgb(244,64,3)" fg:x="994" fg:w="1"/><text x="78.2108%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.9608%" y="325" width="0.0784%" height="15" fill="rgb(220,86,40)" fg:x="994" fg:w="1"/><text x="78.2108%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.9608%" y="309" width="0.0784%" height="15" fill="rgb(222,194,51)" fg:x="994" fg:w="1"/><text x="78.2108%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.9608%" y="293" width="0.0784%" height="15" fill="rgb(207,154,19)" fg:x="994" fg:w="1"/><text x="78.2108%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.9608%" y="277" width="0.0784%" height="15" fill="rgb(206,178,36)" fg:x="994" fg:w="1"/><text x="78.2108%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.9608%" y="261" width="0.0784%" height="15" fill="rgb(218,8,24)" fg:x="994" fg:w="1"/><text x="78.2108%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.9608%" y="245" width="0.0784%" height="15" fill="rgb(226,83,41)" fg:x="994" fg:w="1"/><text x="78.2108%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.9608%" y="229" width="0.0784%" height="15" fill="rgb(224,23,22)" fg:x="994" fg:w="1"/><text x="78.2108%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.9608%" y="213" width="0.0784%" height="15" fill="rgb(218,198,45)" fg:x="994" fg:w="1"/><text x="78.2108%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.9608%" y="197" width="0.0784%" height="15" fill="rgb(249,147,41)" fg:x="994" fg:w="1"/><text x="78.2108%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="77.9608%" y="421" width="0.2353%" height="15" fill="rgb(244,224,13)" fg:x="994" fg:w="3"/><text x="78.2108%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="78.0392%" y="405" width="0.1569%" height="15" fill="rgb(225,97,27)" fg:x="995" fg:w="2"/><text x="78.2892%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="77.9608%" y="453" width="0.3137%" height="15" fill="rgb(254,64,0)" fg:x="994" fg:w="4"/><text x="78.2108%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="77.9608%" y="437" width="0.3137%" height="15" fill="rgb(208,130,43)" fg:x="994" fg:w="4"/><text x="78.2108%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.1961%" y="421" width="0.0784%" height="15" fill="rgb(247,91,25)" fg:x="997" fg:w="1"/><text x="78.4461%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.1961%" y="405" width="0.0784%" height="15" fill="rgb(215,218,42)" fg:x="997" fg:w="1"/><text x="78.4461%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.1961%" y="389" width="0.0784%" height="15" fill="rgb(233,9,24)" fg:x="997" fg:w="1"/><text x="78.4461%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.1961%" y="373" width="0.0784%" height="15" fill="rgb(252,105,38)" fg:x="997" fg:w="1"/><text x="78.4461%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1961%" y="357" width="0.0784%" height="15" fill="rgb(225,40,49)" fg:x="997" fg:w="1"/><text x="78.4461%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.1961%" y="341" width="0.0784%" height="15" fill="rgb(232,196,19)" fg:x="997" fg:w="1"/><text x="78.4461%" y="351.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="78.2745%" y="453" width="0.1569%" height="15" fill="rgb(207,35,15)" fg:x="998" fg:w="2"/><text x="78.5245%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="78.2745%" y="437" width="0.1569%" height="15" fill="rgb(238,68,36)" fg:x="998" fg:w="2"/><text x="78.5245%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.2745%" y="421" width="0.1569%" height="15" fill="rgb(205,158,20)" fg:x="998" fg:w="2"/><text x="78.5245%" y="431.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="78.2745%" y="405" width="0.1569%" height="15" fill="rgb(232,32,22)" fg:x="998" fg:w="2"/><text x="78.5245%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.2745%" y="389" width="0.1569%" height="15" fill="rgb(210,169,6)" fg:x="998" fg:w="2"/><text x="78.5245%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="78.2745%" y="373" width="0.1569%" height="15" fill="rgb(229,28,12)" fg:x="998" fg:w="2"/><text x="78.5245%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.2745%" y="357" width="0.1569%" height="15" fill="rgb(229,78,10)" fg:x="998" fg:w="2"/><text x="78.5245%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="78.3529%" y="341" width="0.0784%" height="15" fill="rgb(223,139,54)" fg:x="999" fg:w="1"/><text x="78.6029%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="78.3529%" y="325" width="0.0784%" height="15" fill="rgb(207,110,4)" fg:x="999" fg:w="1"/><text x="78.6029%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.3529%" y="309" width="0.0784%" height="15" fill="rgb(248,30,41)" fg:x="999" fg:w="1"/><text x="78.6029%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="78.4314%" y="437" width="0.0784%" height="15" fill="rgb(235,54,25)" fg:x="1000" fg:w="1"/><text x="78.6814%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="78.4314%" y="421" width="0.0784%" height="15" fill="rgb(213,107,41)" fg:x="1000" fg:w="1"/><text x="78.6814%" y="431.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.4314%" y="405" width="0.0784%" height="15" fill="rgb(237,102,9)" fg:x="1000" fg:w="1"/><text x="78.6814%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.4314%" y="389" width="0.0784%" height="15" fill="rgb(252,137,49)" fg:x="1000" fg:w="1"/><text x="78.6814%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="78.4314%" y="373" width="0.0784%" height="15" fill="rgb(233,202,33)" fg:x="1000" fg:w="1"/><text x="78.6814%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.4314%" y="357" width="0.0784%" height="15" fill="rgb(223,14,51)" fg:x="1000" fg:w="1"/><text x="78.6814%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="78.4314%" y="453" width="0.1569%" height="15" fill="rgb(248,70,23)" fg:x="1000" fg:w="2"/><text x="78.6814%" y="463.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="78.5098%" y="437" width="0.0784%" height="15" fill="rgb(209,207,47)" fg:x="1001" fg:w="1"/><text x="78.7598%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5098%" y="421" width="0.0784%" height="15" fill="rgb(245,124,2)" fg:x="1001" fg:w="1"/><text x="78.7598%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5098%" y="405" width="0.0784%" height="15" fill="rgb(249,208,11)" fg:x="1001" fg:w="1"/><text x="78.7598%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.5882%" y="453" width="0.0784%" height="15" fill="rgb(247,112,7)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.5882%" y="437" width="0.0784%" height="15" fill="rgb(209,192,31)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.5882%" y="421" width="0.0784%" height="15" fill="rgb(236,55,19)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.5882%" y="405" width="0.0784%" height="15" fill="rgb(252,89,41)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.5882%" y="389" width="0.0784%" height="15" fill="rgb(220,172,14)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5882%" y="373" width="0.0784%" height="15" fill="rgb(252,65,2)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5882%" y="357" width="0.0784%" height="15" fill="rgb(250,20,8)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.5882%" y="341" width="0.0784%" height="15" fill="rgb(234,149,13)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.5882%" y="325" width="0.0784%" height="15" fill="rgb(223,219,12)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.5882%" y="309" width="0.0784%" height="15" fill="rgb(234,13,49)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5882%" y="293" width="0.0784%" height="15" fill="rgb(214,41,25)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5882%" y="277" width="0.0784%" height="15" fill="rgb(232,198,52)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.5882%" y="261" width="0.0784%" height="15" fill="rgb(236,111,46)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.5882%" y="245" width="0.0784%" height="15" fill="rgb(253,30,20)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.5882%" y="229" width="0.0784%" height="15" fill="rgb(247,141,17)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.5882%" y="213" width="0.0784%" height="15" fill="rgb(214,195,21)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.5882%" y="197" width="0.0784%" height="15" fill="rgb(214,98,12)" fg:x="1002" fg:w="1"/><text x="78.8382%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.6667%" y="389" width="0.0784%" height="15" fill="rgb(239,4,26)" fg:x="1003" fg:w="1"/><text x="78.9167%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.6667%" y="373" width="0.0784%" height="15" fill="rgb(234,210,35)" fg:x="1003" fg:w="1"/><text x="78.9167%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.86%)</title><rect x="77.9608%" y="469" width="0.8627%" height="15" fill="rgb(252,178,27)" fg:x="994" fg:w="11"/><text x="78.2108%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="78.6667%" y="453" width="0.1569%" height="15" fill="rgb(217,50,1)" fg:x="1003" fg:w="2"/><text x="78.9167%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="78.6667%" y="437" width="0.1569%" height="15" fill="rgb(233,137,5)" fg:x="1003" fg:w="2"/><text x="78.9167%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.6667%" y="421" width="0.1569%" height="15" fill="rgb(217,227,25)" fg:x="1003" fg:w="2"/><text x="78.9167%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.6667%" y="405" width="0.1569%" height="15" fill="rgb(242,89,38)" fg:x="1003" fg:w="2"/><text x="78.9167%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.7451%" y="389" width="0.0784%" height="15" fill="rgb(212,190,30)" fg:x="1004" fg:w="1"/><text x="78.9951%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7451%" y="373" width="0.0784%" height="15" fill="rgb(222,120,8)" fg:x="1004" fg:w="1"/><text x="78.9951%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.7451%" y="357" width="0.0784%" height="15" fill="rgb(227,181,9)" fg:x="1004" fg:w="1"/><text x="78.9951%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7451%" y="341" width="0.0784%" height="15" fill="rgb(222,125,29)" fg:x="1004" fg:w="1"/><text x="78.9951%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.7451%" y="325" width="0.0784%" height="15" fill="rgb(215,153,31)" fg:x="1004" fg:w="1"/><text x="78.9951%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7451%" y="309" width="0.0784%" height="15" fill="rgb(228,77,30)" fg:x="1004" fg:w="1"/><text x="78.9951%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8235%" y="437" width="0.0784%" height="15" fill="rgb(226,110,9)" fg:x="1005" fg:w="1"/><text x="79.0735%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8235%" y="421" width="0.0784%" height="15" fill="rgb(219,111,7)" fg:x="1005" fg:w="1"/><text x="79.0735%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.02%)</title><rect x="77.9608%" y="485" width="1.0196%" height="15" fill="rgb(229,167,25)" fg:x="994" fg:w="13"/><text x="78.2108%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="78.8235%" y="469" width="0.1569%" height="15" fill="rgb(209,77,43)" fg:x="1005" fg:w="2"/><text x="79.0735%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.8235%" y="453" width="0.1569%" height="15" fill="rgb(233,70,39)" fg:x="1005" fg:w="2"/><text x="79.0735%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.9020%" y="437" width="0.0784%" height="15" fill="rgb(207,171,44)" fg:x="1006" fg:w="1"/><text x="79.1520%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="78.9804%" y="421" width="0.0784%" height="15" fill="rgb(244,91,6)" fg:x="1007" fg:w="1"/><text x="79.2304%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.9804%" y="405" width="0.0784%" height="15" fill="rgb(234,136,12)" fg:x="1007" fg:w="1"/><text x="79.2304%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.9804%" y="389" width="0.0784%" height="15" fill="rgb(216,210,38)" fg:x="1007" fg:w="1"/><text x="79.2304%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9804%" y="373" width="0.0784%" height="15" fill="rgb(241,227,7)" fg:x="1007" fg:w="1"/><text x="79.2304%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="79.0588%" y="421" width="0.0784%" height="15" fill="rgb(241,222,11)" fg:x="1008" fg:w="1"/><text x="79.3088%" y="431.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="78.9804%" y="485" width="0.2353%" height="15" fill="rgb(246,86,18)" fg:x="1007" fg:w="3"/><text x="79.2304%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="78.9804%" y="469" width="0.2353%" height="15" fill="rgb(224,151,49)" fg:x="1007" fg:w="3"/><text x="79.2304%" y="479.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="78.9804%" y="453" width="0.2353%" height="15" fill="rgb(235,4,41)" fg:x="1007" fg:w="3"/><text x="79.2304%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="78.9804%" y="437" width="0.2353%" height="15" fill="rgb(218,30,52)" fg:x="1007" fg:w="3"/><text x="79.2304%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.1373%" y="421" width="0.0784%" height="15" fill="rgb(205,124,51)" fg:x="1009" fg:w="1"/><text x="79.3873%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.1373%" y="405" width="0.0784%" height="15" fill="rgb(237,126,51)" fg:x="1009" fg:w="1"/><text x="79.3873%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.1373%" y="389" width="0.0784%" height="15" fill="rgb(225,32,46)" fg:x="1009" fg:w="1"/><text x="79.3873%" y="399.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="79.1373%" y="373" width="0.0784%" height="15" fill="rgb(251,60,49)" fg:x="1009" fg:w="1"/><text x="79.3873%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.1373%" y="357" width="0.0784%" height="15" fill="rgb(234,18,23)" fg:x="1009" fg:w="1"/><text x="79.3873%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.1373%" y="341" width="0.0784%" height="15" fill="rgb(234,25,23)" fg:x="1009" fg:w="1"/><text x="79.3873%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.1373%" y="325" width="0.0784%" height="15" fill="rgb(210,43,52)" fg:x="1009" fg:w="1"/><text x="79.3873%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.1373%" y="309" width="0.0784%" height="15" fill="rgb(237,198,21)" fg:x="1009" fg:w="1"/><text x="79.3873%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.2941%" y="421" width="0.0784%" height="15" fill="rgb(211,20,34)" fg:x="1011" fg:w="1"/><text x="79.5441%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="79.2941%" y="469" width="0.1569%" height="15" fill="rgb(221,155,50)" fg:x="1011" fg:w="2"/><text x="79.5441%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="79.2941%" y="453" width="0.1569%" height="15" fill="rgb(213,214,53)" fg:x="1011" fg:w="2"/><text x="79.5441%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="79.2941%" y="437" width="0.1569%" height="15" fill="rgb(215,229,48)" fg:x="1011" fg:w="2"/><text x="79.5441%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3725%" y="421" width="0.0784%" height="15" fill="rgb(243,88,5)" fg:x="1012" fg:w="1"/><text x="79.6225%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.3725%" y="405" width="0.0784%" height="15" fill="rgb(216,199,8)" fg:x="1012" fg:w="1"/><text x="79.6225%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.3725%" y="389" width="0.0784%" height="15" fill="rgb(241,22,4)" fg:x="1012" fg:w="1"/><text x="79.6225%" y="399.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="79.3725%" y="373" width="0.0784%" height="15" fill="rgb(209,190,22)" fg:x="1012" fg:w="1"/><text x="79.6225%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.3725%" y="357" width="0.0784%" height="15" fill="rgb(251,138,45)" fg:x="1012" fg:w="1"/><text x="79.6225%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3725%" y="341" width="0.0784%" height="15" fill="rgb(219,111,22)" fg:x="1012" fg:w="1"/><text x="79.6225%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3725%" y="325" width="0.0784%" height="15" fill="rgb(253,29,49)" fg:x="1012" fg:w="1"/><text x="79.6225%" y="335.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="79.4510%" y="373" width="0.0784%" height="15" fill="rgb(238,129,49)" fg:x="1013" fg:w="1"/><text x="79.7010%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="79.4510%" y="357" width="0.0784%" height="15" fill="rgb(240,26,41)" fg:x="1013" fg:w="1"/><text x="79.7010%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.4510%" y="341" width="0.0784%" height="15" fill="rgb(221,47,33)" fg:x="1013" fg:w="1"/><text x="79.7010%" y="351.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.4510%" y="325" width="0.0784%" height="15" fill="rgb(216,200,17)" fg:x="1013" fg:w="1"/><text x="79.7010%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.4510%" y="309" width="0.0784%" height="15" fill="rgb(230,151,26)" fg:x="1013" fg:w="1"/><text x="79.7010%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4510%" y="293" width="0.0784%" height="15" fill="rgb(242,182,16)" fg:x="1013" fg:w="1"/><text x="79.7010%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.5294%" y="373" width="0.0784%" height="15" fill="rgb(236,35,53)" fg:x="1014" fg:w="1"/><text x="79.7794%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.5294%" y="357" width="0.0784%" height="15" fill="rgb(214,180,28)" fg:x="1014" fg:w="1"/><text x="79.7794%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.5294%" y="341" width="0.0784%" height="15" fill="rgb(208,173,36)" fg:x="1014" fg:w="1"/><text x="79.7794%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.5294%" y="325" width="0.0784%" height="15" fill="rgb(218,39,15)" fg:x="1014" fg:w="1"/><text x="79.7794%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.5294%" y="309" width="0.0784%" height="15" fill="rgb(213,145,15)" fg:x="1014" fg:w="1"/><text x="79.7794%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.5294%" y="293" width="0.0784%" height="15" fill="rgb(242,110,37)" fg:x="1014" fg:w="1"/><text x="79.7794%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.5294%" y="277" width="0.0784%" height="15" fill="rgb(247,146,22)" fg:x="1014" fg:w="1"/><text x="79.7794%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.5294%" y="261" width="0.0784%" height="15" fill="rgb(215,191,7)" fg:x="1014" fg:w="1"/><text x="79.7794%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.5294%" y="245" width="0.0784%" height="15" fill="rgb(240,158,1)" fg:x="1014" fg:w="1"/><text x="79.7794%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6078%" y="309" width="0.0784%" height="15" fill="rgb(241,78,32)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6078%" y="293" width="0.0784%" height="15" fill="rgb(248,83,10)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6078%" y="277" width="0.0784%" height="15" fill="rgb(241,52,0)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6078%" y="261" width="0.0784%" height="15" fill="rgb(238,37,13)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6078%" y="245" width="0.0784%" height="15" fill="rgb(242,194,17)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.6078%" y="229" width="0.0784%" height="15" fill="rgb(236,96,3)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.6078%" y="213" width="0.0784%" height="15" fill="rgb(235,148,34)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.6078%" y="197" width="0.0784%" height="15" fill="rgb(254,12,11)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6078%" y="181" width="0.0784%" height="15" fill="rgb(207,31,54)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6078%" y="165" width="0.0784%" height="15" fill="rgb(252,14,28)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.6078%" y="149" width="0.0784%" height="15" fill="rgb(252,108,36)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.6078%" y="133" width="0.0784%" height="15" fill="rgb(214,149,7)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.6078%" y="117" width="0.0784%" height="15" fill="rgb(243,94,12)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.6078%" y="101" width="0.0784%" height="15" fill="rgb(208,36,10)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6078%" y="85" width="0.0784%" height="15" fill="rgb(233,185,52)" fg:x="1015" fg:w="1"/><text x="79.8578%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.6078%" y="341" width="0.1569%" height="15" fill="rgb(234,50,45)" fg:x="1015" fg:w="2"/><text x="79.8578%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.6078%" y="325" width="0.1569%" height="15" fill="rgb(228,92,54)" fg:x="1015" fg:w="2"/><text x="79.8578%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="79.6863%" y="309" width="0.0784%" height="15" fill="rgb(224,85,25)" fg:x="1016" fg:w="1"/><text x="79.9363%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="79.7647%" y="293" width="0.1569%" height="15" fill="rgb(246,1,45)" fg:x="1017" fg:w="2"/><text x="80.0147%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="79.7647%" y="277" width="0.1569%" height="15" fill="rgb(240,66,23)" fg:x="1017" fg:w="2"/><text x="80.0147%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8431%" y="261" width="0.0784%" height="15" fill="rgb(222,96,27)" fg:x="1018" fg:w="1"/><text x="80.0931%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="79.7647%" y="309" width="0.2353%" height="15" fill="rgb(212,136,10)" fg:x="1017" fg:w="3"/><text x="80.0147%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.9216%" y="293" width="0.0784%" height="15" fill="rgb(226,192,50)" fg:x="1019" fg:w="1"/><text x="80.1716%" y="303.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.63%)</title><rect x="79.4510%" y="421" width="0.6275%" height="15" fill="rgb(241,182,31)" fg:x="1013" fg:w="8"/><text x="79.7010%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.63%)</title><rect x="79.4510%" y="405" width="0.6275%" height="15" fill="rgb(219,205,47)" fg:x="1013" fg:w="8"/><text x="79.7010%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="79.4510%" y="389" width="0.6275%" height="15" fill="rgb(207,96,14)" fg:x="1013" fg:w="8"/><text x="79.7010%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.47%)</title><rect x="79.6078%" y="373" width="0.4706%" height="15" fill="rgb(216,119,9)" fg:x="1015" fg:w="6"/><text x="79.8578%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.47%)</title><rect x="79.6078%" y="357" width="0.4706%" height="15" fill="rgb(235,62,36)" fg:x="1015" fg:w="6"/><text x="79.8578%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="79.7647%" y="341" width="0.3137%" height="15" fill="rgb(214,41,27)" fg:x="1017" fg:w="4"/><text x="80.0147%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="79.7647%" y="325" width="0.3137%" height="15" fill="rgb(214,174,37)" fg:x="1017" fg:w="4"/><text x="80.0147%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.0000%" y="309" width="0.0784%" height="15" fill="rgb(212,11,25)" fg:x="1020" fg:w="1"/><text x="80.2500%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0000%" y="293" width="0.0784%" height="15" fill="rgb(217,71,35)" fg:x="1020" fg:w="1"/><text x="80.2500%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.0000%" y="277" width="0.0784%" height="15" fill="rgb(234,152,9)" fg:x="1020" fg:w="1"/><text x="80.2500%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0000%" y="261" width="0.0784%" height="15" fill="rgb(228,32,51)" fg:x="1020" fg:w="1"/><text x="80.2500%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.0000%" y="245" width="0.0784%" height="15" fill="rgb(209,14,47)" fg:x="1020" fg:w="1"/><text x="80.2500%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0000%" y="229" width="0.0784%" height="15" fill="rgb(218,201,17)" fg:x="1020" fg:w="1"/><text x="80.2500%" y="239.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.71%)</title><rect x="79.4510%" y="469" width="0.7059%" height="15" fill="rgb(218,98,15)" fg:x="1013" fg:w="9"/><text x="79.7010%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.71%)</title><rect x="79.4510%" y="453" width="0.7059%" height="15" fill="rgb(233,202,29)" fg:x="1013" fg:w="9"/><text x="79.7010%" y="463.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.71%)</title><rect x="79.4510%" y="437" width="0.7059%" height="15" fill="rgb(207,196,44)" fg:x="1013" fg:w="9"/><text x="79.7010%" y="447.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="80.0784%" y="421" width="0.0784%" height="15" fill="rgb(218,63,34)" fg:x="1021" fg:w="1"/><text x="80.3284%" y="431.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="80.0784%" y="405" width="0.0784%" height="15" fill="rgb(209,10,5)" fg:x="1021" fg:w="1"/><text x="80.3284%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="80.0784%" y="389" width="0.0784%" height="15" fill="rgb(224,36,28)" fg:x="1021" fg:w="1"/><text x="80.3284%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="80.0784%" y="373" width="0.0784%" height="15" fill="rgb(249,178,7)" fg:x="1021" fg:w="1"/><text x="80.3284%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.0784%" y="357" width="0.0784%" height="15" fill="rgb(253,163,10)" fg:x="1021" fg:w="1"/><text x="80.3284%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.0784%" y="341" width="0.0784%" height="15" fill="rgb(245,67,46)" fg:x="1021" fg:w="1"/><text x="80.3284%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="80.1569%" y="453" width="0.0784%" height="15" fill="rgb(225,14,18)" fg:x="1022" fg:w="1"/><text x="80.4069%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="80.2353%" y="453" width="0.2353%" height="15" fill="rgb(217,41,54)" fg:x="1023" fg:w="3"/><text x="80.4853%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3922%" y="437" width="0.0784%" height="15" fill="rgb(222,111,11)" fg:x="1025" fg:w="1"/><text x="80.6422%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3922%" y="421" width="0.0784%" height="15" fill="rgb(211,85,31)" fg:x="1025" fg:w="1"/><text x="80.6422%" y="431.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="80.4706%" y="437" width="0.0784%" height="15" fill="rgb(223,29,26)" fg:x="1026" fg:w="1"/><text x="80.7206%" y="447.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="80.4706%" y="421" width="0.0784%" height="15" fill="rgb(236,124,50)" fg:x="1026" fg:w="1"/><text x="80.7206%" y="431.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="80.4706%" y="405" width="0.0784%" height="15" fill="rgb(219,148,15)" fg:x="1026" fg:w="1"/><text x="80.7206%" y="415.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="80.4706%" y="389" width="0.0784%" height="15" fill="rgb(248,159,33)" fg:x="1026" fg:w="1"/><text x="80.7206%" y="399.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="80.4706%" y="373" width="0.0784%" height="15" fill="rgb(252,65,8)" fg:x="1026" fg:w="1"/><text x="80.7206%" y="383.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="80.4706%" y="357" width="0.0784%" height="15" fill="rgb(236,45,7)" fg:x="1026" fg:w="1"/><text x="80.7206%" y="367.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="80.4706%" y="341" width="0.0784%" height="15" fill="rgb(244,3,48)" fg:x="1026" fg:w="1"/><text x="80.7206%" y="351.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="80.4706%" y="325" width="0.0784%" height="15" fill="rgb(224,123,53)" fg:x="1026" fg:w="1"/><text x="80.7206%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.5490%" y="405" width="0.0784%" height="15" fill="rgb(223,173,15)" fg:x="1027" fg:w="1"/><text x="80.7990%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="80.5490%" y="389" width="0.0784%" height="15" fill="rgb(254,181,5)" fg:x="1027" fg:w="1"/><text x="80.7990%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="80.5490%" y="373" width="0.0784%" height="15" fill="rgb(243,124,33)" fg:x="1027" fg:w="1"/><text x="80.7990%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="80.5490%" y="357" width="0.0784%" height="15" fill="rgb(253,220,11)" fg:x="1027" fg:w="1"/><text x="80.7990%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.5490%" y="341" width="0.0784%" height="15" fill="rgb(217,14,4)" fg:x="1027" fg:w="1"/><text x="80.7990%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5490%" y="325" width="0.0784%" height="15" fill="rgb(209,196,12)" fg:x="1027" fg:w="1"/><text x="80.7990%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="80.6275%" y="341" width="0.3922%" height="15" fill="rgb(237,108,29)" fg:x="1028" fg:w="5"/><text x="80.8775%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="80.7843%" y="325" width="0.2353%" height="15" fill="rgb(216,173,20)" fg:x="1030" fg:w="3"/><text x="81.0343%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.8627%" y="309" width="0.1569%" height="15" fill="rgb(245,27,6)" fg:x="1031" fg:w="2"/><text x="81.1127%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.9412%" y="293" width="0.0784%" height="15" fill="rgb(210,181,20)" fg:x="1032" fg:w="1"/><text x="81.1912%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.0980%" y="325" width="0.0784%" height="15" fill="rgb(235,213,1)" fg:x="1034" fg:w="1"/><text x="81.3480%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0980%" y="309" width="0.0784%" height="15" fill="rgb(239,68,43)" fg:x="1034" fg:w="1"/><text x="81.3480%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0980%" y="293" width="0.0784%" height="15" fill="rgb(254,137,43)" fg:x="1034" fg:w="1"/><text x="81.3480%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.0980%" y="277" width="0.0784%" height="15" fill="rgb(252,170,38)" fg:x="1034" fg:w="1"/><text x="81.3480%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0980%" y="261" width="0.0784%" height="15" fill="rgb(234,21,42)" fg:x="1034" fg:w="1"/><text x="81.3480%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="81.1765%" y="325" width="0.2353%" height="15" fill="rgb(216,145,40)" fg:x="1035" fg:w="3"/><text x="81.4265%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3333%" y="309" width="0.0784%" height="15" fill="rgb(251,73,9)" fg:x="1037" fg:w="1"/><text x="81.5833%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3333%" y="293" width="0.0784%" height="15" fill="rgb(242,54,6)" fg:x="1037" fg:w="1"/><text x="81.5833%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.3333%" y="277" width="0.0784%" height="15" fill="rgb(239,70,7)" fg:x="1037" fg:w="1"/><text x="81.5833%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.4118%" y="309" width="0.0784%" height="15" fill="rgb(216,159,35)" fg:x="1038" fg:w="1"/><text x="81.6618%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4118%" y="293" width="0.0784%" height="15" fill="rgb(224,50,39)" fg:x="1038" fg:w="1"/><text x="81.6618%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.4118%" y="277" width="0.0784%" height="15" fill="rgb(235,9,35)" fg:x="1038" fg:w="1"/><text x="81.6618%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.4902%" y="309" width="0.0784%" height="15" fill="rgb(239,34,21)" fg:x="1039" fg:w="1"/><text x="81.7402%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4902%" y="293" width="0.0784%" height="15" fill="rgb(218,162,43)" fg:x="1039" fg:w="1"/><text x="81.7402%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.4902%" y="277" width="0.0784%" height="15" fill="rgb(219,89,33)" fg:x="1039" fg:w="1"/><text x="81.7402%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.4902%" y="261" width="0.0784%" height="15" fill="rgb(226,125,37)" fg:x="1039" fg:w="1"/><text x="81.7402%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5686%" y="293" width="0.0784%" height="15" fill="rgb(233,149,30)" fg:x="1040" fg:w="1"/><text x="81.8186%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.5686%" y="277" width="0.0784%" height="15" fill="rgb(236,8,18)" fg:x="1040" fg:w="1"/><text x="81.8186%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.5686%" y="309" width="0.1569%" height="15" fill="rgb(205,176,9)" fg:x="1040" fg:w="2"/><text x="81.8186%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.6471%" y="293" width="0.0784%" height="15" fill="rgb(252,103,44)" fg:x="1041" fg:w="1"/><text x="81.8971%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.6471%" y="277" width="0.0784%" height="15" fill="rgb(207,68,53)" fg:x="1041" fg:w="1"/><text x="81.8971%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="81.4118%" y="325" width="0.4706%" height="15" fill="rgb(218,193,48)" fg:x="1038" fg:w="6"/><text x="81.6618%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.7255%" y="309" width="0.1569%" height="15" fill="rgb(234,121,52)" fg:x="1042" fg:w="2"/><text x="81.9755%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.8039%" y="293" width="0.0784%" height="15" fill="rgb(227,218,49)" fg:x="1043" fg:w="1"/><text x="82.0539%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="81.0196%" y="341" width="0.9412%" height="15" fill="rgb(221,8,7)" fg:x="1033" fg:w="12"/><text x="81.2696%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.8824%" y="325" width="0.0784%" height="15" fill="rgb(217,151,36)" fg:x="1044" fg:w="1"/><text x="82.1324%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.8824%" y="309" width="0.0784%" height="15" fill="rgb(213,71,5)" fg:x="1044" fg:w="1"/><text x="82.1324%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.57%)</title><rect x="80.6275%" y="357" width="1.5686%" height="15" fill="rgb(225,145,43)" fg:x="1028" fg:w="20"/><text x="80.8775%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="81.9608%" y="341" width="0.2353%" height="15" fill="rgb(235,118,19)" fg:x="1045" fg:w="3"/><text x="82.2108%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.0392%" y="325" width="0.1569%" height="15" fill="rgb(214,102,36)" fg:x="1046" fg:w="2"/><text x="82.2892%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="82.0392%" y="309" width="0.1569%" height="15" fill="rgb(220,56,43)" fg:x="1046" fg:w="2"/><text x="82.2892%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.1176%" y="293" width="0.0784%" height="15" fill="rgb(246,136,46)" fg:x="1047" fg:w="1"/><text x="82.3676%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.1176%" y="277" width="0.0784%" height="15" fill="rgb(249,99,12)" fg:x="1047" fg:w="1"/><text x="82.3676%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.1176%" y="261" width="0.0784%" height="15" fill="rgb(224,31,42)" fg:x="1047" fg:w="1"/><text x="82.3676%" y="271.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 1.65%)</title><rect x="80.6275%" y="373" width="1.6471%" height="15" fill="rgb(208,96,21)" fg:x="1028" fg:w="21"/><text x="80.8775%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.1961%" y="357" width="0.0784%" height="15" fill="rgb(237,229,7)" fg:x="1048" fg:w="1"/><text x="82.4461%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.1961%" y="341" width="0.0784%" height="15" fill="rgb(210,12,6)" fg:x="1048" fg:w="1"/><text x="82.4461%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.1961%" y="325" width="0.0784%" height="15" fill="rgb(240,9,34)" fg:x="1048" fg:w="1"/><text x="82.4461%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.1961%" y="309" width="0.0784%" height="15" fill="rgb(211,68,37)" fg:x="1048" fg:w="1"/><text x="82.4461%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.1961%" y="293" width="0.0784%" height="15" fill="rgb(249,138,50)" fg:x="1048" fg:w="1"/><text x="82.4461%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1961%" y="277" width="0.0784%" height="15" fill="rgb(243,185,40)" fg:x="1048" fg:w="1"/><text x="82.4461%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3529%" y="341" width="0.0784%" height="15" fill="rgb(242,92,35)" fg:x="1050" fg:w="1"/><text x="82.6029%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.4314%" y="341" width="0.0784%" height="15" fill="rgb(244,98,5)" fg:x="1051" fg:w="1"/><text x="82.6814%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5882%" y="325" width="0.0784%" height="15" fill="rgb(228,186,29)" fg:x="1053" fg:w="1"/><text x="82.8382%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6667%" y="309" width="0.0784%" height="15" fill="rgb(253,7,44)" fg:x="1054" fg:w="1"/><text x="82.9167%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6667%" y="293" width="0.0784%" height="15" fill="rgb(216,11,45)" fg:x="1054" fg:w="1"/><text x="82.9167%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.7451%" y="293" width="0.0784%" height="15" fill="rgb(205,67,3)" fg:x="1055" fg:w="1"/><text x="82.9951%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.7451%" y="277" width="0.0784%" height="15" fill="rgb(250,18,3)" fg:x="1055" fg:w="1"/><text x="82.9951%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.8235%" y="277" width="0.0784%" height="15" fill="rgb(241,222,43)" fg:x="1056" fg:w="1"/><text x="83.0735%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="82.2745%" y="373" width="0.7059%" height="15" fill="rgb(233,115,3)" fg:x="1049" fg:w="9"/><text x="82.5245%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.71%)</title><rect x="82.2745%" y="357" width="0.7059%" height="15" fill="rgb(215,165,25)" fg:x="1049" fg:w="9"/><text x="82.5245%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="82.5098%" y="341" width="0.4706%" height="15" fill="rgb(234,179,6)" fg:x="1052" fg:w="6"/><text x="82.7598%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="82.6667%" y="325" width="0.3137%" height="15" fill="rgb(215,82,23)" fg:x="1054" fg:w="4"/><text x="82.9167%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.7451%" y="309" width="0.2353%" height="15" fill="rgb(211,47,18)" fg:x="1055" fg:w="3"/><text x="82.9951%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.8235%" y="293" width="0.1569%" height="15" fill="rgb(248,17,9)" fg:x="1056" fg:w="2"/><text x="83.0735%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.9020%" y="277" width="0.0784%" height="15" fill="rgb(210,212,12)" fg:x="1057" fg:w="1"/><text x="83.1520%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9020%" y="261" width="0.0784%" height="15" fill="rgb(230,135,45)" fg:x="1057" fg:w="1"/><text x="83.1520%" y="271.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="82.9804%" y="357" width="0.0784%" height="15" fill="rgb(214,121,41)" fg:x="1058" fg:w="1"/><text x="83.2304%" y="367.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="82.9804%" y="341" width="0.0784%" height="15" fill="rgb(239,165,45)" fg:x="1058" fg:w="1"/><text x="83.2304%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="82.9804%" y="325" width="0.0784%" height="15" fill="rgb(214,85,51)" fg:x="1058" fg:w="1"/><text x="83.2304%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.9804%" y="309" width="0.0784%" height="15" fill="rgb(223,90,27)" fg:x="1058" fg:w="1"/><text x="83.2304%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="83.2157%" y="325" width="0.2353%" height="15" fill="rgb(244,84,11)" fg:x="1061" fg:w="3"/><text x="83.4657%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="83.2157%" y="309" width="0.2353%" height="15" fill="rgb(253,41,47)" fg:x="1061" fg:w="3"/><text x="83.4657%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.3725%" y="293" width="0.0784%" height="15" fill="rgb(232,39,5)" fg:x="1063" fg:w="1"/><text x="83.6225%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4510%" y="325" width="0.0784%" height="15" fill="rgb(211,93,4)" fg:x="1064" fg:w="1"/><text x="83.7010%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.4510%" y="309" width="0.0784%" height="15" fill="rgb(219,50,49)" fg:x="1064" fg:w="1"/><text x="83.7010%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.4510%" y="293" width="0.0784%" height="15" fill="rgb(232,80,19)" fg:x="1064" fg:w="1"/><text x="83.7010%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="83.6078%" y="293" width="0.0784%" height="15" fill="rgb(215,227,39)" fg:x="1066" fg:w="1"/><text x="83.8578%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.6863%" y="277" width="0.1569%" height="15" fill="rgb(211,99,12)" fg:x="1067" fg:w="2"/><text x="83.9363%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.6863%" y="261" width="0.1569%" height="15" fill="rgb(214,158,5)" fg:x="1067" fg:w="2"/><text x="83.9363%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.6863%" y="245" width="0.1569%" height="15" fill="rgb(242,19,53)" fg:x="1067" fg:w="2"/><text x="83.9363%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0784%" y="245" width="0.0784%" height="15" fill="rgb(208,18,20)" fg:x="1072" fg:w="1"/><text x="84.3284%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="83.6863%" y="293" width="0.5490%" height="15" fill="rgb(250,44,11)" fg:x="1067" fg:w="7"/><text x="83.9363%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="83.8431%" y="277" width="0.3922%" height="15" fill="rgb(238,159,13)" fg:x="1069" fg:w="5"/><text x="84.0931%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.0784%" y="261" width="0.1569%" height="15" fill="rgb(231,74,18)" fg:x="1072" fg:w="2"/><text x="84.3284%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1569%" y="245" width="0.0784%" height="15" fill="rgb(229,219,45)" fg:x="1073" fg:w="1"/><text x="84.4069%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1569%" y="229" width="0.0784%" height="15" fill="rgb(210,221,1)" fg:x="1073" fg:w="1"/><text x="84.4069%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.78%)</title><rect x="83.5294%" y="309" width="0.7843%" height="15" fill="rgb(209,60,51)" fg:x="1065" fg:w="10"/><text x="83.7794%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.2353%" y="293" width="0.0784%" height="15" fill="rgb(252,97,34)" fg:x="1074" fg:w="1"/><text x="84.4853%" y="303.50"></text></g><g><title>engine::session::Session::flush (54 samples, 4.24%)</title><rect x="80.1569%" y="469" width="4.2353%" height="15" fill="rgb(243,211,37)" fg:x="1022" fg:w="54"/><text x="80.4069%" y="479.50">engin..</text></g><g><title>engine::session::Session::save_changes (50 samples, 3.92%)</title><rect x="80.4706%" y="453" width="3.9216%" height="15" fill="rgb(210,229,37)" fg:x="1026" fg:w="50"/><text x="80.7206%" y="463.50">engi..</text></g><g><title>engine::session::state::State::close (49 samples, 3.84%)</title><rect x="80.5490%" y="437" width="3.8431%" height="15" fill="rgb(220,208,43)" fg:x="1027" fg:w="49"/><text x="80.7990%" y="447.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (49 samples, 3.84%)</title><rect x="80.5490%" y="421" width="3.8431%" height="15" fill="rgb(218,118,50)" fg:x="1027" fg:w="49"/><text x="80.7990%" y="431.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (48 samples, 3.76%)</title><rect x="80.6275%" y="405" width="3.7647%" height="15" fill="rgb(254,169,52)" fg:x="1028" fg:w="48"/><text x="80.8775%" y="415.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (48 samples, 3.76%)</title><rect x="80.6275%" y="389" width="3.7647%" height="15" fill="rgb(221,214,37)" fg:x="1028" fg:w="48"/><text x="80.8775%" y="399.50">engi..</text></g><g><title>kernel::model::any_entity_changes (18 samples, 1.41%)</title><rect x="82.9804%" y="373" width="1.4118%" height="15" fill="rgb(254,186,32)" fg:x="1058" fg:w="18"/><text x="83.2304%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.33%)</title><rect x="83.0588%" y="357" width="1.3333%" height="15" fill="rgb(215,144,43)" fg:x="1059" fg:w="17"/><text x="83.3088%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.25%)</title><rect x="83.1373%" y="341" width="1.2549%" height="15" fill="rgb(252,21,46)" fg:x="1060" fg:w="16"/><text x="83.3873%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.86%)</title><rect x="83.5294%" y="325" width="0.8627%" height="15" fill="rgb(207,166,46)" fg:x="1065" fg:w="11"/><text x="83.7794%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3137%" y="309" width="0.0784%" height="15" fill="rgb(253,37,49)" fg:x="1075" fg:w="1"/><text x="84.5637%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3137%" y="293" width="0.0784%" height="15" fill="rgb(222,97,20)" fg:x="1075" fg:w="1"/><text x="84.5637%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.3922%" y="405" width="0.0784%" height="15" fill="rgb(244,181,26)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.3922%" y="389" width="0.0784%" height="15" fill="rgb(241,22,29)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3922%" y="373" width="0.0784%" height="15" fill="rgb(206,200,43)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3922%" y="357" width="0.0784%" height="15" fill="rgb(226,224,43)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3922%" y="341" width="0.0784%" height="15" fill="rgb(253,129,28)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3922%" y="325" width="0.0784%" height="15" fill="rgb(252,99,33)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3922%" y="309" width="0.0784%" height="15" fill="rgb(208,123,45)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.3922%" y="293" width="0.0784%" height="15" fill="rgb(251,106,12)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.3922%" y="277" width="0.0784%" height="15" fill="rgb(240,209,35)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.3922%" y="261" width="0.0784%" height="15" fill="rgb(214,52,50)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.3922%" y="245" width="0.0784%" height="15" fill="rgb(234,119,4)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.3922%" y="229" width="0.0784%" height="15" fill="rgb(228,181,36)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.3922%" y="213" width="0.0784%" height="15" fill="rgb(213,171,42)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.3922%" y="197" width="0.0784%" height="15" fill="rgb(239,14,41)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.3922%" y="181" width="0.0784%" height="15" fill="rgb(239,111,46)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.3922%" y="165" width="0.0784%" height="15" fill="rgb(214,72,7)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3922%" y="149" width="0.0784%" height="15" fill="rgb(221,114,1)" fg:x="1076" fg:w="1"/><text x="84.6422%" y="159.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.3922%" y="437" width="0.1569%" height="15" fill="rgb(213,143,14)" fg:x="1076" fg:w="2"/><text x="84.6422%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.3922%" y="421" width="0.1569%" height="15" fill="rgb(220,221,53)" fg:x="1076" fg:w="2"/><text x="84.6422%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.4706%" y="405" width="0.0784%" height="15" fill="rgb(236,189,27)" fg:x="1077" fg:w="1"/><text x="84.7206%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.4706%" y="389" width="0.0784%" height="15" fill="rgb(252,139,49)" fg:x="1077" fg:w="1"/><text x="84.7206%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.4706%" y="373" width="0.0784%" height="15" fill="rgb(231,158,33)" fg:x="1077" fg:w="1"/><text x="84.7206%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4706%" y="357" width="0.0784%" height="15" fill="rgb(207,201,15)" fg:x="1077" fg:w="1"/><text x="84.7206%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.4706%" y="341" width="0.0784%" height="15" fill="rgb(218,43,48)" fg:x="1077" fg:w="1"/><text x="84.7206%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4706%" y="325" width="0.0784%" height="15" fill="rgb(244,63,52)" fg:x="1077" fg:w="1"/><text x="84.7206%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4706%" y="309" width="0.0784%" height="15" fill="rgb(236,60,17)" fg:x="1077" fg:w="1"/><text x="84.7206%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.4706%" y="293" width="0.0784%" height="15" fill="rgb(205,206,29)" fg:x="1077" fg:w="1"/><text x="84.7206%" y="303.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.5490%" y="437" width="0.0784%" height="15" fill="rgb(205,209,35)" fg:x="1078" fg:w="1"/><text x="84.7990%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5490%" y="421" width="0.0784%" height="15" fill="rgb(227,112,14)" fg:x="1078" fg:w="1"/><text x="84.7990%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5490%" y="405" width="0.0784%" height="15" fill="rgb(248,151,9)" fg:x="1078" fg:w="1"/><text x="84.7990%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.5490%" y="389" width="0.0784%" height="15" fill="rgb(247,45,40)" fg:x="1078" fg:w="1"/><text x="84.7990%" y="399.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5490%" y="373" width="0.0784%" height="15" fill="rgb(232,185,16)" fg:x="1078" fg:w="1"/><text x="84.7990%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5490%" y="357" width="0.0784%" height="15" fill="rgb(215,45,44)" fg:x="1078" fg:w="1"/><text x="84.7990%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5490%" y="341" width="0.0784%" height="15" fill="rgb(206,69,32)" fg:x="1078" fg:w="1"/><text x="84.7990%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5490%" y="325" width="0.0784%" height="15" fill="rgb(233,98,50)" fg:x="1078" fg:w="1"/><text x="84.7990%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="84.6275%" y="421" width="0.0784%" height="15" fill="rgb(232,217,52)" fg:x="1079" fg:w="1"/><text x="84.8775%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.6275%" y="405" width="0.0784%" height="15" fill="rgb(250,42,51)" fg:x="1079" fg:w="1"/><text x="84.8775%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.7059%" y="389" width="0.0784%" height="15" fill="rgb(241,200,26)" fg:x="1080" fg:w="1"/><text x="84.9559%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.7059%" y="373" width="0.0784%" height="15" fill="rgb(207,10,32)" fg:x="1080" fg:w="1"/><text x="84.9559%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7059%" y="357" width="0.0784%" height="15" fill="rgb(214,63,15)" fg:x="1080" fg:w="1"/><text x="84.9559%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7059%" y="341" width="0.0784%" height="15" fill="rgb(234,176,14)" fg:x="1080" fg:w="1"/><text x="84.9559%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7059%" y="325" width="0.0784%" height="15" fill="rgb(226,104,52)" fg:x="1080" fg:w="1"/><text x="84.9559%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="84.9412%" y="357" width="0.0784%" height="15" fill="rgb(211,222,1)" fg:x="1083" fg:w="1"/><text x="85.1912%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.9412%" y="341" width="0.0784%" height="15" fill="rgb(237,7,3)" fg:x="1083" fg:w="1"/><text x="85.1912%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9412%" y="325" width="0.0784%" height="15" fill="rgb(218,143,7)" fg:x="1083" fg:w="1"/><text x="85.1912%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.0196%" y="325" width="0.0784%" height="15" fill="rgb(208,25,22)" fg:x="1084" fg:w="1"/><text x="85.2696%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0196%" y="309" width="0.0784%" height="15" fill="rgb(228,127,16)" fg:x="1084" fg:w="1"/><text x="85.2696%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.47%)</title><rect x="84.7059%" y="421" width="0.4706%" height="15" fill="rgb(237,86,27)" fg:x="1080" fg:w="6"/><text x="84.9559%" y="431.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.47%)</title><rect x="84.7059%" y="405" width="0.4706%" height="15" fill="rgb(207,125,19)" fg:x="1080" fg:w="6"/><text x="84.9559%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="84.7843%" y="389" width="0.3922%" height="15" fill="rgb(243,195,0)" fg:x="1081" fg:w="5"/><text x="85.0343%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.39%)</title><rect x="84.7843%" y="373" width="0.3922%" height="15" fill="rgb(230,95,18)" fg:x="1081" fg:w="5"/><text x="85.0343%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.0196%" y="357" width="0.1569%" height="15" fill="rgb(232,157,21)" fg:x="1084" fg:w="2"/><text x="85.2696%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.0196%" y="341" width="0.1569%" height="15" fill="rgb(212,120,50)" fg:x="1084" fg:w="2"/><text x="85.2696%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.0980%" y="325" width="0.0784%" height="15" fill="rgb(222,204,44)" fg:x="1085" fg:w="1"/><text x="85.3480%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0980%" y="309" width="0.0784%" height="15" fill="rgb(236,6,33)" fg:x="1085" fg:w="1"/><text x="85.3480%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.1765%" y="293" width="0.0784%" height="15" fill="rgb(247,11,38)" fg:x="1086" fg:w="1"/><text x="85.4265%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.1765%" y="277" width="0.0784%" height="15" fill="rgb(215,111,0)" fg:x="1086" fg:w="1"/><text x="85.4265%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.1765%" y="261" width="0.0784%" height="15" fill="rgb(211,65,46)" fg:x="1086" fg:w="1"/><text x="85.4265%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.1765%" y="245" width="0.0784%" height="15" fill="rgb(216,5,12)" fg:x="1086" fg:w="1"/><text x="85.4265%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.1765%" y="229" width="0.0784%" height="15" fill="rgb(226,7,2)" fg:x="1086" fg:w="1"/><text x="85.4265%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.1765%" y="213" width="0.0784%" height="15" fill="rgb(242,116,12)" fg:x="1086" fg:w="1"/><text x="85.4265%" y="223.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.71%)</title><rect x="84.6275%" y="437" width="0.7059%" height="15" fill="rgb(249,209,7)" fg:x="1079" fg:w="9"/><text x="84.8775%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="85.1765%" y="421" width="0.1569%" height="15" fill="rgb(232,73,17)" fg:x="1086" fg:w="2"/><text x="85.4265%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.1765%" y="405" width="0.1569%" height="15" fill="rgb(214,13,32)" fg:x="1086" fg:w="2"/><text x="85.4265%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.16%)</title><rect x="85.1765%" y="389" width="0.1569%" height="15" fill="rgb(221,125,10)" fg:x="1086" fg:w="2"/><text x="85.4265%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="85.1765%" y="373" width="0.1569%" height="15" fill="rgb(246,7,44)" fg:x="1086" fg:w="2"/><text x="85.4265%" y="383.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="85.1765%" y="357" width="0.1569%" height="15" fill="rgb(239,18,35)" fg:x="1086" fg:w="2"/><text x="85.4265%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="85.1765%" y="341" width="0.1569%" height="15" fill="rgb(250,222,16)" fg:x="1086" fg:w="2"/><text x="85.4265%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="85.1765%" y="325" width="0.1569%" height="15" fill="rgb(219,100,8)" fg:x="1086" fg:w="2"/><text x="85.4265%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="85.1765%" y="309" width="0.1569%" height="15" fill="rgb(240,62,13)" fg:x="1086" fg:w="2"/><text x="85.4265%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.2549%" y="293" width="0.0784%" height="15" fill="rgb(253,194,2)" fg:x="1087" fg:w="1"/><text x="85.5049%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.3333%" y="421" width="0.0784%" height="15" fill="rgb(235,58,31)" fg:x="1088" fg:w="1"/><text x="85.5833%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3333%" y="405" width="0.0784%" height="15" fill="rgb(231,37,11)" fg:x="1088" fg:w="1"/><text x="85.5833%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3333%" y="389" width="0.0784%" height="15" fill="rgb(235,133,0)" fg:x="1088" fg:w="1"/><text x="85.5833%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.4118%" y="405" width="0.0784%" height="15" fill="rgb(212,185,40)" fg:x="1089" fg:w="1"/><text x="85.6618%" y="415.50"></text></g><g><title>plugins_core::build::Build::holding (15 samples, 1.18%)</title><rect x="84.3922%" y="469" width="1.1765%" height="15" fill="rgb(216,68,42)" fg:x="1076" fg:w="15"/><text x="84.6422%" y="479.50"></text></g><g><title>plugins_core::tools::set_container (15 samples, 1.18%)</title><rect x="84.3922%" y="453" width="1.1765%" height="15" fill="rgb(239,81,4)" fg:x="1076" fg:w="15"/><text x="84.6422%" y="463.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="85.3333%" y="437" width="0.2353%" height="15" fill="rgb(206,86,6)" fg:x="1088" fg:w="3"/><text x="85.5833%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.4118%" y="421" width="0.1569%" height="15" fill="rgb(249,95,27)" fg:x="1089" fg:w="2"/><text x="85.6618%" y="431.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="85.4902%" y="405" width="0.0784%" height="15" fill="rgb(205,155,45)" fg:x="1090" fg:w="1"/><text x="85.7402%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.4902%" y="389" width="0.0784%" height="15" fill="rgb(213,55,42)" fg:x="1090" fg:w="1"/><text x="85.7402%" y="399.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.4902%" y="373" width="0.0784%" height="15" fill="rgb(249,197,4)" fg:x="1090" fg:w="1"/><text x="85.7402%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.4902%" y="357" width="0.0784%" height="15" fill="rgb(212,128,32)" fg:x="1090" fg:w="1"/><text x="85.7402%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="85.5686%" y="469" width="0.1569%" height="15" fill="rgb(252,47,30)" fg:x="1091" fg:w="2"/><text x="85.8186%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="85.5686%" y="453" width="0.1569%" height="15" fill="rgb(209,79,18)" fg:x="1091" fg:w="2"/><text x="85.8186%" y="463.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="85.5686%" y="437" width="0.1569%" height="15" fill="rgb(225,81,38)" fg:x="1091" fg:w="2"/><text x="85.8186%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.5686%" y="421" width="0.1569%" height="15" fill="rgb(205,95,16)" fg:x="1091" fg:w="2"/><text x="85.8186%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="85.5686%" y="405" width="0.1569%" height="15" fill="rgb(214,30,4)" fg:x="1091" fg:w="2"/><text x="85.8186%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.6471%" y="389" width="0.0784%" height="15" fill="rgb(232,137,22)" fg:x="1092" fg:w="1"/><text x="85.8971%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.6471%" y="373" width="0.0784%" height="15" fill="rgb(232,156,19)" fg:x="1092" fg:w="1"/><text x="85.8971%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6471%" y="357" width="0.0784%" height="15" fill="rgb(248,157,26)" fg:x="1092" fg:w="1"/><text x="85.8971%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6471%" y="341" width="0.0784%" height="15" fill="rgb(242,24,3)" fg:x="1092" fg:w="1"/><text x="85.8971%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="85.7255%" y="453" width="0.0784%" height="15" fill="rgb(218,195,48)" fg:x="1093" fg:w="1"/><text x="85.9755%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.7255%" y="437" width="0.0784%" height="15" fill="rgb(214,193,36)" fg:x="1093" fg:w="1"/><text x="85.9755%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.7255%" y="421" width="0.0784%" height="15" fill="rgb(242,110,40)" fg:x="1093" fg:w="1"/><text x="85.9755%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.7255%" y="405" width="0.0784%" height="15" fill="rgb(233,150,26)" fg:x="1093" fg:w="1"/><text x="85.9755%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.7255%" y="389" width="0.0784%" height="15" fill="rgb(239,200,30)" fg:x="1093" fg:w="1"/><text x="85.9755%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.7255%" y="373" width="0.0784%" height="15" fill="rgb(226,28,11)" fg:x="1093" fg:w="1"/><text x="85.9755%" y="383.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="85.8039%" y="453" width="0.0784%" height="15" fill="rgb(220,26,48)" fg:x="1094" fg:w="1"/><text x="86.0539%" y="463.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="85.7255%" y="469" width="0.2353%" height="15" fill="rgb(232,10,11)" fg:x="1093" fg:w="3"/><text x="85.9755%" y="479.50"></text></g><g><title>kernel::model::builder::build_entity (1 samples, 0.08%)</title><rect x="85.8824%" y="453" width="0.0784%" height="15" fill="rgb(252,143,50)" fg:x="1095" fg:w="1"/><text x="86.1324%" y="463.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="85.8824%" y="437" width="0.0784%" height="15" fill="rgb(206,58,22)" fg:x="1095" fg:w="1"/><text x="86.1324%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8824%" y="421" width="0.0784%" height="15" fill="rgb(250,9,45)" fg:x="1095" fg:w="1"/><text x="86.1324%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9608%" y="453" width="0.0784%" height="15" fill="rgb(225,148,14)" fg:x="1096" fg:w="1"/><text x="86.2108%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.0392%" y="421" width="0.1569%" height="15" fill="rgb(205,178,40)" fg:x="1097" fg:w="2"/><text x="86.2892%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="86.1176%" y="405" width="0.0784%" height="15" fill="rgb(215,201,4)" fg:x="1098" fg:w="1"/><text x="86.3676%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1176%" y="389" width="0.0784%" height="15" fill="rgb(219,223,24)" fg:x="1098" fg:w="1"/><text x="86.3676%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.1961%" y="421" width="0.0784%" height="15" fill="rgb(217,19,31)" fg:x="1099" fg:w="1"/><text x="86.4461%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.1961%" y="405" width="0.0784%" height="15" fill="rgb(235,33,3)" fg:x="1099" fg:w="1"/><text x="86.4461%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.1961%" y="389" width="0.0784%" height="15" fill="rgb(221,39,18)" fg:x="1099" fg:w="1"/><text x="86.4461%" y="399.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.1961%" y="373" width="0.0784%" height="15" fill="rgb(242,162,33)" fg:x="1099" fg:w="1"/><text x="86.4461%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.1961%" y="357" width="0.0784%" height="15" fill="rgb(233,215,28)" fg:x="1099" fg:w="1"/><text x="86.4461%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.1961%" y="341" width="0.0784%" height="15" fill="rgb(212,117,9)" fg:x="1099" fg:w="1"/><text x="86.4461%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.1961%" y="325" width="0.0784%" height="15" fill="rgb(237,70,47)" fg:x="1099" fg:w="1"/><text x="86.4461%" y="335.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.2745%" y="373" width="0.0784%" height="15" fill="rgb(206,177,13)" fg:x="1100" fg:w="1"/><text x="86.5245%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.2745%" y="357" width="0.0784%" height="15" fill="rgb(209,174,33)" fg:x="1100" fg:w="1"/><text x="86.5245%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2745%" y="341" width="0.0784%" height="15" fill="rgb(226,6,11)" fg:x="1100" fg:w="1"/><text x="86.5245%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2745%" y="325" width="0.0784%" height="15" fill="rgb(240,214,6)" fg:x="1100" fg:w="1"/><text x="86.5245%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.2745%" y="309" width="0.0784%" height="15" fill="rgb(254,214,40)" fg:x="1100" fg:w="1"/><text x="86.5245%" y="319.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="86.2745%" y="293" width="0.0784%" height="15" fill="rgb(230,187,15)" fg:x="1100" fg:w="1"/><text x="86.5245%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2745%" y="277" width="0.0784%" height="15" fill="rgb(250,11,27)" fg:x="1100" fg:w="1"/><text x="86.5245%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="86.2745%" y="421" width="0.1569%" height="15" fill="rgb(243,107,19)" fg:x="1100" fg:w="2"/><text x="86.5245%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="86.2745%" y="405" width="0.1569%" height="15" fill="rgb(253,66,26)" fg:x="1100" fg:w="2"/><text x="86.5245%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="86.2745%" y="389" width="0.1569%" height="15" fill="rgb(228,43,8)" fg:x="1100" fg:w="2"/><text x="86.5245%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.3529%" y="373" width="0.0784%" height="15" fill="rgb(232,197,36)" fg:x="1101" fg:w="1"/><text x="86.6029%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="86.3529%" y="357" width="0.0784%" height="15" fill="rgb(221,182,31)" fg:x="1101" fg:w="1"/><text x="86.6029%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.3529%" y="341" width="0.0784%" height="15" fill="rgb(244,25,36)" fg:x="1101" fg:w="1"/><text x="86.6029%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.3529%" y="325" width="0.0784%" height="15" fill="rgb(247,101,19)" fg:x="1101" fg:w="1"/><text x="86.6029%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.3529%" y="309" width="0.0784%" height="15" fill="rgb(223,117,19)" fg:x="1101" fg:w="1"/><text x="86.6029%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.55%)</title><rect x="86.0392%" y="437" width="0.5490%" height="15" fill="rgb(249,63,38)" fg:x="1097" fg:w="7"/><text x="86.2892%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="86.4314%" y="421" width="0.1569%" height="15" fill="rgb(220,143,23)" fg:x="1102" fg:w="2"/><text x="86.6814%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="86.4314%" y="405" width="0.1569%" height="15" fill="rgb(252,183,22)" fg:x="1102" fg:w="2"/><text x="86.6814%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.4314%" y="389" width="0.1569%" height="15" fill="rgb(243,176,15)" fg:x="1102" fg:w="2"/><text x="86.6814%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.4314%" y="373" width="0.1569%" height="15" fill="rgb(244,204,46)" fg:x="1102" fg:w="2"/><text x="86.6814%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="86.4314%" y="357" width="0.1569%" height="15" fill="rgb(227,28,54)" fg:x="1102" fg:w="2"/><text x="86.6814%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.4314%" y="341" width="0.1569%" height="15" fill="rgb(231,10,15)" fg:x="1102" fg:w="2"/><text x="86.6814%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.5098%" y="325" width="0.0784%" height="15" fill="rgb(210,200,17)" fg:x="1103" fg:w="1"/><text x="86.7598%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.5098%" y="309" width="0.0784%" height="15" fill="rgb(251,106,46)" fg:x="1103" fg:w="1"/><text x="86.7598%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.5098%" y="293" width="0.0784%" height="15" fill="rgb(218,211,15)" fg:x="1103" fg:w="1"/><text x="86.7598%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.5098%" y="277" width="0.0784%" height="15" fill="rgb(239,62,10)" fg:x="1103" fg:w="1"/><text x="86.7598%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.71%)</title><rect x="86.0392%" y="453" width="0.7059%" height="15" fill="rgb(225,53,53)" fg:x="1097" fg:w="9"/><text x="86.2892%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.5882%" y="437" width="0.1569%" height="15" fill="rgb(207,16,24)" fg:x="1104" fg:w="2"/><text x="86.8382%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.5882%" y="421" width="0.1569%" height="15" fill="rgb(217,52,28)" fg:x="1104" fg:w="2"/><text x="86.8382%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="86.5882%" y="405" width="0.1569%" height="15" fill="rgb(246,1,5)" fg:x="1104" fg:w="2"/><text x="86.8382%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="86.5882%" y="389" width="0.1569%" height="15" fill="rgb(221,29,26)" fg:x="1104" fg:w="2"/><text x="86.8382%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.5882%" y="373" width="0.1569%" height="15" fill="rgb(250,133,32)" fg:x="1104" fg:w="2"/><text x="86.8382%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.6667%" y="357" width="0.0784%" height="15" fill="rgb(236,63,16)" fg:x="1105" fg:w="1"/><text x="86.9167%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.6667%" y="341" width="0.0784%" height="15" fill="rgb(231,159,14)" fg:x="1105" fg:w="1"/><text x="86.9167%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.8235%" y="437" width="0.0784%" height="15" fill="rgb(207,102,36)" fg:x="1107" fg:w="1"/><text x="87.0735%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.8235%" y="421" width="0.0784%" height="15" fill="rgb(230,224,31)" fg:x="1107" fg:w="1"/><text x="87.0735%" y="431.50"></text></g><g><title>plugins_core::build::Build::occupying (14 samples, 1.10%)</title><rect x="85.9608%" y="469" width="1.0980%" height="15" fill="rgb(215,182,16)" fg:x="1096" fg:w="14"/><text x="86.2108%" y="479.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.31%)</title><rect x="86.7451%" y="453" width="0.3137%" height="15" fill="rgb(226,113,2)" fg:x="1106" fg:w="4"/><text x="86.9951%" y="463.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="86.9020%" y="437" width="0.1569%" height="15" fill="rgb(241,18,35)" fg:x="1108" fg:w="2"/><text x="87.1520%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="86.9020%" y="421" width="0.1569%" height="15" fill="rgb(240,165,44)" fg:x="1108" fg:w="2"/><text x="87.1520%" y="431.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.9804%" y="405" width="0.0784%" height="15" fill="rgb(229,130,47)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.9804%" y="389" width="0.0784%" height="15" fill="rgb(223,93,7)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.9804%" y="373" width="0.0784%" height="15" fill="rgb(205,180,36)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9804%" y="357" width="0.0784%" height="15" fill="rgb(221,103,28)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9804%" y="341" width="0.0784%" height="15" fill="rgb(212,4,3)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9804%" y="325" width="0.0784%" height="15" fill="rgb(209,221,53)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9804%" y="309" width="0.0784%" height="15" fill="rgb(233,229,52)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9804%" y="293" width="0.0784%" height="15" fill="rgb(254,127,37)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.9804%" y="277" width="0.0784%" height="15" fill="rgb(207,161,26)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.9804%" y="261" width="0.0784%" height="15" fill="rgb(223,75,5)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.9804%" y="245" width="0.0784%" height="15" fill="rgb(235,115,52)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.9804%" y="229" width="0.0784%" height="15" fill="rgb(240,91,46)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.9804%" y="213" width="0.0784%" height="15" fill="rgb(251,144,21)" fg:x="1109" fg:w="1"/><text x="87.2304%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.0588%" y="421" width="0.0784%" height="15" fill="rgb(247,220,47)" fg:x="1110" fg:w="1"/><text x="87.3088%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.0588%" y="405" width="0.0784%" height="15" fill="rgb(253,122,1)" fg:x="1110" fg:w="1"/><text x="87.3088%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.0588%" y="389" width="0.0784%" height="15" fill="rgb(221,0,24)" fg:x="1110" fg:w="1"/><text x="87.3088%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0588%" y="373" width="0.0784%" height="15" fill="rgb(220,204,54)" fg:x="1110" fg:w="1"/><text x="87.3088%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.0588%" y="357" width="0.0784%" height="15" fill="rgb(205,96,25)" fg:x="1110" fg:w="1"/><text x="87.3088%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.1373%" y="357" width="0.0784%" height="15" fill="rgb(247,77,20)" fg:x="1111" fg:w="1"/><text x="87.3873%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="87.1373%" y="421" width="0.1569%" height="15" fill="rgb(245,151,8)" fg:x="1111" fg:w="2"/><text x="87.3873%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="87.1373%" y="405" width="0.1569%" height="15" fill="rgb(242,158,39)" fg:x="1111" fg:w="2"/><text x="87.3873%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="87.1373%" y="389" width="0.1569%" height="15" fill="rgb(222,214,50)" fg:x="1111" fg:w="2"/><text x="87.3873%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.1373%" y="373" width="0.1569%" height="15" fill="rgb(229,60,39)" fg:x="1111" fg:w="2"/><text x="87.3873%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.2157%" y="357" width="0.0784%" height="15" fill="rgb(240,148,18)" fg:x="1112" fg:w="1"/><text x="87.4657%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2157%" y="341" width="0.0784%" height="15" fill="rgb(215,96,11)" fg:x="1112" fg:w="1"/><text x="87.4657%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.2157%" y="325" width="0.0784%" height="15" fill="rgb(238,162,53)" fg:x="1112" fg:w="1"/><text x="87.4657%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2157%" y="309" width="0.0784%" height="15" fill="rgb(214,83,18)" fg:x="1112" fg:w="1"/><text x="87.4657%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.2157%" y="293" width="0.0784%" height="15" fill="rgb(248,117,24)" fg:x="1112" fg:w="1"/><text x="87.4657%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2157%" y="277" width="0.0784%" height="15" fill="rgb(238,190,6)" fg:x="1112" fg:w="1"/><text x="87.4657%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2157%" y="261" width="0.0784%" height="15" fill="rgb(213,51,6)" fg:x="1112" fg:w="1"/><text x="87.4657%" y="271.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.31%)</title><rect x="87.0588%" y="453" width="0.3137%" height="15" fill="rgb(212,136,1)" fg:x="1110" fg:w="4"/><text x="87.3088%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="87.0588%" y="437" width="0.3137%" height="15" fill="rgb(221,192,14)" fg:x="1110" fg:w="4"/><text x="87.3088%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="87.2941%" y="421" width="0.0784%" height="15" fill="rgb(244,38,54)" fg:x="1113" fg:w="1"/><text x="87.5441%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.2941%" y="405" width="0.0784%" height="15" fill="rgb(240,45,28)" fg:x="1113" fg:w="1"/><text x="87.5441%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.2941%" y="389" width="0.0784%" height="15" fill="rgb(240,123,12)" fg:x="1113" fg:w="1"/><text x="87.5441%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.2941%" y="373" width="0.0784%" height="15" fill="rgb(216,14,30)" fg:x="1113" fg:w="1"/><text x="87.5441%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.2941%" y="357" width="0.0784%" height="15" fill="rgb(212,50,24)" fg:x="1113" fg:w="1"/><text x="87.5441%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.2941%" y="341" width="0.0784%" height="15" fill="rgb(253,229,47)" fg:x="1113" fg:w="1"/><text x="87.5441%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (106 samples, 8.31%)</title><rect x="79.2157%" y="485" width="8.3137%" height="15" fill="rgb(214,26,17)" fg:x="1010" fg:w="106"/><text x="79.4657%" y="495.50">plugins_core..</text></g><g><title>plugins_core::build::Build::wearing (6 samples, 0.47%)</title><rect x="87.0588%" y="469" width="0.4706%" height="15" fill="rgb(252,60,11)" fg:x="1110" fg:w="6"/><text x="87.3088%" y="479.50"></text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="87.3725%" y="453" width="0.1569%" height="15" fill="rgb(209,59,37)" fg:x="1114" fg:w="2"/><text x="87.6225%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="87.3725%" y="437" width="0.1569%" height="15" fill="rgb(228,126,53)" fg:x="1114" fg:w="2"/><text x="87.6225%" y="447.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (2 samples, 0.16%)</title><rect x="87.3725%" y="421" width="0.1569%" height="15" fill="rgb(233,99,2)" fg:x="1114" fg:w="2"/><text x="87.6225%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.3725%" y="405" width="0.1569%" height="15" fill="rgb(217,106,34)" fg:x="1114" fg:w="2"/><text x="87.6225%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4510%" y="389" width="0.0784%" height="15" fill="rgb(222,46,19)" fg:x="1115" fg:w="1"/><text x="87.7010%" y="399.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="87.6078%" y="389" width="0.0784%" height="15" fill="rgb(251,87,31)" fg:x="1117" fg:w="1"/><text x="87.8578%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="87.6078%" y="373" width="0.0784%" height="15" fill="rgb(213,70,51)" fg:x="1117" fg:w="1"/><text x="87.8578%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.6078%" y="357" width="0.0784%" height="15" fill="rgb(229,144,18)" fg:x="1117" fg:w="1"/><text x="87.8578%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.6078%" y="341" width="0.0784%" height="15" fill="rgb(254,60,26)" fg:x="1117" fg:w="1"/><text x="87.8578%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.6078%" y="325" width="0.0784%" height="15" fill="rgb(243,127,51)" fg:x="1117" fg:w="1"/><text x="87.8578%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.6078%" y="309" width="0.0784%" height="15" fill="rgb(221,51,25)" fg:x="1117" fg:w="1"/><text x="87.8578%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.6078%" y="293" width="0.0784%" height="15" fill="rgb(205,42,7)" fg:x="1117" fg:w="1"/><text x="87.8578%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.6078%" y="277" width="0.0784%" height="15" fill="rgb(236,177,48)" fg:x="1117" fg:w="1"/><text x="87.8578%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6078%" y="261" width="0.0784%" height="15" fill="rgb(226,79,31)" fg:x="1117" fg:w="1"/><text x="87.8578%" y="271.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="87.5294%" y="485" width="0.2353%" height="15" fill="rgb(216,170,12)" fg:x="1116" fg:w="3"/><text x="87.7794%" y="495.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="87.5294%" y="469" width="0.2353%" height="15" fill="rgb(208,62,51)" fg:x="1116" fg:w="3"/><text x="87.7794%" y="479.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="87.6078%" y="453" width="0.1569%" height="15" fill="rgb(254,129,9)" fg:x="1117" fg:w="2"/><text x="87.8578%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="87.6078%" y="437" width="0.1569%" height="15" fill="rgb(243,209,31)" fg:x="1117" fg:w="2"/><text x="87.8578%" y="447.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="87.6078%" y="421" width="0.1569%" height="15" fill="rgb(213,159,23)" fg:x="1117" fg:w="2"/><text x="87.8578%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="87.6078%" y="405" width="0.1569%" height="15" fill="rgb(249,77,39)" fg:x="1117" fg:w="2"/><text x="87.8578%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.6863%" y="389" width="0.0784%" height="15" fill="rgb(230,13,33)" fg:x="1118" fg:w="1"/><text x="87.9363%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.6863%" y="373" width="0.0784%" height="15" fill="rgb(215,215,7)" fg:x="1118" fg:w="1"/><text x="87.9363%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.6863%" y="357" width="0.0784%" height="15" fill="rgb(222,92,25)" fg:x="1118" fg:w="1"/><text x="87.9363%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.6863%" y="341" width="0.0784%" height="15" fill="rgb(215,173,22)" fg:x="1118" fg:w="1"/><text x="87.9363%" y="351.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.9216%" y="437" width="0.0784%" height="15" fill="rgb(247,205,52)" fg:x="1121" fg:w="1"/><text x="88.1716%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.9216%" y="421" width="0.0784%" height="15" fill="rgb(240,210,37)" fg:x="1121" fg:w="1"/><text x="88.1716%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.9216%" y="405" width="0.0784%" height="15" fill="rgb(224,13,10)" fg:x="1121" fg:w="1"/><text x="88.1716%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.9216%" y="389" width="0.0784%" height="15" fill="rgb(209,48,33)" fg:x="1121" fg:w="1"/><text x="88.1716%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.9216%" y="373" width="0.0784%" height="15" fill="rgb(228,219,23)" fg:x="1121" fg:w="1"/><text x="88.1716%" y="383.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.9216%" y="357" width="0.0784%" height="15" fill="rgb(239,46,49)" fg:x="1121" fg:w="1"/><text x="88.1716%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.9216%" y="341" width="0.0784%" height="15" fill="rgb(206,172,51)" fg:x="1121" fg:w="1"/><text x="88.1716%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="87.8431%" y="453" width="0.2353%" height="15" fill="rgb(213,212,35)" fg:x="1120" fg:w="3"/><text x="88.0931%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.0000%" y="437" width="0.0784%" height="15" fill="rgb(252,40,27)" fg:x="1122" fg:w="1"/><text x="88.2500%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0000%" y="421" width="0.0784%" height="15" fill="rgb(212,33,41)" fg:x="1122" fg:w="1"/><text x="88.2500%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="88.0784%" y="405" width="0.0784%" height="15" fill="rgb(232,160,27)" fg:x="1123" fg:w="1"/><text x="88.3284%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.0784%" y="389" width="0.0784%" height="15" fill="rgb(244,160,20)" fg:x="1123" fg:w="1"/><text x="88.3284%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.1569%" y="357" width="0.0784%" height="15" fill="rgb(205,66,20)" fg:x="1124" fg:w="1"/><text x="88.4069%" y="367.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="88.1569%" y="389" width="0.1569%" height="15" fill="rgb(236,158,6)" fg:x="1124" fg:w="2"/><text x="88.4069%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.1569%" y="373" width="0.1569%" height="15" fill="rgb(232,25,36)" fg:x="1124" fg:w="2"/><text x="88.4069%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2353%" y="357" width="0.0784%" height="15" fill="rgb(220,153,35)" fg:x="1125" fg:w="1"/><text x="88.4853%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.2353%" y="341" width="0.0784%" height="15" fill="rgb(216,5,8)" fg:x="1125" fg:w="1"/><text x="88.4853%" y="351.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.31%)</title><rect x="88.0784%" y="421" width="0.3137%" height="15" fill="rgb(240,97,3)" fg:x="1123" fg:w="4"/><text x="88.3284%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="88.1569%" y="405" width="0.2353%" height="15" fill="rgb(220,99,26)" fg:x="1124" fg:w="3"/><text x="88.4069%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3137%" y="389" width="0.0784%" height="15" fill="rgb(237,96,2)" fg:x="1126" fg:w="1"/><text x="88.5637%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.3137%" y="373" width="0.0784%" height="15" fill="rgb(217,197,47)" fg:x="1126" fg:w="1"/><text x="88.5637%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.3922%" y="405" width="0.0784%" height="15" fill="rgb(252,133,54)" fg:x="1127" fg:w="1"/><text x="88.6422%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.3922%" y="389" width="0.0784%" height="15" fill="rgb(233,37,30)" fg:x="1127" fg:w="1"/><text x="88.6422%" y="399.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.3922%" y="373" width="0.0784%" height="15" fill="rgb(239,182,12)" fg:x="1127" fg:w="1"/><text x="88.6422%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.3922%" y="357" width="0.0784%" height="15" fill="rgb(245,83,39)" fg:x="1127" fg:w="1"/><text x="88.6422%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3922%" y="341" width="0.0784%" height="15" fill="rgb(222,109,36)" fg:x="1127" fg:w="1"/><text x="88.6422%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.3922%" y="325" width="0.0784%" height="15" fill="rgb(237,95,44)" fg:x="1127" fg:w="1"/><text x="88.6422%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.3922%" y="309" width="0.0784%" height="15" fill="rgb(216,36,54)" fg:x="1127" fg:w="1"/><text x="88.6422%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="88.3922%" y="421" width="0.1569%" height="15" fill="rgb(236,164,3)" fg:x="1127" fg:w="2"/><text x="88.6422%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="88.4706%" y="405" width="0.0784%" height="15" fill="rgb(223,15,21)" fg:x="1128" fg:w="1"/><text x="88.7206%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4706%" y="389" width="0.0784%" height="15" fill="rgb(239,191,12)" fg:x="1128" fg:w="1"/><text x="88.7206%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.4706%" y="373" width="0.0784%" height="15" fill="rgb(231,191,37)" fg:x="1128" fg:w="1"/><text x="88.7206%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="88.4706%" y="357" width="0.0784%" height="15" fill="rgb(209,155,36)" fg:x="1128" fg:w="1"/><text x="88.7206%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.5490%" y="421" width="0.0784%" height="15" fill="rgb(216,222,49)" fg:x="1129" fg:w="1"/><text x="88.7990%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.5490%" y="405" width="0.0784%" height="15" fill="rgb(218,181,2)" fg:x="1129" fg:w="1"/><text x="88.7990%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.5490%" y="389" width="0.0784%" height="15" fill="rgb(239,125,9)" fg:x="1129" fg:w="1"/><text x="88.7990%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.5490%" y="373" width="0.0784%" height="15" fill="rgb(233,103,7)" fg:x="1129" fg:w="1"/><text x="88.7990%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5490%" y="357" width="0.0784%" height="15" fill="rgb(209,223,5)" fg:x="1129" fg:w="1"/><text x="88.7990%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.5490%" y="341" width="0.0784%" height="15" fill="rgb(234,71,27)" fg:x="1129" fg:w="1"/><text x="88.7990%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5490%" y="325" width="0.0784%" height="15" fill="rgb(251,202,16)" fg:x="1129" fg:w="1"/><text x="88.7990%" y="335.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (12 samples, 0.94%)</title><rect x="87.7647%" y="485" width="0.9412%" height="15" fill="rgb(231,180,0)" fg:x="1119" fg:w="12"/><text x="88.0147%" y="495.50"></text></g><g><title>plugins_core::build::QuickThing::make (12 samples, 0.94%)</title><rect x="87.7647%" y="469" width="0.9412%" height="15" fill="rgb(223,58,28)" fg:x="1119" fg:w="12"/><text x="88.0147%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.63%)</title><rect x="88.0784%" y="453" width="0.6275%" height="15" fill="rgb(250,34,24)" fg:x="1123" fg:w="8"/><text x="88.3284%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="88.0784%" y="437" width="0.6275%" height="15" fill="rgb(235,24,16)" fg:x="1123" fg:w="8"/><text x="88.3284%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="88.6275%" y="421" width="0.0784%" height="15" fill="rgb(219,28,33)" fg:x="1130" fg:w="1"/><text x="88.8775%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.6275%" y="405" width="0.0784%" height="15" fill="rgb(228,150,43)" fg:x="1130" fg:w="1"/><text x="88.8775%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.6275%" y="389" width="0.0784%" height="15" fill="rgb(221,228,36)" fg:x="1130" fg:w="1"/><text x="88.8775%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.6275%" y="373" width="0.0784%" height="15" fill="rgb(232,116,17)" fg:x="1130" fg:w="1"/><text x="88.8775%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="88.6275%" y="357" width="0.0784%" height="15" fill="rgb(220,110,51)" fg:x="1130" fg:w="1"/><text x="88.8775%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.6275%" y="341" width="0.0784%" height="15" fill="rgb(207,26,25)" fg:x="1130" fg:w="1"/><text x="88.8775%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.6275%" y="325" width="0.0784%" height="15" fill="rgb(223,58,19)" fg:x="1130" fg:w="1"/><text x="88.8775%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.6275%" y="309" width="0.0784%" height="15" fill="rgb(234,125,39)" fg:x="1130" fg:w="1"/><text x="88.8775%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6275%" y="293" width="0.0784%" height="15" fill="rgb(241,48,36)" fg:x="1130" fg:w="1"/><text x="88.8775%" y="303.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="88.7059%" y="453" width="0.1569%" height="15" fill="rgb(217,148,51)" fg:x="1131" fg:w="2"/><text x="88.9559%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="88.7059%" y="437" width="0.1569%" height="15" fill="rgb(247,17,25)" fg:x="1131" fg:w="2"/><text x="88.9559%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7843%" y="421" width="0.0784%" height="15" fill="rgb(219,89,38)" fg:x="1132" fg:w="1"/><text x="89.0343%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.7843%" y="405" width="0.0784%" height="15" fill="rgb(220,145,2)" fg:x="1132" fg:w="1"/><text x="89.0343%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.7843%" y="389" width="0.0784%" height="15" fill="rgb(244,66,47)" fg:x="1132" fg:w="1"/><text x="89.0343%" y="399.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="88.7843%" y="373" width="0.0784%" height="15" fill="rgb(226,182,5)" fg:x="1132" fg:w="1"/><text x="89.0343%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="88.7843%" y="357" width="0.0784%" height="15" fill="rgb(211,98,20)" fg:x="1132" fg:w="1"/><text x="89.0343%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="88.7059%" y="469" width="0.2353%" height="15" fill="rgb(217,103,52)" fg:x="1131" fg:w="3"/><text x="88.9559%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.8627%" y="453" width="0.0784%" height="15" fill="rgb(208,125,52)" fg:x="1133" fg:w="1"/><text x="89.1127%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.8627%" y="437" width="0.0784%" height="15" fill="rgb(244,70,13)" fg:x="1133" fg:w="1"/><text x="89.1127%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8627%" y="421" width="0.0784%" height="15" fill="rgb(253,124,3)" fg:x="1133" fg:w="1"/><text x="89.1127%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.8627%" y="405" width="0.0784%" height="15" fill="rgb(222,145,32)" fg:x="1133" fg:w="1"/><text x="89.1127%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8627%" y="389" width="0.0784%" height="15" fill="rgb(232,183,47)" fg:x="1133" fg:w="1"/><text x="89.1127%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="89.0980%" y="437" width="0.0784%" height="15" fill="rgb(246,226,4)" fg:x="1136" fg:w="1"/><text x="89.3480%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="89.0980%" y="421" width="0.0784%" height="15" fill="rgb(228,185,46)" fg:x="1136" fg:w="1"/><text x="89.3480%" y="431.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="89.2549%" y="389" width="0.0784%" height="15" fill="rgb(213,196,4)" fg:x="1138" fg:w="1"/><text x="89.5049%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.2549%" y="373" width="0.0784%" height="15" fill="rgb(212,2,45)" fg:x="1138" fg:w="1"/><text x="89.5049%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.2549%" y="357" width="0.0784%" height="15" fill="rgb(217,145,50)" fg:x="1138" fg:w="1"/><text x="89.5049%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="89.1765%" y="437" width="0.3137%" height="15" fill="rgb(242,10,46)" fg:x="1137" fg:w="4"/><text x="89.4265%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="89.2549%" y="421" width="0.2353%" height="15" fill="rgb(252,91,48)" fg:x="1138" fg:w="3"/><text x="89.5049%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="89.2549%" y="405" width="0.2353%" height="15" fill="rgb(216,72,13)" fg:x="1138" fg:w="3"/><text x="89.5049%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.3333%" y="389" width="0.1569%" height="15" fill="rgb(219,6,37)" fg:x="1139" fg:w="2"/><text x="89.5833%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4118%" y="373" width="0.0784%" height="15" fill="rgb(236,185,40)" fg:x="1140" fg:w="1"/><text x="89.6618%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4118%" y="357" width="0.0784%" height="15" fill="rgb(208,81,48)" fg:x="1140" fg:w="1"/><text x="89.6618%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4118%" y="341" width="0.0784%" height="15" fill="rgb(211,42,33)" fg:x="1140" fg:w="1"/><text x="89.6618%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4118%" y="325" width="0.0784%" height="15" fill="rgb(211,90,39)" fg:x="1140" fg:w="1"/><text x="89.6618%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4118%" y="309" width="0.0784%" height="15" fill="rgb(218,136,12)" fg:x="1140" fg:w="1"/><text x="89.6618%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="88.9412%" y="453" width="0.6275%" height="15" fill="rgb(234,12,32)" fg:x="1134" fg:w="8"/><text x="89.1912%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.4902%" y="437" width="0.0784%" height="15" fill="rgb(221,164,18)" fg:x="1141" fg:w="1"/><text x="89.7402%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.4902%" y="421" width="0.0784%" height="15" fill="rgb(239,135,14)" fg:x="1141" fg:w="1"/><text x="89.7402%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="89.4902%" y="405" width="0.0784%" height="15" fill="rgb(226,198,47)" fg:x="1141" fg:w="1"/><text x="89.7402%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.4902%" y="389" width="0.0784%" height="15" fill="rgb(244,121,47)" fg:x="1141" fg:w="1"/><text x="89.7402%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="89.4902%" y="373" width="0.0784%" height="15" fill="rgb(226,21,48)" fg:x="1141" fg:w="1"/><text x="89.7402%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.71%)</title><rect x="88.9412%" y="469" width="0.7059%" height="15" fill="rgb(215,178,47)" fg:x="1134" fg:w="9"/><text x="89.1912%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.5686%" y="453" width="0.0784%" height="15" fill="rgb(206,212,19)" fg:x="1142" fg:w="1"/><text x="89.8186%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="89.5686%" y="437" width="0.0784%" height="15" fill="rgb(230,104,34)" fg:x="1142" fg:w="1"/><text x="89.8186%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5686%" y="421" width="0.0784%" height="15" fill="rgb(210,96,51)" fg:x="1142" fg:w="1"/><text x="89.8186%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="89.6471%" y="437" width="0.0784%" height="15" fill="rgb(229,111,47)" fg:x="1143" fg:w="1"/><text x="89.8971%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (14 samples, 1.10%)</title><rect x="88.7059%" y="485" width="1.0980%" height="15" fill="rgb(218,174,45)" fg:x="1131" fg:w="14"/><text x="88.9559%" y="495.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="89.6471%" y="469" width="0.1569%" height="15" fill="rgb(215,21,32)" fg:x="1143" fg:w="2"/><text x="89.8971%" y="479.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="89.6471%" y="453" width="0.1569%" height="15" fill="rgb(235,72,21)" fg:x="1143" fg:w="2"/><text x="89.8971%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="89.7255%" y="437" width="0.0784%" height="15" fill="rgb(250,113,30)" fg:x="1144" fg:w="1"/><text x="89.9755%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.7255%" y="421" width="0.0784%" height="15" fill="rgb(244,136,34)" fg:x="1144" fg:w="1"/><text x="89.9755%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.7255%" y="405" width="0.0784%" height="15" fill="rgb(213,226,47)" fg:x="1144" fg:w="1"/><text x="89.9755%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7255%" y="389" width="0.0784%" height="15" fill="rgb(224,136,40)" fg:x="1144" fg:w="1"/><text x="89.9755%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7255%" y="373" width="0.0784%" height="15" fill="rgb(253,124,12)" fg:x="1144" fg:w="1"/><text x="89.9755%" y="383.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (203 samples, 15.92%)</title><rect x="73.9608%" y="501" width="15.9216%" height="15" fill="rgb(210,67,8)" fg:x="943" fg:w="203"/><text x="74.2108%" y="511.50">&lt;tests::HoldingKeyInVess..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="89.8039%" y="485" width="0.0784%" height="15" fill="rgb(210,204,0)" fg:x="1145" fg:w="1"/><text x="90.0539%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8039%" y="469" width="0.0784%" height="15" fill="rgb(217,179,22)" fg:x="1145" fg:w="1"/><text x="90.0539%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="89.8824%" y="501" width="0.1569%" height="15" fill="rgb(237,192,33)" fg:x="1146" fg:w="2"/><text x="90.1324%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="89.8824%" y="485" width="0.1569%" height="15" fill="rgb(211,104,28)" fg:x="1146" fg:w="2"/><text x="90.1324%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="89.9608%" y="469" width="0.0784%" height="15" fill="rgb(214,75,30)" fg:x="1147" fg:w="1"/><text x="90.2108%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.9608%" y="453" width="0.0784%" height="15" fill="rgb(220,227,12)" fg:x="1147" fg:w="1"/><text x="90.2108%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="90.0392%" y="485" width="0.0784%" height="15" fill="rgb(233,134,28)" fg:x="1148" fg:w="1"/><text x="90.2892%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.1176%" y="453" width="0.0784%" height="15" fill="rgb(215,146,24)" fg:x="1149" fg:w="1"/><text x="90.3676%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="90.1176%" y="437" width="0.0784%" height="15" fill="rgb(248,227,20)" fg:x="1149" fg:w="1"/><text x="90.3676%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1176%" y="421" width="0.0784%" height="15" fill="rgb(250,44,42)" fg:x="1149" fg:w="1"/><text x="90.3676%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.3529%" y="389" width="0.1569%" height="15" fill="rgb(219,5,35)" fg:x="1152" fg:w="2"/><text x="90.6029%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.3529%" y="373" width="0.1569%" height="15" fill="rgb(241,132,32)" fg:x="1152" fg:w="2"/><text x="90.6029%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="90.3529%" y="357" width="0.1569%" height="15" fill="rgb(234,212,51)" fg:x="1152" fg:w="2"/><text x="90.6029%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.3529%" y="341" width="0.1569%" height="15" fill="rgb(242,173,29)" fg:x="1152" fg:w="2"/><text x="90.6029%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="90.3529%" y="405" width="0.2353%" height="15" fill="rgb(212,159,2)" fg:x="1152" fg:w="3"/><text x="90.6029%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.5098%" y="389" width="0.0784%" height="15" fill="rgb(238,165,31)" fg:x="1154" fg:w="1"/><text x="90.7598%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.5098%" y="373" width="0.0784%" height="15" fill="rgb(241,57,36)" fg:x="1154" fg:w="1"/><text x="90.7598%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.5098%" y="357" width="0.0784%" height="15" fill="rgb(249,7,4)" fg:x="1154" fg:w="1"/><text x="90.7598%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="90.5882%" y="389" width="0.3137%" height="15" fill="rgb(250,137,44)" fg:x="1155" fg:w="4"/><text x="90.8382%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="90.6667%" y="373" width="0.2353%" height="15" fill="rgb(244,185,1)" fg:x="1156" fg:w="3"/><text x="90.9167%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.8235%" y="357" width="0.0784%" height="15" fill="rgb(216,5,53)" fg:x="1158" fg:w="1"/><text x="91.0735%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.8235%" y="341" width="0.0784%" height="15" fill="rgb(234,89,21)" fg:x="1158" fg:w="1"/><text x="91.0735%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.9804%" y="341" width="0.0784%" height="15" fill="rgb(250,81,43)" fg:x="1160" fg:w="1"/><text x="91.2304%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.9804%" y="325" width="0.0784%" height="15" fill="rgb(243,132,11)" fg:x="1160" fg:w="1"/><text x="91.2304%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.9804%" y="309" width="0.0784%" height="15" fill="rgb(253,159,28)" fg:x="1160" fg:w="1"/><text x="91.2304%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.9804%" y="293" width="0.0784%" height="15" fill="rgb(237,167,34)" fg:x="1160" fg:w="1"/><text x="91.2304%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="90.9804%" y="373" width="0.1569%" height="15" fill="rgb(237,16,50)" fg:x="1160" fg:w="2"/><text x="91.2304%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="90.9804%" y="357" width="0.1569%" height="15" fill="rgb(247,125,2)" fg:x="1160" fg:w="2"/><text x="91.2304%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="91.0588%" y="341" width="0.0784%" height="15" fill="rgb(254,35,3)" fg:x="1161" fg:w="1"/><text x="91.3088%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.0588%" y="325" width="0.0784%" height="15" fill="rgb(237,209,21)" fg:x="1161" fg:w="1"/><text x="91.3088%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.0588%" y="309" width="0.0784%" height="15" fill="rgb(224,122,20)" fg:x="1161" fg:w="1"/><text x="91.3088%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.0588%" y="293" width="0.0784%" height="15" fill="rgb(224,11,46)" fg:x="1161" fg:w="1"/><text x="91.3088%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.0588%" y="277" width="0.0784%" height="15" fill="rgb(248,21,33)" fg:x="1161" fg:w="1"/><text x="91.3088%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="91.1373%" y="373" width="0.2353%" height="15" fill="rgb(222,144,7)" fg:x="1162" fg:w="3"/><text x="91.3873%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.2157%" y="357" width="0.1569%" height="15" fill="rgb(205,141,37)" fg:x="1163" fg:w="2"/><text x="91.4657%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.2941%" y="341" width="0.0784%" height="15" fill="rgb(237,130,8)" fg:x="1164" fg:w="1"/><text x="91.5441%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.4510%" y="357" width="0.0784%" height="15" fill="rgb(209,179,39)" fg:x="1166" fg:w="1"/><text x="91.7010%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.5294%" y="341" width="0.1569%" height="15" fill="rgb(207,52,17)" fg:x="1167" fg:w="2"/><text x="91.7794%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.5294%" y="325" width="0.1569%" height="15" fill="rgb(253,158,17)" fg:x="1167" fg:w="2"/><text x="91.7794%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.5294%" y="309" width="0.1569%" height="15" fill="rgb(208,19,53)" fg:x="1167" fg:w="2"/><text x="91.7794%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.6078%" y="293" width="0.0784%" height="15" fill="rgb(233,152,13)" fg:x="1168" fg:w="1"/><text x="91.8578%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="90.9020%" y="389" width="0.9412%" height="15" fill="rgb(231,84,1)" fg:x="1159" fg:w="12"/><text x="91.1520%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="91.3725%" y="373" width="0.4706%" height="15" fill="rgb(229,142,48)" fg:x="1165" fg:w="6"/><text x="91.6225%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="91.5294%" y="357" width="0.3137%" height="15" fill="rgb(248,70,29)" fg:x="1167" fg:w="4"/><text x="91.7794%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.6863%" y="341" width="0.1569%" height="15" fill="rgb(250,85,7)" fg:x="1169" fg:w="2"/><text x="91.9363%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.6863%" y="325" width="0.1569%" height="15" fill="rgb(235,140,43)" fg:x="1169" fg:w="2"/><text x="91.9363%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.7647%" y="309" width="0.0784%" height="15" fill="rgb(216,0,5)" fg:x="1170" fg:w="1"/><text x="92.0147%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.41%)</title><rect x="90.5882%" y="405" width="1.4118%" height="15" fill="rgb(223,167,29)" fg:x="1155" fg:w="18"/><text x="90.8382%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.8431%" y="389" width="0.1569%" height="15" fill="rgb(229,150,33)" fg:x="1171" fg:w="2"/><text x="92.0931%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.8431%" y="373" width="0.1569%" height="15" fill="rgb(227,26,52)" fg:x="1171" fg:w="2"/><text x="92.0931%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="91.8431%" y="357" width="0.1569%" height="15" fill="rgb(250,60,52)" fg:x="1171" fg:w="2"/><text x="92.0931%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="91.8431%" y="341" width="0.1569%" height="15" fill="rgb(228,81,46)" fg:x="1171" fg:w="2"/><text x="92.0931%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="91.8431%" y="325" width="0.1569%" height="15" fill="rgb(225,218,31)" fg:x="1171" fg:w="2"/><text x="92.0931%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="91.8431%" y="309" width="0.1569%" height="15" fill="rgb(230,35,16)" fg:x="1171" fg:w="2"/><text x="92.0931%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.88%)</title><rect x="90.2745%" y="421" width="1.8824%" height="15" fill="rgb(247,100,0)" fg:x="1151" fg:w="24"/><text x="90.5245%" y="431.50">&lt;..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.0000%" y="405" width="0.1569%" height="15" fill="rgb(223,135,11)" fg:x="1173" fg:w="2"/><text x="92.2500%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.0784%" y="389" width="0.0784%" height="15" fill="rgb(207,136,0)" fg:x="1174" fg:w="1"/><text x="92.3284%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.0784%" y="373" width="0.0784%" height="15" fill="rgb(246,131,25)" fg:x="1174" fg:w="1"/><text x="92.3284%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.0784%" y="357" width="0.0784%" height="15" fill="rgb(209,47,12)" fg:x="1174" fg:w="1"/><text x="92.3284%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.0784%" y="341" width="0.0784%" height="15" fill="rgb(221,25,16)" fg:x="1174" fg:w="1"/><text x="92.3284%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0784%" y="325" width="0.0784%" height="15" fill="rgb(223,164,33)" fg:x="1174" fg:w="1"/><text x="92.3284%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.1569%" y="389" width="0.0784%" height="15" fill="rgb(220,26,23)" fg:x="1175" fg:w="1"/><text x="92.4069%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.2353%" y="357" width="0.0784%" height="15" fill="rgb(231,224,1)" fg:x="1176" fg:w="1"/><text x="92.4853%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.2353%" y="341" width="0.0784%" height="15" fill="rgb(229,221,24)" fg:x="1176" fg:w="1"/><text x="92.4853%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="92.3137%" y="341" width="0.1569%" height="15" fill="rgb(213,34,10)" fg:x="1177" fg:w="2"/><text x="92.5637%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="92.1569%" y="421" width="0.3922%" height="15" fill="rgb(215,33,11)" fg:x="1175" fg:w="5"/><text x="92.4069%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="92.1569%" y="405" width="0.3922%" height="15" fill="rgb(216,20,41)" fg:x="1175" fg:w="5"/><text x="92.4069%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="92.2353%" y="389" width="0.3137%" height="15" fill="rgb(228,43,31)" fg:x="1176" fg:w="4"/><text x="92.4853%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="92.2353%" y="373" width="0.3137%" height="15" fill="rgb(227,83,26)" fg:x="1176" fg:w="4"/><text x="92.4853%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.3137%" y="357" width="0.2353%" height="15" fill="rgb(217,168,19)" fg:x="1177" fg:w="3"/><text x="92.5637%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.4706%" y="341" width="0.0784%" height="15" fill="rgb(231,34,33)" fg:x="1179" fg:w="1"/><text x="92.7206%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.4706%" y="325" width="0.0784%" height="15" fill="rgb(230,120,51)" fg:x="1179" fg:w="1"/><text x="92.7206%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4706%" y="309" width="0.0784%" height="15" fill="rgb(215,138,27)" fg:x="1179" fg:w="1"/><text x="92.7206%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.5490%" y="341" width="0.0784%" height="15" fill="rgb(246,80,47)" fg:x="1180" fg:w="1"/><text x="92.7990%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.6275%" y="341" width="0.0784%" height="15" fill="rgb(215,57,53)" fg:x="1181" fg:w="1"/><text x="92.8775%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.6275%" y="325" width="0.0784%" height="15" fill="rgb(229,137,5)" fg:x="1181" fg:w="1"/><text x="92.8775%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7843%" y="325" width="0.0784%" height="15" fill="rgb(210,86,2)" fg:x="1183" fg:w="1"/><text x="93.0343%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="92.5490%" y="389" width="0.4706%" height="15" fill="rgb(231,226,51)" fg:x="1180" fg:w="6"/><text x="92.7990%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.47%)</title><rect x="92.5490%" y="373" width="0.4706%" height="15" fill="rgb(216,62,29)" fg:x="1180" fg:w="6"/><text x="92.7990%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="92.5490%" y="357" width="0.4706%" height="15" fill="rgb(248,202,3)" fg:x="1180" fg:w="6"/><text x="92.7990%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="92.7059%" y="341" width="0.3137%" height="15" fill="rgb(225,181,7)" fg:x="1182" fg:w="4"/><text x="92.9559%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="92.8627%" y="325" width="0.1569%" height="15" fill="rgb(247,170,54)" fg:x="1184" fg:w="2"/><text x="93.1127%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.9412%" y="309" width="0.0784%" height="15" fill="rgb(236,204,33)" fg:x="1185" fg:w="1"/><text x="93.1912%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.9412%" y="293" width="0.0784%" height="15" fill="rgb(216,45,30)" fg:x="1185" fg:w="1"/><text x="93.1912%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.0196%" y="325" width="0.0784%" height="15" fill="rgb(213,203,16)" fg:x="1186" fg:w="1"/><text x="93.2696%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.63%)</title><rect x="92.5490%" y="405" width="0.6275%" height="15" fill="rgb(215,46,16)" fg:x="1180" fg:w="8"/><text x="92.7990%" y="415.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="93.0196%" y="389" width="0.1569%" height="15" fill="rgb(217,162,46)" fg:x="1186" fg:w="2"/><text x="93.2696%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.0196%" y="373" width="0.1569%" height="15" fill="rgb(224,189,20)" fg:x="1186" fg:w="2"/><text x="93.2696%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.0196%" y="357" width="0.1569%" height="15" fill="rgb(232,35,51)" fg:x="1186" fg:w="2"/><text x="93.2696%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.0196%" y="341" width="0.1569%" height="15" fill="rgb(243,221,46)" fg:x="1186" fg:w="2"/><text x="93.2696%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.0980%" y="325" width="0.0784%" height="15" fill="rgb(248,16,16)" fg:x="1187" fg:w="1"/><text x="93.3480%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1765%" y="373" width="0.0784%" height="15" fill="rgb(220,168,13)" fg:x="1188" fg:w="1"/><text x="93.4265%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="93.2549%" y="373" width="0.2353%" height="15" fill="rgb(243,102,39)" fg:x="1189" fg:w="3"/><text x="93.5049%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="93.4902%" y="373" width="0.0784%" height="15" fill="rgb(245,82,32)" fg:x="1192" fg:w="1"/><text x="93.7402%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.4902%" y="357" width="0.0784%" height="15" fill="rgb(230,164,19)" fg:x="1192" fg:w="1"/><text x="93.7402%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="93.5686%" y="373" width="0.0784%" height="15" fill="rgb(221,9,41)" fg:x="1193" fg:w="1"/><text x="93.8186%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="93.6471%" y="309" width="0.0784%" height="15" fill="rgb(216,93,0)" fg:x="1194" fg:w="1"/><text x="93.8971%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8039%" y="277" width="0.0784%" height="15" fill="rgb(235,113,9)" fg:x="1196" fg:w="1"/><text x="94.0539%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8039%" y="261" width="0.0784%" height="15" fill="rgb(209,224,10)" fg:x="1196" fg:w="1"/><text x="94.0539%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8039%" y="245" width="0.0784%" height="15" fill="rgb(226,54,34)" fg:x="1196" fg:w="1"/><text x="94.0539%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="93.6471%" y="325" width="0.3137%" height="15" fill="rgb(222,60,8)" fg:x="1194" fg:w="4"/><text x="93.8971%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="93.7255%" y="309" width="0.2353%" height="15" fill="rgb(248,228,41)" fg:x="1195" fg:w="3"/><text x="93.9755%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="93.7255%" y="293" width="0.2353%" height="15" fill="rgb(226,31,32)" fg:x="1195" fg:w="3"/><text x="93.9755%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="93.8824%" y="277" width="0.0784%" height="15" fill="rgb(242,132,49)" fg:x="1197" fg:w="1"/><text x="94.1324%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="94.1176%" y="277" width="0.0784%" height="15" fill="rgb(224,194,19)" fg:x="1200" fg:w="1"/><text x="94.3676%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="94.1961%" y="277" width="0.1569%" height="15" fill="rgb(232,200,51)" fg:x="1201" fg:w="2"/><text x="94.4461%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.1961%" y="261" width="0.1569%" height="15" fill="rgb(235,60,46)" fg:x="1201" fg:w="2"/><text x="94.4461%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.1961%" y="245" width="0.1569%" height="15" fill="rgb(240,109,52)" fg:x="1201" fg:w="2"/><text x="94.4461%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.1961%" y="229" width="0.1569%" height="15" fill="rgb(215,78,37)" fg:x="1201" fg:w="2"/><text x="94.4461%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.86%)</title><rect x="93.6471%" y="357" width="0.8627%" height="15" fill="rgb(225,141,7)" fg:x="1194" fg:w="11"/><text x="93.8971%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.86%)</title><rect x="93.6471%" y="341" width="0.8627%" height="15" fill="rgb(216,102,54)" fg:x="1194" fg:w="11"/><text x="93.8971%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="93.9608%" y="325" width="0.5490%" height="15" fill="rgb(238,143,13)" fg:x="1198" fg:w="7"/><text x="94.2108%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="93.9608%" y="309" width="0.5490%" height="15" fill="rgb(219,45,51)" fg:x="1198" fg:w="7"/><text x="94.2108%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="93.9608%" y="293" width="0.5490%" height="15" fill="rgb(242,105,46)" fg:x="1198" fg:w="7"/><text x="94.2108%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.3529%" y="277" width="0.1569%" height="15" fill="rgb(206,154,49)" fg:x="1203" fg:w="2"/><text x="94.6029%" y="287.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.49%)</title><rect x="93.1765%" y="405" width="1.4902%" height="15" fill="rgb(239,215,4)" fg:x="1188" fg:w="19"/><text x="93.4265%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.49%)</title><rect x="93.1765%" y="389" width="1.4902%" height="15" fill="rgb(238,82,17)" fg:x="1188" fg:w="19"/><text x="93.4265%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.02%)</title><rect x="93.6471%" y="373" width="1.0196%" height="15" fill="rgb(242,49,30)" fg:x="1194" fg:w="13"/><text x="93.8971%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.5098%" y="357" width="0.1569%" height="15" fill="rgb(248,5,16)" fg:x="1205" fg:w="2"/><text x="94.7598%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.8235%" y="229" width="0.0784%" height="15" fill="rgb(237,138,32)" fg:x="1209" fg:w="1"/><text x="95.0735%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.8235%" y="261" width="0.1569%" height="15" fill="rgb(235,79,45)" fg:x="1209" fg:w="2"/><text x="95.0735%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.8235%" y="245" width="0.1569%" height="15" fill="rgb(213,105,25)" fg:x="1209" fg:w="2"/><text x="95.0735%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.9020%" y="229" width="0.0784%" height="15" fill="rgb(251,131,7)" fg:x="1210" fg:w="1"/><text x="95.1520%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9020%" y="213" width="0.0784%" height="15" fill="rgb(211,155,7)" fg:x="1210" fg:w="1"/><text x="95.1520%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.8235%" y="277" width="0.2353%" height="15" fill="rgb(243,70,15)" fg:x="1209" fg:w="3"/><text x="95.0735%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.9804%" y="261" width="0.0784%" height="15" fill="rgb(215,171,2)" fg:x="1211" fg:w="1"/><text x="95.2304%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.9804%" y="245" width="0.0784%" height="15" fill="rgb(244,121,35)" fg:x="1211" fg:w="1"/><text x="95.2304%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.9804%" y="229" width="0.0784%" height="15" fill="rgb(249,147,17)" fg:x="1211" fg:w="1"/><text x="95.2304%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="94.7451%" y="309" width="0.3922%" height="15" fill="rgb(241,193,52)" fg:x="1208" fg:w="5"/><text x="94.9951%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="94.7451%" y="293" width="0.3922%" height="15" fill="rgb(217,159,39)" fg:x="1208" fg:w="5"/><text x="94.9951%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0588%" y="277" width="0.0784%" height="15" fill="rgb(248,110,0)" fg:x="1212" fg:w="1"/><text x="95.3088%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0588%" y="261" width="0.0784%" height="15" fill="rgb(233,227,0)" fg:x="1212" fg:w="1"/><text x="95.3088%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0588%" y="245" width="0.0784%" height="15" fill="rgb(252,55,2)" fg:x="1212" fg:w="1"/><text x="95.3088%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.1373%" y="309" width="0.0784%" height="15" fill="rgb(224,194,24)" fg:x="1213" fg:w="1"/><text x="95.3873%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1373%" y="293" width="0.0784%" height="15" fill="rgb(247,5,33)" fg:x="1213" fg:w="1"/><text x="95.3873%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.63%)</title><rect x="94.6667%" y="341" width="0.6275%" height="15" fill="rgb(242,66,47)" fg:x="1207" fg:w="8"/><text x="94.9167%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="94.7451%" y="325" width="0.5490%" height="15" fill="rgb(213,107,12)" fg:x="1208" fg:w="7"/><text x="94.9951%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2157%" y="309" width="0.0784%" height="15" fill="rgb(206,131,1)" fg:x="1214" fg:w="1"/><text x="95.4657%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2157%" y="293" width="0.0784%" height="15" fill="rgb(214,9,36)" fg:x="1214" fg:w="1"/><text x="95.4657%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2157%" y="277" width="0.0784%" height="15" fill="rgb(251,215,18)" fg:x="1214" fg:w="1"/><text x="95.4657%" y="287.50"></text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.82%)</title><rect x="92.5490%" y="421" width="2.8235%" height="15" fill="rgb(251,64,9)" fg:x="1180" fg:w="36"/><text x="92.7990%" y="431.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.71%)</title><rect x="94.6667%" y="405" width="0.7059%" height="15" fill="rgb(235,68,21)" fg:x="1207" fg:w="9"/><text x="94.9167%" y="415.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.71%)</title><rect x="94.6667%" y="389" width="0.7059%" height="15" fill="rgb(240,69,38)" fg:x="1207" fg:w="9"/><text x="94.9167%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.71%)</title><rect x="94.6667%" y="373" width="0.7059%" height="15" fill="rgb(231,18,27)" fg:x="1207" fg:w="9"/><text x="94.9167%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="94.6667%" y="357" width="0.7059%" height="15" fill="rgb(215,154,25)" fg:x="1207" fg:w="9"/><text x="94.9167%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2941%" y="341" width="0.0784%" height="15" fill="rgb(224,33,46)" fg:x="1215" fg:w="1"/><text x="95.5441%" y="351.50"></text></g><g><title>engine::session::state::State::close (68 samples, 5.33%)</title><rect x="90.1176%" y="485" width="5.3333%" height="15" fill="rgb(248,191,53)" fg:x="1149" fg:w="68"/><text x="90.3676%" y="495.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (68 samples, 5.33%)</title><rect x="90.1176%" y="469" width="5.3333%" height="15" fill="rgb(231,3,37)" fg:x="1149" fg:w="68"/><text x="90.3676%" y="479.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (67 samples, 5.25%)</title><rect x="90.1961%" y="453" width="5.2549%" height="15" fill="rgb(209,152,2)" fg:x="1150" fg:w="67"/><text x="90.4461%" y="463.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (67 samples, 5.25%)</title><rect x="90.1961%" y="437" width="5.2549%" height="15" fill="rgb(212,208,43)" fg:x="1150" fg:w="67"/><text x="90.4461%" y="447.50">engine..</text></g><g><title>kernel::perms::find_acls (1 samples, 0.08%)</title><rect x="95.3725%" y="421" width="0.0784%" height="15" fill="rgb(208,60,49)" fg:x="1216" fg:w="1"/><text x="95.6225%" y="431.50"></text></g><g><title>engine::session::Session::close (72 samples, 5.65%)</title><rect x="90.0392%" y="501" width="5.6471%" height="15" fill="rgb(245,135,6)" fg:x="1148" fg:w="72"/><text x="90.2892%" y="511.50">engine:..</text></g><g><title>std::time::Instant::elapsed (3 samples, 0.24%)</title><rect x="95.4510%" y="485" width="0.2353%" height="15" fill="rgb(243,86,23)" fg:x="1217" fg:w="3"/><text x="95.7010%" y="495.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.24%)</title><rect x="95.4510%" y="469" width="0.2353%" height="15" fill="rgb(223,7,20)" fg:x="1217" fg:w="3"/><text x="95.7010%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.24%)</title><rect x="95.4510%" y="453" width="0.2353%" height="15" fill="rgb(212,182,17)" fg:x="1217" fg:w="3"/><text x="95.7010%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="95.5294%" y="437" width="0.1569%" height="15" fill="rgb(237,94,50)" fg:x="1218" fg:w="2"/><text x="95.7794%" y="447.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="95.5294%" y="421" width="0.1569%" height="15" fill="rgb(232,185,44)" fg:x="1218" fg:w="2"/><text x="95.7794%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9216%" y="389" width="0.0784%" height="15" fill="rgb(205,50,36)" fg:x="1223" fg:w="1"/><text x="96.1716%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="96.0784%" y="293" width="0.0784%" height="15" fill="rgb(252,32,32)" fg:x="1225" fg:w="1"/><text x="96.3284%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.0784%" y="277" width="0.0784%" height="15" fill="rgb(241,123,33)" fg:x="1225" fg:w="1"/><text x="96.3284%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0784%" y="261" width="0.0784%" height="15" fill="rgb(212,140,16)" fg:x="1225" fg:w="1"/><text x="96.3284%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0784%" y="245" width="0.0784%" height="15" fill="rgb(247,132,5)" fg:x="1225" fg:w="1"/><text x="96.3284%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="96.0000%" y="325" width="0.3137%" height="15" fill="rgb(209,137,38)" fg:x="1224" fg:w="4"/><text x="96.2500%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="96.0784%" y="309" width="0.2353%" height="15" fill="rgb(248,32,42)" fg:x="1225" fg:w="3"/><text x="96.3284%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.1569%" y="293" width="0.1569%" height="15" fill="rgb(216,188,40)" fg:x="1226" fg:w="2"/><text x="96.4069%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1569%" y="277" width="0.1569%" height="15" fill="rgb(209,127,53)" fg:x="1226" fg:w="2"/><text x="96.4069%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.1569%" y="261" width="0.1569%" height="15" fill="rgb(254,162,9)" fg:x="1226" fg:w="2"/><text x="96.4069%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1569%" y="245" width="0.1569%" height="15" fill="rgb(219,183,10)" fg:x="1226" fg:w="2"/><text x="96.4069%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.1569%" y="229" width="0.1569%" height="15" fill="rgb(217,192,21)" fg:x="1226" fg:w="2"/><text x="96.4069%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1569%" y="213" width="0.1569%" height="15" fill="rgb(251,89,27)" fg:x="1226" fg:w="2"/><text x="96.4069%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.2353%" y="197" width="0.0784%" height="15" fill="rgb(253,55,28)" fg:x="1227" fg:w="1"/><text x="96.4853%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2353%" y="181" width="0.0784%" height="15" fill="rgb(216,159,8)" fg:x="1227" fg:w="1"/><text x="96.4853%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3137%" y="293" width="0.0784%" height="15" fill="rgb(231,228,44)" fg:x="1228" fg:w="1"/><text x="96.5637%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3137%" y="277" width="0.0784%" height="15" fill="rgb(247,34,48)" fg:x="1228" fg:w="1"/><text x="96.5637%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3137%" y="261" width="0.0784%" height="15" fill="rgb(247,222,18)" fg:x="1228" fg:w="1"/><text x="96.5637%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.4706%" y="229" width="0.0784%" height="15" fill="rgb(227,49,4)" fg:x="1230" fg:w="1"/><text x="96.7206%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.4706%" y="213" width="0.0784%" height="15" fill="rgb(219,189,53)" fg:x="1230" fg:w="1"/><text x="96.7206%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4706%" y="197" width="0.0784%" height="15" fill="rgb(241,160,53)" fg:x="1230" fg:w="1"/><text x="96.7206%" y="207.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (8 samples, 0.63%)</title><rect x="96.0000%" y="373" width="0.6275%" height="15" fill="rgb(227,115,4)" fg:x="1224" fg:w="8"/><text x="96.2500%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (8 samples, 0.63%)</title><rect x="96.0000%" y="357" width="0.6275%" height="15" fill="rgb(215,28,28)" fg:x="1224" fg:w="8"/><text x="96.2500%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.63%)</title><rect x="96.0000%" y="341" width="0.6275%" height="15" fill="rgb(237,143,40)" fg:x="1224" fg:w="8"/><text x="96.2500%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="96.3137%" y="325" width="0.3137%" height="15" fill="rgb(205,107,24)" fg:x="1228" fg:w="4"/><text x="96.5637%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="96.3137%" y="309" width="0.3137%" height="15" fill="rgb(209,112,35)" fg:x="1228" fg:w="4"/><text x="96.5637%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="96.3922%" y="293" width="0.2353%" height="15" fill="rgb(206,135,5)" fg:x="1229" fg:w="3"/><text x="96.6422%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.3922%" y="277" width="0.2353%" height="15" fill="rgb(227,217,38)" fg:x="1229" fg:w="3"/><text x="96.6422%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.4706%" y="261" width="0.1569%" height="15" fill="rgb(205,0,41)" fg:x="1230" fg:w="2"/><text x="96.7206%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.4706%" y="245" width="0.1569%" height="15" fill="rgb(220,20,40)" fg:x="1230" fg:w="2"/><text x="96.7206%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.5490%" y="229" width="0.0784%" height="15" fill="rgb(216,145,3)" fg:x="1231" fg:w="1"/><text x="96.7990%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.5490%" y="213" width="0.0784%" height="15" fill="rgb(207,130,51)" fg:x="1231" fg:w="1"/><text x="96.7990%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.5490%" y="197" width="0.0784%" height="15" fill="rgb(252,93,13)" fg:x="1231" fg:w="1"/><text x="96.7990%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6275%" y="229" width="0.0784%" height="15" fill="rgb(210,105,15)" fg:x="1232" fg:w="1"/><text x="96.8775%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6275%" y="213" width="0.0784%" height="15" fill="rgb(212,126,31)" fg:x="1232" fg:w="1"/><text x="96.8775%" y="223.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="96.6275%" y="277" width="0.1569%" height="15" fill="rgb(241,167,46)" fg:x="1232" fg:w="2"/><text x="96.8775%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.6275%" y="261" width="0.1569%" height="15" fill="rgb(217,143,19)" fg:x="1232" fg:w="2"/><text x="96.8775%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.6275%" y="245" width="0.1569%" height="15" fill="rgb(235,117,33)" fg:x="1232" fg:w="2"/><text x="96.8775%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.7059%" y="229" width="0.0784%" height="15" fill="rgb(247,95,6)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7059%" y="213" width="0.0784%" height="15" fill="rgb(243,206,43)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.7059%" y="197" width="0.0784%" height="15" fill="rgb(229,65,54)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7059%" y="181" width="0.0784%" height="15" fill="rgb(247,137,34)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.7059%" y="165" width="0.0784%" height="15" fill="rgb(245,174,44)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.7059%" y="149" width="0.0784%" height="15" fill="rgb(223,64,15)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7059%" y="133" width="0.0784%" height="15" fill="rgb(243,153,36)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.7059%" y="117" width="0.0784%" height="15" fill="rgb(252,23,4)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.7059%" y="101" width="0.0784%" height="15" fill="rgb(209,132,13)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7059%" y="85" width="0.0784%" height="15" fill="rgb(209,196,21)" fg:x="1233" fg:w="1"/><text x="96.9559%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.31%)</title><rect x="96.6275%" y="293" width="0.3137%" height="15" fill="rgb(252,197,1)" fg:x="1232" fg:w="4"/><text x="96.8775%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.7843%" y="277" width="0.1569%" height="15" fill="rgb(229,42,46)" fg:x="1234" fg:w="2"/><text x="97.0343%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7843%" y="261" width="0.1569%" height="15" fill="rgb(219,85,8)" fg:x="1234" fg:w="2"/><text x="97.0343%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.8627%" y="245" width="0.0784%" height="15" fill="rgb(223,185,14)" fg:x="1235" fg:w="1"/><text x="97.1127%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8627%" y="229" width="0.0784%" height="15" fill="rgb(217,196,18)" fg:x="1235" fg:w="1"/><text x="97.1127%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.8627%" y="213" width="0.0784%" height="15" fill="rgb(220,122,37)" fg:x="1235" fg:w="1"/><text x="97.1127%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8627%" y="197" width="0.0784%" height="15" fill="rgb(236,135,33)" fg:x="1235" fg:w="1"/><text x="97.1127%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8627%" y="181" width="0.0784%" height="15" fill="rgb(222,86,54)" fg:x="1235" fg:w="1"/><text x="97.1127%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.8627%" y="165" width="0.0784%" height="15" fill="rgb(227,42,22)" fg:x="1235" fg:w="1"/><text x="97.1127%" y="175.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.8627%" y="149" width="0.0784%" height="15" fill="rgb(243,101,27)" fg:x="1235" fg:w="1"/><text x="97.1127%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.8627%" y="133" width="0.0784%" height="15" fill="rgb(229,100,8)" fg:x="1235" fg:w="1"/><text x="97.1127%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.9412%" y="293" width="0.0784%" height="15" fill="rgb(252,68,10)" fg:x="1236" fg:w="1"/><text x="97.1912%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.9412%" y="277" width="0.0784%" height="15" fill="rgb(219,19,31)" fg:x="1236" fg:w="1"/><text x="97.1912%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.9412%" y="261" width="0.0784%" height="15" fill="rgb(246,150,44)" fg:x="1236" fg:w="1"/><text x="97.1912%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9412%" y="245" width="0.0784%" height="15" fill="rgb(211,14,39)" fg:x="1236" fg:w="1"/><text x="97.1912%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.9412%" y="229" width="0.0784%" height="15" fill="rgb(221,98,29)" fg:x="1236" fg:w="1"/><text x="97.1912%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.47%)</title><rect x="96.6275%" y="325" width="0.4706%" height="15" fill="rgb(221,70,26)" fg:x="1232" fg:w="6"/><text x="96.8775%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.47%)</title><rect x="96.6275%" y="309" width="0.4706%" height="15" fill="rgb(236,146,30)" fg:x="1232" fg:w="6"/><text x="96.8775%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.0196%" y="293" width="0.0784%" height="15" fill="rgb(226,94,34)" fg:x="1237" fg:w="1"/><text x="97.2696%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.63%)</title><rect x="96.6275%" y="341" width="0.6275%" height="15" fill="rgb(248,132,21)" fg:x="1232" fg:w="8"/><text x="96.8775%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (2 samples, 0.16%)</title><rect x="97.0980%" y="325" width="0.1569%" height="15" fill="rgb(245,43,50)" fg:x="1238" fg:w="2"/><text x="97.3480%" y="335.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="97.0980%" y="309" width="0.1569%" height="15" fill="rgb(245,132,31)" fg:x="1238" fg:w="2"/><text x="97.3480%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.1765%" y="293" width="0.0784%" height="15" fill="rgb(230,171,4)" fg:x="1239" fg:w="1"/><text x="97.4265%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.1765%" y="277" width="0.0784%" height="15" fill="rgb(235,6,45)" fg:x="1239" fg:w="1"/><text x="97.4265%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.1765%" y="261" width="0.0784%" height="15" fill="rgb(220,80,28)" fg:x="1239" fg:w="1"/><text x="97.4265%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1765%" y="245" width="0.0784%" height="15" fill="rgb(242,171,9)" fg:x="1239" fg:w="1"/><text x="97.4265%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.1765%" y="229" width="0.0784%" height="15" fill="rgb(214,135,29)" fg:x="1239" fg:w="1"/><text x="97.4265%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1765%" y="213" width="0.0784%" height="15" fill="rgb(221,229,16)" fg:x="1239" fg:w="1"/><text x="97.4265%" y="223.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.1765%" y="197" width="0.0784%" height="15" fill="rgb(253,59,46)" fg:x="1239" fg:w="1"/><text x="97.4265%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1765%" y="181" width="0.0784%" height="15" fill="rgb(250,147,20)" fg:x="1239" fg:w="1"/><text x="97.4265%" y="191.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (18 samples, 1.41%)</title><rect x="96.0000%" y="389" width="1.4118%" height="15" fill="rgb(236,64,48)" fg:x="1224" fg:w="18"/><text x="96.2500%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.78%)</title><rect x="96.6275%" y="373" width="0.7843%" height="15" fill="rgb(240,37,42)" fg:x="1232" fg:w="10"/><text x="96.8775%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.78%)</title><rect x="96.6275%" y="357" width="0.7843%" height="15" fill="rgb(220,41,50)" fg:x="1232" fg:w="10"/><text x="96.8775%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.2549%" y="341" width="0.1569%" height="15" fill="rgb(216,51,14)" fg:x="1240" fg:w="2"/><text x="97.5049%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.2549%" y="325" width="0.1569%" height="15" fill="rgb(215,83,10)" fg:x="1240" fg:w="2"/><text x="97.5049%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3333%" y="309" width="0.0784%" height="15" fill="rgb(206,144,17)" fg:x="1241" fg:w="1"/><text x="97.5833%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3333%" y="293" width="0.0784%" height="15" fill="rgb(219,196,37)" fg:x="1241" fg:w="1"/><text x="97.5833%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.4118%" y="277" width="0.0784%" height="15" fill="rgb(226,135,26)" fg:x="1242" fg:w="1"/><text x="97.6618%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.4118%" y="341" width="0.1569%" height="15" fill="rgb(237,195,40)" fg:x="1242" fg:w="2"/><text x="97.6618%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.4118%" y="325" width="0.1569%" height="15" fill="rgb(228,182,42)" fg:x="1242" fg:w="2"/><text x="97.6618%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.4118%" y="309" width="0.1569%" height="15" fill="rgb(224,135,50)" fg:x="1242" fg:w="2"/><text x="97.6618%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.4118%" y="293" width="0.1569%" height="15" fill="rgb(236,215,34)" fg:x="1242" fg:w="2"/><text x="97.6618%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.4902%" y="277" width="0.0784%" height="15" fill="rgb(244,213,27)" fg:x="1243" fg:w="1"/><text x="97.7402%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4902%" y="261" width="0.0784%" height="15" fill="rgb(233,37,53)" fg:x="1243" fg:w="1"/><text x="97.7402%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (24 samples, 1.88%)</title><rect x="95.7647%" y="469" width="1.8824%" height="15" fill="rgb(222,132,14)" fg:x="1221" fg:w="24"/><text x="96.0147%" y="479.50">&lt;..</text></g><g><title>kernel::plugins::mw::apply_middleware (24 samples, 1.88%)</title><rect x="95.7647%" y="453" width="1.8824%" height="15" fill="rgb(219,202,29)" fg:x="1221" fg:w="24"/><text x="96.0147%" y="463.50">k..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (24 samples, 1.88%)</title><rect x="95.7647%" y="437" width="1.8824%" height="15" fill="rgb(226,157,39)" fg:x="1221" fg:w="24"/><text x="96.0147%" y="447.50">k..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (24 samples, 1.88%)</title><rect x="95.7647%" y="421" width="1.8824%" height="15" fill="rgb(235,213,2)" fg:x="1221" fg:w="24"/><text x="96.0147%" y="431.50">&lt;..</text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (23 samples, 1.80%)</title><rect x="95.8431%" y="405" width="1.8039%" height="15" fill="rgb(250,121,2)" fg:x="1222" fg:w="23"/><text x="96.0931%" y="415.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="97.4118%" y="389" width="0.2353%" height="15" fill="rgb(206,192,33)" fg:x="1242" fg:w="3"/><text x="97.6618%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="97.4118%" y="373" width="0.2353%" height="15" fill="rgb(240,161,6)" fg:x="1242" fg:w="3"/><text x="97.6618%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="97.4118%" y="357" width="0.2353%" height="15" fill="rgb(246,53,30)" fg:x="1242" fg:w="3"/><text x="97.6618%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.5686%" y="341" width="0.0784%" height="15" fill="rgb(219,123,43)" fg:x="1244" fg:w="1"/><text x="97.8186%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.5686%" y="325" width="0.0784%" height="15" fill="rgb(236,53,49)" fg:x="1244" fg:w="1"/><text x="97.8186%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="97.5686%" y="309" width="0.0784%" height="15" fill="rgb(241,156,1)" fg:x="1244" fg:w="1"/><text x="97.8186%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.5686%" y="293" width="0.0784%" height="15" fill="rgb(209,73,26)" fg:x="1244" fg:w="1"/><text x="97.8186%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.5686%" y="277" width="0.0784%" height="15" fill="rgb(206,114,3)" fg:x="1244" fg:w="1"/><text x="97.8186%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5686%" y="261" width="0.0784%" height="15" fill="rgb(230,214,9)" fg:x="1244" fg:w="1"/><text x="97.8186%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="97.6471%" y="325" width="0.1569%" height="15" fill="rgb(240,184,46)" fg:x="1245" fg:w="2"/><text x="97.8971%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8824%" y="309" width="0.0784%" height="15" fill="rgb(242,169,54)" fg:x="1248" fg:w="1"/><text x="98.1324%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8824%" y="293" width="0.0784%" height="15" fill="rgb(207,168,50)" fg:x="1248" fg:w="1"/><text x="98.1324%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8824%" y="277" width="0.0784%" height="15" fill="rgb(240,114,2)" fg:x="1248" fg:w="1"/><text x="98.1324%" y="287.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.47%)</title><rect x="97.6471%" y="421" width="0.4706%" height="15" fill="rgb(211,17,40)" fg:x="1245" fg:w="6"/><text x="97.8971%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="97.6471%" y="405" width="0.4706%" height="15" fill="rgb(235,97,36)" fg:x="1245" fg:w="6"/><text x="97.8971%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="97.6471%" y="389" width="0.4706%" height="15" fill="rgb(208,164,11)" fg:x="1245" fg:w="6"/><text x="97.8971%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="97.6471%" y="373" width="0.4706%" height="15" fill="rgb(242,11,17)" fg:x="1245" fg:w="6"/><text x="97.8971%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="97.6471%" y="357" width="0.4706%" height="15" fill="rgb(215,86,33)" fg:x="1245" fg:w="6"/><text x="97.8971%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="97.6471%" y="341" width="0.4706%" height="15" fill="rgb(245,185,28)" fg:x="1245" fg:w="6"/><text x="97.8971%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="97.8039%" y="325" width="0.3137%" height="15" fill="rgb(231,89,42)" fg:x="1247" fg:w="4"/><text x="98.0539%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.9608%" y="309" width="0.1569%" height="15" fill="rgb(210,18,47)" fg:x="1249" fg:w="2"/><text x="98.2108%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.9608%" y="293" width="0.1569%" height="15" fill="rgb(214,84,8)" fg:x="1249" fg:w="2"/><text x="98.2108%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.9608%" y="277" width="0.1569%" height="15" fill="rgb(214,222,23)" fg:x="1249" fg:w="2"/><text x="98.2108%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0392%" y="261" width="0.0784%" height="15" fill="rgb(213,104,21)" fg:x="1250" fg:w="1"/><text x="98.2892%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.0392%" y="245" width="0.0784%" height="15" fill="rgb(238,138,6)" fg:x="1250" fg:w="1"/><text x="98.2892%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.0392%" y="229" width="0.0784%" height="15" fill="rgb(205,167,50)" fg:x="1250" fg:w="1"/><text x="98.2892%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0392%" y="213" width="0.0784%" height="15" fill="rgb(230,105,27)" fg:x="1250" fg:w="1"/><text x="98.2892%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1176%" y="341" width="0.0784%" height="15" fill="rgb(222,97,48)" fg:x="1251" fg:w="1"/><text x="98.3676%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1176%" y="325" width="0.0784%" height="15" fill="rgb(222,197,14)" fg:x="1251" fg:w="1"/><text x="98.3676%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.63%)</title><rect x="97.6471%" y="469" width="0.6275%" height="15" fill="rgb(210,105,47)" fg:x="1245" fg:w="8"/><text x="97.8971%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.63%)</title><rect x="97.6471%" y="453" width="0.6275%" height="15" fill="rgb(238,158,19)" fg:x="1245" fg:w="8"/><text x="97.8971%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (8 samples, 0.63%)</title><rect x="97.6471%" y="437" width="0.6275%" height="15" fill="rgb(226,176,23)" fg:x="1245" fg:w="8"/><text x="97.8971%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.1176%" y="421" width="0.1569%" height="15" fill="rgb(208,79,31)" fg:x="1251" fg:w="2"/><text x="98.3676%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1176%" y="405" width="0.1569%" height="15" fill="rgb(221,154,21)" fg:x="1251" fg:w="2"/><text x="98.3676%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.1176%" y="389" width="0.1569%" height="15" fill="rgb(213,61,41)" fg:x="1251" fg:w="2"/><text x="98.3676%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1176%" y="373" width="0.1569%" height="15" fill="rgb(215,28,33)" fg:x="1251" fg:w="2"/><text x="98.3676%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.1176%" y="357" width="0.1569%" height="15" fill="rgb(231,139,26)" fg:x="1251" fg:w="2"/><text x="98.3676%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1961%" y="341" width="0.0784%" height="15" fill="rgb(232,159,16)" fg:x="1252" fg:w="1"/><text x="98.4461%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1961%" y="325" width="0.0784%" height="15" fill="rgb(233,80,10)" fg:x="1252" fg:w="1"/><text x="98.4461%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.1961%" y="309" width="0.0784%" height="15" fill="rgb(208,147,29)" fg:x="1252" fg:w="1"/><text x="98.4461%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1961%" y="293" width="0.0784%" height="15" fill="rgb(213,10,12)" fg:x="1252" fg:w="1"/><text x="98.4461%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1961%" y="277" width="0.0784%" height="15" fill="rgb(231,218,13)" fg:x="1252" fg:w="1"/><text x="98.4461%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.1961%" y="261" width="0.0784%" height="15" fill="rgb(244,199,44)" fg:x="1252" fg:w="1"/><text x="98.4461%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1961%" y="245" width="0.0784%" height="15" fill="rgb(240,144,53)" fg:x="1252" fg:w="1"/><text x="98.4461%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1961%" y="229" width="0.0784%" height="15" fill="rgb(223,57,28)" fg:x="1252" fg:w="1"/><text x="98.4461%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3529%" y="389" width="0.0784%" height="15" fill="rgb(213,134,38)" fg:x="1254" fg:w="1"/><text x="98.6029%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3529%" y="373" width="0.0784%" height="15" fill="rgb(251,182,42)" fg:x="1254" fg:w="1"/><text x="98.6029%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.3529%" y="421" width="0.1569%" height="15" fill="rgb(229,93,13)" fg:x="1254" fg:w="2"/><text x="98.6029%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.3529%" y="405" width="0.1569%" height="15" fill="rgb(234,171,3)" fg:x="1254" fg:w="2"/><text x="98.6029%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4314%" y="389" width="0.0784%" height="15" fill="rgb(241,105,32)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4314%" y="373" width="0.0784%" height="15" fill="rgb(221,66,3)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.4314%" y="357" width="0.0784%" height="15" fill="rgb(248,155,29)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.4314%" y="341" width="0.0784%" height="15" fill="rgb(231,31,5)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.4314%" y="325" width="0.0784%" height="15" fill="rgb(213,188,31)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.4314%" y="309" width="0.0784%" height="15" fill="rgb(212,104,33)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.4314%" y="293" width="0.0784%" height="15" fill="rgb(254,77,51)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.4314%" y="277" width="0.0784%" height="15" fill="rgb(234,39,26)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.4314%" y="261" width="0.0784%" height="15" fill="rgb(208,88,36)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.4314%" y="245" width="0.0784%" height="15" fill="rgb(243,222,10)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.4314%" y="229" width="0.0784%" height="15" fill="rgb(218,133,52)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4314%" y="213" width="0.0784%" height="15" fill="rgb(222,25,26)" fg:x="1255" fg:w="1"/><text x="98.6814%" y="223.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.31%)</title><rect x="98.2745%" y="469" width="0.3137%" height="15" fill="rgb(243,174,24)" fg:x="1253" fg:w="4"/><text x="98.5245%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="98.3529%" y="453" width="0.2353%" height="15" fill="rgb(233,188,52)" fg:x="1254" fg:w="3"/><text x="98.6029%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.3529%" y="437" width="0.2353%" height="15" fill="rgb(208,89,14)" fg:x="1254" fg:w="3"/><text x="98.6029%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.5098%" y="421" width="0.0784%" height="15" fill="rgb(205,204,21)" fg:x="1256" fg:w="1"/><text x="98.7598%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.5098%" y="405" width="0.0784%" height="15" fill="rgb(246,39,28)" fg:x="1256" fg:w="1"/><text x="98.7598%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="98.5882%" y="469" width="0.1569%" height="15" fill="rgb(235,71,19)" fg:x="1257" fg:w="2"/><text x="98.8382%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6667%" y="453" width="0.0784%" height="15" fill="rgb(211,62,39)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6667%" y="437" width="0.0784%" height="15" fill="rgb(246,118,20)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.6667%" y="421" width="0.0784%" height="15" fill="rgb(230,82,12)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.6667%" y="405" width="0.0784%" height="15" fill="rgb(205,212,34)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.6667%" y="389" width="0.0784%" height="15" fill="rgb(239,90,1)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.6667%" y="373" width="0.0784%" height="15" fill="rgb(225,198,50)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.6667%" y="357" width="0.0784%" height="15" fill="rgb(227,208,48)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.6667%" y="341" width="0.0784%" height="15" fill="rgb(238,134,41)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.6667%" y="325" width="0.0784%" height="15" fill="rgb(241,58,39)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.6667%" y="309" width="0.0784%" height="15" fill="rgb(214,126,4)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.6667%" y="293" width="0.0784%" height="15" fill="rgb(235,149,4)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6667%" y="277" width="0.0784%" height="15" fill="rgb(236,59,29)" fg:x="1258" fg:w="1"/><text x="98.9167%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7451%" y="357" width="0.0784%" height="15" fill="rgb(246,11,33)" fg:x="1259" fg:w="1"/><text x="98.9951%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7451%" y="341" width="0.0784%" height="15" fill="rgb(232,180,35)" fg:x="1259" fg:w="1"/><text x="98.9951%" y="351.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.7451%" y="405" width="0.1569%" height="15" fill="rgb(220,35,37)" fg:x="1259" fg:w="2"/><text x="98.9951%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.7451%" y="389" width="0.1569%" height="15" fill="rgb(238,107,48)" fg:x="1259" fg:w="2"/><text x="98.9951%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7451%" y="373" width="0.1569%" height="15" fill="rgb(205,65,21)" fg:x="1259" fg:w="2"/><text x="98.9951%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8235%" y="357" width="0.0784%" height="15" fill="rgb(246,138,48)" fg:x="1260" fg:w="1"/><text x="99.0735%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.9020%" y="373" width="0.0784%" height="15" fill="rgb(209,220,47)" fg:x="1261" fg:w="1"/><text x="99.1520%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9804%" y="325" width="0.0784%" height="15" fill="rgb(222,162,49)" fg:x="1262" fg:w="1"/><text x="99.2304%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9804%" y="309" width="0.0784%" height="15" fill="rgb(243,123,11)" fg:x="1262" fg:w="1"/><text x="99.2304%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9804%" y="293" width="0.0784%" height="15" fill="rgb(221,229,41)" fg:x="1262" fg:w="1"/><text x="99.2304%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9804%" y="277" width="0.0784%" height="15" fill="rgb(216,68,4)" fg:x="1262" fg:w="1"/><text x="99.2304%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9804%" y="261" width="0.0784%" height="15" fill="rgb(207,88,35)" fg:x="1262" fg:w="1"/><text x="99.2304%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9804%" y="245" width="0.0784%" height="15" fill="rgb(252,2,5)" fg:x="1262" fg:w="1"/><text x="99.2304%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9804%" y="229" width="0.0784%" height="15" fill="rgb(209,173,7)" fg:x="1262" fg:w="1"/><text x="99.2304%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.0588%" y="325" width="0.0784%" height="15" fill="rgb(210,198,52)" fg:x="1263" fg:w="1"/><text x="99.3088%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.0588%" y="309" width="0.0784%" height="15" fill="rgb(228,152,32)" fg:x="1263" fg:w="1"/><text x="99.3088%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.0588%" y="293" width="0.0784%" height="15" fill="rgb(249,98,29)" fg:x="1263" fg:w="1"/><text x="99.3088%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.0588%" y="277" width="0.0784%" height="15" fill="rgb(205,148,48)" fg:x="1263" fg:w="1"/><text x="99.3088%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.39%)</title><rect x="98.9804%" y="373" width="0.3922%" height="15" fill="rgb(236,69,34)" fg:x="1262" fg:w="5"/><text x="99.2304%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="98.9804%" y="357" width="0.3922%" height="15" fill="rgb(220,151,41)" fg:x="1262" fg:w="5"/><text x="99.2304%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.39%)</title><rect x="98.9804%" y="341" width="0.3922%" height="15" fill="rgb(254,106,24)" fg:x="1262" fg:w="5"/><text x="99.2304%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.1373%" y="325" width="0.2353%" height="15" fill="rgb(210,37,48)" fg:x="1264" fg:w="3"/><text x="99.3873%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.1373%" y="309" width="0.2353%" height="15" fill="rgb(254,131,5)" fg:x="1264" fg:w="3"/><text x="99.3873%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.2157%" y="293" width="0.1569%" height="15" fill="rgb(216,55,41)" fg:x="1265" fg:w="2"/><text x="99.4657%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2157%" y="277" width="0.1569%" height="15" fill="rgb(250,35,31)" fg:x="1265" fg:w="2"/><text x="99.4657%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2157%" y="261" width="0.1569%" height="15" fill="rgb(207,124,33)" fg:x="1265" fg:w="2"/><text x="99.4657%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.2157%" y="245" width="0.1569%" height="15" fill="rgb(249,175,17)" fg:x="1265" fg:w="2"/><text x="99.4657%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2157%" y="229" width="0.1569%" height="15" fill="rgb(224,175,39)" fg:x="1265" fg:w="2"/><text x="99.4657%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2941%" y="213" width="0.0784%" height="15" fill="rgb(208,67,49)" fg:x="1266" fg:w="1"/><text x="99.5441%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2941%" y="197" width="0.0784%" height="15" fill="rgb(222,188,41)" fg:x="1266" fg:w="1"/><text x="99.5441%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.78%)</title><rect x="98.7451%" y="453" width="0.7843%" height="15" fill="rgb(243,213,30)" fg:x="1259" fg:w="10"/><text x="98.9951%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.78%)</title><rect x="98.7451%" y="437" width="0.7843%" height="15" fill="rgb(253,100,45)" fg:x="1259" fg:w="10"/><text x="98.9951%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (10 samples, 0.78%)</title><rect x="98.7451%" y="421" width="0.7843%" height="15" fill="rgb(226,24,44)" fg:x="1259" fg:w="10"/><text x="98.9951%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="98.9020%" y="405" width="0.6275%" height="15" fill="rgb(215,41,24)" fg:x="1261" fg:w="8"/><text x="99.1520%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="98.9020%" y="389" width="0.6275%" height="15" fill="rgb(254,53,33)" fg:x="1261" fg:w="8"/><text x="99.1520%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.3725%" y="373" width="0.1569%" height="15" fill="rgb(242,103,10)" fg:x="1267" fg:w="2"/><text x="99.6225%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.3725%" y="357" width="0.1569%" height="15" fill="rgb(246,29,21)" fg:x="1267" fg:w="2"/><text x="99.6225%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="99.4510%" y="341" width="0.0784%" height="15" fill="rgb(251,154,1)" fg:x="1268" fg:w="1"/><text x="99.7010%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5294%" y="421" width="0.0784%" height="15" fill="rgb(254,212,26)" fg:x="1269" fg:w="1"/><text x="99.7794%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6078%" y="405" width="0.0784%" height="15" fill="rgb(251,187,46)" fg:x="1270" fg:w="1"/><text x="99.8578%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6078%" y="389" width="0.0784%" height="15" fill="rgb(224,208,14)" fg:x="1270" fg:w="1"/><text x="99.8578%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6078%" y="373" width="0.0784%" height="15" fill="rgb(222,176,26)" fg:x="1270" fg:w="1"/><text x="99.8578%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="99.5294%" y="437" width="0.2353%" height="15" fill="rgb(241,219,52)" fg:x="1269" fg:w="3"/><text x="99.7794%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.6078%" y="421" width="0.1569%" height="15" fill="rgb(252,198,21)" fg:x="1270" fg:w="2"/><text x="99.8578%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.6863%" y="405" width="0.0784%" height="15" fill="rgb(244,196,23)" fg:x="1271" fg:w="1"/><text x="99.9363%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6863%" y="389" width="0.0784%" height="15" fill="rgb(239,121,44)" fg:x="1271" fg:w="1"/><text x="99.9363%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.6863%" y="373" width="0.0784%" height="15" fill="rgb(249,203,23)" fg:x="1271" fg:w="1"/><text x="99.9363%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6863%" y="357" width="0.0784%" height="15" fill="rgb(238,219,10)" fg:x="1271" fg:w="1"/><text x="99.9363%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6863%" y="341" width="0.0784%" height="15" fill="rgb(241,35,46)" fg:x="1271" fg:w="1"/><text x="99.9363%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.6863%" y="325" width="0.0784%" height="15" fill="rgb(218,28,6)" fg:x="1271" fg:w="1"/><text x="99.9363%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8431%" y="341" width="0.0784%" height="15" fill="rgb(233,151,50)" fg:x="1273" fg:w="1"/><text x="100.0931%" y="351.50"></text></g><g><title>all (1,275 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(208,57,8)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="863.50"></text></g><g><title>simple-aff86222 (1,275 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(253,99,10)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="847.50">simple-aff86222</text></g><g><title>_start (1,275 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(237,196,49)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="831.50">_start</text></g><g><title>__libc_start_main (1,275 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(209,51,3)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="815.50">__libc_start_main</text></g><g><title>main (1,275 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(238,129,10)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="799.50">main</text></g><g><title>std::rt::lang_start_internal (1,275 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(246,201,16)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="783.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,275 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(250,160,20)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,275 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(251,107,25)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,275 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(212,103,39)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="735.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,275 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(207,9,29)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="719.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,275 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(227,84,3)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,275 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(242,194,7)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,275 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(230,40,4)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="671.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,275 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(243,229,33)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="655.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,275 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(240,65,24)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="639.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,275 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(212,28,20)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="623.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,275 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(209,72,3)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="607.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,275 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(238,170,36)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="591.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,275 samples, 100.00%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(236,19,38)" fg:x="0" fg:w="1275"/><text x="0.2500%" y="575.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (363 samples, 28.47%)</title><rect x="71.5294%" y="549" width="28.4706%" height="15" fill="rgb(230,67,43)" fg:x="912" fg:w="363"/><text x="71.7794%" y="559.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criter..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (363 samples, 28.47%)</title><rect x="71.5294%" y="533" width="28.4706%" height="15" fill="rgb(227,14,36)" fg:x="912" fg:w="363"/><text x="71.7794%" y="543.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (363 samples, 28.47%)</title><rect x="71.5294%" y="517" width="28.4706%" height="15" fill="rgb(247,171,49)" fg:x="912" fg:w="363"/><text x="71.7794%" y="527.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (55 samples, 4.31%)</title><rect x="95.6863%" y="501" width="4.3137%" height="15" fill="rgb(235,164,51)" fg:x="1220" fg:w="55"/><text x="95.9363%" y="511.50">engin..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (55 samples, 4.31%)</title><rect x="95.6863%" y="485" width="4.3137%" height="15" fill="rgb(246,107,20)" fg:x="1220" fg:w="55"/><text x="95.9363%" y="495.50">engin..</text></g><g><title>kernel::model::entry::EntryResolver::world (16 samples, 1.25%)</title><rect x="98.7451%" y="469" width="1.2549%" height="15" fill="rgb(226,88,18)" fg:x="1259" fg:w="16"/><text x="98.9951%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.47%)</title><rect x="99.5294%" y="453" width="0.4706%" height="15" fill="rgb(235,136,9)" fg:x="1269" fg:w="6"/><text x="99.7794%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="99.7647%" y="437" width="0.2353%" height="15" fill="rgb(209,3,34)" fg:x="1272" fg:w="3"/><text x="100.0147%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.7647%" y="421" width="0.2353%" height="15" fill="rgb(213,38,19)" fg:x="1272" fg:w="3"/><text x="100.0147%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.7647%" y="405" width="0.2353%" height="15" fill="rgb(254,24,24)" fg:x="1272" fg:w="3"/><text x="100.0147%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.7647%" y="389" width="0.2353%" height="15" fill="rgb(219,122,42)" fg:x="1272" fg:w="3"/><text x="100.0147%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.7647%" y="373" width="0.2353%" height="15" fill="rgb(205,128,31)" fg:x="1272" fg:w="3"/><text x="100.0147%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.7647%" y="357" width="0.2353%" height="15" fill="rgb(212,142,0)" fg:x="1272" fg:w="3"/><text x="100.0147%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.9216%" y="341" width="0.0784%" height="15" fill="rgb(211,25,35)" fg:x="1274" fg:w="1"/><text x="100.1716%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9216%" y="325" width="0.0784%" height="15" fill="rgb(220,150,53)" fg:x="1274" fg:w="1"/><text x="100.1716%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.9216%" y="309" width="0.0784%" height="15" fill="rgb(220,30,24)" fg:x="1274" fg:w="1"/><text x="100.1716%" y="319.50"></text></g></svg></svg>