<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="1253"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2394%" y="549" width="0.0798%" height="15" fill="rgb(250,98,22)" fg:x="3" fg:w="1"/><text x="0.4894%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3990%" y="533" width="0.0798%" height="15" fill="rgb(220,108,37)" fg:x="5" fg:w="1"/><text x="0.6490%" y="543.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.4789%" y="517" width="0.3192%" height="15" fill="rgb(225,168,10)" fg:x="6" fg:w="4"/><text x="0.7289%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.88%)</title><rect x="0.1596%" y="581" width="0.8779%" height="15" fill="rgb(247,215,21)" fg:x="2" fg:w="11"/><text x="0.4096%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="0.1596%" y="565" width="0.8779%" height="15" fill="rgb(253,189,31)" fg:x="2" fg:w="11"/><text x="0.4096%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.72%)</title><rect x="0.3192%" y="549" width="0.7183%" height="15" fill="rgb(241,54,22)" fg:x="4" fg:w="9"/><text x="0.5692%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7 samples, 0.56%)</title><rect x="0.4789%" y="533" width="0.5587%" height="15" fill="rgb(211,87,4)" fg:x="6" fg:w="7"/><text x="0.7289%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.24%)</title><rect x="0.7981%" y="517" width="0.2394%" height="15" fill="rgb(245,112,24)" fg:x="10" fg:w="3"/><text x="1.0481%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7981%" y="501" width="0.2394%" height="15" fill="rgb(235,190,41)" fg:x="10" fg:w="3"/><text x="1.0481%" y="511.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="1.1971%" y="517" width="0.3990%" height="15" fill="rgb(214,89,8)" fg:x="15" fg:w="5"/><text x="1.4471%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.5962%" y="517" width="0.0798%" height="15" fill="rgb(249,155,35)" fg:x="20" fg:w="1"/><text x="1.8462%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.7558%" y="501" width="0.1596%" height="15" fill="rgb(249,88,26)" fg:x="22" fg:w="2"/><text x="2.0058%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.9154%" y="501" width="0.1596%" height="15" fill="rgb(232,56,8)" fg:x="24" fg:w="2"/><text x="2.1654%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.9154%" y="485" width="0.1596%" height="15" fill="rgb(240,95,3)" fg:x="24" fg:w="2"/><text x="2.1654%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.0750%" y="485" width="0.2394%" height="15" fill="rgb(222,44,28)" fg:x="26" fg:w="3"/><text x="2.3250%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.3144%" y="485" width="0.0798%" height="15" fill="rgb(234,16,30)" fg:x="29" fg:w="1"/><text x="2.5644%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.5539%" y="469" width="0.0798%" height="15" fill="rgb(223,26,17)" fg:x="32" fg:w="1"/><text x="2.8039%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="1.0375%" y="533" width="1.6760%" height="15" fill="rgb(239,187,47)" fg:x="13" fg:w="21"/><text x="1.2875%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="1.6760%" y="517" width="1.0375%" height="15" fill="rgb(247,102,50)" fg:x="21" fg:w="13"/><text x="1.9260%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="2.0750%" y="501" width="0.6385%" height="15" fill="rgb(231,216,22)" fg:x="26" fg:w="8"/><text x="2.3250%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="2.3943%" y="485" width="0.3192%" height="15" fill="rgb(216,201,26)" fg:x="30" fg:w="4"/><text x="2.6443%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.6337%" y="469" width="0.0798%" height="15" fill="rgb(214,186,23)" fg:x="33" fg:w="1"/><text x="2.8837%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.6337%" y="453" width="0.0798%" height="15" fill="rgb(235,184,4)" fg:x="33" fg:w="1"/><text x="2.8837%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6337%" y="437" width="0.0798%" height="15" fill="rgb(244,46,17)" fg:x="33" fg:w="1"/><text x="2.8837%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.7135%" y="485" width="0.1596%" height="15" fill="rgb(248,74,46)" fg:x="34" fg:w="2"/><text x="2.9635%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.8731%" y="485" width="0.0798%" height="15" fill="rgb(243,79,5)" fg:x="36" fg:w="1"/><text x="3.1231%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8731%" y="469" width="0.0798%" height="15" fill="rgb(213,148,1)" fg:x="36" fg:w="1"/><text x="3.1231%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9529%" y="437" width="0.0798%" height="15" fill="rgb(221,30,0)" fg:x="37" fg:w="1"/><text x="3.2029%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.0327%" y="437" width="0.0798%" height="15" fill="rgb(207,85,29)" fg:x="38" fg:w="1"/><text x="3.2827%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="2.9529%" y="469" width="0.2394%" height="15" fill="rgb(239,31,46)" fg:x="37" fg:w="3"/><text x="3.2029%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="2.9529%" y="453" width="0.2394%" height="15" fill="rgb(219,6,1)" fg:x="37" fg:w="3"/><text x="3.2029%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="3.1125%" y="437" width="0.0798%" height="15" fill="rgb(229,90,29)" fg:x="39" fg:w="1"/><text x="3.3625%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="2.7135%" y="517" width="0.6385%" height="15" fill="rgb(242,201,42)" fg:x="34" fg:w="8"/><text x="2.9635%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="2.7135%" y="501" width="0.6385%" height="15" fill="rgb(243,80,54)" fg:x="34" fg:w="8"/><text x="2.9635%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="2.9529%" y="485" width="0.3990%" height="15" fill="rgb(223,166,15)" fg:x="37" fg:w="5"/><text x="3.2029%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="3.1923%" y="469" width="0.1596%" height="15" fill="rgb(238,78,27)" fg:x="40" fg:w="2"/><text x="3.4423%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.1923%" y="453" width="0.1596%" height="15" fill="rgb(235,28,43)" fg:x="40" fg:w="2"/><text x="3.4423%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="2.7135%" y="533" width="0.7183%" height="15" fill="rgb(240,210,28)" fg:x="34" fg:w="9"/><text x="2.9635%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3520%" y="517" width="0.0798%" height="15" fill="rgb(253,6,46)" fg:x="42" fg:w="1"/><text x="3.6020%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 3.59%)</title><rect x="0.0798%" y="597" width="3.5914%" height="15" fill="rgb(250,159,47)" fg:x="1" fg:w="45"/><text x="0.3298%" y="607.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (33 samples, 2.63%)</title><rect x="1.0375%" y="581" width="2.6337%" height="15" fill="rgb(216,139,2)" fg:x="13" fg:w="33"/><text x="1.2875%" y="591.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 2.63%)</title><rect x="1.0375%" y="565" width="2.6337%" height="15" fill="rgb(221,124,44)" fg:x="13" fg:w="33"/><text x="1.2875%" y="575.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (33 samples, 2.63%)</title><rect x="1.0375%" y="549" width="2.6337%" height="15" fill="rgb(205,37,22)" fg:x="13" fg:w="33"/><text x="1.2875%" y="559.50">co..</text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.4318%" y="533" width="0.2394%" height="15" fill="rgb(250,55,8)" fg:x="43" fg:w="3"/><text x="3.6818%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7510%" y="533" width="0.0798%" height="15" fill="rgb(215,83,48)" fg:x="47" fg:w="1"/><text x="4.0010%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.8308%" y="533" width="0.0798%" height="15" fill="rgb(253,2,32)" fg:x="48" fg:w="1"/><text x="4.0808%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.8308%" y="517" width="0.0798%" height="15" fill="rgb(236,67,28)" fg:x="48" fg:w="1"/><text x="4.0808%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.8308%" y="501" width="0.0798%" height="15" fill="rgb(252,55,15)" fg:x="48" fg:w="1"/><text x="4.0808%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.1500%" y="453" width="0.0798%" height="15" fill="rgb(243,173,17)" fg:x="52" fg:w="1"/><text x="4.4000%" y="463.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="4.2298%" y="421" width="0.0798%" height="15" fill="rgb(215,212,13)" fg:x="53" fg:w="1"/><text x="4.4798%" y="431.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.08%)</title><rect x="4.2298%" y="405" width="0.0798%" height="15" fill="rgb(253,176,6)" fg:x="53" fg:w="1"/><text x="4.4798%" y="415.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.08%)</title><rect x="4.2298%" y="389" width="0.0798%" height="15" fill="rgb(236,105,26)" fg:x="53" fg:w="1"/><text x="4.4798%" y="399.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.72%)</title><rect x="3.9904%" y="517" width="0.7183%" height="15" fill="rgb(239,226,32)" fg:x="50" fg:w="9"/><text x="4.2404%" y="527.50"></text></g><g><title>std::sys::unix::fs::stat (7 samples, 0.56%)</title><rect x="4.1500%" y="501" width="0.5587%" height="15" fill="rgb(236,104,51)" fg:x="52" fg:w="7"/><text x="4.4000%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (7 samples, 0.56%)</title><rect x="4.1500%" y="485" width="0.5587%" height="15" fill="rgb(220,172,33)" fg:x="52" fg:w="7"/><text x="4.4000%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (7 samples, 0.56%)</title><rect x="4.1500%" y="469" width="0.5587%" height="15" fill="rgb(224,182,25)" fg:x="52" fg:w="7"/><text x="4.4000%" y="479.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (6 samples, 0.48%)</title><rect x="4.2298%" y="453" width="0.4789%" height="15" fill="rgb(236,184,24)" fg:x="53" fg:w="6"/><text x="4.4798%" y="463.50"></text></g><g><title>std::sys::unix::fs::try_statx (6 samples, 0.48%)</title><rect x="4.2298%" y="437" width="0.4789%" height="15" fill="rgb(241,221,14)" fg:x="53" fg:w="6"/><text x="4.4798%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 0.40%)</title><rect x="4.3097%" y="421" width="0.3990%" height="15" fill="rgb(227,146,5)" fg:x="54" fg:w="5"/><text x="4.5597%" y="431.50"></text></g><g><title>statx (5 samples, 0.40%)</title><rect x="4.3097%" y="405" width="0.3990%" height="15" fill="rgb(214,15,23)" fg:x="54" fg:w="5"/><text x="4.5597%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.2674%" y="469" width="0.1596%" height="15" fill="rgb(233,157,31)" fg:x="66" fg:w="2"/><text x="5.5174%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.2674%" y="453" width="0.1596%" height="15" fill="rgb(211,27,52)" fg:x="66" fg:w="2"/><text x="5.5174%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="5.2674%" y="437" width="0.1596%" height="15" fill="rgb(212,223,15)" fg:x="66" fg:w="2"/><text x="5.5174%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="5.2674%" y="421" width="0.1596%" height="15" fill="rgb(254,211,0)" fg:x="66" fg:w="2"/><text x="5.5174%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="5.2674%" y="405" width="0.1596%" height="15" fill="rgb(205,43,38)" fg:x="66" fg:w="2"/><text x="5.5174%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.2674%" y="389" width="0.1596%" height="15" fill="rgb(242,206,46)" fg:x="66" fg:w="2"/><text x="5.5174%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.2674%" y="373" width="0.1596%" height="15" fill="rgb(220,221,12)" fg:x="66" fg:w="2"/><text x="5.5174%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="5.2674%" y="357" width="0.1596%" height="15" fill="rgb(217,156,35)" fg:x="66" fg:w="2"/><text x="5.5174%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="5.2674%" y="341" width="0.1596%" height="15" fill="rgb(207,181,49)" fg:x="66" fg:w="2"/><text x="5.5174%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="5.2674%" y="325" width="0.1596%" height="15" fill="rgb(235,103,47)" fg:x="66" fg:w="2"/><text x="5.5174%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="5.2674%" y="309" width="0.1596%" height="15" fill="rgb(222,63,28)" fg:x="66" fg:w="2"/><text x="5.5174%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="5.2674%" y="293" width="0.1596%" height="15" fill="rgb(244,137,21)" fg:x="66" fg:w="2"/><text x="5.5174%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="5.7462%" y="453" width="0.3192%" height="15" fill="rgb(228,35,27)" fg:x="72" fg:w="4"/><text x="5.9962%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="5.7462%" y="437" width="0.3192%" height="15" fill="rgb(226,191,41)" fg:x="72" fg:w="4"/><text x="5.9962%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="5.7462%" y="421" width="0.3192%" height="15" fill="rgb(210,154,3)" fg:x="72" fg:w="4"/><text x="5.9962%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="5.7462%" y="405" width="0.3192%" height="15" fill="rgb(216,60,49)" fg:x="72" fg:w="4"/><text x="5.9962%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="5.7462%" y="389" width="0.3192%" height="15" fill="rgb(226,17,20)" fg:x="72" fg:w="4"/><text x="5.9962%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="5.7462%" y="373" width="0.3192%" height="15" fill="rgb(206,115,35)" fg:x="72" fg:w="4"/><text x="5.9962%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="5.7462%" y="357" width="0.3192%" height="15" fill="rgb(227,88,1)" fg:x="72" fg:w="4"/><text x="5.9962%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="5.7462%" y="341" width="0.3192%" height="15" fill="rgb(230,222,24)" fg:x="72" fg:w="4"/><text x="5.9962%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="5.7462%" y="325" width="0.3192%" height="15" fill="rgb(214,124,32)" fg:x="72" fg:w="4"/><text x="5.9962%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="5.7462%" y="309" width="0.3192%" height="15" fill="rgb(240,41,36)" fg:x="72" fg:w="4"/><text x="5.9962%" y="319.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="5.7462%" y="293" width="0.3192%" height="15" fill="rgb(221,17,52)" fg:x="72" fg:w="4"/><text x="5.9962%" y="303.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="5.7462%" y="277" width="0.3192%" height="15" fill="rgb(252,70,16)" fg:x="72" fg:w="4"/><text x="5.9962%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 1.12%)</title><rect x="5.4270%" y="469" width="1.1173%" height="15" fill="rgb(250,177,4)" fg:x="68" fg:w="14"/><text x="5.6770%" y="479.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="6.0654%" y="453" width="0.4789%" height="15" fill="rgb(240,188,47)" fg:x="76" fg:w="6"/><text x="6.3154%" y="463.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (23 samples, 1.84%)</title><rect x="4.7885%" y="501" width="1.8356%" height="15" fill="rgb(215,92,12)" fg:x="60" fg:w="23"/><text x="5.0385%" y="511.50">p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 1.60%)</title><rect x="5.0279%" y="485" width="1.5962%" height="15" fill="rgb(242,110,29)" fg:x="63" fg:w="20"/><text x="5.2779%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.5443%" y="469" width="0.0798%" height="15" fill="rgb(208,211,26)" fg:x="82" fg:w="1"/><text x="6.7943%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7837%" y="469" width="0.0798%" height="15" fill="rgb(244,147,6)" fg:x="85" fg:w="1"/><text x="7.0337%" y="479.50"></text></g><g><title>glob::is_dir (1 samples, 0.08%)</title><rect x="6.8635%" y="453" width="0.0798%" height="15" fill="rgb(211,130,42)" fg:x="86" fg:w="1"/><text x="7.1135%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="6.8635%" y="437" width="0.0798%" height="15" fill="rgb(220,63,1)" fg:x="86" fg:w="1"/><text x="7.1135%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="6.8635%" y="421" width="0.0798%" height="15" fill="rgb(241,212,30)" fg:x="86" fg:w="1"/><text x="7.1135%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="6.8635%" y="405" width="0.0798%" height="15" fill="rgb(233,153,17)" fg:x="86" fg:w="1"/><text x="7.1135%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="6.8635%" y="389" width="0.0798%" height="15" fill="rgb(236,3,10)" fg:x="86" fg:w="1"/><text x="7.1135%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="6.8635%" y="373" width="0.0798%" height="15" fill="rgb(232,41,21)" fg:x="86" fg:w="1"/><text x="7.1135%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="6.8635%" y="357" width="0.0798%" height="15" fill="rgb(206,63,51)" fg:x="86" fg:w="1"/><text x="7.1135%" y="367.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="6.8635%" y="341" width="0.0798%" height="15" fill="rgb(250,214,3)" fg:x="86" fg:w="1"/><text x="7.1135%" y="351.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="6.7039%" y="485" width="0.3192%" height="15" fill="rgb(254,89,27)" fg:x="84" fg:w="4"/><text x="6.9539%" y="495.50"></text></g><g><title>glob::fill_todo (2 samples, 0.16%)</title><rect x="6.8635%" y="469" width="0.1596%" height="15" fill="rgb(249,41,14)" fg:x="86" fg:w="2"/><text x="7.1135%" y="479.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="6.9433%" y="453" width="0.0798%" height="15" fill="rgb(221,196,51)" fg:x="87" fg:w="1"/><text x="7.1933%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="6.9433%" y="437" width="0.0798%" height="15" fill="rgb(214,116,26)" fg:x="87" fg:w="1"/><text x="7.1933%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="6.9433%" y="421" width="0.0798%" height="15" fill="rgb(236,67,7)" fg:x="87" fg:w="1"/><text x="7.1933%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="6.9433%" y="405" width="0.0798%" height="15" fill="rgb(253,179,32)" fg:x="87" fg:w="1"/><text x="7.1933%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="6.9433%" y="389" width="0.0798%" height="15" fill="rgb(218,33,15)" fg:x="87" fg:w="1"/><text x="7.1933%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="6.9433%" y="373" width="0.0798%" height="15" fill="rgb(217,202,41)" fg:x="87" fg:w="1"/><text x="7.1933%" y="383.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="6.9433%" y="357" width="0.0798%" height="15" fill="rgb(234,133,5)" fg:x="87" fg:w="1"/><text x="7.1933%" y="367.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.1030%" y="453" width="0.0798%" height="15" fill="rgb(240,47,40)" fg:x="89" fg:w="1"/><text x="7.3530%" y="463.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="7.1828%" y="453" width="0.0798%" height="15" fill="rgb(234,166,26)" fg:x="90" fg:w="1"/><text x="7.4328%" y="463.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="7.1828%" y="437" width="0.0798%" height="15" fill="rgb(244,125,51)" fg:x="90" fg:w="1"/><text x="7.4328%" y="447.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="7.1828%" y="421" width="0.0798%" height="15" fill="rgb(229,171,11)" fg:x="90" fg:w="1"/><text x="7.4328%" y="431.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="7.1828%" y="405" width="0.0798%" height="15" fill="rgb(224,38,45)" fg:x="90" fg:w="1"/><text x="7.4328%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="7.1828%" y="389" width="0.0798%" height="15" fill="rgb(237,27,7)" fg:x="90" fg:w="1"/><text x="7.4328%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="7.1828%" y="373" width="0.0798%" height="15" fill="rgb(216,52,7)" fg:x="90" fg:w="1"/><text x="7.4328%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="7.1828%" y="357" width="0.0798%" height="15" fill="rgb(243,11,11)" fg:x="90" fg:w="1"/><text x="7.4328%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.1828%" y="341" width="0.0798%" height="15" fill="rgb(253,167,20)" fg:x="90" fg:w="1"/><text x="7.4328%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.1828%" y="325" width="0.0798%" height="15" fill="rgb(215,207,5)" fg:x="90" fg:w="1"/><text x="7.4328%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.1828%" y="309" width="0.0798%" height="15" fill="rgb(252,127,31)" fg:x="90" fg:w="1"/><text x="7.4328%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="7.1828%" y="293" width="0.0798%" height="15" fill="rgb(209,106,27)" fg:x="90" fg:w="1"/><text x="7.4328%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.1828%" y="277" width="0.0798%" height="15" fill="rgb(214,220,18)" fg:x="90" fg:w="1"/><text x="7.4328%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="7.1828%" y="261" width="0.0798%" height="15" fill="rgb(237,89,12)" fg:x="90" fg:w="1"/><text x="7.4328%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="7.1828%" y="245" width="0.0798%" height="15" fill="rgb(209,167,36)" fg:x="90" fg:w="1"/><text x="7.4328%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="7.1828%" y="229" width="0.0798%" height="15" fill="rgb(243,45,22)" fg:x="90" fg:w="1"/><text x="7.4328%" y="239.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="7.1828%" y="213" width="0.0798%" height="15" fill="rgb(239,2,46)" fg:x="90" fg:w="1"/><text x="7.4328%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="7.1828%" y="197" width="0.0798%" height="15" fill="rgb(241,101,0)" fg:x="90" fg:w="1"/><text x="7.4328%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.2626%" y="453" width="0.0798%" height="15" fill="rgb(244,34,31)" fg:x="91" fg:w="1"/><text x="7.5126%" y="463.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (37 samples, 2.95%)</title><rect x="4.7087%" y="517" width="2.9529%" height="15" fill="rgb(248,23,22)" fg:x="59" fg:w="37"/><text x="4.9587%" y="527.50">&lt;pl..</text></g><g><title>plugins_rune::sources::load_directory_sources (13 samples, 1.04%)</title><rect x="6.6241%" y="501" width="1.0375%" height="15" fill="rgb(218,27,48)" fg:x="83" fg:w="13"/><text x="6.8741%" y="511.50"></text></g><g><title>glob::glob (8 samples, 0.64%)</title><rect x="7.0231%" y="485" width="0.6385%" height="15" fill="rgb(232,78,1)" fg:x="88" fg:w="8"/><text x="7.2731%" y="495.50"></text></g><g><title>glob::glob_with (8 samples, 0.64%)</title><rect x="7.0231%" y="469" width="0.6385%" height="15" fill="rgb(233,169,12)" fg:x="88" fg:w="8"/><text x="7.2731%" y="479.50"></text></g><g><title>glob::Pattern::new (4 samples, 0.32%)</title><rect x="7.3424%" y="453" width="0.3192%" height="15" fill="rgb(225,222,54)" fg:x="92" fg:w="4"/><text x="7.5924%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="7.4222%" y="437" width="0.2394%" height="15" fill="rgb(245,126,29)" fg:x="93" fg:w="3"/><text x="7.6722%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="7.4222%" y="421" width="0.2394%" height="15" fill="rgb(241,63,48)" fg:x="93" fg:w="3"/><text x="7.6722%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="7.5020%" y="405" width="0.1596%" height="15" fill="rgb(235,126,38)" fg:x="94" fg:w="2"/><text x="7.7520%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="7.5020%" y="389" width="0.1596%" height="15" fill="rgb(232,96,49)" fg:x="94" fg:w="2"/><text x="7.7520%" y="399.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="7.6616%" y="501" width="0.3192%" height="15" fill="rgb(211,146,40)" fg:x="96" fg:w="4"/><text x="7.9116%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (5 samples, 0.40%)</title><rect x="7.6616%" y="517" width="0.3990%" height="15" fill="rgb(247,93,44)" fg:x="96" fg:w="5"/><text x="7.9116%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="7.9808%" y="501" width="0.0798%" height="15" fill="rgb(251,41,49)" fg:x="100" fg:w="1"/><text x="8.2308%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.9808%" y="485" width="0.0798%" height="15" fill="rgb(218,155,12)" fg:x="100" fg:w="1"/><text x="8.2308%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="8.3799%" y="437" width="0.1596%" height="15" fill="rgb(221,161,30)" fg:x="105" fg:w="2"/><text x="8.6299%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (3 samples, 0.24%)</title><rect x="8.3799%" y="453" width="0.2394%" height="15" fill="rgb(221,179,11)" fg:x="105" fg:w="3"/><text x="8.6299%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.5395%" y="437" width="0.0798%" height="15" fill="rgb(224,170,48)" fg:x="107" fg:w="1"/><text x="8.7895%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="8.6193%" y="453" width="0.0798%" height="15" fill="rgb(223,117,5)" fg:x="108" fg:w="1"/><text x="8.8693%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.6193%" y="437" width="0.0798%" height="15" fill="rgb(209,52,20)" fg:x="108" fg:w="1"/><text x="8.8693%" y="447.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (7 samples, 0.56%)</title><rect x="8.2203%" y="485" width="0.5587%" height="15" fill="rgb(209,19,41)" fg:x="103" fg:w="7"/><text x="8.4703%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (7 samples, 0.56%)</title><rect x="8.2203%" y="469" width="0.5587%" height="15" fill="rgb(210,177,12)" fg:x="103" fg:w="7"/><text x="8.4703%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="8.6991%" y="453" width="0.0798%" height="15" fill="rgb(211,159,37)" fg:x="109" fg:w="1"/><text x="8.9491%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.6991%" y="437" width="0.0798%" height="15" fill="rgb(209,20,2)" fg:x="109" fg:w="1"/><text x="8.9491%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.6991%" y="421" width="0.0798%" height="15" fill="rgb(244,3,46)" fg:x="109" fg:w="1"/><text x="8.9491%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.6991%" y="405" width="0.0798%" height="15" fill="rgb(220,94,38)" fg:x="109" fg:w="1"/><text x="8.9491%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="8.8587%" y="453" width="0.0798%" height="15" fill="rgb(253,14,31)" fg:x="111" fg:w="1"/><text x="9.1087%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::PutInsideAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="8.9385%" y="453" width="0.1596%" height="15" fill="rgb(234,176,13)" fg:x="112" fg:w="2"/><text x="9.1885%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="8.9385%" y="437" width="0.1596%" height="15" fill="rgb(218,62,25)" fg:x="112" fg:w="2"/><text x="9.1885%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.0184%" y="421" width="0.0798%" height="15" fill="rgb(216,124,40)" fg:x="113" fg:w="1"/><text x="9.2684%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.0982%" y="453" width="0.0798%" height="15" fill="rgb(228,170,12)" fg:x="114" fg:w="1"/><text x="9.3482%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="9.1780%" y="453" width="0.1596%" height="15" fill="rgb(231,226,5)" fg:x="115" fg:w="2"/><text x="9.4280%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.1780%" y="437" width="0.1596%" height="15" fill="rgb(237,122,22)" fg:x="115" fg:w="2"/><text x="9.4280%" y="447.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.1780%" y="421" width="0.1596%" height="15" fill="rgb(209,185,25)" fg:x="115" fg:w="2"/><text x="9.4280%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.3376%" y="453" width="0.0798%" height="15" fill="rgb(228,200,32)" fg:x="117" fg:w="1"/><text x="9.5876%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.3376%" y="437" width="0.0798%" height="15" fill="rgb(217,140,10)" fg:x="117" fg:w="1"/><text x="9.5876%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="9.4174%" y="453" width="0.0798%" height="15" fill="rgb(253,17,24)" fg:x="118" fg:w="1"/><text x="9.6674%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="9.4174%" y="437" width="0.0798%" height="15" fill="rgb(212,61,6)" fg:x="118" fg:w="1"/><text x="9.6674%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="9.4174%" y="421" width="0.0798%" height="15" fill="rgb(205,14,25)" fg:x="118" fg:w="1"/><text x="9.6674%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (11 samples, 0.88%)</title><rect x="8.7789%" y="485" width="0.8779%" height="15" fill="rgb(232,69,41)" fg:x="110" fg:w="11"/><text x="9.0289%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (11 samples, 0.88%)</title><rect x="8.7789%" y="469" width="0.8779%" height="15" fill="rgb(241,106,47)" fg:x="110" fg:w="11"/><text x="9.0289%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="9.4972%" y="453" width="0.1596%" height="15" fill="rgb(210,213,53)" fg:x="119" fg:w="2"/><text x="9.7472%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.5770%" y="437" width="0.0798%" height="15" fill="rgb(253,175,27)" fg:x="120" fg:w="1"/><text x="9.8270%" y="447.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="9.6568%" y="485" width="0.0798%" height="15" fill="rgb(211,171,24)" fg:x="121" fg:w="1"/><text x="9.9068%" y="495.50"></text></g><g><title>&lt;plugins_core::chat::actions::SpeakAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="9.6568%" y="469" width="0.0798%" height="15" fill="rgb(229,80,7)" fg:x="121" fg:w="1"/><text x="9.9068%" y="479.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="9.7366%" y="485" width="0.0798%" height="15" fill="rgb(212,46,39)" fg:x="122" fg:w="1"/><text x="9.9866%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="9.7366%" y="469" width="0.0798%" height="15" fill="rgb(240,80,45)" fg:x="122" fg:w="1"/><text x="9.9866%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.7366%" y="453" width="0.0798%" height="15" fill="rgb(253,177,40)" fg:x="122" fg:w="1"/><text x="9.9866%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.7366%" y="437" width="0.0798%" height="15" fill="rgb(249,200,15)" fg:x="122" fg:w="1"/><text x="9.9866%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="9.8164%" y="453" width="0.0798%" height="15" fill="rgb(217,78,26)" fg:x="123" fg:w="1"/><text x="10.0664%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8164%" y="437" width="0.0798%" height="15" fill="rgb(254,151,32)" fg:x="123" fg:w="1"/><text x="10.0664%" y="447.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="9.8164%" y="485" width="0.1596%" height="15" fill="rgb(226,165,27)" fg:x="123" fg:w="2"/><text x="10.0664%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="9.8164%" y="469" width="0.1596%" height="15" fill="rgb(250,206,4)" fg:x="123" fg:w="2"/><text x="10.0664%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="9.8962%" y="453" width="0.0798%" height="15" fill="rgb(231,229,27)" fg:x="124" fg:w="1"/><text x="10.1462%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.8962%" y="437" width="0.0798%" height="15" fill="rgb(239,217,8)" fg:x="124" fg:w="1"/><text x="10.1462%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.8962%" y="421" width="0.0798%" height="15" fill="rgb(225,204,27)" fg:x="124" fg:w="1"/><text x="10.1462%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.8962%" y="405" width="0.0798%" height="15" fill="rgb(230,56,32)" fg:x="124" fg:w="1"/><text x="10.1462%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8962%" y="389" width="0.0798%" height="15" fill="rgb(222,56,27)" fg:x="124" fg:w="1"/><text x="10.1462%" y="399.50"></text></g><g><title>&lt;plugins_core::moving::actions::AddRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="9.9761%" y="453" width="0.0798%" height="15" fill="rgb(253,108,27)" fg:x="125" fg:w="1"/><text x="10.2261%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.9761%" y="437" width="0.0798%" height="15" fill="rgb(212,87,36)" fg:x="125" fg:w="1"/><text x="10.2261%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::actions::RemoveRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="10.0559%" y="453" width="0.0798%" height="15" fill="rgb(247,82,36)" fg:x="126" fg:w="1"/><text x="10.3059%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.1357%" y="453" width="0.1596%" height="15" fill="rgb(222,143,9)" fg:x="127" fg:w="2"/><text x="10.3857%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.40%)</title><rect x="10.2953%" y="453" width="0.3990%" height="15" fill="rgb(238,162,48)" fg:x="129" fg:w="5"/><text x="10.5453%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="10.3751%" y="437" width="0.3192%" height="15" fill="rgb(221,59,43)" fg:x="130" fg:w="4"/><text x="10.6251%" y="447.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="10.3751%" y="421" width="0.3192%" height="15" fill="rgb(205,166,41)" fg:x="130" fg:w="4"/><text x="10.6251%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (11 samples, 0.88%)</title><rect x="9.9761%" y="485" width="0.8779%" height="15" fill="rgb(241,186,40)" fg:x="125" fg:w="11"/><text x="10.2261%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (11 samples, 0.88%)</title><rect x="9.9761%" y="469" width="0.8779%" height="15" fill="rgb(216,119,35)" fg:x="125" fg:w="11"/><text x="10.2261%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="10.6943%" y="453" width="0.1596%" height="15" fill="rgb(208,68,38)" fg:x="134" fg:w="2"/><text x="10.9443%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="10.7741%" y="437" width="0.0798%" height="15" fill="rgb(217,113,1)" fg:x="135" fg:w="1"/><text x="11.0241%" y="447.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.7741%" y="421" width="0.0798%" height="15" fill="rgb(242,153,3)" fg:x="135" fg:w="1"/><text x="11.0241%" y="431.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.7741%" y="405" width="0.0798%" height="15" fill="rgb(229,76,35)" fg:x="135" fg:w="1"/><text x="11.0241%" y="415.50"></text></g><g><title>&lt;plugins_rune::actions::RuneAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="10.8540%" y="453" width="0.0798%" height="15" fill="rgb(229,125,34)" fg:x="136" fg:w="1"/><text x="11.1040%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="10.8540%" y="437" width="0.0798%" height="15" fill="rgb(238,179,36)" fg:x="136" fg:w="1"/><text x="11.1040%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="10.8540%" y="421" width="0.0798%" height="15" fill="rgb(244,183,19)" fg:x="136" fg:w="1"/><text x="11.1040%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.8540%" y="405" width="0.0798%" height="15" fill="rgb(216,85,49)" fg:x="136" fg:w="1"/><text x="11.1040%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.8540%" y="389" width="0.0798%" height="15" fill="rgb(208,161,47)" fg:x="136" fg:w="1"/><text x="11.1040%" y="399.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="10.8540%" y="485" width="0.1596%" height="15" fill="rgb(233,210,18)" fg:x="136" fg:w="2"/><text x="11.1040%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="10.8540%" y="469" width="0.1596%" height="15" fill="rgb(205,104,42)" fg:x="136" fg:w="2"/><text x="11.1040%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9338%" y="453" width="0.0798%" height="15" fill="rgb(248,90,43)" fg:x="137" fg:w="1"/><text x="11.1838%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0136%" y="485" width="0.0798%" height="15" fill="rgb(206,198,11)" fg:x="138" fg:w="1"/><text x="11.2636%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::schema (41 samples, 3.27%)</title><rect x="8.0607%" y="517" width="3.2721%" height="15" fill="rgb(239,165,27)" fg:x="101" fg:w="41"/><text x="8.3107%" y="527.50">ker..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 3.27%)</title><rect x="8.0607%" y="501" width="3.2721%" height="15" fill="rgb(246,44,32)" fg:x="101" fg:w="41"/><text x="8.3107%" y="511.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.0934%" y="485" width="0.2394%" height="15" fill="rgb(252,65,42)" fg:x="139" fg:w="3"/><text x="11.3434%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (97 samples, 7.74%)</title><rect x="3.9106%" y="533" width="7.7414%" height="15" fill="rgb(246,197,18)" fg:x="49" fg:w="97"/><text x="4.1606%" y="543.50">kernel::plu..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.32%)</title><rect x="11.3328%" y="517" width="0.3192%" height="15" fill="rgb(216,192,4)" fg:x="142" fg:w="4"/><text x="11.5828%" y="527.50"></text></g><g><title>clock_gettime (4 samples, 0.32%)</title><rect x="11.3328%" y="501" width="0.3192%" height="15" fill="rgb(208,117,10)" fg:x="142" fg:w="4"/><text x="11.5828%" y="511.50"></text></g><g><title>engine::session::Session::initialize (104 samples, 8.30%)</title><rect x="3.6712%" y="549" width="8.3001%" height="15" fill="rgb(240,61,47)" fg:x="46" fg:w="104"/><text x="3.9212%" y="559.50">engine::sess..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="11.6520%" y="533" width="0.3192%" height="15" fill="rgb(228,178,21)" fg:x="146" fg:w="4"/><text x="11.9020%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="11.6520%" y="517" width="0.3192%" height="15" fill="rgb(219,96,54)" fg:x="146" fg:w="4"/><text x="11.9020%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="11.8117%" y="501" width="0.1596%" height="15" fill="rgb(250,177,24)" fg:x="148" fg:w="2"/><text x="12.0617%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.8915%" y="485" width="0.0798%" height="15" fill="rgb(242,154,46)" fg:x="149" fg:w="1"/><text x="12.1415%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.8915%" y="469" width="0.0798%" height="15" fill="rgb(226,176,29)" fg:x="149" fg:w="1"/><text x="12.1415%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (2 samples, 0.16%)</title><rect x="11.9713%" y="517" width="0.1596%" height="15" fill="rgb(226,29,2)" fg:x="150" fg:w="2"/><text x="12.2213%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.9713%" y="501" width="0.1596%" height="15" fill="rgb(237,104,14)" fg:x="150" fg:w="2"/><text x="12.2213%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (107 samples, 8.54%)</title><rect x="3.6712%" y="597" width="8.5395%" height="15" fill="rgb(245,207,31)" fg:x="46" fg:w="107"/><text x="3.9212%" y="607.50">&lt;engine::dom..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (107 samples, 8.54%)</title><rect x="3.6712%" y="581" width="8.5395%" height="15" fill="rgb(229,211,45)" fg:x="46" fg:w="107"/><text x="3.9212%" y="591.50">engine::doma..</text></g><g><title>engine::session::Session::new (107 samples, 8.54%)</title><rect x="3.6712%" y="565" width="8.5395%" height="15" fill="rgb(229,113,15)" fg:x="46" fg:w="107"/><text x="3.9212%" y="575.50">engine::sess..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="11.9713%" y="549" width="0.2394%" height="15" fill="rgb(237,147,15)" fg:x="150" fg:w="3"/><text x="12.2213%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="11.9713%" y="533" width="0.2394%" height="15" fill="rgb(244,120,12)" fg:x="150" fg:w="3"/><text x="12.2213%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.1309%" y="517" width="0.0798%" height="15" fill="rgb(205,120,12)" fg:x="152" fg:w="1"/><text x="12.3809%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.1309%" y="501" width="0.0798%" height="15" fill="rgb(231,26,45)" fg:x="152" fg:w="1"/><text x="12.3809%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.1309%" y="485" width="0.0798%" height="15" fill="rgb(246,98,1)" fg:x="152" fg:w="1"/><text x="12.3809%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.2905%" y="581" width="0.0798%" height="15" fill="rgb(207,68,45)" fg:x="154" fg:w="1"/><text x="12.5405%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.2905%" y="565" width="0.0798%" height="15" fill="rgb(231,27,38)" fg:x="154" fg:w="1"/><text x="12.5405%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="12.3703%" y="581" width="0.0798%" height="15" fill="rgb(214,223,3)" fg:x="155" fg:w="1"/><text x="12.6203%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3703%" y="565" width="0.0798%" height="15" fill="rgb(228,195,46)" fg:x="155" fg:w="1"/><text x="12.6203%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.4501%" y="549" width="0.0798%" height="15" fill="rgb(231,100,42)" fg:x="156" fg:w="1"/><text x="12.7001%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.4501%" y="533" width="0.0798%" height="15" fill="rgb(236,53,4)" fg:x="156" fg:w="1"/><text x="12.7001%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.4501%" y="517" width="0.0798%" height="15" fill="rgb(230,152,12)" fg:x="156" fg:w="1"/><text x="12.7001%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.4501%" y="501" width="0.0798%" height="15" fill="rgb(226,101,19)" fg:x="156" fg:w="1"/><text x="12.7001%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.4501%" y="485" width="0.0798%" height="15" fill="rgb(250,149,32)" fg:x="156" fg:w="1"/><text x="12.7001%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="12.4501%" y="469" width="0.0798%" height="15" fill="rgb(232,178,12)" fg:x="156" fg:w="1"/><text x="12.7001%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.4501%" y="453" width="0.0798%" height="15" fill="rgb(246,151,17)" fg:x="156" fg:w="1"/><text x="12.7001%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="12.4501%" y="565" width="0.1596%" height="15" fill="rgb(252,17,51)" fg:x="156" fg:w="2"/><text x="12.7001%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5299%" y="549" width="0.0798%" height="15" fill="rgb(250,207,23)" fg:x="157" fg:w="1"/><text x="12.7799%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.6097%" y="533" width="0.0798%" height="15" fill="rgb(205,27,5)" fg:x="158" fg:w="1"/><text x="12.8597%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.6097%" y="517" width="0.0798%" height="15" fill="rgb(224,32,19)" fg:x="158" fg:w="1"/><text x="12.8597%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.6097%" y="501" width="0.0798%" height="15" fill="rgb(247,214,40)" fg:x="158" fg:w="1"/><text x="12.8597%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.6097%" y="485" width="0.0798%" height="15" fill="rgb(239,199,17)" fg:x="158" fg:w="1"/><text x="12.8597%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="12.6895%" y="533" width="0.1596%" height="15" fill="rgb(251,159,9)" fg:x="159" fg:w="2"/><text x="12.9395%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="12.6895%" y="517" width="0.1596%" height="15" fill="rgb(225,78,32)" fg:x="159" fg:w="2"/><text x="12.9395%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="12.7694%" y="501" width="0.0798%" height="15" fill="rgb(206,97,47)" fg:x="160" fg:w="1"/><text x="13.0194%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7694%" y="485" width="0.0798%" height="15" fill="rgb(227,107,4)" fg:x="160" fg:w="1"/><text x="13.0194%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7694%" y="469" width="0.0798%" height="15" fill="rgb(241,146,50)" fg:x="160" fg:w="1"/><text x="13.0194%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.7694%" y="453" width="0.0798%" height="15" fill="rgb(232,92,30)" fg:x="160" fg:w="1"/><text x="13.0194%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.7694%" y="437" width="0.0798%" height="15" fill="rgb(222,0,40)" fg:x="160" fg:w="1"/><text x="13.0194%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.7694%" y="421" width="0.0798%" height="15" fill="rgb(219,54,33)" fg:x="160" fg:w="1"/><text x="13.0194%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7694%" y="405" width="0.0798%" height="15" fill="rgb(226,209,28)" fg:x="160" fg:w="1"/><text x="13.0194%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7694%" y="389" width="0.0798%" height="15" fill="rgb(254,205,35)" fg:x="160" fg:w="1"/><text x="13.0194%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.7694%" y="373" width="0.0798%" height="15" fill="rgb(230,159,3)" fg:x="160" fg:w="1"/><text x="13.0194%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.7694%" y="357" width="0.0798%" height="15" fill="rgb(232,190,24)" fg:x="160" fg:w="1"/><text x="13.0194%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.7694%" y="341" width="0.0798%" height="15" fill="rgb(217,227,44)" fg:x="160" fg:w="1"/><text x="13.0194%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.7694%" y="325" width="0.0798%" height="15" fill="rgb(236,211,1)" fg:x="160" fg:w="1"/><text x="13.0194%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7694%" y="309" width="0.0798%" height="15" fill="rgb(250,127,46)" fg:x="160" fg:w="1"/><text x="13.0194%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="12.8492%" y="453" width="0.4789%" height="15" fill="rgb(229,213,6)" fg:x="161" fg:w="6"/><text x="13.0992%" y="463.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="12.9290%" y="437" width="0.3990%" height="15" fill="rgb(237,15,36)" fg:x="162" fg:w="5"/><text x="13.1790%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.1684%" y="421" width="0.1596%" height="15" fill="rgb(213,131,41)" fg:x="165" fg:w="2"/><text x="13.4184%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.1684%" y="405" width="0.1596%" height="15" fill="rgb(225,82,44)" fg:x="165" fg:w="2"/><text x="13.4184%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.2482%" y="389" width="0.0798%" height="15" fill="rgb(249,42,11)" fg:x="166" fg:w="1"/><text x="13.4982%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.2482%" y="373" width="0.0798%" height="15" fill="rgb(253,11,29)" fg:x="166" fg:w="1"/><text x="13.4982%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.2482%" y="357" width="0.0798%" height="15" fill="rgb(206,8,54)" fg:x="166" fg:w="1"/><text x="13.4982%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="12.8492%" y="469" width="0.6385%" height="15" fill="rgb(222,186,2)" fg:x="161" fg:w="8"/><text x="13.0992%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.3280%" y="453" width="0.1596%" height="15" fill="rgb(221,206,53)" fg:x="167" fg:w="2"/><text x="13.5780%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.4876%" y="453" width="0.0798%" height="15" fill="rgb(230,150,21)" fg:x="169" fg:w="1"/><text x="13.7376%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.8069%" y="405" width="0.0798%" height="15" fill="rgb(253,202,10)" fg:x="173" fg:w="1"/><text x="14.0569%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="13.5674%" y="453" width="0.3990%" height="15" fill="rgb(238,109,40)" fg:x="170" fg:w="5"/><text x="13.8174%" y="463.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="13.5674%" y="437" width="0.3990%" height="15" fill="rgb(247,120,22)" fg:x="170" fg:w="5"/><text x="13.8174%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="13.7271%" y="421" width="0.2394%" height="15" fill="rgb(207,43,30)" fg:x="172" fg:w="3"/><text x="13.9771%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="13.8867%" y="405" width="0.0798%" height="15" fill="rgb(213,211,24)" fg:x="174" fg:w="1"/><text x="14.1367%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.9665%" y="437" width="0.0798%" height="15" fill="rgb(239,73,39)" fg:x="175" fg:w="1"/><text x="14.2165%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.0463%" y="405" width="0.0798%" height="15" fill="rgb(245,182,19)" fg:x="176" fg:w="1"/><text x="14.2963%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.0463%" y="389" width="0.0798%" height="15" fill="rgb(247,143,26)" fg:x="176" fg:w="1"/><text x="14.2963%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="14.0463%" y="437" width="0.2394%" height="15" fill="rgb(228,191,23)" fg:x="176" fg:w="3"/><text x="14.2963%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="14.0463%" y="421" width="0.2394%" height="15" fill="rgb(253,165,31)" fg:x="176" fg:w="3"/><text x="14.2963%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="14.1261%" y="405" width="0.1596%" height="15" fill="rgb(234,138,20)" fg:x="177" fg:w="2"/><text x="14.3761%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="14.1261%" y="389" width="0.1596%" height="15" fill="rgb(218,191,29)" fg:x="177" fg:w="2"/><text x="14.3761%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.1261%" y="373" width="0.1596%" height="15" fill="rgb(221,157,19)" fg:x="177" fg:w="2"/><text x="14.3761%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.2059%" y="357" width="0.0798%" height="15" fill="rgb(237,26,42)" fg:x="178" fg:w="1"/><text x="14.4559%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="14.2857%" y="437" width="0.3192%" height="15" fill="rgb(220,163,24)" fg:x="179" fg:w="4"/><text x="14.5357%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.5251%" y="421" width="0.0798%" height="15" fill="rgb(242,115,20)" fg:x="182" fg:w="1"/><text x="14.7751%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="14.7646%" y="421" width="0.1596%" height="15" fill="rgb(210,206,9)" fg:x="185" fg:w="2"/><text x="15.0146%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.8444%" y="405" width="0.0798%" height="15" fill="rgb(208,71,17)" fg:x="186" fg:w="1"/><text x="15.0944%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.9242%" y="405" width="0.0798%" height="15" fill="rgb(233,7,5)" fg:x="187" fg:w="1"/><text x="15.1742%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.9242%" y="389" width="0.0798%" height="15" fill="rgb(207,92,33)" fg:x="187" fg:w="1"/><text x="15.1742%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.9242%" y="373" width="0.0798%" height="15" fill="rgb(218,87,9)" fg:x="187" fg:w="1"/><text x="15.1742%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.9242%" y="357" width="0.0798%" height="15" fill="rgb(219,47,37)" fg:x="187" fg:w="1"/><text x="15.1742%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.9242%" y="341" width="0.0798%" height="15" fill="rgb(221,152,34)" fg:x="187" fg:w="1"/><text x="15.1742%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.9242%" y="325" width="0.0798%" height="15" fill="rgb(235,176,21)" fg:x="187" fg:w="1"/><text x="15.1742%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.9242%" y="309" width="0.0798%" height="15" fill="rgb(232,212,21)" fg:x="187" fg:w="1"/><text x="15.1742%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="15.0040%" y="405" width="0.1596%" height="15" fill="rgb(245,82,39)" fg:x="188" fg:w="2"/><text x="15.2540%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.0040%" y="389" width="0.1596%" height="15" fill="rgb(241,52,51)" fg:x="188" fg:w="2"/><text x="15.2540%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.0040%" y="373" width="0.1596%" height="15" fill="rgb(219,91,24)" fg:x="188" fg:w="2"/><text x="15.2540%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="14.9242%" y="421" width="0.3192%" height="15" fill="rgb(241,142,12)" fg:x="187" fg:w="4"/><text x="15.1742%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.1636%" y="405" width="0.0798%" height="15" fill="rgb(230,27,9)" fg:x="190" fg:w="1"/><text x="15.4136%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.1636%" y="389" width="0.0798%" height="15" fill="rgb(249,181,32)" fg:x="190" fg:w="1"/><text x="15.4136%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3232%" y="389" width="0.0798%" height="15" fill="rgb(230,107,3)" fg:x="192" fg:w="1"/><text x="15.5732%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="14.6049%" y="437" width="0.8779%" height="15" fill="rgb(246,204,14)" fg:x="183" fg:w="11"/><text x="14.8549%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="15.2434%" y="421" width="0.2394%" height="15" fill="rgb(213,192,47)" fg:x="191" fg:w="3"/><text x="15.4934%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.3232%" y="405" width="0.1596%" height="15" fill="rgb(240,44,36)" fg:x="192" fg:w="2"/><text x="15.5732%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.4030%" y="389" width="0.0798%" height="15" fill="rgb(244,209,38)" fg:x="193" fg:w="1"/><text x="15.6530%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="13.9665%" y="453" width="1.6760%" height="15" fill="rgb(219,34,37)" fg:x="175" fg:w="21"/><text x="14.2165%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.4828%" y="437" width="0.1596%" height="15" fill="rgb(210,28,6)" fg:x="194" fg:w="2"/><text x="15.7328%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.4828%" y="421" width="0.1596%" height="15" fill="rgb(244,110,52)" fg:x="194" fg:w="2"/><text x="15.7328%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.5626%" y="405" width="0.0798%" height="15" fill="rgb(254,124,47)" fg:x="195" fg:w="1"/><text x="15.8126%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (37 samples, 2.95%)</title><rect x="12.8492%" y="485" width="2.9529%" height="15" fill="rgb(254,110,13)" fg:x="161" fg:w="37"/><text x="13.0992%" y="495.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.31%)</title><rect x="13.4876%" y="469" width="2.3144%" height="15" fill="rgb(252,57,21)" fg:x="169" fg:w="29"/><text x="13.7376%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.6425%" y="453" width="0.1596%" height="15" fill="rgb(242,60,45)" fg:x="196" fg:w="2"/><text x="15.8925%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.6425%" y="437" width="0.1596%" height="15" fill="rgb(234,49,30)" fg:x="196" fg:w="2"/><text x="15.8925%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.6425%" y="421" width="0.1596%" height="15" fill="rgb(218,98,6)" fg:x="196" fg:w="2"/><text x="15.8925%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.7223%" y="405" width="0.0798%" height="15" fill="rgb(220,174,29)" fg:x="197" fg:w="1"/><text x="15.9723%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.7223%" y="389" width="0.0798%" height="15" fill="rgb(236,163,23)" fg:x="197" fg:w="1"/><text x="15.9723%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.7223%" y="373" width="0.0798%" height="15" fill="rgb(242,114,45)" fg:x="197" fg:w="1"/><text x="15.9723%" y="383.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="15.8021%" y="437" width="0.2394%" height="15" fill="rgb(232,10,53)" fg:x="198" fg:w="3"/><text x="16.0521%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.0415%" y="437" width="0.0798%" height="15" fill="rgb(245,108,29)" fg:x="201" fg:w="1"/><text x="16.2915%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.2809%" y="421" width="0.0798%" height="15" fill="rgb(240,89,53)" fg:x="204" fg:w="1"/><text x="16.5309%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.3607%" y="421" width="0.0798%" height="15" fill="rgb(226,60,45)" fg:x="205" fg:w="1"/><text x="16.6107%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.3607%" y="405" width="0.0798%" height="15" fill="rgb(230,41,44)" fg:x="205" fg:w="1"/><text x="16.6107%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4405%" y="405" width="0.0798%" height="15" fill="rgb(230,26,20)" fg:x="206" fg:w="1"/><text x="16.6905%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.6800%" y="373" width="0.0798%" height="15" fill="rgb(237,170,32)" fg:x="209" fg:w="1"/><text x="16.9300%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.7598%" y="341" width="0.0798%" height="15" fill="rgb(212,35,42)" fg:x="210" fg:w="1"/><text x="17.0098%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5 samples, 0.40%)</title><rect x="16.5204%" y="405" width="0.3990%" height="15" fill="rgb(227,31,34)" fg:x="207" fg:w="5"/><text x="16.7704%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="16.6002%" y="389" width="0.3192%" height="15" fill="rgb(216,19,18)" fg:x="208" fg:w="4"/><text x="16.8502%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.7598%" y="373" width="0.1596%" height="15" fill="rgb(211,133,42)" fg:x="210" fg:w="2"/><text x="17.0098%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.7598%" y="357" width="0.1596%" height="15" fill="rgb(244,66,13)" fg:x="210" fg:w="2"/><text x="17.0098%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.8396%" y="341" width="0.0798%" height="15" fill="rgb(218,185,50)" fg:x="211" fg:w="1"/><text x="17.0896%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8396%" y="325" width="0.0798%" height="15" fill="rgb(219,149,13)" fg:x="211" fg:w="1"/><text x="17.0896%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="15.8021%" y="485" width="1.3567%" height="15" fill="rgb(221,125,0)" fg:x="198" fg:w="17"/><text x="16.0521%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.36%)</title><rect x="15.8021%" y="469" width="1.3567%" height="15" fill="rgb(247,126,27)" fg:x="198" fg:w="17"/><text x="16.0521%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="15.8021%" y="453" width="1.3567%" height="15" fill="rgb(250,138,30)" fg:x="198" fg:w="17"/><text x="16.0521%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="16.1213%" y="437" width="1.0375%" height="15" fill="rgb(230,151,9)" fg:x="202" fg:w="13"/><text x="16.3713%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="16.4405%" y="421" width="0.7183%" height="15" fill="rgb(233,80,38)" fg:x="206" fg:w="9"/><text x="16.6905%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="16.9194%" y="405" width="0.2394%" height="15" fill="rgb(232,68,43)" fg:x="212" fg:w="3"/><text x="17.1694%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.9992%" y="389" width="0.1596%" height="15" fill="rgb(254,5,50)" fg:x="213" fg:w="2"/><text x="17.2492%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="17.3184%" y="437" width="0.1596%" height="15" fill="rgb(225,45,5)" fg:x="217" fg:w="2"/><text x="17.5684%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="17.4781%" y="437" width="0.3990%" height="15" fill="rgb(239,22,3)" fg:x="219" fg:w="5"/><text x="17.7281%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.7175%" y="421" width="0.1596%" height="15" fill="rgb(243,129,0)" fg:x="222" fg:w="2"/><text x="17.9675%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="17.7175%" y="405" width="0.1596%" height="15" fill="rgb(223,164,0)" fg:x="222" fg:w="2"/><text x="17.9675%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="17.8771%" y="437" width="0.0798%" height="15" fill="rgb(221,46,29)" fg:x="224" fg:w="1"/><text x="18.1271%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.8771%" y="421" width="0.0798%" height="15" fill="rgb(205,97,47)" fg:x="224" fg:w="1"/><text x="18.1271%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8771%" y="405" width="0.0798%" height="15" fill="rgb(249,14,8)" fg:x="224" fg:w="1"/><text x="18.1271%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="17.9569%" y="437" width="0.0798%" height="15" fill="rgb(216,77,3)" fg:x="225" fg:w="1"/><text x="18.2069%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.9569%" y="421" width="0.0798%" height="15" fill="rgb(206,168,54)" fg:x="225" fg:w="1"/><text x="18.2069%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9569%" y="405" width="0.0798%" height="15" fill="rgb(236,3,41)" fg:x="225" fg:w="1"/><text x="18.2069%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.3559%" y="389" width="0.0798%" height="15" fill="rgb(231,132,24)" fg:x="230" fg:w="1"/><text x="18.6059%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.3559%" y="373" width="0.0798%" height="15" fill="rgb(227,221,40)" fg:x="230" fg:w="1"/><text x="18.6059%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3559%" y="357" width="0.0798%" height="15" fill="rgb(233,151,11)" fg:x="230" fg:w="1"/><text x="18.6059%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.5156%" y="341" width="0.0798%" height="15" fill="rgb(247,81,35)" fg:x="232" fg:w="1"/><text x="18.7656%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.5156%" y="325" width="0.0798%" height="15" fill="rgb(243,128,48)" fg:x="232" fg:w="1"/><text x="18.7656%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="18.4358%" y="389" width="0.2394%" height="15" fill="rgb(253,16,10)" fg:x="231" fg:w="3"/><text x="18.6858%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="18.4358%" y="373" width="0.2394%" height="15" fill="rgb(228,67,27)" fg:x="231" fg:w="3"/><text x="18.6858%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="18.4358%" y="357" width="0.2394%" height="15" fill="rgb(231,105,25)" fg:x="231" fg:w="3"/><text x="18.6858%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.5954%" y="341" width="0.0798%" height="15" fill="rgb(213,166,47)" fg:x="233" fg:w="1"/><text x="18.8454%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.5954%" y="325" width="0.0798%" height="15" fill="rgb(209,27,10)" fg:x="233" fg:w="1"/><text x="18.8454%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.7550%" y="373" width="0.0798%" height="15" fill="rgb(241,44,30)" fg:x="235" fg:w="1"/><text x="19.0050%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.8348%" y="357" width="0.1596%" height="15" fill="rgb(223,216,15)" fg:x="236" fg:w="2"/><text x="19.0848%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="18.9944%" y="341" width="0.0798%" height="15" fill="rgb(227,14,7)" fg:x="238" fg:w="1"/><text x="19.2444%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="19.1540%" y="325" width="0.3192%" height="15" fill="rgb(237,14,5)" fg:x="240" fg:w="4"/><text x="19.4040%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.2338%" y="309" width="0.2394%" height="15" fill="rgb(232,14,36)" fg:x="241" fg:w="3"/><text x="19.4838%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="19.2338%" y="293" width="0.2394%" height="15" fill="rgb(234,0,38)" fg:x="241" fg:w="3"/><text x="19.4838%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="18.8348%" y="373" width="0.7981%" height="15" fill="rgb(207,170,14)" fg:x="236" fg:w="10"/><text x="19.0848%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="18.9944%" y="357" width="0.6385%" height="15" fill="rgb(252,45,13)" fg:x="238" fg:w="8"/><text x="19.2444%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="19.0742%" y="341" width="0.5587%" height="15" fill="rgb(213,142,7)" fg:x="239" fg:w="7"/><text x="19.3242%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="19.4733%" y="325" width="0.1596%" height="15" fill="rgb(216,157,23)" fg:x="244" fg:w="2"/><text x="19.7233%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.4733%" y="309" width="0.1596%" height="15" fill="rgb(212,145,33)" fg:x="244" fg:w="2"/><text x="19.7233%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.52%)</title><rect x="18.2761%" y="405" width="1.5164%" height="15" fill="rgb(233,26,13)" fg:x="229" fg:w="19"/><text x="18.5261%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="18.6752%" y="389" width="1.1173%" height="15" fill="rgb(219,196,19)" fg:x="234" fg:w="14"/><text x="18.9252%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.6329%" y="373" width="0.1596%" height="15" fill="rgb(246,56,21)" fg:x="246" fg:w="2"/><text x="19.8829%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.68%)</title><rect x="18.2761%" y="421" width="1.6760%" height="15" fill="rgb(222,28,53)" fg:x="229" fg:w="21"/><text x="18.5261%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="19.7925%" y="405" width="0.1596%" height="15" fill="rgb(224,5,27)" fg:x="248" fg:w="2"/><text x="20.0425%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.7925%" y="389" width="0.1596%" height="15" fill="rgb(220,153,33)" fg:x="248" fg:w="2"/><text x="20.0425%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9521%" y="421" width="0.0798%" height="15" fill="rgb(226,58,19)" fg:x="250" fg:w="1"/><text x="20.2021%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1117%" y="389" width="0.0798%" height="15" fill="rgb(239,112,23)" fg:x="252" fg:w="1"/><text x="20.3617%" y="399.50"></text></g><g><title>engine::session::Session::flush (98 samples, 7.82%)</title><rect x="12.4501%" y="581" width="7.8212%" height="15" fill="rgb(251,213,20)" fg:x="156" fg:w="98"/><text x="12.7001%" y="591.50">engine::ses..</text></g><g><title>engine::session::state::State::close (96 samples, 7.66%)</title><rect x="12.6097%" y="565" width="7.6616%" height="15" fill="rgb(215,181,21)" fg:x="158" fg:w="96"/><text x="12.8597%" y="575.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (96 samples, 7.66%)</title><rect x="12.6097%" y="549" width="7.6616%" height="15" fill="rgb(240,8,35)" fg:x="158" fg:w="96"/><text x="12.8597%" y="559.50">engine::se..</text></g><g><title>core::iter::adapters::try_process (93 samples, 7.42%)</title><rect x="12.8492%" y="533" width="7.4222%" height="15" fill="rgb(232,203,3)" fg:x="161" fg:w="93"/><text x="13.0992%" y="543.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (93 samples, 7.42%)</title><rect x="12.8492%" y="517" width="7.4222%" height="15" fill="rgb(214,202,43)" fg:x="161" fg:w="93"/><text x="13.0992%" y="527.50">&lt;alloc::ve..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (93 samples, 7.42%)</title><rect x="12.8492%" y="501" width="7.4222%" height="15" fill="rgb(254,35,11)" fg:x="161" fg:w="93"/><text x="13.0992%" y="511.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (39 samples, 3.11%)</title><rect x="17.1588%" y="485" width="3.1125%" height="15" fill="rgb(239,173,13)" fg:x="215" fg:w="39"/><text x="17.4088%" y="495.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (38 samples, 3.03%)</title><rect x="17.2386%" y="469" width="3.0327%" height="15" fill="rgb(220,141,0)" fg:x="216" fg:w="38"/><text x="17.4886%" y="479.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (38 samples, 3.03%)</title><rect x="17.2386%" y="453" width="3.0327%" height="15" fill="rgb(210,98,12)" fg:x="216" fg:w="38"/><text x="17.4886%" y="463.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.23%)</title><rect x="18.0367%" y="437" width="2.2346%" height="15" fill="rgb(254,153,22)" fg:x="226" fg:w="28"/><text x="18.2867%" y="447.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="20.0319%" y="421" width="0.2394%" height="15" fill="rgb(247,223,17)" fg:x="251" fg:w="3"/><text x="20.2819%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.1117%" y="405" width="0.1596%" height="15" fill="rgb(246,56,7)" fg:x="252" fg:w="2"/><text x="20.3617%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="20.1915%" y="389" width="0.0798%" height="15" fill="rgb(240,226,12)" fg:x="253" fg:w="1"/><text x="20.4415%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="20.2713%" y="549" width="0.2394%" height="15" fill="rgb(205,87,46)" fg:x="254" fg:w="3"/><text x="20.5213%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.3512%" y="533" width="0.1596%" height="15" fill="rgb(245,214,51)" fg:x="255" fg:w="2"/><text x="20.6012%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.3512%" y="517" width="0.1596%" height="15" fill="rgb(223,172,33)" fg:x="255" fg:w="2"/><text x="20.6012%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.4310%" y="501" width="0.0798%" height="15" fill="rgb(227,203,34)" fg:x="256" fg:w="1"/><text x="20.6810%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="20.5108%" y="549" width="0.0798%" height="15" fill="rgb(248,143,44)" fg:x="257" fg:w="1"/><text x="20.7608%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="20.2713%" y="581" width="0.3990%" height="15" fill="rgb(226,162,5)" fg:x="254" fg:w="5"/><text x="20.5213%" y="591.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (5 samples, 0.40%)</title><rect x="20.2713%" y="565" width="0.3990%" height="15" fill="rgb(211,143,1)" fg:x="254" fg:w="5"/><text x="20.5213%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="20.5906%" y="549" width="0.0798%" height="15" fill="rgb(224,96,15)" fg:x="258" fg:w="1"/><text x="20.8406%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.5906%" y="533" width="0.0798%" height="15" fill="rgb(222,4,38)" fg:x="258" fg:w="1"/><text x="20.8406%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.5906%" y="517" width="0.0798%" height="15" fill="rgb(253,228,15)" fg:x="258" fg:w="1"/><text x="20.8406%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.5906%" y="501" width="0.0798%" height="15" fill="rgb(242,194,12)" fg:x="258" fg:w="1"/><text x="20.8406%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.5906%" y="485" width="0.0798%" height="15" fill="rgb(214,177,31)" fg:x="258" fg:w="1"/><text x="20.8406%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6704%" y="533" width="0.0798%" height="15" fill="rgb(226,58,51)" fg:x="259" fg:w="1"/><text x="20.9204%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6704%" y="517" width="0.0798%" height="15" fill="rgb(250,119,16)" fg:x="259" fg:w="1"/><text x="20.9204%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6704%" y="501" width="0.0798%" height="15" fill="rgb(223,128,53)" fg:x="259" fg:w="1"/><text x="20.9204%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7502%" y="533" width="0.0798%" height="15" fill="rgb(251,199,15)" fg:x="260" fg:w="1"/><text x="21.0002%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="20.6704%" y="565" width="0.2394%" height="15" fill="rgb(235,168,42)" fg:x="259" fg:w="3"/><text x="20.9204%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="20.6704%" y="549" width="0.2394%" height="15" fill="rgb(250,210,17)" fg:x="259" fg:w="3"/><text x="20.9204%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.8300%" y="533" width="0.0798%" height="15" fill="rgb(226,36,41)" fg:x="261" fg:w="1"/><text x="21.0800%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8300%" y="517" width="0.0798%" height="15" fill="rgb(225,87,10)" fg:x="261" fg:w="1"/><text x="21.0800%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.8300%" y="501" width="0.0798%" height="15" fill="rgb(228,83,9)" fg:x="261" fg:w="1"/><text x="21.0800%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8300%" y="485" width="0.0798%" height="15" fill="rgb(225,16,36)" fg:x="261" fg:w="1"/><text x="21.0800%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="20.8300%" y="469" width="0.0798%" height="15" fill="rgb(242,198,13)" fg:x="261" fg:w="1"/><text x="21.0800%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.8300%" y="453" width="0.0798%" height="15" fill="rgb(239,25,51)" fg:x="261" fg:w="1"/><text x="21.0800%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.9896%" y="501" width="0.0798%" height="15" fill="rgb(239,28,37)" fg:x="263" fg:w="1"/><text x="21.2396%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9896%" y="485" width="0.0798%" height="15" fill="rgb(234,70,17)" fg:x="263" fg:w="1"/><text x="21.2396%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.0694%" y="469" width="0.0798%" height="15" fill="rgb(231,215,53)" fg:x="264" fg:w="1"/><text x="21.3194%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="20.9098%" y="549" width="0.3192%" height="15" fill="rgb(218,140,42)" fg:x="262" fg:w="4"/><text x="21.1598%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.9896%" y="533" width="0.2394%" height="15" fill="rgb(233,227,45)" fg:x="263" fg:w="3"/><text x="21.2396%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.9896%" y="517" width="0.2394%" height="15" fill="rgb(225,189,21)" fg:x="263" fg:w="3"/><text x="21.2396%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="21.0694%" y="501" width="0.1596%" height="15" fill="rgb(237,176,54)" fg:x="264" fg:w="2"/><text x="21.3194%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.0694%" y="485" width="0.1596%" height="15" fill="rgb(215,131,46)" fg:x="264" fg:w="2"/><text x="21.3194%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.1492%" y="469" width="0.0798%" height="15" fill="rgb(218,95,20)" fg:x="265" fg:w="1"/><text x="21.3992%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1492%" y="453" width="0.0798%" height="15" fill="rgb(208,198,12)" fg:x="265" fg:w="1"/><text x="21.3992%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.1492%" y="437" width="0.0798%" height="15" fill="rgb(239,107,50)" fg:x="265" fg:w="1"/><text x="21.3992%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="21.2291%" y="533" width="0.1596%" height="15" fill="rgb(240,217,37)" fg:x="266" fg:w="2"/><text x="21.4791%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.2291%" y="517" width="0.1596%" height="15" fill="rgb(242,197,49)" fg:x="266" fg:w="2"/><text x="21.4791%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.2291%" y="501" width="0.1596%" height="15" fill="rgb(219,171,17)" fg:x="266" fg:w="2"/><text x="21.4791%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.3089%" y="485" width="0.0798%" height="15" fill="rgb(209,81,40)" fg:x="267" fg:w="1"/><text x="21.5589%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.3089%" y="469" width="0.0798%" height="15" fill="rgb(237,156,30)" fg:x="267" fg:w="1"/><text x="21.5589%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="21.3089%" y="453" width="0.0798%" height="15" fill="rgb(212,127,16)" fg:x="267" fg:w="1"/><text x="21.5589%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="21.3887%" y="517" width="0.0798%" height="15" fill="rgb(226,66,32)" fg:x="268" fg:w="1"/><text x="21.6387%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.3887%" y="501" width="0.0798%" height="15" fill="rgb(245,22,46)" fg:x="268" fg:w="1"/><text x="21.6387%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.3887%" y="485" width="0.0798%" height="15" fill="rgb(210,112,21)" fg:x="268" fg:w="1"/><text x="21.6387%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3887%" y="469" width="0.0798%" height="15" fill="rgb(207,118,39)" fg:x="268" fg:w="1"/><text x="21.6387%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="21.2291%" y="549" width="0.3192%" height="15" fill="rgb(205,206,35)" fg:x="266" fg:w="4"/><text x="21.4791%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="21.3887%" y="533" width="0.1596%" height="15" fill="rgb(222,120,2)" fg:x="268" fg:w="2"/><text x="21.6387%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4685%" y="517" width="0.0798%" height="15" fill="rgb(205,38,18)" fg:x="269" fg:w="1"/><text x="21.7185%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.4685%" y="501" width="0.0798%" height="15" fill="rgb(226,61,2)" fg:x="269" fg:w="1"/><text x="21.7185%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4685%" y="485" width="0.0798%" height="15" fill="rgb(242,161,23)" fg:x="269" fg:w="1"/><text x="21.7185%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.4685%" y="469" width="0.0798%" height="15" fill="rgb(213,13,52)" fg:x="269" fg:w="1"/><text x="21.7185%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4685%" y="453" width="0.0798%" height="15" fill="rgb(246,209,47)" fg:x="269" fg:w="1"/><text x="21.7185%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.5483%" y="501" width="0.0798%" height="15" fill="rgb(214,41,3)" fg:x="270" fg:w="1"/><text x="21.7983%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="21.5483%" y="517" width="0.1596%" height="15" fill="rgb(236,119,38)" fg:x="270" fg:w="2"/><text x="21.7983%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.6281%" y="501" width="0.0798%" height="15" fill="rgb(218,50,11)" fg:x="271" fg:w="1"/><text x="21.8781%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.6281%" y="485" width="0.0798%" height="15" fill="rgb(228,38,11)" fg:x="271" fg:w="1"/><text x="21.8781%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.6281%" y="469" width="0.0798%" height="15" fill="rgb(212,13,9)" fg:x="271" fg:w="1"/><text x="21.8781%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.6281%" y="453" width="0.0798%" height="15" fill="rgb(208,211,9)" fg:x="271" fg:w="1"/><text x="21.8781%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.6281%" y="437" width="0.0798%" height="15" fill="rgb(239,39,32)" fg:x="271" fg:w="1"/><text x="21.8781%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.6281%" y="421" width="0.0798%" height="15" fill="rgb(254,179,26)" fg:x="271" fg:w="1"/><text x="21.8781%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7079%" y="517" width="0.0798%" height="15" fill="rgb(249,165,28)" fg:x="272" fg:w="1"/><text x="21.9579%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.7877%" y="453" width="0.0798%" height="15" fill="rgb(225,59,50)" fg:x="273" fg:w="1"/><text x="22.0377%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.7877%" y="437" width="0.0798%" height="15" fill="rgb(209,122,5)" fg:x="273" fg:w="1"/><text x="22.0377%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7877%" y="421" width="0.0798%" height="15" fill="rgb(214,65,34)" fg:x="273" fg:w="1"/><text x="22.0377%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="21.5483%" y="533" width="0.3990%" height="15" fill="rgb(249,183,32)" fg:x="270" fg:w="5"/><text x="21.7983%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="21.7877%" y="517" width="0.1596%" height="15" fill="rgb(218,122,24)" fg:x="273" fg:w="2"/><text x="22.0377%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.7877%" y="501" width="0.1596%" height="15" fill="rgb(224,109,18)" fg:x="273" fg:w="2"/><text x="22.0377%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="21.7877%" y="485" width="0.1596%" height="15" fill="rgb(210,68,50)" fg:x="273" fg:w="2"/><text x="22.0377%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="21.7877%" y="469" width="0.1596%" height="15" fill="rgb(212,184,34)" fg:x="273" fg:w="2"/><text x="22.0377%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.8675%" y="453" width="0.0798%" height="15" fill="rgb(238,105,48)" fg:x="274" fg:w="1"/><text x="22.1175%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.9473%" y="501" width="0.0798%" height="15" fill="rgb(222,134,54)" fg:x="275" fg:w="1"/><text x="22.1973%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="21.9473%" y="533" width="0.1596%" height="15" fill="rgb(246,24,43)" fg:x="275" fg:w="2"/><text x="22.1973%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.9473%" y="517" width="0.1596%" height="15" fill="rgb(227,169,22)" fg:x="275" fg:w="2"/><text x="22.1973%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="22.0271%" y="501" width="0.0798%" height="15" fill="rgb(253,152,4)" fg:x="276" fg:w="1"/><text x="22.2771%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.0271%" y="485" width="0.0798%" height="15" fill="rgb(219,158,36)" fg:x="276" fg:w="1"/><text x="22.2771%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.1069%" y="501" width="0.1596%" height="15" fill="rgb(251,128,40)" fg:x="277" fg:w="2"/><text x="22.3569%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1868%" y="485" width="0.0798%" height="15" fill="rgb(254,101,39)" fg:x="278" fg:w="1"/><text x="22.4368%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.60%)</title><rect x="20.9098%" y="565" width="1.5962%" height="15" fill="rgb(221,168,40)" fg:x="262" fg:w="20"/><text x="21.1598%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.96%)</title><rect x="21.5483%" y="549" width="0.9577%" height="15" fill="rgb(221,14,27)" fg:x="270" fg:w="12"/><text x="21.7983%" y="559.50"></text></g><g><title>serde_json::value::to_value (5 samples, 0.40%)</title><rect x="22.1069%" y="533" width="0.3990%" height="15" fill="rgb(207,36,43)" fg:x="277" fg:w="5"/><text x="22.3569%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="22.1069%" y="517" width="0.3990%" height="15" fill="rgb(240,172,53)" fg:x="277" fg:w="5"/><text x="22.3569%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="22.2666%" y="501" width="0.2394%" height="15" fill="rgb(241,138,43)" fg:x="279" fg:w="3"/><text x="22.5166%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="22.3464%" y="485" width="0.1596%" height="15" fill="rgb(227,78,19)" fg:x="280" fg:w="2"/><text x="22.5964%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="22.3464%" y="469" width="0.1596%" height="15" fill="rgb(215,127,44)" fg:x="280" fg:w="2"/><text x="22.5964%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="22.3464%" y="453" width="0.1596%" height="15" fill="rgb(227,13,10)" fg:x="280" fg:w="2"/><text x="22.5964%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.4262%" y="437" width="0.0798%" height="15" fill="rgb(249,177,6)" fg:x="281" fg:w="1"/><text x="22.6762%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.4262%" y="421" width="0.0798%" height="15" fill="rgb(215,154,26)" fg:x="281" fg:w="1"/><text x="22.6762%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.4262%" y="405" width="0.0798%" height="15" fill="rgb(250,168,20)" fg:x="281" fg:w="1"/><text x="22.6762%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4262%" y="389" width="0.0798%" height="15" fill="rgb(222,53,38)" fg:x="281" fg:w="1"/><text x="22.6762%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4262%" y="373" width="0.0798%" height="15" fill="rgb(245,154,5)" fg:x="281" fg:w="1"/><text x="22.6762%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5858%" y="533" width="0.0798%" height="15" fill="rgb(214,89,50)" fg:x="283" fg:w="1"/><text x="22.8358%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5858%" y="517" width="0.0798%" height="15" fill="rgb(232,73,14)" fg:x="283" fg:w="1"/><text x="22.8358%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="22.5060%" y="549" width="0.2394%" height="15" fill="rgb(230,101,20)" fg:x="282" fg:w="3"/><text x="22.7560%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.6656%" y="533" width="0.0798%" height="15" fill="rgb(208,56,28)" fg:x="284" fg:w="1"/><text x="22.9156%" y="543.50"></text></g><g><title>plugins_core::build::Build::save (27 samples, 2.15%)</title><rect x="20.6704%" y="581" width="2.1548%" height="15" fill="rgb(247,205,22)" fg:x="259" fg:w="27"/><text x="20.9204%" y="591.50">p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="22.5060%" y="565" width="0.3192%" height="15" fill="rgb(252,109,51)" fg:x="282" fg:w="4"/><text x="22.7560%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7454%" y="549" width="0.0798%" height="15" fill="rgb(220,40,24)" fg:x="285" fg:w="1"/><text x="22.9954%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7454%" y="533" width="0.0798%" height="15" fill="rgb(251,108,7)" fg:x="285" fg:w="1"/><text x="22.9954%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.7454%" y="517" width="0.0798%" height="15" fill="rgb(238,102,51)" fg:x="285" fg:w="1"/><text x="22.9954%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.7454%" y="501" width="0.0798%" height="15" fill="rgb(219,149,34)" fg:x="285" fg:w="1"/><text x="22.9954%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.7454%" y="485" width="0.0798%" height="15" fill="rgb(239,70,0)" fg:x="285" fg:w="1"/><text x="22.9954%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.7454%" y="469" width="0.0798%" height="15" fill="rgb(246,214,23)" fg:x="285" fg:w="1"/><text x="22.9954%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.7454%" y="453" width="0.0798%" height="15" fill="rgb(239,221,51)" fg:x="285" fg:w="1"/><text x="22.9954%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.7454%" y="437" width="0.0798%" height="15" fill="rgb(254,62,14)" fg:x="285" fg:w="1"/><text x="22.9954%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.7454%" y="421" width="0.0798%" height="15" fill="rgb(253,57,33)" fg:x="285" fg:w="1"/><text x="22.9954%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.7454%" y="405" width="0.0798%" height="15" fill="rgb(229,34,6)" fg:x="285" fg:w="1"/><text x="22.9954%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.7454%" y="389" width="0.0798%" height="15" fill="rgb(235,191,23)" fg:x="285" fg:w="1"/><text x="22.9954%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.7454%" y="373" width="0.0798%" height="15" fill="rgb(217,207,27)" fg:x="285" fg:w="1"/><text x="22.9954%" y="383.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="22.8252%" y="549" width="0.0798%" height="15" fill="rgb(232,41,44)" fg:x="286" fg:w="1"/><text x="23.0752%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="22.8252%" y="533" width="0.0798%" height="15" fill="rgb(221,188,19)" fg:x="286" fg:w="1"/><text x="23.0752%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.8252%" y="517" width="0.0798%" height="15" fill="rgb(245,180,45)" fg:x="286" fg:w="1"/><text x="23.0752%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9050%" y="501" width="0.0798%" height="15" fill="rgb(250,220,42)" fg:x="287" fg:w="1"/><text x="23.1550%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9050%" y="485" width="0.0798%" height="15" fill="rgb(234,16,34)" fg:x="287" fg:w="1"/><text x="23.1550%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9050%" y="469" width="0.0798%" height="15" fill="rgb(233,217,23)" fg:x="287" fg:w="1"/><text x="23.1550%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9050%" y="453" width="0.0798%" height="15" fill="rgb(209,22,46)" fg:x="287" fg:w="1"/><text x="23.1550%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9050%" y="437" width="0.0798%" height="15" fill="rgb(213,101,18)" fg:x="287" fg:w="1"/><text x="23.1550%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (3 samples, 0.24%)</title><rect x="22.8252%" y="581" width="0.2394%" height="15" fill="rgb(215,179,52)" fg:x="286" fg:w="3"/><text x="23.0752%" y="591.50"></text></g><g><title>plugins_core::tools::set_quantity (3 samples, 0.24%)</title><rect x="22.8252%" y="565" width="0.2394%" height="15" fill="rgb(223,50,25)" fg:x="286" fg:w="3"/><text x="23.0752%" y="575.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="22.9050%" y="549" width="0.1596%" height="15" fill="rgb(224,51,44)" fg:x="287" fg:w="2"/><text x="23.1550%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (2 samples, 0.16%)</title><rect x="22.9050%" y="533" width="0.1596%" height="15" fill="rgb(224,13,54)" fg:x="287" fg:w="2"/><text x="23.1550%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.9050%" y="517" width="0.1596%" height="15" fill="rgb(219,58,47)" fg:x="287" fg:w="2"/><text x="23.1550%" y="527.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;f32&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="22.9848%" y="501" width="0.0798%" height="15" fill="rgb(246,124,34)" fg:x="288" fg:w="1"/><text x="23.2348%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0646%" y="485" width="0.0798%" height="15" fill="rgb(245,109,25)" fg:x="289" fg:w="1"/><text x="23.3146%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="23.1445%" y="421" width="0.0798%" height="15" fill="rgb(235,48,23)" fg:x="290" fg:w="1"/><text x="23.3945%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2243%" y="421" width="0.0798%" height="15" fill="rgb(229,203,36)" fg:x="291" fg:w="1"/><text x="23.4743%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="23.0646%" y="549" width="0.3192%" height="15" fill="rgb(234,180,9)" fg:x="289" fg:w="4"/><text x="23.3146%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="23.0646%" y="533" width="0.3192%" height="15" fill="rgb(228,98,45)" fg:x="289" fg:w="4"/><text x="23.3146%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="23.0646%" y="517" width="0.3192%" height="15" fill="rgb(240,24,36)" fg:x="289" fg:w="4"/><text x="23.3146%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="23.0646%" y="501" width="0.3192%" height="15" fill="rgb(227,154,19)" fg:x="289" fg:w="4"/><text x="23.3146%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="23.1445%" y="485" width="0.2394%" height="15" fill="rgb(231,2,48)" fg:x="290" fg:w="3"/><text x="23.3945%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.1445%" y="469" width="0.2394%" height="15" fill="rgb(219,216,0)" fg:x="290" fg:w="3"/><text x="23.3945%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="23.1445%" y="453" width="0.2394%" height="15" fill="rgb(251,88,0)" fg:x="290" fg:w="3"/><text x="23.3945%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.1445%" y="437" width="0.2394%" height="15" fill="rgb(242,45,45)" fg:x="290" fg:w="3"/><text x="23.3945%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.3041%" y="421" width="0.0798%" height="15" fill="rgb(218,149,45)" fg:x="292" fg:w="1"/><text x="23.5541%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.3041%" y="405" width="0.0798%" height="15" fill="rgb(247,194,10)" fg:x="292" fg:w="1"/><text x="23.5541%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="23.3839%" y="533" width="0.0798%" height="15" fill="rgb(234,33,37)" fg:x="293" fg:w="1"/><text x="23.6339%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="23.3839%" y="549" width="0.2394%" height="15" fill="rgb(218,61,13)" fg:x="293" fg:w="3"/><text x="23.6339%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="23.4637%" y="533" width="0.1596%" height="15" fill="rgb(210,80,52)" fg:x="294" fg:w="2"/><text x="23.7137%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5435%" y="517" width="0.0798%" height="15" fill="rgb(218,203,27)" fg:x="295" fg:w="1"/><text x="23.7935%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.5435%" y="501" width="0.0798%" height="15" fill="rgb(209,126,33)" fg:x="295" fg:w="1"/><text x="23.7935%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="23.5435%" y="485" width="0.0798%" height="15" fill="rgb(234,173,41)" fg:x="295" fg:w="1"/><text x="23.7935%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="23.6233%" y="533" width="0.2394%" height="15" fill="rgb(228,166,9)" fg:x="296" fg:w="3"/><text x="23.8733%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="23.6233%" y="517" width="0.2394%" height="15" fill="rgb(208,124,43)" fg:x="296" fg:w="3"/><text x="23.8733%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.6233%" y="501" width="0.2394%" height="15" fill="rgb(212,154,38)" fg:x="296" fg:w="3"/><text x="23.8733%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7829%" y="485" width="0.0798%" height="15" fill="rgb(246,179,35)" fg:x="298" fg:w="1"/><text x="24.0329%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7829%" y="469" width="0.0798%" height="15" fill="rgb(251,3,50)" fg:x="298" fg:w="1"/><text x="24.0329%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7829%" y="453" width="0.0798%" height="15" fill="rgb(219,96,8)" fg:x="298" fg:w="1"/><text x="24.0329%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7829%" y="437" width="0.0798%" height="15" fill="rgb(251,216,33)" fg:x="298" fg:w="1"/><text x="24.0329%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="23.8627%" y="533" width="0.0798%" height="15" fill="rgb(243,145,29)" fg:x="299" fg:w="1"/><text x="24.1127%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9425%" y="469" width="0.0798%" height="15" fill="rgb(210,75,20)" fg:x="300" fg:w="1"/><text x="24.1925%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9425%" y="453" width="0.0798%" height="15" fill="rgb(235,56,8)" fg:x="300" fg:w="1"/><text x="24.1925%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0223%" y="469" width="0.0798%" height="15" fill="rgb(226,175,49)" fg:x="301" fg:w="1"/><text x="24.2723%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0223%" y="453" width="0.0798%" height="15" fill="rgb(242,204,23)" fg:x="301" fg:w="1"/><text x="24.2723%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0223%" y="437" width="0.0798%" height="15" fill="rgb(225,104,24)" fg:x="301" fg:w="1"/><text x="24.2723%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.0223%" y="421" width="0.0798%" height="15" fill="rgb(253,34,1)" fg:x="301" fg:w="1"/><text x="24.2723%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.0223%" y="405" width="0.0798%" height="15" fill="rgb(233,199,23)" fg:x="301" fg:w="1"/><text x="24.2723%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.0223%" y="389" width="0.0798%" height="15" fill="rgb(247,7,51)" fg:x="301" fg:w="1"/><text x="24.2723%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.0223%" y="373" width="0.0798%" height="15" fill="rgb(214,146,12)" fg:x="301" fg:w="1"/><text x="24.2723%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.0223%" y="357" width="0.0798%" height="15" fill="rgb(234,181,43)" fg:x="301" fg:w="1"/><text x="24.2723%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.1022%" y="437" width="0.0798%" height="15" fill="rgb(239,148,6)" fg:x="302" fg:w="1"/><text x="24.3522%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="23.9425%" y="501" width="0.3192%" height="15" fill="rgb(206,151,17)" fg:x="300" fg:w="4"/><text x="24.1925%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="23.9425%" y="485" width="0.3192%" height="15" fill="rgb(213,215,10)" fg:x="300" fg:w="4"/><text x="24.1925%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.1022%" y="469" width="0.1596%" height="15" fill="rgb(215,220,44)" fg:x="302" fg:w="2"/><text x="24.3522%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.1022%" y="453" width="0.1596%" height="15" fill="rgb(245,205,37)" fg:x="302" fg:w="2"/><text x="24.3522%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.1820%" y="437" width="0.0798%" height="15" fill="rgb(245,130,43)" fg:x="303" fg:w="1"/><text x="24.4320%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1820%" y="421" width="0.0798%" height="15" fill="rgb(231,227,38)" fg:x="303" fg:w="1"/><text x="24.4320%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.1820%" y="405" width="0.0798%" height="15" fill="rgb(233,185,4)" fg:x="303" fg:w="1"/><text x="24.4320%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1820%" y="389" width="0.0798%" height="15" fill="rgb(224,154,43)" fg:x="303" fg:w="1"/><text x="24.4320%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.2618%" y="469" width="0.1596%" height="15" fill="rgb(235,156,15)" fg:x="304" fg:w="2"/><text x="24.5118%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3416%" y="453" width="0.0798%" height="15" fill="rgb(211,55,43)" fg:x="305" fg:w="1"/><text x="24.5916%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3416%" y="437" width="0.0798%" height="15" fill="rgb(247,149,40)" fg:x="305" fg:w="1"/><text x="24.5916%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="23.6233%" y="549" width="0.8779%" height="15" fill="rgb(232,171,16)" fg:x="296" fg:w="11"/><text x="23.8733%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (7 samples, 0.56%)</title><rect x="23.9425%" y="533" width="0.5587%" height="15" fill="rgb(215,117,49)" fg:x="300" fg:w="7"/><text x="24.1925%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="23.9425%" y="517" width="0.5587%" height="15" fill="rgb(246,194,11)" fg:x="300" fg:w="7"/><text x="24.1925%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="24.2618%" y="501" width="0.2394%" height="15" fill="rgb(242,101,44)" fg:x="304" fg:w="3"/><text x="24.5118%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="24.2618%" y="485" width="0.2394%" height="15" fill="rgb(226,174,6)" fg:x="304" fg:w="3"/><text x="24.5118%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.4214%" y="469" width="0.0798%" height="15" fill="rgb(213,150,20)" fg:x="306" fg:w="1"/><text x="24.6714%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4214%" y="453" width="0.0798%" height="15" fill="rgb(222,124,42)" fg:x="306" fg:w="1"/><text x="24.6714%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.4214%" y="437" width="0.0798%" height="15" fill="rgb(250,19,47)" fg:x="306" fg:w="1"/><text x="24.6714%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4214%" y="421" width="0.0798%" height="15" fill="rgb(241,217,19)" fg:x="306" fg:w="1"/><text x="24.6714%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="24.4214%" y="405" width="0.0798%" height="15" fill="rgb(207,210,34)" fg:x="306" fg:w="1"/><text x="24.6714%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="24.5810%" y="469" width="0.0798%" height="15" fill="rgb(244,45,4)" fg:x="308" fg:w="1"/><text x="24.8310%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (21 samples, 1.68%)</title><rect x="23.0646%" y="581" width="1.6760%" height="15" fill="rgb(252,134,50)" fg:x="289" fg:w="21"/><text x="23.3146%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (21 samples, 1.68%)</title><rect x="23.0646%" y="565" width="1.6760%" height="15" fill="rgb(238,74,2)" fg:x="289" fg:w="21"/><text x="23.3146%" y="575.50"></text></g><g><title>plugins_core::location::model::Location::set (3 samples, 0.24%)</title><rect x="24.5012%" y="549" width="0.2394%" height="15" fill="rgb(226,58,46)" fg:x="307" fg:w="3"/><text x="24.7512%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="24.5012%" y="533" width="0.2394%" height="15" fill="rgb(232,83,35)" fg:x="307" fg:w="3"/><text x="24.7512%" y="543.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="24.5810%" y="517" width="0.1596%" height="15" fill="rgb(212,148,47)" fg:x="308" fg:w="2"/><text x="24.8310%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.5810%" y="501" width="0.1596%" height="15" fill="rgb(235,29,1)" fg:x="308" fg:w="2"/><text x="24.8310%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="24.5810%" y="485" width="0.1596%" height="15" fill="rgb(247,55,37)" fg:x="308" fg:w="2"/><text x="24.8310%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.6608%" y="469" width="0.0798%" height="15" fill="rgb(222,48,3)" fg:x="309" fg:w="1"/><text x="24.9108%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6608%" y="453" width="0.0798%" height="15" fill="rgb(234,21,33)" fg:x="309" fg:w="1"/><text x="24.9108%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="24.7406%" y="565" width="0.1596%" height="15" fill="rgb(247,178,53)" fg:x="310" fg:w="2"/><text x="24.9906%" y="575.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="24.8204%" y="549" width="0.0798%" height="15" fill="rgb(225,75,7)" fg:x="311" fg:w="1"/><text x="25.0704%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.8204%" y="533" width="0.0798%" height="15" fill="rgb(219,199,7)" fg:x="311" fg:w="1"/><text x="25.0704%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9002%" y="549" width="0.0798%" height="15" fill="rgb(209,93,42)" fg:x="312" fg:w="1"/><text x="25.1502%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.9002%" y="533" width="0.0798%" height="15" fill="rgb(240,175,17)" fg:x="312" fg:w="1"/><text x="25.1502%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="24.9002%" y="565" width="0.1596%" height="15" fill="rgb(232,106,7)" fg:x="312" fg:w="2"/><text x="25.1502%" y="575.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="24.9800%" y="549" width="0.0798%" height="15" fill="rgb(242,106,43)" fg:x="313" fg:w="1"/><text x="25.2300%" y="559.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="24.9800%" y="533" width="0.0798%" height="15" fill="rgb(242,61,37)" fg:x="313" fg:w="1"/><text x="25.2300%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.9800%" y="517" width="0.0798%" height="15" fill="rgb(205,72,10)" fg:x="313" fg:w="1"/><text x="25.2300%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.9800%" y="501" width="0.0798%" height="15" fill="rgb(214,184,36)" fg:x="313" fg:w="1"/><text x="25.2300%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9800%" y="485" width="0.0798%" height="15" fill="rgb(206,107,18)" fg:x="313" fg:w="1"/><text x="25.2300%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9800%" y="469" width="0.0798%" height="15" fill="rgb(210,75,5)" fg:x="313" fg:w="1"/><text x="25.2300%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="25.1397%" y="469" width="0.0798%" height="15" fill="rgb(205,3,19)" fg:x="315" fg:w="1"/><text x="25.3897%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1397%" y="453" width="0.0798%" height="15" fill="rgb(207,181,42)" fg:x="315" fg:w="1"/><text x="25.3897%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1397%" y="437" width="0.0798%" height="15" fill="rgb(229,179,43)" fg:x="315" fg:w="1"/><text x="25.3897%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1397%" y="421" width="0.0798%" height="15" fill="rgb(246,95,30)" fg:x="315" fg:w="1"/><text x="25.3897%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.1397%" y="405" width="0.0798%" height="15" fill="rgb(234,144,45)" fg:x="315" fg:w="1"/><text x="25.3897%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.1397%" y="389" width="0.0798%" height="15" fill="rgb(250,54,25)" fg:x="315" fg:w="1"/><text x="25.3897%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.1397%" y="373" width="0.0798%" height="15" fill="rgb(215,195,40)" fg:x="315" fg:w="1"/><text x="25.3897%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1397%" y="357" width="0.0798%" height="15" fill="rgb(233,188,42)" fg:x="315" fg:w="1"/><text x="25.3897%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1397%" y="341" width="0.0798%" height="15" fill="rgb(247,227,35)" fg:x="315" fg:w="1"/><text x="25.3897%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.1397%" y="325" width="0.0798%" height="15" fill="rgb(249,124,27)" fg:x="315" fg:w="1"/><text x="25.3897%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.1397%" y="309" width="0.0798%" height="15" fill="rgb(219,207,25)" fg:x="315" fg:w="1"/><text x="25.3897%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.1397%" y="293" width="0.0798%" height="15" fill="rgb(241,216,47)" fg:x="315" fg:w="1"/><text x="25.3897%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.1397%" y="277" width="0.0798%" height="15" fill="rgb(233,82,50)" fg:x="315" fg:w="1"/><text x="25.3897%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1397%" y="261" width="0.0798%" height="15" fill="rgb(232,63,2)" fg:x="315" fg:w="1"/><text x="25.3897%" y="271.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="25.1397%" y="485" width="0.1596%" height="15" fill="rgb(236,184,28)" fg:x="315" fg:w="2"/><text x="25.3897%" y="495.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="25.2195%" y="469" width="0.0798%" height="15" fill="rgb(254,63,27)" fg:x="316" fg:w="1"/><text x="25.4695%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.2993%" y="453" width="0.0798%" height="15" fill="rgb(253,106,28)" fg:x="317" fg:w="1"/><text x="25.5493%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.2993%" y="437" width="0.0798%" height="15" fill="rgb(225,141,39)" fg:x="317" fg:w="1"/><text x="25.5493%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2993%" y="421" width="0.0798%" height="15" fill="rgb(222,157,20)" fg:x="317" fg:w="1"/><text x="25.5493%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.3791%" y="453" width="0.0798%" height="15" fill="rgb(210,190,9)" fg:x="318" fg:w="1"/><text x="25.6291%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="25.0599%" y="565" width="0.4789%" height="15" fill="rgb(242,167,7)" fg:x="314" fg:w="6"/><text x="25.3099%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="25.1397%" y="549" width="0.3990%" height="15" fill="rgb(227,82,41)" fg:x="315" fg:w="5"/><text x="25.3897%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="25.1397%" y="533" width="0.3990%" height="15" fill="rgb(222,131,13)" fg:x="315" fg:w="5"/><text x="25.3897%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.40%)</title><rect x="25.1397%" y="517" width="0.3990%" height="15" fill="rgb(221,98,26)" fg:x="315" fg:w="5"/><text x="25.3897%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="25.1397%" y="501" width="0.3990%" height="15" fill="rgb(251,63,52)" fg:x="315" fg:w="5"/><text x="25.3897%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="25.2993%" y="485" width="0.2394%" height="15" fill="rgb(246,25,43)" fg:x="317" fg:w="3"/><text x="25.5493%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="25.2993%" y="469" width="0.2394%" height="15" fill="rgb(247,167,15)" fg:x="317" fg:w="3"/><text x="25.5493%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4589%" y="453" width="0.0798%" height="15" fill="rgb(240,104,42)" fg:x="319" fg:w="1"/><text x="25.7089%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4589%" y="437" width="0.0798%" height="15" fill="rgb(224,54,6)" fg:x="319" fg:w="1"/><text x="25.7089%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.4589%" y="421" width="0.0798%" height="15" fill="rgb(244,108,35)" fg:x="319" fg:w="1"/><text x="25.7089%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4589%" y="405" width="0.0798%" height="15" fill="rgb(216,154,2)" fg:x="319" fg:w="1"/><text x="25.7089%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4589%" y="389" width="0.0798%" height="15" fill="rgb(222,8,47)" fg:x="319" fg:w="1"/><text x="25.7089%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4589%" y="373" width="0.0798%" height="15" fill="rgb(252,93,1)" fg:x="319" fg:w="1"/><text x="25.7089%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.5387%" y="533" width="0.0798%" height="15" fill="rgb(223,226,51)" fg:x="320" fg:w="1"/><text x="25.7887%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.6983%" y="501" width="0.0798%" height="15" fill="rgb(206,147,9)" fg:x="322" fg:w="1"/><text x="25.9483%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (5 samples, 0.40%)</title><rect x="25.5387%" y="549" width="0.3990%" height="15" fill="rgb(248,180,41)" fg:x="320" fg:w="5"/><text x="25.7887%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="25.6185%" y="533" width="0.3192%" height="15" fill="rgb(209,47,50)" fg:x="321" fg:w="4"/><text x="25.8685%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="25.6983%" y="517" width="0.2394%" height="15" fill="rgb(243,65,31)" fg:x="322" fg:w="3"/><text x="25.9483%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="25.7781%" y="501" width="0.1596%" height="15" fill="rgb(228,128,1)" fg:x="323" fg:w="2"/><text x="26.0281%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0176%" y="373" width="0.0798%" height="15" fill="rgb(231,192,16)" fg:x="326" fg:w="1"/><text x="26.2676%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0176%" y="357" width="0.0798%" height="15" fill="rgb(224,26,40)" fg:x="326" fg:w="1"/><text x="26.2676%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.0176%" y="341" width="0.0798%" height="15" fill="rgb(214,192,17)" fg:x="326" fg:w="1"/><text x="26.2676%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.0176%" y="325" width="0.0798%" height="15" fill="rgb(225,147,18)" fg:x="326" fg:w="1"/><text x="26.2676%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.0176%" y="309" width="0.0798%" height="15" fill="rgb(205,35,11)" fg:x="326" fg:w="1"/><text x="26.2676%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.0176%" y="293" width="0.0798%" height="15" fill="rgb(242,40,42)" fg:x="326" fg:w="1"/><text x="26.2676%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0176%" y="277" width="0.0798%" height="15" fill="rgb(250,170,13)" fg:x="326" fg:w="1"/><text x="26.2676%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.0176%" y="453" width="0.1596%" height="15" fill="rgb(240,161,28)" fg:x="326" fg:w="2"/><text x="26.2676%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.0176%" y="437" width="0.1596%" height="15" fill="rgb(245,179,12)" fg:x="326" fg:w="2"/><text x="26.2676%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="26.0176%" y="421" width="0.1596%" height="15" fill="rgb(250,92,32)" fg:x="326" fg:w="2"/><text x="26.2676%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="26.0176%" y="405" width="0.1596%" height="15" fill="rgb(233,10,40)" fg:x="326" fg:w="2"/><text x="26.2676%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="26.0176%" y="389" width="0.1596%" height="15" fill="rgb(217,98,1)" fg:x="326" fg:w="2"/><text x="26.2676%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.0974%" y="373" width="0.0798%" height="15" fill="rgb(238,202,7)" fg:x="327" fg:w="1"/><text x="26.3474%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.0974%" y="357" width="0.0798%" height="15" fill="rgb(222,91,3)" fg:x="327" fg:w="1"/><text x="26.3474%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="25.9377%" y="501" width="0.3192%" height="15" fill="rgb(211,170,49)" fg:x="325" fg:w="4"/><text x="26.1877%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="25.9377%" y="485" width="0.3192%" height="15" fill="rgb(253,139,18)" fg:x="325" fg:w="4"/><text x="26.1877%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (4 samples, 0.32%)</title><rect x="25.9377%" y="469" width="0.3192%" height="15" fill="rgb(222,4,43)" fg:x="325" fg:w="4"/><text x="26.1877%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="26.1772%" y="453" width="0.0798%" height="15" fill="rgb(207,205,12)" fg:x="328" fg:w="1"/><text x="26.4272%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.1772%" y="437" width="0.0798%" height="15" fill="rgb(216,159,46)" fg:x="328" fg:w="1"/><text x="26.4272%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1772%" y="421" width="0.0798%" height="15" fill="rgb(236,115,1)" fg:x="328" fg:w="1"/><text x="26.4272%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.2570%" y="469" width="0.0798%" height="15" fill="rgb(251,35,33)" fg:x="329" fg:w="1"/><text x="26.5070%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.2570%" y="453" width="0.0798%" height="15" fill="rgb(248,62,51)" fg:x="329" fg:w="1"/><text x="26.5070%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.2570%" y="437" width="0.0798%" height="15" fill="rgb(254,180,19)" fg:x="329" fg:w="1"/><text x="26.5070%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="26.3368%" y="453" width="0.0798%" height="15" fill="rgb(217,100,32)" fg:x="330" fg:w="1"/><text x="26.5868%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="26.3368%" y="437" width="0.0798%" height="15" fill="rgb(224,71,22)" fg:x="330" fg:w="1"/><text x="26.5868%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.3368%" y="421" width="0.0798%" height="15" fill="rgb(251,185,33)" fg:x="330" fg:w="1"/><text x="26.5868%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.3368%" y="405" width="0.0798%" height="15" fill="rgb(209,75,48)" fg:x="330" fg:w="1"/><text x="26.5868%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.3368%" y="389" width="0.0798%" height="15" fill="rgb(253,190,16)" fg:x="330" fg:w="1"/><text x="26.5868%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.3368%" y="373" width="0.0798%" height="15" fill="rgb(226,140,1)" fg:x="330" fg:w="1"/><text x="26.5868%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.3368%" y="357" width="0.0798%" height="15" fill="rgb(206,75,30)" fg:x="330" fg:w="1"/><text x="26.5868%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3368%" y="341" width="0.0798%" height="15" fill="rgb(231,208,37)" fg:x="330" fg:w="1"/><text x="26.5868%" y="351.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="26.8156%" y="325" width="0.0798%" height="15" fill="rgb(238,136,40)" fg:x="336" fg:w="1"/><text x="27.0656%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="26.4964%" y="421" width="0.5587%" height="15" fill="rgb(247,137,17)" fg:x="332" fg:w="7"/><text x="26.7464%" y="431.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="26.4964%" y="405" width="0.5587%" height="15" fill="rgb(240,60,40)" fg:x="332" fg:w="7"/><text x="26.7464%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="26.6560%" y="389" width="0.3990%" height="15" fill="rgb(236,68,50)" fg:x="334" fg:w="5"/><text x="26.9060%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="26.7358%" y="373" width="0.3192%" height="15" fill="rgb(230,42,12)" fg:x="335" fg:w="4"/><text x="26.9858%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="26.8156%" y="357" width="0.2394%" height="15" fill="rgb(219,16,16)" fg:x="336" fg:w="3"/><text x="27.0656%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="26.8156%" y="341" width="0.2394%" height="15" fill="rgb(220,38,35)" fg:x="336" fg:w="3"/><text x="27.0656%" y="351.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="26.8955%" y="325" width="0.1596%" height="15" fill="rgb(228,33,1)" fg:x="337" fg:w="2"/><text x="27.1455%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="26.4964%" y="437" width="0.6385%" height="15" fill="rgb(241,46,31)" fg:x="332" fg:w="8"/><text x="26.7464%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.0551%" y="421" width="0.0798%" height="15" fill="rgb(232,58,20)" fg:x="339" fg:w="1"/><text x="27.3051%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.2147%" y="421" width="0.0798%" height="15" fill="rgb(206,228,53)" fg:x="341" fg:w="1"/><text x="27.4647%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.2945%" y="421" width="0.0798%" height="15" fill="rgb(206,88,33)" fg:x="342" fg:w="1"/><text x="27.5445%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.2945%" y="405" width="0.0798%" height="15" fill="rgb(238,69,7)" fg:x="342" fg:w="1"/><text x="27.5445%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.2945%" y="389" width="0.0798%" height="15" fill="rgb(250,21,46)" fg:x="342" fg:w="1"/><text x="27.5445%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="27.3743%" y="421" width="0.2394%" height="15" fill="rgb(215,212,21)" fg:x="343" fg:w="3"/><text x="27.6243%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.5339%" y="405" width="0.0798%" height="15" fill="rgb(211,35,12)" fg:x="345" fg:w="1"/><text x="27.7839%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.5339%" y="389" width="0.0798%" height="15" fill="rgb(231,184,16)" fg:x="345" fg:w="1"/><text x="27.7839%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="27.7733%" y="373" width="0.0798%" height="15" fill="rgb(242,140,15)" fg:x="348" fg:w="1"/><text x="28.0233%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.7733%" y="357" width="0.0798%" height="15" fill="rgb(220,37,14)" fg:x="348" fg:w="1"/><text x="28.0233%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.7733%" y="341" width="0.0798%" height="15" fill="rgb(223,146,22)" fg:x="348" fg:w="1"/><text x="28.0233%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.7733%" y="325" width="0.0798%" height="15" fill="rgb(216,132,15)" fg:x="348" fg:w="1"/><text x="28.0233%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="27.8532%" y="357" width="0.1596%" height="15" fill="rgb(248,83,5)" fg:x="349" fg:w="2"/><text x="28.1032%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.8532%" y="341" width="0.1596%" height="15" fill="rgb(231,206,48)" fg:x="349" fg:w="2"/><text x="28.1032%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.8532%" y="325" width="0.1596%" height="15" fill="rgb(253,185,37)" fg:x="349" fg:w="2"/><text x="28.1032%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.9330%" y="309" width="0.0798%" height="15" fill="rgb(208,21,44)" fg:x="350" fg:w="1"/><text x="28.1830%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.0128%" y="341" width="0.0798%" height="15" fill="rgb(236,125,4)" fg:x="351" fg:w="1"/><text x="28.2628%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.0128%" y="325" width="0.0798%" height="15" fill="rgb(226,134,25)" fg:x="351" fg:w="1"/><text x="28.2628%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="27.8532%" y="373" width="0.3192%" height="15" fill="rgb(250,201,12)" fg:x="349" fg:w="4"/><text x="28.1032%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="28.0128%" y="357" width="0.1596%" height="15" fill="rgb(225,92,18)" fg:x="351" fg:w="2"/><text x="28.2628%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.0926%" y="341" width="0.0798%" height="15" fill="rgb(227,35,22)" fg:x="352" fg:w="1"/><text x="28.3426%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.0926%" y="325" width="0.0798%" height="15" fill="rgb(214,180,52)" fg:x="352" fg:w="1"/><text x="28.3426%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.0926%" y="309" width="0.0798%" height="15" fill="rgb(233,55,38)" fg:x="352" fg:w="1"/><text x="28.3426%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="27.6935%" y="405" width="0.5587%" height="15" fill="rgb(249,171,43)" fg:x="347" fg:w="7"/><text x="27.9435%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="27.6935%" y="389" width="0.5587%" height="15" fill="rgb(239,87,2)" fg:x="347" fg:w="7"/><text x="27.9435%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.1724%" y="373" width="0.0798%" height="15" fill="rgb(248,141,5)" fg:x="353" fg:w="1"/><text x="28.4224%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.4118%" y="357" width="0.0798%" height="15" fill="rgb(238,33,42)" fg:x="356" fg:w="1"/><text x="28.6618%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="28.2522%" y="405" width="0.3192%" height="15" fill="rgb(231,57,19)" fg:x="354" fg:w="4"/><text x="28.5022%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.3320%" y="389" width="0.2394%" height="15" fill="rgb(214,78,53)" fg:x="355" fg:w="3"/><text x="28.5820%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.4118%" y="373" width="0.1596%" height="15" fill="rgb(206,132,29)" fg:x="356" fg:w="2"/><text x="28.6618%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.4916%" y="357" width="0.0798%" height="15" fill="rgb(248,174,31)" fg:x="357" fg:w="1"/><text x="28.7416%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.7310%" y="389" width="0.0798%" height="15" fill="rgb(221,87,13)" fg:x="360" fg:w="1"/><text x="28.9810%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.7310%" y="373" width="0.0798%" height="15" fill="rgb(223,197,17)" fg:x="360" fg:w="1"/><text x="28.9810%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.7310%" y="357" width="0.0798%" height="15" fill="rgb(220,144,50)" fg:x="360" fg:w="1"/><text x="28.9810%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.9705%" y="373" width="0.0798%" height="15" fill="rgb(244,201,11)" fg:x="363" fg:w="1"/><text x="29.2205%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="29.0503%" y="373" width="0.3192%" height="15" fill="rgb(249,81,34)" fg:x="364" fg:w="4"/><text x="29.3003%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.1301%" y="357" width="0.2394%" height="15" fill="rgb(205,161,12)" fg:x="365" fg:w="3"/><text x="29.3801%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.2099%" y="341" width="0.1596%" height="15" fill="rgb(252,139,50)" fg:x="366" fg:w="2"/><text x="29.4599%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.2099%" y="325" width="0.1596%" height="15" fill="rgb(205,169,14)" fg:x="366" fg:w="2"/><text x="29.4599%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="29.2099%" y="309" width="0.1596%" height="15" fill="rgb(248,198,33)" fg:x="366" fg:w="2"/><text x="29.4599%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="29.2099%" y="293" width="0.1596%" height="15" fill="rgb(236,23,21)" fg:x="366" fg:w="2"/><text x="29.4599%" y="303.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="29.2099%" y="277" width="0.1596%" height="15" fill="rgb(231,13,38)" fg:x="366" fg:w="2"/><text x="29.4599%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="29.3695%" y="373" width="0.1596%" height="15" fill="rgb(239,139,21)" fg:x="368" fg:w="2"/><text x="29.6195%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="28.8109%" y="389" width="0.8779%" height="15" fill="rgb(222,164,45)" fg:x="361" fg:w="11"/><text x="29.0609%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.5291%" y="373" width="0.1596%" height="15" fill="rgb(230,52,27)" fg:x="370" fg:w="2"/><text x="29.7791%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.6089%" y="357" width="0.0798%" height="15" fill="rgb(227,143,42)" fg:x="371" fg:w="1"/><text x="29.8589%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.6089%" y="341" width="0.0798%" height="15" fill="rgb(249,127,1)" fg:x="371" fg:w="1"/><text x="29.8589%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="28.5714%" y="405" width="1.2769%" height="15" fill="rgb(243,107,26)" fg:x="358" fg:w="16"/><text x="28.8214%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.6887%" y="389" width="0.1596%" height="15" fill="rgb(225,7,45)" fg:x="372" fg:w="2"/><text x="29.9387%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.6887%" y="373" width="0.1596%" height="15" fill="rgb(241,88,38)" fg:x="372" fg:w="2"/><text x="29.9387%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.7686%" y="357" width="0.0798%" height="15" fill="rgb(226,121,9)" fg:x="373" fg:w="1"/><text x="30.0186%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.47%)</title><rect x="27.6137%" y="421" width="2.4741%" height="15" fill="rgb(253,60,29)" fg:x="346" fg:w="31"/><text x="27.8637%" y="431.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.8484%" y="405" width="0.2394%" height="15" fill="rgb(244,181,39)" fg:x="374" fg:w="3"/><text x="30.0984%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.0080%" y="389" width="0.0798%" height="15" fill="rgb(252,203,31)" fg:x="376" fg:w="1"/><text x="30.2580%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.0080%" y="373" width="0.0798%" height="15" fill="rgb(224,120,8)" fg:x="376" fg:w="1"/><text x="30.2580%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="30.1676%" y="389" width="0.3192%" height="15" fill="rgb(205,171,54)" fg:x="378" fg:w="4"/><text x="30.4176%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="30.1676%" y="373" width="0.3192%" height="15" fill="rgb(235,89,11)" fg:x="378" fg:w="4"/><text x="30.4176%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="30.2474%" y="357" width="0.2394%" height="15" fill="rgb(212,180,28)" fg:x="379" fg:w="3"/><text x="30.4974%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="30.3272%" y="341" width="0.1596%" height="15" fill="rgb(247,84,49)" fg:x="380" fg:w="2"/><text x="30.5772%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (43 samples, 3.43%)</title><rect x="27.1349%" y="437" width="3.4318%" height="15" fill="rgb(236,187,52)" fg:x="340" fg:w="43"/><text x="27.3849%" y="447.50">ser..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="30.0878%" y="421" width="0.4789%" height="15" fill="rgb(227,24,15)" fg:x="377" fg:w="6"/><text x="30.3378%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="30.1676%" y="405" width="0.3990%" height="15" fill="rgb(227,211,13)" fg:x="378" fg:w="5"/><text x="30.4176%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="30.4868%" y="389" width="0.0798%" height="15" fill="rgb(245,52,14)" fg:x="382" fg:w="1"/><text x="30.7368%" y="399.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="30.5666%" y="389" width="0.0798%" height="15" fill="rgb(225,185,13)" fg:x="383" fg:w="1"/><text x="30.8166%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (54 samples, 4.31%)</title><rect x="26.4166%" y="453" width="4.3097%" height="15" fill="rgb(217,160,29)" fg:x="331" fg:w="54"/><text x="26.6666%" y="463.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.5666%" y="437" width="0.1596%" height="15" fill="rgb(216,115,53)" fg:x="383" fg:w="2"/><text x="30.8166%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.5666%" y="421" width="0.1596%" height="15" fill="rgb(236,99,5)" fg:x="383" fg:w="2"/><text x="30.8166%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.5666%" y="405" width="0.1596%" height="15" fill="rgb(222,60,38)" fg:x="383" fg:w="2"/><text x="30.8166%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.6464%" y="389" width="0.0798%" height="15" fill="rgb(212,82,22)" fg:x="384" fg:w="1"/><text x="30.8964%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.6464%" y="373" width="0.0798%" height="15" fill="rgb(214,48,28)" fg:x="384" fg:w="1"/><text x="30.8964%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6464%" y="357" width="0.0798%" height="15" fill="rgb(245,196,50)" fg:x="384" fg:w="1"/><text x="30.8964%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.7263%" y="421" width="0.0798%" height="15" fill="rgb(225,159,46)" fg:x="385" fg:w="1"/><text x="30.9763%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.8061%" y="405" width="0.0798%" height="15" fill="rgb(207,195,48)" fg:x="386" fg:w="1"/><text x="31.0561%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.8859%" y="405" width="0.1596%" height="15" fill="rgb(240,73,3)" fg:x="387" fg:w="2"/><text x="31.1359%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9657%" y="389" width="0.0798%" height="15" fill="rgb(245,57,23)" fg:x="388" fg:w="1"/><text x="31.2157%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="31.0455%" y="389" width="0.2394%" height="15" fill="rgb(240,75,18)" fg:x="389" fg:w="3"/><text x="31.2955%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.1253%" y="373" width="0.1596%" height="15" fill="rgb(238,168,12)" fg:x="390" fg:w="2"/><text x="31.3753%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.2849%" y="373" width="0.0798%" height="15" fill="rgb(226,20,40)" fg:x="392" fg:w="1"/><text x="31.5349%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="31.3647%" y="373" width="0.1596%" height="15" fill="rgb(224,130,35)" fg:x="393" fg:w="2"/><text x="31.6147%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="31.3647%" y="357" width="0.1596%" height="15" fill="rgb(225,63,41)" fg:x="393" fg:w="2"/><text x="31.6147%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.5243%" y="357" width="0.1596%" height="15" fill="rgb(219,3,3)" fg:x="395" fg:w="2"/><text x="31.7743%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="30.7263%" y="453" width="1.0375%" height="15" fill="rgb(218,157,4)" fg:x="385" fg:w="13"/><text x="30.9763%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="30.7263%" y="437" width="1.0375%" height="15" fill="rgb(232,76,36)" fg:x="385" fg:w="13"/><text x="30.9763%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="30.8061%" y="421" width="0.9577%" height="15" fill="rgb(247,36,0)" fg:x="386" fg:w="12"/><text x="31.0561%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="31.0455%" y="405" width="0.7183%" height="15" fill="rgb(205,2,34)" fg:x="389" fg:w="9"/><text x="31.2955%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="31.2849%" y="389" width="0.4789%" height="15" fill="rgb(239,136,13)" fg:x="392" fg:w="6"/><text x="31.5349%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="31.5243%" y="373" width="0.2394%" height="15" fill="rgb(253,122,12)" fg:x="395" fg:w="3"/><text x="31.7743%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.6840%" y="357" width="0.0798%" height="15" fill="rgb(222,174,7)" fg:x="397" fg:w="1"/><text x="31.9340%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.6840%" y="341" width="0.0798%" height="15" fill="rgb(208,191,42)" fg:x="397" fg:w="1"/><text x="31.9340%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="31.8436%" y="421" width="0.0798%" height="15" fill="rgb(237,212,15)" fg:x="399" fg:w="1"/><text x="32.0936%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="31.7638%" y="437" width="0.3192%" height="15" fill="rgb(215,65,20)" fg:x="398" fg:w="4"/><text x="32.0138%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.9234%" y="421" width="0.1596%" height="15" fill="rgb(232,103,11)" fg:x="400" fg:w="2"/><text x="32.1734%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="32.2426%" y="405" width="0.4789%" height="15" fill="rgb(235,148,18)" fg:x="404" fg:w="6"/><text x="32.4926%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6417%" y="389" width="0.0798%" height="15" fill="rgb(240,173,7)" fg:x="409" fg:w="1"/><text x="32.8917%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.8013%" y="373" width="0.1596%" height="15" fill="rgb(228,182,25)" fg:x="411" fg:w="2"/><text x="33.0513%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="32.7215%" y="405" width="0.3990%" height="15" fill="rgb(247,3,52)" fg:x="410" fg:w="5"/><text x="32.9715%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="32.8013%" y="389" width="0.3192%" height="15" fill="rgb(226,155,8)" fg:x="411" fg:w="4"/><text x="33.0513%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.9609%" y="373" width="0.1596%" height="15" fill="rgb(243,195,38)" fg:x="413" fg:w="2"/><text x="33.2109%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.0407%" y="357" width="0.0798%" height="15" fill="rgb(254,181,33)" fg:x="414" fg:w="1"/><text x="33.2907%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0407%" y="341" width="0.0798%" height="15" fill="rgb(232,98,23)" fg:x="414" fg:w="1"/><text x="33.2907%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.2801%" y="373" width="0.0798%" height="15" fill="rgb(205,23,10)" fg:x="417" fg:w="1"/><text x="33.5301%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="33.3599%" y="373" width="0.0798%" height="15" fill="rgb(212,124,38)" fg:x="418" fg:w="1"/><text x="33.6099%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.5994%" y="325" width="0.0798%" height="15" fill="rgb(228,207,2)" fg:x="421" fg:w="1"/><text x="33.8494%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.5196%" y="357" width="0.2394%" height="15" fill="rgb(215,120,22)" fg:x="420" fg:w="3"/><text x="33.7696%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.5196%" y="341" width="0.2394%" height="15" fill="rgb(251,172,33)" fg:x="420" fg:w="3"/><text x="33.7696%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.6792%" y="325" width="0.0798%" height="15" fill="rgb(250,83,2)" fg:x="422" fg:w="1"/><text x="33.9292%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="33.7590%" y="341" width="0.0798%" height="15" fill="rgb(210,132,53)" fg:x="423" fg:w="1"/><text x="34.0090%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.8388%" y="309" width="0.0798%" height="15" fill="rgb(221,208,36)" fg:x="424" fg:w="1"/><text x="34.0888%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.8388%" y="293" width="0.0798%" height="15" fill="rgb(205,192,46)" fg:x="424" fg:w="1"/><text x="34.0888%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8388%" y="277" width="0.0798%" height="15" fill="rgb(223,163,14)" fg:x="424" fg:w="1"/><text x="34.0888%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="33.9186%" y="293" width="0.0798%" height="15" fill="rgb(218,41,28)" fg:x="425" fg:w="1"/><text x="34.1686%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="33.7590%" y="357" width="0.3192%" height="15" fill="rgb(235,104,10)" fg:x="423" fg:w="4"/><text x="34.0090%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="33.8388%" y="341" width="0.2394%" height="15" fill="rgb(246,17,4)" fg:x="424" fg:w="3"/><text x="34.0888%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="33.8388%" y="325" width="0.2394%" height="15" fill="rgb(240,7,16)" fg:x="424" fg:w="3"/><text x="34.0888%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="33.9186%" y="309" width="0.1596%" height="15" fill="rgb(213,160,23)" fg:x="425" fg:w="2"/><text x="34.1686%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.9984%" y="293" width="0.0798%" height="15" fill="rgb(251,179,49)" fg:x="426" fg:w="1"/><text x="34.2484%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="34.5571%" y="341" width="0.1596%" height="15" fill="rgb(247,198,10)" fg:x="433" fg:w="2"/><text x="34.8071%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.8763%" y="325" width="0.0798%" height="15" fill="rgb(220,65,29)" fg:x="437" fg:w="1"/><text x="35.1263%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.8763%" y="309" width="0.0798%" height="15" fill="rgb(237,171,28)" fg:x="437" fg:w="1"/><text x="35.1263%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8763%" y="293" width="0.0798%" height="15" fill="rgb(228,44,26)" fg:x="437" fg:w="1"/><text x="35.1263%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="34.7167%" y="341" width="0.5587%" height="15" fill="rgb(216,210,27)" fg:x="435" fg:w="7"/><text x="34.9667%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="34.9561%" y="325" width="0.3192%" height="15" fill="rgb(252,10,17)" fg:x="438" fg:w="4"/><text x="35.2061%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="35.0359%" y="309" width="0.2394%" height="15" fill="rgb(214,172,30)" fg:x="439" fg:w="3"/><text x="35.2859%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.0359%" y="293" width="0.2394%" height="15" fill="rgb(253,130,48)" fg:x="439" fg:w="3"/><text x="35.2859%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.0359%" y="277" width="0.2394%" height="15" fill="rgb(226,99,43)" fg:x="439" fg:w="3"/><text x="35.2859%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="35.0359%" y="261" width="0.2394%" height="15" fill="rgb(239,111,26)" fg:x="439" fg:w="3"/><text x="35.2859%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.92%)</title><rect x="33.4397%" y="373" width="1.9154%" height="15" fill="rgb(240,27,53)" fg:x="419" fg:w="24"/><text x="33.6897%" y="383.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.28%)</title><rect x="34.0782%" y="357" width="1.2769%" height="15" fill="rgb(254,163,12)" fg:x="427" fg:w="16"/><text x="34.3282%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2753%" y="341" width="0.0798%" height="15" fill="rgb(225,51,48)" fg:x="442" fg:w="1"/><text x="35.5253%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 2.31%)</title><rect x="33.2003%" y="389" width="2.3144%" height="15" fill="rgb(205,19,32)" fg:x="416" fg:w="29"/><text x="33.4503%" y="399.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="35.3551%" y="373" width="0.1596%" height="15" fill="rgb(218,119,26)" fg:x="443" fg:w="2"/><text x="35.6051%" y="383.50"></text></g><g><title>engine::session::Session::flush (128 samples, 10.22%)</title><rect x="25.5387%" y="565" width="10.2155%" height="15" fill="rgb(231,173,33)" fg:x="320" fg:w="128"/><text x="25.7887%" y="575.50">engine::session..</text></g><g><title>engine::session::Session::save_changes (123 samples, 9.82%)</title><rect x="25.9377%" y="549" width="9.8164%" height="15" fill="rgb(241,100,29)" fg:x="325" fg:w="123"/><text x="26.1877%" y="559.50">engine::sessio..</text></g><g><title>engine::session::state::State::close (123 samples, 9.82%)</title><rect x="25.9377%" y="533" width="9.8164%" height="15" fill="rgb(250,194,34)" fg:x="325" fg:w="123"/><text x="26.1877%" y="543.50">engine::sessio..</text></g><g><title>engine::session::state::State::flush_entities (123 samples, 9.82%)</title><rect x="25.9377%" y="517" width="9.8164%" height="15" fill="rgb(215,23,50)" fg:x="325" fg:w="123"/><text x="26.1877%" y="527.50">engine::sessio..</text></g><g><title>core::iter::adapters::try_process (119 samples, 9.50%)</title><rect x="26.2570%" y="501" width="9.4972%" height="15" fill="rgb(206,49,37)" fg:x="329" fg:w="119"/><text x="26.5070%" y="511.50">core::iter::ad..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (119 samples, 9.50%)</title><rect x="26.2570%" y="485" width="9.4972%" height="15" fill="rgb(247,39,21)" fg:x="329" fg:w="119"/><text x="26.5070%" y="495.50">&lt;alloc::vec::V..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (118 samples, 9.42%)</title><rect x="26.3368%" y="469" width="9.4174%" height="15" fill="rgb(209,220,15)" fg:x="330" fg:w="118"/><text x="26.5868%" y="479.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (50 samples, 3.99%)</title><rect x="31.7638%" y="453" width="3.9904%" height="15" fill="rgb(206,41,33)" fg:x="398" fg:w="50"/><text x="32.0138%" y="463.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (46 samples, 3.67%)</title><rect x="32.0830%" y="437" width="3.6712%" height="15" fill="rgb(221,225,45)" fg:x="402" fg:w="46"/><text x="32.3330%" y="447.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (46 samples, 3.67%)</title><rect x="32.0830%" y="421" width="3.6712%" height="15" fill="rgb(216,27,18)" fg:x="402" fg:w="46"/><text x="32.3330%" y="431.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (33 samples, 2.63%)</title><rect x="33.1205%" y="405" width="2.6337%" height="15" fill="rgb(250,193,34)" fg:x="415" fg:w="33"/><text x="33.3705%" y="415.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.5148%" y="389" width="0.2394%" height="15" fill="rgb(227,215,20)" fg:x="445" fg:w="3"/><text x="35.7648%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.5946%" y="373" width="0.1596%" height="15" fill="rgb(242,211,27)" fg:x="446" fg:w="2"/><text x="35.8446%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="35.5946%" y="357" width="0.1596%" height="15" fill="rgb(229,190,30)" fg:x="446" fg:w="2"/><text x="35.8446%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="35.7542%" y="533" width="0.0798%" height="15" fill="rgb(253,31,29)" fg:x="448" fg:w="1"/><text x="36.0042%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="35.7542%" y="517" width="0.0798%" height="15" fill="rgb(229,177,52)" fg:x="448" fg:w="1"/><text x="36.0042%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.7542%" y="501" width="0.0798%" height="15" fill="rgb(226,88,8)" fg:x="448" fg:w="1"/><text x="36.0042%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="35.8340%" y="533" width="0.0798%" height="15" fill="rgb(214,55,27)" fg:x="449" fg:w="1"/><text x="36.0840%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="35.7542%" y="565" width="0.2394%" height="15" fill="rgb(233,202,5)" fg:x="448" fg:w="3"/><text x="36.0042%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="35.7542%" y="549" width="0.2394%" height="15" fill="rgb(251,49,30)" fg:x="448" fg:w="3"/><text x="36.0042%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="35.9138%" y="533" width="0.0798%" height="15" fill="rgb(235,18,52)" fg:x="450" fg:w="1"/><text x="36.1638%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.9138%" y="517" width="0.0798%" height="15" fill="rgb(250,111,51)" fg:x="450" fg:w="1"/><text x="36.1638%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9138%" y="501" width="0.0798%" height="15" fill="rgb(218,13,25)" fg:x="450" fg:w="1"/><text x="36.1638%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.9936%" y="517" width="0.1596%" height="15" fill="rgb(248,96,7)" fg:x="451" fg:w="2"/><text x="36.2436%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.9936%" y="501" width="0.1596%" height="15" fill="rgb(217,31,15)" fg:x="451" fg:w="2"/><text x="36.2436%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.9936%" y="485" width="0.1596%" height="15" fill="rgb(228,59,49)" fg:x="451" fg:w="2"/><text x="36.2436%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1532%" y="517" width="0.0798%" height="15" fill="rgb(210,152,38)" fg:x="453" fg:w="1"/><text x="36.4032%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1532%" y="501" width="0.0798%" height="15" fill="rgb(206,71,11)" fg:x="453" fg:w="1"/><text x="36.4032%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1532%" y="485" width="0.0798%" height="15" fill="rgb(244,199,5)" fg:x="453" fg:w="1"/><text x="36.4032%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.1532%" y="469" width="0.0798%" height="15" fill="rgb(253,49,1)" fg:x="453" fg:w="1"/><text x="36.4032%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.1532%" y="453" width="0.0798%" height="15" fill="rgb(225,206,40)" fg:x="453" fg:w="1"/><text x="36.4032%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.1532%" y="437" width="0.0798%" height="15" fill="rgb(243,116,47)" fg:x="453" fg:w="1"/><text x="36.4032%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.1532%" y="421" width="0.0798%" height="15" fill="rgb(219,225,16)" fg:x="453" fg:w="1"/><text x="36.4032%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.1532%" y="405" width="0.0798%" height="15" fill="rgb(233,29,47)" fg:x="453" fg:w="1"/><text x="36.4032%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.2330%" y="485" width="0.0798%" height="15" fill="rgb(250,179,18)" fg:x="454" fg:w="1"/><text x="36.4830%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.3927%" y="453" width="0.0798%" height="15" fill="rgb(215,176,6)" fg:x="456" fg:w="1"/><text x="36.6427%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.4725%" y="453" width="0.0798%" height="15" fill="rgb(214,117,39)" fg:x="457" fg:w="1"/><text x="36.7225%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.4725%" y="437" width="0.0798%" height="15" fill="rgb(247,183,36)" fg:x="457" fg:w="1"/><text x="36.7225%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.4725%" y="421" width="0.0798%" height="15" fill="rgb(237,200,3)" fg:x="457" fg:w="1"/><text x="36.7225%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="35.9936%" y="549" width="0.6385%" height="15" fill="rgb(212,220,24)" fg:x="451" fg:w="8"/><text x="36.2436%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (8 samples, 0.64%)</title><rect x="35.9936%" y="533" width="0.6385%" height="15" fill="rgb(245,216,20)" fg:x="451" fg:w="8"/><text x="36.2436%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="36.2330%" y="517" width="0.3990%" height="15" fill="rgb(219,124,7)" fg:x="454" fg:w="5"/><text x="36.4830%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="36.2330%" y="501" width="0.3990%" height="15" fill="rgb(227,167,8)" fg:x="454" fg:w="5"/><text x="36.4830%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="36.3128%" y="485" width="0.3192%" height="15" fill="rgb(241,37,2)" fg:x="455" fg:w="4"/><text x="36.5628%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.3128%" y="469" width="0.3192%" height="15" fill="rgb(238,134,33)" fg:x="455" fg:w="4"/><text x="36.5628%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.5523%" y="453" width="0.0798%" height="15" fill="rgb(248,48,27)" fg:x="458" fg:w="1"/><text x="36.8023%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.5523%" y="437" width="0.0798%" height="15" fill="rgb(212,14,16)" fg:x="458" fg:w="1"/><text x="36.8023%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6321%" y="501" width="0.0798%" height="15" fill="rgb(217,205,37)" fg:x="459" fg:w="1"/><text x="36.8821%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6321%" y="485" width="0.0798%" height="15" fill="rgb(233,185,47)" fg:x="459" fg:w="1"/><text x="36.8821%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.6321%" y="517" width="0.1596%" height="15" fill="rgb(244,88,8)" fg:x="459" fg:w="2"/><text x="36.8821%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7119%" y="501" width="0.0798%" height="15" fill="rgb(213,0,20)" fg:x="460" fg:w="1"/><text x="36.9619%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7917%" y="453" width="0.0798%" height="15" fill="rgb(238,159,36)" fg:x="461" fg:w="1"/><text x="37.0417%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="36.6321%" y="533" width="0.3192%" height="15" fill="rgb(253,173,17)" fg:x="459" fg:w="4"/><text x="36.8821%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.7917%" y="517" width="0.1596%" height="15" fill="rgb(221,23,28)" fg:x="461" fg:w="2"/><text x="37.0417%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7917%" y="501" width="0.1596%" height="15" fill="rgb(218,113,15)" fg:x="461" fg:w="2"/><text x="37.0417%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.7917%" y="485" width="0.1596%" height="15" fill="rgb(233,58,3)" fg:x="461" fg:w="2"/><text x="37.0417%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7917%" y="469" width="0.1596%" height="15" fill="rgb(250,46,35)" fg:x="461" fg:w="2"/><text x="37.0417%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8715%" y="453" width="0.0798%" height="15" fill="rgb(210,169,11)" fg:x="462" fg:w="1"/><text x="37.1215%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8715%" y="437" width="0.0798%" height="15" fill="rgb(246,88,19)" fg:x="462" fg:w="1"/><text x="37.1215%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9513%" y="485" width="0.0798%" height="15" fill="rgb(206,81,49)" fg:x="463" fg:w="1"/><text x="37.2013%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.9513%" y="501" width="0.1596%" height="15" fill="rgb(232,144,18)" fg:x="463" fg:w="2"/><text x="37.2013%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.0311%" y="485" width="0.0798%" height="15" fill="rgb(235,2,27)" fg:x="464" fg:w="1"/><text x="37.2811%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.0311%" y="469" width="0.0798%" height="15" fill="rgb(239,157,39)" fg:x="464" fg:w="1"/><text x="37.2811%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.0311%" y="453" width="0.0798%" height="15" fill="rgb(220,11,17)" fg:x="464" fg:w="1"/><text x="37.2811%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.0311%" y="437" width="0.0798%" height="15" fill="rgb(243,94,50)" fg:x="464" fg:w="1"/><text x="37.2811%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.0311%" y="421" width="0.0798%" height="15" fill="rgb(218,22,0)" fg:x="464" fg:w="1"/><text x="37.2811%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.0311%" y="405" width="0.0798%" height="15" fill="rgb(249,70,21)" fg:x="464" fg:w="1"/><text x="37.2811%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.0311%" y="389" width="0.0798%" height="15" fill="rgb(245,111,46)" fg:x="464" fg:w="1"/><text x="37.2811%" y="399.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="36.9513%" y="517" width="0.3192%" height="15" fill="rgb(244,183,12)" fg:x="463" fg:w="4"/><text x="37.2013%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.1109%" y="501" width="0.1596%" height="15" fill="rgb(207,117,0)" fg:x="465" fg:w="2"/><text x="37.3609%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.1109%" y="485" width="0.1596%" height="15" fill="rgb(206,20,43)" fg:x="465" fg:w="2"/><text x="37.3609%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (2 samples, 0.16%)</title><rect x="37.1109%" y="469" width="0.1596%" height="15" fill="rgb(221,104,11)" fg:x="465" fg:w="2"/><text x="37.3609%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="36.9513%" y="533" width="0.3990%" height="15" fill="rgb(254,36,50)" fg:x="463" fg:w="5"/><text x="37.2013%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="37.2706%" y="517" width="0.0798%" height="15" fill="rgb(252,17,15)" fg:x="467" fg:w="1"/><text x="37.5206%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="37.2706%" y="501" width="0.0798%" height="15" fill="rgb(219,129,43)" fg:x="467" fg:w="1"/><text x="37.5206%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2706%" y="485" width="0.0798%" height="15" fill="rgb(205,34,45)" fg:x="467" fg:w="1"/><text x="37.5206%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.2706%" y="469" width="0.0798%" height="15" fill="rgb(251,201,32)" fg:x="467" fg:w="1"/><text x="37.5206%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.2706%" y="453" width="0.0798%" height="15" fill="rgb(205,56,0)" fg:x="467" fg:w="1"/><text x="37.5206%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="37.3504%" y="533" width="0.0798%" height="15" fill="rgb(211,193,27)" fg:x="468" fg:w="1"/><text x="37.6004%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.3504%" y="517" width="0.0798%" height="15" fill="rgb(231,100,42)" fg:x="468" fg:w="1"/><text x="37.6004%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.4302%" y="485" width="0.1596%" height="15" fill="rgb(245,85,27)" fg:x="469" fg:w="2"/><text x="37.6802%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.4302%" y="469" width="0.1596%" height="15" fill="rgb(241,76,24)" fg:x="469" fg:w="2"/><text x="37.6802%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.4302%" y="453" width="0.1596%" height="15" fill="rgb(249,157,15)" fg:x="469" fg:w="2"/><text x="37.6802%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.4302%" y="437" width="0.1596%" height="15" fill="rgb(222,218,25)" fg:x="469" fg:w="2"/><text x="37.6802%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.4302%" y="421" width="0.1596%" height="15" fill="rgb(252,156,52)" fg:x="469" fg:w="2"/><text x="37.6802%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="37.4302%" y="405" width="0.1596%" height="15" fill="rgb(211,185,7)" fg:x="469" fg:w="2"/><text x="37.6802%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="37.4302%" y="389" width="0.1596%" height="15" fill="rgb(234,108,24)" fg:x="469" fg:w="2"/><text x="37.6802%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="37.4302%" y="373" width="0.1596%" height="15" fill="rgb(227,218,2)" fg:x="469" fg:w="2"/><text x="37.6802%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.4302%" y="357" width="0.1596%" height="15" fill="rgb(224,0,36)" fg:x="469" fg:w="2"/><text x="37.6802%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.4302%" y="341" width="0.1596%" height="15" fill="rgb(233,201,10)" fg:x="469" fg:w="2"/><text x="37.6802%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="37.4302%" y="325" width="0.1596%" height="15" fill="rgb(252,209,14)" fg:x="469" fg:w="2"/><text x="37.6802%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="37.4302%" y="309" width="0.1596%" height="15" fill="rgb(205,93,49)" fg:x="469" fg:w="2"/><text x="37.6802%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="37.4302%" y="293" width="0.1596%" height="15" fill="rgb(234,116,45)" fg:x="469" fg:w="2"/><text x="37.6802%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="37.4302%" y="277" width="0.1596%" height="15" fill="rgb(248,89,35)" fg:x="469" fg:w="2"/><text x="37.6802%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.4302%" y="261" width="0.1596%" height="15" fill="rgb(233,167,45)" fg:x="469" fg:w="2"/><text x="37.6802%" y="271.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="37.4302%" y="501" width="0.3192%" height="15" fill="rgb(248,228,14)" fg:x="469" fg:w="4"/><text x="37.6802%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.5898%" y="485" width="0.1596%" height="15" fill="rgb(246,91,14)" fg:x="471" fg:w="2"/><text x="37.8398%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.5898%" y="469" width="0.1596%" height="15" fill="rgb(227,142,5)" fg:x="471" fg:w="2"/><text x="37.8398%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="37.5898%" y="453" width="0.1596%" height="15" fill="rgb(221,63,33)" fg:x="471" fg:w="2"/><text x="37.8398%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.5898%" y="437" width="0.1596%" height="15" fill="rgb(233,49,0)" fg:x="471" fg:w="2"/><text x="37.8398%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6696%" y="421" width="0.0798%" height="15" fill="rgb(251,115,38)" fg:x="472" fg:w="1"/><text x="37.9196%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.6696%" y="405" width="0.0798%" height="15" fill="rgb(231,214,32)" fg:x="472" fg:w="1"/><text x="37.9196%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="37.4302%" y="517" width="0.4789%" height="15" fill="rgb(248,73,46)" fg:x="469" fg:w="6"/><text x="37.6802%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="37.7494%" y="501" width="0.1596%" height="15" fill="rgb(237,156,4)" fg:x="473" fg:w="2"/><text x="37.9994%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.7494%" y="485" width="0.1596%" height="15" fill="rgb(227,132,2)" fg:x="473" fg:w="2"/><text x="37.9994%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="37.7494%" y="469" width="0.1596%" height="15" fill="rgb(248,161,9)" fg:x="473" fg:w="2"/><text x="37.9994%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="37.8292%" y="453" width="0.0798%" height="15" fill="rgb(238,77,38)" fg:x="474" fg:w="1"/><text x="38.0792%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.8292%" y="437" width="0.0798%" height="15" fill="rgb(222,166,40)" fg:x="474" fg:w="1"/><text x="38.0792%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.8292%" y="421" width="0.0798%" height="15" fill="rgb(214,168,45)" fg:x="474" fg:w="1"/><text x="38.0792%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.8292%" y="405" width="0.0798%" height="15" fill="rgb(226,64,37)" fg:x="474" fg:w="1"/><text x="38.0792%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.8292%" y="389" width="0.0798%" height="15" fill="rgb(232,210,43)" fg:x="474" fg:w="1"/><text x="38.0792%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="37.9090%" y="469" width="0.0798%" height="15" fill="rgb(214,76,33)" fg:x="475" fg:w="1"/><text x="38.1590%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="37.9090%" y="485" width="0.1596%" height="15" fill="rgb(210,78,5)" fg:x="475" fg:w="2"/><text x="38.1590%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.9888%" y="469" width="0.0798%" height="15" fill="rgb(211,107,37)" fg:x="476" fg:w="1"/><text x="38.2388%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.9888%" y="453" width="0.0798%" height="15" fill="rgb(249,67,16)" fg:x="476" fg:w="1"/><text x="38.2388%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="37.9888%" y="437" width="0.0798%" height="15" fill="rgb(222,114,31)" fg:x="476" fg:w="1"/><text x="38.2388%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.0686%" y="421" width="0.0798%" height="15" fill="rgb(242,118,19)" fg:x="477" fg:w="1"/><text x="38.3186%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.1484%" y="405" width="0.0798%" height="15" fill="rgb(223,115,1)" fg:x="478" fg:w="1"/><text x="38.3984%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.1484%" y="389" width="0.0798%" height="15" fill="rgb(241,182,54)" fg:x="478" fg:w="1"/><text x="38.3984%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.2283%" y="373" width="0.0798%" height="15" fill="rgb(244,166,36)" fg:x="479" fg:w="1"/><text x="38.4783%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.2283%" y="357" width="0.0798%" height="15" fill="rgb(241,52,43)" fg:x="479" fg:w="1"/><text x="38.4783%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="38.1484%" y="421" width="0.2394%" height="15" fill="rgb(236,82,9)" fg:x="478" fg:w="3"/><text x="38.3984%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="38.2283%" y="405" width="0.1596%" height="15" fill="rgb(241,119,0)" fg:x="479" fg:w="2"/><text x="38.4783%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="38.2283%" y="389" width="0.1596%" height="15" fill="rgb(221,19,22)" fg:x="479" fg:w="2"/><text x="38.4783%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="38.3081%" y="373" width="0.0798%" height="15" fill="rgb(254,144,35)" fg:x="480" fg:w="1"/><text x="38.5581%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3081%" y="357" width="0.0798%" height="15" fill="rgb(246,132,30)" fg:x="480" fg:w="1"/><text x="38.5581%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.84%)</title><rect x="36.6321%" y="549" width="1.8356%" height="15" fill="rgb(234,69,28)" fg:x="459" fg:w="23"/><text x="36.8821%" y="559.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (13 samples, 1.04%)</title><rect x="37.4302%" y="533" width="1.0375%" height="15" fill="rgb(219,106,47)" fg:x="469" fg:w="13"/><text x="37.6802%" y="543.50"></text></g><g><title>serde_json::value::to_value (7 samples, 0.56%)</title><rect x="37.9090%" y="517" width="0.5587%" height="15" fill="rgb(218,79,24)" fg:x="475" fg:w="7"/><text x="38.1590%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="37.9090%" y="501" width="0.5587%" height="15" fill="rgb(225,26,21)" fg:x="475" fg:w="7"/><text x="38.1590%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="38.0686%" y="485" width="0.3990%" height="15" fill="rgb(217,68,49)" fg:x="477" fg:w="5"/><text x="38.3186%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="38.0686%" y="469" width="0.3990%" height="15" fill="rgb(220,204,28)" fg:x="477" fg:w="5"/><text x="38.3186%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="38.0686%" y="453" width="0.3990%" height="15" fill="rgb(237,208,43)" fg:x="477" fg:w="5"/><text x="38.3186%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="38.0686%" y="437" width="0.3990%" height="15" fill="rgb(213,97,42)" fg:x="477" fg:w="5"/><text x="38.3186%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3879%" y="421" width="0.0798%" height="15" fill="rgb(238,96,52)" fg:x="481" fg:w="1"/><text x="38.6379%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (34 samples, 2.71%)</title><rect x="35.9936%" y="565" width="2.7135%" height="15" fill="rgb(228,14,13)" fg:x="451" fg:w="34"/><text x="36.2436%" y="575.50">pl..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="38.4677%" y="549" width="0.2394%" height="15" fill="rgb(219,123,13)" fg:x="482" fg:w="3"/><text x="38.7177%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.5475%" y="533" width="0.1596%" height="15" fill="rgb(216,144,17)" fg:x="483" fg:w="2"/><text x="38.7975%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.6273%" y="517" width="0.0798%" height="15" fill="rgb(230,228,29)" fg:x="484" fg:w="1"/><text x="38.8773%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6273%" y="501" width="0.0798%" height="15" fill="rgb(233,18,5)" fg:x="484" fg:w="1"/><text x="38.8773%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.7071%" y="485" width="0.0798%" height="15" fill="rgb(233,197,12)" fg:x="485" fg:w="1"/><text x="38.9571%" y="495.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (2 samples, 0.16%)</title><rect x="38.7071%" y="565" width="0.1596%" height="15" fill="rgb(234,140,29)" fg:x="485" fg:w="2"/><text x="38.9571%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="38.7071%" y="549" width="0.1596%" height="15" fill="rgb(233,113,19)" fg:x="485" fg:w="2"/><text x="38.9571%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="38.7071%" y="533" width="0.1596%" height="15" fill="rgb(246,209,13)" fg:x="485" fg:w="2"/><text x="38.9571%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="38.7071%" y="517" width="0.1596%" height="15" fill="rgb(242,79,54)" fg:x="485" fg:w="2"/><text x="38.9571%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="38.7071%" y="501" width="0.1596%" height="15" fill="rgb(219,73,16)" fg:x="485" fg:w="2"/><text x="38.9571%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="38.7869%" y="485" width="0.0798%" height="15" fill="rgb(224,52,10)" fg:x="486" fg:w="1"/><text x="39.0369%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.9465%" y="469" width="0.0798%" height="15" fill="rgb(237,179,5)" fg:x="488" fg:w="1"/><text x="39.1965%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.9465%" y="453" width="0.0798%" height="15" fill="rgb(231,20,6)" fg:x="488" fg:w="1"/><text x="39.1965%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.9465%" y="437" width="0.0798%" height="15" fill="rgb(253,171,45)" fg:x="488" fg:w="1"/><text x="39.1965%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="38.8667%" y="501" width="0.2394%" height="15" fill="rgb(230,75,49)" fg:x="487" fg:w="3"/><text x="39.1167%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="38.8667%" y="485" width="0.2394%" height="15" fill="rgb(216,83,46)" fg:x="487" fg:w="3"/><text x="39.1167%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.0263%" y="469" width="0.0798%" height="15" fill="rgb(236,56,9)" fg:x="489" fg:w="1"/><text x="39.2763%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0263%" y="453" width="0.0798%" height="15" fill="rgb(215,28,34)" fg:x="489" fg:w="1"/><text x="39.2763%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.0263%" y="437" width="0.0798%" height="15" fill="rgb(230,222,20)" fg:x="489" fg:w="1"/><text x="39.2763%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0263%" y="421" width="0.0798%" height="15" fill="rgb(235,209,51)" fg:x="489" fg:w="1"/><text x="39.2763%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.0263%" y="405" width="0.0798%" height="15" fill="rgb(235,167,1)" fg:x="489" fg:w="1"/><text x="39.2763%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2658%" y="469" width="0.0798%" height="15" fill="rgb(248,220,0)" fg:x="492" fg:w="1"/><text x="39.5158%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.3456%" y="469" width="0.0798%" height="15" fill="rgb(239,0,18)" fg:x="493" fg:w="1"/><text x="39.5956%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (8 samples, 0.64%)</title><rect x="38.8667%" y="533" width="0.6385%" height="15" fill="rgb(229,179,11)" fg:x="487" fg:w="8"/><text x="39.1167%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="38.8667%" y="517" width="0.6385%" height="15" fill="rgb(226,116,53)" fg:x="487" fg:w="8"/><text x="39.1167%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="39.1061%" y="501" width="0.3990%" height="15" fill="rgb(218,1,49)" fg:x="490" fg:w="5"/><text x="39.3561%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="39.1061%" y="485" width="0.3990%" height="15" fill="rgb(208,184,47)" fg:x="490" fg:w="5"/><text x="39.3561%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.4254%" y="469" width="0.0798%" height="15" fill="rgb(238,174,3)" fg:x="494" fg:w="1"/><text x="39.6754%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4254%" y="453" width="0.0798%" height="15" fill="rgb(247,188,6)" fg:x="494" fg:w="1"/><text x="39.6754%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.4254%" y="437" width="0.0798%" height="15" fill="rgb(211,165,46)" fg:x="494" fg:w="1"/><text x="39.6754%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4254%" y="421" width="0.0798%" height="15" fill="rgb(222,190,10)" fg:x="494" fg:w="1"/><text x="39.6754%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.4254%" y="405" width="0.0798%" height="15" fill="rgb(206,185,3)" fg:x="494" fg:w="1"/><text x="39.6754%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4254%" y="389" width="0.0798%" height="15" fill="rgb(244,125,37)" fg:x="494" fg:w="1"/><text x="39.6754%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (9 samples, 0.72%)</title><rect x="38.8667%" y="565" width="0.7183%" height="15" fill="rgb(211,43,7)" fg:x="487" fg:w="9"/><text x="39.1167%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.72%)</title><rect x="38.8667%" y="549" width="0.7183%" height="15" fill="rgb(250,41,42)" fg:x="487" fg:w="9"/><text x="39.1167%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="39.5052%" y="533" width="0.0798%" height="15" fill="rgb(254,54,42)" fg:x="495" fg:w="1"/><text x="39.7552%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="39.5052%" y="517" width="0.0798%" height="15" fill="rgb(213,71,43)" fg:x="495" fg:w="1"/><text x="39.7552%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.5052%" y="501" width="0.0798%" height="15" fill="rgb(249,3,44)" fg:x="495" fg:w="1"/><text x="39.7552%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="39.5052%" y="485" width="0.0798%" height="15" fill="rgb(229,80,41)" fg:x="495" fg:w="1"/><text x="39.7552%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.5052%" y="469" width="0.0798%" height="15" fill="rgb(231,25,28)" fg:x="495" fg:w="1"/><text x="39.7552%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.5052%" y="453" width="0.0798%" height="15" fill="rgb(208,79,48)" fg:x="495" fg:w="1"/><text x="39.7552%" y="463.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="39.5850%" y="549" width="0.1596%" height="15" fill="rgb(207,196,38)" fg:x="496" fg:w="2"/><text x="39.8350%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.5850%" y="533" width="0.1596%" height="15" fill="rgb(228,105,49)" fg:x="496" fg:w="2"/><text x="39.8350%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.5850%" y="517" width="0.1596%" height="15" fill="rgb(237,99,15)" fg:x="496" fg:w="2"/><text x="39.8350%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.6648%" y="501" width="0.0798%" height="15" fill="rgb(224,207,46)" fg:x="497" fg:w="1"/><text x="39.9148%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.6648%" y="485" width="0.0798%" height="15" fill="rgb(249,117,50)" fg:x="497" fg:w="1"/><text x="39.9148%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.7446%" y="517" width="0.0798%" height="15" fill="rgb(248,17,13)" fg:x="498" fg:w="1"/><text x="39.9946%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="39.8244%" y="517" width="0.0798%" height="15" fill="rgb(228,187,36)" fg:x="499" fg:w="1"/><text x="40.0744%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.8244%" y="501" width="0.0798%" height="15" fill="rgb(234,132,20)" fg:x="499" fg:w="1"/><text x="40.0744%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="39.8244%" y="485" width="0.0798%" height="15" fill="rgb(209,170,46)" fg:x="499" fg:w="1"/><text x="40.0744%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="39.8244%" y="469" width="0.0798%" height="15" fill="rgb(237,23,19)" fg:x="499" fg:w="1"/><text x="40.0744%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9042%" y="485" width="0.0798%" height="15" fill="rgb(227,21,26)" fg:x="500" fg:w="1"/><text x="40.1542%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9042%" y="469" width="0.0798%" height="15" fill="rgb(222,220,48)" fg:x="500" fg:w="1"/><text x="40.1542%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9042%" y="453" width="0.0798%" height="15" fill="rgb(214,9,16)" fg:x="500" fg:w="1"/><text x="40.1542%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9840%" y="453" width="0.0798%" height="15" fill="rgb(209,73,30)" fg:x="501" fg:w="1"/><text x="40.2340%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (7 samples, 0.56%)</title><rect x="39.5850%" y="565" width="0.5587%" height="15" fill="rgb(207,20,33)" fg:x="496" fg:w="7"/><text x="39.8350%" y="575.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.40%)</title><rect x="39.7446%" y="549" width="0.3990%" height="15" fill="rgb(219,153,12)" fg:x="498" fg:w="5"/><text x="39.9946%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (5 samples, 0.40%)</title><rect x="39.7446%" y="533" width="0.3990%" height="15" fill="rgb(235,97,25)" fg:x="498" fg:w="5"/><text x="39.9946%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="39.9042%" y="517" width="0.2394%" height="15" fill="rgb(244,30,34)" fg:x="500" fg:w="3"/><text x="40.1542%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (3 samples, 0.24%)</title><rect x="39.9042%" y="501" width="0.2394%" height="15" fill="rgb(214,106,45)" fg:x="500" fg:w="3"/><text x="40.1542%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (2 samples, 0.16%)</title><rect x="39.9840%" y="485" width="0.1596%" height="15" fill="rgb(226,41,9)" fg:x="501" fg:w="2"/><text x="40.2340%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.9840%" y="469" width="0.1596%" height="15" fill="rgb(253,139,29)" fg:x="501" fg:w="2"/><text x="40.2340%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="40.0638%" y="453" width="0.0798%" height="15" fill="rgb(213,205,39)" fg:x="502" fg:w="1"/><text x="40.3138%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="40.1437%" y="485" width="0.0798%" height="15" fill="rgb(209,27,10)" fg:x="503" fg:w="1"/><text x="40.3937%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="40.1437%" y="517" width="0.1596%" height="15" fill="rgb(249,142,16)" fg:x="503" fg:w="2"/><text x="40.3937%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="40.1437%" y="501" width="0.1596%" height="15" fill="rgb(242,65,12)" fg:x="503" fg:w="2"/><text x="40.3937%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.2235%" y="485" width="0.0798%" height="15" fill="rgb(232,48,10)" fg:x="504" fg:w="1"/><text x="40.4735%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2235%" y="469" width="0.0798%" height="15" fill="rgb(253,67,19)" fg:x="504" fg:w="1"/><text x="40.4735%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="40.3033%" y="501" width="0.0798%" height="15" fill="rgb(227,93,29)" fg:x="505" fg:w="1"/><text x="40.5533%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.3033%" y="485" width="0.0798%" height="15" fill="rgb(226,189,53)" fg:x="505" fg:w="1"/><text x="40.5533%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3033%" y="469" width="0.0798%" height="15" fill="rgb(223,224,1)" fg:x="505" fg:w="1"/><text x="40.5533%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.3033%" y="453" width="0.0798%" height="15" fill="rgb(221,84,32)" fg:x="505" fg:w="1"/><text x="40.5533%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3033%" y="437" width="0.0798%" height="15" fill="rgb(214,189,28)" fg:x="505" fg:w="1"/><text x="40.5533%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.3033%" y="421" width="0.0798%" height="15" fill="rgb(234,7,52)" fg:x="505" fg:w="1"/><text x="40.5533%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3033%" y="405" width="0.0798%" height="15" fill="rgb(249,73,31)" fg:x="505" fg:w="1"/><text x="40.5533%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="40.1437%" y="549" width="0.3192%" height="15" fill="rgb(253,153,41)" fg:x="503" fg:w="4"/><text x="40.3937%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="40.1437%" y="533" width="0.3192%" height="15" fill="rgb(249,52,34)" fg:x="503" fg:w="4"/><text x="40.3937%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="40.3033%" y="517" width="0.1596%" height="15" fill="rgb(236,177,47)" fg:x="505" fg:w="2"/><text x="40.5533%" y="527.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="40.3831%" y="501" width="0.0798%" height="15" fill="rgb(252,185,45)" fg:x="506" fg:w="1"/><text x="40.6331%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="40.5427%" y="533" width="0.1596%" height="15" fill="rgb(251,15,30)" fg:x="508" fg:w="2"/><text x="40.7927%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.5427%" y="517" width="0.1596%" height="15" fill="rgb(233,31,4)" fg:x="508" fg:w="2"/><text x="40.7927%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.5427%" y="501" width="0.1596%" height="15" fill="rgb(254,44,24)" fg:x="508" fg:w="2"/><text x="40.7927%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.6225%" y="485" width="0.0798%" height="15" fill="rgb(218,54,1)" fg:x="509" fg:w="1"/><text x="40.8725%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6225%" y="469" width="0.0798%" height="15" fill="rgb(243,209,39)" fg:x="509" fg:w="1"/><text x="40.8725%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6225%" y="453" width="0.0798%" height="15" fill="rgb(206,75,33)" fg:x="509" fg:w="1"/><text x="40.8725%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.7023%" y="469" width="0.0798%" height="15" fill="rgb(223,108,18)" fg:x="510" fg:w="1"/><text x="40.9523%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.7023%" y="453" width="0.0798%" height="15" fill="rgb(244,89,31)" fg:x="510" fg:w="1"/><text x="40.9523%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.7023%" y="437" width="0.0798%" height="15" fill="rgb(222,167,27)" fg:x="510" fg:w="1"/><text x="40.9523%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7821%" y="469" width="0.0798%" height="15" fill="rgb(247,41,16)" fg:x="511" fg:w="1"/><text x="41.0321%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="40.7023%" y="501" width="0.2394%" height="15" fill="rgb(233,168,40)" fg:x="510" fg:w="3"/><text x="40.9523%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="40.7023%" y="485" width="0.2394%" height="15" fill="rgb(205,211,8)" fg:x="510" fg:w="3"/><text x="40.9523%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.8619%" y="469" width="0.0798%" height="15" fill="rgb(238,105,11)" fg:x="512" fg:w="1"/><text x="41.1119%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.8619%" y="453" width="0.0798%" height="15" fill="rgb(223,142,52)" fg:x="512" fg:w="1"/><text x="41.1119%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.8619%" y="437" width="0.0798%" height="15" fill="rgb(238,51,33)" fg:x="512" fg:w="1"/><text x="41.1119%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.8619%" y="421" width="0.0798%" height="15" fill="rgb(231,188,43)" fg:x="512" fg:w="1"/><text x="41.1119%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.8619%" y="405" width="0.0798%" height="15" fill="rgb(216,92,17)" fg:x="512" fg:w="1"/><text x="41.1119%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.8619%" y="389" width="0.0798%" height="15" fill="rgb(228,2,40)" fg:x="512" fg:w="1"/><text x="41.1119%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8619%" y="373" width="0.0798%" height="15" fill="rgb(226,73,15)" fg:x="512" fg:w="1"/><text x="41.1119%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.9417%" y="405" width="0.0798%" height="15" fill="rgb(227,66,46)" fg:x="513" fg:w="1"/><text x="41.1917%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="40.4629%" y="549" width="0.6385%" height="15" fill="rgb(209,71,6)" fg:x="507" fg:w="8"/><text x="40.7129%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.40%)</title><rect x="40.7023%" y="533" width="0.3990%" height="15" fill="rgb(246,100,25)" fg:x="510" fg:w="5"/><text x="40.9523%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="40.7023%" y="517" width="0.3990%" height="15" fill="rgb(248,185,27)" fg:x="510" fg:w="5"/><text x="40.9523%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="40.9417%" y="501" width="0.1596%" height="15" fill="rgb(225,118,47)" fg:x="513" fg:w="2"/><text x="41.1917%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="40.9417%" y="485" width="0.1596%" height="15" fill="rgb(220,185,44)" fg:x="513" fg:w="2"/><text x="41.1917%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.9417%" y="469" width="0.1596%" height="15" fill="rgb(227,95,24)" fg:x="513" fg:w="2"/><text x="41.1917%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.9417%" y="453" width="0.1596%" height="15" fill="rgb(252,84,24)" fg:x="513" fg:w="2"/><text x="41.1917%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="40.9417%" y="437" width="0.1596%" height="15" fill="rgb(240,34,44)" fg:x="513" fg:w="2"/><text x="41.1917%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.9417%" y="421" width="0.1596%" height="15" fill="rgb(209,72,54)" fg:x="513" fg:w="2"/><text x="41.1917%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.0215%" y="405" width="0.0798%" height="15" fill="rgb(226,19,45)" fg:x="514" fg:w="1"/><text x="41.2715%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="41.1014%" y="533" width="0.0798%" height="15" fill="rgb(246,7,45)" fg:x="515" fg:w="1"/><text x="41.3514%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="41.1014%" y="517" width="0.0798%" height="15" fill="rgb(225,45,2)" fg:x="515" fg:w="1"/><text x="41.3514%" y="527.50"></text></g><g><title>plugins_core::tools::set_container (14 samples, 1.12%)</title><rect x="40.1437%" y="565" width="1.1173%" height="15" fill="rgb(221,80,29)" fg:x="503" fg:w="14"/><text x="40.3937%" y="575.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="41.1014%" y="549" width="0.1596%" height="15" fill="rgb(228,11,19)" fg:x="515" fg:w="2"/><text x="41.3514%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="41.1812%" y="533" width="0.0798%" height="15" fill="rgb(243,17,21)" fg:x="516" fg:w="1"/><text x="41.4312%" y="543.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="41.1812%" y="517" width="0.0798%" height="15" fill="rgb(243,88,8)" fg:x="516" fg:w="1"/><text x="41.4312%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.1812%" y="501" width="0.0798%" height="15" fill="rgb(214,17,9)" fg:x="516" fg:w="1"/><text x="41.4312%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="41.1812%" y="485" width="0.0798%" height="15" fill="rgb(232,169,15)" fg:x="516" fg:w="1"/><text x="41.4312%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.1812%" y="469" width="0.0798%" height="15" fill="rgb(232,86,53)" fg:x="516" fg:w="1"/><text x="41.4312%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.1812%" y="453" width="0.0798%" height="15" fill="rgb(222,100,4)" fg:x="516" fg:w="1"/><text x="41.4312%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.1812%" y="437" width="0.0798%" height="15" fill="rgb(253,151,38)" fg:x="516" fg:w="1"/><text x="41.4312%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (209 samples, 16.68%)</title><rect x="24.7406%" y="581" width="16.6800%" height="15" fill="rgb(238,215,29)" fg:x="310" fg:w="209"/><text x="24.9906%" y="591.50">plugins_core::build::Build..</text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="41.2610%" y="565" width="0.1596%" height="15" fill="rgb(205,128,53)" fg:x="517" fg:w="2"/><text x="41.5110%" y="575.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="41.2610%" y="549" width="0.1596%" height="15" fill="rgb(248,183,14)" fg:x="517" fg:w="2"/><text x="41.5110%" y="559.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (2 samples, 0.16%)</title><rect x="41.2610%" y="533" width="0.1596%" height="15" fill="rgb(244,172,35)" fg:x="517" fg:w="2"/><text x="41.5110%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="41.2610%" y="517" width="0.1596%" height="15" fill="rgb(234,93,19)" fg:x="517" fg:w="2"/><text x="41.5110%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="41.3408%" y="501" width="0.0798%" height="15" fill="rgb(227,109,7)" fg:x="518" fg:w="1"/><text x="41.5908%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.4206%" y="549" width="0.0798%" height="15" fill="rgb(233,136,54)" fg:x="519" fg:w="1"/><text x="41.6706%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.4206%" y="533" width="0.0798%" height="15" fill="rgb(233,19,40)" fg:x="519" fg:w="1"/><text x="41.6706%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.4206%" y="517" width="0.0798%" height="15" fill="rgb(247,41,18)" fg:x="519" fg:w="1"/><text x="41.6706%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.4206%" y="501" width="0.0798%" height="15" fill="rgb(220,34,34)" fg:x="519" fg:w="1"/><text x="41.6706%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.4206%" y="485" width="0.0798%" height="15" fill="rgb(222,135,32)" fg:x="519" fg:w="1"/><text x="41.6706%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="41.5004%" y="533" width="0.0798%" height="15" fill="rgb(214,80,19)" fg:x="520" fg:w="1"/><text x="41.7504%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="41.5004%" y="517" width="0.0798%" height="15" fill="rgb(234,54,46)" fg:x="520" fg:w="1"/><text x="41.7504%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="41.5802%" y="469" width="0.0798%" height="15" fill="rgb(251,48,23)" fg:x="521" fg:w="1"/><text x="41.8302%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="41.5802%" y="453" width="0.0798%" height="15" fill="rgb(254,109,52)" fg:x="521" fg:w="1"/><text x="41.8302%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5802%" y="437" width="0.0798%" height="15" fill="rgb(240,186,19)" fg:x="521" fg:w="1"/><text x="41.8302%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5802%" y="421" width="0.0798%" height="15" fill="rgb(246,187,17)" fg:x="521" fg:w="1"/><text x="41.8302%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.5802%" y="405" width="0.0798%" height="15" fill="rgb(212,21,5)" fg:x="521" fg:w="1"/><text x="41.8302%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.5802%" y="389" width="0.0798%" height="15" fill="rgb(225,185,18)" fg:x="521" fg:w="1"/><text x="41.8302%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.5802%" y="373" width="0.0798%" height="15" fill="rgb(245,114,17)" fg:x="521" fg:w="1"/><text x="41.8302%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.5802%" y="357" width="0.0798%" height="15" fill="rgb(223,164,24)" fg:x="521" fg:w="1"/><text x="41.8302%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5802%" y="341" width="0.0798%" height="15" fill="rgb(211,228,3)" fg:x="521" fg:w="1"/><text x="41.8302%" y="351.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="41.5004%" y="549" width="0.2394%" height="15" fill="rgb(223,16,38)" fg:x="520" fg:w="3"/><text x="41.7504%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="41.5802%" y="533" width="0.1596%" height="15" fill="rgb(207,31,54)" fg:x="521" fg:w="2"/><text x="41.8302%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="41.5802%" y="517" width="0.1596%" height="15" fill="rgb(220,39,11)" fg:x="521" fg:w="2"/><text x="41.8302%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="41.5802%" y="501" width="0.1596%" height="15" fill="rgb(235,185,0)" fg:x="521" fg:w="2"/><text x="41.8302%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="41.5802%" y="485" width="0.1596%" height="15" fill="rgb(249,39,18)" fg:x="521" fg:w="2"/><text x="41.8302%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.6600%" y="469" width="0.0798%" height="15" fill="rgb(240,110,33)" fg:x="522" fg:w="1"/><text x="41.9100%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.6600%" y="453" width="0.0798%" height="15" fill="rgb(210,92,42)" fg:x="522" fg:w="1"/><text x="41.9100%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.6600%" y="437" width="0.0798%" height="15" fill="rgb(218,215,28)" fg:x="522" fg:w="1"/><text x="41.9100%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="41.6600%" y="421" width="0.0798%" height="15" fill="rgb(238,215,36)" fg:x="522" fg:w="1"/><text x="41.9100%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="41.6600%" y="405" width="0.0798%" height="15" fill="rgb(220,31,10)" fg:x="522" fg:w="1"/><text x="41.9100%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="41.6600%" y="389" width="0.0798%" height="15" fill="rgb(212,93,14)" fg:x="522" fg:w="1"/><text x="41.9100%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7398%" y="469" width="0.0798%" height="15" fill="rgb(254,207,2)" fg:x="523" fg:w="1"/><text x="41.9898%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.7398%" y="501" width="0.1596%" height="15" fill="rgb(205,57,44)" fg:x="523" fg:w="2"/><text x="41.9898%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.7398%" y="485" width="0.1596%" height="15" fill="rgb(226,151,19)" fg:x="523" fg:w="2"/><text x="41.9898%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8196%" y="469" width="0.0798%" height="15" fill="rgb(230,72,30)" fg:x="524" fg:w="1"/><text x="42.0696%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.8994%" y="437" width="0.0798%" height="15" fill="rgb(244,0,8)" fg:x="525" fg:w="1"/><text x="42.1494%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.8994%" y="421" width="0.0798%" height="15" fill="rgb(230,192,6)" fg:x="525" fg:w="1"/><text x="42.1494%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="41.7398%" y="533" width="0.3192%" height="15" fill="rgb(233,207,13)" fg:x="523" fg:w="4"/><text x="41.9898%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="41.7398%" y="517" width="0.3192%" height="15" fill="rgb(206,227,7)" fg:x="523" fg:w="4"/><text x="41.9898%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.8994%" y="501" width="0.1596%" height="15" fill="rgb(213,217,25)" fg:x="525" fg:w="2"/><text x="42.1494%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8994%" y="485" width="0.1596%" height="15" fill="rgb(249,75,4)" fg:x="525" fg:w="2"/><text x="42.1494%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.8994%" y="469" width="0.1596%" height="15" fill="rgb(225,114,18)" fg:x="525" fg:w="2"/><text x="42.1494%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8994%" y="453" width="0.1596%" height="15" fill="rgb(211,162,40)" fg:x="525" fg:w="2"/><text x="42.1494%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.9792%" y="437" width="0.0798%" height="15" fill="rgb(206,49,29)" fg:x="526" fg:w="1"/><text x="42.2292%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9792%" y="421" width="0.0798%" height="15" fill="rgb(244,8,6)" fg:x="526" fg:w="1"/><text x="42.2292%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="42.0591%" y="517" width="0.0798%" height="15" fill="rgb(231,194,28)" fg:x="527" fg:w="1"/><text x="42.3091%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.0591%" y="501" width="0.0798%" height="15" fill="rgb(210,69,5)" fg:x="527" fg:w="1"/><text x="42.3091%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0591%" y="485" width="0.0798%" height="15" fill="rgb(216,186,12)" fg:x="527" fg:w="1"/><text x="42.3091%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.0591%" y="469" width="0.0798%" height="15" fill="rgb(238,61,15)" fg:x="527" fg:w="1"/><text x="42.3091%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0591%" y="453" width="0.0798%" height="15" fill="rgb(226,104,1)" fg:x="527" fg:w="1"/><text x="42.3091%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.0591%" y="437" width="0.0798%" height="15" fill="rgb(229,128,15)" fg:x="527" fg:w="1"/><text x="42.3091%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.0591%" y="421" width="0.0798%" height="15" fill="rgb(247,110,15)" fg:x="527" fg:w="1"/><text x="42.3091%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0591%" y="405" width="0.0798%" height="15" fill="rgb(210,74,48)" fg:x="527" fg:w="1"/><text x="42.3091%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="42.1389%" y="517" width="0.0798%" height="15" fill="rgb(246,121,10)" fg:x="528" fg:w="1"/><text x="42.3889%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3783%" y="469" width="0.0798%" height="15" fill="rgb(214,156,37)" fg:x="531" fg:w="1"/><text x="42.6283%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3783%" y="453" width="0.0798%" height="15" fill="rgb(214,210,34)" fg:x="531" fg:w="1"/><text x="42.6283%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3783%" y="437" width="0.0798%" height="15" fill="rgb(237,93,35)" fg:x="531" fg:w="1"/><text x="42.6283%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3783%" y="421" width="0.0798%" height="15" fill="rgb(206,36,8)" fg:x="531" fg:w="1"/><text x="42.6283%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.3783%" y="405" width="0.0798%" height="15" fill="rgb(208,151,12)" fg:x="531" fg:w="1"/><text x="42.6283%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.3783%" y="389" width="0.0798%" height="15" fill="rgb(225,133,52)" fg:x="531" fg:w="1"/><text x="42.6283%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.3783%" y="373" width="0.0798%" height="15" fill="rgb(231,71,53)" fg:x="531" fg:w="1"/><text x="42.6283%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.3783%" y="357" width="0.0798%" height="15" fill="rgb(243,76,21)" fg:x="531" fg:w="1"/><text x="42.6283%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.3783%" y="341" width="0.0798%" height="15" fill="rgb(252,144,3)" fg:x="531" fg:w="1"/><text x="42.6283%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.3783%" y="325" width="0.0798%" height="15" fill="rgb(231,199,10)" fg:x="531" fg:w="1"/><text x="42.6283%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.3783%" y="309" width="0.0798%" height="15" fill="rgb(215,18,11)" fg:x="531" fg:w="1"/><text x="42.6283%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.3783%" y="293" width="0.0798%" height="15" fill="rgb(241,65,24)" fg:x="531" fg:w="1"/><text x="42.6283%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.3783%" y="277" width="0.0798%" height="15" fill="rgb(251,192,38)" fg:x="531" fg:w="1"/><text x="42.6283%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.3783%" y="261" width="0.0798%" height="15" fill="rgb(205,9,35)" fg:x="531" fg:w="1"/><text x="42.6283%" y="271.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="42.3783%" y="485" width="0.1596%" height="15" fill="rgb(229,225,49)" fg:x="531" fg:w="2"/><text x="42.6283%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.4581%" y="469" width="0.0798%" height="15" fill="rgb(207,125,39)" fg:x="532" fg:w="1"/><text x="42.7081%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.4581%" y="453" width="0.0798%" height="15" fill="rgb(222,78,19)" fg:x="532" fg:w="1"/><text x="42.7081%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.4581%" y="437" width="0.0798%" height="15" fill="rgb(248,207,20)" fg:x="532" fg:w="1"/><text x="42.7081%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.4581%" y="421" width="0.0798%" height="15" fill="rgb(205,103,49)" fg:x="532" fg:w="1"/><text x="42.7081%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.5379%" y="421" width="0.0798%" height="15" fill="rgb(216,42,28)" fg:x="533" fg:w="1"/><text x="42.7879%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5379%" y="405" width="0.0798%" height="15" fill="rgb(213,205,53)" fg:x="533" fg:w="1"/><text x="42.7879%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="42.0591%" y="533" width="0.6385%" height="15" fill="rgb(239,140,53)" fg:x="527" fg:w="8"/><text x="42.3091%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="42.2187%" y="517" width="0.4789%" height="15" fill="rgb(248,95,9)" fg:x="529" fg:w="6"/><text x="42.4687%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="42.2985%" y="501" width="0.3990%" height="15" fill="rgb(254,58,47)" fg:x="530" fg:w="5"/><text x="42.5485%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="42.5379%" y="485" width="0.1596%" height="15" fill="rgb(234,227,14)" fg:x="533" fg:w="2"/><text x="42.7879%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.5379%" y="469" width="0.1596%" height="15" fill="rgb(205,192,45)" fg:x="533" fg:w="2"/><text x="42.7879%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="42.5379%" y="453" width="0.1596%" height="15" fill="rgb(253,187,31)" fg:x="533" fg:w="2"/><text x="42.7879%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="42.5379%" y="437" width="0.1596%" height="15" fill="rgb(222,6,32)" fg:x="533" fg:w="2"/><text x="42.7879%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.6177%" y="421" width="0.0798%" height="15" fill="rgb(249,190,19)" fg:x="534" fg:w="1"/><text x="42.8677%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (13 samples, 1.04%)</title><rect x="41.7398%" y="549" width="1.0375%" height="15" fill="rgb(251,28,20)" fg:x="523" fg:w="13"/><text x="41.9898%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6975%" y="533" width="0.0798%" height="15" fill="rgb(210,223,40)" fg:x="535" fg:w="1"/><text x="42.9475%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6975%" y="517" width="0.0798%" height="15" fill="rgb(216,137,22)" fg:x="535" fg:w="1"/><text x="42.9475%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6975%" y="501" width="0.0798%" height="15" fill="rgb(247,39,34)" fg:x="535" fg:w="1"/><text x="42.9475%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.6975%" y="485" width="0.0798%" height="15" fill="rgb(239,43,50)" fg:x="535" fg:w="1"/><text x="42.9475%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.6975%" y="469" width="0.0798%" height="15" fill="rgb(241,212,9)" fg:x="535" fg:w="1"/><text x="42.9475%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.6975%" y="453" width="0.0798%" height="15" fill="rgb(205,8,2)" fg:x="535" fg:w="1"/><text x="42.9475%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.6975%" y="437" width="0.0798%" height="15" fill="rgb(217,173,54)" fg:x="535" fg:w="1"/><text x="42.9475%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.6975%" y="421" width="0.0798%" height="15" fill="rgb(208,149,52)" fg:x="535" fg:w="1"/><text x="42.9475%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.6975%" y="405" width="0.0798%" height="15" fill="rgb(239,99,40)" fg:x="535" fg:w="1"/><text x="42.9475%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.6975%" y="389" width="0.0798%" height="15" fill="rgb(233,214,26)" fg:x="535" fg:w="1"/><text x="42.9475%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.6975%" y="373" width="0.0798%" height="15" fill="rgb(231,225,37)" fg:x="535" fg:w="1"/><text x="42.9475%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.6975%" y="357" width="0.0798%" height="15" fill="rgb(252,55,35)" fg:x="535" fg:w="1"/><text x="42.9475%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.6975%" y="341" width="0.0798%" height="15" fill="rgb(239,43,18)" fg:x="535" fg:w="1"/><text x="42.9475%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (18 samples, 1.44%)</title><rect x="41.4206%" y="581" width="1.4366%" height="15" fill="rgb(251,125,49)" fg:x="519" fg:w="18"/><text x="41.6706%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (18 samples, 1.44%)</title><rect x="41.4206%" y="565" width="1.4366%" height="15" fill="rgb(212,83,54)" fg:x="519" fg:w="18"/><text x="41.6706%" y="575.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="42.7773%" y="549" width="0.0798%" height="15" fill="rgb(250,75,6)" fg:x="536" fg:w="1"/><text x="43.0273%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="42.7773%" y="533" width="0.0798%" height="15" fill="rgb(252,36,40)" fg:x="536" fg:w="1"/><text x="43.0273%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="42.7773%" y="517" width="0.0798%" height="15" fill="rgb(230,91,51)" fg:x="536" fg:w="1"/><text x="43.0273%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7773%" y="501" width="0.0798%" height="15" fill="rgb(212,92,28)" fg:x="536" fg:w="1"/><text x="43.0273%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7773%" y="485" width="0.0798%" height="15" fill="rgb(227,13,22)" fg:x="536" fg:w="1"/><text x="43.0273%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="42.8571%" y="549" width="0.1596%" height="15" fill="rgb(239,204,32)" fg:x="537" fg:w="2"/><text x="43.1071%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9370%" y="533" width="0.0798%" height="15" fill="rgb(228,49,41)" fg:x="538" fg:w="1"/><text x="43.1870%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="42.8571%" y="565" width="0.2394%" height="15" fill="rgb(206,95,6)" fg:x="537" fg:w="3"/><text x="43.1071%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="43.0168%" y="549" width="0.0798%" height="15" fill="rgb(251,20,14)" fg:x="539" fg:w="1"/><text x="43.2668%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.0168%" y="533" width="0.0798%" height="15" fill="rgb(214,99,28)" fg:x="539" fg:w="1"/><text x="43.2668%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="43.0168%" y="517" width="0.0798%" height="15" fill="rgb(239,122,54)" fg:x="539" fg:w="1"/><text x="43.2668%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="43.0168%" y="501" width="0.0798%" height="15" fill="rgb(218,217,46)" fg:x="539" fg:w="1"/><text x="43.2668%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="43.0168%" y="485" width="0.0798%" height="15" fill="rgb(249,106,28)" fg:x="539" fg:w="1"/><text x="43.2668%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0966%" y="485" width="0.0798%" height="15" fill="rgb(250,158,18)" fg:x="540" fg:w="1"/><text x="43.3466%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="43.0966%" y="565" width="0.1596%" height="15" fill="rgb(226,137,29)" fg:x="540" fg:w="2"/><text x="43.3466%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="43.0966%" y="549" width="0.1596%" height="15" fill="rgb(210,188,1)" fg:x="540" fg:w="2"/><text x="43.3466%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="43.0966%" y="533" width="0.1596%" height="15" fill="rgb(227,84,42)" fg:x="540" fg:w="2"/><text x="43.3466%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="43.0966%" y="517" width="0.1596%" height="15" fill="rgb(222,147,48)" fg:x="540" fg:w="2"/><text x="43.3466%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="43.0966%" y="501" width="0.1596%" height="15" fill="rgb(241,150,43)" fg:x="540" fg:w="2"/><text x="43.3466%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.1764%" y="485" width="0.0798%" height="15" fill="rgb(206,139,52)" fg:x="541" fg:w="1"/><text x="43.4264%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.1764%" y="469" width="0.0798%" height="15" fill="rgb(230,63,14)" fg:x="541" fg:w="1"/><text x="43.4264%" y="479.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="43.2562%" y="565" width="0.1596%" height="15" fill="rgb(247,8,20)" fg:x="542" fg:w="2"/><text x="43.5062%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="43.3360%" y="549" width="0.0798%" height="15" fill="rgb(213,115,4)" fg:x="543" fg:w="1"/><text x="43.5860%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="43.3360%" y="533" width="0.0798%" height="15" fill="rgb(241,79,49)" fg:x="543" fg:w="1"/><text x="43.5860%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="43.3360%" y="517" width="0.0798%" height="15" fill="rgb(222,42,35)" fg:x="543" fg:w="1"/><text x="43.5860%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.3360%" y="501" width="0.0798%" height="15" fill="rgb(247,59,23)" fg:x="543" fg:w="1"/><text x="43.5860%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="43.3360%" y="485" width="0.0798%" height="15" fill="rgb(247,93,18)" fg:x="543" fg:w="1"/><text x="43.5860%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="43.4956%" y="533" width="0.0798%" height="15" fill="rgb(249,107,47)" fg:x="545" fg:w="1"/><text x="43.7456%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4956%" y="517" width="0.0798%" height="15" fill="rgb(219,27,1)" fg:x="545" fg:w="1"/><text x="43.7456%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4956%" y="501" width="0.0798%" height="15" fill="rgb(217,82,32)" fg:x="545" fg:w="1"/><text x="43.7456%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="43.4158%" y="549" width="0.2394%" height="15" fill="rgb(250,129,47)" fg:x="544" fg:w="3"/><text x="43.6658%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="43.5754%" y="533" width="0.0798%" height="15" fill="rgb(253,88,35)" fg:x="546" fg:w="1"/><text x="43.8254%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.5754%" y="517" width="0.0798%" height="15" fill="rgb(245,221,14)" fg:x="546" fg:w="1"/><text x="43.8254%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.6552%" y="517" width="0.0798%" height="15" fill="rgb(217,119,54)" fg:x="547" fg:w="1"/><text x="43.9052%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.6552%" y="501" width="0.0798%" height="15" fill="rgb(247,128,31)" fg:x="547" fg:w="1"/><text x="43.9052%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="43.6552%" y="533" width="0.2394%" height="15" fill="rgb(211,99,22)" fg:x="547" fg:w="3"/><text x="43.9052%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.7350%" y="517" width="0.1596%" height="15" fill="rgb(212,20,17)" fg:x="548" fg:w="2"/><text x="43.9850%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.7350%" y="501" width="0.1596%" height="15" fill="rgb(209,159,29)" fg:x="548" fg:w="2"/><text x="43.9850%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.8148%" y="485" width="0.0798%" height="15" fill="rgb(222,177,53)" fg:x="549" fg:w="1"/><text x="44.0648%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.8148%" y="469" width="0.0798%" height="15" fill="rgb(234,46,43)" fg:x="549" fg:w="1"/><text x="44.0648%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.8947%" y="485" width="0.0798%" height="15" fill="rgb(208,108,14)" fg:x="550" fg:w="1"/><text x="44.1447%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="43.8947%" y="501" width="0.1596%" height="15" fill="rgb(226,78,53)" fg:x="550" fg:w="2"/><text x="44.1447%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.9745%" y="485" width="0.0798%" height="15" fill="rgb(230,20,41)" fg:x="551" fg:w="1"/><text x="44.2245%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.9745%" y="469" width="0.0798%" height="15" fill="rgb(213,195,35)" fg:x="551" fg:w="1"/><text x="44.2245%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="43.9745%" y="453" width="0.0798%" height="15" fill="rgb(242,62,36)" fg:x="551" fg:w="1"/><text x="44.2245%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="44.0543%" y="501" width="0.0798%" height="15" fill="rgb(222,210,37)" fg:x="552" fg:w="1"/><text x="44.3043%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0543%" y="485" width="0.0798%" height="15" fill="rgb(232,107,19)" fg:x="552" fg:w="1"/><text x="44.3043%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="43.8947%" y="517" width="0.3192%" height="15" fill="rgb(235,85,17)" fg:x="550" fg:w="4"/><text x="44.1447%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="44.1341%" y="501" width="0.0798%" height="15" fill="rgb(219,195,31)" fg:x="553" fg:w="1"/><text x="44.3841%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.1341%" y="485" width="0.0798%" height="15" fill="rgb(231,183,30)" fg:x="553" fg:w="1"/><text x="44.3841%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="44.1341%" y="469" width="0.0798%" height="15" fill="rgb(212,0,11)" fg:x="553" fg:w="1"/><text x="44.3841%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="44.1341%" y="453" width="0.0798%" height="15" fill="rgb(249,53,54)" fg:x="553" fg:w="1"/><text x="44.3841%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="44.1341%" y="437" width="0.0798%" height="15" fill="rgb(211,118,13)" fg:x="553" fg:w="1"/><text x="44.3841%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::new_from_entity (1 samples, 0.08%)</title><rect x="44.2139%" y="517" width="0.0798%" height="15" fill="rgb(237,42,9)" fg:x="554" fg:w="1"/><text x="44.4639%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.4533%" y="485" width="0.0798%" height="15" fill="rgb(227,68,32)" fg:x="557" fg:w="1"/><text x="44.7033%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.4533%" y="469" width="0.0798%" height="15" fill="rgb(238,10,7)" fg:x="557" fg:w="1"/><text x="44.7033%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="44.4533%" y="453" width="0.0798%" height="15" fill="rgb(224,42,12)" fg:x="557" fg:w="1"/><text x="44.7033%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.5331%" y="437" width="0.0798%" height="15" fill="rgb(252,190,5)" fg:x="558" fg:w="1"/><text x="44.7831%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.5331%" y="421" width="0.0798%" height="15" fill="rgb(220,214,39)" fg:x="558" fg:w="1"/><text x="44.7831%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="44.6129%" y="389" width="0.0798%" height="15" fill="rgb(247,98,4)" fg:x="559" fg:w="1"/><text x="44.8629%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="44.6129%" y="373" width="0.0798%" height="15" fill="rgb(211,60,12)" fg:x="559" fg:w="1"/><text x="44.8629%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="44.5331%" y="485" width="0.2394%" height="15" fill="rgb(224,42,10)" fg:x="558" fg:w="3"/><text x="44.7831%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="44.5331%" y="469" width="0.2394%" height="15" fill="rgb(217,167,4)" fg:x="558" fg:w="3"/><text x="44.7831%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="44.5331%" y="453" width="0.2394%" height="15" fill="rgb(253,18,17)" fg:x="558" fg:w="3"/><text x="44.7831%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="44.6129%" y="437" width="0.1596%" height="15" fill="rgb(249,186,44)" fg:x="559" fg:w="2"/><text x="44.8629%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="44.6129%" y="421" width="0.1596%" height="15" fill="rgb(254,124,54)" fg:x="559" fg:w="2"/><text x="44.8629%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="44.6129%" y="405" width="0.1596%" height="15" fill="rgb(220,124,39)" fg:x="559" fg:w="2"/><text x="44.8629%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6927%" y="389" width="0.0798%" height="15" fill="rgb(225,96,46)" fg:x="560" fg:w="1"/><text x="44.9427%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="43.6552%" y="549" width="1.1971%" height="15" fill="rgb(221,106,12)" fg:x="547" fg:w="15"/><text x="43.9052%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.96%)</title><rect x="43.8947%" y="533" width="0.9577%" height="15" fill="rgb(227,133,23)" fg:x="550" fg:w="12"/><text x="44.1447%" y="543.50"></text></g><g><title>serde_json::value::to_value (7 samples, 0.56%)</title><rect x="44.2937%" y="517" width="0.5587%" height="15" fill="rgb(216,44,52)" fg:x="555" fg:w="7"/><text x="44.5437%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="44.3735%" y="501" width="0.4789%" height="15" fill="rgb(239,149,7)" fg:x="556" fg:w="6"/><text x="44.6235%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="44.7725%" y="485" width="0.0798%" height="15" fill="rgb(211,157,31)" fg:x="561" fg:w="1"/><text x="45.0225%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (410 samples, 32.72%)</title><rect x="12.2107%" y="597" width="32.7215%" height="15" fill="rgb(206,215,22)" fg:x="153" fg:w="410"/><text x="12.4607%" y="607.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::p..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (26 samples, 2.08%)</title><rect x="42.8571%" y="581" width="2.0750%" height="15" fill="rgb(208,113,15)" fg:x="537" fg:w="26"/><text x="43.1071%" y="591.50">p..</text></g><g><title>plugins_core::build::Build::save (19 samples, 1.52%)</title><rect x="43.4158%" y="565" width="1.5164%" height="15" fill="rgb(207,189,15)" fg:x="544" fg:w="19"/><text x="43.6658%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8524%" y="549" width="0.0798%" height="15" fill="rgb(231,115,4)" fg:x="562" fg:w="1"/><text x="45.1024%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.8524%" y="533" width="0.0798%" height="15" fill="rgb(253,117,2)" fg:x="562" fg:w="1"/><text x="45.1024%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.8524%" y="517" width="0.0798%" height="15" fill="rgb(248,48,24)" fg:x="562" fg:w="1"/><text x="45.1024%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.8524%" y="501" width="0.0798%" height="15" fill="rgb(241,28,46)" fg:x="562" fg:w="1"/><text x="45.1024%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8524%" y="485" width="0.0798%" height="15" fill="rgb(216,165,52)" fg:x="562" fg:w="1"/><text x="45.1024%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8524%" y="469" width="0.0798%" height="15" fill="rgb(220,222,34)" fg:x="562" fg:w="1"/><text x="45.1024%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.8524%" y="453" width="0.0798%" height="15" fill="rgb(247,222,49)" fg:x="562" fg:w="1"/><text x="45.1024%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.8524%" y="437" width="0.0798%" height="15" fill="rgb(240,10,31)" fg:x="562" fg:w="1"/><text x="45.1024%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.8524%" y="421" width="0.0798%" height="15" fill="rgb(221,199,35)" fg:x="562" fg:w="1"/><text x="45.1024%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="44.8524%" y="405" width="0.0798%" height="15" fill="rgb(230,223,11)" fg:x="562" fg:w="1"/><text x="45.1024%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="44.8524%" y="389" width="0.0798%" height="15" fill="rgb(218,82,45)" fg:x="562" fg:w="1"/><text x="45.1024%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="44.9322%" y="597" width="0.0798%" height="15" fill="rgb(233,213,33)" fg:x="563" fg:w="1"/><text x="45.1822%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="45.0120%" y="581" width="0.1596%" height="15" fill="rgb(210,143,52)" fg:x="564" fg:w="2"/><text x="45.2620%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.0918%" y="565" width="0.0798%" height="15" fill="rgb(206,95,4)" fg:x="565" fg:w="1"/><text x="45.3418%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.0918%" y="549" width="0.0798%" height="15" fill="rgb(246,164,46)" fg:x="565" fg:w="1"/><text x="45.3418%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.0918%" y="533" width="0.0798%" height="15" fill="rgb(213,210,47)" fg:x="565" fg:w="1"/><text x="45.3418%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="45.1716%" y="581" width="0.1596%" height="15" fill="rgb(210,12,38)" fg:x="566" fg:w="2"/><text x="45.4216%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="45.1716%" y="565" width="0.1596%" height="15" fill="rgb(252,192,54)" fg:x="566" fg:w="2"/><text x="45.4216%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="45.1716%" y="549" width="0.1596%" height="15" fill="rgb(242,92,6)" fg:x="566" fg:w="2"/><text x="45.4216%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="45.1716%" y="533" width="0.1596%" height="15" fill="rgb(253,154,15)" fg:x="566" fg:w="2"/><text x="45.4216%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="45.1716%" y="517" width="0.1596%" height="15" fill="rgb(209,20,43)" fg:x="566" fg:w="2"/><text x="45.4216%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="45.2514%" y="501" width="0.0798%" height="15" fill="rgb(232,28,49)" fg:x="567" fg:w="1"/><text x="45.5014%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="45.2514%" y="485" width="0.0798%" height="15" fill="rgb(248,131,53)" fg:x="567" fg:w="1"/><text x="45.5014%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.2514%" y="469" width="0.0798%" height="15" fill="rgb(214,16,30)" fg:x="567" fg:w="1"/><text x="45.5014%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.2514%" y="453" width="0.0798%" height="15" fill="rgb(245,16,0)" fg:x="567" fg:w="1"/><text x="45.5014%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.2514%" y="437" width="0.0798%" height="15" fill="rgb(245,17,35)" fg:x="567" fg:w="1"/><text x="45.5014%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.2514%" y="421" width="0.0798%" height="15" fill="rgb(249,27,53)" fg:x="567" fg:w="1"/><text x="45.5014%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.2514%" y="405" width="0.0798%" height="15" fill="rgb(214,73,24)" fg:x="567" fg:w="1"/><text x="45.5014%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.2514%" y="389" width="0.0798%" height="15" fill="rgb(223,84,37)" fg:x="567" fg:w="1"/><text x="45.5014%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.2514%" y="373" width="0.0798%" height="15" fill="rgb(210,109,28)" fg:x="567" fg:w="1"/><text x="45.5014%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.2514%" y="357" width="0.0798%" height="15" fill="rgb(208,186,6)" fg:x="567" fg:w="1"/><text x="45.5014%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.2514%" y="341" width="0.0798%" height="15" fill="rgb(235,201,30)" fg:x="567" fg:w="1"/><text x="45.5014%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.2514%" y="325" width="0.0798%" height="15" fill="rgb(216,198,48)" fg:x="567" fg:w="1"/><text x="45.5014%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.2514%" y="309" width="0.0798%" height="15" fill="rgb(254,186,25)" fg:x="567" fg:w="1"/><text x="45.5014%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.2514%" y="293" width="0.0798%" height="15" fill="rgb(227,87,5)" fg:x="567" fg:w="1"/><text x="45.5014%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="45.2514%" y="277" width="0.0798%" height="15" fill="rgb(236,205,25)" fg:x="567" fg:w="1"/><text x="45.5014%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.2514%" y="261" width="0.0798%" height="15" fill="rgb(229,99,32)" fg:x="567" fg:w="1"/><text x="45.5014%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="45.4110%" y="549" width="0.0798%" height="15" fill="rgb(231,177,31)" fg:x="569" fg:w="1"/><text x="45.6610%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.4110%" y="533" width="0.0798%" height="15" fill="rgb(246,15,2)" fg:x="569" fg:w="1"/><text x="45.6610%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.4110%" y="517" width="0.0798%" height="15" fill="rgb(207,39,15)" fg:x="569" fg:w="1"/><text x="45.6610%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="45.4110%" y="501" width="0.0798%" height="15" fill="rgb(207,44,9)" fg:x="569" fg:w="1"/><text x="45.6610%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="45.5706%" y="517" width="0.0798%" height="15" fill="rgb(225,224,33)" fg:x="571" fg:w="1"/><text x="45.8206%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="45.4908%" y="549" width="0.3192%" height="15" fill="rgb(252,151,3)" fg:x="570" fg:w="4"/><text x="45.7408%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="45.5706%" y="533" width="0.2394%" height="15" fill="rgb(211,140,13)" fg:x="571" fg:w="3"/><text x="45.8206%" y="543.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="45.6504%" y="517" width="0.1596%" height="15" fill="rgb(239,225,17)" fg:x="572" fg:w="2"/><text x="45.9004%" y="527.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="45.7302%" y="501" width="0.0798%" height="15" fill="rgb(223,170,52)" fg:x="573" fg:w="1"/><text x="45.9802%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="45.8101%" y="517" width="0.1596%" height="15" fill="rgb(212,64,21)" fg:x="574" fg:w="2"/><text x="46.0601%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.1293%" y="421" width="0.0798%" height="15" fill="rgb(236,126,48)" fg:x="578" fg:w="1"/><text x="46.3793%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="45.9697%" y="469" width="0.3990%" height="15" fill="rgb(209,135,11)" fg:x="576" fg:w="5"/><text x="46.2197%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="46.0495%" y="453" width="0.3192%" height="15" fill="rgb(228,126,40)" fg:x="577" fg:w="4"/><text x="46.2995%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="46.1293%" y="437" width="0.2394%" height="15" fill="rgb(205,196,36)" fg:x="578" fg:w="3"/><text x="46.3793%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="46.2091%" y="421" width="0.1596%" height="15" fill="rgb(243,160,33)" fg:x="579" fg:w="2"/><text x="46.4591%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="46.3687%" y="437" width="0.1596%" height="15" fill="rgb(210,84,20)" fg:x="581" fg:w="2"/><text x="46.6187%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="45.9697%" y="485" width="0.6385%" height="15" fill="rgb(228,213,30)" fg:x="576" fg:w="8"/><text x="46.2197%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="46.3687%" y="469" width="0.2394%" height="15" fill="rgb(252,33,45)" fg:x="581" fg:w="3"/><text x="46.6187%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="46.3687%" y="453" width="0.2394%" height="15" fill="rgb(254,227,20)" fg:x="581" fg:w="3"/><text x="46.6187%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="46.5283%" y="437" width="0.0798%" height="15" fill="rgb(228,192,2)" fg:x="583" fg:w="1"/><text x="46.7783%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.6081%" y="469" width="0.0798%" height="15" fill="rgb(233,32,8)" fg:x="584" fg:w="1"/><text x="46.8581%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="46.6879%" y="469" width="0.0798%" height="15" fill="rgb(220,146,47)" fg:x="585" fg:w="1"/><text x="46.9379%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="46.7678%" y="469" width="0.2394%" height="15" fill="rgb(246,194,1)" fg:x="586" fg:w="3"/><text x="47.0178%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="46.7678%" y="453" width="0.2394%" height="15" fill="rgb(218,203,9)" fg:x="586" fg:w="3"/><text x="47.0178%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="46.7678%" y="437" width="0.2394%" height="15" fill="rgb(237,97,14)" fg:x="586" fg:w="3"/><text x="47.0178%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="46.7678%" y="421" width="0.2394%" height="15" fill="rgb(239,76,15)" fg:x="586" fg:w="3"/><text x="47.0178%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.9274%" y="405" width="0.0798%" height="15" fill="rgb(222,53,45)" fg:x="588" fg:w="1"/><text x="47.1774%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.9274%" y="389" width="0.0798%" height="15" fill="rgb(237,88,5)" fg:x="588" fg:w="1"/><text x="47.1774%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.9274%" y="373" width="0.0798%" height="15" fill="rgb(218,223,35)" fg:x="588" fg:w="1"/><text x="47.1774%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="47.0870%" y="421" width="0.1596%" height="15" fill="rgb(243,229,38)" fg:x="590" fg:w="2"/><text x="47.3370%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.0870%" y="405" width="0.1596%" height="15" fill="rgb(240,75,41)" fg:x="590" fg:w="2"/><text x="47.3370%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.0870%" y="389" width="0.1596%" height="15" fill="rgb(209,110,37)" fg:x="590" fg:w="2"/><text x="47.3370%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.1668%" y="373" width="0.0798%" height="15" fill="rgb(221,130,46)" fg:x="591" fg:w="1"/><text x="47.4168%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.1668%" y="357" width="0.0798%" height="15" fill="rgb(237,160,20)" fg:x="591" fg:w="1"/><text x="47.4168%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.1668%" y="341" width="0.0798%" height="15" fill="rgb(234,126,24)" fg:x="591" fg:w="1"/><text x="47.4168%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="47.1668%" y="325" width="0.0798%" height="15" fill="rgb(207,177,9)" fg:x="591" fg:w="1"/><text x="47.4168%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="47.2466%" y="405" width="0.0798%" height="15" fill="rgb(231,191,33)" fg:x="592" fg:w="1"/><text x="47.4966%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.2466%" y="389" width="0.0798%" height="15" fill="rgb(207,42,1)" fg:x="592" fg:w="1"/><text x="47.4966%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.2466%" y="373" width="0.0798%" height="15" fill="rgb(218,34,50)" fg:x="592" fg:w="1"/><text x="47.4966%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="47.3264%" y="389" width="0.0798%" height="15" fill="rgb(254,126,39)" fg:x="593" fg:w="1"/><text x="47.5764%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.3264%" y="373" width="0.0798%" height="15" fill="rgb(251,17,26)" fg:x="593" fg:w="1"/><text x="47.5764%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.3264%" y="357" width="0.0798%" height="15" fill="rgb(252,215,34)" fg:x="593" fg:w="1"/><text x="47.5764%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.3264%" y="341" width="0.0798%" height="15" fill="rgb(217,120,44)" fg:x="593" fg:w="1"/><text x="47.5764%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="47.4062%" y="389" width="0.1596%" height="15" fill="rgb(211,31,11)" fg:x="594" fg:w="2"/><text x="47.6562%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="47.4062%" y="373" width="0.1596%" height="15" fill="rgb(222,69,51)" fg:x="594" fg:w="2"/><text x="47.6562%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.4062%" y="357" width="0.1596%" height="15" fill="rgb(215,229,42)" fg:x="594" fg:w="2"/><text x="47.6562%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="47.2466%" y="421" width="0.3990%" height="15" fill="rgb(212,102,15)" fg:x="592" fg:w="5"/><text x="47.4966%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="47.3264%" y="405" width="0.3192%" height="15" fill="rgb(205,179,41)" fg:x="593" fg:w="4"/><text x="47.5764%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.5658%" y="389" width="0.0798%" height="15" fill="rgb(219,148,46)" fg:x="596" fg:w="1"/><text x="47.8158%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.5658%" y="373" width="0.0798%" height="15" fill="rgb(243,40,19)" fg:x="596" fg:w="1"/><text x="47.8158%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.72%)</title><rect x="47.0870%" y="453" width="0.7183%" height="15" fill="rgb(208,206,34)" fg:x="590" fg:w="9"/><text x="47.3370%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="47.0870%" y="437" width="0.7183%" height="15" fill="rgb(244,184,38)" fg:x="590" fg:w="9"/><text x="47.3370%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.6457%" y="421" width="0.1596%" height="15" fill="rgb(244,151,47)" fg:x="597" fg:w="2"/><text x="47.8957%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.6457%" y="405" width="0.1596%" height="15" fill="rgb(236,134,42)" fg:x="597" fg:w="2"/><text x="47.8957%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.6457%" y="389" width="0.1596%" height="15" fill="rgb(233,93,22)" fg:x="597" fg:w="2"/><text x="47.8957%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="47.8053%" y="453" width="0.5587%" height="15" fill="rgb(211,202,10)" fg:x="599" fg:w="7"/><text x="48.0553%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="48.0447%" y="437" width="0.3192%" height="15" fill="rgb(240,63,8)" fg:x="602" fg:w="4"/><text x="48.2947%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="48.1245%" y="421" width="0.2394%" height="15" fill="rgb(214,9,4)" fg:x="603" fg:w="3"/><text x="48.3745%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="48.1245%" y="405" width="0.2394%" height="15" fill="rgb(243,66,45)" fg:x="603" fg:w="3"/><text x="48.3745%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.6832%" y="437" width="0.0798%" height="15" fill="rgb(220,50,42)" fg:x="610" fg:w="1"/><text x="48.9332%" y="447.50"></text></g><g><title>ryu::pretty::format64 (2 samples, 0.16%)</title><rect x="48.7630%" y="437" width="0.1596%" height="15" fill="rgb(220,134,27)" fg:x="611" fg:w="2"/><text x="49.0130%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="48.9226%" y="437" width="0.0798%" height="15" fill="rgb(246,151,50)" fg:x="613" fg:w="1"/><text x="49.1726%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="48.9226%" y="421" width="0.0798%" height="15" fill="rgb(238,216,27)" fg:x="613" fg:w="1"/><text x="49.1726%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="49.0822%" y="421" width="0.3192%" height="15" fill="rgb(250,92,11)" fg:x="615" fg:w="4"/><text x="49.3322%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="49.0822%" y="405" width="0.3192%" height="15" fill="rgb(248,183,6)" fg:x="615" fg:w="4"/><text x="49.3322%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="49.2418%" y="389" width="0.1596%" height="15" fill="rgb(211,204,50)" fg:x="617" fg:w="2"/><text x="49.4918%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="49.2418%" y="373" width="0.1596%" height="15" fill="rgb(252,55,47)" fg:x="617" fg:w="2"/><text x="49.4918%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="49.4014%" y="421" width="0.0798%" height="15" fill="rgb(240,198,32)" fg:x="619" fg:w="1"/><text x="49.6514%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="49.4014%" y="405" width="0.0798%" height="15" fill="rgb(224,203,19)" fg:x="619" fg:w="1"/><text x="49.6514%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.4014%" y="389" width="0.0798%" height="15" fill="rgb(205,27,16)" fg:x="619" fg:w="1"/><text x="49.6514%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.4014%" y="373" width="0.0798%" height="15" fill="rgb(224,226,17)" fg:x="619" fg:w="1"/><text x="49.6514%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="49.4014%" y="357" width="0.0798%" height="15" fill="rgb(205,216,54)" fg:x="619" fg:w="1"/><text x="49.6514%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="49.0024%" y="437" width="0.5587%" height="15" fill="rgb(248,168,46)" fg:x="614" fg:w="7"/><text x="49.2524%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.4812%" y="421" width="0.0798%" height="15" fill="rgb(226,111,45)" fg:x="620" fg:w="1"/><text x="49.7312%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.4812%" y="405" width="0.0798%" height="15" fill="rgb(231,15,9)" fg:x="620" fg:w="1"/><text x="49.7312%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.71%)</title><rect x="47.0072%" y="469" width="2.7135%" height="15" fill="rgb(243,168,3)" fg:x="589" fg:w="34"/><text x="47.2572%" y="479.50">se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="48.3639%" y="453" width="1.3567%" height="15" fill="rgb(221,220,54)" fg:x="606" fg:w="17"/><text x="48.6139%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="49.5611%" y="437" width="0.1596%" height="15" fill="rgb(232,174,38)" fg:x="621" fg:w="2"/><text x="49.8111%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (53 samples, 4.23%)</title><rect x="45.9697%" y="501" width="4.2298%" height="15" fill="rgb(205,14,38)" fg:x="576" fg:w="53"/><text x="46.2197%" y="511.50">&lt;serd..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 3.59%)</title><rect x="46.6081%" y="485" width="3.5914%" height="15" fill="rgb(234,89,19)" fg:x="584" fg:w="45"/><text x="46.8581%" y="495.50">serd..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="49.7207%" y="469" width="0.4789%" height="15" fill="rgb(216,68,51)" fg:x="623" fg:w="6"/><text x="49.9707%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="49.8803%" y="453" width="0.3192%" height="15" fill="rgb(213,49,2)" fg:x="625" fg:w="4"/><text x="50.1303%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="50.0399%" y="437" width="0.1596%" height="15" fill="rgb(242,146,30)" fg:x="627" fg:w="2"/><text x="50.2899%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.1995%" y="469" width="0.0798%" height="15" fill="rgb(224,188,11)" fg:x="629" fg:w="1"/><text x="50.4495%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.3591%" y="453" width="0.1596%" height="15" fill="rgb(213,159,11)" fg:x="631" fg:w="2"/><text x="50.6091%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.5986%" y="437" width="0.1596%" height="15" fill="rgb(229,13,31)" fg:x="634" fg:w="2"/><text x="50.8486%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.7582%" y="437" width="0.0798%" height="15" fill="rgb(209,103,11)" fg:x="636" fg:w="1"/><text x="51.0082%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.7582%" y="421" width="0.0798%" height="15" fill="rgb(206,3,4)" fg:x="636" fg:w="1"/><text x="51.0082%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.8380%" y="389" width="0.0798%" height="15" fill="rgb(252,10,49)" fg:x="637" fg:w="1"/><text x="51.0880%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="50.8380%" y="421" width="0.1596%" height="15" fill="rgb(217,160,32)" fg:x="637" fg:w="2"/><text x="51.0880%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="50.8380%" y="405" width="0.1596%" height="15" fill="rgb(249,196,0)" fg:x="637" fg:w="2"/><text x="51.0880%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.9178%" y="389" width="0.0798%" height="15" fill="rgb(213,17,48)" fg:x="638" fg:w="1"/><text x="51.1678%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.9178%" y="373" width="0.0798%" height="15" fill="rgb(206,42,46)" fg:x="638" fg:w="1"/><text x="51.1678%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.9178%" y="357" width="0.0798%" height="15" fill="rgb(212,105,24)" fg:x="638" fg:w="1"/><text x="51.1678%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.9976%" y="405" width="0.0798%" height="15" fill="rgb(243,216,30)" fg:x="639" fg:w="1"/><text x="51.2476%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="50.1995%" y="501" width="1.0375%" height="15" fill="rgb(207,121,3)" fg:x="629" fg:w="13"/><text x="50.4495%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="50.1995%" y="485" width="1.0375%" height="15" fill="rgb(249,78,0)" fg:x="629" fg:w="13"/><text x="50.4495%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="50.2793%" y="469" width="0.9577%" height="15" fill="rgb(244,151,32)" fg:x="630" fg:w="12"/><text x="50.5293%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="50.5188%" y="453" width="0.7183%" height="15" fill="rgb(228,63,25)" fg:x="633" fg:w="9"/><text x="50.7688%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="50.8380%" y="437" width="0.3990%" height="15" fill="rgb(231,158,23)" fg:x="637" fg:w="5"/><text x="51.0880%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="50.9976%" y="421" width="0.2394%" height="15" fill="rgb(248,107,23)" fg:x="639" fg:w="3"/><text x="51.2476%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="51.0774%" y="405" width="0.1596%" height="15" fill="rgb(215,168,21)" fg:x="640" fg:w="2"/><text x="51.3274%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="51.2370%" y="437" width="0.2394%" height="15" fill="rgb(227,83,22)" fg:x="642" fg:w="3"/><text x="51.4870%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.5563%" y="421" width="0.0798%" height="15" fill="rgb(217,118,43)" fg:x="646" fg:w="1"/><text x="51.8063%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="51.6361%" y="421" width="0.1596%" height="15" fill="rgb(229,220,41)" fg:x="647" fg:w="2"/><text x="51.8861%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.8755%" y="405" width="0.0798%" height="15" fill="rgb(254,146,46)" fg:x="650" fg:w="1"/><text x="52.1255%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8755%" y="389" width="0.0798%" height="15" fill="rgb(233,208,31)" fg:x="650" fg:w="1"/><text x="52.1255%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.9553%" y="389" width="0.0798%" height="15" fill="rgb(222,162,7)" fg:x="651" fg:w="1"/><text x="52.2053%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0351%" y="357" width="0.0798%" height="15" fill="rgb(230,117,45)" fg:x="652" fg:w="1"/><text x="52.2851%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.1149%" y="357" width="0.0798%" height="15" fill="rgb(239,163,6)" fg:x="653" fg:w="1"/><text x="52.3649%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.1149%" y="341" width="0.0798%" height="15" fill="rgb(246,130,17)" fg:x="653" fg:w="1"/><text x="52.3649%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.1947%" y="341" width="0.0798%" height="15" fill="rgb(216,84,5)" fg:x="654" fg:w="1"/><text x="52.4447%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="52.0351%" y="389" width="0.3192%" height="15" fill="rgb(230,200,21)" fg:x="652" fg:w="4"/><text x="52.2851%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="52.0351%" y="373" width="0.3192%" height="15" fill="rgb(224,2,8)" fg:x="652" fg:w="4"/><text x="52.2851%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="52.1947%" y="357" width="0.1596%" height="15" fill="rgb(238,178,10)" fg:x="654" fg:w="2"/><text x="52.4447%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.2745%" y="341" width="0.0798%" height="15" fill="rgb(242,153,24)" fg:x="655" fg:w="1"/><text x="52.5245%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2745%" y="325" width="0.0798%" height="15" fill="rgb(242,32,48)" fg:x="655" fg:w="1"/><text x="52.5245%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.3543%" y="373" width="0.0798%" height="15" fill="rgb(227,36,0)" fg:x="656" fg:w="1"/><text x="52.6043%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="51.2370%" y="469" width="1.2769%" height="15" fill="rgb(251,33,35)" fg:x="642" fg:w="16"/><text x="51.4870%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.28%)</title><rect x="51.2370%" y="453" width="1.2769%" height="15" fill="rgb(232,168,51)" fg:x="642" fg:w="16"/><text x="51.4870%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="51.4765%" y="437" width="1.0375%" height="15" fill="rgb(228,56,10)" fg:x="645" fg:w="13"/><text x="51.7265%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="51.7957%" y="421" width="0.7183%" height="15" fill="rgb(231,10,26)" fg:x="649" fg:w="9"/><text x="52.0457%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="51.9553%" y="405" width="0.5587%" height="15" fill="rgb(226,202,12)" fg:x="651" fg:w="7"/><text x="52.2053%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="52.3543%" y="389" width="0.1596%" height="15" fill="rgb(251,49,21)" fg:x="656" fg:w="2"/><text x="52.6043%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.4342%" y="373" width="0.0798%" height="15" fill="rgb(206,228,28)" fg:x="657" fg:w="1"/><text x="52.6842%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="52.7534%" y="421" width="0.3192%" height="15" fill="rgb(205,198,31)" fg:x="661" fg:w="4"/><text x="53.0034%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="52.9130%" y="405" width="0.1596%" height="15" fill="rgb(213,69,1)" fg:x="663" fg:w="2"/><text x="53.1630%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="52.9928%" y="389" width="0.0798%" height="15" fill="rgb(209,177,9)" fg:x="664" fg:w="1"/><text x="53.2428%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="52.5938%" y="453" width="0.5587%" height="15" fill="rgb(227,119,30)" fg:x="659" fg:w="7"/><text x="52.8438%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="52.5938%" y="437" width="0.5587%" height="15" fill="rgb(234,106,41)" fg:x="659" fg:w="7"/><text x="52.8438%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.0726%" y="421" width="0.0798%" height="15" fill="rgb(244,103,47)" fg:x="665" fg:w="1"/><text x="53.3226%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (25 samples, 2.00%)</title><rect x="51.2370%" y="485" width="1.9952%" height="15" fill="rgb(212,211,25)" fg:x="642" fg:w="25"/><text x="51.4870%" y="495.50">&lt;..</text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="52.5140%" y="469" width="0.7183%" height="15" fill="rgb(208,63,53)" fg:x="658" fg:w="9"/><text x="52.7640%" y="479.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="53.1524%" y="453" width="0.0798%" height="15" fill="rgb(213,176,21)" fg:x="666" fg:w="1"/><text x="53.4024%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.1524%" y="437" width="0.0798%" height="15" fill="rgb(243,124,12)" fg:x="666" fg:w="1"/><text x="53.4024%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.3919%" y="453" width="0.0798%" height="15" fill="rgb(239,2,35)" fg:x="669" fg:w="1"/><text x="53.6419%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="53.4717%" y="453" width="0.0798%" height="15" fill="rgb(253,169,22)" fg:x="670" fg:w="1"/><text x="53.7217%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="53.4717%" y="437" width="0.0798%" height="15" fill="rgb(254,51,12)" fg:x="670" fg:w="1"/><text x="53.7217%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="53.5515%" y="453" width="0.5587%" height="15" fill="rgb(244,17,47)" fg:x="671" fg:w="7"/><text x="53.8015%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="53.7111%" y="437" width="0.3990%" height="15" fill="rgb(251,45,46)" fg:x="673" fg:w="5"/><text x="53.9611%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="53.8707%" y="421" width="0.2394%" height="15" fill="rgb(223,87,43)" fg:x="675" fg:w="3"/><text x="54.1207%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="54.1101%" y="453" width="0.1596%" height="15" fill="rgb(230,132,31)" fg:x="678" fg:w="2"/><text x="54.3601%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="54.1101%" y="437" width="0.1596%" height="15" fill="rgb(206,99,1)" fg:x="678" fg:w="2"/><text x="54.3601%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1899%" y="421" width="0.0798%" height="15" fill="rgb(227,110,25)" fg:x="679" fg:w="1"/><text x="54.4399%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1899%" y="405" width="0.0798%" height="15" fill="rgb(217,182,7)" fg:x="679" fg:w="1"/><text x="54.4399%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="54.2698%" y="453" width="0.0798%" height="15" fill="rgb(250,176,4)" fg:x="680" fg:w="1"/><text x="54.5198%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="54.2698%" y="437" width="0.0798%" height="15" fill="rgb(244,98,30)" fg:x="680" fg:w="1"/><text x="54.5198%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2698%" y="421" width="0.0798%" height="15" fill="rgb(228,150,42)" fg:x="680" fg:w="1"/><text x="54.5198%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2698%" y="405" width="0.0798%" height="15" fill="rgb(231,91,46)" fg:x="680" fg:w="1"/><text x="54.5198%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="54.4294%" y="421" width="0.2394%" height="15" fill="rgb(252,161,32)" fg:x="682" fg:w="3"/><text x="54.6794%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="54.3496%" y="453" width="0.4789%" height="15" fill="rgb(236,69,41)" fg:x="681" fg:w="6"/><text x="54.5996%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="54.3496%" y="437" width="0.4789%" height="15" fill="rgb(212,160,3)" fg:x="681" fg:w="6"/><text x="54.5996%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.6688%" y="421" width="0.1596%" height="15" fill="rgb(216,5,50)" fg:x="685" fg:w="2"/><text x="54.9188%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.7486%" y="405" width="0.0798%" height="15" fill="rgb(241,138,25)" fg:x="686" fg:w="1"/><text x="54.9986%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="55.4669%" y="421" width="0.0798%" height="15" fill="rgb(239,42,18)" fg:x="695" fg:w="1"/><text x="55.7169%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="55.6265%" y="405" width="0.3990%" height="15" fill="rgb(239,40,7)" fg:x="697" fg:w="5"/><text x="55.8765%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="55.7063%" y="389" width="0.3192%" height="15" fill="rgb(239,11,31)" fg:x="698" fg:w="4"/><text x="55.9563%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="55.7861%" y="373" width="0.2394%" height="15" fill="rgb(224,77,40)" fg:x="699" fg:w="3"/><text x="56.0361%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.1852%" y="357" width="0.1596%" height="15" fill="rgb(226,15,5)" fg:x="704" fg:w="2"/><text x="56.4352%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.1852%" y="341" width="0.1596%" height="15" fill="rgb(254,188,5)" fg:x="704" fg:w="2"/><text x="56.4352%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.1852%" y="325" width="0.1596%" height="15" fill="rgb(241,148,52)" fg:x="704" fg:w="2"/><text x="56.4352%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="56.1053%" y="373" width="0.4789%" height="15" fill="rgb(251,48,36)" fg:x="703" fg:w="6"/><text x="56.3553%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="56.3448%" y="357" width="0.2394%" height="15" fill="rgb(243,83,13)" fg:x="706" fg:w="3"/><text x="56.5948%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="56.4246%" y="341" width="0.1596%" height="15" fill="rgb(210,105,0)" fg:x="707" fg:w="2"/><text x="56.6746%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="56.4246%" y="325" width="0.1596%" height="15" fill="rgb(239,60,36)" fg:x="707" fg:w="2"/><text x="56.6746%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="56.4246%" y="309" width="0.1596%" height="15" fill="rgb(210,20,0)" fg:x="707" fg:w="2"/><text x="56.6746%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.4246%" y="293" width="0.1596%" height="15" fill="rgb(244,26,53)" fg:x="707" fg:w="2"/><text x="56.6746%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.4246%" y="277" width="0.1596%" height="15" fill="rgb(240,100,49)" fg:x="707" fg:w="2"/><text x="56.6746%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.4246%" y="261" width="0.1596%" height="15" fill="rgb(250,46,45)" fg:x="707" fg:w="2"/><text x="56.6746%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="56.0255%" y="405" width="0.6385%" height="15" fill="rgb(220,181,29)" fg:x="702" fg:w="8"/><text x="56.2755%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="56.0255%" y="389" width="0.6385%" height="15" fill="rgb(213,137,33)" fg:x="702" fg:w="8"/><text x="56.2755%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5842%" y="373" width="0.0798%" height="15" fill="rgb(213,27,48)" fg:x="709" fg:w="1"/><text x="56.8342%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="56.7438%" y="389" width="0.1596%" height="15" fill="rgb(245,180,39)" fg:x="711" fg:w="2"/><text x="56.9938%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="56.9034%" y="389" width="0.1596%" height="15" fill="rgb(212,158,42)" fg:x="713" fg:w="2"/><text x="57.1534%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.3025%" y="373" width="0.1596%" height="15" fill="rgb(228,193,18)" fg:x="718" fg:w="2"/><text x="57.5525%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.3025%" y="357" width="0.1596%" height="15" fill="rgb(245,172,29)" fg:x="718" fg:w="2"/><text x="57.5525%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.3823%" y="341" width="0.0798%" height="15" fill="rgb(207,98,24)" fg:x="719" fg:w="1"/><text x="57.6323%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="57.7015%" y="357" width="0.5587%" height="15" fill="rgb(249,92,26)" fg:x="723" fg:w="7"/><text x="57.9515%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="57.8611%" y="341" width="0.3990%" height="15" fill="rgb(217,176,26)" fg:x="725" fg:w="5"/><text x="58.1111%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="57.9409%" y="325" width="0.3192%" height="15" fill="rgb(221,8,39)" fg:x="726" fg:w="4"/><text x="58.1909%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1804%" y="309" width="0.0798%" height="15" fill="rgb(208,90,18)" fg:x="729" fg:w="1"/><text x="58.4304%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="57.0630%" y="389" width="1.3567%" height="15" fill="rgb(207,202,30)" fg:x="715" fg:w="17"/><text x="57.3130%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="57.4621%" y="373" width="0.9577%" height="15" fill="rgb(231,124,22)" fg:x="720" fg:w="12"/><text x="57.7121%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.2602%" y="357" width="0.1596%" height="15" fill="rgb(206,15,5)" fg:x="730" fg:w="2"/><text x="58.5102%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (38 samples, 3.03%)</title><rect x="55.5467%" y="421" width="3.0327%" height="15" fill="rgb(239,16,52)" fg:x="696" fg:w="38"/><text x="55.7967%" y="431.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (24 samples, 1.92%)</title><rect x="56.6640%" y="405" width="1.9154%" height="15" fill="rgb(245,213,29)" fg:x="710" fg:w="24"/><text x="56.9140%" y="415.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.4198%" y="389" width="0.1596%" height="15" fill="rgb(213,203,36)" fg:x="732" fg:w="2"/><text x="58.6698%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (44 samples, 3.51%)</title><rect x="55.3871%" y="437" width="3.5116%" height="15" fill="rgb(209,55,18)" fg:x="694" fg:w="44"/><text x="55.6371%" y="447.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="58.5794%" y="421" width="0.3192%" height="15" fill="rgb(207,133,49)" fg:x="734" fg:w="4"/><text x="58.8294%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="58.6592%" y="405" width="0.2394%" height="15" fill="rgb(240,33,46)" fg:x="735" fg:w="3"/><text x="58.9092%" y="415.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="58.8986%" y="437" width="0.3990%" height="15" fill="rgb(212,35,2)" fg:x="738" fg:w="5"/><text x="59.1486%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (78 samples, 6.23%)</title><rect x="53.2322%" y="485" width="6.2251%" height="15" fill="rgb(231,119,28)" fg:x="667" fg:w="78"/><text x="53.4822%" y="495.50">kernel::..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (77 samples, 6.15%)</title><rect x="53.3121%" y="469" width="6.1453%" height="15" fill="rgb(252,178,7)" fg:x="668" fg:w="77"/><text x="53.5621%" y="479.50">&lt;serde_j..</text></g><g><title>serde::ser::Serializer::collect_map (58 samples, 4.63%)</title><rect x="54.8284%" y="453" width="4.6289%" height="15" fill="rgb(251,91,4)" fg:x="687" fg:w="58"/><text x="55.0784%" y="463.50">serde..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.2977%" y="437" width="0.1596%" height="15" fill="rgb(233,122,19)" fg:x="743" fg:w="2"/><text x="59.5477%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.2977%" y="421" width="0.1596%" height="15" fill="rgb(231,208,46)" fg:x="743" fg:w="2"/><text x="59.5477%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.3775%" y="405" width="0.0798%" height="15" fill="rgb(243,15,41)" fg:x="744" fg:w="1"/><text x="59.6275%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.0958%" y="293" width="0.0798%" height="15" fill="rgb(210,32,43)" fg:x="753" fg:w="1"/><text x="60.3458%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.1756%" y="277" width="0.0798%" height="15" fill="rgb(222,177,15)" fg:x="754" fg:w="1"/><text x="60.4256%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.1756%" y="261" width="0.0798%" height="15" fill="rgb(244,121,34)" fg:x="754" fg:w="1"/><text x="60.4256%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.1756%" y="245" width="0.0798%" height="15" fill="rgb(234,138,4)" fg:x="754" fg:w="1"/><text x="60.4256%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.1756%" y="293" width="0.1596%" height="15" fill="rgb(240,97,48)" fg:x="754" fg:w="2"/><text x="60.4256%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.2554%" y="277" width="0.0798%" height="15" fill="rgb(237,65,54)" fg:x="755" fg:w="1"/><text x="60.5054%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.0160%" y="309" width="0.3990%" height="15" fill="rgb(214,25,24)" fg:x="752" fg:w="5"/><text x="60.2660%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3352%" y="293" width="0.0798%" height="15" fill="rgb(213,5,3)" fg:x="756" fg:w="1"/><text x="60.5852%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="59.8563%" y="341" width="0.7183%" height="15" fill="rgb(219,81,29)" fg:x="750" fg:w="9"/><text x="60.1063%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="59.9362%" y="325" width="0.6385%" height="15" fill="rgb(220,43,48)" fg:x="751" fg:w="8"/><text x="60.1862%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="60.4150%" y="309" width="0.1596%" height="15" fill="rgb(239,157,2)" fg:x="757" fg:w="2"/><text x="60.6650%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4948%" y="293" width="0.0798%" height="15" fill="rgb(213,104,43)" fg:x="758" fg:w="1"/><text x="60.7448%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.8140%" y="293" width="0.0798%" height="15" fill="rgb(237,84,9)" fg:x="762" fg:w="1"/><text x="61.0640%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.5746%" y="325" width="0.3990%" height="15" fill="rgb(252,6,33)" fg:x="759" fg:w="5"/><text x="60.8246%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.7342%" y="309" width="0.2394%" height="15" fill="rgb(251,172,22)" fg:x="761" fg:w="3"/><text x="60.9842%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.8939%" y="293" width="0.0798%" height="15" fill="rgb(244,91,53)" fg:x="763" fg:w="1"/><text x="61.1439%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.8939%" y="277" width="0.0798%" height="15" fill="rgb(219,29,30)" fg:x="763" fg:w="1"/><text x="61.1439%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8939%" y="261" width="0.0798%" height="15" fill="rgb(213,3,15)" fg:x="763" fg:w="1"/><text x="61.1439%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.9737%" y="309" width="0.0798%" height="15" fill="rgb(208,25,28)" fg:x="764" fg:w="1"/><text x="61.2237%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.36%)</title><rect x="59.8563%" y="357" width="1.3567%" height="15" fill="rgb(252,144,25)" fg:x="750" fg:w="17"/><text x="60.1063%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="60.5746%" y="341" width="0.6385%" height="15" fill="rgb(226,220,25)" fg:x="759" fg:w="8"/><text x="60.8246%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="60.9737%" y="325" width="0.2394%" height="15" fill="rgb(212,131,28)" fg:x="764" fg:w="3"/><text x="61.2237%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.0535%" y="309" width="0.1596%" height="15" fill="rgb(219,143,52)" fg:x="765" fg:w="2"/><text x="61.3035%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.00%)</title><rect x="59.6967%" y="389" width="1.9952%" height="15" fill="rgb(215,56,7)" fg:x="748" fg:w="25"/><text x="59.9467%" y="399.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.84%)</title><rect x="59.8563%" y="373" width="1.8356%" height="15" fill="rgb(239,59,51)" fg:x="750" fg:w="23"/><text x="60.1063%" y="383.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="61.2131%" y="357" width="0.4789%" height="15" fill="rgb(209,215,4)" fg:x="767" fg:w="6"/><text x="61.4631%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="61.4525%" y="341" width="0.2394%" height="15" fill="rgb(221,118,39)" fg:x="770" fg:w="3"/><text x="61.7025%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="61.4525%" y="325" width="0.2394%" height="15" fill="rgb(236,6,44)" fg:x="770" fg:w="3"/><text x="61.7025%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="61.6919%" y="389" width="0.2394%" height="15" fill="rgb(216,122,9)" fg:x="773" fg:w="3"/><text x="61.9419%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8516%" y="373" width="0.0798%" height="15" fill="rgb(244,134,42)" fg:x="775" fg:w="1"/><text x="62.1016%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9314%" y="389" width="0.0798%" height="15" fill="rgb(209,189,35)" fg:x="776" fg:w="1"/><text x="62.1814%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9314%" y="373" width="0.0798%" height="15" fill="rgb(250,47,36)" fg:x="776" fg:w="1"/><text x="62.1814%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9314%" y="357" width="0.0798%" height="15" fill="rgb(252,112,4)" fg:x="776" fg:w="1"/><text x="62.1814%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (31 samples, 2.47%)</title><rect x="59.6169%" y="421" width="2.4741%" height="15" fill="rgb(221,79,51)" fg:x="747" fg:w="31"/><text x="59.8669%" y="431.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 2.47%)</title><rect x="59.6169%" y="405" width="2.4741%" height="15" fill="rgb(232,65,53)" fg:x="747" fg:w="31"/><text x="59.8669%" y="415.50">&lt;s..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.0112%" y="389" width="0.0798%" height="15" fill="rgb(211,37,7)" fg:x="777" fg:w="1"/><text x="62.2612%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.1708%" y="405" width="0.0798%" height="15" fill="rgb(234,221,18)" fg:x="779" fg:w="1"/><text x="62.4208%" y="415.50"></text></g><g><title>engine::session::Session::close (217 samples, 17.32%)</title><rect x="45.0120%" y="597" width="17.3184%" height="15" fill="rgb(220,158,26)" fg:x="564" fg:w="217"/><text x="45.2620%" y="607.50">engine::session::Session::c..</text></g><g><title>engine::session::state::State::close (213 samples, 17.00%)</title><rect x="45.3312%" y="581" width="16.9992%" height="15" fill="rgb(220,70,6)" fg:x="568" fg:w="213"/><text x="45.5812%" y="591.50">engine::session::state::St..</text></g><g><title>engine::session::state::State::flush_entities (212 samples, 16.92%)</title><rect x="45.4110%" y="565" width="16.9194%" height="15" fill="rgb(250,39,48)" fg:x="569" fg:w="212"/><text x="45.6610%" y="575.50">engine::session::state::St..</text></g><g><title>core::iter::adapters::try_process (207 samples, 16.52%)</title><rect x="45.8101%" y="549" width="16.5204%" height="15" fill="rgb(206,40,27)" fg:x="574" fg:w="207"/><text x="46.0601%" y="559.50">core::iter::adapters::try_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (207 samples, 16.52%)</title><rect x="45.8101%" y="533" width="16.5204%" height="15" fill="rgb(247,80,36)" fg:x="574" fg:w="207"/><text x="46.0601%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; as all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (205 samples, 16.36%)</title><rect x="45.9697%" y="517" width="16.3607%" height="15" fill="rgb(222,9,20)" fg:x="576" fg:w="205"/><text x="46.2197%" y="527.50">engine::session::state::S..</text></g><g><title>kernel::model::any_entity_changes (139 samples, 11.09%)</title><rect x="51.2370%" y="501" width="11.0934%" height="15" fill="rgb(217,26,45)" fg:x="642" fg:w="139"/><text x="51.4870%" y="511.50">kernel::model::a..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (36 samples, 2.87%)</title><rect x="59.4573%" y="485" width="2.8731%" height="15" fill="rgb(221,67,14)" fg:x="745" fg:w="36"/><text x="59.7073%" y="495.50">se..</text></g><g><title>serde_json::de::from_trait (36 samples, 2.87%)</title><rect x="59.4573%" y="469" width="2.8731%" height="15" fill="rgb(248,100,24)" fg:x="745" fg:w="36"/><text x="59.7073%" y="479.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 2.87%)</title><rect x="59.4573%" y="453" width="2.8731%" height="15" fill="rgb(230,187,16)" fg:x="745" fg:w="36"/><text x="59.7073%" y="463.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (36 samples, 2.87%)</title><rect x="59.4573%" y="437" width="2.8731%" height="15" fill="rgb(205,108,13)" fg:x="745" fg:w="36"/><text x="59.7073%" y="447.50">&lt;s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="62.0910%" y="421" width="0.2394%" height="15" fill="rgb(235,71,51)" fg:x="778" fg:w="3"/><text x="62.3410%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2506%" y="405" width="0.0798%" height="15" fill="rgb(251,172,48)" fg:x="780" fg:w="1"/><text x="62.5006%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="62.3304%" y="549" width="0.0798%" height="15" fill="rgb(240,96,49)" fg:x="781" fg:w="1"/><text x="62.5804%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.3304%" y="533" width="0.0798%" height="15" fill="rgb(235,46,36)" fg:x="781" fg:w="1"/><text x="62.5804%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3304%" y="517" width="0.0798%" height="15" fill="rgb(244,3,49)" fg:x="781" fg:w="1"/><text x="62.5804%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.3304%" y="501" width="0.0798%" height="15" fill="rgb(206,78,54)" fg:x="781" fg:w="1"/><text x="62.5804%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3304%" y="485" width="0.0798%" height="15" fill="rgb(208,85,42)" fg:x="781" fg:w="1"/><text x="62.5804%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.3304%" y="469" width="0.0798%" height="15" fill="rgb(219,196,21)" fg:x="781" fg:w="1"/><text x="62.5804%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (2 samples, 0.16%)</title><rect x="62.3304%" y="565" width="0.1596%" height="15" fill="rgb(238,19,9)" fg:x="781" fg:w="2"/><text x="62.5804%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.4102%" y="549" width="0.0798%" height="15" fill="rgb(206,86,13)" fg:x="782" fg:w="1"/><text x="62.6602%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4102%" y="533" width="0.0798%" height="15" fill="rgb(214,123,40)" fg:x="782" fg:w="1"/><text x="62.6602%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="62.4900%" y="533" width="0.1596%" height="15" fill="rgb(243,53,5)" fg:x="783" fg:w="2"/><text x="62.7400%" y="543.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="62.6496%" y="533" width="0.0798%" height="15" fill="rgb(254,186,31)" fg:x="785" fg:w="1"/><text x="62.8996%" y="543.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="62.6496%" y="517" width="0.0798%" height="15" fill="rgb(221,216,25)" fg:x="785" fg:w="1"/><text x="62.8996%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="62.6496%" y="501" width="0.0798%" height="15" fill="rgb(248,107,42)" fg:x="785" fg:w="1"/><text x="62.8996%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="62.6496%" y="485" width="0.0798%" height="15" fill="rgb(221,85,43)" fg:x="785" fg:w="1"/><text x="62.8996%" y="495.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="62.4900%" y="565" width="0.3192%" height="15" fill="rgb(225,34,24)" fg:x="783" fg:w="4"/><text x="62.7400%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="62.4900%" y="549" width="0.3192%" height="15" fill="rgb(211,119,1)" fg:x="783" fg:w="4"/><text x="62.7400%" y="559.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="62.7294%" y="533" width="0.0798%" height="15" fill="rgb(254,216,46)" fg:x="786" fg:w="1"/><text x="62.9794%" y="543.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="62.7294%" y="517" width="0.0798%" height="15" fill="rgb(238,11,38)" fg:x="786" fg:w="1"/><text x="62.9794%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="62.7294%" y="501" width="0.0798%" height="15" fill="rgb(233,50,15)" fg:x="786" fg:w="1"/><text x="62.9794%" y="511.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.16%)</title><rect x="62.8891%" y="293" width="0.1596%" height="15" fill="rgb(217,181,29)" fg:x="788" fg:w="2"/><text x="63.1391%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="62.8891%" y="277" width="0.1596%" height="15" fill="rgb(214,56,3)" fg:x="788" fg:w="2"/><text x="63.1391%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.16%)</title><rect x="62.8891%" y="261" width="0.1596%" height="15" fill="rgb(230,69,45)" fg:x="788" fg:w="2"/><text x="63.1391%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="62.8891%" y="245" width="0.1596%" height="15" fill="rgb(224,201,50)" fg:x="788" fg:w="2"/><text x="63.1391%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="62.8891%" y="229" width="0.1596%" height="15" fill="rgb(217,228,18)" fg:x="788" fg:w="2"/><text x="63.1391%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="62.8891%" y="213" width="0.1596%" height="15" fill="rgb(239,33,44)" fg:x="788" fg:w="2"/><text x="63.1391%" y="223.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="62.8891%" y="197" width="0.1596%" height="15" fill="rgb(248,210,23)" fg:x="788" fg:w="2"/><text x="63.1391%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="62.8891%" y="181" width="0.1596%" height="15" fill="rgb(253,135,8)" fg:x="788" fg:w="2"/><text x="63.1391%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="62.8891%" y="165" width="0.1596%" height="15" fill="rgb(217,98,21)" fg:x="788" fg:w="2"/><text x="63.1391%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="62.8891%" y="149" width="0.1596%" height="15" fill="rgb(253,130,21)" fg:x="788" fg:w="2"/><text x="63.1391%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="62.8891%" y="133" width="0.1596%" height="15" fill="rgb(207,81,54)" fg:x="788" fg:w="2"/><text x="63.1391%" y="143.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.08%)</title><rect x="63.0487%" y="293" width="0.0798%" height="15" fill="rgb(232,48,33)" fg:x="790" fg:w="1"/><text x="63.2987%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="63.0487%" y="277" width="0.0798%" height="15" fill="rgb(211,9,35)" fg:x="790" fg:w="1"/><text x="63.2987%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (1 samples, 0.08%)</title><rect x="63.0487%" y="261" width="0.0798%" height="15" fill="rgb(205,152,21)" fg:x="790" fg:w="1"/><text x="63.2987%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.0487%" y="245" width="0.0798%" height="15" fill="rgb(249,21,27)" fg:x="790" fg:w="1"/><text x="63.2987%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.0487%" y="229" width="0.0798%" height="15" fill="rgb(252,29,24)" fg:x="790" fg:w="1"/><text x="63.2987%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="63.0487%" y="213" width="0.0798%" height="15" fill="rgb(230,130,50)" fg:x="790" fg:w="1"/><text x="63.2987%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="63.0487%" y="197" width="0.0798%" height="15" fill="rgb(239,144,14)" fg:x="790" fg:w="1"/><text x="63.2987%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="63.0487%" y="181" width="0.0798%" height="15" fill="rgb(227,111,50)" fg:x="790" fg:w="1"/><text x="63.2987%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="63.0487%" y="165" width="0.0798%" height="15" fill="rgb(254,84,20)" fg:x="790" fg:w="1"/><text x="63.2987%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.0487%" y="149" width="0.0798%" height="15" fill="rgb(232,90,48)" fg:x="790" fg:w="1"/><text x="63.2987%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.0487%" y="133" width="0.0798%" height="15" fill="rgb(253,63,47)" fg:x="790" fg:w="1"/><text x="63.2987%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="63.0487%" y="117" width="0.0798%" height="15" fill="rgb(251,146,35)" fg:x="790" fg:w="1"/><text x="63.2987%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="63.0487%" y="101" width="0.0798%" height="15" fill="rgb(229,192,35)" fg:x="790" fg:w="1"/><text x="63.2987%" y="111.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="62.8891%" y="405" width="0.3192%" height="15" fill="rgb(225,68,9)" fg:x="788" fg:w="4"/><text x="63.1391%" y="415.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (4 samples, 0.32%)</title><rect x="62.8891%" y="389" width="0.3192%" height="15" fill="rgb(214,97,34)" fg:x="788" fg:w="4"/><text x="63.1391%" y="399.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (4 samples, 0.32%)</title><rect x="62.8891%" y="373" width="0.3192%" height="15" fill="rgb(253,31,26)" fg:x="788" fg:w="4"/><text x="63.1391%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.32%)</title><rect x="62.8891%" y="357" width="0.3192%" height="15" fill="rgb(225,151,47)" fg:x="788" fg:w="4"/><text x="63.1391%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (4 samples, 0.32%)</title><rect x="62.8891%" y="341" width="0.3192%" height="15" fill="rgb(206,185,9)" fg:x="788" fg:w="4"/><text x="63.1391%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="62.8891%" y="325" width="0.3192%" height="15" fill="rgb(249,65,17)" fg:x="788" fg:w="4"/><text x="63.1391%" y="335.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (4 samples, 0.32%)</title><rect x="62.8891%" y="309" width="0.3192%" height="15" fill="rgb(220,110,10)" fg:x="788" fg:w="4"/><text x="63.1391%" y="319.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="63.1285%" y="293" width="0.0798%" height="15" fill="rgb(222,198,49)" fg:x="791" fg:w="1"/><text x="63.3785%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="63.1285%" y="277" width="0.0798%" height="15" fill="rgb(239,81,13)" fg:x="791" fg:w="1"/><text x="63.3785%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.1285%" y="261" width="0.0798%" height="15" fill="rgb(216,128,11)" fg:x="791" fg:w="1"/><text x="63.3785%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.1285%" y="245" width="0.0798%" height="15" fill="rgb(247,156,8)" fg:x="791" fg:w="1"/><text x="63.3785%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="63.1285%" y="229" width="0.0798%" height="15" fill="rgb(219,173,1)" fg:x="791" fg:w="1"/><text x="63.3785%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="63.1285%" y="213" width="0.0798%" height="15" fill="rgb(227,42,24)" fg:x="791" fg:w="1"/><text x="63.3785%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="63.1285%" y="197" width="0.0798%" height="15" fill="rgb(253,219,50)" fg:x="791" fg:w="1"/><text x="63.3785%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="63.1285%" y="181" width="0.0798%" height="15" fill="rgb(215,191,54)" fg:x="791" fg:w="1"/><text x="63.3785%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.1285%" y="165" width="0.0798%" height="15" fill="rgb(238,83,12)" fg:x="791" fg:w="1"/><text x="63.3785%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.1285%" y="149" width="0.0798%" height="15" fill="rgb(205,124,9)" fg:x="791" fg:w="1"/><text x="63.3785%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="63.1285%" y="133" width="0.0798%" height="15" fill="rgb(253,174,7)" fg:x="791" fg:w="1"/><text x="63.3785%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="63.1285%" y="117" width="0.0798%" height="15" fill="rgb(206,134,49)" fg:x="791" fg:w="1"/><text x="63.3785%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.1285%" y="101" width="0.0798%" height="15" fill="rgb(221,89,20)" fg:x="791" fg:w="1"/><text x="63.3785%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="63.1285%" y="85" width="0.0798%" height="15" fill="rgb(240,205,13)" fg:x="791" fg:w="1"/><text x="63.3785%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="63.1285%" y="69" width="0.0798%" height="15" fill="rgb(237,174,32)" fg:x="791" fg:w="1"/><text x="63.3785%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="63.1285%" y="53" width="0.0798%" height="15" fill="rgb(226,12,15)" fg:x="791" fg:w="1"/><text x="63.3785%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="63.1285%" y="37" width="0.0798%" height="15" fill="rgb(245,160,52)" fg:x="791" fg:w="1"/><text x="63.3785%" y="47.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="63.2083%" y="405" width="0.0798%" height="15" fill="rgb(253,80,21)" fg:x="792" fg:w="1"/><text x="63.4583%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.08%)</title><rect x="63.2083%" y="389" width="0.0798%" height="15" fill="rgb(231,225,22)" fg:x="792" fg:w="1"/><text x="63.4583%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="63.2083%" y="373" width="0.0798%" height="15" fill="rgb(253,185,12)" fg:x="792" fg:w="1"/><text x="63.4583%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (1 samples, 0.08%)</title><rect x="63.2083%" y="357" width="0.0798%" height="15" fill="rgb(234,197,21)" fg:x="792" fg:w="1"/><text x="63.4583%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.2083%" y="341" width="0.0798%" height="15" fill="rgb(210,47,30)" fg:x="792" fg:w="1"/><text x="63.4583%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.2083%" y="325" width="0.0798%" height="15" fill="rgb(246,139,27)" fg:x="792" fg:w="1"/><text x="63.4583%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="63.2083%" y="309" width="0.0798%" height="15" fill="rgb(226,130,16)" fg:x="792" fg:w="1"/><text x="63.4583%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="63.2083%" y="293" width="0.0798%" height="15" fill="rgb(237,208,20)" fg:x="792" fg:w="1"/><text x="63.4583%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="63.2083%" y="277" width="0.0798%" height="15" fill="rgb(245,186,28)" fg:x="792" fg:w="1"/><text x="63.4583%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="63.2083%" y="261" width="0.0798%" height="15" fill="rgb(238,105,39)" fg:x="792" fg:w="1"/><text x="63.4583%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.2083%" y="245" width="0.0798%" height="15" fill="rgb(253,228,11)" fg:x="792" fg:w="1"/><text x="63.4583%" y="255.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.56%)</title><rect x="62.8093%" y="549" width="0.5587%" height="15" fill="rgb(224,136,38)" fg:x="787" fg:w="7"/><text x="63.0593%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.56%)</title><rect x="62.8093%" y="533" width="0.5587%" height="15" fill="rgb(211,3,25)" fg:x="787" fg:w="7"/><text x="63.0593%" y="543.50"></text></g><g><title>core::fmt::write (7 samples, 0.56%)</title><rect x="62.8093%" y="517" width="0.5587%" height="15" fill="rgb(238,66,34)" fg:x="787" fg:w="7"/><text x="63.0593%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.56%)</title><rect x="62.8093%" y="501" width="0.5587%" height="15" fill="rgb(223,188,11)" fg:x="787" fg:w="7"/><text x="63.0593%" y="511.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (7 samples, 0.56%)</title><rect x="62.8093%" y="485" width="0.5587%" height="15" fill="rgb(221,10,35)" fg:x="787" fg:w="7"/><text x="63.0593%" y="495.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (7 samples, 0.56%)</title><rect x="62.8093%" y="469" width="0.5587%" height="15" fill="rgb(223,18,44)" fg:x="787" fg:w="7"/><text x="63.0593%" y="479.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (7 samples, 0.56%)</title><rect x="62.8093%" y="453" width="0.5587%" height="15" fill="rgb(220,97,41)" fg:x="787" fg:w="7"/><text x="63.0593%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6 samples, 0.48%)</title><rect x="62.8891%" y="437" width="0.4789%" height="15" fill="rgb(206,95,45)" fg:x="788" fg:w="6"/><text x="63.1391%" y="447.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (6 samples, 0.48%)</title><rect x="62.8891%" y="421" width="0.4789%" height="15" fill="rgb(209,96,13)" fg:x="788" fg:w="6"/><text x="63.1391%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="63.2881%" y="405" width="0.0798%" height="15" fill="rgb(237,39,34)" fg:x="793" fg:w="1"/><text x="63.5381%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.2881%" y="389" width="0.0798%" height="15" fill="rgb(213,49,47)" fg:x="793" fg:w="1"/><text x="63.5381%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.2881%" y="373" width="0.0798%" height="15" fill="rgb(205,107,27)" fg:x="793" fg:w="1"/><text x="63.5381%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="63.2881%" y="357" width="0.0798%" height="15" fill="rgb(212,142,9)" fg:x="793" fg:w="1"/><text x="63.5381%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="63.2881%" y="341" width="0.0798%" height="15" fill="rgb(226,182,0)" fg:x="793" fg:w="1"/><text x="63.5381%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="63.2881%" y="325" width="0.0798%" height="15" fill="rgb(231,3,53)" fg:x="793" fg:w="1"/><text x="63.5381%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="63.2881%" y="309" width="0.0798%" height="15" fill="rgb(246,111,28)" fg:x="793" fg:w="1"/><text x="63.5381%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.2881%" y="293" width="0.0798%" height="15" fill="rgb(254,183,7)" fg:x="793" fg:w="1"/><text x="63.5381%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.2881%" y="277" width="0.0798%" height="15" fill="rgb(247,177,28)" fg:x="793" fg:w="1"/><text x="63.5381%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="63.2881%" y="261" width="0.0798%" height="15" fill="rgb(244,43,1)" fg:x="793" fg:w="1"/><text x="63.5381%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="63.2881%" y="245" width="0.0798%" height="15" fill="rgb(207,2,35)" fg:x="793" fg:w="1"/><text x="63.5381%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.2881%" y="229" width="0.0798%" height="15" fill="rgb(213,83,22)" fg:x="793" fg:w="1"/><text x="63.5381%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="63.2881%" y="213" width="0.0798%" height="15" fill="rgb(246,212,13)" fg:x="793" fg:w="1"/><text x="63.5381%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="63.2881%" y="197" width="0.0798%" height="15" fill="rgb(213,127,46)" fg:x="793" fg:w="1"/><text x="63.5381%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="63.2881%" y="181" width="0.0798%" height="15" fill="rgb(219,215,39)" fg:x="793" fg:w="1"/><text x="63.5381%" y="191.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="63.2881%" y="165" width="0.0798%" height="15" fill="rgb(227,99,17)" fg:x="793" fg:w="1"/><text x="63.5381%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="63.2881%" y="149" width="0.0798%" height="15" fill="rgb(208,155,18)" fg:x="793" fg:w="1"/><text x="63.5381%" y="159.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="63.3679%" y="549" width="0.0798%" height="15" fill="rgb(223,204,38)" fg:x="794" fg:w="1"/><text x="63.6179%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.3679%" y="533" width="0.0798%" height="15" fill="rgb(212,114,21)" fg:x="794" fg:w="1"/><text x="63.6179%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="63.4477%" y="533" width="0.0798%" height="15" fill="rgb(250,74,13)" fg:x="795" fg:w="1"/><text x="63.6977%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.4477%" y="517" width="0.0798%" height="15" fill="rgb(234,7,1)" fg:x="795" fg:w="1"/><text x="63.6977%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4477%" y="501" width="0.0798%" height="15" fill="rgb(207,138,31)" fg:x="795" fg:w="1"/><text x="63.6977%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="63.5275%" y="533" width="0.0798%" height="15" fill="rgb(215,186,42)" fg:x="796" fg:w="1"/><text x="63.7775%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::logs::SessionSubscriber&gt; (1 samples, 0.08%)</title><rect x="63.5275%" y="517" width="0.0798%" height="15" fill="rgb(229,205,49)" fg:x="796" fg:w="1"/><text x="63.7775%" y="527.50"></text></g><g><title>chrono::offset::utc::Utc::now (1 samples, 0.08%)</title><rect x="63.6073%" y="533" width="0.0798%" height="15" fill="rgb(216,156,32)" fg:x="797" fg:w="1"/><text x="63.8573%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="63.6073%" y="517" width="0.0798%" height="15" fill="rgb(238,7,21)" fg:x="797" fg:w="1"/><text x="63.8573%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="63.6073%" y="501" width="0.0798%" height="15" fill="rgb(249,190,22)" fg:x="797" fg:w="1"/><text x="63.8573%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (4 samples, 0.32%)</title><rect x="63.6872%" y="533" width="0.3192%" height="15" fill="rgb(253,51,31)" fg:x="798" fg:w="4"/><text x="63.9372%" y="543.50"></text></g><g><title>tracing_core::callsite::register_dispatch (4 samples, 0.32%)</title><rect x="63.6872%" y="517" width="0.3192%" height="15" fill="rgb(237,90,54)" fg:x="798" fg:w="4"/><text x="63.9372%" y="527.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (4 samples, 0.32%)</title><rect x="63.6872%" y="501" width="0.3192%" height="15" fill="rgb(250,214,33)" fg:x="798" fg:w="4"/><text x="63.9372%" y="511.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (3 samples, 0.24%)</title><rect x="63.7670%" y="485" width="0.2394%" height="15" fill="rgb(237,10,49)" fg:x="799" fg:w="3"/><text x="64.0170%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.1660%" y="405" width="0.1596%" height="15" fill="rgb(241,56,36)" fg:x="804" fg:w="2"/><text x="64.4160%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.1660%" y="389" width="0.1596%" height="15" fill="rgb(227,164,12)" fg:x="804" fg:w="2"/><text x="64.4160%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2458%" y="373" width="0.0798%" height="15" fill="rgb(249,149,35)" fg:x="805" fg:w="1"/><text x="64.4958%" y="383.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="64.3256%" y="405" width="0.0798%" height="15" fill="rgb(238,227,50)" fg:x="806" fg:w="1"/><text x="64.5756%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.4852%" y="373" width="0.0798%" height="15" fill="rgb(235,102,45)" fg:x="808" fg:w="1"/><text x="64.7352%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.5650%" y="373" width="0.0798%" height="15" fill="rgb(211,10,38)" fg:x="809" fg:w="1"/><text x="64.8150%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.7247%" y="341" width="0.1596%" height="15" fill="rgb(219,77,48)" fg:x="811" fg:w="2"/><text x="64.9747%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="64.6449%" y="373" width="0.3192%" height="15" fill="rgb(246,6,15)" fg:x="810" fg:w="4"/><text x="64.8949%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.7247%" y="357" width="0.2394%" height="15" fill="rgb(207,220,2)" fg:x="811" fg:w="3"/><text x="64.9747%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.8843%" y="341" width="0.0798%" height="15" fill="rgb(242,48,14)" fg:x="813" fg:w="1"/><text x="65.1343%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (12 samples, 0.96%)</title><rect x="64.0862%" y="421" width="0.9577%" height="15" fill="rgb(218,19,27)" fg:x="803" fg:w="12"/><text x="64.3362%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="64.4054%" y="405" width="0.6385%" height="15" fill="rgb(228,0,35)" fg:x="807" fg:w="8"/><text x="64.6554%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="64.4852%" y="389" width="0.5587%" height="15" fill="rgb(244,142,54)" fg:x="808" fg:w="7"/><text x="64.7352%" y="399.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="64.9641%" y="373" width="0.0798%" height="15" fill="rgb(243,217,40)" fg:x="814" fg:w="1"/><text x="65.2141%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0439%" y="309" width="0.0798%" height="15" fill="rgb(207,114,16)" fg:x="815" fg:w="1"/><text x="65.2939%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0439%" y="293" width="0.0798%" height="15" fill="rgb(224,33,25)" fg:x="815" fg:w="1"/><text x="65.2939%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.0439%" y="277" width="0.0798%" height="15" fill="rgb(230,93,54)" fg:x="815" fg:w="1"/><text x="65.2939%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.0439%" y="261" width="0.0798%" height="15" fill="rgb(224,56,24)" fg:x="815" fg:w="1"/><text x="65.2939%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.0439%" y="245" width="0.0798%" height="15" fill="rgb(235,189,50)" fg:x="815" fg:w="1"/><text x="65.2939%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0439%" y="229" width="0.0798%" height="15" fill="rgb(242,173,8)" fg:x="815" fg:w="1"/><text x="65.2939%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0439%" y="213" width="0.0798%" height="15" fill="rgb(209,206,10)" fg:x="815" fg:w="1"/><text x="65.2939%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.0439%" y="197" width="0.0798%" height="15" fill="rgb(213,182,44)" fg:x="815" fg:w="1"/><text x="65.2939%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.0439%" y="181" width="0.0798%" height="15" fill="rgb(243,51,15)" fg:x="815" fg:w="1"/><text x="65.2939%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.0439%" y="165" width="0.0798%" height="15" fill="rgb(241,13,14)" fg:x="815" fg:w="1"/><text x="65.2939%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.0439%" y="149" width="0.0798%" height="15" fill="rgb(239,147,24)" fg:x="815" fg:w="1"/><text x="65.2939%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.0439%" y="357" width="0.1596%" height="15" fill="rgb(223,129,16)" fg:x="815" fg:w="2"/><text x="65.2939%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.0439%" y="341" width="0.1596%" height="15" fill="rgb(209,169,13)" fg:x="815" fg:w="2"/><text x="65.2939%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.0439%" y="325" width="0.1596%" height="15" fill="rgb(235,159,41)" fg:x="815" fg:w="2"/><text x="65.2939%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1237%" y="309" width="0.0798%" height="15" fill="rgb(223,219,48)" fg:x="816" fg:w="1"/><text x="65.3737%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.2833%" y="341" width="0.0798%" height="15" fill="rgb(236,80,13)" fg:x="818" fg:w="1"/><text x="65.5333%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="65.2035%" y="357" width="0.2394%" height="15" fill="rgb(213,5,6)" fg:x="817" fg:w="3"/><text x="65.4535%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.3631%" y="341" width="0.0798%" height="15" fill="rgb(205,59,21)" fg:x="819" fg:w="1"/><text x="65.6131%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3631%" y="325" width="0.0798%" height="15" fill="rgb(247,137,35)" fg:x="819" fg:w="1"/><text x="65.6131%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.3631%" y="309" width="0.0798%" height="15" fill="rgb(242,208,28)" fg:x="819" fg:w="1"/><text x="65.6131%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3631%" y="293" width="0.0798%" height="15" fill="rgb(245,62,25)" fg:x="819" fg:w="1"/><text x="65.6131%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.3631%" y="277" width="0.0798%" height="15" fill="rgb(233,99,54)" fg:x="819" fg:w="1"/><text x="65.6131%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3631%" y="261" width="0.0798%" height="15" fill="rgb(213,10,37)" fg:x="819" fg:w="1"/><text x="65.6131%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="65.5227%" y="309" width="0.0798%" height="15" fill="rgb(235,143,30)" fg:x="821" fg:w="1"/><text x="65.7727%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.8420%" y="197" width="0.0798%" height="15" fill="rgb(250,146,33)" fg:x="825" fg:w="1"/><text x="66.0920%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.8420%" y="229" width="0.1596%" height="15" fill="rgb(226,198,42)" fg:x="825" fg:w="2"/><text x="66.0920%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.8420%" y="213" width="0.1596%" height="15" fill="rgb(222,55,6)" fg:x="825" fg:w="2"/><text x="66.0920%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.9218%" y="197" width="0.0798%" height="15" fill="rgb(213,224,31)" fg:x="826" fg:w="1"/><text x="66.1718%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.9218%" y="181" width="0.0798%" height="15" fill="rgb(226,103,35)" fg:x="826" fg:w="1"/><text x="66.1718%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.9218%" y="165" width="0.0798%" height="15" fill="rgb(205,66,45)" fg:x="826" fg:w="1"/><text x="66.1718%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="66.0814%" y="165" width="0.0798%" height="15" fill="rgb(226,51,42)" fg:x="828" fg:w="1"/><text x="66.3314%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="66.0016%" y="213" width="0.2394%" height="15" fill="rgb(206,69,1)" fg:x="827" fg:w="3"/><text x="66.2516%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="66.0814%" y="197" width="0.1596%" height="15" fill="rgb(213,228,47)" fg:x="828" fg:w="2"/><text x="66.3314%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.0814%" y="181" width="0.1596%" height="15" fill="rgb(224,204,18)" fg:x="828" fg:w="2"/><text x="66.3314%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.1612%" y="165" width="0.0798%" height="15" fill="rgb(253,187,47)" fg:x="829" fg:w="1"/><text x="66.4112%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.1612%" y="149" width="0.0798%" height="15" fill="rgb(232,61,2)" fg:x="829" fg:w="1"/><text x="66.4112%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="65.6824%" y="261" width="0.6385%" height="15" fill="rgb(213,132,35)" fg:x="823" fg:w="8"/><text x="65.9324%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="65.6824%" y="245" width="0.6385%" height="15" fill="rgb(247,33,21)" fg:x="823" fg:w="8"/><text x="65.9324%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="66.0016%" y="229" width="0.3192%" height="15" fill="rgb(233,71,46)" fg:x="827" fg:w="4"/><text x="66.2516%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="66.2410%" y="213" width="0.0798%" height="15" fill="rgb(222,173,43)" fg:x="830" fg:w="1"/><text x="66.4910%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="66.3208%" y="261" width="0.2394%" height="15" fill="rgb(249,218,47)" fg:x="831" fg:w="3"/><text x="66.5708%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="66.3208%" y="245" width="0.2394%" height="15" fill="rgb(254,185,48)" fg:x="831" fg:w="3"/><text x="66.5708%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="66.3208%" y="229" width="0.2394%" height="15" fill="rgb(252,165,50)" fg:x="831" fg:w="3"/><text x="66.5708%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="66.4006%" y="213" width="0.1596%" height="15" fill="rgb(206,219,6)" fg:x="832" fg:w="2"/><text x="66.6506%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.4804%" y="197" width="0.0798%" height="15" fill="rgb(212,212,45)" fg:x="833" fg:w="1"/><text x="66.7304%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.5603%" y="229" width="0.0798%" height="15" fill="rgb(221,31,9)" fg:x="834" fg:w="1"/><text x="66.8103%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="66.6401%" y="213" width="0.1596%" height="15" fill="rgb(234,198,39)" fg:x="835" fg:w="2"/><text x="66.8901%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="66.6401%" y="197" width="0.1596%" height="15" fill="rgb(252,145,46)" fg:x="835" fg:w="2"/><text x="66.8901%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7199%" y="181" width="0.0798%" height="15" fill="rgb(237,149,0)" fg:x="836" fg:w="1"/><text x="66.9699%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.7199%" y="165" width="0.0798%" height="15" fill="rgb(229,65,5)" fg:x="836" fg:w="1"/><text x="66.9699%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.7199%" y="149" width="0.0798%" height="15" fill="rgb(235,60,36)" fg:x="836" fg:w="1"/><text x="66.9699%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7199%" y="133" width="0.0798%" height="15" fill="rgb(222,47,18)" fg:x="836" fg:w="1"/><text x="66.9699%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.7199%" y="117" width="0.0798%" height="15" fill="rgb(235,114,22)" fg:x="836" fg:w="1"/><text x="66.9699%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.7199%" y="101" width="0.0798%" height="15" fill="rgb(209,167,11)" fg:x="836" fg:w="1"/><text x="66.9699%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7199%" y="85" width="0.0798%" height="15" fill="rgb(251,73,18)" fg:x="836" fg:w="1"/><text x="66.9699%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.7199%" y="69" width="0.0798%" height="15" fill="rgb(217,60,17)" fg:x="836" fg:w="1"/><text x="66.9699%" y="79.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (16 samples, 1.28%)</title><rect x="65.6026%" y="309" width="1.2769%" height="15" fill="rgb(224,36,37)" fg:x="822" fg:w="16"/><text x="65.8526%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (16 samples, 1.28%)</title><rect x="65.6026%" y="293" width="1.2769%" height="15" fill="rgb(211,21,32)" fg:x="822" fg:w="16"/><text x="65.8526%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (15 samples, 1.20%)</title><rect x="65.6824%" y="277" width="1.1971%" height="15" fill="rgb(231,55,48)" fg:x="823" fg:w="15"/><text x="65.9324%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="66.5603%" y="261" width="0.3192%" height="15" fill="rgb(227,42,18)" fg:x="834" fg:w="4"/><text x="66.8103%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="66.5603%" y="245" width="0.3192%" height="15" fill="rgb(217,2,27)" fg:x="834" fg:w="4"/><text x="66.8103%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="66.6401%" y="229" width="0.2394%" height="15" fill="rgb(251,138,23)" fg:x="835" fg:w="3"/><text x="66.8901%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7997%" y="213" width="0.0798%" height="15" fill="rgb(226,184,11)" fg:x="837" fg:w="1"/><text x="67.0497%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.7997%" y="197" width="0.0798%" height="15" fill="rgb(242,142,12)" fg:x="837" fg:w="1"/><text x="67.0497%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.7997%" y="181" width="0.0798%" height="15" fill="rgb(234,187,18)" fg:x="837" fg:w="1"/><text x="67.0497%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7997%" y="165" width="0.0798%" height="15" fill="rgb(237,44,42)" fg:x="837" fg:w="1"/><text x="67.0497%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.7997%" y="149" width="0.0798%" height="15" fill="rgb(211,90,23)" fg:x="837" fg:w="1"/><text x="67.0497%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.7997%" y="133" width="0.0798%" height="15" fill="rgb(207,81,18)" fg:x="837" fg:w="1"/><text x="67.0497%" y="143.50"></text></g><g><title>kernel::model::entity::Entity::from_value (19 samples, 1.52%)</title><rect x="65.4429%" y="357" width="1.5164%" height="15" fill="rgb(222,107,28)" fg:x="820" fg:w="19"/><text x="65.6929%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (19 samples, 1.52%)</title><rect x="65.4429%" y="341" width="1.5164%" height="15" fill="rgb(237,83,52)" fg:x="820" fg:w="19"/><text x="65.6929%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (19 samples, 1.52%)</title><rect x="65.4429%" y="325" width="1.5164%" height="15" fill="rgb(208,67,11)" fg:x="820" fg:w="19"/><text x="65.6929%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.8795%" y="309" width="0.0798%" height="15" fill="rgb(249,157,49)" fg:x="838" fg:w="1"/><text x="67.1295%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.8795%" y="293" width="0.0798%" height="15" fill="rgb(243,200,1)" fg:x="838" fg:w="1"/><text x="67.1295%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="67.0391%" y="213" width="0.2394%" height="15" fill="rgb(225,162,37)" fg:x="840" fg:w="3"/><text x="67.2891%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.1189%" y="197" width="0.1596%" height="15" fill="rgb(242,92,13)" fg:x="841" fg:w="2"/><text x="67.3689%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.1189%" y="181" width="0.1596%" height="15" fill="rgb(220,43,36)" fg:x="841" fg:w="2"/><text x="67.3689%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.1189%" y="165" width="0.1596%" height="15" fill="rgb(213,165,48)" fg:x="841" fg:w="2"/><text x="67.3689%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.1189%" y="149" width="0.1596%" height="15" fill="rgb(227,200,9)" fg:x="841" fg:w="2"/><text x="67.3689%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.1189%" y="133" width="0.1596%" height="15" fill="rgb(221,222,28)" fg:x="841" fg:w="2"/><text x="67.3689%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.2785%" y="165" width="0.0798%" height="15" fill="rgb(223,142,26)" fg:x="843" fg:w="1"/><text x="67.5285%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="67.2785%" y="149" width="0.0798%" height="15" fill="rgb(243,46,9)" fg:x="843" fg:w="1"/><text x="67.5285%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="67.0391%" y="229" width="0.3990%" height="15" fill="rgb(250,56,11)" fg:x="840" fg:w="5"/><text x="67.2891%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.2785%" y="213" width="0.1596%" height="15" fill="rgb(229,113,5)" fg:x="843" fg:w="2"/><text x="67.5285%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.2785%" y="197" width="0.1596%" height="15" fill="rgb(244,108,28)" fg:x="843" fg:w="2"/><text x="67.5285%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.2785%" y="181" width="0.1596%" height="15" fill="rgb(242,119,50)" fg:x="843" fg:w="2"/><text x="67.5285%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.3583%" y="165" width="0.0798%" height="15" fill="rgb(224,164,23)" fg:x="844" fg:w="1"/><text x="67.6083%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.3583%" y="149" width="0.0798%" height="15" fill="rgb(214,227,44)" fg:x="844" fg:w="1"/><text x="67.6083%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3583%" y="133" width="0.0798%" height="15" fill="rgb(238,202,4)" fg:x="844" fg:w="1"/><text x="67.6083%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.4381%" y="229" width="0.0798%" height="15" fill="rgb(213,190,30)" fg:x="845" fg:w="1"/><text x="67.6881%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="67.0391%" y="261" width="0.5587%" height="15" fill="rgb(239,15,2)" fg:x="840" fg:w="7"/><text x="67.2891%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="67.0391%" y="245" width="0.5587%" height="15" fill="rgb(249,229,4)" fg:x="840" fg:w="7"/><text x="67.2891%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5180%" y="229" width="0.0798%" height="15" fill="rgb(239,75,44)" fg:x="846" fg:w="1"/><text x="67.7680%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5180%" y="213" width="0.0798%" height="15" fill="rgb(251,206,23)" fg:x="846" fg:w="1"/><text x="67.7680%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5180%" y="197" width="0.0798%" height="15" fill="rgb(215,208,0)" fg:x="846" fg:w="1"/><text x="67.7680%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="67.0391%" y="293" width="0.6385%" height="15" fill="rgb(230,75,50)" fg:x="840" fg:w="8"/><text x="67.2891%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="67.0391%" y="277" width="0.6385%" height="15" fill="rgb(246,180,39)" fg:x="840" fg:w="8"/><text x="67.2891%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5978%" y="261" width="0.0798%" height="15" fill="rgb(249,175,24)" fg:x="847" fg:w="1"/><text x="67.8478%" y="271.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (35 samples, 2.79%)</title><rect x="65.0439%" y="421" width="2.7933%" height="15" fill="rgb(247,176,22)" fg:x="815" fg:w="35"/><text x="65.2939%" y="431.50">&lt;k..</text></g><g><title>kernel::model::EntityPtrResolver::entity (35 samples, 2.79%)</title><rect x="65.0439%" y="405" width="2.7933%" height="15" fill="rgb(241,100,24)" fg:x="815" fg:w="35"/><text x="65.2939%" y="415.50">ke..</text></g><g><title>engine::session::Session::load_entity (35 samples, 2.79%)</title><rect x="65.0439%" y="389" width="2.7933%" height="15" fill="rgb(233,4,35)" fg:x="815" fg:w="35"/><text x="65.2939%" y="399.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (35 samples, 2.79%)</title><rect x="65.0439%" y="373" width="2.7933%" height="15" fill="rgb(211,164,46)" fg:x="815" fg:w="35"/><text x="65.2939%" y="383.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.88%)</title><rect x="66.9593%" y="357" width="0.8779%" height="15" fill="rgb(242,99,53)" fg:x="839" fg:w="11"/><text x="67.2093%" y="367.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="66.9593%" y="341" width="0.8779%" height="15" fill="rgb(243,45,33)" fg:x="839" fg:w="11"/><text x="67.2093%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="66.9593%" y="325" width="0.8779%" height="15" fill="rgb(217,55,21)" fg:x="839" fg:w="11"/><text x="67.2093%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="66.9593%" y="309" width="0.8779%" height="15" fill="rgb(245,145,46)" fg:x="839" fg:w="11"/><text x="67.2093%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.6776%" y="293" width="0.1596%" height="15" fill="rgb(215,112,45)" fg:x="848" fg:w="2"/><text x="67.9276%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.7574%" y="277" width="0.0798%" height="15" fill="rgb(228,104,16)" fg:x="849" fg:w="1"/><text x="68.0074%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.7574%" y="261" width="0.0798%" height="15" fill="rgb(239,186,38)" fg:x="849" fg:w="1"/><text x="68.0074%" y="271.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (49 samples, 3.91%)</title><rect x="64.0064%" y="453" width="3.9106%" height="15" fill="rgb(228,38,35)" fg:x="802" fg:w="49"/><text x="64.2564%" y="463.50">&lt;eng..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (49 samples, 3.91%)</title><rect x="64.0064%" y="437" width="3.9106%" height="15" fill="rgb(251,42,40)" fg:x="802" fg:w="49"/><text x="64.2564%" y="447.50">&lt;plu..</text></g><g><title>plugins_core::finding::DefaultFinder::find_top_container (1 samples, 0.08%)</title><rect x="67.8372%" y="421" width="0.0798%" height="15" fill="rgb(210,51,19)" fg:x="850" fg:w="1"/><text x="68.0872%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="67.8372%" y="405" width="0.0798%" height="15" fill="rgb(236,94,42)" fg:x="850" fg:w="1"/><text x="68.0872%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="67.8372%" y="389" width="0.0798%" height="15" fill="rgb(239,167,16)" fg:x="850" fg:w="1"/><text x="68.0872%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="67.9170%" y="421" width="0.2394%" height="15" fill="rgb(252,175,31)" fg:x="851" fg:w="3"/><text x="68.1670%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="67.9170%" y="405" width="0.2394%" height="15" fill="rgb(206,166,30)" fg:x="851" fg:w="3"/><text x="68.1670%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="67.9170%" y="389" width="0.2394%" height="15" fill="rgb(206,209,37)" fg:x="851" fg:w="3"/><text x="68.1670%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="67.9170%" y="373" width="0.2394%" height="15" fill="rgb(226,91,4)" fg:x="851" fg:w="3"/><text x="68.1670%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="67.9170%" y="357" width="0.2394%" height="15" fill="rgb(222,167,0)" fg:x="851" fg:w="3"/><text x="68.1670%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="67.9170%" y="341" width="0.2394%" height="15" fill="rgb(211,70,14)" fg:x="851" fg:w="3"/><text x="68.1670%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="67.9170%" y="325" width="0.2394%" height="15" fill="rgb(214,84,42)" fg:x="851" fg:w="3"/><text x="68.1670%" y="335.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="67.9170%" y="309" width="0.2394%" height="15" fill="rgb(235,157,37)" fg:x="851" fg:w="3"/><text x="68.1670%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="67.9968%" y="293" width="0.1596%" height="15" fill="rgb(225,13,6)" fg:x="852" fg:w="2"/><text x="68.2468%" y="303.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.16%)</title><rect x="67.9968%" y="277" width="0.1596%" height="15" fill="rgb(205,202,1)" fg:x="852" fg:w="2"/><text x="68.2468%" y="287.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="67.9968%" y="261" width="0.1596%" height="15" fill="rgb(232,195,26)" fg:x="852" fg:w="2"/><text x="68.2468%" y="271.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="68.0766%" y="245" width="0.0798%" height="15" fill="rgb(208,102,26)" fg:x="853" fg:w="1"/><text x="68.3266%" y="255.50"></text></g><g><title>plugins_rune::runner::SharedRunners::before (1 samples, 0.08%)</title><rect x="68.1564%" y="421" width="0.0798%" height="15" fill="rgb(215,41,39)" fg:x="854" fg:w="1"/><text x="68.4064%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3160%" y="389" width="0.0798%" height="15" fill="rgb(247,139,11)" fg:x="856" fg:w="1"/><text x="68.5660%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3160%" y="373" width="0.0798%" height="15" fill="rgb(243,99,6)" fg:x="856" fg:w="1"/><text x="68.5660%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.3958%" y="389" width="0.0798%" height="15" fill="rgb(230,168,48)" fg:x="857" fg:w="1"/><text x="68.6458%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.3958%" y="373" width="0.0798%" height="15" fill="rgb(238,227,13)" fg:x="857" fg:w="1"/><text x="68.6458%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.3958%" y="357" width="0.0798%" height="15" fill="rgb(209,109,13)" fg:x="857" fg:w="1"/><text x="68.6458%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="68.4757%" y="389" width="0.1596%" height="15" fill="rgb(228,195,1)" fg:x="858" fg:w="2"/><text x="68.7257%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="68.6353%" y="373" width="0.3990%" height="15" fill="rgb(230,218,0)" fg:x="860" fg:w="5"/><text x="68.8853%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="68.7151%" y="357" width="0.3192%" height="15" fill="rgb(206,1,45)" fg:x="861" fg:w="4"/><text x="68.9651%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="68.7151%" y="341" width="0.3192%" height="15" fill="rgb(209,124,26)" fg:x="861" fg:w="4"/><text x="68.9651%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="68.8747%" y="325" width="0.1596%" height="15" fill="rgb(220,59,8)" fg:x="863" fg:w="2"/><text x="69.1247%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="68.8747%" y="309" width="0.1596%" height="15" fill="rgb(251,41,37)" fg:x="863" fg:w="2"/><text x="69.1247%" y="319.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="68.8747%" y="293" width="0.1596%" height="15" fill="rgb(239,152,21)" fg:x="863" fg:w="2"/><text x="69.1247%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0343%" y="261" width="0.0798%" height="15" fill="rgb(226,32,1)" fg:x="865" fg:w="1"/><text x="69.2843%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0343%" y="245" width="0.0798%" height="15" fill="rgb(230,154,36)" fg:x="865" fg:w="1"/><text x="69.2843%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0343%" y="229" width="0.0798%" height="15" fill="rgb(208,228,43)" fg:x="865" fg:w="1"/><text x="69.2843%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0343%" y="213" width="0.0798%" height="15" fill="rgb(214,203,3)" fg:x="865" fg:w="1"/><text x="69.2843%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.0343%" y="197" width="0.0798%" height="15" fill="rgb(207,149,29)" fg:x="865" fg:w="1"/><text x="69.2843%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.0343%" y="181" width="0.0798%" height="15" fill="rgb(250,105,7)" fg:x="865" fg:w="1"/><text x="69.2843%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.0343%" y="165" width="0.0798%" height="15" fill="rgb(232,222,16)" fg:x="865" fg:w="1"/><text x="69.2843%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.0343%" y="149" width="0.0798%" height="15" fill="rgb(209,32,24)" fg:x="865" fg:w="1"/><text x="69.2843%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.0343%" y="133" width="0.0798%" height="15" fill="rgb(225,13,6)" fg:x="865" fg:w="1"/><text x="69.2843%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.0343%" y="117" width="0.0798%" height="15" fill="rgb(245,226,26)" fg:x="865" fg:w="1"/><text x="69.2843%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.0343%" y="101" width="0.0798%" height="15" fill="rgb(229,178,27)" fg:x="865" fg:w="1"/><text x="69.2843%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.0343%" y="85" width="0.0798%" height="15" fill="rgb(205,227,28)" fg:x="865" fg:w="1"/><text x="69.2843%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.0343%" y="69" width="0.0798%" height="15" fill="rgb(210,191,45)" fg:x="865" fg:w="1"/><text x="69.2843%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.0343%" y="309" width="0.1596%" height="15" fill="rgb(206,124,16)" fg:x="865" fg:w="2"/><text x="69.2843%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.0343%" y="293" width="0.1596%" height="15" fill="rgb(210,162,0)" fg:x="865" fg:w="2"/><text x="69.2843%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.0343%" y="277" width="0.1596%" height="15" fill="rgb(211,54,38)" fg:x="865" fg:w="2"/><text x="69.2843%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1141%" y="261" width="0.0798%" height="15" fill="rgb(248,192,3)" fg:x="866" fg:w="1"/><text x="69.3641%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.1141%" y="245" width="0.0798%" height="15" fill="rgb(233,187,18)" fg:x="866" fg:w="1"/><text x="69.3641%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1141%" y="229" width="0.0798%" height="15" fill="rgb(237,208,14)" fg:x="866" fg:w="1"/><text x="69.3641%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1141%" y="213" width="0.0798%" height="15" fill="rgb(212,77,1)" fg:x="866" fg:w="1"/><text x="69.3641%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.1141%" y="197" width="0.0798%" height="15" fill="rgb(210,163,22)" fg:x="866" fg:w="1"/><text x="69.3641%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.1141%" y="181" width="0.0798%" height="15" fill="rgb(250,58,28)" fg:x="866" fg:w="1"/><text x="69.3641%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.1141%" y="165" width="0.0798%" height="15" fill="rgb(254,28,41)" fg:x="866" fg:w="1"/><text x="69.3641%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.1141%" y="149" width="0.0798%" height="15" fill="rgb(237,162,36)" fg:x="866" fg:w="1"/><text x="69.3641%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.1141%" y="133" width="0.0798%" height="15" fill="rgb(232,56,6)" fg:x="866" fg:w="1"/><text x="69.3641%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.1141%" y="117" width="0.0798%" height="15" fill="rgb(216,127,42)" fg:x="866" fg:w="1"/><text x="69.3641%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.1141%" y="101" width="0.0798%" height="15" fill="rgb(241,69,15)" fg:x="866" fg:w="1"/><text x="69.3641%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.1141%" y="85" width="0.0798%" height="15" fill="rgb(227,180,19)" fg:x="866" fg:w="1"/><text x="69.3641%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.1141%" y="69" width="0.0798%" height="15" fill="rgb(231,188,29)" fg:x="866" fg:w="1"/><text x="69.3641%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.1141%" y="53" width="0.0798%" height="15" fill="rgb(224,176,27)" fg:x="866" fg:w="1"/><text x="69.3641%" y="63.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.1939%" y="309" width="0.0798%" height="15" fill="rgb(249,214,19)" fg:x="867" fg:w="1"/><text x="69.4439%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="69.1939%" y="293" width="0.0798%" height="15" fill="rgb(240,0,4)" fg:x="867" fg:w="1"/><text x="69.4439%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.3536%" y="293" width="0.1596%" height="15" fill="rgb(233,28,41)" fg:x="869" fg:w="2"/><text x="69.6036%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4334%" y="277" width="0.0798%" height="15" fill="rgb(220,90,51)" fg:x="870" fg:w="1"/><text x="69.6834%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4334%" y="261" width="0.0798%" height="15" fill="rgb(250,52,22)" fg:x="870" fg:w="1"/><text x="69.6834%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.4334%" y="245" width="0.0798%" height="15" fill="rgb(231,152,36)" fg:x="870" fg:w="1"/><text x="69.6834%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.4334%" y="229" width="0.0798%" height="15" fill="rgb(250,218,4)" fg:x="870" fg:w="1"/><text x="69.6834%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.4334%" y="213" width="0.0798%" height="15" fill="rgb(210,38,21)" fg:x="870" fg:w="1"/><text x="69.6834%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4334%" y="197" width="0.0798%" height="15" fill="rgb(230,75,13)" fg:x="870" fg:w="1"/><text x="69.6834%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4334%" y="181" width="0.0798%" height="15" fill="rgb(250,68,53)" fg:x="870" fg:w="1"/><text x="69.6834%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.4334%" y="165" width="0.0798%" height="15" fill="rgb(250,210,16)" fg:x="870" fg:w="1"/><text x="69.6834%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.4334%" y="149" width="0.0798%" height="15" fill="rgb(240,132,5)" fg:x="870" fg:w="1"/><text x="69.6834%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.4334%" y="133" width="0.0798%" height="15" fill="rgb(222,148,48)" fg:x="870" fg:w="1"/><text x="69.6834%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.4334%" y="117" width="0.0798%" height="15" fill="rgb(247,181,24)" fg:x="870" fg:w="1"/><text x="69.6834%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4334%" y="101" width="0.0798%" height="15" fill="rgb(239,5,31)" fg:x="870" fg:w="1"/><text x="69.6834%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="69.2737%" y="309" width="0.3192%" height="15" fill="rgb(241,152,38)" fg:x="868" fg:w="4"/><text x="69.5237%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5132%" y="293" width="0.0798%" height="15" fill="rgb(246,200,37)" fg:x="871" fg:w="1"/><text x="69.7632%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.5930%" y="277" width="0.0798%" height="15" fill="rgb(243,210,26)" fg:x="872" fg:w="1"/><text x="69.8430%" y="287.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="69.5930%" y="309" width="0.1596%" height="15" fill="rgb(222,22,22)" fg:x="872" fg:w="2"/><text x="69.8430%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.5930%" y="293" width="0.1596%" height="15" fill="rgb(208,129,28)" fg:x="872" fg:w="2"/><text x="69.8430%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="69.6728%" y="277" width="0.0798%" height="15" fill="rgb(254,169,28)" fg:x="873" fg:w="1"/><text x="69.9228%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.6728%" y="261" width="0.0798%" height="15" fill="rgb(225,45,17)" fg:x="873" fg:w="1"/><text x="69.9228%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="69.7526%" y="261" width="0.0798%" height="15" fill="rgb(232,199,2)" fg:x="874" fg:w="1"/><text x="70.0026%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="69.8324%" y="229" width="0.1596%" height="15" fill="rgb(235,33,40)" fg:x="875" fg:w="2"/><text x="70.0824%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.9920%" y="213" width="0.0798%" height="15" fill="rgb(237,89,50)" fg:x="877" fg:w="1"/><text x="70.2420%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.9920%" y="197" width="0.0798%" height="15" fill="rgb(238,126,5)" fg:x="877" fg:w="1"/><text x="70.2420%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.9920%" y="181" width="0.0798%" height="15" fill="rgb(247,214,42)" fg:x="877" fg:w="1"/><text x="70.2420%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.9920%" y="165" width="0.0798%" height="15" fill="rgb(238,60,45)" fg:x="877" fg:w="1"/><text x="70.2420%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9920%" y="149" width="0.0798%" height="15" fill="rgb(225,69,44)" fg:x="877" fg:w="1"/><text x="70.2420%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0718%" y="213" width="0.0798%" height="15" fill="rgb(241,13,44)" fg:x="878" fg:w="1"/><text x="70.3218%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.0718%" y="197" width="0.0798%" height="15" fill="rgb(227,121,22)" fg:x="878" fg:w="1"/><text x="70.3218%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0718%" y="181" width="0.0798%" height="15" fill="rgb(231,160,23)" fg:x="878" fg:w="1"/><text x="70.3218%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0718%" y="165" width="0.0798%" height="15" fill="rgb(250,179,43)" fg:x="878" fg:w="1"/><text x="70.3218%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0718%" y="149" width="0.0798%" height="15" fill="rgb(233,54,46)" fg:x="878" fg:w="1"/><text x="70.3218%" y="159.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="70.2314%" y="165" width="0.0798%" height="15" fill="rgb(247,120,42)" fg:x="880" fg:w="1"/><text x="70.4814%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="70.2314%" y="149" width="0.0798%" height="15" fill="rgb(221,219,12)" fg:x="880" fg:w="1"/><text x="70.4814%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2314%" y="133" width="0.0798%" height="15" fill="rgb(211,126,8)" fg:x="880" fg:w="1"/><text x="70.4814%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.2314%" y="117" width="0.0798%" height="15" fill="rgb(218,154,33)" fg:x="880" fg:w="1"/><text x="70.4814%" y="127.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.64%)</title><rect x="69.7526%" y="309" width="0.6385%" height="15" fill="rgb(212,199,16)" fg:x="874" fg:w="8"/><text x="70.0026%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="69.7526%" y="293" width="0.6385%" height="15" fill="rgb(236,215,46)" fg:x="874" fg:w="8"/><text x="70.0026%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="69.7526%" y="277" width="0.6385%" height="15" fill="rgb(232,32,22)" fg:x="874" fg:w="8"/><text x="70.0026%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="69.8324%" y="261" width="0.5587%" height="15" fill="rgb(234,79,15)" fg:x="875" fg:w="7"/><text x="70.0824%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="69.8324%" y="245" width="0.5587%" height="15" fill="rgb(235,187,47)" fg:x="875" fg:w="7"/><text x="70.0824%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="69.9920%" y="229" width="0.3990%" height="15" fill="rgb(244,69,37)" fg:x="877" fg:w="5"/><text x="70.2420%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.1516%" y="213" width="0.2394%" height="15" fill="rgb(249,140,25)" fg:x="879" fg:w="3"/><text x="70.4016%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="70.1516%" y="197" width="0.2394%" height="15" fill="rgb(213,69,8)" fg:x="879" fg:w="3"/><text x="70.4016%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="70.2314%" y="181" width="0.1596%" height="15" fill="rgb(220,136,2)" fg:x="880" fg:w="2"/><text x="70.4814%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3113%" y="165" width="0.0798%" height="15" fill="rgb(237,50,36)" fg:x="881" fg:w="1"/><text x="70.5613%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.3113%" y="149" width="0.0798%" height="15" fill="rgb(226,18,11)" fg:x="881" fg:w="1"/><text x="70.5613%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.3113%" y="133" width="0.0798%" height="15" fill="rgb(243,156,2)" fg:x="881" fg:w="1"/><text x="70.5613%" y="143.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="70.3911%" y="309" width="0.0798%" height="15" fill="rgb(218,8,34)" fg:x="882" fg:w="1"/><text x="70.6411%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.3911%" y="293" width="0.0798%" height="15" fill="rgb(250,94,35)" fg:x="882" fg:w="1"/><text x="70.6411%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.3911%" y="277" width="0.0798%" height="15" fill="rgb(229,127,21)" fg:x="882" fg:w="1"/><text x="70.6411%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.5507%" y="165" width="0.0798%" height="15" fill="rgb(234,49,5)" fg:x="884" fg:w="1"/><text x="70.8007%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.5507%" y="149" width="0.0798%" height="15" fill="rgb(248,12,16)" fg:x="884" fg:w="1"/><text x="70.8007%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5507%" y="133" width="0.0798%" height="15" fill="rgb(208,220,31)" fg:x="884" fg:w="1"/><text x="70.8007%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5507%" y="117" width="0.0798%" height="15" fill="rgb(243,184,0)" fg:x="884" fg:w="1"/><text x="70.8007%" y="127.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.5507%" y="101" width="0.0798%" height="15" fill="rgb(217,38,21)" fg:x="884" fg:w="1"/><text x="70.8007%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="70.4709%" y="181" width="0.3192%" height="15" fill="rgb(239,120,45)" fg:x="883" fg:w="4"/><text x="70.7209%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.6305%" y="165" width="0.1596%" height="15" fill="rgb(235,33,2)" fg:x="885" fg:w="2"/><text x="70.8805%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7103%" y="149" width="0.0798%" height="15" fill="rgb(249,161,5)" fg:x="886" fg:w="1"/><text x="70.9603%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7103%" y="133" width="0.0798%" height="15" fill="rgb(250,165,48)" fg:x="886" fg:w="1"/><text x="70.9603%" y="143.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.7103%" y="117" width="0.0798%" height="15" fill="rgb(221,23,45)" fg:x="886" fg:w="1"/><text x="70.9603%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="70.4709%" y="213" width="0.3990%" height="15" fill="rgb(217,108,46)" fg:x="883" fg:w="5"/><text x="70.7209%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="70.4709%" y="197" width="0.3990%" height="15" fill="rgb(254,26,35)" fg:x="883" fg:w="5"/><text x="70.7209%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.7901%" y="181" width="0.0798%" height="15" fill="rgb(218,223,28)" fg:x="887" fg:w="1"/><text x="71.0401%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7901%" y="165" width="0.0798%" height="15" fill="rgb(242,27,47)" fg:x="887" fg:w="1"/><text x="71.0401%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.8699%" y="213" width="0.0798%" height="15" fill="rgb(218,39,35)" fg:x="888" fg:w="1"/><text x="71.1199%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8699%" y="197" width="0.0798%" height="15" fill="rgb(232,127,16)" fg:x="888" fg:w="1"/><text x="71.1199%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="70.4709%" y="245" width="0.6385%" height="15" fill="rgb(231,219,51)" fg:x="883" fg:w="8"/><text x="70.7209%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="70.4709%" y="229" width="0.6385%" height="15" fill="rgb(217,220,46)" fg:x="883" fg:w="8"/><text x="70.7209%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.9497%" y="213" width="0.1596%" height="15" fill="rgb(230,75,1)" fg:x="889" fg:w="2"/><text x="71.1997%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.9497%" y="197" width="0.1596%" height="15" fill="rgb(218,2,8)" fg:x="889" fg:w="2"/><text x="71.1997%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.9497%" y="181" width="0.1596%" height="15" fill="rgb(206,111,30)" fg:x="889" fg:w="2"/><text x="71.1997%" y="191.50"></text></g><g><title>plugins_core::tools::contained_by (32 samples, 2.55%)</title><rect x="68.6353%" y="389" width="2.5539%" height="15" fill="rgb(209,135,6)" fg:x="860" fg:w="32"/><text x="68.8853%" y="399.50">pl..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (27 samples, 2.15%)</title><rect x="69.0343%" y="373" width="2.1548%" height="15" fill="rgb(205,169,10)" fg:x="865" fg:w="27"/><text x="69.2843%" y="383.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (27 samples, 2.15%)</title><rect x="69.0343%" y="357" width="2.1548%" height="15" fill="rgb(212,204,38)" fg:x="865" fg:w="27"/><text x="69.2843%" y="367.50">k..</text></g><g><title>engine::session::Session::load_entity (27 samples, 2.15%)</title><rect x="69.0343%" y="341" width="2.1548%" height="15" fill="rgb(205,199,14)" fg:x="865" fg:w="27"/><text x="69.2843%" y="351.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.15%)</title><rect x="69.0343%" y="325" width="2.1548%" height="15" fill="rgb(212,4,6)" fg:x="865" fg:w="27"/><text x="69.2843%" y="335.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="70.4709%" y="309" width="0.7183%" height="15" fill="rgb(250,15,10)" fg:x="883" fg:w="9"/><text x="70.7209%" y="319.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="70.4709%" y="293" width="0.7183%" height="15" fill="rgb(212,49,51)" fg:x="883" fg:w="9"/><text x="70.7209%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="70.4709%" y="277" width="0.7183%" height="15" fill="rgb(235,21,9)" fg:x="883" fg:w="9"/><text x="70.7209%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="70.4709%" y="261" width="0.7183%" height="15" fill="rgb(251,31,32)" fg:x="883" fg:w="9"/><text x="70.7209%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.1093%" y="245" width="0.0798%" height="15" fill="rgb(246,23,9)" fg:x="891" fg:w="1"/><text x="71.3593%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.1093%" y="229" width="0.0798%" height="15" fill="rgb(225,216,14)" fg:x="891" fg:w="1"/><text x="71.3593%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.3488%" y="309" width="0.1596%" height="15" fill="rgb(215,200,26)" fg:x="894" fg:w="2"/><text x="71.5988%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4286%" y="293" width="0.0798%" height="15" fill="rgb(237,130,47)" fg:x="895" fg:w="1"/><text x="71.6786%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4286%" y="277" width="0.0798%" height="15" fill="rgb(247,74,14)" fg:x="895" fg:w="1"/><text x="71.6786%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.4286%" y="261" width="0.0798%" height="15" fill="rgb(254,97,46)" fg:x="895" fg:w="1"/><text x="71.6786%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.4286%" y="245" width="0.0798%" height="15" fill="rgb(234,191,1)" fg:x="895" fg:w="1"/><text x="71.6786%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.4286%" y="229" width="0.0798%" height="15" fill="rgb(215,165,14)" fg:x="895" fg:w="1"/><text x="71.6786%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.4286%" y="213" width="0.0798%" height="15" fill="rgb(230,182,6)" fg:x="895" fg:w="1"/><text x="71.6786%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.4286%" y="197" width="0.0798%" height="15" fill="rgb(210,127,39)" fg:x="895" fg:w="1"/><text x="71.6786%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.4286%" y="181" width="0.0798%" height="15" fill="rgb(223,212,51)" fg:x="895" fg:w="1"/><text x="71.6786%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.4286%" y="165" width="0.0798%" height="15" fill="rgb(226,176,43)" fg:x="895" fg:w="1"/><text x="71.6786%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.4286%" y="149" width="0.0798%" height="15" fill="rgb(222,155,4)" fg:x="895" fg:w="1"/><text x="71.6786%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.4286%" y="133" width="0.0798%" height="15" fill="rgb(215,149,7)" fg:x="895" fg:w="1"/><text x="71.6786%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4286%" y="117" width="0.0798%" height="15" fill="rgb(252,199,23)" fg:x="895" fg:w="1"/><text x="71.6786%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="71.1891%" y="357" width="0.3990%" height="15" fill="rgb(245,52,29)" fg:x="892" fg:w="5"/><text x="71.4391%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="71.2690%" y="341" width="0.3192%" height="15" fill="rgb(221,228,19)" fg:x="893" fg:w="4"/><text x="71.5190%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="71.2690%" y="325" width="0.3192%" height="15" fill="rgb(253,101,6)" fg:x="893" fg:w="4"/><text x="71.5190%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.5084%" y="309" width="0.0798%" height="15" fill="rgb(211,130,8)" fg:x="896" fg:w="1"/><text x="71.7584%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.5084%" y="293" width="0.0798%" height="15" fill="rgb(238,37,53)" fg:x="896" fg:w="1"/><text x="71.7584%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.5084%" y="277" width="0.0798%" height="15" fill="rgb(235,145,5)" fg:x="896" fg:w="1"/><text x="71.7584%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.5084%" y="261" width="0.0798%" height="15" fill="rgb(244,12,43)" fg:x="896" fg:w="1"/><text x="71.7584%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.5084%" y="245" width="0.0798%" height="15" fill="rgb(246,195,24)" fg:x="896" fg:w="1"/><text x="71.7584%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.5084%" y="229" width="0.0798%" height="15" fill="rgb(235,163,6)" fg:x="896" fg:w="1"/><text x="71.7584%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.5084%" y="213" width="0.0798%" height="15" fill="rgb(236,218,17)" fg:x="896" fg:w="1"/><text x="71.7584%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.5084%" y="197" width="0.0798%" height="15" fill="rgb(235,12,38)" fg:x="896" fg:w="1"/><text x="71.7584%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.5084%" y="181" width="0.0798%" height="15" fill="rgb(225,195,33)" fg:x="896" fg:w="1"/><text x="71.7584%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.5084%" y="165" width="0.0798%" height="15" fill="rgb(238,54,35)" fg:x="896" fg:w="1"/><text x="71.7584%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.5084%" y="149" width="0.0798%" height="15" fill="rgb(238,33,7)" fg:x="896" fg:w="1"/><text x="71.7584%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5084%" y="133" width="0.0798%" height="15" fill="rgb(245,5,14)" fg:x="896" fg:w="1"/><text x="71.7584%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="71.9074%" y="325" width="0.2394%" height="15" fill="rgb(251,95,31)" fg:x="901" fg:w="3"/><text x="72.1574%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="71.9074%" y="309" width="0.2394%" height="15" fill="rgb(222,15,46)" fg:x="901" fg:w="3"/><text x="72.1574%" y="319.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="71.9872%" y="293" width="0.1596%" height="15" fill="rgb(226,182,24)" fg:x="902" fg:w="2"/><text x="72.2372%" y="303.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.9872%" y="277" width="0.1596%" height="15" fill="rgb(229,105,41)" fg:x="902" fg:w="2"/><text x="72.2372%" y="287.50"></text></g><g><title>plugins_core::tools::occupied_by (13 samples, 1.04%)</title><rect x="71.1891%" y="389" width="1.0375%" height="15" fill="rgb(216,99,53)" fg:x="892" fg:w="13"/><text x="71.4391%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (13 samples, 1.04%)</title><rect x="71.1891%" y="373" width="1.0375%" height="15" fill="rgb(253,26,20)" fg:x="892" fg:w="13"/><text x="71.4391%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="71.5882%" y="357" width="0.6385%" height="15" fill="rgb(249,155,28)" fg:x="897" fg:w="8"/><text x="71.8382%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="71.5882%" y="341" width="0.6385%" height="15" fill="rgb(241,221,2)" fg:x="897" fg:w="8"/><text x="71.8382%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.1468%" y="325" width="0.0798%" height="15" fill="rgb(219,124,6)" fg:x="904" fg:w="1"/><text x="72.3968%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1468%" y="309" width="0.0798%" height="15" fill="rgb(233,37,6)" fg:x="904" fg:w="1"/><text x="72.3968%" y="319.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (52 samples, 4.15%)</title><rect x="68.2362%" y="405" width="4.1500%" height="15" fill="rgb(238,20,14)" fg:x="855" fg:w="52"/><text x="68.4862%" y="415.50">plugi..</text></g><g><title>plugins_core::tools::worn_by (2 samples, 0.16%)</title><rect x="72.2267%" y="389" width="0.1596%" height="15" fill="rgb(232,106,27)" fg:x="905" fg:w="2"/><text x="72.4767%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="72.3065%" y="373" width="0.0798%" height="15" fill="rgb(246,157,24)" fg:x="906" fg:w="1"/><text x="72.5565%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.3065%" y="357" width="0.0798%" height="15" fill="rgb(214,153,10)" fg:x="906" fg:w="1"/><text x="72.5565%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="72.3065%" y="341" width="0.0798%" height="15" fill="rgb(212,94,6)" fg:x="906" fg:w="1"/><text x="72.5565%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="72.3065%" y="325" width="0.0798%" height="15" fill="rgb(254,25,27)" fg:x="906" fg:w="1"/><text x="72.5565%" y="335.50"></text></g><g><title>engine::session::Session::captured (124 samples, 9.90%)</title><rect x="62.8093%" y="565" width="9.8962%" height="15" fill="rgb(250,43,52)" fg:x="787" fg:w="124"/><text x="63.0593%" y="575.50">engine::sessio..</text></g><g><title>engine::session::logs::capture (116 samples, 9.26%)</title><rect x="63.4477%" y="549" width="9.2578%" height="15" fill="rgb(221,226,40)" fg:x="795" fg:w="116"/><text x="63.6977%" y="559.50">engine::sessi..</text></g><g><title>tracing_core::dispatcher::with_default (109 samples, 8.70%)</title><rect x="64.0064%" y="533" width="8.6991%" height="15" fill="rgb(235,162,34)" fg:x="802" fg:w="109"/><text x="64.2564%" y="543.50">tracing_core..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (109 samples, 8.70%)</title><rect x="64.0064%" y="517" width="8.6991%" height="15" fill="rgb(239,24,26)" fg:x="802" fg:w="109"/><text x="64.2564%" y="527.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::apply_middleware (109 samples, 8.70%)</title><rect x="64.0064%" y="501" width="8.6991%" height="15" fill="rgb(244,226,11)" fg:x="802" fg:w="109"/><text x="64.2564%" y="511.50">kernel::plug..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (109 samples, 8.70%)</title><rect x="64.0064%" y="485" width="8.6991%" height="15" fill="rgb(225,23,10)" fg:x="802" fg:w="109"/><text x="64.2564%" y="495.50">kernel::plug..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (109 samples, 8.70%)</title><rect x="64.0064%" y="469" width="8.6991%" height="15" fill="rgb(249,125,6)" fg:x="802" fg:w="109"/><text x="64.2564%" y="479.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (60 samples, 4.79%)</title><rect x="67.9170%" y="453" width="4.7885%" height="15" fill="rgb(246,212,12)" fg:x="851" fg:w="60"/><text x="68.1670%" y="463.50">kernel..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (60 samples, 4.79%)</title><rect x="67.9170%" y="437" width="4.7885%" height="15" fill="rgb(230,43,32)" fg:x="851" fg:w="60"/><text x="68.1670%" y="447.50">&lt;plugi..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (56 samples, 4.47%)</title><rect x="68.2362%" y="421" width="4.4693%" height="15" fill="rgb(210,95,23)" fg:x="855" fg:w="56"/><text x="68.4862%" y="431.50">plugi..</text></g><g><title>plugins_rune::sources::load_sources_from_entity (4 samples, 0.32%)</title><rect x="72.3863%" y="405" width="0.3192%" height="15" fill="rgb(229,103,33)" fg:x="907" fg:w="4"/><text x="72.6363%" y="415.50"></text></g><g><title>plugins_rune::sources::get_script (4 samples, 0.32%)</title><rect x="72.3863%" y="389" width="0.3192%" height="15" fill="rgb(222,104,27)" fg:x="907" fg:w="4"/><text x="72.6363%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="72.4661%" y="373" width="0.2394%" height="15" fill="rgb(239,221,23)" fg:x="908" fg:w="3"/><text x="72.7161%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (2 samples, 0.16%)</title><rect x="72.5459%" y="357" width="0.1596%" height="15" fill="rgb(222,98,21)" fg:x="909" fg:w="2"/><text x="72.7959%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="72.5459%" y="341" width="0.1596%" height="15" fill="rgb(231,101,20)" fg:x="909" fg:w="2"/><text x="72.7959%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="72.7853%" y="517" width="0.3192%" height="15" fill="rgb(215,150,22)" fg:x="912" fg:w="4"/><text x="73.0353%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.8651%" y="501" width="0.2394%" height="15" fill="rgb(248,3,34)" fg:x="913" fg:w="3"/><text x="73.1151%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.0247%" y="485" width="0.0798%" height="15" fill="rgb(220,141,21)" fg:x="915" fg:w="1"/><text x="73.2747%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.0247%" y="469" width="0.0798%" height="15" fill="rgb(223,41,48)" fg:x="915" fg:w="1"/><text x="73.2747%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.0247%" y="453" width="0.0798%" height="15" fill="rgb(247,12,5)" fg:x="915" fg:w="1"/><text x="73.2747%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.0247%" y="437" width="0.0798%" height="15" fill="rgb(206,173,10)" fg:x="915" fg:w="1"/><text x="73.2747%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.0247%" y="421" width="0.0798%" height="15" fill="rgb(233,214,37)" fg:x="915" fg:w="1"/><text x="73.2747%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.0247%" y="405" width="0.0798%" height="15" fill="rgb(238,86,43)" fg:x="915" fg:w="1"/><text x="73.2747%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.0247%" y="389" width="0.0798%" height="15" fill="rgb(212,182,8)" fg:x="915" fg:w="1"/><text x="73.2747%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.0247%" y="373" width="0.0798%" height="15" fill="rgb(240,91,47)" fg:x="915" fg:w="1"/><text x="73.2747%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.0247%" y="357" width="0.0798%" height="15" fill="rgb(209,138,26)" fg:x="915" fg:w="1"/><text x="73.2747%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.0247%" y="341" width="0.0798%" height="15" fill="rgb(231,163,20)" fg:x="915" fg:w="1"/><text x="73.2747%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.0247%" y="325" width="0.0798%" height="15" fill="rgb(214,91,54)" fg:x="915" fg:w="1"/><text x="73.2747%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.0247%" y="309" width="0.0798%" height="15" fill="rgb(230,32,17)" fg:x="915" fg:w="1"/><text x="73.2747%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0247%" y="293" width="0.0798%" height="15" fill="rgb(231,34,34)" fg:x="915" fg:w="1"/><text x="73.2747%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="73.1844%" y="469" width="0.3192%" height="15" fill="rgb(224,228,27)" fg:x="917" fg:w="4"/><text x="73.4344%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.4238%" y="453" width="0.0798%" height="15" fill="rgb(219,35,40)" fg:x="920" fg:w="1"/><text x="73.6738%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.5834%" y="421" width="0.0798%" height="15" fill="rgb(234,42,8)" fg:x="922" fg:w="1"/><text x="73.8334%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.8228%" y="325" width="0.1596%" height="15" fill="rgb(226,75,22)" fg:x="925" fg:w="2"/><text x="74.0728%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="73.7430%" y="373" width="0.3192%" height="15" fill="rgb(242,203,28)" fg:x="924" fg:w="4"/><text x="73.9930%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="73.8228%" y="357" width="0.2394%" height="15" fill="rgb(221,3,9)" fg:x="925" fg:w="3"/><text x="74.0728%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="73.8228%" y="341" width="0.2394%" height="15" fill="rgb(214,34,31)" fg:x="925" fg:w="3"/><text x="74.0728%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.9824%" y="325" width="0.0798%" height="15" fill="rgb(252,119,15)" fg:x="927" fg:w="1"/><text x="74.2324%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.9824%" y="309" width="0.0798%" height="15" fill="rgb(244,224,31)" fg:x="927" fg:w="1"/><text x="74.2324%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.9824%" y="293" width="0.0798%" height="15" fill="rgb(215,8,51)" fg:x="927" fg:w="1"/><text x="74.2324%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.1421%" y="341" width="0.0798%" height="15" fill="rgb(207,24,1)" fg:x="929" fg:w="1"/><text x="74.3921%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1421%" y="325" width="0.0798%" height="15" fill="rgb(245,90,0)" fg:x="929" fg:w="1"/><text x="74.3921%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="73.6632%" y="421" width="0.6385%" height="15" fill="rgb(246,43,48)" fg:x="923" fg:w="8"/><text x="73.9132%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="73.6632%" y="405" width="0.6385%" height="15" fill="rgb(252,218,10)" fg:x="923" fg:w="8"/><text x="73.9132%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="73.6632%" y="389" width="0.6385%" height="15" fill="rgb(231,24,35)" fg:x="923" fg:w="8"/><text x="73.9132%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.0623%" y="373" width="0.2394%" height="15" fill="rgb(225,66,19)" fg:x="928" fg:w="3"/><text x="74.3123%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.0623%" y="357" width="0.2394%" height="15" fill="rgb(214,96,51)" fg:x="928" fg:w="3"/><text x="74.3123%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="74.2219%" y="341" width="0.0798%" height="15" fill="rgb(251,151,47)" fg:x="930" fg:w="1"/><text x="74.4719%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="74.2219%" y="325" width="0.0798%" height="15" fill="rgb(236,79,14)" fg:x="930" fg:w="1"/><text x="74.4719%" y="335.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="74.2219%" y="309" width="0.0798%" height="15" fill="rgb(210,205,11)" fg:x="930" fg:w="1"/><text x="74.4719%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="74.2219%" y="293" width="0.0798%" height="15" fill="rgb(233,142,53)" fg:x="930" fg:w="1"/><text x="74.4719%" y="303.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.2219%" y="277" width="0.0798%" height="15" fill="rgb(212,116,48)" fg:x="930" fg:w="1"/><text x="74.4719%" y="287.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.2219%" y="261" width="0.0798%" height="15" fill="rgb(234,55,33)" fg:x="930" fg:w="1"/><text x="74.4719%" y="271.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.2219%" y="245" width="0.0798%" height="15" fill="rgb(253,92,27)" fg:x="930" fg:w="1"/><text x="74.4719%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.2219%" y="229" width="0.0798%" height="15" fill="rgb(220,7,35)" fg:x="930" fg:w="1"/><text x="74.4719%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.2219%" y="213" width="0.0798%" height="15" fill="rgb(246,124,6)" fg:x="930" fg:w="1"/><text x="74.4719%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="74.2219%" y="197" width="0.0798%" height="15" fill="rgb(212,111,51)" fg:x="930" fg:w="1"/><text x="74.4719%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="74.2219%" y="181" width="0.0798%" height="15" fill="rgb(253,116,7)" fg:x="930" fg:w="1"/><text x="74.4719%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="74.2219%" y="165" width="0.0798%" height="15" fill="rgb(213,145,18)" fg:x="930" fg:w="1"/><text x="74.4719%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="74.2219%" y="149" width="0.0798%" height="15" fill="rgb(219,149,7)" fg:x="930" fg:w="1"/><text x="74.4719%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.2219%" y="133" width="0.0798%" height="15" fill="rgb(225,156,20)" fg:x="930" fg:w="1"/><text x="74.4719%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="73.5036%" y="469" width="0.8779%" height="15" fill="rgb(211,98,19)" fg:x="921" fg:w="11"/><text x="73.7536%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.88%)</title><rect x="73.5036%" y="453" width="0.8779%" height="15" fill="rgb(231,192,31)" fg:x="921" fg:w="11"/><text x="73.7536%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (11 samples, 0.88%)</title><rect x="73.5036%" y="437" width="0.8779%" height="15" fill="rgb(249,95,19)" fg:x="921" fg:w="11"/><text x="73.7536%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.3017%" y="421" width="0.0798%" height="15" fill="rgb(247,101,36)" fg:x="931" fg:w="1"/><text x="74.5517%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3017%" y="405" width="0.0798%" height="15" fill="rgb(221,45,43)" fg:x="931" fg:w="1"/><text x="74.5517%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.3017%" y="389" width="0.0798%" height="15" fill="rgb(220,42,1)" fg:x="931" fg:w="1"/><text x="74.5517%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.3017%" y="373" width="0.0798%" height="15" fill="rgb(236,19,24)" fg:x="931" fg:w="1"/><text x="74.5517%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.3017%" y="357" width="0.0798%" height="15" fill="rgb(225,192,6)" fg:x="931" fg:w="1"/><text x="74.5517%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.4613%" y="405" width="0.0798%" height="15" fill="rgb(242,30,19)" fg:x="933" fg:w="1"/><text x="74.7113%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 1.52%)</title><rect x="73.1045%" y="517" width="1.5164%" height="15" fill="rgb(240,36,6)" fg:x="916" fg:w="19"/><text x="73.3545%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.52%)</title><rect x="73.1045%" y="501" width="1.5164%" height="15" fill="rgb(246,40,28)" fg:x="916" fg:w="19"/><text x="73.3545%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (19 samples, 1.52%)</title><rect x="73.1045%" y="485" width="1.5164%" height="15" fill="rgb(225,155,33)" fg:x="916" fg:w="19"/><text x="73.3545%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.3815%" y="469" width="0.2394%" height="15" fill="rgb(240,65,18)" fg:x="932" fg:w="3"/><text x="74.6315%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.3815%" y="453" width="0.2394%" height="15" fill="rgb(217,0,48)" fg:x="932" fg:w="3"/><text x="74.6315%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.4613%" y="437" width="0.1596%" height="15" fill="rgb(217,80,15)" fg:x="933" fg:w="2"/><text x="74.7113%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="74.4613%" y="421" width="0.1596%" height="15" fill="rgb(253,43,51)" fg:x="933" fg:w="2"/><text x="74.7113%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.5411%" y="405" width="0.0798%" height="15" fill="rgb(246,60,4)" fg:x="934" fg:w="1"/><text x="74.7911%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.5411%" y="389" width="0.0798%" height="15" fill="rgb(230,40,54)" fg:x="934" fg:w="1"/><text x="74.7911%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.5411%" y="373" width="0.0798%" height="15" fill="rgb(208,20,44)" fg:x="934" fg:w="1"/><text x="74.7911%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.7007%" y="437" width="0.0798%" height="15" fill="rgb(230,22,22)" fg:x="936" fg:w="1"/><text x="74.9507%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (26 samples, 2.08%)</title><rect x="72.7853%" y="549" width="2.0750%" height="15" fill="rgb(207,57,4)" fg:x="912" fg:w="26"/><text x="73.0353%" y="559.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (26 samples, 2.08%)</title><rect x="72.7853%" y="533" width="2.0750%" height="15" fill="rgb(242,130,33)" fg:x="912" fg:w="26"/><text x="73.0353%" y="543.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.6209%" y="517" width="0.2394%" height="15" fill="rgb(218,66,43)" fg:x="935" fg:w="3"/><text x="74.8709%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.6209%" y="501" width="0.2394%" height="15" fill="rgb(236,105,16)" fg:x="935" fg:w="3"/><text x="74.8709%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.6209%" y="485" width="0.2394%" height="15" fill="rgb(230,46,15)" fg:x="935" fg:w="3"/><text x="74.8709%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="74.6209%" y="469" width="0.2394%" height="15" fill="rgb(251,172,40)" fg:x="935" fg:w="3"/><text x="74.8709%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.7007%" y="453" width="0.1596%" height="15" fill="rgb(225,217,32)" fg:x="936" fg:w="2"/><text x="74.9507%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.7805%" y="437" width="0.0798%" height="15" fill="rgb(243,10,29)" fg:x="937" fg:w="1"/><text x="75.0305%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="74.7805%" y="421" width="0.0798%" height="15" fill="rgb(207,102,10)" fg:x="937" fg:w="1"/><text x="75.0305%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.7805%" y="405" width="0.0798%" height="15" fill="rgb(241,125,5)" fg:x="937" fg:w="1"/><text x="75.0305%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.9401%" y="485" width="0.1596%" height="15" fill="rgb(230,125,29)" fg:x="939" fg:w="2"/><text x="75.1901%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.0200%" y="469" width="0.0798%" height="15" fill="rgb(223,65,44)" fg:x="940" fg:w="1"/><text x="75.2700%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0200%" y="453" width="0.0798%" height="15" fill="rgb(224,188,28)" fg:x="940" fg:w="1"/><text x="75.2700%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0200%" y="437" width="0.0798%" height="15" fill="rgb(254,197,27)" fg:x="940" fg:w="1"/><text x="75.2700%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.0200%" y="421" width="0.0798%" height="15" fill="rgb(220,200,25)" fg:x="940" fg:w="1"/><text x="75.2700%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.0200%" y="405" width="0.0798%" height="15" fill="rgb(239,225,54)" fg:x="940" fg:w="1"/><text x="75.2700%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.0200%" y="389" width="0.0798%" height="15" fill="rgb(211,59,40)" fg:x="940" fg:w="1"/><text x="75.2700%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0200%" y="373" width="0.0798%" height="15" fill="rgb(213,176,46)" fg:x="940" fg:w="1"/><text x="75.2700%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0200%" y="357" width="0.0798%" height="15" fill="rgb(226,99,4)" fg:x="940" fg:w="1"/><text x="75.2700%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.0200%" y="341" width="0.0798%" height="15" fill="rgb(239,203,43)" fg:x="940" fg:w="1"/><text x="75.2700%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.0200%" y="325" width="0.0798%" height="15" fill="rgb(246,1,45)" fg:x="940" fg:w="1"/><text x="75.2700%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.0200%" y="309" width="0.0798%" height="15" fill="rgb(231,42,52)" fg:x="940" fg:w="1"/><text x="75.2700%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.0200%" y="293" width="0.0798%" height="15" fill="rgb(240,13,50)" fg:x="940" fg:w="1"/><text x="75.2700%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0200%" y="277" width="0.0798%" height="15" fill="rgb(225,81,14)" fg:x="940" fg:w="1"/><text x="75.2700%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0998%" y="485" width="0.0798%" height="15" fill="rgb(216,182,23)" fg:x="941" fg:w="1"/><text x="75.3498%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.0998%" y="469" width="0.0798%" height="15" fill="rgb(233,137,19)" fg:x="941" fg:w="1"/><text x="75.3498%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0998%" y="453" width="0.0798%" height="15" fill="rgb(242,61,46)" fg:x="941" fg:w="1"/><text x="75.3498%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0998%" y="437" width="0.0798%" height="15" fill="rgb(221,168,51)" fg:x="941" fg:w="1"/><text x="75.3498%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.0998%" y="421" width="0.0798%" height="15" fill="rgb(238,48,15)" fg:x="941" fg:w="1"/><text x="75.3498%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.0998%" y="405" width="0.0798%" height="15" fill="rgb(216,13,16)" fg:x="941" fg:w="1"/><text x="75.3498%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.0998%" y="389" width="0.0798%" height="15" fill="rgb(223,185,34)" fg:x="941" fg:w="1"/><text x="75.3498%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0998%" y="373" width="0.0798%" height="15" fill="rgb(228,94,42)" fg:x="941" fg:w="1"/><text x="75.3498%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0998%" y="357" width="0.0798%" height="15" fill="rgb(218,166,43)" fg:x="941" fg:w="1"/><text x="75.3498%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.0998%" y="341" width="0.0798%" height="15" fill="rgb(232,30,50)" fg:x="941" fg:w="1"/><text x="75.3498%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.0998%" y="325" width="0.0798%" height="15" fill="rgb(245,206,45)" fg:x="941" fg:w="1"/><text x="75.3498%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.0998%" y="309" width="0.0798%" height="15" fill="rgb(220,56,22)" fg:x="941" fg:w="1"/><text x="75.3498%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.0998%" y="293" width="0.0798%" height="15" fill="rgb(239,129,38)" fg:x="941" fg:w="1"/><text x="75.3498%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0998%" y="277" width="0.0798%" height="15" fill="rgb(207,68,41)" fg:x="941" fg:w="1"/><text x="75.3498%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="74.9401%" y="533" width="0.3192%" height="15" fill="rgb(221,21,7)" fg:x="939" fg:w="4"/><text x="75.1901%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="74.9401%" y="517" width="0.3192%" height="15" fill="rgb(240,33,25)" fg:x="939" fg:w="4"/><text x="75.1901%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="74.9401%" y="501" width="0.3192%" height="15" fill="rgb(242,119,10)" fg:x="939" fg:w="4"/><text x="75.1901%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1796%" y="485" width="0.0798%" height="15" fill="rgb(214,149,40)" fg:x="942" fg:w="1"/><text x="75.4296%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="75.2594%" y="533" width="0.0798%" height="15" fill="rgb(228,25,36)" fg:x="943" fg:w="1"/><text x="75.5094%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.2594%" y="517" width="0.0798%" height="15" fill="rgb(222,59,15)" fg:x="943" fg:w="1"/><text x="75.5094%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2594%" y="501" width="0.0798%" height="15" fill="rgb(218,170,0)" fg:x="943" fg:w="1"/><text x="75.5094%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.2594%" y="485" width="0.0798%" height="15" fill="rgb(232,173,23)" fg:x="943" fg:w="1"/><text x="75.5094%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2594%" y="469" width="0.0798%" height="15" fill="rgb(218,116,1)" fg:x="943" fg:w="1"/><text x="75.5094%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.2594%" y="453" width="0.0798%" height="15" fill="rgb(207,34,4)" fg:x="943" fg:w="1"/><text x="75.5094%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2594%" y="437" width="0.0798%" height="15" fill="rgb(229,54,52)" fg:x="943" fg:w="1"/><text x="75.5094%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.3392%" y="453" width="0.1596%" height="15" fill="rgb(211,86,23)" fg:x="944" fg:w="2"/><text x="75.5892%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.4190%" y="437" width="0.0798%" height="15" fill="rgb(254,153,34)" fg:x="945" fg:w="1"/><text x="75.6690%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4988%" y="389" width="0.0798%" height="15" fill="rgb(219,220,14)" fg:x="946" fg:w="1"/><text x="75.7488%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="75.4988%" y="437" width="0.1596%" height="15" fill="rgb(247,8,26)" fg:x="946" fg:w="2"/><text x="75.7488%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="75.4988%" y="421" width="0.1596%" height="15" fill="rgb(213,129,42)" fg:x="946" fg:w="2"/><text x="75.7488%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="75.4988%" y="405" width="0.1596%" height="15" fill="rgb(225,95,41)" fg:x="946" fg:w="2"/><text x="75.7488%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.5786%" y="389" width="0.0798%" height="15" fill="rgb(215,134,24)" fg:x="947" fg:w="1"/><text x="75.8286%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.5786%" y="373" width="0.0798%" height="15" fill="rgb(235,23,54)" fg:x="947" fg:w="1"/><text x="75.8286%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.6584%" y="405" width="0.0798%" height="15" fill="rgb(229,96,31)" fg:x="948" fg:w="1"/><text x="75.9084%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8180%" y="357" width="0.0798%" height="15" fill="rgb(206,111,12)" fg:x="950" fg:w="1"/><text x="76.0680%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="75.7382%" y="389" width="0.2394%" height="15" fill="rgb(222,177,8)" fg:x="949" fg:w="3"/><text x="75.9882%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="75.7382%" y="373" width="0.2394%" height="15" fill="rgb(251,36,52)" fg:x="949" fg:w="3"/><text x="75.9882%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8978%" y="357" width="0.0798%" height="15" fill="rgb(216,182,29)" fg:x="951" fg:w="1"/><text x="76.1478%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.8978%" y="341" width="0.0798%" height="15" fill="rgb(241,145,50)" fg:x="951" fg:w="1"/><text x="76.1478%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.80%)</title><rect x="75.3392%" y="533" width="0.7981%" height="15" fill="rgb(231,71,35)" fg:x="944" fg:w="10"/><text x="75.5892%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="75.3392%" y="517" width="0.7981%" height="15" fill="rgb(218,22,17)" fg:x="944" fg:w="10"/><text x="75.5892%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="75.3392%" y="501" width="0.7981%" height="15" fill="rgb(225,227,6)" fg:x="944" fg:w="10"/><text x="75.5892%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.80%)</title><rect x="75.3392%" y="485" width="0.7981%" height="15" fill="rgb(224,204,17)" fg:x="944" fg:w="10"/><text x="75.5892%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="75.3392%" y="469" width="0.7981%" height="15" fill="rgb(227,61,28)" fg:x="944" fg:w="10"/><text x="75.5892%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="75.4988%" y="453" width="0.6385%" height="15" fill="rgb(242,148,23)" fg:x="946" fg:w="8"/><text x="75.7488%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="75.6584%" y="437" width="0.4789%" height="15" fill="rgb(237,105,33)" fg:x="948" fg:w="6"/><text x="75.9084%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="75.6584%" y="421" width="0.4789%" height="15" fill="rgb(238,218,40)" fg:x="948" fg:w="6"/><text x="75.9084%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="75.7382%" y="405" width="0.3990%" height="15" fill="rgb(209,126,11)" fg:x="949" fg:w="5"/><text x="75.9882%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.9777%" y="389" width="0.1596%" height="15" fill="rgb(245,90,11)" fg:x="952" fg:w="2"/><text x="76.2277%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.9777%" y="373" width="0.1596%" height="15" fill="rgb(211,195,10)" fg:x="952" fg:w="2"/><text x="76.2277%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="76.0575%" y="357" width="0.0798%" height="15" fill="rgb(231,45,45)" fg:x="953" fg:w="1"/><text x="76.3075%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0575%" y="341" width="0.0798%" height="15" fill="rgb(246,100,43)" fg:x="953" fg:w="1"/><text x="76.3075%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.0575%" y="325" width="0.0798%" height="15" fill="rgb(241,193,8)" fg:x="953" fg:w="1"/><text x="76.3075%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.3767%" y="357" width="0.0798%" height="15" fill="rgb(208,76,19)" fg:x="957" fg:w="1"/><text x="76.6267%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.3767%" y="341" width="0.0798%" height="15" fill="rgb(223,69,40)" fg:x="957" fg:w="1"/><text x="76.6267%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.3767%" y="389" width="0.1596%" height="15" fill="rgb(207,120,39)" fg:x="957" fg:w="2"/><text x="76.6267%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.3767%" y="373" width="0.1596%" height="15" fill="rgb(212,209,28)" fg:x="957" fg:w="2"/><text x="76.6267%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4565%" y="357" width="0.0798%" height="15" fill="rgb(246,82,29)" fg:x="958" fg:w="1"/><text x="76.7065%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4565%" y="341" width="0.0798%" height="15" fill="rgb(239,6,40)" fg:x="958" fg:w="1"/><text x="76.7065%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4565%" y="325" width="0.0798%" height="15" fill="rgb(228,181,35)" fg:x="958" fg:w="1"/><text x="76.7065%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.6959%" y="373" width="0.2394%" height="15" fill="rgb(238,151,2)" fg:x="961" fg:w="3"/><text x="76.9459%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.6959%" y="357" width="0.2394%" height="15" fill="rgb(236,94,18)" fg:x="961" fg:w="3"/><text x="76.9459%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="76.2969%" y="405" width="0.7183%" height="15" fill="rgb(208,38,14)" fg:x="956" fg:w="9"/><text x="76.5469%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="76.5363%" y="389" width="0.4789%" height="15" fill="rgb(234,215,27)" fg:x="959" fg:w="6"/><text x="76.7863%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.9354%" y="373" width="0.0798%" height="15" fill="rgb(254,211,53)" fg:x="964" fg:w="1"/><text x="77.1854%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.9354%" y="357" width="0.0798%" height="15" fill="rgb(216,175,11)" fg:x="964" fg:w="1"/><text x="77.1854%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="76.2171%" y="437" width="0.8779%" height="15" fill="rgb(246,179,26)" fg:x="955" fg:w="11"/><text x="76.4671%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="76.2171%" y="421" width="0.8779%" height="15" fill="rgb(249,19,52)" fg:x="955" fg:w="11"/><text x="76.4671%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.0152%" y="405" width="0.0798%" height="15" fill="rgb(230,42,52)" fg:x="965" fg:w="1"/><text x="77.2652%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="77.0152%" y="389" width="0.0798%" height="15" fill="rgb(221,171,0)" fg:x="965" fg:w="1"/><text x="77.2652%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="76.1373%" y="469" width="1.0375%" height="15" fill="rgb(222,177,40)" fg:x="954" fg:w="13"/><text x="76.3873%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="76.1373%" y="453" width="1.0375%" height="15" fill="rgb(247,34,16)" fg:x="954" fg:w="13"/><text x="76.3873%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.0950%" y="437" width="0.0798%" height="15" fill="rgb(213,217,37)" fg:x="966" fg:w="1"/><text x="77.3450%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.0950%" y="421" width="0.0798%" height="15" fill="rgb(231,189,24)" fg:x="966" fg:w="1"/><text x="77.3450%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (57 samples, 4.55%)</title><rect x="72.7055%" y="565" width="4.5491%" height="15" fill="rgb(214,22,9)" fg:x="911" fg:w="57"/><text x="72.9555%" y="575.50">engin..</text></g><g><title>engine::session::internal::Entities::add_persisted (30 samples, 2.39%)</title><rect x="74.8603%" y="549" width="2.3943%" height="15" fill="rgb(212,70,22)" fg:x="938" fg:w="30"/><text x="75.1103%" y="559.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.12%)</title><rect x="76.1373%" y="533" width="1.1173%" height="15" fill="rgb(249,64,51)" fg:x="954" fg:w="14"/><text x="76.3873%" y="543.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.12%)</title><rect x="76.1373%" y="517" width="1.1173%" height="15" fill="rgb(249,148,20)" fg:x="954" fg:w="14"/><text x="76.3873%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.12%)</title><rect x="76.1373%" y="501" width="1.1173%" height="15" fill="rgb(246,46,48)" fg:x="954" fg:w="14"/><text x="76.3873%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="76.1373%" y="485" width="1.1173%" height="15" fill="rgb(217,34,48)" fg:x="954" fg:w="14"/><text x="76.3873%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1748%" y="469" width="0.0798%" height="15" fill="rgb(222,45,26)" fg:x="967" fg:w="1"/><text x="77.4248%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="77.2546%" y="533" width="0.0798%" height="15" fill="rgb(230,201,36)" fg:x="968" fg:w="1"/><text x="77.5046%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.4940%" y="517" width="0.0798%" height="15" fill="rgb(217,30,43)" fg:x="971" fg:w="1"/><text x="77.7440%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="77.4940%" y="501" width="0.0798%" height="15" fill="rgb(230,197,40)" fg:x="971" fg:w="1"/><text x="77.7440%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.4940%" y="485" width="0.0798%" height="15" fill="rgb(239,181,18)" fg:x="971" fg:w="1"/><text x="77.7440%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5738%" y="501" width="0.0798%" height="15" fill="rgb(222,60,39)" fg:x="972" fg:w="1"/><text x="77.8238%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="77.5738%" y="517" width="0.1596%" height="15" fill="rgb(210,60,22)" fg:x="972" fg:w="2"/><text x="77.8238%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6536%" y="501" width="0.0798%" height="15" fill="rgb(239,213,48)" fg:x="973" fg:w="1"/><text x="77.9036%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="77.7334%" y="517" width="0.0798%" height="15" fill="rgb(253,214,23)" fg:x="974" fg:w="1"/><text x="77.9834%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7334%" y="501" width="0.0798%" height="15" fill="rgb(211,98,45)" fg:x="974" fg:w="1"/><text x="77.9834%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.7334%" y="485" width="0.0798%" height="15" fill="rgb(239,130,44)" fg:x="974" fg:w="1"/><text x="77.9834%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="77.8132%" y="469" width="0.1596%" height="15" fill="rgb(222,181,35)" fg:x="975" fg:w="2"/><text x="78.0632%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="77.9729%" y="421" width="0.0798%" height="15" fill="rgb(219,219,49)" fg:x="977" fg:w="1"/><text x="78.2229%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.9729%" y="405" width="0.0798%" height="15" fill="rgb(227,161,51)" fg:x="977" fg:w="1"/><text x="78.2229%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.0527%" y="389" width="0.0798%" height="15" fill="rgb(239,112,27)" fg:x="978" fg:w="1"/><text x="78.3027%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="78.0527%" y="421" width="0.1596%" height="15" fill="rgb(248,122,18)" fg:x="978" fg:w="2"/><text x="78.3027%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="78.0527%" y="405" width="0.1596%" height="15" fill="rgb(245,130,23)" fg:x="978" fg:w="2"/><text x="78.3027%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="78.1325%" y="389" width="0.0798%" height="15" fill="rgb(211,225,28)" fg:x="979" fg:w="1"/><text x="78.3825%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1325%" y="373" width="0.0798%" height="15" fill="rgb(242,105,44)" fg:x="979" fg:w="1"/><text x="78.3825%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="77.9729%" y="437" width="0.3990%" height="15" fill="rgb(216,183,46)" fg:x="977" fg:w="5"/><text x="78.2229%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.2123%" y="421" width="0.1596%" height="15" fill="rgb(227,112,9)" fg:x="980" fg:w="2"/><text x="78.4623%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="78.2123%" y="405" width="0.1596%" height="15" fill="rgb(244,21,0)" fg:x="980" fg:w="2"/><text x="78.4623%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="78.2123%" y="389" width="0.1596%" height="15" fill="rgb(236,185,14)" fg:x="980" fg:w="2"/><text x="78.4623%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.2123%" y="373" width="0.1596%" height="15" fill="rgb(236,170,30)" fg:x="980" fg:w="2"/><text x="78.4623%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="78.2123%" y="357" width="0.1596%" height="15" fill="rgb(209,198,51)" fg:x="980" fg:w="2"/><text x="78.4623%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="78.2123%" y="341" width="0.1596%" height="15" fill="rgb(205,171,26)" fg:x="980" fg:w="2"/><text x="78.4623%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.2123%" y="325" width="0.1596%" height="15" fill="rgb(246,41,49)" fg:x="980" fg:w="2"/><text x="78.4623%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="78.2123%" y="309" width="0.1596%" height="15" fill="rgb(240,229,12)" fg:x="980" fg:w="2"/><text x="78.4623%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.2921%" y="293" width="0.0798%" height="15" fill="rgb(212,8,54)" fg:x="981" fg:w="1"/><text x="78.5421%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.64%)</title><rect x="77.8132%" y="517" width="0.6385%" height="15" fill="rgb(230,114,13)" fg:x="975" fg:w="8"/><text x="78.0632%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="77.8132%" y="501" width="0.6385%" height="15" fill="rgb(229,130,28)" fg:x="975" fg:w="8"/><text x="78.0632%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="77.8132%" y="485" width="0.6385%" height="15" fill="rgb(206,139,15)" fg:x="975" fg:w="8"/><text x="78.0632%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="77.9729%" y="469" width="0.4789%" height="15" fill="rgb(241,188,35)" fg:x="977" fg:w="6"/><text x="78.2229%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="77.9729%" y="453" width="0.4789%" height="15" fill="rgb(208,224,26)" fg:x="977" fg:w="6"/><text x="78.2229%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="78.3719%" y="437" width="0.0798%" height="15" fill="rgb(251,131,28)" fg:x="982" fg:w="1"/><text x="78.6219%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="78.4517%" y="421" width="0.0798%" height="15" fill="rgb(208,153,1)" fg:x="983" fg:w="1"/><text x="78.7017%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.4517%" y="405" width="0.0798%" height="15" fill="rgb(234,33,36)" fg:x="983" fg:w="1"/><text x="78.7017%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="78.4517%" y="389" width="0.0798%" height="15" fill="rgb(246,42,29)" fg:x="983" fg:w="1"/><text x="78.7017%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.4517%" y="373" width="0.0798%" height="15" fill="rgb(251,114,16)" fg:x="983" fg:w="1"/><text x="78.7017%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="78.4517%" y="357" width="0.0798%" height="15" fill="rgb(233,13,38)" fg:x="983" fg:w="1"/><text x="78.7017%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.4517%" y="341" width="0.0798%" height="15" fill="rgb(247,120,19)" fg:x="983" fg:w="1"/><text x="78.7017%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="78.4517%" y="325" width="0.0798%" height="15" fill="rgb(205,11,16)" fg:x="983" fg:w="1"/><text x="78.7017%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="78.4517%" y="453" width="0.1596%" height="15" fill="rgb(228,185,19)" fg:x="983" fg:w="2"/><text x="78.7017%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="78.4517%" y="437" width="0.1596%" height="15" fill="rgb(239,88,52)" fg:x="983" fg:w="2"/><text x="78.7017%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.5315%" y="421" width="0.0798%" height="15" fill="rgb(219,23,1)" fg:x="984" fg:w="1"/><text x="78.7815%" y="431.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (205 samples, 16.36%)</title><rect x="62.3304%" y="597" width="16.3607%" height="15" fill="rgb(253,177,16)" fg:x="781" fg:w="205"/><text x="62.5804%" y="607.50">engine::session::Session:..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (205 samples, 16.36%)</title><rect x="62.3304%" y="581" width="16.3607%" height="15" fill="rgb(225,150,40)" fg:x="781" fg:w="205"/><text x="62.5804%" y="591.50">engine::session::Session:..</text></g><g><title>kernel::model::EntityPtrResolver::world (18 samples, 1.44%)</title><rect x="77.2546%" y="565" width="1.4366%" height="15" fill="rgb(208,108,30)" fg:x="968" fg:w="18"/><text x="77.5046%" y="575.50"></text></g><g><title>engine::session::Session::load_entity (18 samples, 1.44%)</title><rect x="77.2546%" y="549" width="1.4366%" height="15" fill="rgb(214,122,4)" fg:x="968" fg:w="18"/><text x="77.5046%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.36%)</title><rect x="77.3344%" y="533" width="1.3567%" height="15" fill="rgb(229,74,37)" fg:x="969" fg:w="17"/><text x="77.5844%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="78.4517%" y="517" width="0.2394%" height="15" fill="rgb(233,61,41)" fg:x="983" fg:w="3"/><text x="78.7017%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="78.4517%" y="501" width="0.2394%" height="15" fill="rgb(238,191,5)" fg:x="983" fg:w="3"/><text x="78.7017%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="78.4517%" y="485" width="0.2394%" height="15" fill="rgb(233,78,24)" fg:x="983" fg:w="3"/><text x="78.7017%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="78.4517%" y="469" width="0.2394%" height="15" fill="rgb(211,142,8)" fg:x="983" fg:w="3"/><text x="78.7017%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.6113%" y="453" width="0.0798%" height="15" fill="rgb(253,38,53)" fg:x="985" fg:w="1"/><text x="78.8613%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="78.6113%" y="437" width="0.0798%" height="15" fill="rgb(234,63,51)" fg:x="985" fg:w="1"/><text x="78.8613%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7709%" y="581" width="0.0798%" height="15" fill="rgb(205,23,31)" fg:x="987" fg:w="1"/><text x="79.0209%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="78.8508%" y="581" width="0.0798%" height="15" fill="rgb(210,184,50)" fg:x="988" fg:w="1"/><text x="79.1008%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="78.8508%" y="565" width="0.0798%" height="15" fill="rgb(222,112,26)" fg:x="988" fg:w="1"/><text x="79.1008%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (990 samples, 79.01%)</title><rect x="0.0000%" y="645" width="79.0104%" height="15" fill="rgb(250,98,18)" fg:x="0" fg:w="990"/><text x="0.2500%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (990 samples, 79.01%)</title><rect x="0.0000%" y="629" width="79.0104%" height="15" fill="rgb(250,34,12)" fg:x="0" fg:w="990"/><text x="0.2500%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (990 samples, 79.01%)</title><rect x="0.0000%" y="613" width="79.0104%" height="15" fill="rgb(236,141,30)" fg:x="0" fg:w="990"/><text x="0.2500%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (4 samples, 0.32%)</title><rect x="78.6911%" y="597" width="0.3192%" height="15" fill="rgb(246,134,38)" fg:x="986" fg:w="4"/><text x="78.9411%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="78.9306%" y="581" width="0.0798%" height="15" fill="rgb(240,114,4)" fg:x="989" fg:w="1"/><text x="79.1806%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.9306%" y="565" width="0.0798%" height="15" fill="rgb(243,113,39)" fg:x="989" fg:w="1"/><text x="79.1806%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.9306%" y="549" width="0.0798%" height="15" fill="rgb(239,215,4)" fg:x="989" fg:w="1"/><text x="79.1806%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.0104%" y="581" width="0.1596%" height="15" fill="rgb(236,229,45)" fg:x="990" fg:w="2"/><text x="79.2604%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="79.1700%" y="581" width="0.2394%" height="15" fill="rgb(242,2,6)" fg:x="992" fg:w="3"/><text x="79.4200%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="79.1700%" y="565" width="0.2394%" height="15" fill="rgb(239,108,21)" fg:x="992" fg:w="3"/><text x="79.4200%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="79.1700%" y="549" width="0.2394%" height="15" fill="rgb(215,168,34)" fg:x="992" fg:w="3"/><text x="79.4200%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.24%)</title><rect x="79.1700%" y="533" width="0.2394%" height="15" fill="rgb(238,31,17)" fg:x="992" fg:w="3"/><text x="79.4200%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="79.3296%" y="517" width="0.0798%" height="15" fill="rgb(220,133,11)" fg:x="994" fg:w="1"/><text x="79.5796%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3296%" y="501" width="0.0798%" height="15" fill="rgb(212,158,23)" fg:x="994" fg:w="1"/><text x="79.5796%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4892%" y="501" width="0.0798%" height="15" fill="rgb(223,172,7)" fg:x="996" fg:w="1"/><text x="79.7392%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.6488%" y="469" width="0.0798%" height="15" fill="rgb(244,3,52)" fg:x="998" fg:w="1"/><text x="79.8988%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="79.4892%" y="533" width="0.3990%" height="15" fill="rgb(207,69,27)" fg:x="996" fg:w="5"/><text x="79.7392%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="79.4892%" y="517" width="0.3990%" height="15" fill="rgb(213,136,45)" fg:x="996" fg:w="5"/><text x="79.7392%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.5690%" y="501" width="0.3192%" height="15" fill="rgb(218,79,17)" fg:x="997" fg:w="4"/><text x="79.8190%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.6488%" y="485" width="0.2394%" height="15" fill="rgb(216,106,36)" fg:x="998" fg:w="3"/><text x="79.8988%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.7287%" y="469" width="0.1596%" height="15" fill="rgb(251,27,45)" fg:x="999" fg:w="2"/><text x="79.9787%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.8085%" y="453" width="0.0798%" height="15" fill="rgb(232,21,34)" fg:x="1000" fg:w="1"/><text x="80.0585%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.9681%" y="485" width="0.1596%" height="15" fill="rgb(249,191,16)" fg:x="1002" fg:w="2"/><text x="80.2181%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.1277%" y="469" width="0.0798%" height="15" fill="rgb(224,88,20)" fg:x="1004" fg:w="1"/><text x="80.3777%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.1277%" y="453" width="0.0798%" height="15" fill="rgb(237,93,27)" fg:x="1004" fg:w="1"/><text x="80.3777%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1277%" y="437" width="0.0798%" height="15" fill="rgb(226,198,48)" fg:x="1004" fg:w="1"/><text x="80.3777%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.28%)</title><rect x="79.0104%" y="597" width="1.2769%" height="15" fill="rgb(207,162,53)" fg:x="990" fg:w="16"/><text x="79.2604%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (11 samples, 0.88%)</title><rect x="79.4094%" y="581" width="0.8779%" height="15" fill="rgb(207,169,9)" fg:x="995" fg:w="11"/><text x="79.6594%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="79.4094%" y="565" width="0.8779%" height="15" fill="rgb(224,166,46)" fg:x="995" fg:w="11"/><text x="79.6594%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (10 samples, 0.80%)</title><rect x="79.4892%" y="549" width="0.7981%" height="15" fill="rgb(233,26,6)" fg:x="996" fg:w="10"/><text x="79.7392%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="79.8883%" y="533" width="0.3990%" height="15" fill="rgb(218,106,45)" fg:x="1001" fg:w="5"/><text x="80.1383%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="79.8883%" y="517" width="0.3990%" height="15" fill="rgb(240,217,4)" fg:x="1001" fg:w="5"/><text x="80.1383%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="79.9681%" y="501" width="0.3192%" height="15" fill="rgb(246,171,10)" fg:x="1002" fg:w="4"/><text x="80.2181%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.1277%" y="485" width="0.1596%" height="15" fill="rgb(223,197,30)" fg:x="1004" fg:w="2"/><text x="80.3777%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.2075%" y="469" width="0.0798%" height="15" fill="rgb(207,92,16)" fg:x="1005" fg:w="1"/><text x="80.4575%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2075%" y="453" width="0.0798%" height="15" fill="rgb(211,6,44)" fg:x="1005" fg:w="1"/><text x="80.4575%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.2873%" y="549" width="0.0798%" height="15" fill="rgb(219,139,2)" fg:x="1006" fg:w="1"/><text x="80.5373%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="80.2873%" y="533" width="0.0798%" height="15" fill="rgb(224,103,21)" fg:x="1006" fg:w="1"/><text x="80.5373%" y="543.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.2873%" y="517" width="0.0798%" height="15" fill="rgb(254,110,48)" fg:x="1006" fg:w="1"/><text x="80.5373%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (1 samples, 0.08%)</title><rect x="80.3671%" y="517" width="0.0798%" height="15" fill="rgb(212,88,19)" fg:x="1007" fg:w="1"/><text x="80.6171%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="80.4469%" y="373" width="0.1596%" height="15" fill="rgb(248,103,6)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="80.4469%" y="357" width="0.1596%" height="15" fill="rgb(214,53,46)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="80.4469%" y="341" width="0.1596%" height="15" fill="rgb(236,190,24)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="80.4469%" y="325" width="0.1596%" height="15" fill="rgb(254,58,28)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="80.4469%" y="309" width="0.1596%" height="15" fill="rgb(243,63,27)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="80.4469%" y="293" width="0.1596%" height="15" fill="rgb(206,81,20)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5267%" y="277" width="0.0798%" height="15" fill="rgb(252,69,51)" fg:x="1009" fg:w="1"/><text x="80.7767%" y="287.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (3 samples, 0.24%)</title><rect x="80.4469%" y="501" width="0.2394%" height="15" fill="rgb(222,213,4)" fg:x="1008" fg:w="3"/><text x="80.6969%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="80.4469%" y="485" width="0.2394%" height="15" fill="rgb(226,198,12)" fg:x="1008" fg:w="3"/><text x="80.6969%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="80.4469%" y="469" width="0.2394%" height="15" fill="rgb(248,115,11)" fg:x="1008" fg:w="3"/><text x="80.6969%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="80.4469%" y="453" width="0.2394%" height="15" fill="rgb(221,148,54)" fg:x="1008" fg:w="3"/><text x="80.6969%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="80.4469%" y="437" width="0.2394%" height="15" fill="rgb(214,209,51)" fg:x="1008" fg:w="3"/><text x="80.6969%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="80.4469%" y="421" width="0.2394%" height="15" fill="rgb(249,116,53)" fg:x="1008" fg:w="3"/><text x="80.6969%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="80.4469%" y="405" width="0.2394%" height="15" fill="rgb(248,170,1)" fg:x="1008" fg:w="3"/><text x="80.6969%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="80.4469%" y="389" width="0.2394%" height="15" fill="rgb(244,105,10)" fg:x="1008" fg:w="3"/><text x="80.6969%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="80.6065%" y="373" width="0.0798%" height="15" fill="rgb(229,100,5)" fg:x="1010" fg:w="1"/><text x="80.8565%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="80.6065%" y="357" width="0.0798%" height="15" fill="rgb(233,221,39)" fg:x="1010" fg:w="1"/><text x="80.8565%" y="367.50"></text></g><g><title>glob::is_dir (2 samples, 0.16%)</title><rect x="80.6864%" y="453" width="0.1596%" height="15" fill="rgb(233,88,21)" fg:x="1011" fg:w="2"/><text x="80.9364%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (2 samples, 0.16%)</title><rect x="80.6864%" y="437" width="0.1596%" height="15" fill="rgb(206,13,0)" fg:x="1011" fg:w="2"/><text x="80.9364%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.16%)</title><rect x="80.6864%" y="421" width="0.1596%" height="15" fill="rgb(242,15,35)" fg:x="1011" fg:w="2"/><text x="80.9364%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="80.6864%" y="405" width="0.1596%" height="15" fill="rgb(247,142,41)" fg:x="1011" fg:w="2"/><text x="80.9364%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="80.6864%" y="389" width="0.1596%" height="15" fill="rgb(245,51,29)" fg:x="1011" fg:w="2"/><text x="80.9364%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="80.6864%" y="373" width="0.1596%" height="15" fill="rgb(228,209,43)" fg:x="1011" fg:w="2"/><text x="80.9364%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="80.6864%" y="357" width="0.1596%" height="15" fill="rgb(233,185,9)" fg:x="1011" fg:w="2"/><text x="80.9364%" y="367.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="80.6864%" y="341" width="0.1596%" height="15" fill="rgb(226,93,0)" fg:x="1011" fg:w="2"/><text x="80.9364%" y="351.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="80.6864%" y="485" width="0.2394%" height="15" fill="rgb(245,194,43)" fg:x="1011" fg:w="3"/><text x="80.9364%" y="495.50"></text></g><g><title>glob::fill_todo (3 samples, 0.24%)</title><rect x="80.6864%" y="469" width="0.2394%" height="15" fill="rgb(211,145,34)" fg:x="1011" fg:w="3"/><text x="80.9364%" y="479.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="80.8460%" y="453" width="0.0798%" height="15" fill="rgb(231,228,28)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="80.8460%" y="437" width="0.0798%" height="15" fill="rgb(236,149,4)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="80.8460%" y="421" width="0.0798%" height="15" fill="rgb(234,114,38)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="80.8460%" y="405" width="0.0798%" height="15" fill="rgb(246,132,51)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="80.8460%" y="389" width="0.0798%" height="15" fill="rgb(251,137,22)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="399.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="80.8460%" y="373" width="0.0798%" height="15" fill="rgb(243,59,52)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="383.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.08%)</title><rect x="80.8460%" y="357" width="0.0798%" height="15" fill="rgb(239,56,28)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="367.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.08%)</title><rect x="80.8460%" y="341" width="0.0798%" height="15" fill="rgb(218,168,27)" fg:x="1013" fg:w="1"/><text x="81.0960%" y="351.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.56%)</title><rect x="80.4469%" y="517" width="0.5587%" height="15" fill="rgb(232,165,11)" fg:x="1008" fg:w="7"/><text x="80.6969%" y="527.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (4 samples, 0.32%)</title><rect x="80.6864%" y="501" width="0.3192%" height="15" fill="rgb(253,55,41)" fg:x="1011" fg:w="4"/><text x="80.9364%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;glob::Paths&gt; (1 samples, 0.08%)</title><rect x="80.9258%" y="485" width="0.0798%" height="15" fill="rgb(233,206,24)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.9258%" y="469" width="0.0798%" height="15" fill="rgb(220,199,8)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9258%" y="453" width="0.0798%" height="15" fill="rgb(254,65,26)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (1 samples, 0.08%)</title><rect x="81.0056%" y="517" width="0.0798%" height="15" fill="rgb(253,102,23)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="81.0056%" y="501" width="0.0798%" height="15" fill="rgb(231,103,35)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::plugins::ArgumentType&gt; (1 samples, 0.08%)</title><rect x="81.0056%" y="485" width="0.0798%" height="15" fill="rgb(238,26,10)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.1652%" y="453" width="0.0798%" height="15" fill="rgb(234,191,34)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="81.2450%" y="453" width="0.0798%" height="15" fill="rgb(206,210,9)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="81.2450%" y="437" width="0.0798%" height="15" fill="rgb(219,155,3)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.2450%" y="421" width="0.0798%" height="15" fill="rgb(221,62,52)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2450%" y="405" width="0.0798%" height="15" fill="rgb(215,197,36)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="415.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="81.3248%" y="453" width="0.0798%" height="15" fill="rgb(226,222,6)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.4046%" y="437" width="0.0798%" height="15" fill="rgb(215,58,28)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="447.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.40%)</title><rect x="81.1652%" y="485" width="0.3990%" height="15" fill="rgb(212,148,2)" fg:x="1017" fg:w="5"/><text x="81.4152%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.40%)</title><rect x="81.1652%" y="469" width="0.3990%" height="15" fill="rgb(208,21,42)" fg:x="1017" fg:w="5"/><text x="81.4152%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="81.4046%" y="453" width="0.1596%" height="15" fill="rgb(209,107,26)" fg:x="1020" fg:w="2"/><text x="81.6546%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.4844%" y="437" width="0.0798%" height="15" fill="rgb(254,60,47)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.4844%" y="421" width="0.0798%" height="15" fill="rgb(207,226,45)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="81.5642%" y="485" width="0.1596%" height="15" fill="rgb(223,124,22)" fg:x="1022" fg:w="2"/><text x="81.8142%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="81.5642%" y="469" width="0.1596%" height="15" fill="rgb(240,162,13)" fg:x="1022" fg:w="2"/><text x="81.8142%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="81.6441%" y="453" width="0.0798%" height="15" fill="rgb(244,199,31)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.6441%" y="437" width="0.0798%" height="15" fill="rgb(207,92,16)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.6441%" y="421" width="0.0798%" height="15" fill="rgb(215,31,19)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.6441%" y="405" width="0.0798%" height="15" fill="rgb(245,118,14)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6441%" y="389" width="0.0798%" height="15" fill="rgb(248,12,46)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="399.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="81.7239%" y="453" width="0.0798%" height="15" fill="rgb(209,119,0)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7239%" y="437" width="0.0798%" height="15" fill="rgb(254,51,44)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="81.7239%" y="485" width="0.1596%" height="15" fill="rgb(253,182,35)" fg:x="1024" fg:w="2"/><text x="81.9739%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="81.7239%" y="469" width="0.1596%" height="15" fill="rgb(205,198,39)" fg:x="1024" fg:w="2"/><text x="81.9739%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="81.8037%" y="453" width="0.0798%" height="15" fill="rgb(251,175,48)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::schema (11 samples, 0.88%)</title><rect x="81.0854%" y="517" width="0.8779%" height="15" fill="rgb(239,38,17)" fg:x="1016" fg:w="11"/><text x="81.3354%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.88%)</title><rect x="81.0854%" y="501" width="0.8779%" height="15" fill="rgb(212,101,8)" fg:x="1016" fg:w="11"/><text x="81.3354%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8835%" y="485" width="0.0798%" height="15" fill="rgb(228,35,17)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.68%)</title><rect x="80.3671%" y="533" width="1.6760%" height="15" fill="rgb(214,95,8)" fg:x="1007" fg:w="21"/><text x="80.6171%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="81.9633%" y="517" width="0.0798%" height="15" fill="rgb(210,176,35)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="527.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="81.9633%" y="501" width="0.0798%" height="15" fill="rgb(226,4,3)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (24 samples, 1.92%)</title><rect x="80.2873%" y="597" width="1.9154%" height="15" fill="rgb(232,133,14)" fg:x="1006" fg:w="24"/><text x="80.5373%" y="607.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (24 samples, 1.92%)</title><rect x="80.2873%" y="581" width="1.9154%" height="15" fill="rgb(250,191,8)" fg:x="1006" fg:w="24"/><text x="80.5373%" y="591.50">e..</text></g><g><title>engine::session::Session::new (24 samples, 1.92%)</title><rect x="80.2873%" y="565" width="1.9154%" height="15" fill="rgb(213,12,45)" fg:x="1006" fg:w="24"/><text x="80.5373%" y="575.50">e..</text></g><g><title>engine::session::Session::initialize (23 samples, 1.84%)</title><rect x="80.3671%" y="549" width="1.8356%" height="15" fill="rgb(233,78,26)" fg:x="1007" fg:w="23"/><text x="80.6171%" y="559.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="82.0431%" y="533" width="0.1596%" height="15" fill="rgb(245,222,11)" fg:x="1028" fg:w="2"/><text x="82.2931%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="82.0431%" y="517" width="0.1596%" height="15" fill="rgb(216,174,12)" fg:x="1028" fg:w="2"/><text x="82.2931%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (2 samples, 0.16%)</title><rect x="82.0431%" y="501" width="0.1596%" height="15" fill="rgb(213,15,9)" fg:x="1028" fg:w="2"/><text x="82.2931%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1229%" y="485" width="0.0798%" height="15" fill="rgb(238,103,32)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="82.2027%" y="565" width="0.0798%" height="15" fill="rgb(245,85,15)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.2027%" y="549" width="0.0798%" height="15" fill="rgb(254,204,5)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.2027%" y="533" width="0.0798%" height="15" fill="rgb(231,178,15)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.2027%" y="517" width="0.0798%" height="15" fill="rgb(248,151,3)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.2027%" y="501" width="0.0798%" height="15" fill="rgb(250,139,13)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.2027%" y="485" width="0.0798%" height="15" fill="rgb(243,107,53)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.2027%" y="469" width="0.0798%" height="15" fill="rgb(232,81,15)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.2027%" y="453" width="0.0798%" height="15" fill="rgb(225,187,48)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.2027%" y="437" width="0.0798%" height="15" fill="rgb(205,116,12)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.2027%" y="421" width="0.0798%" height="15" fill="rgb(220,222,31)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.2027%" y="405" width="0.0798%" height="15" fill="rgb(233,187,49)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.2027%" y="389" width="0.0798%" height="15" fill="rgb(211,168,53)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2027%" y="373" width="0.0798%" height="15" fill="rgb(206,160,16)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.2825%" y="469" width="0.0798%" height="15" fill="rgb(254,164,13)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.2825%" y="453" width="0.0798%" height="15" fill="rgb(229,45,30)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.3623%" y="453" width="0.0798%" height="15" fill="rgb(237,32,10)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3623%" y="437" width="0.0798%" height="15" fill="rgb(251,20,47)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.4421%" y="437" width="0.0798%" height="15" fill="rgb(251,116,12)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.4421%" y="421" width="0.0798%" height="15" fill="rgb(214,227,27)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.4421%" y="405" width="0.0798%" height="15" fill="rgb(248,10,53)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.4421%" y="389" width="0.0798%" height="15" fill="rgb(221,176,25)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6018%" y="405" width="0.0798%" height="15" fill="rgb(205,70,46)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.6018%" y="389" width="0.0798%" height="15" fill="rgb(217,45,38)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.6018%" y="373" width="0.0798%" height="15" fill="rgb(243,6,54)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.6018%" y="357" width="0.0798%" height="15" fill="rgb(242,76,23)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.6018%" y="341" width="0.0798%" height="15" fill="rgb(239,166,0)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="82.5219%" y="421" width="0.2394%" height="15" fill="rgb(238,174,32)" fg:x="1034" fg:w="3"/><text x="82.7719%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.6816%" y="405" width="0.0798%" height="15" fill="rgb(238,124,44)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.6816%" y="389" width="0.0798%" height="15" fill="rgb(206,185,9)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.6816%" y="373" width="0.0798%" height="15" fill="rgb(215,157,17)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.5219%" y="437" width="0.3192%" height="15" fill="rgb(251,17,29)" fg:x="1034" fg:w="4"/><text x="82.7719%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.7614%" y="421" width="0.0798%" height="15" fill="rgb(227,113,27)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="82.8412%" y="405" width="0.1596%" height="15" fill="rgb(217,226,24)" fg:x="1038" fg:w="2"/><text x="83.0912%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="82.4421%" y="453" width="0.6385%" height="15" fill="rgb(251,99,38)" fg:x="1033" fg:w="8"/><text x="82.6921%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="82.8412%" y="437" width="0.2394%" height="15" fill="rgb(231,147,19)" fg:x="1038" fg:w="3"/><text x="83.0912%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="82.8412%" y="421" width="0.2394%" height="15" fill="rgb(230,86,8)" fg:x="1038" fg:w="3"/><text x="83.0912%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.0008%" y="405" width="0.0798%" height="15" fill="rgb(237,159,39)" fg:x="1040" fg:w="1"/><text x="83.2508%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="82.3623%" y="469" width="0.7981%" height="15" fill="rgb(247,179,47)" fg:x="1032" fg:w="10"/><text x="82.6123%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.0806%" y="453" width="0.0798%" height="15" fill="rgb(253,152,26)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.0806%" y="437" width="0.0798%" height="15" fill="rgb(222,211,15)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.0806%" y="421" width="0.0798%" height="15" fill="rgb(236,193,6)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.0806%" y="405" width="0.0798%" height="15" fill="rgb(226,206,10)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.0806%" y="389" width="0.0798%" height="15" fill="rgb(213,125,22)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.0806%" y="373" width="0.0798%" height="15" fill="rgb(221,66,28)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="82.2825%" y="485" width="0.9577%" height="15" fill="rgb(222,84,53)" fg:x="1031" fg:w="12"/><text x="82.5325%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.1604%" y="469" width="0.0798%" height="15" fill="rgb(243,50,15)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.1604%" y="453" width="0.0798%" height="15" fill="rgb(208,184,23)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.1604%" y="437" width="0.0798%" height="15" fill="rgb(221,83,2)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.1604%" y="421" width="0.0798%" height="15" fill="rgb(236,53,24)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.1604%" y="405" width="0.0798%" height="15" fill="rgb(244,171,29)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1604%" y="389" width="0.0798%" height="15" fill="rgb(205,19,11)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.2402%" y="485" width="0.0798%" height="15" fill="rgb(207,108,29)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.2402%" y="469" width="0.0798%" height="15" fill="rgb(236,215,43)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.2402%" y="453" width="0.0798%" height="15" fill="rgb(213,58,35)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="83.3200%" y="437" width="0.0798%" height="15" fill="rgb(220,211,46)" fg:x="1044" fg:w="1"/><text x="83.5700%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.3200%" y="421" width="0.0798%" height="15" fill="rgb(212,134,16)" fg:x="1044" fg:w="1"/><text x="83.5700%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3200%" y="405" width="0.0798%" height="15" fill="rgb(232,90,44)" fg:x="1044" fg:w="1"/><text x="83.5700%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="83.3200%" y="469" width="0.1596%" height="15" fill="rgb(212,18,36)" fg:x="1044" fg:w="2"/><text x="83.5700%" y="479.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="83.3200%" y="453" width="0.1596%" height="15" fill="rgb(206,112,24)" fg:x="1044" fg:w="2"/><text x="83.5700%" y="463.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="83.3998%" y="437" width="0.0798%" height="15" fill="rgb(238,223,40)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="83.5595%" y="437" width="0.2394%" height="15" fill="rgb(226,169,20)" fg:x="1047" fg:w="3"/><text x="83.8095%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.6393%" y="421" width="0.1596%" height="15" fill="rgb(241,64,52)" fg:x="1048" fg:w="2"/><text x="83.8893%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.7191%" y="405" width="0.0798%" height="15" fill="rgb(228,120,25)" fg:x="1049" fg:w="1"/><text x="83.9691%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="83.7989%" y="421" width="0.0798%" height="15" fill="rgb(234,108,19)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="83.7989%" y="437" width="0.1596%" height="15" fill="rgb(236,133,29)" fg:x="1050" fg:w="2"/><text x="84.0489%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.8787%" y="421" width="0.0798%" height="15" fill="rgb(246,174,53)" fg:x="1051" fg:w="1"/><text x="84.1287%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9585%" y="437" width="0.0798%" height="15" fill="rgb(210,105,35)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.9585%" y="421" width="0.0798%" height="15" fill="rgb(225,27,26)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9585%" y="405" width="0.0798%" height="15" fill="rgb(233,2,39)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="84.1181%" y="405" width="0.0798%" height="15" fill="rgb(219,164,26)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1979%" y="389" width="0.0798%" height="15" fill="rgb(236,211,5)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1979%" y="373" width="0.0798%" height="15" fill="rgb(244,227,23)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1979%" y="357" width="0.0798%" height="15" fill="rgb(230,184,8)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.2777%" y="389" width="0.0798%" height="15" fill="rgb(217,125,48)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2777%" y="373" width="0.0798%" height="15" fill="rgb(223,192,47)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.2777%" y="357" width="0.0798%" height="15" fill="rgb(226,119,10)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="84.3575%" y="373" width="0.0798%" height="15" fill="rgb(221,49,29)" fg:x="1057" fg:w="1"/><text x="84.6075%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="84.0383%" y="421" width="0.4789%" height="15" fill="rgb(217,205,19)" fg:x="1053" fg:w="6"/><text x="84.2883%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="84.1979%" y="405" width="0.3192%" height="15" fill="rgb(242,104,7)" fg:x="1055" fg:w="4"/><text x="84.4479%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.3575%" y="389" width="0.1596%" height="15" fill="rgb(209,154,48)" fg:x="1057" fg:w="2"/><text x="84.6075%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.4374%" y="373" width="0.0798%" height="15" fill="rgb(219,213,46)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="383.50"></text></g><g><title>engine::session::Session::flush (30 samples, 2.39%)</title><rect x="82.2027%" y="581" width="2.3943%" height="15" fill="rgb(229,105,38)" fg:x="1030" fg:w="30"/><text x="82.4527%" y="591.50">en..</text></g><g><title>engine::session::state::State::close (29 samples, 2.31%)</title><rect x="82.2825%" y="565" width="2.3144%" height="15" fill="rgb(205,151,5)" fg:x="1031" fg:w="29"/><text x="82.5325%" y="575.50">e..</text></g><g><title>engine::session::state::State::flush_entities (29 samples, 2.31%)</title><rect x="82.2825%" y="549" width="2.3144%" height="15" fill="rgb(248,115,40)" fg:x="1031" fg:w="29"/><text x="82.5325%" y="559.50">e..</text></g><g><title>core::iter::adapters::try_process (29 samples, 2.31%)</title><rect x="82.2825%" y="533" width="2.3144%" height="15" fill="rgb(206,179,2)" fg:x="1031" fg:w="29"/><text x="82.5325%" y="543.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 2.31%)</title><rect x="82.2825%" y="517" width="2.3144%" height="15" fill="rgb(230,103,24)" fg:x="1031" fg:w="29"/><text x="82.5325%" y="527.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (29 samples, 2.31%)</title><rect x="82.2825%" y="501" width="2.3144%" height="15" fill="rgb(218,152,4)" fg:x="1031" fg:w="29"/><text x="82.5325%" y="511.50">e..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.28%)</title><rect x="83.3200%" y="485" width="1.2769%" height="15" fill="rgb(236,161,54)" fg:x="1044" fg:w="16"/><text x="83.5700%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.12%)</title><rect x="83.4796%" y="469" width="1.1173%" height="15" fill="rgb(226,65,17)" fg:x="1046" fg:w="14"/><text x="83.7296%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.12%)</title><rect x="83.4796%" y="453" width="1.1173%" height="15" fill="rgb(221,134,44)" fg:x="1046" fg:w="14"/><text x="83.7296%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="84.0383%" y="437" width="0.5587%" height="15" fill="rgb(251,129,4)" fg:x="1053" fg:w="7"/><text x="84.2883%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5172%" y="421" width="0.0798%" height="15" fill="rgb(244,32,34)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.6768%" y="533" width="0.1596%" height="15" fill="rgb(251,224,37)" fg:x="1061" fg:w="2"/><text x="84.9268%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.6768%" y="517" width="0.1596%" height="15" fill="rgb(248,117,31)" fg:x="1061" fg:w="2"/><text x="84.9268%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.6768%" y="501" width="0.1596%" height="15" fill="rgb(222,208,37)" fg:x="1061" fg:w="2"/><text x="84.9268%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="84.6768%" y="565" width="0.2394%" height="15" fill="rgb(234,211,25)" fg:x="1061" fg:w="3"/><text x="84.9268%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="84.6768%" y="549" width="0.2394%" height="15" fill="rgb(211,72,6)" fg:x="1061" fg:w="3"/><text x="84.9268%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8364%" y="533" width="0.0798%" height="15" fill="rgb(249,198,38)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8364%" y="517" width="0.0798%" height="15" fill="rgb(221,86,51)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.8364%" y="501" width="0.0798%" height="15" fill="rgb(226,178,43)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8364%" y="485" width="0.0798%" height="15" fill="rgb(215,145,7)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.8364%" y="469" width="0.0798%" height="15" fill="rgb(250,202,36)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.8364%" y="453" width="0.0798%" height="15" fill="rgb(215,86,13)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9162%" y="533" width="0.0798%" height="15" fill="rgb(221,134,12)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="84.9162%" y="549" width="0.1596%" height="15" fill="rgb(213,82,10)" fg:x="1064" fg:w="2"/><text x="85.1662%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9960%" y="533" width="0.0798%" height="15" fill="rgb(214,142,0)" fg:x="1065" fg:w="1"/><text x="85.2460%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9960%" y="517" width="0.0798%" height="15" fill="rgb(205,145,9)" fg:x="1065" fg:w="1"/><text x="85.2460%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9960%" y="501" width="0.0798%" height="15" fill="rgb(244,214,8)" fg:x="1065" fg:w="1"/><text x="85.2460%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="85.0758%" y="549" width="0.0798%" height="15" fill="rgb(224,72,51)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="559.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="85.0758%" y="533" width="0.0798%" height="15" fill="rgb(233,137,37)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0758%" y="517" width="0.0798%" height="15" fill="rgb(208,71,28)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0758%" y="501" width="0.0798%" height="15" fill="rgb(226,31,7)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0758%" y="485" width="0.0798%" height="15" fill="rgb(229,62,18)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0758%" y="469" width="0.0798%" height="15" fill="rgb(226,74,28)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.0758%" y="453" width="0.0798%" height="15" fill="rgb(214,170,18)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.0758%" y="437" width="0.0798%" height="15" fill="rgb(227,229,35)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.0758%" y="421" width="0.0798%" height="15" fill="rgb(225,181,39)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0758%" y="405" width="0.0798%" height="15" fill="rgb(253,124,44)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0758%" y="389" width="0.0798%" height="15" fill="rgb(220,75,18)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.0758%" y="373" width="0.0798%" height="15" fill="rgb(239,175,43)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.0758%" y="357" width="0.0798%" height="15" fill="rgb(228,112,50)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.0758%" y="341" width="0.0798%" height="15" fill="rgb(232,105,36)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.0758%" y="325" width="0.0798%" height="15" fill="rgb(227,137,47)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0758%" y="309" width="0.0798%" height="15" fill="rgb(217,51,9)" fg:x="1066" fg:w="1"/><text x="85.3258%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="85.1556%" y="533" width="0.1596%" height="15" fill="rgb(245,117,0)" fg:x="1067" fg:w="2"/><text x="85.4056%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="85.1556%" y="517" width="0.1596%" height="15" fill="rgb(252,52,30)" fg:x="1067" fg:w="2"/><text x="85.4056%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.1556%" y="501" width="0.1596%" height="15" fill="rgb(227,85,33)" fg:x="1067" fg:w="2"/><text x="85.4056%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.1556%" y="485" width="0.1596%" height="15" fill="rgb(220,157,20)" fg:x="1067" fg:w="2"/><text x="85.4056%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2354%" y="469" width="0.0798%" height="15" fill="rgb(254,14,34)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2354%" y="453" width="0.0798%" height="15" fill="rgb(216,103,41)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2354%" y="437" width="0.0798%" height="15" fill="rgb(245,221,9)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.2354%" y="421" width="0.0798%" height="15" fill="rgb(254,136,47)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.2354%" y="405" width="0.0798%" height="15" fill="rgb(235,71,46)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.2354%" y="389" width="0.0798%" height="15" fill="rgb(242,154,29)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2354%" y="373" width="0.0798%" height="15" fill="rgb(210,65,31)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2354%" y="357" width="0.0798%" height="15" fill="rgb(244,9,50)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.2354%" y="341" width="0.0798%" height="15" fill="rgb(215,141,38)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.2354%" y="325" width="0.0798%" height="15" fill="rgb(241,129,6)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.2354%" y="309" width="0.0798%" height="15" fill="rgb(253,169,4)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.2354%" y="293" width="0.0798%" height="15" fill="rgb(237,82,36)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2354%" y="277" width="0.0798%" height="15" fill="rgb(209,171,11)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3951%" y="453" width="0.0798%" height="15" fill="rgb(242,19,22)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3951%" y="437" width="0.0798%" height="15" fill="rgb(251,122,24)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="85.3951%" y="501" width="0.1596%" height="15" fill="rgb(226,166,42)" fg:x="1070" fg:w="2"/><text x="85.6451%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="85.3951%" y="485" width="0.1596%" height="15" fill="rgb(244,101,48)" fg:x="1070" fg:w="2"/><text x="85.6451%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="85.3951%" y="469" width="0.1596%" height="15" fill="rgb(227,125,1)" fg:x="1070" fg:w="2"/><text x="85.6451%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.4749%" y="453" width="0.0798%" height="15" fill="rgb(206,79,43)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.4749%" y="437" width="0.0798%" height="15" fill="rgb(241,109,41)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="84.9162%" y="565" width="0.7183%" height="15" fill="rgb(219,73,4)" fg:x="1064" fg:w="9"/><text x="85.1662%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="85.1556%" y="549" width="0.4789%" height="15" fill="rgb(239,25,41)" fg:x="1067" fg:w="6"/><text x="85.4056%" y="559.50"></text></g><g><title>serde_json::value::to_value (4 samples, 0.32%)</title><rect x="85.3152%" y="533" width="0.3192%" height="15" fill="rgb(208,88,46)" fg:x="1069" fg:w="4"/><text x="85.5652%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="85.3152%" y="517" width="0.3192%" height="15" fill="rgb(239,184,9)" fg:x="1069" fg:w="4"/><text x="85.5652%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="85.5547%" y="501" width="0.0798%" height="15" fill="rgb(223,114,13)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (14 samples, 1.12%)</title><rect x="84.5970%" y="581" width="1.1173%" height="15" fill="rgb(214,28,42)" fg:x="1060" fg:w="14"/><text x="84.8470%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6345%" y="565" width="0.0798%" height="15" fill="rgb(252,32,44)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6345%" y="549" width="0.0798%" height="15" fill="rgb(231,159,4)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6345%" y="533" width="0.0798%" height="15" fill="rgb(210,35,26)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="543.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (2 samples, 0.16%)</title><rect x="85.7143%" y="581" width="0.1596%" height="15" fill="rgb(208,190,37)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="591.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.08%)</title><rect x="85.7941%" y="565" width="0.0798%" height="15" fill="rgb(226,148,22)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="575.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.7941%" y="549" width="0.0798%" height="15" fill="rgb(242,153,24)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7941%" y="533" width="0.0798%" height="15" fill="rgb(213,133,7)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.7941%" y="517" width="0.0798%" height="15" fill="rgb(248,206,18)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.8739%" y="517" width="0.0798%" height="15" fill="rgb(233,157,4)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.8739%" y="501" width="0.0798%" height="15" fill="rgb(249,179,32)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8739%" y="485" width="0.0798%" height="15" fill="rgb(248,69,35)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8739%" y="469" width="0.0798%" height="15" fill="rgb(249,158,38)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8739%" y="453" width="0.0798%" height="15" fill="rgb(223,18,43)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="85.8739%" y="549" width="0.1596%" height="15" fill="rgb(238,42,45)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="85.8739%" y="533" width="0.1596%" height="15" fill="rgb(219,65,47)" fg:x="1076" fg:w="2"/><text x="86.1239%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.9537%" y="517" width="0.0798%" height="15" fill="rgb(248,153,12)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.9537%" y="501" width="0.0798%" height="15" fill="rgb(240,118,4)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9537%" y="485" width="0.0798%" height="15" fill="rgb(250,96,34)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9537%" y="469" width="0.0798%" height="15" fill="rgb(221,15,4)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9537%" y="453" width="0.0798%" height="15" fill="rgb(217,149,33)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9537%" y="437" width="0.0798%" height="15" fill="rgb(213,58,29)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9537%" y="421" width="0.0798%" height="15" fill="rgb(236,218,9)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.9537%" y="405" width="0.0798%" height="15" fill="rgb(248,40,19)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.9537%" y="389" width="0.0798%" height="15" fill="rgb(212,17,6)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.9537%" y="373" width="0.0798%" height="15" fill="rgb(206,212,20)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.9537%" y="357" width="0.0798%" height="15" fill="rgb(229,80,37)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.9537%" y="341" width="0.0798%" height="15" fill="rgb(253,8,37)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.9537%" y="325" width="0.0798%" height="15" fill="rgb(215,16,43)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.9537%" y="309" width="0.0798%" height="15" fill="rgb(236,219,16)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.9537%" y="293" width="0.0798%" height="15" fill="rgb(251,0,3)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.9537%" y="277" width="0.0798%" height="15" fill="rgb(207,133,37)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9537%" y="261" width="0.0798%" height="15" fill="rgb(250,143,20)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="271.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="86.0335%" y="549" width="0.1596%" height="15" fill="rgb(242,19,50)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="86.0335%" y="533" width="0.1596%" height="15" fill="rgb(206,124,43)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.0335%" y="517" width="0.1596%" height="15" fill="rgb(229,4,38)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.0335%" y="501" width="0.1596%" height="15" fill="rgb(247,220,45)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1133%" y="485" width="0.0798%" height="15" fill="rgb(247,195,0)" fg:x="1079" fg:w="1"/><text x="86.3633%" y="495.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (5 samples, 0.40%)</title><rect x="85.8739%" y="581" width="0.3990%" height="15" fill="rgb(252,12,19)" fg:x="1076" fg:w="5"/><text x="86.1239%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="85.8739%" y="565" width="0.3990%" height="15" fill="rgb(222,49,50)" fg:x="1076" fg:w="5"/><text x="86.1239%" y="575.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="86.1931%" y="549" width="0.0798%" height="15" fill="rgb(209,157,28)" fg:x="1080" fg:w="1"/><text x="86.4431%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="86.1931%" y="533" width="0.0798%" height="15" fill="rgb(238,174,24)" fg:x="1080" fg:w="1"/><text x="86.4431%" y="543.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1931%" y="517" width="0.0798%" height="15" fill="rgb(224,17,28)" fg:x="1080" fg:w="1"/><text x="86.4431%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1931%" y="501" width="0.0798%" height="15" fill="rgb(249,7,29)" fg:x="1080" fg:w="1"/><text x="86.4431%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1931%" y="485" width="0.0798%" height="15" fill="rgb(243,178,4)" fg:x="1080" fg:w="1"/><text x="86.4431%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1931%" y="469" width="0.0798%" height="15" fill="rgb(246,138,35)" fg:x="1080" fg:w="1"/><text x="86.4431%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1931%" y="453" width="0.0798%" height="15" fill="rgb(251,85,18)" fg:x="1080" fg:w="1"/><text x="86.4431%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.2729%" y="485" width="0.0798%" height="15" fill="rgb(254,55,9)" fg:x="1081" fg:w="1"/><text x="86.5229%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::base::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="86.2729%" y="469" width="0.0798%" height="15" fill="rgb(248,4,50)" fg:x="1081" fg:w="1"/><text x="86.5229%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="86.2729%" y="533" width="0.1596%" height="15" fill="rgb(215,208,14)" fg:x="1081" fg:w="2"/><text x="86.5229%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="86.2729%" y="517" width="0.1596%" height="15" fill="rgb(218,37,18)" fg:x="1081" fg:w="2"/><text x="86.5229%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="86.2729%" y="501" width="0.1596%" height="15" fill="rgb(206,104,13)" fg:x="1081" fg:w="2"/><text x="86.5229%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.3528%" y="485" width="0.0798%" height="15" fill="rgb(248,94,22)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="86.3528%" y="469" width="0.0798%" height="15" fill="rgb(235,42,46)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3528%" y="453" width="0.0798%" height="15" fill="rgb(220,228,48)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3528%" y="437" width="0.0798%" height="15" fill="rgb(216,58,12)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3528%" y="421" width="0.0798%" height="15" fill="rgb(223,97,52)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="86.2729%" y="565" width="0.2394%" height="15" fill="rgb(208,159,17)" fg:x="1081" fg:w="3"/><text x="86.5229%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="86.2729%" y="549" width="0.2394%" height="15" fill="rgb(215,172,9)" fg:x="1081" fg:w="3"/><text x="86.5229%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4326%" y="533" width="0.0798%" height="15" fill="rgb(252,175,30)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5124%" y="533" width="0.0798%" height="15" fill="rgb(209,159,10)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="86.5124%" y="549" width="0.1596%" height="15" fill="rgb(229,73,51)" fg:x="1084" fg:w="2"/><text x="86.7624%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.5922%" y="533" width="0.0798%" height="15" fill="rgb(208,212,43)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="86.5922%" y="517" width="0.0798%" height="15" fill="rgb(254,123,53)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.5922%" y="501" width="0.0798%" height="15" fill="rgb(254,128,49)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.6720%" y="501" width="0.0798%" height="15" fill="rgb(246,16,16)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.6720%" y="485" width="0.0798%" height="15" fill="rgb(209,200,1)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.6720%" y="469" width="0.0798%" height="15" fill="rgb(235,9,3)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.6720%" y="453" width="0.0798%" height="15" fill="rgb(233,121,54)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.7518%" y="501" width="0.0798%" height="15" fill="rgb(236,80,25)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="86.7518%" y="485" width="0.0798%" height="15" fill="rgb(220,44,24)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="86.7518%" y="469" width="0.0798%" height="15" fill="rgb(236,225,16)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.8316%" y="469" width="0.0798%" height="15" fill="rgb(237,140,0)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.8316%" y="453" width="0.0798%" height="15" fill="rgb(243,225,53)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.8316%" y="437" width="0.0798%" height="15" fill="rgb(240,140,30)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="86.9114%" y="453" width="0.0798%" height="15" fill="rgb(217,51,16)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.9114%" y="437" width="0.0798%" height="15" fill="rgb(245,75,50)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="86.9912%" y="437" width="0.0798%" height="15" fill="rgb(208,174,22)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.9912%" y="421" width="0.0798%" height="15" fill="rgb(219,98,50)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.9912%" y="405" width="0.0798%" height="15" fill="rgb(243,138,3)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.9912%" y="389" width="0.0798%" height="15" fill="rgb(243,132,26)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.9912%" y="373" width="0.0798%" height="15" fill="rgb(250,201,8)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.0710%" y="405" width="0.0798%" height="15" fill="rgb(213,91,26)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.1508%" y="405" width="0.1596%" height="15" fill="rgb(229,117,1)" fg:x="1092" fg:w="2"/><text x="87.4008%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.1508%" y="389" width="0.1596%" height="15" fill="rgb(229,24,6)" fg:x="1092" fg:w="2"/><text x="87.4008%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.1508%" y="373" width="0.1596%" height="15" fill="rgb(206,69,11)" fg:x="1092" fg:w="2"/><text x="87.4008%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.2306%" y="357" width="0.0798%" height="15" fill="rgb(234,111,34)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.3105%" y="373" width="0.1596%" height="15" fill="rgb(213,187,51)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.3105%" y="357" width="0.1596%" height="15" fill="rgb(207,45,11)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.3105%" y="341" width="0.1596%" height="15" fill="rgb(225,151,47)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.3105%" y="325" width="0.1596%" height="15" fill="rgb(211,226,5)" fg:x="1094" fg:w="2"/><text x="87.5605%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.3903%" y="309" width="0.0798%" height="15" fill="rgb(214,83,52)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.3903%" y="293" width="0.0798%" height="15" fill="rgb(229,49,53)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.3903%" y="277" width="0.0798%" height="15" fill="rgb(246,8,28)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="87.3105%" y="389" width="0.3192%" height="15" fill="rgb(207,28,41)" fg:x="1094" fg:w="4"/><text x="87.5605%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.4701%" y="373" width="0.1596%" height="15" fill="rgb(254,22,25)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.5499%" y="357" width="0.0798%" height="15" fill="rgb(209,120,42)" fg:x="1097" fg:w="1"/><text x="87.7999%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="87.5499%" y="341" width="0.0798%" height="15" fill="rgb(216,194,18)" fg:x="1097" fg:w="1"/><text x="87.7999%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="87.0710%" y="421" width="0.6385%" height="15" fill="rgb(213,70,17)" fg:x="1091" fg:w="8"/><text x="87.3210%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="87.3105%" y="405" width="0.3990%" height="15" fill="rgb(228,66,19)" fg:x="1094" fg:w="5"/><text x="87.5605%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.6297%" y="389" width="0.0798%" height="15" fill="rgb(236,221,54)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="86.9912%" y="453" width="0.7981%" height="15" fill="rgb(207,175,15)" fg:x="1090" fg:w="10"/><text x="87.2412%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="87.0710%" y="437" width="0.7183%" height="15" fill="rgb(234,76,8)" fg:x="1091" fg:w="9"/><text x="87.3210%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.7095%" y="421" width="0.0798%" height="15" fill="rgb(243,106,0)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.7095%" y="405" width="0.0798%" height="15" fill="rgb(208,48,19)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.7095%" y="389" width="0.0798%" height="15" fill="rgb(251,50,29)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.7095%" y="373" width="0.0798%" height="15" fill="rgb(222,31,49)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.7095%" y="357" width="0.0798%" height="15" fill="rgb(232,33,18)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.7095%" y="341" width="0.0798%" height="15" fill="rgb(209,1,44)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7893%" y="453" width="0.0798%" height="15" fill="rgb(211,7,1)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.7893%" y="437" width="0.0798%" height="15" fill="rgb(224,111,27)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7893%" y="421" width="0.0798%" height="15" fill="rgb(252,195,39)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7893%" y="405" width="0.0798%" height="15" fill="rgb(237,198,5)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7893%" y="389" width="0.0798%" height="15" fill="rgb(232,148,1)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.8691%" y="405" width="0.1596%" height="15" fill="rgb(249,41,3)" fg:x="1101" fg:w="2"/><text x="88.1191%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9489%" y="389" width="0.0798%" height="15" fill="rgb(215,14,33)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="87.9489%" y="373" width="0.0798%" height="15" fill="rgb(209,146,24)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="88.0287%" y="405" width="0.0798%" height="15" fill="rgb(219,51,47)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.0287%" y="389" width="0.0798%" height="15" fill="rgb(234,217,40)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0287%" y="373" width="0.0798%" height="15" fill="rgb(228,34,26)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0287%" y="357" width="0.0798%" height="15" fill="rgb(224,50,29)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="88.1883%" y="373" width="0.1596%" height="15" fill="rgb(205,79,51)" fg:x="1105" fg:w="2"/><text x="88.4383%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.3480%" y="261" width="0.0798%" height="15" fill="rgb(218,136,28)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="88.3480%" y="357" width="0.1596%" height="15" fill="rgb(220,150,10)" fg:x="1107" fg:w="2"/><text x="88.5980%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.3480%" y="341" width="0.1596%" height="15" fill="rgb(242,158,47)" fg:x="1107" fg:w="2"/><text x="88.5980%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.3480%" y="325" width="0.1596%" height="15" fill="rgb(209,68,0)" fg:x="1107" fg:w="2"/><text x="88.5980%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.3480%" y="309" width="0.1596%" height="15" fill="rgb(208,13,41)" fg:x="1107" fg:w="2"/><text x="88.5980%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.3480%" y="293" width="0.1596%" height="15" fill="rgb(226,201,7)" fg:x="1107" fg:w="2"/><text x="88.5980%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.3480%" y="277" width="0.1596%" height="15" fill="rgb(236,103,26)" fg:x="1107" fg:w="2"/><text x="88.5980%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4278%" y="261" width="0.0798%" height="15" fill="rgb(243,162,8)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="88.3480%" y="373" width="0.3192%" height="15" fill="rgb(237,225,11)" fg:x="1107" fg:w="4"/><text x="88.5980%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.5076%" y="357" width="0.1596%" height="15" fill="rgb(247,186,32)" fg:x="1109" fg:w="2"/><text x="88.7576%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.5076%" y="341" width="0.1596%" height="15" fill="rgb(215,26,28)" fg:x="1109" fg:w="2"/><text x="88.7576%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.5076%" y="325" width="0.1596%" height="15" fill="rgb(208,121,6)" fg:x="1109" fg:w="2"/><text x="88.7576%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.5874%" y="309" width="0.0798%" height="15" fill="rgb(225,91,3)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.5874%" y="293" width="0.0798%" height="15" fill="rgb(246,119,36)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="88.1085%" y="389" width="0.6385%" height="15" fill="rgb(254,173,2)" fg:x="1104" fg:w="8"/><text x="88.3585%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="88.6672%" y="373" width="0.0798%" height="15" fill="rgb(209,87,54)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="383.50"></text></g><g><title>engine::session::Session::flush (29 samples, 2.31%)</title><rect x="86.5124%" y="565" width="2.3144%" height="15" fill="rgb(223,216,20)" fg:x="1084" fg:w="29"/><text x="86.7624%" y="575.50">e..</text></g><g><title>engine::session::Session::save_changes (27 samples, 2.15%)</title><rect x="86.6720%" y="549" width="2.1548%" height="15" fill="rgb(220,31,8)" fg:x="1086" fg:w="27"/><text x="86.9220%" y="559.50">e..</text></g><g><title>engine::session::state::State::close (27 samples, 2.15%)</title><rect x="86.6720%" y="533" width="2.1548%" height="15" fill="rgb(220,185,15)" fg:x="1086" fg:w="27"/><text x="86.9220%" y="543.50">e..</text></g><g><title>engine::session::state::State::flush_entities (27 samples, 2.15%)</title><rect x="86.6720%" y="517" width="2.1548%" height="15" fill="rgb(247,190,50)" fg:x="1086" fg:w="27"/><text x="86.9220%" y="527.50">e..</text></g><g><title>core::iter::adapters::try_process (25 samples, 2.00%)</title><rect x="86.8316%" y="501" width="1.9952%" height="15" fill="rgb(239,173,47)" fg:x="1088" fg:w="25"/><text x="87.0816%" y="511.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 2.00%)</title><rect x="86.8316%" y="485" width="1.9952%" height="15" fill="rgb(218,190,42)" fg:x="1088" fg:w="25"/><text x="87.0816%" y="495.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (24 samples, 1.92%)</title><rect x="86.9114%" y="469" width="1.9154%" height="15" fill="rgb(251,207,16)" fg:x="1089" fg:w="24"/><text x="87.1614%" y="479.50">e..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="87.8691%" y="453" width="0.9577%" height="15" fill="rgb(222,199,47)" fg:x="1101" fg:w="12"/><text x="88.1191%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="87.8691%" y="437" width="0.9577%" height="15" fill="rgb(245,190,7)" fg:x="1101" fg:w="12"/><text x="88.1191%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="87.8691%" y="421" width="0.9577%" height="15" fill="rgb(239,85,38)" fg:x="1101" fg:w="12"/><text x="88.1191%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="88.1085%" y="405" width="0.7183%" height="15" fill="rgb(229,69,51)" fg:x="1104" fg:w="9"/><text x="88.3585%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.7470%" y="389" width="0.0798%" height="15" fill="rgb(231,104,51)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.7470%" y="373" width="0.0798%" height="15" fill="rgb(235,49,4)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7470%" y="357" width="0.0798%" height="15" fill="rgb(246,166,20)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="88.8268%" y="565" width="0.0798%" height="15" fill="rgb(230,119,37)" fg:x="1113" fg:w="1"/><text x="89.0768%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="88.8268%" y="549" width="0.0798%" height="15" fill="rgb(234,77,34)" fg:x="1113" fg:w="1"/><text x="89.0768%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8268%" y="533" width="0.0798%" height="15" fill="rgb(211,222,33)" fg:x="1113" fg:w="1"/><text x="89.0768%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.9066%" y="549" width="0.1596%" height="15" fill="rgb(226,45,42)" fg:x="1114" fg:w="2"/><text x="89.1566%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="88.9066%" y="533" width="0.1596%" height="15" fill="rgb(215,174,28)" fg:x="1114" fg:w="2"/><text x="89.1566%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9864%" y="517" width="0.0798%" height="15" fill="rgb(254,173,49)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9864%" y="501" width="0.0798%" height="15" fill="rgb(229,191,6)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.9864%" y="485" width="0.0798%" height="15" fill="rgb(212,145,22)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9864%" y="469" width="0.0798%" height="15" fill="rgb(226,6,51)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9864%" y="453" width="0.0798%" height="15" fill="rgb(227,128,8)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9864%" y="437" width="0.0798%" height="15" fill="rgb(205,24,10)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9864%" y="421" width="0.0798%" height="15" fill="rgb(217,147,27)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="89.0662%" y="533" width="0.0798%" height="15" fill="rgb(250,82,42)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0662%" y="517" width="0.0798%" height="15" fill="rgb(248,93,17)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0662%" y="501" width="0.0798%" height="15" fill="rgb(254,212,40)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0662%" y="485" width="0.0798%" height="15" fill="rgb(229,209,2)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="89.1460%" y="533" width="0.0798%" height="15" fill="rgb(211,50,43)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="89.1460%" y="517" width="0.0798%" height="15" fill="rgb(245,196,29)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.1460%" y="501" width="0.0798%" height="15" fill="rgb(216,132,13)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1460%" y="485" width="0.0798%" height="15" fill="rgb(251,108,21)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="89.2259%" y="501" width="0.0798%" height="15" fill="rgb(229,174,54)" fg:x="1118" fg:w="1"/><text x="89.4759%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.2259%" y="485" width="0.0798%" height="15" fill="rgb(211,175,47)" fg:x="1118" fg:w="1"/><text x="89.4759%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.2259%" y="469" width="0.0798%" height="15" fill="rgb(234,5,37)" fg:x="1118" fg:w="1"/><text x="89.4759%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="89.2259%" y="517" width="0.1596%" height="15" fill="rgb(244,150,43)" fg:x="1118" fg:w="2"/><text x="89.4759%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="89.3057%" y="501" width="0.0798%" height="15" fill="rgb(242,172,38)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3057%" y="485" width="0.0798%" height="15" fill="rgb(205,27,8)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.3057%" y="469" width="0.0798%" height="15" fill="rgb(217,57,3)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.3057%" y="453" width="0.0798%" height="15" fill="rgb(242,21,38)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3057%" y="437" width="0.0798%" height="15" fill="rgb(209,64,43)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="447.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.64%)</title><rect x="88.9066%" y="565" width="0.6385%" height="15" fill="rgb(222,2,46)" fg:x="1114" fg:w="8"/><text x="89.1566%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="89.0662%" y="549" width="0.4789%" height="15" fill="rgb(218,19,44)" fg:x="1116" fg:w="6"/><text x="89.3162%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="89.2259%" y="533" width="0.3192%" height="15" fill="rgb(240,203,42)" fg:x="1118" fg:w="4"/><text x="89.4759%" y="543.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="89.3855%" y="517" width="0.1596%" height="15" fill="rgb(229,23,45)" fg:x="1120" fg:w="2"/><text x="89.6355%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.3855%" y="501" width="0.1596%" height="15" fill="rgb(205,228,51)" fg:x="1120" fg:w="2"/><text x="89.6355%" y="511.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="89.3855%" y="485" width="0.1596%" height="15" fill="rgb(239,36,20)" fg:x="1120" fg:w="2"/><text x="89.6355%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.4653%" y="469" width="0.0798%" height="15" fill="rgb(248,172,27)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4653%" y="453" width="0.0798%" height="15" fill="rgb(244,55,32)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4653%" y="437" width="0.0798%" height="15" fill="rgb(215,97,16)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4653%" y="421" width="0.0798%" height="15" fill="rgb(224,80,29)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.6249%" y="469" width="0.0798%" height="15" fill="rgb(216,93,47)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.6249%" y="453" width="0.0798%" height="15" fill="rgb(238,159,10)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.6249%" y="437" width="0.0798%" height="15" fill="rgb(223,98,29)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (4 samples, 0.32%)</title><rect x="89.5451%" y="565" width="0.3192%" height="15" fill="rgb(210,176,23)" fg:x="1122" fg:w="4"/><text x="89.7951%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.32%)</title><rect x="89.5451%" y="549" width="0.3192%" height="15" fill="rgb(242,162,27)" fg:x="1122" fg:w="4"/><text x="89.7951%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="89.6249%" y="533" width="0.2394%" height="15" fill="rgb(245,109,32)" fg:x="1123" fg:w="3"/><text x="89.8749%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="89.6249%" y="517" width="0.2394%" height="15" fill="rgb(248,87,8)" fg:x="1123" fg:w="3"/><text x="89.8749%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="89.6249%" y="501" width="0.2394%" height="15" fill="rgb(250,160,50)" fg:x="1123" fg:w="3"/><text x="89.8749%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="89.6249%" y="485" width="0.2394%" height="15" fill="rgb(246,165,25)" fg:x="1123" fg:w="3"/><text x="89.8749%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.7047%" y="469" width="0.1596%" height="15" fill="rgb(249,219,3)" fg:x="1124" fg:w="2"/><text x="89.9547%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.7047%" y="453" width="0.1596%" height="15" fill="rgb(226,66,5)" fg:x="1124" fg:w="2"/><text x="89.9547%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="89.7047%" y="437" width="0.1596%" height="15" fill="rgb(250,220,43)" fg:x="1124" fg:w="2"/><text x="89.9547%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.7047%" y="421" width="0.1596%" height="15" fill="rgb(225,111,31)" fg:x="1124" fg:w="2"/><text x="89.9547%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.7845%" y="405" width="0.0798%" height="15" fill="rgb(248,106,18)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.7845%" y="389" width="0.0798%" height="15" fill="rgb(220,226,45)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.7845%" y="373" width="0.0798%" height="15" fill="rgb(208,58,53)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="383.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (1 samples, 0.08%)</title><rect x="89.8643%" y="565" width="0.0798%" height="15" fill="rgb(209,133,1)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="575.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="89.8643%" y="549" width="0.0798%" height="15" fill="rgb(228,216,27)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.8643%" y="533" width="0.0798%" height="15" fill="rgb(238,155,2)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8643%" y="517" width="0.0798%" height="15" fill="rgb(244,99,37)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="89.8643%" y="501" width="0.0798%" height="15" fill="rgb(254,32,3)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="89.8643%" y="485" width="0.0798%" height="15" fill="rgb(234,46,50)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (47 samples, 3.75%)</title><rect x="86.2729%" y="581" width="3.7510%" height="15" fill="rgb(232,118,51)" fg:x="1081" fg:w="47"/><text x="86.5229%" y="591.50">plug..</text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="89.9441%" y="565" width="0.0798%" height="15" fill="rgb(207,24,32)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="89.9441%" y="549" width="0.0798%" height="15" fill="rgb(208,107,43)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="89.9441%" y="533" width="0.0798%" height="15" fill="rgb(231,28,9)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="89.9441%" y="517" width="0.0798%" height="15" fill="rgb(241,204,15)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.9441%" y="501" width="0.0798%" height="15" fill="rgb(214,54,15)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="89.9441%" y="485" width="0.0798%" height="15" fill="rgb(230,12,28)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9441%" y="469" width="0.0798%" height="15" fill="rgb(221,171,5)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="90.0239%" y="581" width="0.0798%" height="15" fill="rgb(207,72,25)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="90.0239%" y="565" width="0.0798%" height="15" fill="rgb(249,79,37)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="90.0239%" y="549" width="0.0798%" height="15" fill="rgb(209,98,49)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="559.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="90.0239%" y="533" width="0.0798%" height="15" fill="rgb(221,62,13)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="90.1038%" y="549" width="0.0798%" height="15" fill="rgb(223,39,6)" fg:x="1129" fg:w="1"/><text x="90.3538%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="90.1038%" y="533" width="0.0798%" height="15" fill="rgb(246,163,20)" fg:x="1129" fg:w="1"/><text x="90.3538%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1038%" y="517" width="0.0798%" height="15" fill="rgb(211,111,29)" fg:x="1129" fg:w="1"/><text x="90.3538%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="90.1038%" y="581" width="0.1596%" height="15" fill="rgb(243,118,5)" fg:x="1129" fg:w="2"/><text x="90.3538%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="90.1038%" y="565" width="0.1596%" height="15" fill="rgb(240,144,52)" fg:x="1129" fg:w="2"/><text x="90.3538%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (1 samples, 0.08%)</title><rect x="90.1836%" y="549" width="0.0798%" height="15" fill="rgb(244,158,36)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="90.1836%" y="533" width="0.0798%" height="15" fill="rgb(241,109,37)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="90.1836%" y="517" width="0.0798%" height="15" fill="rgb(213,95,32)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1836%" y="501" width="0.0798%" height="15" fill="rgb(252,193,9)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1836%" y="485" width="0.0798%" height="15" fill="rgb(225,213,21)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.1836%" y="469" width="0.0798%" height="15" fill="rgb(220,172,46)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1836%" y="453" width="0.0798%" height="15" fill="rgb(235,75,41)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1836%" y="437" width="0.0798%" height="15" fill="rgb(213,86,9)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1836%" y="421" width="0.0798%" height="15" fill="rgb(238,127,51)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.3432%" y="453" width="0.0798%" height="15" fill="rgb(215,2,54)" fg:x="1132" fg:w="1"/><text x="90.5932%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4230%" y="453" width="0.0798%" height="15" fill="rgb(245,80,6)" fg:x="1133" fg:w="1"/><text x="90.6730%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4230%" y="437" width="0.0798%" height="15" fill="rgb(233,106,42)" fg:x="1133" fg:w="1"/><text x="90.6730%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="90.3432%" y="549" width="0.2394%" height="15" fill="rgb(244,86,38)" fg:x="1132" fg:w="3"/><text x="90.5932%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="90.3432%" y="533" width="0.2394%" height="15" fill="rgb(242,167,7)" fg:x="1132" fg:w="3"/><text x="90.5932%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="90.3432%" y="517" width="0.2394%" height="15" fill="rgb(218,216,3)" fg:x="1132" fg:w="3"/><text x="90.5932%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="90.3432%" y="501" width="0.2394%" height="15" fill="rgb(206,136,36)" fg:x="1132" fg:w="3"/><text x="90.5932%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="90.3432%" y="485" width="0.2394%" height="15" fill="rgb(206,206,15)" fg:x="1132" fg:w="3"/><text x="90.5932%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="90.3432%" y="469" width="0.2394%" height="15" fill="rgb(207,163,34)" fg:x="1132" fg:w="3"/><text x="90.5932%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.5028%" y="453" width="0.0798%" height="15" fill="rgb(240,127,22)" fg:x="1134" fg:w="1"/><text x="90.7528%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5028%" y="437" width="0.0798%" height="15" fill="rgb(227,49,5)" fg:x="1134" fg:w="1"/><text x="90.7528%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.5028%" y="421" width="0.0798%" height="15" fill="rgb(231,8,6)" fg:x="1134" fg:w="1"/><text x="90.7528%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.5028%" y="405" width="0.0798%" height="15" fill="rgb(223,21,24)" fg:x="1134" fg:w="1"/><text x="90.7528%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="90.5826%" y="533" width="0.0798%" height="15" fill="rgb(244,44,52)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5826%" y="517" width="0.0798%" height="15" fill="rgb(207,73,28)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="90.6624%" y="517" width="0.0798%" height="15" fill="rgb(234,215,10)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="527.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="90.6624%" y="501" width="0.0798%" height="15" fill="rgb(236,85,3)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6624%" y="485" width="0.0798%" height="15" fill="rgb(236,102,39)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6624%" y="469" width="0.0798%" height="15" fill="rgb(243,50,8)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.6624%" y="453" width="0.0798%" height="15" fill="rgb(207,111,4)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6624%" y="437" width="0.0798%" height="15" fill="rgb(230,52,42)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6624%" y="421" width="0.0798%" height="15" fill="rgb(252,178,50)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6624%" y="405" width="0.0798%" height="15" fill="rgb(234,46,35)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="90.7422%" y="517" width="0.0798%" height="15" fill="rgb(228,69,37)" fg:x="1137" fg:w="1"/><text x="90.9922%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7422%" y="501" width="0.0798%" height="15" fill="rgb(221,21,11)" fg:x="1137" fg:w="1"/><text x="90.9922%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="90.5826%" y="549" width="0.3192%" height="15" fill="rgb(223,56,9)" fg:x="1135" fg:w="4"/><text x="90.8326%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="90.6624%" y="533" width="0.2394%" height="15" fill="rgb(234,30,19)" fg:x="1136" fg:w="3"/><text x="90.9124%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="90.8220%" y="517" width="0.0798%" height="15" fill="rgb(211,64,54)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.8220%" y="501" width="0.0798%" height="15" fill="rgb(250,189,5)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="511.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (110 samples, 8.78%)</title><rect x="82.2027%" y="597" width="8.7789%" height="15" fill="rgb(214,180,13)" fg:x="1030" fg:w="110"/><text x="82.4527%" y="607.50">&lt;tests::Hold..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (9 samples, 0.72%)</title><rect x="90.2634%" y="581" width="0.7183%" height="15" fill="rgb(238,40,40)" fg:x="1131" fg:w="9"/><text x="90.5134%" y="591.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.64%)</title><rect x="90.3432%" y="565" width="0.6385%" height="15" fill="rgb(214,101,38)" fg:x="1132" fg:w="8"/><text x="90.5932%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="90.9018%" y="549" width="0.0798%" height="15" fill="rgb(242,65,53)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.9816%" y="549" width="0.0798%" height="15" fill="rgb(230,22,45)" fg:x="1140" fg:w="1"/><text x="91.2316%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="90.9816%" y="533" width="0.0798%" height="15" fill="rgb(223,77,1)" fg:x="1140" fg:w="1"/><text x="91.2316%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9816%" y="517" width="0.0798%" height="15" fill="rgb(227,33,37)" fg:x="1140" fg:w="1"/><text x="91.2316%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.0615%" y="549" width="0.0798%" height="15" fill="rgb(224,148,39)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="91.0615%" y="533" width="0.0798%" height="15" fill="rgb(232,212,39)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="91.0615%" y="517" width="0.0798%" height="15" fill="rgb(251,172,7)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.3009%" y="469" width="0.0798%" height="15" fill="rgb(219,39,9)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.3009%" y="453" width="0.0798%" height="15" fill="rgb(228,118,14)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.3009%" y="437" width="0.0798%" height="15" fill="rgb(207,140,10)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.3009%" y="421" width="0.0798%" height="15" fill="rgb(227,111,53)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="91.3009%" y="485" width="0.2394%" height="15" fill="rgb(216,165,16)" fg:x="1144" fg:w="3"/><text x="91.5509%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.3807%" y="469" width="0.1596%" height="15" fill="rgb(226,111,18)" fg:x="1145" fg:w="2"/><text x="91.6307%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.3807%" y="453" width="0.1596%" height="15" fill="rgb(251,27,17)" fg:x="1145" fg:w="2"/><text x="91.6307%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="91.4605%" y="437" width="0.0798%" height="15" fill="rgb(254,69,9)" fg:x="1146" fg:w="1"/><text x="91.7105%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.5403%" y="469" width="0.0798%" height="15" fill="rgb(234,140,37)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.5403%" y="453" width="0.0798%" height="15" fill="rgb(220,93,8)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.5403%" y="437" width="0.0798%" height="15" fill="rgb(236,113,3)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.6201%" y="469" width="0.1596%" height="15" fill="rgb(234,108,23)" fg:x="1148" fg:w="2"/><text x="91.8701%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.6201%" y="453" width="0.1596%" height="15" fill="rgb(205,114,34)" fg:x="1148" fg:w="2"/><text x="91.8701%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.6999%" y="437" width="0.0798%" height="15" fill="rgb(236,200,45)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="91.6999%" y="421" width="0.0798%" height="15" fill="rgb(227,194,29)" fg:x="1149" fg:w="1"/><text x="91.9499%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.7797%" y="453" width="0.0798%" height="15" fill="rgb(250,76,42)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="91.7797%" y="437" width="0.0798%" height="15" fill="rgb(208,128,8)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.7797%" y="421" width="0.0798%" height="15" fill="rgb(229,209,35)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.8595%" y="389" width="0.0798%" height="15" fill="rgb(215,39,53)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.8595%" y="373" width="0.0798%" height="15" fill="rgb(219,123,41)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.8595%" y="357" width="0.0798%" height="15" fill="rgb(212,158,18)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="91.8595%" y="341" width="0.0798%" height="15" fill="rgb(234,196,53)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="91.8595%" y="437" width="0.1596%" height="15" fill="rgb(210,139,12)" fg:x="1151" fg:w="2"/><text x="92.1095%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="91.8595%" y="421" width="0.1596%" height="15" fill="rgb(220,116,54)" fg:x="1151" fg:w="2"/><text x="92.1095%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.8595%" y="405" width="0.1596%" height="15" fill="rgb(247,103,28)" fg:x="1151" fg:w="2"/><text x="92.1095%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="91.9393%" y="389" width="0.0798%" height="15" fill="rgb(253,156,45)" fg:x="1152" fg:w="1"/><text x="92.1893%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.0192%" y="421" width="0.0798%" height="15" fill="rgb(237,157,52)" fg:x="1153" fg:w="1"/><text x="92.2692%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.0192%" y="405" width="0.0798%" height="15" fill="rgb(253,112,16)" fg:x="1153" fg:w="1"/><text x="92.2692%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="91.7797%" y="469" width="0.4789%" height="15" fill="rgb(234,70,18)" fg:x="1150" fg:w="6"/><text x="92.0297%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="91.8595%" y="453" width="0.3990%" height="15" fill="rgb(247,138,19)" fg:x="1151" fg:w="5"/><text x="92.1095%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="92.0192%" y="437" width="0.2394%" height="15" fill="rgb(207,171,1)" fg:x="1153" fg:w="3"/><text x="92.2692%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="92.0990%" y="421" width="0.1596%" height="15" fill="rgb(239,213,3)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.0990%" y="405" width="0.1596%" height="15" fill="rgb(226,112,4)" fg:x="1154" fg:w="2"/><text x="92.3490%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.1788%" y="389" width="0.0798%" height="15" fill="rgb(252,170,12)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.04%)</title><rect x="91.3009%" y="501" width="1.0375%" height="15" fill="rgb(241,106,13)" fg:x="1144" fg:w="13"/><text x="91.5509%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="91.5403%" y="485" width="0.7981%" height="15" fill="rgb(225,73,23)" fg:x="1147" fg:w="10"/><text x="91.7903%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.2586%" y="469" width="0.0798%" height="15" fill="rgb(251,227,29)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.2586%" y="453" width="0.0798%" height="15" fill="rgb(237,144,13)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.2586%" y="437" width="0.0798%" height="15" fill="rgb(232,106,46)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.2586%" y="421" width="0.0798%" height="15" fill="rgb(245,154,53)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.3384%" y="469" width="0.0798%" height="15" fill="rgb(212,119,47)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4980%" y="437" width="0.0798%" height="15" fill="rgb(253,135,25)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.5778%" y="437" width="0.0798%" height="15" fill="rgb(253,208,39)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.5778%" y="421" width="0.0798%" height="15" fill="rgb(226,64,12)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="92.3384%" y="501" width="0.3990%" height="15" fill="rgb(214,162,37)" fg:x="1157" fg:w="5"/><text x="92.5884%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="92.3384%" y="485" width="0.3990%" height="15" fill="rgb(250,104,5)" fg:x="1157" fg:w="5"/><text x="92.5884%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="92.4182%" y="469" width="0.3192%" height="15" fill="rgb(220,202,50)" fg:x="1158" fg:w="4"/><text x="92.6682%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.4980%" y="453" width="0.2394%" height="15" fill="rgb(248,67,38)" fg:x="1159" fg:w="3"/><text x="92.7480%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.6576%" y="437" width="0.0798%" height="15" fill="rgb(242,94,35)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.6576%" y="421" width="0.0798%" height="15" fill="rgb(209,78,37)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.6576%" y="405" width="0.0798%" height="15" fill="rgb(230,126,47)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.6576%" y="389" width="0.0798%" height="15" fill="rgb(222,110,35)" fg:x="1161" fg:w="1"/><text x="92.9076%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8970%" y="437" width="0.0798%" height="15" fill="rgb(233,154,20)" fg:x="1164" fg:w="1"/><text x="93.1470%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.9769%" y="405" width="0.0798%" height="15" fill="rgb(223,53,50)" fg:x="1165" fg:w="1"/><text x="93.2269%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.0567%" y="389" width="0.0798%" height="15" fill="rgb(251,27,26)" fg:x="1166" fg:w="1"/><text x="93.3067%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="92.7374%" y="469" width="0.4789%" height="15" fill="rgb(223,189,16)" fg:x="1162" fg:w="6"/><text x="92.9874%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="92.7374%" y="453" width="0.4789%" height="15" fill="rgb(207,5,54)" fg:x="1162" fg:w="6"/><text x="92.9874%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.9769%" y="437" width="0.2394%" height="15" fill="rgb(254,124,50)" fg:x="1165" fg:w="3"/><text x="93.2269%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="92.9769%" y="421" width="0.2394%" height="15" fill="rgb(253,193,24)" fg:x="1165" fg:w="3"/><text x="93.2269%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.0567%" y="405" width="0.1596%" height="15" fill="rgb(235,170,24)" fg:x="1166" fg:w="2"/><text x="93.3067%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.1365%" y="389" width="0.0798%" height="15" fill="rgb(222,212,52)" fg:x="1167" fg:w="1"/><text x="93.3865%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.1365%" y="373" width="0.0798%" height="15" fill="rgb(223,17,45)" fg:x="1167" fg:w="1"/><text x="93.3865%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1365%" y="357" width="0.0798%" height="15" fill="rgb(227,103,26)" fg:x="1167" fg:w="1"/><text x="93.3865%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.2163%" y="437" width="0.1596%" height="15" fill="rgb(251,151,25)" fg:x="1168" fg:w="2"/><text x="93.4663%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.2163%" y="421" width="0.1596%" height="15" fill="rgb(248,144,29)" fg:x="1168" fg:w="2"/><text x="93.4663%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.2163%" y="405" width="0.1596%" height="15" fill="rgb(245,97,16)" fg:x="1168" fg:w="2"/><text x="93.4663%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="92.7374%" y="485" width="0.7183%" height="15" fill="rgb(220,200,29)" fg:x="1162" fg:w="9"/><text x="92.9874%" y="495.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="93.2163%" y="469" width="0.2394%" height="15" fill="rgb(206,38,29)" fg:x="1168" fg:w="3"/><text x="93.4663%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="93.2163%" y="453" width="0.2394%" height="15" fill="rgb(245,19,52)" fg:x="1168" fg:w="3"/><text x="93.4663%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.3759%" y="437" width="0.0798%" height="15" fill="rgb(205,67,43)" fg:x="1170" fg:w="1"/><text x="93.6259%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="93.4557%" y="453" width="0.2394%" height="15" fill="rgb(217,128,23)" fg:x="1171" fg:w="3"/><text x="93.7057%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.5355%" y="437" width="0.1596%" height="15" fill="rgb(210,109,28)" fg:x="1172" fg:w="2"/><text x="93.7855%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="93.6153%" y="421" width="0.0798%" height="15" fill="rgb(233,181,7)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="93.6951%" y="453" width="0.0798%" height="15" fill="rgb(244,11,22)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.6951%" y="437" width="0.0798%" height="15" fill="rgb(205,124,54)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6951%" y="421" width="0.0798%" height="15" fill="rgb(218,21,27)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6951%" y="405" width="0.0798%" height="15" fill="rgb(224,153,33)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="93.7749%" y="453" width="0.0798%" height="15" fill="rgb(240,219,28)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.7749%" y="437" width="0.0798%" height="15" fill="rgb(214,80,29)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7749%" y="421" width="0.0798%" height="15" fill="rgb(247,148,44)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="93.9346%" y="437" width="0.0798%" height="15" fill="rgb(243,110,30)" fg:x="1177" fg:w="1"/><text x="94.1846%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="94.0942%" y="405" width="0.2394%" height="15" fill="rgb(243,173,41)" fg:x="1179" fg:w="3"/><text x="94.3442%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2538%" y="389" width="0.0798%" height="15" fill="rgb(225,160,47)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2538%" y="373" width="0.0798%" height="15" fill="rgb(215,44,21)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3336%" y="325" width="0.0798%" height="15" fill="rgb(248,90,3)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="94.4134%" y="309" width="0.0798%" height="15" fill="rgb(220,196,49)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="94.3336%" y="405" width="0.2394%" height="15" fill="rgb(217,138,14)" fg:x="1182" fg:w="3"/><text x="94.5836%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.3336%" y="389" width="0.2394%" height="15" fill="rgb(219,111,20)" fg:x="1182" fg:w="3"/><text x="94.5836%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.3336%" y="373" width="0.2394%" height="15" fill="rgb(218,114,4)" fg:x="1182" fg:w="3"/><text x="94.5836%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="94.3336%" y="357" width="0.2394%" height="15" fill="rgb(238,133,3)" fg:x="1182" fg:w="3"/><text x="94.5836%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.3336%" y="341" width="0.2394%" height="15" fill="rgb(224,95,0)" fg:x="1182" fg:w="3"/><text x="94.5836%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="94.4134%" y="325" width="0.1596%" height="15" fill="rgb(220,169,35)" fg:x="1183" fg:w="2"/><text x="94.6634%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4932%" y="309" width="0.0798%" height="15" fill="rgb(242,116,47)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6528%" y="373" width="0.0798%" height="15" fill="rgb(251,42,20)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6528%" y="357" width="0.0798%" height="15" fill="rgb(234,7,34)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="367.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.60%)</title><rect x="93.4557%" y="485" width="1.5962%" height="15" fill="rgb(243,208,13)" fg:x="1171" fg:w="20"/><text x="93.7057%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.60%)</title><rect x="93.4557%" y="469" width="1.5962%" height="15" fill="rgb(227,33,28)" fg:x="1171" fg:w="20"/><text x="93.7057%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="93.8547%" y="453" width="1.1971%" height="15" fill="rgb(250,47,37)" fg:x="1176" fg:w="15"/><text x="94.1047%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.04%)</title><rect x="94.0144%" y="437" width="1.0375%" height="15" fill="rgb(235,111,52)" fg:x="1178" fg:w="13"/><text x="94.2644%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.04%)</title><rect x="94.0144%" y="421" width="1.0375%" height="15" fill="rgb(223,64,28)" fg:x="1178" fg:w="13"/><text x="94.2644%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="94.5730%" y="405" width="0.4789%" height="15" fill="rgb(236,67,22)" fg:x="1185" fg:w="6"/><text x="94.8230%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="94.5730%" y="389" width="0.4789%" height="15" fill="rgb(243,79,24)" fg:x="1185" fg:w="6"/><text x="94.8230%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="94.7326%" y="373" width="0.3192%" height="15" fill="rgb(241,225,22)" fg:x="1187" fg:w="4"/><text x="94.9826%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="94.8923%" y="357" width="0.1596%" height="15" fill="rgb(228,214,26)" fg:x="1189" fg:w="2"/><text x="95.1423%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="94.9721%" y="341" width="0.0798%" height="15" fill="rgb(219,84,52)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9721%" y="325" width="0.0798%" height="15" fill="rgb(220,12,22)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.1317%" y="357" width="0.0798%" height="15" fill="rgb(219,9,49)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.1317%" y="341" width="0.0798%" height="15" fill="rgb(237,40,43)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.1317%" y="389" width="0.1596%" height="15" fill="rgb(212,189,32)" fg:x="1192" fg:w="2"/><text x="95.3817%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.1317%" y="373" width="0.1596%" height="15" fill="rgb(247,48,9)" fg:x="1192" fg:w="2"/><text x="95.3817%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.2115%" y="357" width="0.0798%" height="15" fill="rgb(247,112,3)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2115%" y="341" width="0.0798%" height="15" fill="rgb(243,110,18)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.2913%" y="389" width="0.0798%" height="15" fill="rgb(233,223,44)" fg:x="1194" fg:w="1"/><text x="95.5413%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2913%" y="373" width="0.0798%" height="15" fill="rgb(245,160,20)" fg:x="1194" fg:w="1"/><text x="95.5413%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="95.1317%" y="421" width="0.3192%" height="15" fill="rgb(225,37,1)" fg:x="1192" fg:w="4"/><text x="95.3817%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.1317%" y="405" width="0.3192%" height="15" fill="rgb(253,227,39)" fg:x="1192" fg:w="4"/><text x="95.3817%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3711%" y="389" width="0.0798%" height="15" fill="rgb(240,179,26)" fg:x="1195" fg:w="1"/><text x="95.6211%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3711%" y="373" width="0.0798%" height="15" fill="rgb(237,212,23)" fg:x="1195" fg:w="1"/><text x="95.6211%" y="383.50"></text></g><g><title>kernel::model::any_entity_changes (35 samples, 2.79%)</title><rect x="92.7374%" y="501" width="2.7933%" height="15" fill="rgb(221,38,11)" fg:x="1162" fg:w="35"/><text x="92.9874%" y="511.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="95.0519%" y="485" width="0.4789%" height="15" fill="rgb(215,85,6)" fg:x="1191" fg:w="6"/><text x="95.3019%" y="495.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="95.0519%" y="469" width="0.4789%" height="15" fill="rgb(239,64,14)" fg:x="1191" fg:w="6"/><text x="95.3019%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="95.0519%" y="453" width="0.4789%" height="15" fill="rgb(215,150,32)" fg:x="1191" fg:w="6"/><text x="95.3019%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="95.0519%" y="437" width="0.4789%" height="15" fill="rgb(238,15,13)" fg:x="1191" fg:w="6"/><text x="95.3019%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.4509%" y="421" width="0.0798%" height="15" fill="rgb(251,87,8)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.4509%" y="405" width="0.0798%" height="15" fill="rgb(206,86,1)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="415.50"></text></g><g><title>engine::session::Session::close (58 samples, 4.63%)</title><rect x="90.9816%" y="597" width="4.6289%" height="15" fill="rgb(208,151,45)" fg:x="1140" fg:w="58"/><text x="91.2316%" y="607.50">engin..</text></g><g><title>engine::session::state::State::close (58 samples, 4.63%)</title><rect x="90.9816%" y="581" width="4.6289%" height="15" fill="rgb(231,181,24)" fg:x="1140" fg:w="58"/><text x="91.2316%" y="591.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (58 samples, 4.63%)</title><rect x="90.9816%" y="565" width="4.6289%" height="15" fill="rgb(240,106,29)" fg:x="1140" fg:w="58"/><text x="91.2316%" y="575.50">engin..</text></g><g><title>core::iter::adapters::try_process (56 samples, 4.47%)</title><rect x="91.1413%" y="549" width="4.4693%" height="15" fill="rgb(227,166,11)" fg:x="1142" fg:w="56"/><text x="91.3913%" y="559.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 4.47%)</title><rect x="91.1413%" y="533" width="4.4693%" height="15" fill="rgb(254,14,34)" fg:x="1142" fg:w="56"/><text x="91.3913%" y="543.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (55 samples, 4.39%)</title><rect x="91.2211%" y="517" width="4.3895%" height="15" fill="rgb(223,222,6)" fg:x="1143" fg:w="55"/><text x="91.4711%" y="527.50">engin..</text></g><g><title>kernel::perms::find_acls (1 samples, 0.08%)</title><rect x="95.5307%" y="501" width="0.0798%" height="15" fill="rgb(245,69,24)" fg:x="1197" fg:w="1"/><text x="95.7807%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="95.6903%" y="533" width="0.0798%" height="15" fill="rgb(213,193,7)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="95.6903%" y="517" width="0.0798%" height="15" fill="rgb(237,92,51)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="527.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="95.6903%" y="501" width="0.0798%" height="15" fill="rgb(225,194,6)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="95.6903%" y="485" width="0.0798%" height="15" fill="rgb(205,159,49)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="495.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="95.6903%" y="469" width="0.0798%" height="15" fill="rgb(219,69,2)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="479.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="95.6903%" y="565" width="0.1596%" height="15" fill="rgb(215,107,24)" fg:x="1199" fg:w="2"/><text x="95.9403%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="95.6903%" y="549" width="0.1596%" height="15" fill="rgb(249,208,29)" fg:x="1199" fg:w="2"/><text x="95.9403%" y="559.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="95.7702%" y="533" width="0.0798%" height="15" fill="rgb(213,147,10)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="543.50"></text></g><g><title>&lt;plugins_rune::parser::RegisterActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="95.7702%" y="517" width="0.0798%" height="15" fill="rgb(254,140,42)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="527.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (3 samples, 0.24%)</title><rect x="95.8500%" y="501" width="0.2394%" height="15" fill="rgb(249,9,15)" fg:x="1201" fg:w="3"/><text x="96.1000%" y="511.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (2 samples, 0.16%)</title><rect x="95.9298%" y="485" width="0.1596%" height="15" fill="rgb(210,19,33)" fg:x="1202" fg:w="2"/><text x="96.1798%" y="495.50"></text></g><g><title>tracing_core::subscriber::Subscriber::register_callsite (1 samples, 0.08%)</title><rect x="96.0096%" y="469" width="0.0798%" height="15" fill="rgb(241,121,22)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="479.50"></text></g><g><title>&lt;engine::session::logs::SessionSubscriber as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.08%)</title><rect x="96.0096%" y="453" width="0.0798%" height="15" fill="rgb(244,69,52)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="463.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (4 samples, 0.32%)</title><rect x="95.8500%" y="533" width="0.3192%" height="15" fill="rgb(244,191,54)" fg:x="1201" fg:w="4"/><text x="96.1000%" y="543.50"></text></g><g><title>tracing_core::callsite::register_dispatch (4 samples, 0.32%)</title><rect x="95.8500%" y="517" width="0.3192%" height="15" fill="rgb(250,3,53)" fg:x="1201" fg:w="4"/><text x="96.1000%" y="527.50"></text></g><g><title>tracing_core::callsite::dispatchers::Dispatchers::register_dispatch (1 samples, 0.08%)</title><rect x="96.0894%" y="501" width="0.0798%" height="15" fill="rgb(205,77,3)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (1 samples, 0.08%)</title><rect x="96.0894%" y="485" width="0.0798%" height="15" fill="rgb(207,155,3)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1692%" y="357" width="0.0798%" height="15" fill="rgb(224,79,2)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1692%" y="341" width="0.0798%" height="15" fill="rgb(243,172,5)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1692%" y="325" width="0.0798%" height="15" fill="rgb(217,23,43)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1692%" y="309" width="0.0798%" height="15" fill="rgb(223,109,20)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1692%" y="293" width="0.0798%" height="15" fill="rgb(232,159,21)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1692%" y="277" width="0.0798%" height="15" fill="rgb(219,58,2)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1692%" y="261" width="0.0798%" height="15" fill="rgb(241,56,8)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1692%" y="245" width="0.0798%" height="15" fill="rgb(249,10,27)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1692%" y="229" width="0.0798%" height="15" fill="rgb(248,177,5)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.1692%" y="213" width="0.0798%" height="15" fill="rgb(239,12,30)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.1692%" y="197" width="0.0798%" height="15" fill="rgb(229,164,25)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.1692%" y="181" width="0.0798%" height="15" fill="rgb(231,217,50)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.1692%" y="165" width="0.0798%" height="15" fill="rgb(247,99,32)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1692%" y="149" width="0.0798%" height="15" fill="rgb(240,74,50)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="96.2490%" y="357" width="0.0798%" height="15" fill="rgb(218,54,8)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.2490%" y="341" width="0.0798%" height="15" fill="rgb(227,132,20)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2490%" y="325" width="0.0798%" height="15" fill="rgb(232,134,12)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.2490%" y="309" width="0.0798%" height="15" fill="rgb(250,129,18)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2490%" y="293" width="0.0798%" height="15" fill="rgb(232,129,47)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.2490%" y="277" width="0.0798%" height="15" fill="rgb(230,31,40)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="287.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="96.1692%" y="453" width="0.2394%" height="15" fill="rgb(232,126,10)" fg:x="1205" fg:w="3"/><text x="96.4192%" y="463.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (3 samples, 0.24%)</title><rect x="96.1692%" y="437" width="0.2394%" height="15" fill="rgb(205,46,31)" fg:x="1205" fg:w="3"/><text x="96.4192%" y="447.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (3 samples, 0.24%)</title><rect x="96.1692%" y="421" width="0.2394%" height="15" fill="rgb(232,37,37)" fg:x="1205" fg:w="3"/><text x="96.4192%" y="431.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (3 samples, 0.24%)</title><rect x="96.1692%" y="405" width="0.2394%" height="15" fill="rgb(240,91,16)" fg:x="1205" fg:w="3"/><text x="96.4192%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (3 samples, 0.24%)</title><rect x="96.1692%" y="389" width="0.2394%" height="15" fill="rgb(224,160,9)" fg:x="1205" fg:w="3"/><text x="96.4192%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (3 samples, 0.24%)</title><rect x="96.1692%" y="373" width="0.2394%" height="15" fill="rgb(215,116,14)" fg:x="1205" fg:w="3"/><text x="96.4192%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="96.3288%" y="357" width="0.0798%" height="15" fill="rgb(235,46,36)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.3288%" y="341" width="0.0798%" height="15" fill="rgb(238,39,28)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3288%" y="325" width="0.0798%" height="15" fill="rgb(242,125,29)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.3288%" y="309" width="0.0798%" height="15" fill="rgb(238,211,30)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3288%" y="293" width="0.0798%" height="15" fill="rgb(227,201,28)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.3288%" y="277" width="0.0798%" height="15" fill="rgb(238,77,29)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3288%" y="261" width="0.0798%" height="15" fill="rgb(213,221,40)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3288%" y="245" width="0.0798%" height="15" fill="rgb(226,220,44)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.3288%" y="229" width="0.0798%" height="15" fill="rgb(228,90,23)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3288%" y="213" width="0.0798%" height="15" fill="rgb(235,72,29)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.4086%" y="357" width="0.0798%" height="15" fill="rgb(248,117,39)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4086%" y="341" width="0.0798%" height="15" fill="rgb(225,43,28)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.4086%" y="325" width="0.0798%" height="15" fill="rgb(240,93,4)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="96.4884%" y="357" width="0.0798%" height="15" fill="rgb(234,178,27)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="96.4086%" y="373" width="0.2394%" height="15" fill="rgb(254,88,22)" fg:x="1208" fg:w="3"/><text x="96.6586%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.5682%" y="357" width="0.0798%" height="15" fill="rgb(240,206,50)" fg:x="1210" fg:w="1"/><text x="96.8182%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="96.6480%" y="309" width="0.0798%" height="15" fill="rgb(249,103,8)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6480%" y="293" width="0.0798%" height="15" fill="rgb(241,178,36)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6480%" y="277" width="0.0798%" height="15" fill="rgb(246,110,15)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6480%" y="261" width="0.0798%" height="15" fill="rgb(207,14,43)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6480%" y="245" width="0.0798%" height="15" fill="rgb(253,219,19)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.7279%" y="229" width="0.0798%" height="15" fill="rgb(216,126,5)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8077%" y="213" width="0.0798%" height="15" fill="rgb(218,78,42)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8077%" y="197" width="0.0798%" height="15" fill="rgb(215,154,40)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8077%" y="181" width="0.0798%" height="15" fill="rgb(235,129,32)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8077%" y="165" width="0.0798%" height="15" fill="rgb(218,51,8)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.8077%" y="149" width="0.0798%" height="15" fill="rgb(245,48,4)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8077%" y="133" width="0.0798%" height="15" fill="rgb(250,175,12)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8077%" y="117" width="0.0798%" height="15" fill="rgb(237,95,40)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8077%" y="101" width="0.0798%" height="15" fill="rgb(244,120,0)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8077%" y="85" width="0.0798%" height="15" fill="rgb(241,19,42)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="95.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="96.8077%" y="69" width="0.0798%" height="15" fill="rgb(217,174,48)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.8875%" y="213" width="0.0798%" height="15" fill="rgb(239,36,38)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.8875%" y="197" width="0.0798%" height="15" fill="rgb(220,63,49)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.8875%" y="181" width="0.0798%" height="15" fill="rgb(240,101,13)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.8875%" y="165" width="0.0798%" height="15" fill="rgb(209,184,51)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.8875%" y="149" width="0.0798%" height="15" fill="rgb(206,136,39)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="159.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="96.7279%" y="309" width="0.3192%" height="15" fill="rgb(254,47,45)" fg:x="1212" fg:w="4"/><text x="96.9779%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="96.7279%" y="293" width="0.3192%" height="15" fill="rgb(252,103,20)" fg:x="1212" fg:w="4"/><text x="96.9779%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.7279%" y="277" width="0.3192%" height="15" fill="rgb(230,69,12)" fg:x="1212" fg:w="4"/><text x="96.9779%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="96.7279%" y="261" width="0.3192%" height="15" fill="rgb(219,2,28)" fg:x="1212" fg:w="4"/><text x="96.9779%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.7279%" y="245" width="0.3192%" height="15" fill="rgb(210,9,12)" fg:x="1212" fg:w="4"/><text x="96.9779%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="96.8077%" y="229" width="0.2394%" height="15" fill="rgb(235,99,33)" fg:x="1213" fg:w="3"/><text x="97.0577%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9673%" y="213" width="0.0798%" height="15" fill="rgb(230,11,38)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9673%" y="197" width="0.0798%" height="15" fill="rgb(217,129,0)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.9673%" y="181" width="0.0798%" height="15" fill="rgb(222,198,4)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9673%" y="165" width="0.0798%" height="15" fill="rgb(246,170,27)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9673%" y="149" width="0.0798%" height="15" fill="rgb(229,17,28)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="159.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="97.0471%" y="309" width="0.0798%" height="15" fill="rgb(233,198,48)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.0471%" y="293" width="0.0798%" height="15" fill="rgb(238,103,23)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.1269%" y="149" width="0.0798%" height="15" fill="rgb(206,91,41)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.1269%" y="133" width="0.0798%" height="15" fill="rgb(227,34,25)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.1269%" y="117" width="0.0798%" height="15" fill="rgb(210,110,44)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1269%" y="101" width="0.0798%" height="15" fill="rgb(216,189,8)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.1269%" y="181" width="0.1596%" height="15" fill="rgb(234,9,46)" fg:x="1217" fg:w="2"/><text x="97.3769%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.1269%" y="165" width="0.1596%" height="15" fill="rgb(251,200,5)" fg:x="1217" fg:w="2"/><text x="97.3769%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2067%" y="149" width="0.0798%" height="15" fill="rgb(238,165,37)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="159.50"></text></g><g><title>plugins_core::tools::contained_by (12 samples, 0.96%)</title><rect x="96.4086%" y="389" width="0.9577%" height="15" fill="rgb(232,77,38)" fg:x="1208" fg:w="12"/><text x="96.6586%" y="399.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (9 samples, 0.72%)</title><rect x="96.6480%" y="373" width="0.7183%" height="15" fill="rgb(253,179,33)" fg:x="1211" fg:w="9"/><text x="96.8980%" y="383.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (9 samples, 0.72%)</title><rect x="96.6480%" y="357" width="0.7183%" height="15" fill="rgb(240,13,35)" fg:x="1211" fg:w="9"/><text x="96.8980%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (9 samples, 0.72%)</title><rect x="96.6480%" y="341" width="0.7183%" height="15" fill="rgb(242,150,49)" fg:x="1211" fg:w="9"/><text x="96.8980%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="96.6480%" y="325" width="0.7183%" height="15" fill="rgb(237,176,28)" fg:x="1211" fg:w="9"/><text x="96.8980%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="97.1269%" y="309" width="0.2394%" height="15" fill="rgb(214,176,33)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="319.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.1269%" y="293" width="0.2394%" height="15" fill="rgb(214,25,12)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.1269%" y="277" width="0.2394%" height="15" fill="rgb(238,190,20)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.1269%" y="261" width="0.2394%" height="15" fill="rgb(208,11,19)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.1269%" y="245" width="0.2394%" height="15" fill="rgb(239,90,4)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.1269%" y="229" width="0.2394%" height="15" fill="rgb(248,110,3)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.1269%" y="213" width="0.2394%" height="15" fill="rgb(210,41,30)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.1269%" y="197" width="0.2394%" height="15" fill="rgb(239,36,8)" fg:x="1217" fg:w="3"/><text x="97.3769%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2865%" y="181" width="0.0798%" height="15" fill="rgb(237,201,47)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2865%" y="165" width="0.0798%" height="15" fill="rgb(224,140,29)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3663%" y="357" width="0.0798%" height="15" fill="rgb(231,209,17)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3663%" y="341" width="0.0798%" height="15" fill="rgb(249,196,1)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3663%" y="325" width="0.0798%" height="15" fill="rgb(223,207,51)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3663%" y="309" width="0.0798%" height="15" fill="rgb(210,14,40)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3663%" y="293" width="0.0798%" height="15" fill="rgb(250,20,52)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.3663%" y="277" width="0.0798%" height="15" fill="rgb(241,46,11)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.3663%" y="261" width="0.0798%" height="15" fill="rgb(219,105,5)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.3663%" y="245" width="0.0798%" height="15" fill="rgb(252,77,35)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3663%" y="229" width="0.0798%" height="15" fill="rgb(243,119,2)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3663%" y="213" width="0.0798%" height="15" fill="rgb(206,82,28)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.3663%" y="197" width="0.0798%" height="15" fill="rgb(227,120,12)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.3663%" y="181" width="0.0798%" height="15" fill="rgb(229,134,41)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.3663%" y="165" width="0.0798%" height="15" fill="rgb(239,96,32)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.3663%" y="149" width="0.0798%" height="15" fill="rgb(225,46,27)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3663%" y="133" width="0.0798%" height="15" fill="rgb(215,168,2)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5259%" y="325" width="0.0798%" height="15" fill="rgb(207,170,52)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="335.50"></text></g><g><title>engine::session::Session::captured (23 samples, 1.84%)</title><rect x="95.8500%" y="565" width="1.8356%" height="15" fill="rgb(237,198,36)" fg:x="1201" fg:w="23"/><text x="96.1000%" y="575.50">e..</text></g><g><title>engine::session::logs::capture (23 samples, 1.84%)</title><rect x="95.8500%" y="549" width="1.8356%" height="15" fill="rgb(213,27,14)" fg:x="1201" fg:w="23"/><text x="96.1000%" y="559.50">e..</text></g><g><title>tracing_core::dispatcher::with_default (19 samples, 1.52%)</title><rect x="96.1692%" y="533" width="1.5164%" height="15" fill="rgb(218,77,5)" fg:x="1205" fg:w="19"/><text x="96.4192%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (19 samples, 1.52%)</title><rect x="96.1692%" y="517" width="1.5164%" height="15" fill="rgb(230,219,39)" fg:x="1205" fg:w="19"/><text x="96.4192%" y="527.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (19 samples, 1.52%)</title><rect x="96.1692%" y="501" width="1.5164%" height="15" fill="rgb(245,177,7)" fg:x="1205" fg:w="19"/><text x="96.4192%" y="511.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (19 samples, 1.52%)</title><rect x="96.1692%" y="485" width="1.5164%" height="15" fill="rgb(246,44,46)" fg:x="1205" fg:w="19"/><text x="96.4192%" y="495.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (19 samples, 1.52%)</title><rect x="96.1692%" y="469" width="1.5164%" height="15" fill="rgb(207,173,15)" fg:x="1205" fg:w="19"/><text x="96.4192%" y="479.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (16 samples, 1.28%)</title><rect x="96.4086%" y="453" width="1.2769%" height="15" fill="rgb(245,170,50)" fg:x="1208" fg:w="16"/><text x="96.6586%" y="463.50"></text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (16 samples, 1.28%)</title><rect x="96.4086%" y="437" width="1.2769%" height="15" fill="rgb(233,156,21)" fg:x="1208" fg:w="16"/><text x="96.6586%" y="447.50"></text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (16 samples, 1.28%)</title><rect x="96.4086%" y="421" width="1.2769%" height="15" fill="rgb(253,146,27)" fg:x="1208" fg:w="16"/><text x="96.6586%" y="431.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (16 samples, 1.28%)</title><rect x="96.4086%" y="405" width="1.2769%" height="15" fill="rgb(247,66,29)" fg:x="1208" fg:w="16"/><text x="96.6586%" y="415.50"></text></g><g><title>plugins_core::tools::occupied_by (4 samples, 0.32%)</title><rect x="97.3663%" y="389" width="0.3192%" height="15" fill="rgb(218,207,26)" fg:x="1220" fg:w="4"/><text x="97.6163%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="97.3663%" y="373" width="0.3192%" height="15" fill="rgb(234,93,26)" fg:x="1220" fg:w="4"/><text x="97.6163%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="97.4461%" y="357" width="0.2394%" height="15" fill="rgb(214,75,48)" fg:x="1221" fg:w="3"/><text x="97.6961%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.4461%" y="341" width="0.2394%" height="15" fill="rgb(229,119,22)" fg:x="1221" fg:w="3"/><text x="97.6961%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.6057%" y="325" width="0.0798%" height="15" fill="rgb(226,153,19)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.6057%" y="309" width="0.0798%" height="15" fill="rgb(220,204,36)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="319.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.6057%" y="293" width="0.0798%" height="15" fill="rgb(253,181,43)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="303.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.6057%" y="277" width="0.0798%" height="15" fill="rgb(211,41,51)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6057%" y="261" width="0.0798%" height="15" fill="rgb(207,215,0)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6057%" y="245" width="0.0798%" height="15" fill="rgb(212,153,10)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6057%" y="229" width="0.0798%" height="15" fill="rgb(251,171,36)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6057%" y="213" width="0.0798%" height="15" fill="rgb(225,219,41)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6856%" y="517" width="0.0798%" height="15" fill="rgb(208,200,1)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6856%" y="501" width="0.0798%" height="15" fill="rgb(206,75,47)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6856%" y="485" width="0.0798%" height="15" fill="rgb(248,3,16)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6856%" y="469" width="0.0798%" height="15" fill="rgb(242,157,36)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6856%" y="453" width="0.0798%" height="15" fill="rgb(215,175,11)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6856%" y="437" width="0.0798%" height="15" fill="rgb(252,222,22)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6856%" y="421" width="0.0798%" height="15" fill="rgb(250,121,35)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6856%" y="405" width="0.0798%" height="15" fill="rgb(233,120,49)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6856%" y="389" width="0.0798%" height="15" fill="rgb(205,201,14)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6856%" y="373" width="0.0798%" height="15" fill="rgb(219,58,45)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6856%" y="357" width="0.0798%" height="15" fill="rgb(251,65,12)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8452%" y="421" width="0.0798%" height="15" fill="rgb(224,47,31)" fg:x="1226" fg:w="1"/><text x="98.0952%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8452%" y="405" width="0.0798%" height="15" fill="rgb(233,74,26)" fg:x="1226" fg:w="1"/><text x="98.0952%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.9250%" y="341" width="0.0798%" height="15" fill="rgb(231,211,31)" fg:x="1227" fg:w="1"/><text x="98.1750%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.9250%" y="325" width="0.0798%" height="15" fill="rgb(239,167,5)" fg:x="1227" fg:w="1"/><text x="98.1750%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.9250%" y="309" width="0.0798%" height="15" fill="rgb(241,85,0)" fg:x="1227" fg:w="1"/><text x="98.1750%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.9250%" y="421" width="0.1596%" height="15" fill="rgb(229,130,21)" fg:x="1227" fg:w="2"/><text x="98.1750%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.9250%" y="405" width="0.1596%" height="15" fill="rgb(254,84,49)" fg:x="1227" fg:w="2"/><text x="98.1750%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.9250%" y="389" width="0.1596%" height="15" fill="rgb(235,85,21)" fg:x="1227" fg:w="2"/><text x="98.1750%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.9250%" y="373" width="0.1596%" height="15" fill="rgb(246,128,52)" fg:x="1227" fg:w="2"/><text x="98.1750%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.9250%" y="357" width="0.1596%" height="15" fill="rgb(243,114,49)" fg:x="1227" fg:w="2"/><text x="98.1750%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="98.0048%" y="341" width="0.0798%" height="15" fill="rgb(240,224,22)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0048%" y="325" width="0.0798%" height="15" fill="rgb(247,201,52)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0048%" y="309" width="0.0798%" height="15" fill="rgb(231,70,45)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.0048%" y="293" width="0.0798%" height="15" fill="rgb(217,215,20)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0048%" y="277" width="0.0798%" height="15" fill="rgb(226,170,30)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="97.8452%" y="469" width="0.3192%" height="15" fill="rgb(220,190,43)" fg:x="1226" fg:w="4"/><text x="98.0952%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="97.8452%" y="453" width="0.3192%" height="15" fill="rgb(218,20,18)" fg:x="1226" fg:w="4"/><text x="98.0952%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="97.8452%" y="437" width="0.3192%" height="15" fill="rgb(245,37,26)" fg:x="1226" fg:w="4"/><text x="98.0952%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0846%" y="421" width="0.0798%" height="15" fill="rgb(241,127,29)" fg:x="1229" fg:w="1"/><text x="98.3346%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0846%" y="405" width="0.0798%" height="15" fill="rgb(241,33,26)" fg:x="1229" fg:w="1"/><text x="98.3346%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0846%" y="389" width="0.0798%" height="15" fill="rgb(220,106,21)" fg:x="1229" fg:w="1"/><text x="98.3346%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0846%" y="373" width="0.0798%" height="15" fill="rgb(225,125,35)" fg:x="1229" fg:w="1"/><text x="98.3346%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0846%" y="357" width="0.0798%" height="15" fill="rgb(248,80,22)" fg:x="1229" fg:w="1"/><text x="98.3346%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0846%" y="341" width="0.0798%" height="15" fill="rgb(231,117,39)" fg:x="1229" fg:w="1"/><text x="98.3346%" y="351.50"></text></g><g><title>engine::session::internal::Added::find_refs (7 samples, 0.56%)</title><rect x="97.6856%" y="549" width="0.5587%" height="15" fill="rgb(239,183,16)" fg:x="1224" fg:w="7"/><text x="97.9356%" y="559.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="97.6856%" y="533" width="0.5587%" height="15" fill="rgb(221,61,19)" fg:x="1224" fg:w="7"/><text x="97.9356%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="97.7654%" y="517" width="0.4789%" height="15" fill="rgb(239,196,44)" fg:x="1225" fg:w="6"/><text x="98.0154%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="97.7654%" y="501" width="0.4789%" height="15" fill="rgb(206,113,19)" fg:x="1225" fg:w="6"/><text x="98.0154%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="97.7654%" y="485" width="0.4789%" height="15" fill="rgb(245,114,12)" fg:x="1225" fg:w="6"/><text x="98.0154%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1644%" y="469" width="0.0798%" height="15" fill="rgb(247,89,39)" fg:x="1230" fg:w="1"/><text x="98.4144%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1644%" y="453" width="0.0798%" height="15" fill="rgb(213,85,14)" fg:x="1230" fg:w="1"/><text x="98.4144%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.1644%" y="437" width="0.0798%" height="15" fill="rgb(249,206,33)" fg:x="1230" fg:w="1"/><text x="98.4144%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2442%" y="533" width="0.0798%" height="15" fill="rgb(235,167,47)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2442%" y="517" width="0.0798%" height="15" fill="rgb(217,177,16)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2442%" y="501" width="0.0798%" height="15" fill="rgb(250,228,29)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2442%" y="485" width="0.0798%" height="15" fill="rgb(216,195,42)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.2442%" y="469" width="0.0798%" height="15" fill="rgb(232,192,32)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.2442%" y="453" width="0.0798%" height="15" fill="rgb(211,8,47)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.2442%" y="437" width="0.0798%" height="15" fill="rgb(251,201,9)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="98.2442%" y="421" width="0.0798%" height="15" fill="rgb(206,185,47)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.2442%" y="405" width="0.0798%" height="15" fill="rgb(245,54,32)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="98.3240%" y="533" width="0.0798%" height="15" fill="rgb(208,1,8)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3240%" y="517" width="0.0798%" height="15" fill="rgb(228,57,24)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3240%" y="501" width="0.0798%" height="15" fill="rgb(251,24,8)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4038%" y="405" width="0.0798%" height="15" fill="rgb(236,196,50)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4038%" y="389" width="0.0798%" height="15" fill="rgb(246,222,29)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4038%" y="373" width="0.0798%" height="15" fill="rgb(211,34,40)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4038%" y="357" width="0.0798%" height="15" fill="rgb(210,66,51)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.4038%" y="341" width="0.0798%" height="15" fill="rgb(250,56,43)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4836%" y="309" width="0.0798%" height="15" fill="rgb(240,111,50)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="98.4836%" y="405" width="0.1596%" height="15" fill="rgb(209,117,13)" fg:x="1234" fg:w="2"/><text x="98.7336%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.4836%" y="389" width="0.1596%" height="15" fill="rgb(232,164,45)" fg:x="1234" fg:w="2"/><text x="98.7336%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.4836%" y="373" width="0.1596%" height="15" fill="rgb(205,69,32)" fg:x="1234" fg:w="2"/><text x="98.7336%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4836%" y="357" width="0.1596%" height="15" fill="rgb(240,147,45)" fg:x="1234" fg:w="2"/><text x="98.7336%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.4836%" y="341" width="0.1596%" height="15" fill="rgb(221,94,48)" fg:x="1234" fg:w="2"/><text x="98.7336%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.4836%" y="325" width="0.1596%" height="15" fill="rgb(249,209,17)" fg:x="1234" fg:w="2"/><text x="98.7336%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.5634%" y="309" width="0.0798%" height="15" fill="rgb(228,57,28)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="98.4038%" y="437" width="0.3192%" height="15" fill="rgb(250,133,26)" fg:x="1233" fg:w="4"/><text x="98.6538%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.4038%" y="421" width="0.3192%" height="15" fill="rgb(254,15,16)" fg:x="1233" fg:w="4"/><text x="98.6538%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6433%" y="405" width="0.0798%" height="15" fill="rgb(209,147,42)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6433%" y="389" width="0.0798%" height="15" fill="rgb(208,5,29)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="98.4038%" y="533" width="0.3990%" height="15" fill="rgb(250,73,31)" fg:x="1233" fg:w="5"/><text x="98.6538%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="98.4038%" y="517" width="0.3990%" height="15" fill="rgb(238,45,10)" fg:x="1233" fg:w="5"/><text x="98.6538%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.4038%" y="501" width="0.3990%" height="15" fill="rgb(214,104,5)" fg:x="1233" fg:w="5"/><text x="98.6538%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="98.4038%" y="485" width="0.3990%" height="15" fill="rgb(242,217,19)" fg:x="1233" fg:w="5"/><text x="98.6538%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.4038%" y="469" width="0.3990%" height="15" fill="rgb(246,113,27)" fg:x="1233" fg:w="5"/><text x="98.6538%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.4038%" y="453" width="0.3990%" height="15" fill="rgb(221,34,27)" fg:x="1233" fg:w="5"/><text x="98.6538%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7231%" y="437" width="0.0798%" height="15" fill="rgb(246,109,6)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7231%" y="421" width="0.0798%" height="15" fill="rgb(217,12,25)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.7231%" y="405" width="0.0798%" height="15" fill="rgb(250,195,5)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7231%" y="389" width="0.0798%" height="15" fill="rgb(244,140,45)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7231%" y="373" width="0.0798%" height="15" fill="rgb(230,64,14)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.7231%" y="357" width="0.0798%" height="15" fill="rgb(206,27,27)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7231%" y="341" width="0.0798%" height="15" fill="rgb(230,14,50)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7231%" y="325" width="0.0798%" height="15" fill="rgb(237,172,14)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.8029%" y="405" width="0.2394%" height="15" fill="rgb(209,25,21)" fg:x="1238" fg:w="3"/><text x="99.0529%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8827%" y="389" width="0.1596%" height="15" fill="rgb(248,148,22)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8827%" y="373" width="0.1596%" height="15" fill="rgb(234,100,22)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (18 samples, 1.44%)</title><rect x="97.6856%" y="565" width="1.4366%" height="15" fill="rgb(210,20,30)" fg:x="1224" fg:w="18"/><text x="97.9356%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="98.2442%" y="549" width="0.8779%" height="15" fill="rgb(232,58,0)" fg:x="1231" fg:w="11"/><text x="98.4942%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="98.8029%" y="533" width="0.3192%" height="15" fill="rgb(221,68,13)" fg:x="1238" fg:w="4"/><text x="99.0529%" y="543.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="98.8029%" y="517" width="0.3192%" height="15" fill="rgb(231,194,11)" fg:x="1238" fg:w="4"/><text x="99.0529%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="98.8029%" y="501" width="0.3192%" height="15" fill="rgb(235,51,41)" fg:x="1238" fg:w="4"/><text x="99.0529%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.8029%" y="485" width="0.3192%" height="15" fill="rgb(240,50,32)" fg:x="1238" fg:w="4"/><text x="99.0529%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="98.8029%" y="469" width="0.3192%" height="15" fill="rgb(240,185,36)" fg:x="1238" fg:w="4"/><text x="99.0529%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.8029%" y="453" width="0.3192%" height="15" fill="rgb(211,168,15)" fg:x="1238" fg:w="4"/><text x="99.0529%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="98.8029%" y="437" width="0.3192%" height="15" fill="rgb(221,70,0)" fg:x="1238" fg:w="4"/><text x="99.0529%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.8029%" y="421" width="0.3192%" height="15" fill="rgb(205,21,33)" fg:x="1238" fg:w="4"/><text x="99.0529%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0423%" y="405" width="0.0798%" height="15" fill="rgb(225,106,10)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0423%" y="389" width="0.0798%" height="15" fill="rgb(236,200,50)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1221%" y="501" width="0.0798%" height="15" fill="rgb(249,93,23)" fg:x="1242" fg:w="1"/><text x="99.3721%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.1221%" y="517" width="0.1596%" height="15" fill="rgb(244,115,35)" fg:x="1242" fg:w="2"/><text x="99.3721%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2019%" y="501" width="0.0798%" height="15" fill="rgb(231,129,47)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2019%" y="485" width="0.0798%" height="15" fill="rgb(225,160,50)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.2019%" y="469" width="0.0798%" height="15" fill="rgb(218,135,23)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.2019%" y="453" width="0.0798%" height="15" fill="rgb(227,119,14)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.2019%" y="437" width="0.0798%" height="15" fill="rgb(242,138,13)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.2019%" y="421" width="0.0798%" height="15" fill="rgb(215,11,16)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.2019%" y="405" width="0.0798%" height="15" fill="rgb(234,170,50)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.2019%" y="389" width="0.0798%" height="15" fill="rgb(233,34,20)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.2019%" y="373" width="0.0798%" height="15" fill="rgb(237,100,45)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.2019%" y="357" width="0.0798%" height="15" fill="rgb(231,184,36)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.2019%" y="341" width="0.0798%" height="15" fill="rgb(252,93,2)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2019%" y="325" width="0.0798%" height="15" fill="rgb(248,176,47)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="99.2817%" y="517" width="0.1596%" height="15" fill="rgb(249,125,23)" fg:x="1244" fg:w="2"/><text x="99.5317%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3615%" y="501" width="0.0798%" height="15" fill="rgb(239,67,42)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3615%" y="485" width="0.0798%" height="15" fill="rgb(244,162,4)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3615%" y="469" width="0.0798%" height="15" fill="rgb(214,150,38)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="479.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.4413%" y="517" width="0.0798%" height="15" fill="rgb(228,211,28)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4413%" y="501" width="0.0798%" height="15" fill="rgb(212,98,48)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.4413%" y="485" width="0.0798%" height="15" fill="rgb(213,45,13)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6010%" y="421" width="0.0798%" height="15" fill="rgb(218,35,29)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6010%" y="405" width="0.0798%" height="15" fill="rgb(244,13,3)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6010%" y="389" width="0.0798%" height="15" fill="rgb(235,170,19)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6010%" y="373" width="0.0798%" height="15" fill="rgb(233,193,43)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.6010%" y="357" width="0.0798%" height="15" fill="rgb(228,223,20)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6010%" y="341" width="0.0798%" height="15" fill="rgb(208,85,54)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6010%" y="325" width="0.0798%" height="15" fill="rgb(254,14,45)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.6010%" y="309" width="0.0798%" height="15" fill="rgb(247,99,29)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6010%" y="293" width="0.0798%" height="15" fill="rgb(225,180,54)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6010%" y="277" width="0.0798%" height="15" fill="rgb(239,88,43)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="287.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="99.5211%" y="517" width="0.2394%" height="15" fill="rgb(209,47,11)" fg:x="1247" fg:w="3"/><text x="99.7711%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.6010%" y="501" width="0.1596%" height="15" fill="rgb(219,179,23)" fg:x="1248" fg:w="2"/><text x="99.8510%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6010%" y="485" width="0.1596%" height="15" fill="rgb(213,183,19)" fg:x="1248" fg:w="2"/><text x="99.8510%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.6010%" y="469" width="0.1596%" height="15" fill="rgb(210,11,9)" fg:x="1248" fg:w="2"/><text x="99.8510%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6010%" y="453" width="0.1596%" height="15" fill="rgb(239,194,16)" fg:x="1248" fg:w="2"/><text x="99.8510%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.6010%" y="437" width="0.1596%" height="15" fill="rgb(246,23,50)" fg:x="1248" fg:w="2"/><text x="99.8510%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6808%" y="421" width="0.0798%" height="15" fill="rgb(245,10,41)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6808%" y="405" width="0.0798%" height="15" fill="rgb(228,43,24)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.6808%" y="389" width="0.0798%" height="15" fill="rgb(220,151,0)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6808%" y="373" width="0.0798%" height="15" fill="rgb(232,219,10)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6808%" y="357" width="0.0798%" height="15" fill="rgb(227,217,48)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.6808%" y="341" width="0.0798%" height="15" fill="rgb(210,66,35)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.6808%" y="325" width="0.0798%" height="15" fill="rgb(254,6,7)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.6808%" y="309" width="0.0798%" height="15" fill="rgb(235,222,42)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="319.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (54 samples, 4.31%)</title><rect x="95.6105%" y="597" width="4.3097%" height="15" fill="rgb(245,126,5)" fg:x="1198" fg:w="54"/><text x="95.8605%" y="607.50">engin..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (54 samples, 4.31%)</title><rect x="95.6105%" y="581" width="4.3097%" height="15" fill="rgb(215,73,17)" fg:x="1198" fg:w="54"/><text x="95.8605%" y="591.50">engin..</text></g><g><title>kernel::model::EntityPtrResolver::world (10 samples, 0.80%)</title><rect x="99.1221%" y="565" width="0.7981%" height="15" fill="rgb(219,198,52)" fg:x="1242" fg:w="10"/><text x="99.3721%" y="575.50"></text></g><g><title>engine::session::Session::load_entity (10 samples, 0.80%)</title><rect x="99.1221%" y="549" width="0.7981%" height="15" fill="rgb(217,159,18)" fg:x="1242" fg:w="10"/><text x="99.3721%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.80%)</title><rect x="99.1221%" y="533" width="0.7981%" height="15" fill="rgb(212,177,18)" fg:x="1242" fg:w="10"/><text x="99.3721%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="99.7606%" y="517" width="0.1596%" height="15" fill="rgb(241,10,11)" fg:x="1250" fg:w="2"/><text x="100.0106%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.7606%" y="501" width="0.1596%" height="15" fill="rgb(232,114,35)" fg:x="1250" fg:w="2"/><text x="100.0106%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.7606%" y="485" width="0.1596%" height="15" fill="rgb(238,222,8)" fg:x="1250" fg:w="2"/><text x="100.0106%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.7606%" y="469" width="0.1596%" height="15" fill="rgb(251,153,44)" fg:x="1250" fg:w="2"/><text x="100.0106%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.8404%" y="453" width="0.0798%" height="15" fill="rgb(210,140,51)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8404%" y="437" width="0.0798%" height="15" fill="rgb(222,63,0)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="447.50"></text></g><g><title>all (1,253 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(240,18,40)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="959.50"></text></g><g><title>simple-108cb82f (1,253 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(237,88,16)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="943.50">simple-108cb82f</text></g><g><title>_start (1,253 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(251,117,13)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(251,228,8)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="911.50">__libc_start_main</text></g><g><title>main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(205,107,49)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (1,253 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(238,72,41)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(248,183,52)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(215,58,20)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(209,49,13)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(208,113,17)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(208,14,22)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(222,95,2)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(253,180,37)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,253 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(250,81,33)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(251,151,41)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,253 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(210,135,17)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(239,21,29)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="703.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,253 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(231,215,16)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="687.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,253 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(239,151,54)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="671.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (263 samples, 20.99%)</title><rect x="79.0104%" y="645" width="20.9896%" height="15" fill="rgb(222,122,38)" fg:x="990" fg:w="263"/><text x="79.2604%" y="655.50">&lt;criterion::routine::Function&lt;M,F..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (263 samples, 20.99%)</title><rect x="79.0104%" y="629" width="20.9896%" height="15" fill="rgb(243,128,1)" fg:x="990" fg:w="263"/><text x="79.2604%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::i..</text></g><g><title>tests::evaluate_text_in_new_domain (263 samples, 20.99%)</title><rect x="79.0104%" y="613" width="20.9896%" height="15" fill="rgb(225,74,21)" fg:x="990" fg:w="263"/><text x="79.2604%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9202%" y="597" width="0.0798%" height="15" fill="rgb(216,210,10)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9202%" y="581" width="0.0798%" height="15" fill="rgb(228,76,19)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9202%" y="565" width="0.0798%" height="15" fill="rgb(236,80,34)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.9202%" y="549" width="0.0798%" height="15" fill="rgb(225,173,23)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="559.50"></text></g></svg></svg>