<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1188"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1684%" y="565" width="0.0842%" height="15" fill="rgb(254,205,35)" fg:x="2" fg:w="1"/><text x="0.4184%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4209%" y="517" width="0.0842%" height="15" fill="rgb(230,159,3)" fg:x="5" fg:w="1"/><text x="0.6709%" y="527.50"></text></g><g><title>__libc_free (6 samples, 0.51%)</title><rect x="0.6734%" y="501" width="0.5051%" height="15" fill="rgb(232,190,24)" fg:x="8" fg:w="6"/><text x="0.9234%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (14 samples, 1.18%)</title><rect x="0.2525%" y="565" width="1.1785%" height="15" fill="rgb(217,227,44)" fg:x="3" fg:w="14"/><text x="0.5025%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.18%)</title><rect x="0.2525%" y="549" width="1.1785%" height="15" fill="rgb(236,211,1)" fg:x="3" fg:w="14"/><text x="0.5025%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 1.09%)</title><rect x="0.3367%" y="533" width="1.0943%" height="15" fill="rgb(250,127,46)" fg:x="4" fg:w="13"/><text x="0.5867%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (11 samples, 0.93%)</title><rect x="0.5051%" y="517" width="0.9259%" height="15" fill="rgb(229,213,6)" fg:x="6" fg:w="11"/><text x="0.7551%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.25%)</title><rect x="1.1785%" y="501" width="0.2525%" height="15" fill="rgb(237,15,36)" fg:x="14" fg:w="3"/><text x="1.4285%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="1.2626%" y="485" width="0.1684%" height="15" fill="rgb(213,131,41)" fg:x="15" fg:w="2"/><text x="1.5126%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6835%" y="533" width="0.0842%" height="15" fill="rgb(225,82,44)" fg:x="20" fg:w="1"/><text x="1.9335%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8519%" y="485" width="0.0842%" height="15" fill="rgb(249,42,11)" fg:x="22" fg:w="1"/><text x="2.1019%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0202%" y="453" width="0.0842%" height="15" fill="rgb(253,11,29)" fg:x="24" fg:w="1"/><text x="2.2702%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.34%)</title><rect x="2.1044%" y="453" width="0.3367%" height="15" fill="rgb(206,8,54)" fg:x="25" fg:w="4"/><text x="2.3544%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="2.1886%" y="437" width="0.2525%" height="15" fill="rgb(222,186,2)" fg:x="26" fg:w="3"/><text x="2.4386%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.5253%" y="437" width="0.0842%" height="15" fill="rgb(221,206,53)" fg:x="30" fg:w="1"/><text x="2.7753%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.6094%" y="437" width="0.0842%" height="15" fill="rgb(230,150,21)" fg:x="31" fg:w="1"/><text x="2.8594%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.25%)</title><rect x="2.6936%" y="437" width="0.2525%" height="15" fill="rgb(253,202,10)" fg:x="32" fg:w="3"/><text x="2.9436%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="2.7778%" y="421" width="0.1684%" height="15" fill="rgb(238,109,40)" fg:x="33" fg:w="2"/><text x="3.0278%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="2.7778%" y="405" width="0.1684%" height="15" fill="rgb(247,120,22)" fg:x="33" fg:w="2"/><text x="3.0278%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9461%" y="421" width="0.0842%" height="15" fill="rgb(207,43,30)" fg:x="35" fg:w="1"/><text x="3.1961%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.26%)</title><rect x="1.8519%" y="501" width="1.2626%" height="15" fill="rgb(213,211,24)" fg:x="22" fg:w="15"/><text x="2.1019%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (14 samples, 1.18%)</title><rect x="1.9360%" y="485" width="1.1785%" height="15" fill="rgb(239,73,39)" fg:x="23" fg:w="14"/><text x="2.1860%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.18%)</title><rect x="1.9360%" y="469" width="1.1785%" height="15" fill="rgb(245,182,19)" fg:x="23" fg:w="14"/><text x="2.1860%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.67%)</title><rect x="2.4411%" y="453" width="0.6734%" height="15" fill="rgb(247,143,26)" fg:x="29" fg:w="8"/><text x="2.6911%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="2.9461%" y="437" width="0.1684%" height="15" fill="rgb(228,191,23)" fg:x="35" fg:w="2"/><text x="3.1961%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.0303%" y="421" width="0.0842%" height="15" fill="rgb(253,165,31)" fg:x="36" fg:w="1"/><text x="3.2803%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="3.1145%" y="485" width="0.2525%" height="15" fill="rgb(234,138,20)" fg:x="37" fg:w="3"/><text x="3.3645%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.3670%" y="485" width="0.0842%" height="15" fill="rgb(218,191,29)" fg:x="40" fg:w="1"/><text x="3.6170%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="3.6195%" y="469" width="0.1684%" height="15" fill="rgb(221,157,19)" fg:x="43" fg:w="2"/><text x="3.8695%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.7879%" y="469" width="0.0842%" height="15" fill="rgb(237,26,42)" fg:x="45" fg:w="1"/><text x="4.0379%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7879%" y="453" width="0.0842%" height="15" fill="rgb(220,163,24)" fg:x="45" fg:w="1"/><text x="4.0379%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9562%" y="453" width="0.0842%" height="15" fill="rgb(242,115,20)" fg:x="47" fg:w="1"/><text x="4.2062%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.0404%" y="453" width="0.0842%" height="15" fill="rgb(210,206,9)" fg:x="48" fg:w="1"/><text x="4.2904%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.1246%" y="437" width="0.0842%" height="15" fill="rgb(208,71,17)" fg:x="49" fg:w="1"/><text x="4.3746%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.1246%" y="421" width="0.0842%" height="15" fill="rgb(233,7,5)" fg:x="49" fg:w="1"/><text x="4.3746%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.2088%" y="405" width="0.0842%" height="15" fill="rgb(207,92,33)" fg:x="50" fg:w="1"/><text x="4.4588%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.17%)</title><rect x="4.2088%" y="437" width="0.1684%" height="15" fill="rgb(218,87,9)" fg:x="50" fg:w="2"/><text x="4.4588%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="4.2088%" y="421" width="0.1684%" height="15" fill="rgb(219,47,37)" fg:x="50" fg:w="2"/><text x="4.4588%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="4.2929%" y="405" width="0.0842%" height="15" fill="rgb(221,152,34)" fg:x="51" fg:w="1"/><text x="4.5429%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3771%" y="421" width="0.0842%" height="15" fill="rgb(235,176,21)" fg:x="52" fg:w="1"/><text x="4.6271%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 2.78%)</title><rect x="1.7677%" y="517" width="2.7778%" height="15" fill="rgb(232,212,21)" fg:x="21" fg:w="33"/><text x="2.0177%" y="527.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.43%)</title><rect x="3.1145%" y="501" width="1.4310%" height="15" fill="rgb(245,82,39)" fg:x="37" fg:w="17"/><text x="3.3645%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.09%)</title><rect x="3.4512%" y="485" width="1.0943%" height="15" fill="rgb(241,52,51)" fg:x="41" fg:w="13"/><text x="3.7012%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.67%)</title><rect x="3.8721%" y="469" width="0.6734%" height="15" fill="rgb(219,91,24)" fg:x="46" fg:w="8"/><text x="4.1221%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.42%)</title><rect x="4.1246%" y="453" width="0.4209%" height="15" fill="rgb(241,142,12)" fg:x="49" fg:w="5"/><text x="4.3746%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="4.3771%" y="437" width="0.1684%" height="15" fill="rgb(230,27,9)" fg:x="52" fg:w="2"/><text x="4.6271%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="4.4613%" y="421" width="0.0842%" height="15" fill="rgb(249,181,32)" fg:x="53" fg:w="1"/><text x="4.7113%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 3.11%)</title><rect x="1.5993%" y="549" width="3.1145%" height="15" fill="rgb(230,107,3)" fg:x="19" fg:w="37"/><text x="1.8493%" y="559.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (35 samples, 2.95%)</title><rect x="1.7677%" y="533" width="2.9461%" height="15" fill="rgb(246,204,14)" fg:x="21" fg:w="35"/><text x="2.0177%" y="543.50">co..</text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="4.5455%" y="517" width="0.1684%" height="15" fill="rgb(213,192,47)" fg:x="54" fg:w="2"/><text x="4.7955%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 4.63%)</title><rect x="0.1684%" y="581" width="4.6296%" height="15" fill="rgb(240,44,36)" fg:x="2" fg:w="55"/><text x="0.4184%" y="591.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (40 samples, 3.37%)</title><rect x="1.4310%" y="565" width="3.3670%" height="15" fill="rgb(244,209,38)" fg:x="17" fg:w="40"/><text x="1.6810%" y="575.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.7138%" y="549" width="0.0842%" height="15" fill="rgb(219,34,37)" fg:x="56" fg:w="1"/><text x="4.9638%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.9663%" y="533" width="0.0842%" height="15" fill="rgb(210,28,6)" fg:x="59" fg:w="1"/><text x="5.2163%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="4.9663%" y="517" width="0.0842%" height="15" fill="rgb(244,110,52)" fg:x="59" fg:w="1"/><text x="5.2163%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="5.0505%" y="517" width="0.0842%" height="15" fill="rgb(254,124,47)" fg:x="60" fg:w="1"/><text x="5.3005%" y="527.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="5.1347%" y="517" width="0.0842%" height="15" fill="rgb(254,110,13)" fg:x="61" fg:w="1"/><text x="5.3847%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.2189%" y="517" width="0.0842%" height="15" fill="rgb(252,57,21)" fg:x="62" fg:w="1"/><text x="5.4689%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.2189%" y="501" width="0.0842%" height="15" fill="rgb(242,60,45)" fg:x="62" fg:w="1"/><text x="5.4689%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.2189%" y="485" width="0.0842%" height="15" fill="rgb(234,49,30)" fg:x="62" fg:w="1"/><text x="5.4689%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3872%" y="437" width="0.0842%" height="15" fill="rgb(218,98,6)" fg:x="64" fg:w="1"/><text x="5.6372%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3872%" y="421" width="0.0842%" height="15" fill="rgb(220,174,29)" fg:x="64" fg:w="1"/><text x="5.6372%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="5.3872%" y="405" width="0.0842%" height="15" fill="rgb(236,163,23)" fg:x="64" fg:w="1"/><text x="5.6372%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="5.3872%" y="389" width="0.0842%" height="15" fill="rgb(242,114,45)" fg:x="64" fg:w="1"/><text x="5.6372%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="5.3872%" y="373" width="0.0842%" height="15" fill="rgb(232,10,53)" fg:x="64" fg:w="1"/><text x="5.6372%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="5.3872%" y="357" width="0.0842%" height="15" fill="rgb(245,108,29)" fg:x="64" fg:w="1"/><text x="5.6372%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.3872%" y="341" width="0.0842%" height="15" fill="rgb(240,89,53)" fg:x="64" fg:w="1"/><text x="5.6372%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.3872%" y="325" width="0.0842%" height="15" fill="rgb(226,60,45)" fg:x="64" fg:w="1"/><text x="5.6372%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.3872%" y="309" width="0.0842%" height="15" fill="rgb(230,41,44)" fg:x="64" fg:w="1"/><text x="5.6372%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="5.3872%" y="293" width="0.0842%" height="15" fill="rgb(230,26,20)" fg:x="64" fg:w="1"/><text x="5.6372%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.3872%" y="277" width="0.0842%" height="15" fill="rgb(237,170,32)" fg:x="64" fg:w="1"/><text x="5.6372%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="5.3872%" y="261" width="0.0842%" height="15" fill="rgb(212,35,42)" fg:x="64" fg:w="1"/><text x="5.6372%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="5.3872%" y="245" width="0.0842%" height="15" fill="rgb(227,31,34)" fg:x="64" fg:w="1"/><text x="5.6372%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="5.3872%" y="229" width="0.0842%" height="15" fill="rgb(216,19,18)" fg:x="64" fg:w="1"/><text x="5.6372%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.3872%" y="213" width="0.0842%" height="15" fill="rgb(211,133,42)" fg:x="64" fg:w="1"/><text x="5.6372%" y="223.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="5.3872%" y="485" width="0.1684%" height="15" fill="rgb(244,66,13)" fg:x="64" fg:w="2"/><text x="5.6372%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="5.3872%" y="469" width="0.1684%" height="15" fill="rgb(218,185,50)" fg:x="64" fg:w="2"/><text x="5.6372%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="5.3872%" y="453" width="0.1684%" height="15" fill="rgb(219,149,13)" fg:x="64" fg:w="2"/><text x="5.6372%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.4714%" y="437" width="0.0842%" height="15" fill="rgb(221,125,0)" fg:x="65" fg:w="1"/><text x="5.7214%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.4714%" y="421" width="0.0842%" height="15" fill="rgb(247,126,27)" fg:x="65" fg:w="1"/><text x="5.7214%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.4714%" y="405" width="0.0842%" height="15" fill="rgb(250,138,30)" fg:x="65" fg:w="1"/><text x="5.7214%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="5.4714%" y="389" width="0.0842%" height="15" fill="rgb(230,151,9)" fg:x="65" fg:w="1"/><text x="5.7214%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="5.4714%" y="373" width="0.0842%" height="15" fill="rgb(233,80,38)" fg:x="65" fg:w="1"/><text x="5.7214%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="5.4714%" y="357" width="0.0842%" height="15" fill="rgb(232,68,43)" fg:x="65" fg:w="1"/><text x="5.7214%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="5.4714%" y="341" width="0.0842%" height="15" fill="rgb(254,5,50)" fg:x="65" fg:w="1"/><text x="5.7214%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.4714%" y="325" width="0.0842%" height="15" fill="rgb(225,45,5)" fg:x="65" fg:w="1"/><text x="5.7214%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="5.4714%" y="309" width="0.0842%" height="15" fill="rgb(239,22,3)" fg:x="65" fg:w="1"/><text x="5.7214%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.4714%" y="293" width="0.0842%" height="15" fill="rgb(243,129,0)" fg:x="65" fg:w="1"/><text x="5.7214%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="5.4714%" y="277" width="0.0842%" height="15" fill="rgb(223,164,0)" fg:x="65" fg:w="1"/><text x="5.7214%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.4714%" y="261" width="0.0842%" height="15" fill="rgb(221,46,29)" fg:x="65" fg:w="1"/><text x="5.7214%" y="271.50"></text></g><g><title>anyhow::__private::format_err (1 samples, 0.08%)</title><rect x="5.5556%" y="485" width="0.0842%" height="15" fill="rgb(205,97,47)" fg:x="66" fg:w="1"/><text x="5.8056%" y="495.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="5.6397%" y="437" width="0.0842%" height="15" fill="rgb(249,14,8)" fg:x="67" fg:w="1"/><text x="5.8897%" y="447.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="5.6397%" y="421" width="0.0842%" height="15" fill="rgb(216,77,3)" fg:x="67" fg:w="1"/><text x="5.8897%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="5.6397%" y="405" width="0.0842%" height="15" fill="rgb(206,168,54)" fg:x="67" fg:w="1"/><text x="5.8897%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (10 samples, 0.84%)</title><rect x="5.3872%" y="501" width="0.8418%" height="15" fill="rgb(236,3,41)" fg:x="64" fg:w="10"/><text x="5.6372%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (7 samples, 0.59%)</title><rect x="5.6397%" y="485" width="0.5892%" height="15" fill="rgb(231,132,24)" fg:x="67" fg:w="7"/><text x="5.8897%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (7 samples, 0.59%)</title><rect x="5.6397%" y="469" width="0.5892%" height="15" fill="rgb(227,221,40)" fg:x="67" fg:w="7"/><text x="5.8897%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (7 samples, 0.59%)</title><rect x="5.6397%" y="453" width="0.5892%" height="15" fill="rgb(233,151,11)" fg:x="67" fg:w="7"/><text x="5.8897%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (6 samples, 0.51%)</title><rect x="5.7239%" y="437" width="0.5051%" height="15" fill="rgb(247,81,35)" fg:x="68" fg:w="6"/><text x="5.9739%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (6 samples, 0.51%)</title><rect x="5.7239%" y="421" width="0.5051%" height="15" fill="rgb(243,128,48)" fg:x="68" fg:w="6"/><text x="5.9739%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (6 samples, 0.51%)</title><rect x="5.7239%" y="405" width="0.5051%" height="15" fill="rgb(253,16,10)" fg:x="68" fg:w="6"/><text x="5.9739%" y="415.50"></text></g><g><title>statx (6 samples, 0.51%)</title><rect x="5.7239%" y="389" width="0.5051%" height="15" fill="rgb(228,67,27)" fg:x="68" fg:w="6"/><text x="5.9739%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="6.6498%" y="437" width="0.1684%" height="15" fill="rgb(231,105,25)" fg:x="79" fg:w="2"/><text x="6.8998%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="6.6498%" y="421" width="0.1684%" height="15" fill="rgb(213,166,47)" fg:x="79" fg:w="2"/><text x="6.8998%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.17%)</title><rect x="6.6498%" y="405" width="0.1684%" height="15" fill="rgb(209,27,10)" fg:x="79" fg:w="2"/><text x="6.8998%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="6.6498%" y="389" width="0.1684%" height="15" fill="rgb(241,44,30)" fg:x="79" fg:w="2"/><text x="6.8998%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.17%)</title><rect x="6.6498%" y="373" width="0.1684%" height="15" fill="rgb(223,216,15)" fg:x="79" fg:w="2"/><text x="6.8998%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="6.6498%" y="357" width="0.1684%" height="15" fill="rgb(227,14,7)" fg:x="79" fg:w="2"/><text x="6.8998%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="6.6498%" y="341" width="0.1684%" height="15" fill="rgb(237,14,5)" fg:x="79" fg:w="2"/><text x="6.8998%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="6.6498%" y="325" width="0.1684%" height="15" fill="rgb(232,14,36)" fg:x="79" fg:w="2"/><text x="6.8998%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="6.6498%" y="309" width="0.1684%" height="15" fill="rgb(234,0,38)" fg:x="79" fg:w="2"/><text x="6.8998%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="6.6498%" y="293" width="0.1684%" height="15" fill="rgb(207,170,14)" fg:x="79" fg:w="2"/><text x="6.8998%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="6.6498%" y="277" width="0.1684%" height="15" fill="rgb(252,45,13)" fg:x="79" fg:w="2"/><text x="6.8998%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="6.6498%" y="261" width="0.1684%" height="15" fill="rgb(213,142,7)" fg:x="79" fg:w="2"/><text x="6.8998%" y="271.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (9 samples, 0.76%)</title><rect x="6.3131%" y="485" width="0.7576%" height="15" fill="rgb(216,157,23)" fg:x="75" fg:w="9"/><text x="6.5631%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.76%)</title><rect x="6.3131%" y="469" width="0.7576%" height="15" fill="rgb(212,145,33)" fg:x="75" fg:w="9"/><text x="6.5631%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.51%)</title><rect x="6.5657%" y="453" width="0.5051%" height="15" fill="rgb(233,26,13)" fg:x="78" fg:w="6"/><text x="6.8157%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="6.8182%" y="437" width="0.2525%" height="15" fill="rgb(219,196,19)" fg:x="81" fg:w="3"/><text x="7.0682%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0707%" y="437" width="0.0842%" height="15" fill="rgb(246,56,21)" fg:x="84" fg:w="1"/><text x="7.3207%" y="447.50"></text></g><g><title>glob::is_dir (11 samples, 0.93%)</title><rect x="7.1549%" y="437" width="0.9259%" height="15" fill="rgb(222,28,53)" fg:x="85" fg:w="11"/><text x="7.4049%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (11 samples, 0.93%)</title><rect x="7.1549%" y="421" width="0.9259%" height="15" fill="rgb(224,5,27)" fg:x="85" fg:w="11"/><text x="7.4049%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (11 samples, 0.93%)</title><rect x="7.1549%" y="405" width="0.9259%" height="15" fill="rgb(220,153,33)" fg:x="85" fg:w="11"/><text x="7.4049%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (11 samples, 0.93%)</title><rect x="7.1549%" y="389" width="0.9259%" height="15" fill="rgb(226,58,19)" fg:x="85" fg:w="11"/><text x="7.4049%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (11 samples, 0.93%)</title><rect x="7.1549%" y="373" width="0.9259%" height="15" fill="rgb(239,112,23)" fg:x="85" fg:w="11"/><text x="7.4049%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (11 samples, 0.93%)</title><rect x="7.1549%" y="357" width="0.9259%" height="15" fill="rgb(251,213,20)" fg:x="85" fg:w="11"/><text x="7.4049%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (11 samples, 0.93%)</title><rect x="7.1549%" y="341" width="0.9259%" height="15" fill="rgb(215,181,21)" fg:x="85" fg:w="11"/><text x="7.4049%" y="351.50"></text></g><g><title>statx (11 samples, 0.93%)</title><rect x="7.1549%" y="325" width="0.9259%" height="15" fill="rgb(240,8,35)" fg:x="85" fg:w="11"/><text x="7.4049%" y="335.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="8.0808%" y="357" width="0.0842%" height="15" fill="rgb(232,203,3)" fg:x="96" fg:w="1"/><text x="8.3308%" y="367.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.08%)</title><rect x="8.0808%" y="341" width="0.0842%" height="15" fill="rgb(214,202,43)" fg:x="96" fg:w="1"/><text x="8.3308%" y="351.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.08%)</title><rect x="8.0808%" y="325" width="0.0842%" height="15" fill="rgb(254,35,11)" fg:x="96" fg:w="1"/><text x="8.3308%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.26%)</title><rect x="7.0707%" y="469" width="1.2626%" height="15" fill="rgb(239,173,13)" fg:x="84" fg:w="15"/><text x="7.3207%" y="479.50"></text></g><g><title>glob::fill_todo (15 samples, 1.26%)</title><rect x="7.0707%" y="453" width="1.2626%" height="15" fill="rgb(220,141,0)" fg:x="84" fg:w="15"/><text x="7.3207%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.25%)</title><rect x="8.0808%" y="437" width="0.2525%" height="15" fill="rgb(210,98,12)" fg:x="96" fg:w="3"/><text x="8.3308%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.25%)</title><rect x="8.0808%" y="421" width="0.2525%" height="15" fill="rgb(254,153,22)" fg:x="96" fg:w="3"/><text x="8.3308%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.25%)</title><rect x="8.0808%" y="405" width="0.2525%" height="15" fill="rgb(247,223,17)" fg:x="96" fg:w="3"/><text x="8.3308%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.25%)</title><rect x="8.0808%" y="389" width="0.2525%" height="15" fill="rgb(246,56,7)" fg:x="96" fg:w="3"/><text x="8.3308%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.25%)</title><rect x="8.0808%" y="373" width="0.2525%" height="15" fill="rgb(240,226,12)" fg:x="96" fg:w="3"/><text x="8.3308%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.17%)</title><rect x="8.1650%" y="357" width="0.1684%" height="15" fill="rgb(205,87,46)" fg:x="97" fg:w="2"/><text x="8.4150%" y="367.50"></text></g><g><title>statx (2 samples, 0.17%)</title><rect x="8.1650%" y="341" width="0.1684%" height="15" fill="rgb(245,214,51)" fg:x="97" fg:w="2"/><text x="8.4150%" y="351.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.5017%" y="437" width="0.0842%" height="15" fill="rgb(223,172,33)" fg:x="101" fg:w="1"/><text x="8.7517%" y="447.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.5017%" y="421" width="0.0842%" height="15" fill="rgb(227,203,34)" fg:x="101" fg:w="1"/><text x="8.7517%" y="431.50"></text></g><g><title>std::path::Components::parse_next_component (1 samples, 0.08%)</title><rect x="8.5017%" y="405" width="0.0842%" height="15" fill="rgb(248,143,44)" fg:x="101" fg:w="1"/><text x="8.7517%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.08%)</title><rect x="8.5017%" y="389" width="0.0842%" height="15" fill="rgb(226,162,5)" fg:x="101" fg:w="1"/><text x="8.7517%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="8.5859%" y="437" width="0.2525%" height="15" fill="rgb(211,143,1)" fg:x="102" fg:w="3"/><text x="8.8359%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.9226%" y="421" width="0.0842%" height="15" fill="rgb(224,96,15)" fg:x="106" fg:w="1"/><text x="9.1726%" y="431.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (34 samples, 2.86%)</title><rect x="6.2290%" y="501" width="2.8620%" height="15" fill="rgb(222,4,38)" fg:x="74" fg:w="34"/><text x="6.4790%" y="511.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_directory_sources (24 samples, 2.02%)</title><rect x="7.0707%" y="485" width="2.0202%" height="15" fill="rgb(253,228,15)" fg:x="84" fg:w="24"/><text x="7.3207%" y="495.50">p..</text></g><g><title>glob::glob (9 samples, 0.76%)</title><rect x="8.3333%" y="469" width="0.7576%" height="15" fill="rgb(242,194,12)" fg:x="99" fg:w="9"/><text x="8.5833%" y="479.50"></text></g><g><title>glob::glob_with (9 samples, 0.76%)</title><rect x="8.3333%" y="453" width="0.7576%" height="15" fill="rgb(214,177,31)" fg:x="99" fg:w="9"/><text x="8.5833%" y="463.50"></text></g><g><title>glob::Pattern::new (3 samples, 0.25%)</title><rect x="8.8384%" y="437" width="0.2525%" height="15" fill="rgb(226,58,51)" fg:x="105" fg:w="3"/><text x="9.0884%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.0067%" y="421" width="0.0842%" height="15" fill="rgb(250,119,16)" fg:x="107" fg:w="1"/><text x="9.2567%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.0067%" y="405" width="0.0842%" height="15" fill="rgb(223,128,53)" fg:x="107" fg:w="1"/><text x="9.2567%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.0067%" y="389" width="0.0842%" height="15" fill="rgb(251,199,15)" fg:x="107" fg:w="1"/><text x="9.2567%" y="399.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="9.2593%" y="437" width="0.0842%" height="15" fill="rgb(235,168,42)" fg:x="110" fg:w="1"/><text x="9.5093%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.2593%" y="421" width="0.0842%" height="15" fill="rgb(250,210,17)" fg:x="110" fg:w="1"/><text x="9.5093%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.17%)</title><rect x="9.3434%" y="437" width="0.1684%" height="15" fill="rgb(226,36,41)" fg:x="111" fg:w="2"/><text x="9.5934%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.4276%" y="421" width="0.0842%" height="15" fill="rgb(225,87,10)" fg:x="112" fg:w="1"/><text x="9.6776%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.4276%" y="405" width="0.0842%" height="15" fill="rgb(228,83,9)" fg:x="112" fg:w="1"/><text x="9.6776%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5118%" y="421" width="0.0842%" height="15" fill="rgb(225,16,36)" fg:x="113" fg:w="1"/><text x="9.7618%" y="431.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (7 samples, 0.59%)</title><rect x="9.1751%" y="469" width="0.5892%" height="15" fill="rgb(242,198,13)" fg:x="109" fg:w="7"/><text x="9.4251%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (7 samples, 0.59%)</title><rect x="9.1751%" y="453" width="0.5892%" height="15" fill="rgb(239,25,51)" fg:x="109" fg:w="7"/><text x="9.4251%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (3 samples, 0.25%)</title><rect x="9.5118%" y="437" width="0.2525%" height="15" fill="rgb(239,28,37)" fg:x="113" fg:w="3"/><text x="9.7618%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.17%)</title><rect x="9.5960%" y="421" width="0.1684%" height="15" fill="rgb(234,70,17)" fg:x="114" fg:w="2"/><text x="9.8460%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="9.5960%" y="405" width="0.1684%" height="15" fill="rgb(231,215,53)" fg:x="114" fg:w="2"/><text x="9.8460%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="9.5960%" y="389" width="0.1684%" height="15" fill="rgb(218,140,42)" fg:x="114" fg:w="2"/><text x="9.8460%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.8485%" y="437" width="0.0842%" height="15" fill="rgb(233,227,45)" fg:x="117" fg:w="1"/><text x="10.0985%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.8485%" y="421" width="0.0842%" height="15" fill="rgb(225,189,21)" fg:x="117" fg:w="1"/><text x="10.0985%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.8485%" y="405" width="0.0842%" height="15" fill="rgb(237,176,54)" fg:x="117" fg:w="1"/><text x="10.0985%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.25%)</title><rect x="9.7643%" y="469" width="0.2525%" height="15" fill="rgb(215,131,46)" fg:x="116" fg:w="3"/><text x="10.0143%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.25%)</title><rect x="9.7643%" y="453" width="0.2525%" height="15" fill="rgb(218,95,20)" fg:x="116" fg:w="3"/><text x="10.0143%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="9.9327%" y="437" width="0.0842%" height="15" fill="rgb(208,198,12)" fg:x="118" fg:w="1"/><text x="10.1827%" y="447.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="10.0168%" y="469" width="0.0842%" height="15" fill="rgb(239,107,50)" fg:x="119" fg:w="1"/><text x="10.2668%" y="479.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="10.1010%" y="469" width="0.0842%" height="15" fill="rgb(240,217,37)" fg:x="120" fg:w="1"/><text x="10.3510%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="10.1010%" y="453" width="0.0842%" height="15" fill="rgb(242,197,49)" fg:x="120" fg:w="1"/><text x="10.3510%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="10.1010%" y="437" width="0.0842%" height="15" fill="rgb(219,171,17)" fg:x="120" fg:w="1"/><text x="10.3510%" y="447.50"></text></g><g><title>&lt;plugins_rune::actions::RuneAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="10.2694%" y="437" width="0.0842%" height="15" fill="rgb(209,81,40)" fg:x="122" fg:w="1"/><text x="10.5194%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="10.2694%" y="421" width="0.0842%" height="15" fill="rgb(237,156,30)" fg:x="122" fg:w="1"/><text x="10.5194%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="10.2694%" y="405" width="0.0842%" height="15" fill="rgb(212,127,16)" fg:x="122" fg:w="1"/><text x="10.5194%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.2694%" y="389" width="0.0842%" height="15" fill="rgb(226,66,32)" fg:x="122" fg:w="1"/><text x="10.5194%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.2694%" y="373" width="0.0842%" height="15" fill="rgb(245,22,46)" fg:x="122" fg:w="1"/><text x="10.5194%" y="383.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.25%)</title><rect x="10.1852%" y="469" width="0.2525%" height="15" fill="rgb(210,112,21)" fg:x="121" fg:w="3"/><text x="10.4352%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.17%)</title><rect x="10.2694%" y="453" width="0.1684%" height="15" fill="rgb(207,118,39)" fg:x="122" fg:w="2"/><text x="10.5194%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="10.3535%" y="437" width="0.0842%" height="15" fill="rgb(205,206,35)" fg:x="123" fg:w="1"/><text x="10.6035%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (19 samples, 1.60%)</title><rect x="9.0909%" y="501" width="1.5993%" height="15" fill="rgb(222,120,2)" fg:x="108" fg:w="19"/><text x="9.3409%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.60%)</title><rect x="9.0909%" y="485" width="1.5993%" height="15" fill="rgb(205,38,18)" fg:x="108" fg:w="19"/><text x="9.3409%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.25%)</title><rect x="10.4377%" y="469" width="0.2525%" height="15" fill="rgb(226,61,2)" fg:x="124" fg:w="3"/><text x="10.6877%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="10.5219%" y="453" width="0.1684%" height="15" fill="rgb(242,161,23)" fg:x="125" fg:w="2"/><text x="10.7719%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="10.6061%" y="437" width="0.0842%" height="15" fill="rgb(213,13,52)" fg:x="126" fg:w="1"/><text x="10.8561%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.6902%" y="501" width="0.0842%" height="15" fill="rgb(246,209,47)" fg:x="127" fg:w="1"/><text x="10.9402%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="10.8586%" y="485" width="0.2525%" height="15" fill="rgb(214,41,3)" fg:x="129" fg:w="3"/><text x="11.1086%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (6 samples, 0.51%)</title><rect x="10.7744%" y="501" width="0.5051%" height="15" fill="rgb(236,119,38)" fg:x="128" fg:w="6"/><text x="11.0244%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (2 samples, 0.17%)</title><rect x="11.1111%" y="485" width="0.1684%" height="15" fill="rgb(218,50,11)" fg:x="132" fg:w="2"/><text x="11.3611%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.1953%" y="469" width="0.0842%" height="15" fill="rgb(228,38,11)" fg:x="133" fg:w="1"/><text x="11.4453%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (74 samples, 6.23%)</title><rect x="5.3030%" y="517" width="6.2290%" height="15" fill="rgb(212,13,9)" fg:x="63" fg:w="74"/><text x="5.5530%" y="527.50">kernel::..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.25%)</title><rect x="11.2795%" y="501" width="0.2525%" height="15" fill="rgb(208,211,9)" fg:x="134" fg:w="3"/><text x="11.5295%" y="511.50"></text></g><g><title>clock_gettime (2 samples, 0.17%)</title><rect x="11.3636%" y="485" width="0.1684%" height="15" fill="rgb(239,39,32)" fg:x="135" fg:w="2"/><text x="11.6136%" y="495.50"></text></g><g><title>engine::session::Session::initialize (78 samples, 6.57%)</title><rect x="5.0505%" y="533" width="6.5657%" height="15" fill="rgb(254,179,26)" fg:x="60" fg:w="78"/><text x="5.3005%" y="543.50">engine::s..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="11.5320%" y="517" width="0.0842%" height="15" fill="rgb(249,165,28)" fg:x="137" fg:w="1"/><text x="11.7820%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="11.5320%" y="501" width="0.0842%" height="15" fill="rgb(225,59,50)" fg:x="137" fg:w="1"/><text x="11.7820%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="11.5320%" y="485" width="0.0842%" height="15" fill="rgb(209,122,5)" fg:x="137" fg:w="1"/><text x="11.7820%" y="495.50"></text></g><g><title>&lt;plugins_rune::RunePluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="11.7003%" y="501" width="0.0842%" height="15" fill="rgb(214,65,34)" fg:x="139" fg:w="1"/><text x="11.9503%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (84 samples, 7.07%)</title><rect x="4.7980%" y="581" width="7.0707%" height="15" fill="rgb(249,183,32)" fg:x="57" fg:w="84"/><text x="5.0480%" y="591.50">&lt;engine::..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (84 samples, 7.07%)</title><rect x="4.7980%" y="565" width="7.0707%" height="15" fill="rgb(218,122,24)" fg:x="57" fg:w="84"/><text x="5.0480%" y="575.50">engine::d..</text></g><g><title>engine::session::Session::new (83 samples, 6.99%)</title><rect x="4.8822%" y="549" width="6.9865%" height="15" fill="rgb(224,109,18)" fg:x="58" fg:w="83"/><text x="5.1322%" y="559.50">engine::s..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.25%)</title><rect x="11.6162%" y="533" width="0.2525%" height="15" fill="rgb(210,68,50)" fg:x="138" fg:w="3"/><text x="11.8662%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="11.6162%" y="517" width="0.2525%" height="15" fill="rgb(212,184,34)" fg:x="138" fg:w="3"/><text x="11.8662%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7845%" y="501" width="0.0842%" height="15" fill="rgb(238,105,48)" fg:x="140" fg:w="1"/><text x="12.0345%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0370%" y="517" width="0.0842%" height="15" fill="rgb(222,134,54)" fg:x="143" fg:w="1"/><text x="12.2870%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1212%" y="501" width="0.0842%" height="15" fill="rgb(246,24,43)" fg:x="144" fg:w="1"/><text x="12.3712%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.34%)</title><rect x="11.9529%" y="565" width="0.3367%" height="15" fill="rgb(227,169,22)" fg:x="142" fg:w="4"/><text x="12.2029%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (3 samples, 0.25%)</title><rect x="12.0370%" y="549" width="0.2525%" height="15" fill="rgb(253,152,4)" fg:x="143" fg:w="3"/><text x="12.2870%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.25%)</title><rect x="12.0370%" y="533" width="0.2525%" height="15" fill="rgb(219,158,36)" fg:x="143" fg:w="3"/><text x="12.2870%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="12.1212%" y="517" width="0.1684%" height="15" fill="rgb(251,128,40)" fg:x="144" fg:w="2"/><text x="12.3712%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.2054%" y="501" width="0.0842%" height="15" fill="rgb(254,101,39)" fg:x="145" fg:w="1"/><text x="12.4554%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.2054%" y="485" width="0.0842%" height="15" fill="rgb(221,168,40)" fg:x="145" fg:w="1"/><text x="12.4554%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2896%" y="565" width="0.0842%" height="15" fill="rgb(221,14,27)" fg:x="146" fg:w="1"/><text x="12.5396%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="12.3737%" y="549" width="0.0842%" height="15" fill="rgb(207,36,43)" fg:x="147" fg:w="1"/><text x="12.6237%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3737%" y="533" width="0.0842%" height="15" fill="rgb(240,172,53)" fg:x="147" fg:w="1"/><text x="12.6237%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.4579%" y="517" width="0.0842%" height="15" fill="rgb(241,138,43)" fg:x="148" fg:w="1"/><text x="12.7079%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.4579%" y="501" width="0.0842%" height="15" fill="rgb(227,78,19)" fg:x="148" fg:w="1"/><text x="12.7079%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.4579%" y="485" width="0.0842%" height="15" fill="rgb(215,127,44)" fg:x="148" fg:w="1"/><text x="12.7079%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.4579%" y="469" width="0.0842%" height="15" fill="rgb(227,13,10)" fg:x="148" fg:w="1"/><text x="12.7079%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.5421%" y="517" width="0.0842%" height="15" fill="rgb(249,177,6)" fg:x="149" fg:w="1"/><text x="12.7921%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="12.5421%" y="501" width="0.0842%" height="15" fill="rgb(215,154,26)" fg:x="149" fg:w="1"/><text x="12.7921%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5421%" y="485" width="0.0842%" height="15" fill="rgb(250,168,20)" fg:x="149" fg:w="1"/><text x="12.7921%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="13.0471%" y="405" width="0.0842%" height="15" fill="rgb(222,53,38)" fg:x="155" fg:w="1"/><text x="13.2971%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.0471%" y="389" width="0.0842%" height="15" fill="rgb(245,154,5)" fg:x="155" fg:w="1"/><text x="13.2971%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="13.0471%" y="421" width="0.1684%" height="15" fill="rgb(214,89,50)" fg:x="155" fg:w="2"/><text x="13.2971%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.1313%" y="405" width="0.0842%" height="15" fill="rgb(232,73,14)" fg:x="156" fg:w="1"/><text x="13.3813%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.51%)</title><rect x="12.8788%" y="453" width="0.5051%" height="15" fill="rgb(230,101,20)" fg:x="153" fg:w="6"/><text x="13.1288%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.42%)</title><rect x="12.9630%" y="437" width="0.4209%" height="15" fill="rgb(208,56,28)" fg:x="154" fg:w="5"/><text x="13.2130%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="13.2155%" y="421" width="0.1684%" height="15" fill="rgb(247,205,22)" fg:x="157" fg:w="2"/><text x="13.4655%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.67%)</title><rect x="12.7946%" y="469" width="0.6734%" height="15" fill="rgb(252,109,51)" fg:x="152" fg:w="8"/><text x="13.0446%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.3838%" y="453" width="0.0842%" height="15" fill="rgb(220,40,24)" fg:x="159" fg:w="1"/><text x="13.6338%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.4680%" y="405" width="0.0842%" height="15" fill="rgb(251,108,7)" fg:x="160" fg:w="1"/><text x="13.7180%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.4680%" y="389" width="0.0842%" height="15" fill="rgb(238,102,51)" fg:x="160" fg:w="1"/><text x="13.7180%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.4680%" y="373" width="0.0842%" height="15" fill="rgb(219,149,34)" fg:x="160" fg:w="1"/><text x="13.7180%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.4680%" y="357" width="0.0842%" height="15" fill="rgb(239,70,0)" fg:x="160" fg:w="1"/><text x="13.7180%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.17%)</title><rect x="13.4680%" y="469" width="0.1684%" height="15" fill="rgb(246,214,23)" fg:x="160" fg:w="2"/><text x="13.7180%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="13.4680%" y="453" width="0.1684%" height="15" fill="rgb(239,221,51)" fg:x="160" fg:w="2"/><text x="13.7180%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="13.4680%" y="437" width="0.1684%" height="15" fill="rgb(254,62,14)" fg:x="160" fg:w="2"/><text x="13.7180%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="13.4680%" y="421" width="0.1684%" height="15" fill="rgb(253,57,33)" fg:x="160" fg:w="2"/><text x="13.7180%" y="431.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="13.5522%" y="405" width="0.0842%" height="15" fill="rgb(229,34,6)" fg:x="161" fg:w="1"/><text x="13.8022%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="13.7205%" y="437" width="0.2525%" height="15" fill="rgb(235,191,23)" fg:x="163" fg:w="3"/><text x="13.9705%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="13.8047%" y="421" width="0.1684%" height="15" fill="rgb(217,207,27)" fg:x="164" fg:w="2"/><text x="14.0547%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="13.8047%" y="405" width="0.1684%" height="15" fill="rgb(232,41,44)" fg:x="164" fg:w="2"/><text x="14.0547%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.8889%" y="389" width="0.0842%" height="15" fill="rgb(221,188,19)" fg:x="165" fg:w="1"/><text x="14.1389%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.42%)</title><rect x="13.6364%" y="453" width="0.4209%" height="15" fill="rgb(245,180,45)" fg:x="162" fg:w="5"/><text x="13.8864%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.9731%" y="437" width="0.0842%" height="15" fill="rgb(250,220,42)" fg:x="166" fg:w="1"/><text x="14.2231%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.9731%" y="421" width="0.0842%" height="15" fill="rgb(234,16,34)" fg:x="166" fg:w="1"/><text x="14.2231%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.2256%" y="437" width="0.0842%" height="15" fill="rgb(233,217,23)" fg:x="169" fg:w="1"/><text x="14.4756%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.3098%" y="437" width="0.0842%" height="15" fill="rgb(209,22,46)" fg:x="170" fg:w="1"/><text x="14.5598%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.3098%" y="421" width="0.0842%" height="15" fill="rgb(213,101,18)" fg:x="170" fg:w="1"/><text x="14.5598%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.3098%" y="405" width="0.0842%" height="15" fill="rgb(215,179,52)" fg:x="170" fg:w="1"/><text x="14.5598%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.42%)</title><rect x="14.3939%" y="437" width="0.4209%" height="15" fill="rgb(223,50,25)" fg:x="171" fg:w="5"/><text x="14.6439%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.7306%" y="421" width="0.0842%" height="15" fill="rgb(224,51,44)" fg:x="175" fg:w="1"/><text x="14.9806%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.7306%" y="405" width="0.0842%" height="15" fill="rgb(224,13,54)" fg:x="175" fg:w="1"/><text x="14.9806%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.7306%" y="389" width="0.0842%" height="15" fill="rgb(219,58,47)" fg:x="175" fg:w="1"/><text x="14.9806%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="15.0673%" y="421" width="0.1684%" height="15" fill="rgb(246,124,34)" fg:x="179" fg:w="2"/><text x="15.3173%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.3199%" y="373" width="0.0842%" height="15" fill="rgb(245,109,25)" fg:x="182" fg:w="1"/><text x="15.5699%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="15.2357%" y="405" width="0.2525%" height="15" fill="rgb(235,48,23)" fg:x="181" fg:w="3"/><text x="15.4857%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="15.3199%" y="389" width="0.1684%" height="15" fill="rgb(229,203,36)" fg:x="182" fg:w="2"/><text x="15.5699%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="15.4040%" y="373" width="0.0842%" height="15" fill="rgb(234,180,9)" fg:x="183" fg:w="1"/><text x="15.6540%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.4040%" y="357" width="0.0842%" height="15" fill="rgb(228,98,45)" fg:x="183" fg:w="1"/><text x="15.6540%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.4040%" y="341" width="0.0842%" height="15" fill="rgb(240,24,36)" fg:x="183" fg:w="1"/><text x="15.6540%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.4040%" y="325" width="0.0842%" height="15" fill="rgb(227,154,19)" fg:x="183" fg:w="1"/><text x="15.6540%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.34%)</title><rect x="15.2357%" y="421" width="0.3367%" height="15" fill="rgb(231,2,48)" fg:x="181" fg:w="4"/><text x="15.4857%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.4882%" y="405" width="0.0842%" height="15" fill="rgb(219,216,0)" fg:x="184" fg:w="1"/><text x="15.7382%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.42%)</title><rect x="15.5724%" y="421" width="0.4209%" height="15" fill="rgb(251,88,0)" fg:x="185" fg:w="5"/><text x="15.8224%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.34%)</title><rect x="15.6566%" y="405" width="0.3367%" height="15" fill="rgb(242,45,45)" fg:x="186" fg:w="4"/><text x="15.9066%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="15.8249%" y="389" width="0.1684%" height="15" fill="rgb(218,149,45)" fg:x="188" fg:w="2"/><text x="16.0749%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="15.8249%" y="373" width="0.1684%" height="15" fill="rgb(247,194,10)" fg:x="188" fg:w="2"/><text x="16.0749%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.0774%" y="405" width="0.0842%" height="15" fill="rgb(234,33,37)" fg:x="191" fg:w="1"/><text x="16.3274%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.0774%" y="389" width="0.0842%" height="15" fill="rgb(218,61,13)" fg:x="191" fg:w="1"/><text x="16.3274%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.0774%" y="373" width="0.0842%" height="15" fill="rgb(210,80,52)" fg:x="191" fg:w="1"/><text x="16.3274%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.0774%" y="357" width="0.0842%" height="15" fill="rgb(218,203,27)" fg:x="191" fg:w="1"/><text x="16.3274%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.0774%" y="341" width="0.0842%" height="15" fill="rgb(209,126,33)" fg:x="191" fg:w="1"/><text x="16.3274%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.0774%" y="325" width="0.0842%" height="15" fill="rgb(234,173,41)" fg:x="191" fg:w="1"/><text x="16.3274%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.0774%" y="309" width="0.0842%" height="15" fill="rgb(228,166,9)" fg:x="191" fg:w="1"/><text x="16.3274%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.34%)</title><rect x="16.1616%" y="389" width="0.3367%" height="15" fill="rgb(208,124,43)" fg:x="192" fg:w="4"/><text x="16.4116%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="16.2458%" y="373" width="0.2525%" height="15" fill="rgb(212,154,38)" fg:x="193" fg:w="3"/><text x="16.4958%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="16.3300%" y="357" width="0.1684%" height="15" fill="rgb(246,179,35)" fg:x="194" fg:w="2"/><text x="16.5800%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.4141%" y="341" width="0.0842%" height="15" fill="rgb(251,3,50)" fg:x="195" fg:w="1"/><text x="16.6641%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.4141%" y="325" width="0.0842%" height="15" fill="rgb(219,96,8)" fg:x="195" fg:w="1"/><text x="16.6641%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.4141%" y="309" width="0.0842%" height="15" fill="rgb(251,216,33)" fg:x="195" fg:w="1"/><text x="16.6641%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.4141%" y="293" width="0.0842%" height="15" fill="rgb(243,145,29)" fg:x="195" fg:w="1"/><text x="16.6641%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.77%)</title><rect x="14.8148%" y="437" width="1.7677%" height="15" fill="rgb(210,75,20)" fg:x="176" fg:w="21"/><text x="15.0648%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.59%)</title><rect x="15.9933%" y="421" width="0.5892%" height="15" fill="rgb(235,56,8)" fg:x="190" fg:w="7"/><text x="16.2433%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.42%)</title><rect x="16.1616%" y="405" width="0.4209%" height="15" fill="rgb(226,175,49)" fg:x="192" fg:w="5"/><text x="16.4116%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.4983%" y="389" width="0.0842%" height="15" fill="rgb(242,204,23)" fg:x="196" fg:w="1"/><text x="16.7483%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.61%)</title><rect x="14.0572%" y="453" width="2.6094%" height="15" fill="rgb(225,104,24)" fg:x="167" fg:w="31"/><text x="14.3072%" y="463.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.5825%" y="437" width="0.0842%" height="15" fill="rgb(253,34,1)" fg:x="197" fg:w="1"/><text x="16.8325%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (37 samples, 3.11%)</title><rect x="13.6364%" y="469" width="3.1145%" height="15" fill="rgb(233,199,23)" fg:x="162" fg:w="37"/><text x="13.8864%" y="479.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.6667%" y="453" width="0.0842%" height="15" fill="rgb(247,7,51)" fg:x="198" fg:w="1"/><text x="16.9167%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.6667%" y="437" width="0.0842%" height="15" fill="rgb(214,146,12)" fg:x="198" fg:w="1"/><text x="16.9167%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.6667%" y="421" width="0.0842%" height="15" fill="rgb(234,181,43)" fg:x="198" fg:w="1"/><text x="16.9167%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.6667%" y="405" width="0.0842%" height="15" fill="rgb(239,148,6)" fg:x="198" fg:w="1"/><text x="16.9167%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.6667%" y="389" width="0.0842%" height="15" fill="rgb(206,151,17)" fg:x="198" fg:w="1"/><text x="16.9167%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.08%)</title><rect x="16.7508%" y="469" width="0.0842%" height="15" fill="rgb(213,215,10)" fg:x="199" fg:w="1"/><text x="17.0008%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="16.8350%" y="373" width="0.1684%" height="15" fill="rgb(215,220,44)" fg:x="200" fg:w="2"/><text x="17.0850%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.25%)</title><rect x="16.8350%" y="453" width="0.2525%" height="15" fill="rgb(245,205,37)" fg:x="200" fg:w="3"/><text x="17.0850%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (3 samples, 0.25%)</title><rect x="16.8350%" y="437" width="0.2525%" height="15" fill="rgb(245,130,43)" fg:x="200" fg:w="3"/><text x="17.0850%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="16.8350%" y="421" width="0.2525%" height="15" fill="rgb(231,227,38)" fg:x="200" fg:w="3"/><text x="17.0850%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.25%)</title><rect x="16.8350%" y="405" width="0.2525%" height="15" fill="rgb(233,185,4)" fg:x="200" fg:w="3"/><text x="17.0850%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.25%)</title><rect x="16.8350%" y="389" width="0.2525%" height="15" fill="rgb(224,154,43)" fg:x="200" fg:w="3"/><text x="17.0850%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="17.0034%" y="373" width="0.0842%" height="15" fill="rgb(235,156,15)" fg:x="202" fg:w="1"/><text x="17.2534%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0875%" y="421" width="0.0842%" height="15" fill="rgb(211,55,43)" fg:x="203" fg:w="1"/><text x="17.3375%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.34%)</title><rect x="17.1717%" y="421" width="0.3367%" height="15" fill="rgb(247,149,40)" fg:x="204" fg:w="4"/><text x="17.4217%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.17%)</title><rect x="17.3401%" y="405" width="0.1684%" height="15" fill="rgb(232,171,16)" fg:x="206" fg:w="2"/><text x="17.5901%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.17%)</title><rect x="17.5084%" y="421" width="0.1684%" height="15" fill="rgb(215,117,49)" fg:x="208" fg:w="2"/><text x="17.7584%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.5926%" y="405" width="0.0842%" height="15" fill="rgb(246,194,11)" fg:x="209" fg:w="1"/><text x="17.8426%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5926%" y="389" width="0.0842%" height="15" fill="rgb(242,101,44)" fg:x="209" fg:w="1"/><text x="17.8426%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.5926%" y="373" width="0.0842%" height="15" fill="rgb(226,174,6)" fg:x="209" fg:w="1"/><text x="17.8426%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="17.6768%" y="405" width="0.0842%" height="15" fill="rgb(213,150,20)" fg:x="210" fg:w="1"/><text x="17.9268%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.17%)</title><rect x="17.6768%" y="421" width="0.1684%" height="15" fill="rgb(222,124,42)" fg:x="210" fg:w="2"/><text x="17.9268%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.7609%" y="405" width="0.0842%" height="15" fill="rgb(250,19,47)" fg:x="211" fg:w="1"/><text x="18.0109%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9293%" y="389" width="0.0842%" height="15" fill="rgb(241,217,19)" fg:x="213" fg:w="1"/><text x="18.1793%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.25%)</title><rect x="17.8451%" y="421" width="0.2525%" height="15" fill="rgb(207,210,34)" fg:x="212" fg:w="3"/><text x="18.0951%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="17.9293%" y="405" width="0.1684%" height="15" fill="rgb(244,45,4)" fg:x="213" fg:w="2"/><text x="18.1793%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0135%" y="389" width="0.0842%" height="15" fill="rgb(252,134,50)" fg:x="214" fg:w="1"/><text x="18.2635%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.3502%" y="373" width="0.0842%" height="15" fill="rgb(238,74,2)" fg:x="218" fg:w="1"/><text x="18.6002%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3502%" y="357" width="0.0842%" height="15" fill="rgb(226,58,46)" fg:x="218" fg:w="1"/><text x="18.6002%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6027%" y="309" width="0.0842%" height="15" fill="rgb(232,83,35)" fg:x="221" fg:w="1"/><text x="18.8527%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="18.5185%" y="325" width="0.2525%" height="15" fill="rgb(212,148,47)" fg:x="220" fg:w="3"/><text x="18.7685%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.6869%" y="309" width="0.0842%" height="15" fill="rgb(235,29,1)" fg:x="222" fg:w="1"/><text x="18.9369%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.7710%" y="277" width="0.0842%" height="15" fill="rgb(247,55,37)" fg:x="223" fg:w="1"/><text x="19.0210%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.51%)</title><rect x="18.4343%" y="373" width="0.5051%" height="15" fill="rgb(222,48,3)" fg:x="219" fg:w="6"/><text x="18.6843%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.51%)</title><rect x="18.4343%" y="357" width="0.5051%" height="15" fill="rgb(234,21,33)" fg:x="219" fg:w="6"/><text x="18.6843%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.51%)</title><rect x="18.4343%" y="341" width="0.5051%" height="15" fill="rgb(247,178,53)" fg:x="219" fg:w="6"/><text x="18.6843%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="18.7710%" y="325" width="0.1684%" height="15" fill="rgb(225,75,7)" fg:x="223" fg:w="2"/><text x="19.0210%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="18.7710%" y="309" width="0.1684%" height="15" fill="rgb(219,199,7)" fg:x="223" fg:w="2"/><text x="19.0210%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="18.7710%" y="293" width="0.1684%" height="15" fill="rgb(209,93,42)" fg:x="223" fg:w="2"/><text x="19.0210%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.8552%" y="277" width="0.0842%" height="15" fill="rgb(240,175,17)" fg:x="224" fg:w="1"/><text x="19.1052%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8552%" y="261" width="0.0842%" height="15" fill="rgb(232,106,7)" fg:x="224" fg:w="1"/><text x="19.1052%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="19.0236%" y="341" width="0.1684%" height="15" fill="rgb(242,106,43)" fg:x="226" fg:w="2"/><text x="19.2736%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.1077%" y="325" width="0.0842%" height="15" fill="rgb(242,61,37)" fg:x="227" fg:w="1"/><text x="19.3577%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="19.0236%" y="357" width="0.2525%" height="15" fill="rgb(205,72,10)" fg:x="226" fg:w="3"/><text x="19.2736%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.1919%" y="341" width="0.0842%" height="15" fill="rgb(214,184,36)" fg:x="228" fg:w="1"/><text x="19.4419%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.1919%" y="325" width="0.0842%" height="15" fill="rgb(206,107,18)" fg:x="228" fg:w="1"/><text x="19.4419%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.1919%" y="309" width="0.0842%" height="15" fill="rgb(210,75,5)" fg:x="228" fg:w="1"/><text x="19.4419%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.1919%" y="293" width="0.0842%" height="15" fill="rgb(205,3,19)" fg:x="228" fg:w="1"/><text x="19.4419%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 1.01%)</title><rect x="18.3502%" y="389" width="1.0101%" height="15" fill="rgb(207,181,42)" fg:x="218" fg:w="12"/><text x="18.6002%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.42%)</title><rect x="18.9394%" y="373" width="0.4209%" height="15" fill="rgb(229,179,43)" fg:x="225" fg:w="5"/><text x="19.1894%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2761%" y="357" width="0.0842%" height="15" fill="rgb(246,95,30)" fg:x="229" fg:w="1"/><text x="19.5261%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.18%)</title><rect x="18.2660%" y="405" width="1.1785%" height="15" fill="rgb(234,144,45)" fg:x="217" fg:w="14"/><text x="18.5160%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="19.3603%" y="389" width="0.0842%" height="15" fill="rgb(250,54,25)" fg:x="230" fg:w="1"/><text x="19.6103%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3603%" y="373" width="0.0842%" height="15" fill="rgb(215,195,40)" fg:x="230" fg:w="1"/><text x="19.6103%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4444%" y="405" width="0.0842%" height="15" fill="rgb(233,188,42)" fg:x="231" fg:w="1"/><text x="19.6944%" y="415.50"></text></g><g><title>engine::session::Session::flush (86 samples, 7.24%)</title><rect x="12.3737%" y="565" width="7.2391%" height="15" fill="rgb(247,227,35)" fg:x="147" fg:w="86"/><text x="12.6237%" y="575.50">engine::se..</text></g><g><title>engine::session::state::State::close (85 samples, 7.15%)</title><rect x="12.4579%" y="549" width="7.1549%" height="15" fill="rgb(249,124,27)" fg:x="148" fg:w="85"/><text x="12.7079%" y="559.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (85 samples, 7.15%)</title><rect x="12.4579%" y="533" width="7.1549%" height="15" fill="rgb(219,207,25)" fg:x="148" fg:w="85"/><text x="12.7079%" y="543.50">engine::se..</text></g><g><title>core::iter::adapters::try_process (83 samples, 6.99%)</title><rect x="12.6263%" y="517" width="6.9865%" height="15" fill="rgb(241,216,47)" fg:x="150" fg:w="83"/><text x="12.8763%" y="527.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (83 samples, 6.99%)</title><rect x="12.6263%" y="501" width="6.9865%" height="15" fill="rgb(233,82,50)" fg:x="150" fg:w="83"/><text x="12.8763%" y="511.50">&lt;alloc::v..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (83 samples, 6.99%)</title><rect x="12.6263%" y="485" width="6.9865%" height="15" fill="rgb(232,63,2)" fg:x="150" fg:w="83"/><text x="12.8763%" y="495.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (33 samples, 2.78%)</title><rect x="16.8350%" y="469" width="2.7778%" height="15" fill="rgb(236,184,28)" fg:x="200" fg:w="33"/><text x="17.0850%" y="479.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (30 samples, 2.53%)</title><rect x="17.0875%" y="453" width="2.5253%" height="15" fill="rgb(254,63,27)" fg:x="203" fg:w="30"/><text x="17.3375%" y="463.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (30 samples, 2.53%)</title><rect x="17.0875%" y="437" width="2.5253%" height="15" fill="rgb(253,106,28)" fg:x="203" fg:w="30"/><text x="17.3375%" y="447.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.52%)</title><rect x="18.0976%" y="421" width="1.5152%" height="15" fill="rgb(225,141,39)" fg:x="215" fg:w="18"/><text x="18.3476%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5286%" y="405" width="0.0842%" height="15" fill="rgb(222,157,20)" fg:x="232" fg:w="1"/><text x="19.7786%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="19.6128%" y="533" width="0.0842%" height="15" fill="rgb(210,190,9)" fg:x="233" fg:w="1"/><text x="19.8628%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="19.6128%" y="517" width="0.0842%" height="15" fill="rgb(242,167,7)" fg:x="233" fg:w="1"/><text x="19.8628%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.17%)</title><rect x="19.6970%" y="533" width="0.1684%" height="15" fill="rgb(227,82,41)" fg:x="234" fg:w="2"/><text x="19.9470%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7811%" y="517" width="0.0842%" height="15" fill="rgb(222,131,13)" fg:x="235" fg:w="1"/><text x="20.0311%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="19.8653%" y="533" width="0.0842%" height="15" fill="rgb(221,98,26)" fg:x="236" fg:w="1"/><text x="20.1153%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.8653%" y="517" width="0.0842%" height="15" fill="rgb(251,63,52)" fg:x="236" fg:w="1"/><text x="20.1153%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.8653%" y="501" width="0.0842%" height="15" fill="rgb(246,25,43)" fg:x="236" fg:w="1"/><text x="20.1153%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.8653%" y="485" width="0.0842%" height="15" fill="rgb(247,167,15)" fg:x="236" fg:w="1"/><text x="20.1153%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.42%)</title><rect x="19.6128%" y="565" width="0.4209%" height="15" fill="rgb(240,104,42)" fg:x="233" fg:w="5"/><text x="19.8628%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (5 samples, 0.42%)</title><rect x="19.6128%" y="549" width="0.4209%" height="15" fill="rgb(224,54,6)" fg:x="233" fg:w="5"/><text x="19.8628%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9495%" y="533" width="0.0842%" height="15" fill="rgb(244,108,35)" fg:x="237" fg:w="1"/><text x="20.1995%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9495%" y="517" width="0.0842%" height="15" fill="rgb(216,154,2)" fg:x="237" fg:w="1"/><text x="20.1995%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.9495%" y="501" width="0.0842%" height="15" fill="rgb(222,8,47)" fg:x="237" fg:w="1"/><text x="20.1995%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9495%" y="485" width="0.0842%" height="15" fill="rgb(252,93,1)" fg:x="237" fg:w="1"/><text x="20.1995%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.9495%" y="469" width="0.0842%" height="15" fill="rgb(223,226,51)" fg:x="237" fg:w="1"/><text x="20.1995%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0337%" y="517" width="0.0842%" height="15" fill="rgb(206,147,9)" fg:x="238" fg:w="1"/><text x="20.2837%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0337%" y="501" width="0.0842%" height="15" fill="rgb(248,180,41)" fg:x="238" fg:w="1"/><text x="20.2837%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0337%" y="485" width="0.0842%" height="15" fill="rgb(209,47,50)" fg:x="238" fg:w="1"/><text x="20.2837%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0337%" y="469" width="0.0842%" height="15" fill="rgb(243,65,31)" fg:x="238" fg:w="1"/><text x="20.2837%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.0337%" y="453" width="0.0842%" height="15" fill="rgb(228,128,1)" fg:x="238" fg:w="1"/><text x="20.2837%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.0337%" y="437" width="0.0842%" height="15" fill="rgb(231,192,16)" fg:x="238" fg:w="1"/><text x="20.2837%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.0337%" y="421" width="0.0842%" height="15" fill="rgb(224,26,40)" fg:x="238" fg:w="1"/><text x="20.2837%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.0337%" y="405" width="0.0842%" height="15" fill="rgb(214,192,17)" fg:x="238" fg:w="1"/><text x="20.2837%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.0337%" y="389" width="0.0842%" height="15" fill="rgb(225,147,18)" fg:x="238" fg:w="1"/><text x="20.2837%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.0337%" y="373" width="0.0842%" height="15" fill="rgb(205,35,11)" fg:x="238" fg:w="1"/><text x="20.2837%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.0337%" y="357" width="0.0842%" height="15" fill="rgb(242,40,42)" fg:x="238" fg:w="1"/><text x="20.2837%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.0337%" y="341" width="0.0842%" height="15" fill="rgb(250,170,13)" fg:x="238" fg:w="1"/><text x="20.2837%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.0337%" y="325" width="0.0842%" height="15" fill="rgb(240,161,28)" fg:x="238" fg:w="1"/><text x="20.2837%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0337%" y="309" width="0.0842%" height="15" fill="rgb(245,179,12)" fg:x="238" fg:w="1"/><text x="20.2837%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.1178%" y="517" width="0.0842%" height="15" fill="rgb(250,92,32)" fg:x="239" fg:w="1"/><text x="20.3678%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.25%)</title><rect x="20.0337%" y="533" width="0.2525%" height="15" fill="rgb(233,10,40)" fg:x="238" fg:w="3"/><text x="20.2837%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.2020%" y="517" width="0.0842%" height="15" fill="rgb(217,98,1)" fg:x="240" fg:w="1"/><text x="20.4520%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2020%" y="501" width="0.0842%" height="15" fill="rgb(238,202,7)" fg:x="240" fg:w="1"/><text x="20.4520%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.2020%" y="485" width="0.0842%" height="15" fill="rgb(222,91,3)" fg:x="240" fg:w="1"/><text x="20.4520%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2020%" y="469" width="0.0842%" height="15" fill="rgb(211,170,49)" fg:x="240" fg:w="1"/><text x="20.4520%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.2020%" y="453" width="0.0842%" height="15" fill="rgb(253,139,18)" fg:x="240" fg:w="1"/><text x="20.4520%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2020%" y="437" width="0.0842%" height="15" fill="rgb(222,4,43)" fg:x="240" fg:w="1"/><text x="20.4520%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="20.2020%" y="421" width="0.0842%" height="15" fill="rgb(207,205,12)" fg:x="240" fg:w="1"/><text x="20.4520%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="20.2862%" y="501" width="0.1684%" height="15" fill="rgb(216,159,46)" fg:x="241" fg:w="2"/><text x="20.5362%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3704%" y="485" width="0.0842%" height="15" fill="rgb(236,115,1)" fg:x="242" fg:w="1"/><text x="20.6204%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.4545%" y="469" width="0.0842%" height="15" fill="rgb(251,35,33)" fg:x="243" fg:w="1"/><text x="20.7045%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.34%)</title><rect x="20.2862%" y="517" width="0.3367%" height="15" fill="rgb(248,62,51)" fg:x="241" fg:w="4"/><text x="20.5362%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.17%)</title><rect x="20.4545%" y="501" width="0.1684%" height="15" fill="rgb(254,180,19)" fg:x="243" fg:w="2"/><text x="20.7045%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="20.4545%" y="485" width="0.1684%" height="15" fill="rgb(217,100,32)" fg:x="243" fg:w="2"/><text x="20.7045%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.5387%" y="469" width="0.0842%" height="15" fill="rgb(224,71,22)" fg:x="244" fg:w="1"/><text x="20.7887%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5387%" y="453" width="0.0842%" height="15" fill="rgb(251,185,33)" fg:x="244" fg:w="1"/><text x="20.7887%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="20.5387%" y="437" width="0.0842%" height="15" fill="rgb(209,75,48)" fg:x="244" fg:w="1"/><text x="20.7887%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="20.6229%" y="501" width="0.0842%" height="15" fill="rgb(253,190,16)" fg:x="245" fg:w="1"/><text x="20.8729%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6229%" y="485" width="0.0842%" height="15" fill="rgb(226,140,1)" fg:x="245" fg:w="1"/><text x="20.8729%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.6229%" y="469" width="0.0842%" height="15" fill="rgb(206,75,30)" fg:x="245" fg:w="1"/><text x="20.8729%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.6229%" y="453" width="0.0842%" height="15" fill="rgb(231,208,37)" fg:x="245" fg:w="1"/><text x="20.8729%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.51%)</title><rect x="20.2862%" y="533" width="0.5051%" height="15" fill="rgb(238,136,40)" fg:x="241" fg:w="6"/><text x="20.5362%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.17%)</title><rect x="20.6229%" y="517" width="0.1684%" height="15" fill="rgb(247,137,17)" fg:x="245" fg:w="2"/><text x="20.8729%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="20.7071%" y="501" width="0.0842%" height="15" fill="rgb(240,60,40)" fg:x="246" fg:w="1"/><text x="20.9571%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.7071%" y="485" width="0.0842%" height="15" fill="rgb(236,68,50)" fg:x="246" fg:w="1"/><text x="20.9571%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7071%" y="469" width="0.0842%" height="15" fill="rgb(230,42,12)" fg:x="246" fg:w="1"/><text x="20.9571%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="20.7912%" y="485" width="0.0842%" height="15" fill="rgb(219,16,16)" fg:x="247" fg:w="1"/><text x="21.0412%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7912%" y="469" width="0.0842%" height="15" fill="rgb(220,38,35)" fg:x="247" fg:w="1"/><text x="21.0412%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7912%" y="453" width="0.0842%" height="15" fill="rgb(228,33,1)" fg:x="247" fg:w="1"/><text x="21.0412%" y="463.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="20.8754%" y="485" width="0.0842%" height="15" fill="rgb(241,46,31)" fg:x="248" fg:w="1"/><text x="21.1254%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8754%" y="469" width="0.0842%" height="15" fill="rgb(232,58,20)" fg:x="248" fg:w="1"/><text x="21.1254%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="20.7912%" y="517" width="0.2525%" height="15" fill="rgb(206,228,53)" fg:x="247" fg:w="3"/><text x="21.0412%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.25%)</title><rect x="20.7912%" y="501" width="0.2525%" height="15" fill="rgb(206,88,33)" fg:x="247" fg:w="3"/><text x="21.0412%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="20.9596%" y="485" width="0.0842%" height="15" fill="rgb(238,69,7)" fg:x="249" fg:w="1"/><text x="21.2096%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="20.9596%" y="469" width="0.0842%" height="15" fill="rgb(250,21,46)" fg:x="249" fg:w="1"/><text x="21.2096%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.0438%" y="501" width="0.0842%" height="15" fill="rgb(215,212,21)" fg:x="250" fg:w="1"/><text x="21.2938%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.0438%" y="485" width="0.0842%" height="15" fill="rgb(211,35,12)" fg:x="250" fg:w="1"/><text x="21.2938%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.0438%" y="469" width="0.0842%" height="15" fill="rgb(231,184,16)" fg:x="250" fg:w="1"/><text x="21.2938%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.0438%" y="453" width="0.0842%" height="15" fill="rgb(242,140,15)" fg:x="250" fg:w="1"/><text x="21.2938%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.0438%" y="437" width="0.0842%" height="15" fill="rgb(220,37,14)" fg:x="250" fg:w="1"/><text x="21.2938%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="21.0438%" y="421" width="0.0842%" height="15" fill="rgb(223,146,22)" fg:x="250" fg:w="1"/><text x="21.2938%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.0438%" y="405" width="0.0842%" height="15" fill="rgb(216,132,15)" fg:x="250" fg:w="1"/><text x="21.2938%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.17%)</title><rect x="21.0438%" y="517" width="0.1684%" height="15" fill="rgb(248,83,5)" fg:x="250" fg:w="2"/><text x="21.2938%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1279%" y="501" width="0.0842%" height="15" fill="rgb(231,206,48)" fg:x="251" fg:w="1"/><text x="21.3779%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="21.1279%" y="485" width="0.0842%" height="15" fill="rgb(253,185,37)" fg:x="251" fg:w="1"/><text x="21.3779%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1279%" y="469" width="0.0842%" height="15" fill="rgb(208,21,44)" fg:x="251" fg:w="1"/><text x="21.3779%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2121%" y="485" width="0.0842%" height="15" fill="rgb(236,125,4)" fg:x="252" fg:w="1"/><text x="21.4621%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2121%" y="469" width="0.0842%" height="15" fill="rgb(226,134,25)" fg:x="252" fg:w="1"/><text x="21.4621%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.2121%" y="453" width="0.0842%" height="15" fill="rgb(250,201,12)" fg:x="252" fg:w="1"/><text x="21.4621%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="21.2121%" y="437" width="0.0842%" height="15" fill="rgb(225,92,18)" fg:x="252" fg:w="1"/><text x="21.4621%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.25%)</title><rect x="21.2963%" y="485" width="0.2525%" height="15" fill="rgb(227,35,22)" fg:x="253" fg:w="3"/><text x="21.5463%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.25%)</title><rect x="21.2963%" y="469" width="0.2525%" height="15" fill="rgb(214,180,52)" fg:x="253" fg:w="3"/><text x="21.5463%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="21.2963%" y="453" width="0.2525%" height="15" fill="rgb(233,55,38)" fg:x="253" fg:w="3"/><text x="21.5463%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="21.2963%" y="437" width="0.2525%" height="15" fill="rgb(249,171,43)" fg:x="253" fg:w="3"/><text x="21.5463%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="21.3805%" y="421" width="0.1684%" height="15" fill="rgb(239,87,2)" fg:x="254" fg:w="2"/><text x="21.6305%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="21.3805%" y="405" width="0.1684%" height="15" fill="rgb(248,141,5)" fg:x="254" fg:w="2"/><text x="21.6305%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.4646%" y="389" width="0.0842%" height="15" fill="rgb(238,33,42)" fg:x="255" fg:w="1"/><text x="21.7146%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4646%" y="373" width="0.0842%" height="15" fill="rgb(231,57,19)" fg:x="255" fg:w="1"/><text x="21.7146%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4646%" y="357" width="0.0842%" height="15" fill="rgb(214,78,53)" fg:x="255" fg:w="1"/><text x="21.7146%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.60%)</title><rect x="20.0337%" y="549" width="1.5993%" height="15" fill="rgb(206,132,29)" fg:x="238" fg:w="19"/><text x="20.2837%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.84%)</title><rect x="20.7912%" y="533" width="0.8418%" height="15" fill="rgb(248,174,31)" fg:x="247" fg:w="10"/><text x="21.0412%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.42%)</title><rect x="21.2121%" y="517" width="0.4209%" height="15" fill="rgb(221,87,13)" fg:x="252" fg:w="5"/><text x="21.4621%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.42%)</title><rect x="21.2121%" y="501" width="0.4209%" height="15" fill="rgb(223,197,17)" fg:x="252" fg:w="5"/><text x="21.4621%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="21.5488%" y="485" width="0.0842%" height="15" fill="rgb(220,144,50)" fg:x="256" fg:w="1"/><text x="21.7988%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6330%" y="517" width="0.0842%" height="15" fill="rgb(244,201,11)" fg:x="257" fg:w="1"/><text x="21.8830%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="21.6330%" y="549" width="0.1684%" height="15" fill="rgb(249,81,34)" fg:x="257" fg:w="2"/><text x="21.8830%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="21.6330%" y="533" width="0.1684%" height="15" fill="rgb(205,161,12)" fg:x="257" fg:w="2"/><text x="21.8830%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7172%" y="517" width="0.0842%" height="15" fill="rgb(252,139,50)" fg:x="258" fg:w="1"/><text x="21.9672%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="21.8013%" y="533" width="0.1684%" height="15" fill="rgb(205,169,14)" fg:x="259" fg:w="2"/><text x="22.0513%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8855%" y="517" width="0.0842%" height="15" fill="rgb(248,198,33)" fg:x="260" fg:w="1"/><text x="22.1355%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8855%" y="501" width="0.0842%" height="15" fill="rgb(236,23,21)" fg:x="260" fg:w="1"/><text x="22.1355%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8855%" y="485" width="0.0842%" height="15" fill="rgb(231,13,38)" fg:x="260" fg:w="1"/><text x="22.1355%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8855%" y="469" width="0.0842%" height="15" fill="rgb(239,139,21)" fg:x="260" fg:w="1"/><text x="22.1355%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.8855%" y="453" width="0.0842%" height="15" fill="rgb(222,164,45)" fg:x="260" fg:w="1"/><text x="22.1355%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.8855%" y="437" width="0.0842%" height="15" fill="rgb(230,52,27)" fg:x="260" fg:w="1"/><text x="22.1355%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.8855%" y="421" width="0.0842%" height="15" fill="rgb(227,143,42)" fg:x="260" fg:w="1"/><text x="22.1355%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8855%" y="405" width="0.0842%" height="15" fill="rgb(249,127,1)" fg:x="260" fg:w="1"/><text x="22.1355%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8855%" y="389" width="0.0842%" height="15" fill="rgb(243,107,26)" fg:x="260" fg:w="1"/><text x="22.1355%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.8855%" y="373" width="0.0842%" height="15" fill="rgb(225,7,45)" fg:x="260" fg:w="1"/><text x="22.1355%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.8855%" y="357" width="0.0842%" height="15" fill="rgb(241,88,38)" fg:x="260" fg:w="1"/><text x="22.1355%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.8855%" y="341" width="0.0842%" height="15" fill="rgb(226,121,9)" fg:x="260" fg:w="1"/><text x="22.1355%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.8855%" y="325" width="0.0842%" height="15" fill="rgb(253,60,29)" fg:x="260" fg:w="1"/><text x="22.1355%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.8855%" y="309" width="0.0842%" height="15" fill="rgb(244,181,39)" fg:x="260" fg:w="1"/><text x="22.1355%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9697%" y="533" width="0.0842%" height="15" fill="rgb(252,203,31)" fg:x="261" fg:w="1"/><text x="22.2197%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.0539%" y="469" width="0.0842%" height="15" fill="rgb(224,120,8)" fg:x="262" fg:w="1"/><text x="22.3039%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.0539%" y="453" width="0.0842%" height="15" fill="rgb(205,171,54)" fg:x="262" fg:w="1"/><text x="22.3039%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0539%" y="437" width="0.0842%" height="15" fill="rgb(235,89,11)" fg:x="262" fg:w="1"/><text x="22.3039%" y="447.50"></text></g><g><title>plugins_core::build::Build::save (26 samples, 2.19%)</title><rect x="20.0337%" y="565" width="2.1886%" height="15" fill="rgb(212,180,28)" fg:x="238" fg:w="26"/><text x="20.2837%" y="575.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.42%)</title><rect x="21.8013%" y="549" width="0.4209%" height="15" fill="rgb(247,84,49)" fg:x="259" fg:w="5"/><text x="22.0513%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="22.0539%" y="533" width="0.1684%" height="15" fill="rgb(236,187,52)" fg:x="262" fg:w="2"/><text x="22.3039%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="22.0539%" y="517" width="0.1684%" height="15" fill="rgb(227,24,15)" fg:x="262" fg:w="2"/><text x="22.3039%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="22.0539%" y="501" width="0.1684%" height="15" fill="rgb(227,211,13)" fg:x="262" fg:w="2"/><text x="22.3039%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="22.0539%" y="485" width="0.1684%" height="15" fill="rgb(245,52,14)" fg:x="262" fg:w="2"/><text x="22.3039%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.1380%" y="469" width="0.0842%" height="15" fill="rgb(225,185,13)" fg:x="263" fg:w="1"/><text x="22.3880%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.1380%" y="453" width="0.0842%" height="15" fill="rgb(217,160,29)" fg:x="263" fg:w="1"/><text x="22.3880%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (2 samples, 0.17%)</title><rect x="22.2222%" y="565" width="0.1684%" height="15" fill="rgb(216,115,53)" fg:x="264" fg:w="2"/><text x="22.4722%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (2 samples, 0.17%)</title><rect x="22.2222%" y="549" width="0.1684%" height="15" fill="rgb(236,99,5)" fg:x="264" fg:w="2"/><text x="22.4722%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.17%)</title><rect x="22.2222%" y="533" width="0.1684%" height="15" fill="rgb(222,60,38)" fg:x="264" fg:w="2"/><text x="22.4722%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (2 samples, 0.17%)</title><rect x="22.2222%" y="517" width="0.1684%" height="15" fill="rgb(212,82,22)" fg:x="264" fg:w="2"/><text x="22.4722%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.3064%" y="501" width="0.0842%" height="15" fill="rgb(214,48,28)" fg:x="265" fg:w="1"/><text x="22.5564%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="22.3064%" y="485" width="0.0842%" height="15" fill="rgb(245,196,50)" fg:x="265" fg:w="1"/><text x="22.5564%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.3064%" y="469" width="0.0842%" height="15" fill="rgb(225,159,46)" fg:x="265" fg:w="1"/><text x="22.5564%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.3064%" y="453" width="0.0842%" height="15" fill="rgb(207,195,48)" fg:x="265" fg:w="1"/><text x="22.5564%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.3064%" y="437" width="0.0842%" height="15" fill="rgb(240,73,3)" fg:x="265" fg:w="1"/><text x="22.5564%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3064%" y="421" width="0.0842%" height="15" fill="rgb(245,57,23)" fg:x="265" fg:w="1"/><text x="22.5564%" y="431.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="22.3906%" y="533" width="0.0842%" height="15" fill="rgb(240,75,18)" fg:x="266" fg:w="1"/><text x="22.6406%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="22.3906%" y="517" width="0.0842%" height="15" fill="rgb(238,168,12)" fg:x="266" fg:w="1"/><text x="22.6406%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.3906%" y="501" width="0.0842%" height="15" fill="rgb(226,20,40)" fg:x="266" fg:w="1"/><text x="22.6406%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.3906%" y="485" width="0.0842%" height="15" fill="rgb(224,130,35)" fg:x="266" fg:w="1"/><text x="22.6406%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="22.3906%" y="469" width="0.0842%" height="15" fill="rgb(225,63,41)" fg:x="266" fg:w="1"/><text x="22.6406%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.3906%" y="453" width="0.0842%" height="15" fill="rgb(219,3,3)" fg:x="266" fg:w="1"/><text x="22.6406%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3906%" y="437" width="0.0842%" height="15" fill="rgb(218,157,4)" fg:x="266" fg:w="1"/><text x="22.6406%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="22.4747%" y="517" width="0.0842%" height="15" fill="rgb(232,76,36)" fg:x="267" fg:w="1"/><text x="22.7247%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4747%" y="501" width="0.0842%" height="15" fill="rgb(247,36,0)" fg:x="267" fg:w="1"/><text x="22.7247%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4747%" y="485" width="0.0842%" height="15" fill="rgb(205,2,34)" fg:x="267" fg:w="1"/><text x="22.7247%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4747%" y="469" width="0.0842%" height="15" fill="rgb(239,136,13)" fg:x="267" fg:w="1"/><text x="22.7247%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4747%" y="453" width="0.0842%" height="15" fill="rgb(253,122,12)" fg:x="267" fg:w="1"/><text x="22.7247%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4747%" y="437" width="0.0842%" height="15" fill="rgb(222,174,7)" fg:x="267" fg:w="1"/><text x="22.7247%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4747%" y="421" width="0.0842%" height="15" fill="rgb(208,191,42)" fg:x="267" fg:w="1"/><text x="22.7247%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="22.4747%" y="405" width="0.0842%" height="15" fill="rgb(237,212,15)" fg:x="267" fg:w="1"/><text x="22.7247%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.5589%" y="485" width="0.0842%" height="15" fill="rgb(215,65,20)" fg:x="268" fg:w="1"/><text x="22.8089%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="22.5589%" y="469" width="0.0842%" height="15" fill="rgb(232,103,11)" fg:x="268" fg:w="1"/><text x="22.8089%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5589%" y="453" width="0.0842%" height="15" fill="rgb(235,148,18)" fg:x="268" fg:w="1"/><text x="22.8089%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5589%" y="437" width="0.0842%" height="15" fill="rgb(240,173,7)" fg:x="268" fg:w="1"/><text x="22.8089%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5589%" y="421" width="0.0842%" height="15" fill="rgb(228,182,25)" fg:x="268" fg:w="1"/><text x="22.8089%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5589%" y="405" width="0.0842%" height="15" fill="rgb(247,3,52)" fg:x="268" fg:w="1"/><text x="22.8089%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5589%" y="389" width="0.0842%" height="15" fill="rgb(226,155,8)" fg:x="268" fg:w="1"/><text x="22.8089%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.5589%" y="373" width="0.0842%" height="15" fill="rgb(243,195,38)" fg:x="268" fg:w="1"/><text x="22.8089%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.5589%" y="357" width="0.0842%" height="15" fill="rgb(254,181,33)" fg:x="268" fg:w="1"/><text x="22.8089%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.5589%" y="341" width="0.0842%" height="15" fill="rgb(232,98,23)" fg:x="268" fg:w="1"/><text x="22.8089%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5589%" y="325" width="0.0842%" height="15" fill="rgb(205,23,10)" fg:x="268" fg:w="1"/><text x="22.8089%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5589%" y="309" width="0.0842%" height="15" fill="rgb(212,124,38)" fg:x="268" fg:w="1"/><text x="22.8089%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.5589%" y="293" width="0.0842%" height="15" fill="rgb(228,207,2)" fg:x="268" fg:w="1"/><text x="22.8089%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.5589%" y="277" width="0.0842%" height="15" fill="rgb(215,120,22)" fg:x="268" fg:w="1"/><text x="22.8089%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.5589%" y="261" width="0.0842%" height="15" fill="rgb(251,172,33)" fg:x="268" fg:w="1"/><text x="22.8089%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.5589%" y="245" width="0.0842%" height="15" fill="rgb(250,83,2)" fg:x="268" fg:w="1"/><text x="22.8089%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5589%" y="229" width="0.0842%" height="15" fill="rgb(210,132,53)" fg:x="268" fg:w="1"/><text x="22.8089%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.6431%" y="389" width="0.0842%" height="15" fill="rgb(221,208,36)" fg:x="269" fg:w="1"/><text x="22.8931%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="22.6431%" y="469" width="0.1684%" height="15" fill="rgb(205,192,46)" fg:x="269" fg:w="2"/><text x="22.8931%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="22.6431%" y="453" width="0.1684%" height="15" fill="rgb(223,163,14)" fg:x="269" fg:w="2"/><text x="22.8931%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="22.6431%" y="437" width="0.1684%" height="15" fill="rgb(218,41,28)" fg:x="269" fg:w="2"/><text x="22.8931%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="22.6431%" y="421" width="0.1684%" height="15" fill="rgb(235,104,10)" fg:x="269" fg:w="2"/><text x="22.8931%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="22.6431%" y="405" width="0.1684%" height="15" fill="rgb(246,17,4)" fg:x="269" fg:w="2"/><text x="22.8931%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7273%" y="389" width="0.0842%" height="15" fill="rgb(240,7,16)" fg:x="270" fg:w="1"/><text x="22.9773%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7273%" y="373" width="0.0842%" height="15" fill="rgb(213,160,23)" fg:x="270" fg:w="1"/><text x="22.9773%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.42%)</title><rect x="22.4747%" y="533" width="0.4209%" height="15" fill="rgb(251,179,49)" fg:x="267" fg:w="5"/><text x="22.7247%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.34%)</title><rect x="22.5589%" y="517" width="0.3367%" height="15" fill="rgb(247,198,10)" fg:x="268" fg:w="4"/><text x="22.8089%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.34%)</title><rect x="22.5589%" y="501" width="0.3367%" height="15" fill="rgb(220,65,29)" fg:x="268" fg:w="4"/><text x="22.8089%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.25%)</title><rect x="22.6431%" y="485" width="0.2525%" height="15" fill="rgb(237,171,28)" fg:x="269" fg:w="3"/><text x="22.8931%" y="495.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="22.8114%" y="469" width="0.0842%" height="15" fill="rgb(228,44,26)" fg:x="271" fg:w="1"/><text x="23.0614%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.8114%" y="453" width="0.0842%" height="15" fill="rgb(216,210,27)" fg:x="271" fg:w="1"/><text x="23.0614%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.8114%" y="437" width="0.0842%" height="15" fill="rgb(252,10,17)" fg:x="271" fg:w="1"/><text x="23.0614%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9798%" y="437" width="0.0842%" height="15" fill="rgb(214,172,30)" fg:x="273" fg:w="1"/><text x="23.2298%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (9 samples, 0.76%)</title><rect x="22.3906%" y="565" width="0.7576%" height="15" fill="rgb(253,130,48)" fg:x="266" fg:w="9"/><text x="22.6406%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.76%)</title><rect x="22.3906%" y="549" width="0.7576%" height="15" fill="rgb(226,99,43)" fg:x="266" fg:w="9"/><text x="22.6406%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (3 samples, 0.25%)</title><rect x="22.8956%" y="533" width="0.2525%" height="15" fill="rgb(239,111,26)" fg:x="272" fg:w="3"/><text x="23.1456%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.25%)</title><rect x="22.8956%" y="517" width="0.2525%" height="15" fill="rgb(240,27,53)" fg:x="272" fg:w="3"/><text x="23.1456%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (3 samples, 0.25%)</title><rect x="22.8956%" y="501" width="0.2525%" height="15" fill="rgb(254,163,12)" fg:x="272" fg:w="3"/><text x="23.1456%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="22.8956%" y="485" width="0.2525%" height="15" fill="rgb(225,51,48)" fg:x="272" fg:w="3"/><text x="23.1456%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.25%)</title><rect x="22.8956%" y="469" width="0.2525%" height="15" fill="rgb(205,19,32)" fg:x="272" fg:w="3"/><text x="23.1456%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="22.8956%" y="453" width="0.2525%" height="15" fill="rgb(218,119,26)" fg:x="272" fg:w="3"/><text x="23.1456%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0640%" y="437" width="0.0842%" height="15" fill="rgb(231,173,33)" fg:x="274" fg:w="1"/><text x="23.3140%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0640%" y="421" width="0.0842%" height="15" fill="rgb(241,100,29)" fg:x="274" fg:w="1"/><text x="23.3140%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="23.0640%" y="405" width="0.0842%" height="15" fill="rgb(250,194,34)" fg:x="274" fg:w="1"/><text x="23.3140%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="23.1481%" y="549" width="0.0842%" height="15" fill="rgb(215,23,50)" fg:x="275" fg:w="1"/><text x="23.3981%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.1481%" y="533" width="0.0842%" height="15" fill="rgb(206,49,37)" fg:x="275" fg:w="1"/><text x="23.3981%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.1481%" y="517" width="0.0842%" height="15" fill="rgb(247,39,21)" fg:x="275" fg:w="1"/><text x="23.3981%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.1481%" y="501" width="0.0842%" height="15" fill="rgb(209,220,15)" fg:x="275" fg:w="1"/><text x="23.3981%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="23.1481%" y="485" width="0.0842%" height="15" fill="rgb(206,41,33)" fg:x="275" fg:w="1"/><text x="23.3981%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.1481%" y="469" width="0.0842%" height="15" fill="rgb(221,225,45)" fg:x="275" fg:w="1"/><text x="23.3981%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="23.2323%" y="549" width="0.0842%" height="15" fill="rgb(216,27,18)" fg:x="276" fg:w="1"/><text x="23.4823%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="23.2323%" y="533" width="0.0842%" height="15" fill="rgb(250,193,34)" fg:x="276" fg:w="1"/><text x="23.4823%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="23.3165%" y="549" width="0.0842%" height="15" fill="rgb(227,215,20)" fg:x="277" fg:w="1"/><text x="23.5665%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="23.3165%" y="533" width="0.0842%" height="15" fill="rgb(242,211,27)" fg:x="277" fg:w="1"/><text x="23.5665%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="23.3165%" y="517" width="0.0842%" height="15" fill="rgb(229,190,30)" fg:x="277" fg:w="1"/><text x="23.5665%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="23.3165%" y="501" width="0.0842%" height="15" fill="rgb(253,31,29)" fg:x="277" fg:w="1"/><text x="23.5665%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="23.3165%" y="485" width="0.0842%" height="15" fill="rgb(229,177,52)" fg:x="277" fg:w="1"/><text x="23.5665%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.3165%" y="469" width="0.0842%" height="15" fill="rgb(226,88,8)" fg:x="277" fg:w="1"/><text x="23.5665%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.3165%" y="453" width="0.0842%" height="15" fill="rgb(214,55,27)" fg:x="277" fg:w="1"/><text x="23.5665%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="23.4007%" y="533" width="0.0842%" height="15" fill="rgb(233,202,5)" fg:x="278" fg:w="1"/><text x="23.6507%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="23.4007%" y="517" width="0.0842%" height="15" fill="rgb(251,49,30)" fg:x="278" fg:w="1"/><text x="23.6507%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4007%" y="501" width="0.0842%" height="15" fill="rgb(235,18,52)" fg:x="278" fg:w="1"/><text x="23.6507%" y="511.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="23.4848%" y="517" width="0.0842%" height="15" fill="rgb(250,111,51)" fg:x="279" fg:w="1"/><text x="23.7348%" y="527.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="23.4848%" y="501" width="0.0842%" height="15" fill="rgb(218,13,25)" fg:x="279" fg:w="1"/><text x="23.7348%" y="511.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="23.4848%" y="485" width="0.0842%" height="15" fill="rgb(248,96,7)" fg:x="279" fg:w="1"/><text x="23.7348%" y="495.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="23.4848%" y="469" width="0.0842%" height="15" fill="rgb(217,31,15)" fg:x="279" fg:w="1"/><text x="23.7348%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="23.4848%" y="453" width="0.0842%" height="15" fill="rgb(228,59,49)" fg:x="279" fg:w="1"/><text x="23.7348%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="23.4848%" y="437" width="0.0842%" height="15" fill="rgb(210,152,38)" fg:x="279" fg:w="1"/><text x="23.7348%" y="447.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="23.4848%" y="421" width="0.0842%" height="15" fill="rgb(206,71,11)" fg:x="279" fg:w="1"/><text x="23.7348%" y="431.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="23.4848%" y="405" width="0.0842%" height="15" fill="rgb(244,199,5)" fg:x="279" fg:w="1"/><text x="23.7348%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="23.6532%" y="485" width="0.0842%" height="15" fill="rgb(253,49,1)" fg:x="281" fg:w="1"/><text x="23.9032%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="23.7374%" y="469" width="0.1684%" height="15" fill="rgb(225,206,40)" fg:x="282" fg:w="2"/><text x="23.9874%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.17%)</title><rect x="23.7374%" y="453" width="0.1684%" height="15" fill="rgb(243,116,47)" fg:x="282" fg:w="2"/><text x="23.9874%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.8215%" y="437" width="0.0842%" height="15" fill="rgb(219,225,16)" fg:x="283" fg:w="1"/><text x="24.0715%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.8215%" y="421" width="0.0842%" height="15" fill="rgb(233,29,47)" fg:x="283" fg:w="1"/><text x="24.0715%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.8215%" y="405" width="0.0842%" height="15" fill="rgb(250,179,18)" fg:x="283" fg:w="1"/><text x="24.0715%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.8215%" y="389" width="0.0842%" height="15" fill="rgb(215,176,6)" fg:x="283" fg:w="1"/><text x="24.0715%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.8215%" y="373" width="0.0842%" height="15" fill="rgb(214,117,39)" fg:x="283" fg:w="1"/><text x="24.0715%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.8215%" y="357" width="0.0842%" height="15" fill="rgb(247,183,36)" fg:x="283" fg:w="1"/><text x="24.0715%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.8215%" y="341" width="0.0842%" height="15" fill="rgb(237,200,3)" fg:x="283" fg:w="1"/><text x="24.0715%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="23.7374%" y="485" width="0.2525%" height="15" fill="rgb(212,220,24)" fg:x="282" fg:w="3"/><text x="23.9874%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9057%" y="469" width="0.0842%" height="15" fill="rgb(245,216,20)" fg:x="284" fg:w="1"/><text x="24.1557%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.1582%" y="453" width="0.0842%" height="15" fill="rgb(219,124,7)" fg:x="287" fg:w="1"/><text x="24.4082%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.1582%" y="437" width="0.0842%" height="15" fill="rgb(227,167,8)" fg:x="287" fg:w="1"/><text x="24.4082%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.1582%" y="421" width="0.0842%" height="15" fill="rgb(241,37,2)" fg:x="287" fg:w="1"/><text x="24.4082%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.4949%" y="357" width="0.0842%" height="15" fill="rgb(238,134,33)" fg:x="291" fg:w="1"/><text x="24.7449%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="24.4108%" y="373" width="0.2525%" height="15" fill="rgb(248,48,27)" fg:x="290" fg:w="3"/><text x="24.6608%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.5791%" y="357" width="0.0842%" height="15" fill="rgb(212,14,16)" fg:x="292" fg:w="1"/><text x="24.8291%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5791%" y="341" width="0.0842%" height="15" fill="rgb(217,205,37)" fg:x="292" fg:w="1"/><text x="24.8291%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.42%)</title><rect x="24.4108%" y="389" width="0.4209%" height="15" fill="rgb(233,185,47)" fg:x="290" fg:w="5"/><text x="24.6608%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="24.6633%" y="373" width="0.1684%" height="15" fill="rgb(244,88,8)" fg:x="293" fg:w="2"/><text x="24.9133%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.59%)</title><rect x="24.4108%" y="405" width="0.5892%" height="15" fill="rgb(213,0,20)" fg:x="290" fg:w="7"/><text x="24.6608%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="24.8316%" y="389" width="0.1684%" height="15" fill="rgb(238,159,36)" fg:x="295" fg:w="2"/><text x="25.0816%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="24.8316%" y="373" width="0.1684%" height="15" fill="rgb(253,173,17)" fg:x="295" fg:w="2"/><text x="25.0816%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.76%)</title><rect x="24.4108%" y="421" width="0.7576%" height="15" fill="rgb(221,23,28)" fg:x="290" fg:w="9"/><text x="24.6608%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="25.0000%" y="405" width="0.1684%" height="15" fill="rgb(218,113,15)" fg:x="297" fg:w="2"/><text x="25.2500%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 1.01%)</title><rect x="24.3266%" y="437" width="1.0101%" height="15" fill="rgb(233,58,3)" fg:x="289" fg:w="12"/><text x="24.5766%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="25.1684%" y="421" width="0.1684%" height="15" fill="rgb(250,46,35)" fg:x="299" fg:w="2"/><text x="25.4184%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.6734%" y="357" width="0.0842%" height="15" fill="rgb(210,169,11)" fg:x="305" fg:w="1"/><text x="25.9234%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.34%)</title><rect x="25.5051%" y="405" width="0.3367%" height="15" fill="rgb(246,88,19)" fg:x="303" fg:w="4"/><text x="25.7551%" y="415.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.34%)</title><rect x="25.5051%" y="389" width="0.3367%" height="15" fill="rgb(206,81,49)" fg:x="303" fg:w="4"/><text x="25.7551%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="25.5892%" y="373" width="0.2525%" height="15" fill="rgb(232,144,18)" fg:x="304" fg:w="3"/><text x="25.8392%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="25.7576%" y="357" width="0.0842%" height="15" fill="rgb(235,2,27)" fg:x="306" fg:w="1"/><text x="26.0076%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.59%)</title><rect x="25.4209%" y="421" width="0.5892%" height="15" fill="rgb(239,157,39)" fg:x="302" fg:w="7"/><text x="25.6709%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="25.8418%" y="405" width="0.1684%" height="15" fill="rgb(220,11,17)" fg:x="307" fg:w="2"/><text x="26.0918%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.9259%" y="389" width="0.0842%" height="15" fill="rgb(243,94,50)" fg:x="308" fg:w="1"/><text x="26.1759%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.9259%" y="373" width="0.0842%" height="15" fill="rgb(218,22,0)" fg:x="308" fg:w="1"/><text x="26.1759%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.67%)</title><rect x="26.1785%" y="405" width="0.6734%" height="15" fill="rgb(249,70,21)" fg:x="311" fg:w="8"/><text x="26.4285%" y="415.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.59%)</title><rect x="26.2626%" y="389" width="0.5892%" height="15" fill="rgb(245,111,46)" fg:x="312" fg:w="7"/><text x="26.5126%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.59%)</title><rect x="26.2626%" y="373" width="0.5892%" height="15" fill="rgb(244,183,12)" fg:x="312" fg:w="7"/><text x="26.5126%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.42%)</title><rect x="26.4310%" y="357" width="0.4209%" height="15" fill="rgb(207,117,0)" fg:x="314" fg:w="5"/><text x="26.6810%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="26.6835%" y="341" width="0.1684%" height="15" fill="rgb(206,20,43)" fg:x="317" fg:w="2"/><text x="26.9335%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="26.6835%" y="325" width="0.1684%" height="15" fill="rgb(221,104,11)" fg:x="317" fg:w="2"/><text x="26.9335%" y="335.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="26.6835%" y="309" width="0.1684%" height="15" fill="rgb(254,36,50)" fg:x="317" fg:w="2"/><text x="26.9335%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.51%)</title><rect x="26.8519%" y="389" width="0.5051%" height="15" fill="rgb(252,17,15)" fg:x="319" fg:w="6"/><text x="27.1019%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="27.1044%" y="373" width="0.2525%" height="15" fill="rgb(219,129,43)" fg:x="322" fg:w="3"/><text x="27.3544%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="27.1044%" y="357" width="0.2525%" height="15" fill="rgb(205,34,45)" fg:x="322" fg:w="3"/><text x="27.3544%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.2727%" y="341" width="0.0842%" height="15" fill="rgb(251,201,32)" fg:x="324" fg:w="1"/><text x="27.5227%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.51%)</title><rect x="27.4411%" y="373" width="0.5051%" height="15" fill="rgb(205,56,0)" fg:x="326" fg:w="6"/><text x="27.6911%" y="383.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.51%)</title><rect x="27.4411%" y="357" width="0.5051%" height="15" fill="rgb(211,193,27)" fg:x="326" fg:w="6"/><text x="27.6911%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.34%)</title><rect x="27.6094%" y="341" width="0.3367%" height="15" fill="rgb(231,100,42)" fg:x="328" fg:w="4"/><text x="27.8594%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.34%)</title><rect x="27.6094%" y="325" width="0.3367%" height="15" fill="rgb(245,85,27)" fg:x="328" fg:w="4"/><text x="27.8594%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="27.7778%" y="309" width="0.1684%" height="15" fill="rgb(241,76,24)" fg:x="330" fg:w="2"/><text x="28.0278%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="27.7778%" y="293" width="0.1684%" height="15" fill="rgb(249,157,15)" fg:x="330" fg:w="2"/><text x="28.0278%" y="303.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="27.7778%" y="277" width="0.1684%" height="15" fill="rgb(222,218,25)" fg:x="330" fg:w="2"/><text x="28.0278%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.34%)</title><rect x="28.1145%" y="357" width="0.3367%" height="15" fill="rgb(252,156,52)" fg:x="334" fg:w="4"/><text x="28.3645%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.34%)</title><rect x="28.1145%" y="341" width="0.3367%" height="15" fill="rgb(211,185,7)" fg:x="334" fg:w="4"/><text x="28.3645%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="28.1987%" y="325" width="0.2525%" height="15" fill="rgb(234,108,24)" fg:x="335" fg:w="3"/><text x="28.4487%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="28.1987%" y="309" width="0.2525%" height="15" fill="rgb(227,218,2)" fg:x="335" fg:w="3"/><text x="28.4487%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.25%)</title><rect x="28.1987%" y="293" width="0.2525%" height="15" fill="rgb(224,0,36)" fg:x="335" fg:w="3"/><text x="28.4487%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.25%)</title><rect x="28.1987%" y="277" width="0.2525%" height="15" fill="rgb(233,201,10)" fg:x="335" fg:w="3"/><text x="28.4487%" y="287.50"></text></g><g><title>realloc (3 samples, 0.25%)</title><rect x="28.1987%" y="261" width="0.2525%" height="15" fill="rgb(252,209,14)" fg:x="335" fg:w="3"/><text x="28.4487%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.59%)</title><rect x="27.9461%" y="373" width="0.5892%" height="15" fill="rgb(205,93,49)" fg:x="332" fg:w="7"/><text x="28.1961%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="28.4512%" y="357" width="0.0842%" height="15" fill="rgb(234,116,45)" fg:x="338" fg:w="1"/><text x="28.7012%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.4512%" y="341" width="0.0842%" height="15" fill="rgb(248,89,35)" fg:x="338" fg:w="1"/><text x="28.7012%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.4512%" y="325" width="0.0842%" height="15" fill="rgb(233,167,45)" fg:x="338" fg:w="1"/><text x="28.7012%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.35%)</title><rect x="27.3569%" y="389" width="1.3468%" height="15" fill="rgb(248,228,14)" fg:x="325" fg:w="16"/><text x="27.6069%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="28.5354%" y="373" width="0.1684%" height="15" fill="rgb(246,91,14)" fg:x="339" fg:w="2"/><text x="28.7854%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.6195%" y="357" width="0.0842%" height="15" fill="rgb(227,142,5)" fg:x="340" fg:w="1"/><text x="28.8695%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.94%)</title><rect x="26.8519%" y="405" width="1.9360%" height="15" fill="rgb(221,63,33)" fg:x="319" fg:w="23"/><text x="27.1019%" y="415.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.7037%" y="389" width="0.0842%" height="15" fill="rgb(233,49,0)" fg:x="341" fg:w="1"/><text x="28.9537%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.7037%" y="373" width="0.0842%" height="15" fill="rgb(251,115,38)" fg:x="341" fg:w="1"/><text x="28.9537%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (43 samples, 3.62%)</title><rect x="25.3367%" y="437" width="3.6195%" height="15" fill="rgb(231,214,32)" fg:x="301" fg:w="43"/><text x="25.5867%" y="447.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.95%)</title><rect x="26.0101%" y="421" width="2.9461%" height="15" fill="rgb(248,73,46)" fg:x="309" fg:w="35"/><text x="26.2601%" y="431.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="28.7879%" y="405" width="0.1684%" height="15" fill="rgb(237,156,4)" fg:x="342" fg:w="2"/><text x="29.0379%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.8721%" y="389" width="0.0842%" height="15" fill="rgb(227,132,2)" fg:x="343" fg:w="1"/><text x="29.1221%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="28.9562%" y="405" width="0.2525%" height="15" fill="rgb(248,161,9)" fg:x="344" fg:w="3"/><text x="29.2062%" y="415.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="29.2088%" y="405" width="0.0842%" height="15" fill="rgb(238,77,38)" fg:x="347" fg:w="1"/><text x="29.4588%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="29.2088%" y="389" width="0.0842%" height="15" fill="rgb(222,166,40)" fg:x="347" fg:w="1"/><text x="29.4588%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="29.2088%" y="373" width="0.0842%" height="15" fill="rgb(214,168,45)" fg:x="347" fg:w="1"/><text x="29.4588%" y="383.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="29.2929%" y="405" width="0.0842%" height="15" fill="rgb(226,64,37)" fg:x="348" fg:w="1"/><text x="29.5429%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="29.2929%" y="389" width="0.0842%" height="15" fill="rgb(232,210,43)" fg:x="348" fg:w="1"/><text x="29.5429%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="29.3771%" y="389" width="0.0842%" height="15" fill="rgb(214,76,33)" fg:x="349" fg:w="1"/><text x="29.6271%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.3771%" y="373" width="0.0842%" height="15" fill="rgb(210,78,5)" fg:x="349" fg:w="1"/><text x="29.6271%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="29.3771%" y="357" width="0.0842%" height="15" fill="rgb(211,107,37)" fg:x="349" fg:w="1"/><text x="29.6271%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="29.3771%" y="341" width="0.0842%" height="15" fill="rgb(249,67,16)" fg:x="349" fg:w="1"/><text x="29.6271%" y="351.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="29.4613%" y="389" width="0.0842%" height="15" fill="rgb(222,114,31)" fg:x="350" fg:w="1"/><text x="29.7113%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.67%)</title><rect x="28.9562%" y="421" width="0.6734%" height="15" fill="rgb(242,118,19)" fg:x="344" fg:w="8"/><text x="29.2062%" y="431.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.25%)</title><rect x="29.3771%" y="405" width="0.2525%" height="15" fill="rgb(223,115,1)" fg:x="349" fg:w="3"/><text x="29.6271%" y="415.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="29.5455%" y="389" width="0.0842%" height="15" fill="rgb(241,182,54)" fg:x="351" fg:w="1"/><text x="29.7955%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.5455%" y="373" width="0.0842%" height="15" fill="rgb(244,166,36)" fg:x="351" fg:w="1"/><text x="29.7955%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="29.7980%" y="389" width="0.2525%" height="15" fill="rgb(241,52,43)" fg:x="354" fg:w="3"/><text x="30.0480%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="29.9663%" y="373" width="0.0842%" height="15" fill="rgb(236,82,9)" fg:x="356" fg:w="1"/><text x="30.2163%" y="383.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0505%" y="389" width="0.0842%" height="15" fill="rgb(241,119,0)" fg:x="357" fg:w="1"/><text x="30.3005%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.0505%" y="373" width="0.0842%" height="15" fill="rgb(221,19,22)" fg:x="357" fg:w="1"/><text x="30.3005%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.0505%" y="357" width="0.0842%" height="15" fill="rgb(254,144,35)" fg:x="357" fg:w="1"/><text x="30.3005%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="30.1347%" y="389" width="0.0842%" height="15" fill="rgb(246,132,30)" fg:x="358" fg:w="1"/><text x="30.3847%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.1347%" y="373" width="0.0842%" height="15" fill="rgb(234,69,28)" fg:x="358" fg:w="1"/><text x="30.3847%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.1347%" y="357" width="0.0842%" height="15" fill="rgb(219,106,47)" fg:x="358" fg:w="1"/><text x="30.3847%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="30.3872%" y="373" width="0.0842%" height="15" fill="rgb(218,79,24)" fg:x="361" fg:w="1"/><text x="30.6372%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="30.5556%" y="357" width="0.1684%" height="15" fill="rgb(225,26,21)" fg:x="363" fg:w="2"/><text x="30.8056%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.42%)</title><rect x="30.7239%" y="341" width="0.4209%" height="15" fill="rgb(217,68,49)" fg:x="365" fg:w="5"/><text x="30.9739%" y="351.50"></text></g><g><title>__libc_malloc (4 samples, 0.34%)</title><rect x="30.8081%" y="325" width="0.3367%" height="15" fill="rgb(220,204,28)" fg:x="366" fg:w="4"/><text x="31.0581%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.2290%" y="309" width="0.0842%" height="15" fill="rgb(237,208,43)" fg:x="371" fg:w="1"/><text x="31.4790%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="31.1448%" y="341" width="0.2525%" height="15" fill="rgb(213,97,42)" fg:x="370" fg:w="3"/><text x="31.3948%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="31.1448%" y="325" width="0.2525%" height="15" fill="rgb(238,96,52)" fg:x="370" fg:w="3"/><text x="31.3948%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="31.3131%" y="309" width="0.0842%" height="15" fill="rgb(228,14,13)" fg:x="372" fg:w="1"/><text x="31.5631%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.3131%" y="293" width="0.0842%" height="15" fill="rgb(219,123,13)" fg:x="372" fg:w="1"/><text x="31.5631%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.34%)</title><rect x="31.6498%" y="309" width="0.3367%" height="15" fill="rgb(216,144,17)" fg:x="376" fg:w="4"/><text x="31.8998%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="31.7340%" y="293" width="0.2525%" height="15" fill="rgb(230,228,29)" fg:x="377" fg:w="3"/><text x="31.9840%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="32.1549%" y="277" width="0.2525%" height="15" fill="rgb(233,18,5)" fg:x="382" fg:w="3"/><text x="32.4049%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="32.3232%" y="261" width="0.0842%" height="15" fill="rgb(233,197,12)" fg:x="384" fg:w="1"/><text x="32.5732%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.34%)</title><rect x="32.1549%" y="293" width="0.3367%" height="15" fill="rgb(234,140,29)" fg:x="382" fg:w="4"/><text x="32.4049%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.4074%" y="277" width="0.0842%" height="15" fill="rgb(233,113,19)" fg:x="385" fg:w="1"/><text x="32.6574%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (23 samples, 1.94%)</title><rect x="30.7239%" y="357" width="1.9360%" height="15" fill="rgb(246,209,13)" fg:x="365" fg:w="23"/><text x="30.9739%" y="367.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.26%)</title><rect x="31.3973%" y="341" width="1.2626%" height="15" fill="rgb(242,79,54)" fg:x="373" fg:w="15"/><text x="31.6473%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 1.01%)</title><rect x="31.6498%" y="325" width="1.0101%" height="15" fill="rgb(219,73,16)" fg:x="376" fg:w="12"/><text x="31.8998%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.67%)</title><rect x="31.9865%" y="309" width="0.6734%" height="15" fill="rgb(224,52,10)" fg:x="380" fg:w="8"/><text x="32.2365%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="32.4916%" y="293" width="0.1684%" height="15" fill="rgb(237,179,5)" fg:x="386" fg:w="2"/><text x="32.7416%" y="303.50"></text></g><g><title>engine::session::state::State::flush_entities (112 samples, 9.43%)</title><rect x="23.5690%" y="501" width="9.4276%" height="15" fill="rgb(231,20,6)" fg:x="280" fg:w="112"/><text x="23.8190%" y="511.50">engine::sessi..</text></g><g><title>core::iter::adapters::try_process (107 samples, 9.01%)</title><rect x="23.9899%" y="485" width="9.0067%" height="15" fill="rgb(253,171,45)" fg:x="285" fg:w="107"/><text x="24.2399%" y="495.50">core::iter::a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (107 samples, 9.01%)</title><rect x="23.9899%" y="469" width="9.0067%" height="15" fill="rgb(230,75,49)" fg:x="285" fg:w="107"/><text x="24.2399%" y="479.50">&lt;alloc::vec::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (104 samples, 8.75%)</title><rect x="24.2424%" y="453" width="8.7542%" height="15" fill="rgb(216,83,46)" fg:x="288" fg:w="104"/><text x="24.4924%" y="463.50">engine::sess..</text></g><g><title>kernel::model::any_entity_changes (48 samples, 4.04%)</title><rect x="28.9562%" y="437" width="4.0404%" height="15" fill="rgb(236,56,9)" fg:x="344" fg:w="48"/><text x="29.2062%" y="447.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (40 samples, 3.37%)</title><rect x="29.6296%" y="421" width="3.3670%" height="15" fill="rgb(215,28,34)" fg:x="352" fg:w="40"/><text x="29.8796%" y="431.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (40 samples, 3.37%)</title><rect x="29.6296%" y="405" width="3.3670%" height="15" fill="rgb(230,222,20)" fg:x="352" fg:w="40"/><text x="29.8796%" y="415.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (33 samples, 2.78%)</title><rect x="30.2189%" y="389" width="2.7778%" height="15" fill="rgb(235,209,51)" fg:x="359" fg:w="33"/><text x="30.4689%" y="399.50">se..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.53%)</title><rect x="30.4714%" y="373" width="2.5253%" height="15" fill="rgb(235,167,1)" fg:x="362" fg:w="30"/><text x="30.7214%" y="383.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.34%)</title><rect x="32.6599%" y="357" width="0.3367%" height="15" fill="rgb(248,220,0)" fg:x="388" fg:w="4"/><text x="32.9099%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9125%" y="341" width="0.0842%" height="15" fill="rgb(239,0,18)" fg:x="391" fg:w="1"/><text x="33.1625%" y="351.50"></text></g><g><title>engine::session::Session::flush (115 samples, 9.68%)</title><rect x="23.4007%" y="549" width="9.6801%" height="15" fill="rgb(229,179,11)" fg:x="278" fg:w="115"/><text x="23.6507%" y="559.50">engine::sessio..</text></g><g><title>engine::session::Session::save_changes (114 samples, 9.60%)</title><rect x="23.4848%" y="533" width="9.5960%" height="15" fill="rgb(226,116,53)" fg:x="279" fg:w="114"/><text x="23.7348%" y="543.50">engine::sessio..</text></g><g><title>engine::session::state::State::close (113 samples, 9.51%)</title><rect x="23.5690%" y="517" width="9.5118%" height="15" fill="rgb(218,1,49)" fg:x="280" fg:w="113"/><text x="23.8190%" y="527.50">engine::sessio..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="32.9966%" y="501" width="0.0842%" height="15" fill="rgb(208,184,47)" fg:x="392" fg:w="1"/><text x="33.2466%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="33.0808%" y="549" width="0.0842%" height="15" fill="rgb(238,174,3)" fg:x="393" fg:w="1"/><text x="33.3308%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="33.0808%" y="533" width="0.0842%" height="15" fill="rgb(247,188,6)" fg:x="393" fg:w="1"/><text x="33.3308%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="33.0808%" y="517" width="0.0842%" height="15" fill="rgb(211,165,46)" fg:x="393" fg:w="1"/><text x="33.3308%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.0808%" y="501" width="0.0842%" height="15" fill="rgb(222,190,10)" fg:x="393" fg:w="1"/><text x="33.3308%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="33.0808%" y="485" width="0.0842%" height="15" fill="rgb(206,185,3)" fg:x="393" fg:w="1"/><text x="33.3308%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="33.0808%" y="469" width="0.0842%" height="15" fill="rgb(244,125,37)" fg:x="393" fg:w="1"/><text x="33.3308%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="33.0808%" y="453" width="0.0842%" height="15" fill="rgb(211,43,7)" fg:x="393" fg:w="1"/><text x="33.3308%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.0808%" y="437" width="0.0842%" height="15" fill="rgb(250,41,42)" fg:x="393" fg:w="1"/><text x="33.3308%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.0808%" y="421" width="0.0842%" height="15" fill="rgb(254,54,42)" fg:x="393" fg:w="1"/><text x="33.3308%" y="431.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="33.1650%" y="549" width="0.0842%" height="15" fill="rgb(213,71,43)" fg:x="394" fg:w="1"/><text x="33.4150%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3333%" y="533" width="0.0842%" height="15" fill="rgb(249,3,44)" fg:x="396" fg:w="1"/><text x="33.5833%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3333%" y="517" width="0.0842%" height="15" fill="rgb(229,80,41)" fg:x="396" fg:w="1"/><text x="33.5833%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.3333%" y="501" width="0.0842%" height="15" fill="rgb(231,25,28)" fg:x="396" fg:w="1"/><text x="33.5833%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.3333%" y="485" width="0.0842%" height="15" fill="rgb(208,79,48)" fg:x="396" fg:w="1"/><text x="33.5833%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.3333%" y="469" width="0.0842%" height="15" fill="rgb(207,196,38)" fg:x="396" fg:w="1"/><text x="33.5833%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3333%" y="453" width="0.0842%" height="15" fill="rgb(228,105,49)" fg:x="396" fg:w="1"/><text x="33.5833%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3333%" y="437" width="0.0842%" height="15" fill="rgb(237,99,15)" fg:x="396" fg:w="1"/><text x="33.5833%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.3333%" y="421" width="0.0842%" height="15" fill="rgb(224,207,46)" fg:x="396" fg:w="1"/><text x="33.5833%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.3333%" y="405" width="0.0842%" height="15" fill="rgb(249,117,50)" fg:x="396" fg:w="1"/><text x="33.5833%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.3333%" y="389" width="0.0842%" height="15" fill="rgb(248,17,13)" fg:x="396" fg:w="1"/><text x="33.5833%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.3333%" y="373" width="0.0842%" height="15" fill="rgb(228,187,36)" fg:x="396" fg:w="1"/><text x="33.5833%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="33.4175%" y="517" width="0.1684%" height="15" fill="rgb(234,132,20)" fg:x="397" fg:w="2"/><text x="33.6675%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="33.4175%" y="501" width="0.1684%" height="15" fill="rgb(209,170,46)" fg:x="397" fg:w="2"/><text x="33.6675%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.5017%" y="485" width="0.0842%" height="15" fill="rgb(237,23,19)" fg:x="398" fg:w="1"/><text x="33.7517%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5017%" y="469" width="0.0842%" height="15" fill="rgb(227,21,26)" fg:x="398" fg:w="1"/><text x="33.7517%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5017%" y="453" width="0.0842%" height="15" fill="rgb(222,220,48)" fg:x="398" fg:w="1"/><text x="33.7517%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.5017%" y="437" width="0.0842%" height="15" fill="rgb(214,9,16)" fg:x="398" fg:w="1"/><text x="33.7517%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.5017%" y="421" width="0.0842%" height="15" fill="rgb(209,73,30)" fg:x="398" fg:w="1"/><text x="33.7517%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.5017%" y="405" width="0.0842%" height="15" fill="rgb(207,20,33)" fg:x="398" fg:w="1"/><text x="33.7517%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.5017%" y="389" width="0.0842%" height="15" fill="rgb(219,153,12)" fg:x="398" fg:w="1"/><text x="33.7517%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.5017%" y="373" width="0.0842%" height="15" fill="rgb(235,97,25)" fg:x="398" fg:w="1"/><text x="33.7517%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.5017%" y="357" width="0.0842%" height="15" fill="rgb(244,30,34)" fg:x="398" fg:w="1"/><text x="33.7517%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.5017%" y="341" width="0.0842%" height="15" fill="rgb(214,106,45)" fg:x="398" fg:w="1"/><text x="33.7517%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.5017%" y="325" width="0.0842%" height="15" fill="rgb(226,41,9)" fg:x="398" fg:w="1"/><text x="33.7517%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.5017%" y="309" width="0.0842%" height="15" fill="rgb(253,139,29)" fg:x="398" fg:w="1"/><text x="33.7517%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.5017%" y="293" width="0.0842%" height="15" fill="rgb(213,205,39)" fg:x="398" fg:w="1"/><text x="33.7517%" y="303.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="33.5859%" y="517" width="0.0842%" height="15" fill="rgb(209,27,10)" fg:x="399" fg:w="1"/><text x="33.8359%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="33.5859%" y="501" width="0.0842%" height="15" fill="rgb(249,142,16)" fg:x="399" fg:w="1"/><text x="33.8359%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="33.5859%" y="485" width="0.0842%" height="15" fill="rgb(242,65,12)" fg:x="399" fg:w="1"/><text x="33.8359%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.5859%" y="469" width="0.0842%" height="15" fill="rgb(232,48,10)" fg:x="399" fg:w="1"/><text x="33.8359%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="33.5859%" y="453" width="0.0842%" height="15" fill="rgb(253,67,19)" fg:x="399" fg:w="1"/><text x="33.8359%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.5859%" y="437" width="0.0842%" height="15" fill="rgb(227,93,29)" fg:x="399" fg:w="1"/><text x="33.8359%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.5859%" y="421" width="0.0842%" height="15" fill="rgb(226,189,53)" fg:x="399" fg:w="1"/><text x="33.8359%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6700%" y="421" width="0.0842%" height="15" fill="rgb(223,224,1)" fg:x="400" fg:w="1"/><text x="33.9200%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6700%" y="405" width="0.0842%" height="15" fill="rgb(221,84,32)" fg:x="400" fg:w="1"/><text x="33.9200%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.17%)</title><rect x="33.6700%" y="469" width="0.1684%" height="15" fill="rgb(214,189,28)" fg:x="400" fg:w="2"/><text x="33.9200%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="33.6700%" y="453" width="0.1684%" height="15" fill="rgb(234,7,52)" fg:x="400" fg:w="2"/><text x="33.9200%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="33.6700%" y="437" width="0.1684%" height="15" fill="rgb(249,73,31)" fg:x="400" fg:w="2"/><text x="33.9200%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.7542%" y="421" width="0.0842%" height="15" fill="rgb(253,153,41)" fg:x="401" fg:w="1"/><text x="34.0042%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="33.8384%" y="469" width="0.0842%" height="15" fill="rgb(249,52,34)" fg:x="402" fg:w="1"/><text x="34.0884%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="33.8384%" y="453" width="0.0842%" height="15" fill="rgb(236,177,47)" fg:x="402" fg:w="1"/><text x="34.0884%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.8384%" y="437" width="0.0842%" height="15" fill="rgb(252,185,45)" fg:x="402" fg:w="1"/><text x="34.0884%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.8384%" y="421" width="0.0842%" height="15" fill="rgb(251,15,30)" fg:x="402" fg:w="1"/><text x="34.0884%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8384%" y="405" width="0.0842%" height="15" fill="rgb(233,31,4)" fg:x="402" fg:w="1"/><text x="34.0884%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="33.9226%" y="469" width="0.0842%" height="15" fill="rgb(254,44,24)" fg:x="403" fg:w="1"/><text x="34.1726%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0067%" y="437" width="0.0842%" height="15" fill="rgb(218,54,1)" fg:x="404" fg:w="1"/><text x="34.2567%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="34.0909%" y="405" width="0.0842%" height="15" fill="rgb(243,209,39)" fg:x="405" fg:w="1"/><text x="34.3409%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="34.0909%" y="389" width="0.0842%" height="15" fill="rgb(206,75,33)" fg:x="405" fg:w="1"/><text x="34.3409%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.59%)</title><rect x="33.6700%" y="501" width="0.5892%" height="15" fill="rgb(223,108,18)" fg:x="400" fg:w="7"/><text x="33.9200%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (7 samples, 0.59%)</title><rect x="33.6700%" y="485" width="0.5892%" height="15" fill="rgb(244,89,31)" fg:x="400" fg:w="7"/><text x="33.9200%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.25%)</title><rect x="34.0067%" y="469" width="0.2525%" height="15" fill="rgb(222,167,27)" fg:x="404" fg:w="3"/><text x="34.2567%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="34.0067%" y="453" width="0.2525%" height="15" fill="rgb(247,41,16)" fg:x="404" fg:w="3"/><text x="34.2567%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="34.0909%" y="437" width="0.1684%" height="15" fill="rgb(233,168,40)" fg:x="405" fg:w="2"/><text x="34.3409%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.17%)</title><rect x="34.0909%" y="421" width="0.1684%" height="15" fill="rgb(205,211,8)" fg:x="405" fg:w="2"/><text x="34.3409%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.1751%" y="405" width="0.0842%" height="15" fill="rgb(238,105,11)" fg:x="406" fg:w="1"/><text x="34.4251%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1751%" y="389" width="0.0842%" height="15" fill="rgb(223,142,52)" fg:x="406" fg:w="1"/><text x="34.4251%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="34.2593%" y="469" width="0.0842%" height="15" fill="rgb(238,51,33)" fg:x="407" fg:w="1"/><text x="34.5093%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.2593%" y="453" width="0.0842%" height="15" fill="rgb(231,188,43)" fg:x="407" fg:w="1"/><text x="34.5093%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.2593%" y="437" width="0.0842%" height="15" fill="rgb(216,92,17)" fg:x="407" fg:w="1"/><text x="34.5093%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="34.2593%" y="421" width="0.0842%" height="15" fill="rgb(228,2,40)" fg:x="407" fg:w="1"/><text x="34.5093%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="34.3434%" y="453" width="0.0842%" height="15" fill="rgb(226,73,15)" fg:x="408" fg:w="1"/><text x="34.5934%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="34.3434%" y="437" width="0.0842%" height="15" fill="rgb(227,66,46)" fg:x="408" fg:w="1"/><text x="34.5934%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="34.3434%" y="421" width="0.0842%" height="15" fill="rgb(209,71,6)" fg:x="408" fg:w="1"/><text x="34.5934%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="34.3434%" y="405" width="0.0842%" height="15" fill="rgb(246,100,25)" fg:x="408" fg:w="1"/><text x="34.5934%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="34.3434%" y="389" width="0.0842%" height="15" fill="rgb(248,185,27)" fg:x="408" fg:w="1"/><text x="34.5934%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="34.3434%" y="373" width="0.0842%" height="15" fill="rgb(225,118,47)" fg:x="408" fg:w="1"/><text x="34.5934%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.3434%" y="357" width="0.0842%" height="15" fill="rgb(220,185,44)" fg:x="408" fg:w="1"/><text x="34.5934%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.3434%" y="341" width="0.0842%" height="15" fill="rgb(227,95,24)" fg:x="408" fg:w="1"/><text x="34.5934%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.3434%" y="325" width="0.0842%" height="15" fill="rgb(252,84,24)" fg:x="408" fg:w="1"/><text x="34.5934%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.09%)</title><rect x="33.4175%" y="533" width="1.0943%" height="15" fill="rgb(240,34,44)" fg:x="397" fg:w="13"/><text x="33.6675%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.84%)</title><rect x="33.6700%" y="517" width="0.8418%" height="15" fill="rgb(209,72,54)" fg:x="400" fg:w="10"/><text x="33.9200%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.25%)</title><rect x="34.2593%" y="501" width="0.2525%" height="15" fill="rgb(226,19,45)" fg:x="407" fg:w="3"/><text x="34.5093%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="34.2593%" y="485" width="0.2525%" height="15" fill="rgb(246,7,45)" fg:x="407" fg:w="3"/><text x="34.5093%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="34.3434%" y="469" width="0.1684%" height="15" fill="rgb(225,45,2)" fg:x="408" fg:w="2"/><text x="34.5934%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4276%" y="453" width="0.0842%" height="15" fill="rgb(221,80,29)" fg:x="409" fg:w="1"/><text x="34.6776%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5118%" y="517" width="0.0842%" height="15" fill="rgb(228,11,19)" fg:x="410" fg:w="1"/><text x="34.7618%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5960%" y="453" width="0.0842%" height="15" fill="rgb(243,17,21)" fg:x="411" fg:w="1"/><text x="34.8460%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.5960%" y="437" width="0.0842%" height="15" fill="rgb(243,88,8)" fg:x="411" fg:w="1"/><text x="34.8460%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.25%)</title><rect x="34.5118%" y="533" width="0.2525%" height="15" fill="rgb(214,17,9)" fg:x="410" fg:w="3"/><text x="34.7618%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="34.5960%" y="517" width="0.1684%" height="15" fill="rgb(232,169,15)" fg:x="411" fg:w="2"/><text x="34.8460%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="34.5960%" y="501" width="0.1684%" height="15" fill="rgb(232,86,53)" fg:x="411" fg:w="2"/><text x="34.8460%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="34.5960%" y="485" width="0.1684%" height="15" fill="rgb(222,100,4)" fg:x="411" fg:w="2"/><text x="34.8460%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="34.5960%" y="469" width="0.1684%" height="15" fill="rgb(253,151,38)" fg:x="411" fg:w="2"/><text x="34.8460%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6801%" y="453" width="0.0842%" height="15" fill="rgb(238,215,29)" fg:x="412" fg:w="1"/><text x="34.9301%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6801%" y="437" width="0.0842%" height="15" fill="rgb(205,128,53)" fg:x="412" fg:w="1"/><text x="34.9301%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6801%" y="421" width="0.0842%" height="15" fill="rgb(248,183,14)" fg:x="412" fg:w="1"/><text x="34.9301%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (19 samples, 1.60%)</title><rect x="33.2492%" y="549" width="1.5993%" height="15" fill="rgb(244,172,35)" fg:x="395" fg:w="19"/><text x="33.4992%" y="559.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="34.7643%" y="533" width="0.0842%" height="15" fill="rgb(234,93,19)" fg:x="413" fg:w="1"/><text x="35.0143%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.7643%" y="517" width="0.0842%" height="15" fill="rgb(227,109,7)" fg:x="413" fg:w="1"/><text x="35.0143%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.7643%" y="501" width="0.0842%" height="15" fill="rgb(233,136,54)" fg:x="413" fg:w="1"/><text x="35.0143%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="34.9327%" y="517" width="0.0842%" height="15" fill="rgb(233,19,40)" fg:x="415" fg:w="1"/><text x="35.1827%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="34.9327%" y="501" width="0.0842%" height="15" fill="rgb(247,41,18)" fg:x="415" fg:w="1"/><text x="35.1827%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.9327%" y="485" width="0.0842%" height="15" fill="rgb(220,34,34)" fg:x="415" fg:w="1"/><text x="35.1827%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.9327%" y="469" width="0.0842%" height="15" fill="rgb(222,135,32)" fg:x="415" fg:w="1"/><text x="35.1827%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="35.0168%" y="517" width="0.0842%" height="15" fill="rgb(214,80,19)" fg:x="416" fg:w="1"/><text x="35.2668%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.0168%" y="501" width="0.0842%" height="15" fill="rgb(234,54,46)" fg:x="416" fg:w="1"/><text x="35.2668%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0168%" y="485" width="0.0842%" height="15" fill="rgb(251,48,23)" fg:x="416" fg:w="1"/><text x="35.2668%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="35.1010%" y="469" width="0.1684%" height="15" fill="rgb(254,109,52)" fg:x="417" fg:w="2"/><text x="35.3510%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="35.1010%" y="453" width="0.1684%" height="15" fill="rgb(240,186,19)" fg:x="417" fg:w="2"/><text x="35.3510%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="35.1010%" y="437" width="0.1684%" height="15" fill="rgb(246,187,17)" fg:x="417" fg:w="2"/><text x="35.3510%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.1852%" y="421" width="0.0842%" height="15" fill="rgb(212,21,5)" fg:x="418" fg:w="1"/><text x="35.4352%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1852%" y="405" width="0.0842%" height="15" fill="rgb(225,185,18)" fg:x="418" fg:w="1"/><text x="35.4352%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.1852%" y="389" width="0.0842%" height="15" fill="rgb(245,114,17)" fg:x="418" fg:w="1"/><text x="35.4352%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1852%" y="373" width="0.0842%" height="15" fill="rgb(223,164,24)" fg:x="418" fg:w="1"/><text x="35.4352%" y="383.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="35.1852%" y="357" width="0.0842%" height="15" fill="rgb(211,228,3)" fg:x="418" fg:w="1"/><text x="35.4352%" y="367.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="35.1010%" y="485" width="0.2525%" height="15" fill="rgb(223,16,38)" fg:x="417" fg:w="3"/><text x="35.3510%" y="495.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="35.2694%" y="469" width="0.0842%" height="15" fill="rgb(207,31,54)" fg:x="419" fg:w="1"/><text x="35.5194%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.2694%" y="453" width="0.0842%" height="15" fill="rgb(220,39,11)" fg:x="419" fg:w="1"/><text x="35.5194%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.2694%" y="437" width="0.0842%" height="15" fill="rgb(235,185,0)" fg:x="419" fg:w="1"/><text x="35.5194%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="35.3535%" y="469" width="0.0842%" height="15" fill="rgb(249,39,18)" fg:x="420" fg:w="1"/><text x="35.6035%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3535%" y="453" width="0.0842%" height="15" fill="rgb(240,110,33)" fg:x="420" fg:w="1"/><text x="35.6035%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3535%" y="437" width="0.0842%" height="15" fill="rgb(210,92,42)" fg:x="420" fg:w="1"/><text x="35.6035%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3535%" y="421" width="0.0842%" height="15" fill="rgb(218,215,28)" fg:x="420" fg:w="1"/><text x="35.6035%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3535%" y="405" width="0.0842%" height="15" fill="rgb(238,215,36)" fg:x="420" fg:w="1"/><text x="35.6035%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3535%" y="389" width="0.0842%" height="15" fill="rgb(220,31,10)" fg:x="420" fg:w="1"/><text x="35.6035%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.3535%" y="373" width="0.0842%" height="15" fill="rgb(212,93,14)" fg:x="420" fg:w="1"/><text x="35.6035%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.3535%" y="357" width="0.0842%" height="15" fill="rgb(254,207,2)" fg:x="420" fg:w="1"/><text x="35.6035%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.3535%" y="341" width="0.0842%" height="15" fill="rgb(205,57,44)" fg:x="420" fg:w="1"/><text x="35.6035%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3535%" y="325" width="0.0842%" height="15" fill="rgb(226,151,19)" fg:x="420" fg:w="1"/><text x="35.6035%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3535%" y="309" width="0.0842%" height="15" fill="rgb(230,72,30)" fg:x="420" fg:w="1"/><text x="35.6035%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.3535%" y="293" width="0.0842%" height="15" fill="rgb(244,0,8)" fg:x="420" fg:w="1"/><text x="35.6035%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.3535%" y="277" width="0.0842%" height="15" fill="rgb(230,192,6)" fg:x="420" fg:w="1"/><text x="35.6035%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.3535%" y="261" width="0.0842%" height="15" fill="rgb(233,207,13)" fg:x="420" fg:w="1"/><text x="35.6035%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.3535%" y="245" width="0.0842%" height="15" fill="rgb(206,227,7)" fg:x="420" fg:w="1"/><text x="35.6035%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.3535%" y="229" width="0.0842%" height="15" fill="rgb(213,217,25)" fg:x="420" fg:w="1"/><text x="35.6035%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="35.4377%" y="469" width="0.0842%" height="15" fill="rgb(249,75,4)" fg:x="421" fg:w="1"/><text x="35.6877%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.51%)</title><rect x="35.1010%" y="517" width="0.5051%" height="15" fill="rgb(225,114,18)" fg:x="417" fg:w="6"/><text x="35.3510%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.51%)</title><rect x="35.1010%" y="501" width="0.5051%" height="15" fill="rgb(211,162,40)" fg:x="417" fg:w="6"/><text x="35.3510%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.25%)</title><rect x="35.3535%" y="485" width="0.2525%" height="15" fill="rgb(206,49,29)" fg:x="420" fg:w="3"/><text x="35.6035%" y="495.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="35.5219%" y="469" width="0.0842%" height="15" fill="rgb(244,8,6)" fg:x="422" fg:w="1"/><text x="35.7719%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.5219%" y="453" width="0.0842%" height="15" fill="rgb(231,194,28)" fg:x="422" fg:w="1"/><text x="35.7719%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (10 samples, 0.84%)</title><rect x="34.8485%" y="549" width="0.8418%" height="15" fill="rgb(210,69,5)" fg:x="414" fg:w="10"/><text x="35.0985%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.76%)</title><rect x="34.9327%" y="533" width="0.7576%" height="15" fill="rgb(216,186,12)" fg:x="415" fg:w="9"/><text x="35.1827%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="35.6061%" y="517" width="0.0842%" height="15" fill="rgb(238,61,15)" fg:x="423" fg:w="1"/><text x="35.8561%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6061%" y="501" width="0.0842%" height="15" fill="rgb(226,104,1)" fg:x="423" fg:w="1"/><text x="35.8561%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.6061%" y="485" width="0.0842%" height="15" fill="rgb(229,128,15)" fg:x="423" fg:w="1"/><text x="35.8561%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6061%" y="469" width="0.0842%" height="15" fill="rgb(247,110,15)" fg:x="423" fg:w="1"/><text x="35.8561%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.6061%" y="453" width="0.0842%" height="15" fill="rgb(210,74,48)" fg:x="423" fg:w="1"/><text x="35.8561%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.6061%" y="437" width="0.0842%" height="15" fill="rgb(246,121,10)" fg:x="423" fg:w="1"/><text x="35.8561%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6902%" y="517" width="0.0842%" height="15" fill="rgb(214,156,37)" fg:x="424" fg:w="1"/><text x="35.9402%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.17%)</title><rect x="35.6902%" y="533" width="0.1684%" height="15" fill="rgb(214,210,34)" fg:x="424" fg:w="2"/><text x="35.9402%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.7744%" y="517" width="0.0842%" height="15" fill="rgb(237,93,35)" fg:x="425" fg:w="1"/><text x="36.0244%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7744%" y="501" width="0.0842%" height="15" fill="rgb(206,36,8)" fg:x="425" fg:w="1"/><text x="36.0244%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.7744%" y="485" width="0.0842%" height="15" fill="rgb(208,151,12)" fg:x="425" fg:w="1"/><text x="36.0244%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7744%" y="469" width="0.0842%" height="15" fill="rgb(225,133,52)" fg:x="425" fg:w="1"/><text x="36.0244%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="35.8586%" y="501" width="0.0842%" height="15" fill="rgb(231,71,53)" fg:x="426" fg:w="1"/><text x="36.1086%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.8586%" y="485" width="0.0842%" height="15" fill="rgb(243,76,21)" fg:x="426" fg:w="1"/><text x="36.1086%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="35.8586%" y="469" width="0.0842%" height="15" fill="rgb(252,144,3)" fg:x="426" fg:w="1"/><text x="36.1086%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9428%" y="437" width="0.0842%" height="15" fill="rgb(231,199,10)" fg:x="427" fg:w="1"/><text x="36.1928%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (5 samples, 0.42%)</title><rect x="35.6902%" y="549" width="0.4209%" height="15" fill="rgb(215,18,11)" fg:x="424" fg:w="5"/><text x="35.9402%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.25%)</title><rect x="35.8586%" y="533" width="0.2525%" height="15" fill="rgb(241,65,24)" fg:x="426" fg:w="3"/><text x="36.1086%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.25%)</title><rect x="35.8586%" y="517" width="0.2525%" height="15" fill="rgb(251,192,38)" fg:x="426" fg:w="3"/><text x="36.1086%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="35.9428%" y="501" width="0.1684%" height="15" fill="rgb(205,9,35)" fg:x="427" fg:w="2"/><text x="36.1928%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (2 samples, 0.17%)</title><rect x="35.9428%" y="485" width="0.1684%" height="15" fill="rgb(229,225,49)" fg:x="427" fg:w="2"/><text x="36.1928%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (2 samples, 0.17%)</title><rect x="35.9428%" y="469" width="0.1684%" height="15" fill="rgb(207,125,39)" fg:x="427" fg:w="2"/><text x="36.1928%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="35.9428%" y="453" width="0.1684%" height="15" fill="rgb(222,78,19)" fg:x="427" fg:w="2"/><text x="36.1928%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0269%" y="437" width="0.0842%" height="15" fill="rgb(248,207,20)" fg:x="428" fg:w="1"/><text x="36.2769%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0269%" y="421" width="0.0842%" height="15" fill="rgb(205,103,49)" fg:x="428" fg:w="1"/><text x="36.2769%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="36.1111%" y="533" width="0.0842%" height="15" fill="rgb(216,42,28)" fg:x="429" fg:w="1"/><text x="36.3611%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="36.1111%" y="517" width="0.0842%" height="15" fill="rgb(213,205,53)" fg:x="429" fg:w="1"/><text x="36.3611%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.1111%" y="501" width="0.0842%" height="15" fill="rgb(239,140,53)" fg:x="429" fg:w="1"/><text x="36.3611%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="36.1111%" y="485" width="0.0842%" height="15" fill="rgb(248,95,9)" fg:x="429" fg:w="1"/><text x="36.3611%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.1111%" y="469" width="0.0842%" height="15" fill="rgb(254,58,47)" fg:x="429" fg:w="1"/><text x="36.3611%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1111%" y="453" width="0.0842%" height="15" fill="rgb(234,227,14)" fg:x="429" fg:w="1"/><text x="36.3611%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.1111%" y="437" width="0.0842%" height="15" fill="rgb(205,192,45)" fg:x="429" fg:w="1"/><text x="36.3611%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1111%" y="421" width="0.0842%" height="15" fill="rgb(253,187,31)" fg:x="429" fg:w="1"/><text x="36.3611%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.1111%" y="405" width="0.0842%" height="15" fill="rgb(222,6,32)" fg:x="429" fg:w="1"/><text x="36.3611%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1111%" y="389" width="0.0842%" height="15" fill="rgb(249,190,19)" fg:x="429" fg:w="1"/><text x="36.3611%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.1111%" y="373" width="0.0842%" height="15" fill="rgb(251,28,20)" fg:x="429" fg:w="1"/><text x="36.3611%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1111%" y="357" width="0.0842%" height="15" fill="rgb(210,223,40)" fg:x="429" fg:w="1"/><text x="36.3611%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.17%)</title><rect x="36.1953%" y="517" width="0.1684%" height="15" fill="rgb(216,137,22)" fg:x="430" fg:w="2"/><text x="36.4453%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2795%" y="501" width="0.0842%" height="15" fill="rgb(247,39,34)" fg:x="431" fg:w="1"/><text x="36.5295%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2795%" y="485" width="0.0842%" height="15" fill="rgb(239,43,50)" fg:x="431" fg:w="1"/><text x="36.5295%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2795%" y="469" width="0.0842%" height="15" fill="rgb(241,212,9)" fg:x="431" fg:w="1"/><text x="36.5295%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2795%" y="453" width="0.0842%" height="15" fill="rgb(205,8,2)" fg:x="431" fg:w="1"/><text x="36.5295%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2795%" y="437" width="0.0842%" height="15" fill="rgb(217,173,54)" fg:x="431" fg:w="1"/><text x="36.5295%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2795%" y="421" width="0.0842%" height="15" fill="rgb(208,149,52)" fg:x="431" fg:w="1"/><text x="36.5295%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.2795%" y="405" width="0.0842%" height="15" fill="rgb(239,99,40)" fg:x="431" fg:w="1"/><text x="36.5295%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.3636%" y="485" width="0.0842%" height="15" fill="rgb(233,214,26)" fg:x="432" fg:w="1"/><text x="36.6136%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="36.3636%" y="469" width="0.0842%" height="15" fill="rgb(231,225,37)" fg:x="432" fg:w="1"/><text x="36.6136%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3636%" y="453" width="0.0842%" height="15" fill="rgb(252,55,35)" fg:x="432" fg:w="1"/><text x="36.6136%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3636%" y="437" width="0.0842%" height="15" fill="rgb(239,43,18)" fg:x="432" fg:w="1"/><text x="36.6136%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3636%" y="421" width="0.0842%" height="15" fill="rgb(251,125,49)" fg:x="432" fg:w="1"/><text x="36.6136%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.4478%" y="389" width="0.0842%" height="15" fill="rgb(212,83,54)" fg:x="433" fg:w="1"/><text x="36.6978%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.42%)</title><rect x="36.1953%" y="533" width="0.4209%" height="15" fill="rgb(250,75,6)" fg:x="430" fg:w="5"/><text x="36.4453%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.25%)</title><rect x="36.3636%" y="517" width="0.2525%" height="15" fill="rgb(252,36,40)" fg:x="432" fg:w="3"/><text x="36.6136%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.25%)</title><rect x="36.3636%" y="501" width="0.2525%" height="15" fill="rgb(230,91,51)" fg:x="432" fg:w="3"/><text x="36.6136%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.17%)</title><rect x="36.4478%" y="485" width="0.1684%" height="15" fill="rgb(212,92,28)" fg:x="433" fg:w="2"/><text x="36.6978%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="36.4478%" y="469" width="0.1684%" height="15" fill="rgb(227,13,22)" fg:x="433" fg:w="2"/><text x="36.6978%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="36.4478%" y="453" width="0.1684%" height="15" fill="rgb(239,204,32)" fg:x="433" fg:w="2"/><text x="36.6978%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="36.4478%" y="437" width="0.1684%" height="15" fill="rgb(228,49,41)" fg:x="433" fg:w="2"/><text x="36.6978%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="36.4478%" y="421" width="0.1684%" height="15" fill="rgb(206,95,6)" fg:x="433" fg:w="2"/><text x="36.6978%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="36.4478%" y="405" width="0.1684%" height="15" fill="rgb(251,20,14)" fg:x="433" fg:w="2"/><text x="36.6978%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.5320%" y="389" width="0.0842%" height="15" fill="rgb(214,99,28)" fg:x="434" fg:w="1"/><text x="36.7820%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.5320%" y="373" width="0.0842%" height="15" fill="rgb(239,122,54)" fg:x="434" fg:w="1"/><text x="36.7820%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (161 samples, 13.55%)</title><rect x="23.1481%" y="565" width="13.5522%" height="15" fill="rgb(218,217,46)" fg:x="275" fg:w="161"/><text x="23.3981%" y="575.50">plugins_core::build:..</text></g><g><title>plugins_core::tools::set_container (7 samples, 0.59%)</title><rect x="36.1111%" y="549" width="0.5892%" height="15" fill="rgb(249,106,28)" fg:x="429" fg:w="7"/><text x="36.3611%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="36.6162%" y="533" width="0.0842%" height="15" fill="rgb(250,158,18)" fg:x="435" fg:w="1"/><text x="36.8662%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="36.6162%" y="517" width="0.0842%" height="15" fill="rgb(226,137,29)" fg:x="435" fg:w="1"/><text x="36.8662%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="36.6162%" y="501" width="0.0842%" height="15" fill="rgb(210,188,1)" fg:x="435" fg:w="1"/><text x="36.8662%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6162%" y="485" width="0.0842%" height="15" fill="rgb(227,84,42)" fg:x="435" fg:w="1"/><text x="36.8662%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="36.6162%" y="469" width="0.0842%" height="15" fill="rgb(222,147,48)" fg:x="435" fg:w="1"/><text x="36.8662%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6162%" y="453" width="0.0842%" height="15" fill="rgb(241,150,43)" fg:x="435" fg:w="1"/><text x="36.8662%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="36.7003%" y="565" width="0.0842%" height="15" fill="rgb(206,139,52)" fg:x="436" fg:w="1"/><text x="36.9503%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="36.7003%" y="549" width="0.0842%" height="15" fill="rgb(230,63,14)" fg:x="436" fg:w="1"/><text x="36.9503%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="36.7003%" y="533" width="0.0842%" height="15" fill="rgb(247,8,20)" fg:x="436" fg:w="1"/><text x="36.9503%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="36.7003%" y="517" width="0.0842%" height="15" fill="rgb(213,115,4)" fg:x="436" fg:w="1"/><text x="36.9503%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="36.7003%" y="501" width="0.0842%" height="15" fill="rgb(241,79,49)" fg:x="436" fg:w="1"/><text x="36.9503%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="36.7003%" y="485" width="0.0842%" height="15" fill="rgb(222,42,35)" fg:x="436" fg:w="1"/><text x="36.9503%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.7003%" y="469" width="0.0842%" height="15" fill="rgb(247,59,23)" fg:x="436" fg:w="1"/><text x="36.9503%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.7003%" y="453" width="0.0842%" height="15" fill="rgb(247,93,18)" fg:x="436" fg:w="1"/><text x="36.9503%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.7003%" y="437" width="0.0842%" height="15" fill="rgb(249,107,47)" fg:x="436" fg:w="1"/><text x="36.9503%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="36.7003%" y="421" width="0.0842%" height="15" fill="rgb(219,27,1)" fg:x="436" fg:w="1"/><text x="36.9503%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="36.7003%" y="405" width="0.0842%" height="15" fill="rgb(217,82,32)" fg:x="436" fg:w="1"/><text x="36.9503%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="36.7003%" y="389" width="0.0842%" height="15" fill="rgb(250,129,47)" fg:x="436" fg:w="1"/><text x="36.9503%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="36.7003%" y="373" width="0.0842%" height="15" fill="rgb(253,88,35)" fg:x="436" fg:w="1"/><text x="36.9503%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.7003%" y="357" width="0.0842%" height="15" fill="rgb(245,221,14)" fg:x="436" fg:w="1"/><text x="36.9503%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7845%" y="501" width="0.0842%" height="15" fill="rgb(217,119,54)" fg:x="437" fg:w="1"/><text x="37.0345%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7845%" y="485" width="0.0842%" height="15" fill="rgb(247,128,31)" fg:x="437" fg:w="1"/><text x="37.0345%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.17%)</title><rect x="36.7845%" y="517" width="0.1684%" height="15" fill="rgb(211,99,22)" fg:x="437" fg:w="2"/><text x="37.0345%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8687%" y="501" width="0.0842%" height="15" fill="rgb(212,20,17)" fg:x="438" fg:w="1"/><text x="37.1187%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8687%" y="485" width="0.0842%" height="15" fill="rgb(209,159,29)" fg:x="438" fg:w="1"/><text x="37.1187%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.25%)</title><rect x="36.7845%" y="533" width="0.2525%" height="15" fill="rgb(222,177,53)" fg:x="437" fg:w="3"/><text x="37.0345%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="36.9529%" y="517" width="0.0842%" height="15" fill="rgb(234,46,43)" fg:x="439" fg:w="1"/><text x="37.2029%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.9529%" y="501" width="0.0842%" height="15" fill="rgb(208,108,14)" fg:x="439" fg:w="1"/><text x="37.2029%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.0370%" y="533" width="0.0842%" height="15" fill="rgb(226,78,53)" fg:x="440" fg:w="1"/><text x="37.2870%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.0370%" y="517" width="0.0842%" height="15" fill="rgb(230,20,41)" fg:x="440" fg:w="1"/><text x="37.2870%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.0370%" y="501" width="0.0842%" height="15" fill="rgb(213,195,35)" fg:x="440" fg:w="1"/><text x="37.2870%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.0370%" y="485" width="0.0842%" height="15" fill="rgb(242,62,36)" fg:x="440" fg:w="1"/><text x="37.2870%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.0370%" y="469" width="0.0842%" height="15" fill="rgb(222,210,37)" fg:x="440" fg:w="1"/><text x="37.2870%" y="479.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="37.1212%" y="469" width="0.0842%" height="15" fill="rgb(232,107,19)" fg:x="441" fg:w="1"/><text x="37.3712%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="37.1212%" y="453" width="0.0842%" height="15" fill="rgb(235,85,17)" fg:x="441" fg:w="1"/><text x="37.3712%" y="463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="37.1212%" y="437" width="0.0842%" height="15" fill="rgb(219,195,31)" fg:x="441" fg:w="1"/><text x="37.3712%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="37.1212%" y="421" width="0.0842%" height="15" fill="rgb(231,183,30)" fg:x="441" fg:w="1"/><text x="37.3712%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="37.1212%" y="405" width="0.0842%" height="15" fill="rgb(212,0,11)" fg:x="441" fg:w="1"/><text x="37.3712%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.17%)</title><rect x="37.1212%" y="517" width="0.1684%" height="15" fill="rgb(249,53,54)" fg:x="441" fg:w="2"/><text x="37.3712%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.17%)</title><rect x="37.1212%" y="501" width="0.1684%" height="15" fill="rgb(211,118,13)" fg:x="441" fg:w="2"/><text x="37.3712%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="37.1212%" y="485" width="0.1684%" height="15" fill="rgb(237,42,9)" fg:x="441" fg:w="2"/><text x="37.3712%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.2054%" y="469" width="0.0842%" height="15" fill="rgb(227,68,32)" fg:x="442" fg:w="1"/><text x="37.4554%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.2054%" y="453" width="0.0842%" height="15" fill="rgb(238,10,7)" fg:x="442" fg:w="1"/><text x="37.4554%" y="463.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.25%)</title><rect x="37.1212%" y="533" width="0.2525%" height="15" fill="rgb(224,42,12)" fg:x="441" fg:w="3"/><text x="37.3712%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="37.2896%" y="517" width="0.0842%" height="15" fill="rgb(252,190,5)" fg:x="443" fg:w="1"/><text x="37.5396%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="37.2896%" y="501" width="0.0842%" height="15" fill="rgb(220,214,39)" fg:x="443" fg:w="1"/><text x="37.5396%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.2896%" y="485" width="0.0842%" height="15" fill="rgb(247,98,4)" fg:x="443" fg:w="1"/><text x="37.5396%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.2896%" y="469" width="0.0842%" height="15" fill="rgb(211,60,12)" fg:x="443" fg:w="1"/><text x="37.5396%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.2896%" y="453" width="0.0842%" height="15" fill="rgb(224,42,10)" fg:x="443" fg:w="1"/><text x="37.5396%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.2896%" y="437" width="0.0842%" height="15" fill="rgb(217,167,4)" fg:x="443" fg:w="1"/><text x="37.5396%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.2896%" y="421" width="0.0842%" height="15" fill="rgb(253,18,17)" fg:x="443" fg:w="1"/><text x="37.5396%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="37.2896%" y="405" width="0.0842%" height="15" fill="rgb(249,186,44)" fg:x="443" fg:w="1"/><text x="37.5396%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="37.2896%" y="389" width="0.0842%" height="15" fill="rgb(254,124,54)" fg:x="443" fg:w="1"/><text x="37.5396%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="37.2896%" y="373" width="0.0842%" height="15" fill="rgb(220,124,39)" fg:x="443" fg:w="1"/><text x="37.5396%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="37.2896%" y="357" width="0.0842%" height="15" fill="rgb(225,96,46)" fg:x="443" fg:w="1"/><text x="37.5396%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="37.4579%" y="501" width="0.0842%" height="15" fill="rgb(221,106,12)" fg:x="445" fg:w="1"/><text x="37.7079%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.4579%" y="485" width="0.0842%" height="15" fill="rgb(227,133,23)" fg:x="445" fg:w="1"/><text x="37.7079%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4579%" y="469" width="0.0842%" height="15" fill="rgb(216,44,52)" fg:x="445" fg:w="1"/><text x="37.7079%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.4579%" y="453" width="0.0842%" height="15" fill="rgb(239,149,7)" fg:x="445" fg:w="1"/><text x="37.7079%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4579%" y="437" width="0.0842%" height="15" fill="rgb(211,157,31)" fg:x="445" fg:w="1"/><text x="37.7079%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.4579%" y="421" width="0.0842%" height="15" fill="rgb(206,215,22)" fg:x="445" fg:w="1"/><text x="37.7079%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4579%" y="405" width="0.0842%" height="15" fill="rgb(208,113,15)" fg:x="445" fg:w="1"/><text x="37.7079%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="37.5421%" y="453" width="0.0842%" height="15" fill="rgb(207,189,15)" fg:x="446" fg:w="1"/><text x="37.7921%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.5421%" y="437" width="0.0842%" height="15" fill="rgb(231,115,4)" fg:x="446" fg:w="1"/><text x="37.7921%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.5421%" y="421" width="0.0842%" height="15" fill="rgb(253,117,2)" fg:x="446" fg:w="1"/><text x="37.7921%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.5421%" y="405" width="0.0842%" height="15" fill="rgb(248,48,24)" fg:x="446" fg:w="1"/><text x="37.7921%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.5421%" y="389" width="0.0842%" height="15" fill="rgb(241,28,46)" fg:x="446" fg:w="1"/><text x="37.7921%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.5421%" y="373" width="0.0842%" height="15" fill="rgb(216,165,52)" fg:x="446" fg:w="1"/><text x="37.7921%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.5421%" y="357" width="0.0842%" height="15" fill="rgb(220,222,34)" fg:x="446" fg:w="1"/><text x="37.7921%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6263%" y="453" width="0.0842%" height="15" fill="rgb(247,222,49)" fg:x="447" fg:w="1"/><text x="37.8763%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="37.7104%" y="453" width="0.0842%" height="15" fill="rgb(240,10,31)" fg:x="448" fg:w="1"/><text x="37.9604%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7104%" y="437" width="0.0842%" height="15" fill="rgb(221,199,35)" fg:x="448" fg:w="1"/><text x="37.9604%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.34%)</title><rect x="37.5421%" y="485" width="0.3367%" height="15" fill="rgb(230,223,11)" fg:x="446" fg:w="4"/><text x="37.7921%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.34%)</title><rect x="37.5421%" y="469" width="0.3367%" height="15" fill="rgb(218,82,45)" fg:x="446" fg:w="4"/><text x="37.7921%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.7946%" y="453" width="0.0842%" height="15" fill="rgb(233,213,33)" fg:x="449" fg:w="1"/><text x="38.0446%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.7946%" y="437" width="0.0842%" height="15" fill="rgb(210,143,52)" fg:x="449" fg:w="1"/><text x="38.0446%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="37.7946%" y="421" width="0.0842%" height="15" fill="rgb(206,95,4)" fg:x="449" fg:w="1"/><text x="38.0446%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7946%" y="405" width="0.0842%" height="15" fill="rgb(246,164,46)" fg:x="449" fg:w="1"/><text x="38.0446%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7946%" y="389" width="0.0842%" height="15" fill="rgb(213,210,47)" fg:x="449" fg:w="1"/><text x="38.0446%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="37.8788%" y="437" width="0.0842%" height="15" fill="rgb(210,12,38)" fg:x="450" fg:w="1"/><text x="38.1288%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.8788%" y="421" width="0.0842%" height="15" fill="rgb(252,192,54)" fg:x="450" fg:w="1"/><text x="38.1288%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="37.8788%" y="405" width="0.0842%" height="15" fill="rgb(242,92,6)" fg:x="450" fg:w="1"/><text x="38.1288%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.8788%" y="389" width="0.0842%" height="15" fill="rgb(253,154,15)" fg:x="450" fg:w="1"/><text x="38.1288%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.67%)</title><rect x="37.3737%" y="517" width="0.6734%" height="15" fill="rgb(209,20,43)" fg:x="444" fg:w="8"/><text x="37.6237%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.51%)</title><rect x="37.5421%" y="501" width="0.5051%" height="15" fill="rgb(232,28,49)" fg:x="446" fg:w="6"/><text x="37.7921%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.17%)</title><rect x="37.8788%" y="485" width="0.1684%" height="15" fill="rgb(248,131,53)" fg:x="450" fg:w="2"/><text x="38.1288%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="37.8788%" y="469" width="0.1684%" height="15" fill="rgb(214,16,30)" fg:x="450" fg:w="2"/><text x="38.1288%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="37.8788%" y="453" width="0.1684%" height="15" fill="rgb(245,16,0)" fg:x="450" fg:w="2"/><text x="38.1288%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9630%" y="437" width="0.0842%" height="15" fill="rgb(245,17,35)" fg:x="451" fg:w="1"/><text x="38.2130%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0471%" y="517" width="0.0842%" height="15" fill="rgb(249,27,53)" fg:x="452" fg:w="1"/><text x="38.2971%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.0471%" y="501" width="0.0842%" height="15" fill="rgb(214,73,24)" fg:x="452" fg:w="1"/><text x="38.2971%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0471%" y="485" width="0.0842%" height="15" fill="rgb(223,84,37)" fg:x="452" fg:w="1"/><text x="38.2971%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (11 samples, 0.93%)</title><rect x="37.3737%" y="533" width="0.9259%" height="15" fill="rgb(210,109,28)" fg:x="444" fg:w="11"/><text x="37.6237%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="38.1313%" y="517" width="0.1684%" height="15" fill="rgb(208,186,6)" fg:x="453" fg:w="2"/><text x="38.3813%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="38.1313%" y="501" width="0.1684%" height="15" fill="rgb(235,201,30)" fg:x="453" fg:w="2"/><text x="38.3813%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="38.1313%" y="485" width="0.1684%" height="15" fill="rgb(216,198,48)" fg:x="453" fg:w="2"/><text x="38.3813%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.2155%" y="469" width="0.0842%" height="15" fill="rgb(254,186,25)" fg:x="454" fg:w="1"/><text x="38.4655%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2155%" y="453" width="0.0842%" height="15" fill="rgb(227,87,5)" fg:x="454" fg:w="1"/><text x="38.4655%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (19 samples, 1.60%)</title><rect x="36.7845%" y="565" width="1.5993%" height="15" fill="rgb(236,205,25)" fg:x="437" fg:w="19"/><text x="37.0345%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (19 samples, 1.60%)</title><rect x="36.7845%" y="549" width="1.5993%" height="15" fill="rgb(229,99,32)" fg:x="437" fg:w="19"/><text x="37.0345%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="38.2997%" y="533" width="0.0842%" height="15" fill="rgb(231,177,31)" fg:x="455" fg:w="1"/><text x="38.5497%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="38.2997%" y="517" width="0.0842%" height="15" fill="rgb(246,15,2)" fg:x="455" fg:w="1"/><text x="38.5497%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="38.2997%" y="501" width="0.0842%" height="15" fill="rgb(207,39,15)" fg:x="455" fg:w="1"/><text x="38.5497%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="38.4680%" y="533" width="0.0842%" height="15" fill="rgb(207,44,9)" fg:x="457" fg:w="1"/><text x="38.7180%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.4680%" y="517" width="0.0842%" height="15" fill="rgb(225,224,33)" fg:x="457" fg:w="1"/><text x="38.7180%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4680%" y="501" width="0.0842%" height="15" fill="rgb(252,151,3)" fg:x="457" fg:w="1"/><text x="38.7180%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (2 samples, 0.17%)</title><rect x="38.5522%" y="533" width="0.1684%" height="15" fill="rgb(211,140,13)" fg:x="458" fg:w="2"/><text x="38.8022%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (4 samples, 0.34%)</title><rect x="38.4680%" y="549" width="0.3367%" height="15" fill="rgb(239,225,17)" fg:x="457" fg:w="4"/><text x="38.7180%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.7205%" y="533" width="0.0842%" height="15" fill="rgb(223,170,52)" fg:x="460" fg:w="1"/><text x="38.9705%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.7205%" y="517" width="0.0842%" height="15" fill="rgb(212,64,21)" fg:x="460" fg:w="1"/><text x="38.9705%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="38.7205%" y="501" width="0.0842%" height="15" fill="rgb(236,126,48)" fg:x="460" fg:w="1"/><text x="38.9705%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="38.7205%" y="485" width="0.0842%" height="15" fill="rgb(209,135,11)" fg:x="460" fg:w="1"/><text x="38.9705%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="38.7205%" y="469" width="0.0842%" height="15" fill="rgb(228,126,40)" fg:x="460" fg:w="1"/><text x="38.9705%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="38.7205%" y="453" width="0.0842%" height="15" fill="rgb(205,196,36)" fg:x="460" fg:w="1"/><text x="38.9705%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.8047%" y="549" width="0.0842%" height="15" fill="rgb(243,160,33)" fg:x="461" fg:w="1"/><text x="39.0547%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.8047%" y="533" width="0.0842%" height="15" fill="rgb(210,84,20)" fg:x="461" fg:w="1"/><text x="39.0547%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.8047%" y="517" width="0.0842%" height="15" fill="rgb(228,213,30)" fg:x="461" fg:w="1"/><text x="39.0547%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.8047%" y="501" width="0.0842%" height="15" fill="rgb(252,33,45)" fg:x="461" fg:w="1"/><text x="39.0547%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.8047%" y="485" width="0.0842%" height="15" fill="rgb(254,227,20)" fg:x="461" fg:w="1"/><text x="39.0547%" y="495.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.25%)</title><rect x="38.8889%" y="549" width="0.2525%" height="15" fill="rgb(228,192,2)" fg:x="462" fg:w="3"/><text x="39.1389%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.17%)</title><rect x="38.9731%" y="533" width="0.1684%" height="15" fill="rgb(233,32,8)" fg:x="463" fg:w="2"/><text x="39.2231%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="39.0572%" y="517" width="0.0842%" height="15" fill="rgb(220,146,47)" fg:x="464" fg:w="1"/><text x="39.3072%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.0572%" y="501" width="0.0842%" height="15" fill="rgb(246,194,1)" fg:x="464" fg:w="1"/><text x="39.3072%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.0572%" y="485" width="0.0842%" height="15" fill="rgb(218,203,9)" fg:x="464" fg:w="1"/><text x="39.3072%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="39.0572%" y="469" width="0.0842%" height="15" fill="rgb(237,97,14)" fg:x="464" fg:w="1"/><text x="39.3072%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="39.1414%" y="453" width="0.0842%" height="15" fill="rgb(239,76,15)" fg:x="465" fg:w="1"/><text x="39.3914%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.17%)</title><rect x="39.1414%" y="469" width="0.1684%" height="15" fill="rgb(222,53,45)" fg:x="465" fg:w="2"/><text x="39.3914%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.2256%" y="453" width="0.0842%" height="15" fill="rgb(237,88,5)" fg:x="466" fg:w="1"/><text x="39.4756%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2256%" y="437" width="0.0842%" height="15" fill="rgb(218,223,35)" fg:x="466" fg:w="1"/><text x="39.4756%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.2256%" y="421" width="0.0842%" height="15" fill="rgb(243,229,38)" fg:x="466" fg:w="1"/><text x="39.4756%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2256%" y="405" width="0.0842%" height="15" fill="rgb(240,75,41)" fg:x="466" fg:w="1"/><text x="39.4756%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.2256%" y="389" width="0.0842%" height="15" fill="rgb(209,110,37)" fg:x="466" fg:w="1"/><text x="39.4756%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.2256%" y="373" width="0.0842%" height="15" fill="rgb(221,130,46)" fg:x="466" fg:w="1"/><text x="39.4756%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2256%" y="357" width="0.0842%" height="15" fill="rgb(237,160,20)" fg:x="466" fg:w="1"/><text x="39.4756%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3939%" y="421" width="0.0842%" height="15" fill="rgb(234,126,24)" fg:x="468" fg:w="1"/><text x="39.6439%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.42%)</title><rect x="39.1414%" y="501" width="0.4209%" height="15" fill="rgb(207,177,9)" fg:x="465" fg:w="5"/><text x="39.3914%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (5 samples, 0.42%)</title><rect x="39.1414%" y="485" width="0.4209%" height="15" fill="rgb(231,191,33)" fg:x="465" fg:w="5"/><text x="39.3914%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.25%)</title><rect x="39.3098%" y="469" width="0.2525%" height="15" fill="rgb(207,42,1)" fg:x="467" fg:w="3"/><text x="39.5598%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="39.3098%" y="453" width="0.2525%" height="15" fill="rgb(218,34,50)" fg:x="467" fg:w="3"/><text x="39.5598%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="39.3939%" y="437" width="0.1684%" height="15" fill="rgb(254,126,39)" fg:x="468" fg:w="2"/><text x="39.6439%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="39.4781%" y="421" width="0.0842%" height="15" fill="rgb(251,17,26)" fg:x="469" fg:w="1"/><text x="39.7281%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="39.4781%" y="405" width="0.0842%" height="15" fill="rgb(252,215,34)" fg:x="469" fg:w="1"/><text x="39.7281%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="39.4781%" y="389" width="0.0842%" height="15" fill="rgb(217,120,44)" fg:x="469" fg:w="1"/><text x="39.7281%" y="399.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="39.5623%" y="501" width="0.0842%" height="15" fill="rgb(211,31,11)" fg:x="470" fg:w="1"/><text x="39.8123%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.5623%" y="485" width="0.0842%" height="15" fill="rgb(222,69,51)" fg:x="470" fg:w="1"/><text x="39.8123%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.6465%" y="469" width="0.0842%" height="15" fill="rgb(215,229,42)" fg:x="471" fg:w="1"/><text x="39.8965%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.17%)</title><rect x="39.7306%" y="469" width="0.1684%" height="15" fill="rgb(212,102,15)" fg:x="472" fg:w="2"/><text x="39.9806%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="39.7306%" y="453" width="0.1684%" height="15" fill="rgb(205,179,41)" fg:x="472" fg:w="2"/><text x="39.9806%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="39.8148%" y="437" width="0.0842%" height="15" fill="rgb(219,148,46)" fg:x="473" fg:w="1"/><text x="40.0648%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.93%)</title><rect x="39.1414%" y="533" width="0.9259%" height="15" fill="rgb(243,40,19)" fg:x="465" fg:w="11"/><text x="39.3914%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.93%)</title><rect x="39.1414%" y="517" width="0.9259%" height="15" fill="rgb(208,206,34)" fg:x="465" fg:w="11"/><text x="39.3914%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.42%)</title><rect x="39.6465%" y="501" width="0.4209%" height="15" fill="rgb(244,184,38)" fg:x="471" fg:w="5"/><text x="39.8965%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.42%)</title><rect x="39.6465%" y="485" width="0.4209%" height="15" fill="rgb(244,151,47)" fg:x="471" fg:w="5"/><text x="39.8965%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="39.8990%" y="469" width="0.1684%" height="15" fill="rgb(236,134,42)" fg:x="474" fg:w="2"/><text x="40.1490%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.17%)</title><rect x="39.8990%" y="453" width="0.1684%" height="15" fill="rgb(233,93,22)" fg:x="474" fg:w="2"/><text x="40.1490%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="39.8990%" y="437" width="0.1684%" height="15" fill="rgb(211,202,10)" fg:x="474" fg:w="2"/><text x="40.1490%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="39.9832%" y="421" width="0.0842%" height="15" fill="rgb(240,63,8)" fg:x="475" fg:w="1"/><text x="40.2332%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="39.9832%" y="405" width="0.0842%" height="15" fill="rgb(214,9,4)" fg:x="475" fg:w="1"/><text x="40.2332%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9832%" y="389" width="0.0842%" height="15" fill="rgb(243,66,45)" fg:x="475" fg:w="1"/><text x="40.2332%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.0673%" y="533" width="0.0842%" height="15" fill="rgb(220,50,42)" fg:x="476" fg:w="1"/><text x="40.3173%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0673%" y="517" width="0.0842%" height="15" fill="rgb(220,134,27)" fg:x="476" fg:w="1"/><text x="40.3173%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0673%" y="501" width="0.0842%" height="15" fill="rgb(246,151,50)" fg:x="476" fg:w="1"/><text x="40.3173%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0673%" y="485" width="0.0842%" height="15" fill="rgb(238,216,27)" fg:x="476" fg:w="1"/><text x="40.3173%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1515%" y="517" width="0.0842%" height="15" fill="rgb(250,92,11)" fg:x="477" fg:w="1"/><text x="40.4015%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="40.1515%" y="533" width="0.1684%" height="15" fill="rgb(248,183,6)" fg:x="477" fg:w="2"/><text x="40.4015%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.2357%" y="517" width="0.0842%" height="15" fill="rgb(211,204,50)" fg:x="478" fg:w="1"/><text x="40.4857%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2357%" y="501" width="0.0842%" height="15" fill="rgb(252,55,47)" fg:x="478" fg:w="1"/><text x="40.4857%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.2357%" y="485" width="0.0842%" height="15" fill="rgb(240,198,32)" fg:x="478" fg:w="1"/><text x="40.4857%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2357%" y="469" width="0.0842%" height="15" fill="rgb(224,203,19)" fg:x="478" fg:w="1"/><text x="40.4857%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.2357%" y="453" width="0.0842%" height="15" fill="rgb(205,27,16)" fg:x="478" fg:w="1"/><text x="40.4857%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2357%" y="437" width="0.0842%" height="15" fill="rgb(224,226,17)" fg:x="478" fg:w="1"/><text x="40.4857%" y="447.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (339 samples, 28.54%)</title><rect x="11.8687%" y="581" width="28.5354%" height="15" fill="rgb(205,216,54)" fg:x="141" fg:w="339"/><text x="12.1187%" y="591.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixt..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (24 samples, 2.02%)</title><rect x="38.3838%" y="565" width="2.0202%" height="15" fill="rgb(248,168,46)" fg:x="456" fg:w="24"/><text x="38.6338%" y="575.50">p..</text></g><g><title>plugins_core::build::Build::save (15 samples, 1.26%)</title><rect x="39.1414%" y="549" width="1.2626%" height="15" fill="rgb(226,111,45)" fg:x="465" fg:w="15"/><text x="39.3914%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="40.3199%" y="533" width="0.0842%" height="15" fill="rgb(231,15,9)" fg:x="479" fg:w="1"/><text x="40.5699%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3199%" y="517" width="0.0842%" height="15" fill="rgb(243,168,3)" fg:x="479" fg:w="1"/><text x="40.5699%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.25%)</title><rect x="40.4882%" y="565" width="0.2525%" height="15" fill="rgb(221,220,54)" fg:x="481" fg:w="3"/><text x="40.7382%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.25%)</title><rect x="40.4882%" y="549" width="0.2525%" height="15" fill="rgb(232,174,38)" fg:x="481" fg:w="3"/><text x="40.7382%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6566%" y="533" width="0.0842%" height="15" fill="rgb(205,14,38)" fg:x="483" fg:w="1"/><text x="40.9066%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.34%)</title><rect x="40.7407%" y="565" width="0.3367%" height="15" fill="rgb(234,89,19)" fg:x="484" fg:w="4"/><text x="40.9907%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.34%)</title><rect x="40.7407%" y="549" width="0.3367%" height="15" fill="rgb(216,68,51)" fg:x="484" fg:w="4"/><text x="40.9907%" y="559.50"></text></g><g><title>core::fmt::write (4 samples, 0.34%)</title><rect x="40.7407%" y="533" width="0.3367%" height="15" fill="rgb(213,49,2)" fg:x="484" fg:w="4"/><text x="40.9907%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.34%)</title><rect x="40.7407%" y="517" width="0.3367%" height="15" fill="rgb(242,146,30)" fg:x="484" fg:w="4"/><text x="40.9907%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (4 samples, 0.34%)</title><rect x="40.7407%" y="501" width="0.3367%" height="15" fill="rgb(224,188,11)" fg:x="484" fg:w="4"/><text x="40.9907%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (4 samples, 0.34%)</title><rect x="40.7407%" y="485" width="0.3367%" height="15" fill="rgb(213,159,11)" fg:x="484" fg:w="4"/><text x="40.9907%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (4 samples, 0.34%)</title><rect x="40.7407%" y="469" width="0.3367%" height="15" fill="rgb(229,13,31)" fg:x="484" fg:w="4"/><text x="40.9907%" y="479.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="40.8249%" y="453" width="0.2525%" height="15" fill="rgb(209,103,11)" fg:x="485" fg:w="3"/><text x="41.0749%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="40.8249%" y="437" width="0.2525%" height="15" fill="rgb(206,3,4)" fg:x="485" fg:w="3"/><text x="41.0749%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.17%)</title><rect x="40.9091%" y="421" width="0.1684%" height="15" fill="rgb(252,10,49)" fg:x="486" fg:w="2"/><text x="41.1591%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.17%)</title><rect x="40.9091%" y="405" width="0.1684%" height="15" fill="rgb(217,160,32)" fg:x="486" fg:w="2"/><text x="41.1591%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="40.9091%" y="389" width="0.1684%" height="15" fill="rgb(249,196,0)" fg:x="486" fg:w="2"/><text x="41.1591%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.9933%" y="373" width="0.0842%" height="15" fill="rgb(213,17,48)" fg:x="487" fg:w="1"/><text x="41.2433%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="40.9933%" y="357" width="0.0842%" height="15" fill="rgb(206,42,46)" fg:x="487" fg:w="1"/><text x="41.2433%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="40.9933%" y="341" width="0.0842%" height="15" fill="rgb(212,105,24)" fg:x="487" fg:w="1"/><text x="41.2433%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="40.9933%" y="325" width="0.0842%" height="15" fill="rgb(243,216,30)" fg:x="487" fg:w="1"/><text x="41.2433%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="40.9933%" y="309" width="0.0842%" height="15" fill="rgb(207,121,3)" fg:x="487" fg:w="1"/><text x="41.2433%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.9933%" y="293" width="0.0842%" height="15" fill="rgb(249,78,0)" fg:x="487" fg:w="1"/><text x="41.2433%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.9933%" y="277" width="0.0842%" height="15" fill="rgb(244,151,32)" fg:x="487" fg:w="1"/><text x="41.2433%" y="287.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (4 samples, 0.34%)</title><rect x="41.1616%" y="501" width="0.3367%" height="15" fill="rgb(228,63,25)" fg:x="489" fg:w="4"/><text x="41.4116%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.4141%" y="485" width="0.0842%" height="15" fill="rgb(231,158,23)" fg:x="492" fg:w="1"/><text x="41.6641%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.4141%" y="469" width="0.0842%" height="15" fill="rgb(248,107,23)" fg:x="492" fg:w="1"/><text x="41.6641%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.4141%" y="453" width="0.0842%" height="15" fill="rgb(215,168,21)" fg:x="492" fg:w="1"/><text x="41.6641%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.4141%" y="437" width="0.0842%" height="15" fill="rgb(227,83,22)" fg:x="492" fg:w="1"/><text x="41.6641%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.4141%" y="421" width="0.0842%" height="15" fill="rgb(217,118,43)" fg:x="492" fg:w="1"/><text x="41.6641%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.4141%" y="405" width="0.0842%" height="15" fill="rgb(229,220,41)" fg:x="492" fg:w="1"/><text x="41.6641%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.4141%" y="389" width="0.0842%" height="15" fill="rgb(254,146,46)" fg:x="492" fg:w="1"/><text x="41.6641%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.4141%" y="373" width="0.0842%" height="15" fill="rgb(233,208,31)" fg:x="492" fg:w="1"/><text x="41.6641%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.4141%" y="357" width="0.0842%" height="15" fill="rgb(222,162,7)" fg:x="492" fg:w="1"/><text x="41.6641%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.4141%" y="341" width="0.0842%" height="15" fill="rgb(230,117,45)" fg:x="492" fg:w="1"/><text x="41.6641%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.4141%" y="325" width="0.0842%" height="15" fill="rgb(239,163,6)" fg:x="492" fg:w="1"/><text x="41.6641%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.4141%" y="309" width="0.0842%" height="15" fill="rgb(246,130,17)" fg:x="492" fg:w="1"/><text x="41.6641%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.51%)</title><rect x="41.0774%" y="533" width="0.5051%" height="15" fill="rgb(216,84,5)" fg:x="488" fg:w="6"/><text x="41.3274%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.51%)</title><rect x="41.0774%" y="517" width="0.5051%" height="15" fill="rgb(230,200,21)" fg:x="488" fg:w="6"/><text x="41.3274%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4983%" y="501" width="0.0842%" height="15" fill="rgb(224,2,8)" fg:x="493" fg:w="1"/><text x="41.7483%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="41.7508%" y="437" width="0.1684%" height="15" fill="rgb(238,178,10)" fg:x="496" fg:w="2"/><text x="42.0008%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="41.7508%" y="421" width="0.1684%" height="15" fill="rgb(242,153,24)" fg:x="496" fg:w="2"/><text x="42.0008%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="41.7508%" y="405" width="0.1684%" height="15" fill="rgb(242,32,48)" fg:x="496" fg:w="2"/><text x="42.0008%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.34%)</title><rect x="41.7508%" y="453" width="0.3367%" height="15" fill="rgb(227,36,0)" fg:x="496" fg:w="4"/><text x="42.0008%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="41.9192%" y="437" width="0.1684%" height="15" fill="rgb(251,33,35)" fg:x="498" fg:w="2"/><text x="42.1692%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0875%" y="453" width="0.0842%" height="15" fill="rgb(232,168,51)" fg:x="500" fg:w="1"/><text x="42.3375%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.59%)</title><rect x="41.6667%" y="469" width="0.5892%" height="15" fill="rgb(228,56,10)" fg:x="495" fg:w="7"/><text x="41.9167%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.1717%" y="453" width="0.0842%" height="15" fill="rgb(231,10,26)" fg:x="501" fg:w="1"/><text x="42.4217%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.67%)</title><rect x="41.6667%" y="485" width="0.6734%" height="15" fill="rgb(226,202,12)" fg:x="495" fg:w="8"/><text x="41.9167%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.2559%" y="469" width="0.0842%" height="15" fill="rgb(251,49,21)" fg:x="502" fg:w="1"/><text x="42.5059%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="42.6768%" y="405" width="0.2525%" height="15" fill="rgb(206,228,28)" fg:x="507" fg:w="3"/><text x="42.9268%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="42.7609%" y="389" width="0.1684%" height="15" fill="rgb(205,198,31)" fg:x="508" fg:w="2"/><text x="43.0109%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="42.7609%" y="373" width="0.1684%" height="15" fill="rgb(213,69,1)" fg:x="508" fg:w="2"/><text x="43.0109%" y="383.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="42.7609%" y="357" width="0.1684%" height="15" fill="rgb(209,177,9)" fg:x="508" fg:w="2"/><text x="43.0109%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.67%)</title><rect x="42.3401%" y="469" width="0.6734%" height="15" fill="rgb(227,119,30)" fg:x="503" fg:w="8"/><text x="42.5901%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.67%)</title><rect x="42.3401%" y="453" width="0.6734%" height="15" fill="rgb(234,106,41)" fg:x="503" fg:w="8"/><text x="42.5901%" y="463.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.42%)</title><rect x="42.5926%" y="437" width="0.4209%" height="15" fill="rgb(244,103,47)" fg:x="506" fg:w="5"/><text x="42.8426%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.34%)</title><rect x="42.6768%" y="421" width="0.3367%" height="15" fill="rgb(212,211,25)" fg:x="507" fg:w="4"/><text x="42.9268%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="42.9293%" y="405" width="0.0842%" height="15" fill="rgb(208,63,53)" fg:x="510" fg:w="1"/><text x="43.1793%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.0976%" y="453" width="0.0842%" height="15" fill="rgb(213,176,21)" fg:x="512" fg:w="1"/><text x="43.3476%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="43.1818%" y="453" width="0.1684%" height="15" fill="rgb(243,124,12)" fg:x="513" fg:w="2"/><text x="43.4318%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.2660%" y="437" width="0.0842%" height="15" fill="rgb(239,2,35)" fg:x="514" fg:w="1"/><text x="43.5160%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.2660%" y="421" width="0.0842%" height="15" fill="rgb(253,169,22)" fg:x="514" fg:w="1"/><text x="43.5160%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.2660%" y="405" width="0.0842%" height="15" fill="rgb(254,51,12)" fg:x="514" fg:w="1"/><text x="43.5160%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.2660%" y="389" width="0.0842%" height="15" fill="rgb(244,17,47)" fg:x="514" fg:w="1"/><text x="43.5160%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="43.3502%" y="405" width="0.1684%" height="15" fill="rgb(251,45,46)" fg:x="515" fg:w="2"/><text x="43.6002%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="43.3502%" y="389" width="0.1684%" height="15" fill="rgb(223,87,43)" fg:x="515" fg:w="2"/><text x="43.6002%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="43.6027%" y="389" width="0.0842%" height="15" fill="rgb(230,132,31)" fg:x="518" fg:w="1"/><text x="43.8527%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.6027%" y="373" width="0.0842%" height="15" fill="rgb(206,99,1)" fg:x="518" fg:w="1"/><text x="43.8527%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.42%)</title><rect x="43.3502%" y="437" width="0.4209%" height="15" fill="rgb(227,110,25)" fg:x="515" fg:w="5"/><text x="43.6002%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.42%)</title><rect x="43.3502%" y="421" width="0.4209%" height="15" fill="rgb(217,182,7)" fg:x="515" fg:w="5"/><text x="43.6002%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="43.5185%" y="405" width="0.2525%" height="15" fill="rgb(250,176,4)" fg:x="517" fg:w="3"/><text x="43.7685%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="43.6869%" y="389" width="0.0842%" height="15" fill="rgb(244,98,30)" fg:x="519" fg:w="1"/><text x="43.9369%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="43.6869%" y="373" width="0.0842%" height="15" fill="rgb(228,150,42)" fg:x="519" fg:w="1"/><text x="43.9369%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.6869%" y="357" width="0.0842%" height="15" fill="rgb(231,91,46)" fg:x="519" fg:w="1"/><text x="43.9369%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="43.7710%" y="437" width="0.2525%" height="15" fill="rgb(252,161,32)" fg:x="520" fg:w="3"/><text x="44.0210%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="43.8552%" y="421" width="0.1684%" height="15" fill="rgb(236,69,41)" fg:x="521" fg:w="2"/><text x="44.1052%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="43.8552%" y="405" width="0.1684%" height="15" fill="rgb(212,160,3)" fg:x="521" fg:w="2"/><text x="44.1052%" y="415.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="44.1077%" y="421" width="0.0842%" height="15" fill="rgb(216,5,50)" fg:x="524" fg:w="1"/><text x="44.3577%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="44.1919%" y="421" width="0.0842%" height="15" fill="rgb(241,138,25)" fg:x="525" fg:w="1"/><text x="44.4419%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.1919%" y="405" width="0.0842%" height="15" fill="rgb(239,42,18)" fg:x="525" fg:w="1"/><text x="44.4419%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.1919%" y="389" width="0.0842%" height="15" fill="rgb(239,40,7)" fg:x="525" fg:w="1"/><text x="44.4419%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.1919%" y="373" width="0.0842%" height="15" fill="rgb(239,11,31)" fg:x="525" fg:w="1"/><text x="44.4419%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="44.2761%" y="421" width="0.2525%" height="15" fill="rgb(224,77,40)" fg:x="526" fg:w="3"/><text x="44.5261%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="44.3603%" y="405" width="0.1684%" height="15" fill="rgb(226,15,5)" fg:x="527" fg:w="2"/><text x="44.6103%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.4444%" y="389" width="0.0842%" height="15" fill="rgb(254,188,5)" fg:x="528" fg:w="1"/><text x="44.6944%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.4444%" y="373" width="0.0842%" height="15" fill="rgb(241,148,52)" fg:x="528" fg:w="1"/><text x="44.6944%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.4444%" y="357" width="0.0842%" height="15" fill="rgb(251,48,36)" fg:x="528" fg:w="1"/><text x="44.6944%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.4444%" y="341" width="0.0842%" height="15" fill="rgb(243,83,13)" fg:x="528" fg:w="1"/><text x="44.6944%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.4444%" y="325" width="0.0842%" height="15" fill="rgb(210,105,0)" fg:x="528" fg:w="1"/><text x="44.6944%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="44.5286%" y="405" width="0.0842%" height="15" fill="rgb(239,60,36)" fg:x="529" fg:w="1"/><text x="44.7786%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.5286%" y="389" width="0.0842%" height="15" fill="rgb(210,20,0)" fg:x="529" fg:w="1"/><text x="44.7786%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.5286%" y="373" width="0.0842%" height="15" fill="rgb(244,26,53)" fg:x="529" fg:w="1"/><text x="44.7786%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.5286%" y="357" width="0.0842%" height="15" fill="rgb(240,100,49)" fg:x="529" fg:w="1"/><text x="44.7786%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.5286%" y="341" width="0.0842%" height="15" fill="rgb(250,46,45)" fg:x="529" fg:w="1"/><text x="44.7786%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.5286%" y="325" width="0.0842%" height="15" fill="rgb(220,181,29)" fg:x="529" fg:w="1"/><text x="44.7786%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.5286%" y="309" width="0.0842%" height="15" fill="rgb(213,137,33)" fg:x="529" fg:w="1"/><text x="44.7786%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="44.6128%" y="405" width="0.1684%" height="15" fill="rgb(213,27,48)" fg:x="530" fg:w="2"/><text x="44.8628%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.6970%" y="389" width="0.0842%" height="15" fill="rgb(245,180,39)" fg:x="531" fg:w="1"/><text x="44.9470%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.6970%" y="373" width="0.0842%" height="15" fill="rgb(212,158,42)" fg:x="531" fg:w="1"/><text x="44.9470%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.6970%" y="357" width="0.0842%" height="15" fill="rgb(228,193,18)" fg:x="531" fg:w="1"/><text x="44.9470%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.34%)</title><rect x="44.5286%" y="421" width="0.3367%" height="15" fill="rgb(245,172,29)" fg:x="529" fg:w="4"/><text x="44.7786%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.7811%" y="405" width="0.0842%" height="15" fill="rgb(207,98,24)" fg:x="532" fg:w="1"/><text x="45.0311%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.7811%" y="389" width="0.0842%" height="15" fill="rgb(249,92,26)" fg:x="532" fg:w="1"/><text x="45.0311%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.7811%" y="373" width="0.0842%" height="15" fill="rgb(217,176,26)" fg:x="532" fg:w="1"/><text x="45.0311%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 1.01%)</title><rect x="44.0236%" y="437" width="1.0101%" height="15" fill="rgb(221,8,39)" fg:x="523" fg:w="12"/><text x="44.2736%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="44.8653%" y="421" width="0.1684%" height="15" fill="rgb(208,90,18)" fg:x="533" fg:w="2"/><text x="45.1153%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.9495%" y="405" width="0.0842%" height="15" fill="rgb(207,202,30)" fg:x="534" fg:w="1"/><text x="45.1995%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.9495%" y="389" width="0.0842%" height="15" fill="rgb(231,124,22)" fg:x="534" fg:w="1"/><text x="45.1995%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.9495%" y="373" width="0.0842%" height="15" fill="rgb(206,15,5)" fg:x="534" fg:w="1"/><text x="45.1995%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.9495%" y="357" width="0.0842%" height="15" fill="rgb(239,16,52)" fg:x="534" fg:w="1"/><text x="45.1995%" y="367.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="44.9495%" y="341" width="0.0842%" height="15" fill="rgb(245,213,29)" fg:x="534" fg:w="1"/><text x="45.1995%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.85%)</title><rect x="43.3502%" y="453" width="1.8519%" height="15" fill="rgb(213,203,36)" fg:x="515" fg:w="22"/><text x="43.6002%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="45.0337%" y="437" width="0.1684%" height="15" fill="rgb(209,55,18)" fg:x="535" fg:w="2"/><text x="45.2837%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.1178%" y="421" width="0.0842%" height="15" fill="rgb(207,133,49)" fg:x="536" fg:w="1"/><text x="45.3678%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (35 samples, 2.95%)</title><rect x="42.3401%" y="485" width="2.9461%" height="15" fill="rgb(240,33,46)" fg:x="503" fg:w="35"/><text x="42.5901%" y="495.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.27%)</title><rect x="43.0135%" y="469" width="2.2727%" height="15" fill="rgb(212,35,2)" fg:x="511" fg:w="27"/><text x="43.2635%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.2020%" y="453" width="0.0842%" height="15" fill="rgb(231,119,28)" fg:x="537" fg:w="1"/><text x="45.4520%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.2020%" y="437" width="0.0842%" height="15" fill="rgb(252,178,7)" fg:x="537" fg:w="1"/><text x="45.4520%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.2020%" y="421" width="0.0842%" height="15" fill="rgb(251,91,4)" fg:x="537" fg:w="1"/><text x="45.4520%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.2020%" y="405" width="0.0842%" height="15" fill="rgb(233,122,19)" fg:x="537" fg:w="1"/><text x="45.4520%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.2020%" y="389" width="0.0842%" height="15" fill="rgb(231,208,46)" fg:x="537" fg:w="1"/><text x="45.4520%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="45.2020%" y="373" width="0.0842%" height="15" fill="rgb(243,15,41)" fg:x="537" fg:w="1"/><text x="45.4520%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.3704%" y="405" width="0.0842%" height="15" fill="rgb(210,32,43)" fg:x="539" fg:w="1"/><text x="45.6204%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.4545%" y="373" width="0.0842%" height="15" fill="rgb(222,177,15)" fg:x="540" fg:w="1"/><text x="45.7045%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.5387%" y="341" width="0.0842%" height="15" fill="rgb(244,121,34)" fg:x="541" fg:w="1"/><text x="45.7887%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.5387%" y="325" width="0.0842%" height="15" fill="rgb(234,138,4)" fg:x="541" fg:w="1"/><text x="45.7887%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.17%)</title><rect x="45.5387%" y="373" width="0.1684%" height="15" fill="rgb(240,97,48)" fg:x="541" fg:w="2"/><text x="45.7887%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="45.5387%" y="357" width="0.1684%" height="15" fill="rgb(237,65,54)" fg:x="541" fg:w="2"/><text x="45.7887%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.6229%" y="341" width="0.0842%" height="15" fill="rgb(214,25,24)" fg:x="542" fg:w="1"/><text x="45.8729%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.6229%" y="325" width="0.0842%" height="15" fill="rgb(213,5,3)" fg:x="542" fg:w="1"/><text x="45.8729%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.7071%" y="357" width="0.0842%" height="15" fill="rgb(219,81,29)" fg:x="543" fg:w="1"/><text x="45.9571%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.7912%" y="357" width="0.0842%" height="15" fill="rgb(220,43,48)" fg:x="544" fg:w="1"/><text x="46.0412%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.67%)</title><rect x="45.2862%" y="453" width="0.6734%" height="15" fill="rgb(239,157,2)" fg:x="538" fg:w="8"/><text x="45.5362%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.67%)</title><rect x="45.2862%" y="437" width="0.6734%" height="15" fill="rgb(213,104,43)" fg:x="538" fg:w="8"/><text x="45.5362%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.67%)</title><rect x="45.2862%" y="421" width="0.6734%" height="15" fill="rgb(237,84,9)" fg:x="538" fg:w="8"/><text x="45.5362%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.51%)</title><rect x="45.4545%" y="405" width="0.5051%" height="15" fill="rgb(252,6,33)" fg:x="540" fg:w="6"/><text x="45.7045%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.51%)</title><rect x="45.4545%" y="389" width="0.5051%" height="15" fill="rgb(251,172,22)" fg:x="540" fg:w="6"/><text x="45.7045%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="45.7071%" y="373" width="0.2525%" height="15" fill="rgb(244,91,53)" fg:x="543" fg:w="3"/><text x="45.9571%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.8754%" y="357" width="0.0842%" height="15" fill="rgb(219,29,30)" fg:x="545" fg:w="1"/><text x="46.1254%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.9596%" y="389" width="0.0842%" height="15" fill="rgb(213,3,15)" fg:x="546" fg:w="1"/><text x="46.2096%" y="399.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (3 samples, 0.25%)</title><rect x="45.9596%" y="453" width="0.2525%" height="15" fill="rgb(208,25,28)" fg:x="546" fg:w="3"/><text x="46.2096%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="45.9596%" y="437" width="0.2525%" height="15" fill="rgb(252,144,25)" fg:x="546" fg:w="3"/><text x="46.2096%" y="447.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.25%)</title><rect x="45.9596%" y="421" width="0.2525%" height="15" fill="rgb(226,220,25)" fg:x="546" fg:w="3"/><text x="46.2096%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.25%)</title><rect x="45.9596%" y="405" width="0.2525%" height="15" fill="rgb(212,131,28)" fg:x="546" fg:w="3"/><text x="46.2096%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.17%)</title><rect x="46.0438%" y="389" width="0.1684%" height="15" fill="rgb(219,143,52)" fg:x="547" fg:w="2"/><text x="46.2938%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.1279%" y="373" width="0.0842%" height="15" fill="rgb(215,56,7)" fg:x="548" fg:w="1"/><text x="46.3779%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="46.2121%" y="453" width="0.0842%" height="15" fill="rgb(239,59,51)" fg:x="549" fg:w="1"/><text x="46.4621%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="46.5488%" y="421" width="0.0842%" height="15" fill="rgb(209,215,4)" fg:x="553" fg:w="1"/><text x="46.7988%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="46.5488%" y="405" width="0.0842%" height="15" fill="rgb(221,118,39)" fg:x="553" fg:w="1"/><text x="46.7988%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.5488%" y="389" width="0.0842%" height="15" fill="rgb(236,6,44)" fg:x="553" fg:w="1"/><text x="46.7988%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="46.4646%" y="437" width="0.2525%" height="15" fill="rgb(216,122,9)" fg:x="552" fg:w="3"/><text x="46.7146%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.6330%" y="421" width="0.0842%" height="15" fill="rgb(244,134,42)" fg:x="554" fg:w="1"/><text x="46.8830%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.7172%" y="437" width="0.0842%" height="15" fill="rgb(209,189,35)" fg:x="555" fg:w="1"/><text x="46.9672%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (19 samples, 1.60%)</title><rect x="45.2862%" y="469" width="1.5993%" height="15" fill="rgb(250,47,36)" fg:x="538" fg:w="19"/><text x="45.5362%" y="479.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.59%)</title><rect x="46.2963%" y="453" width="0.5892%" height="15" fill="rgb(252,112,4)" fg:x="550" fg:w="7"/><text x="46.5463%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="46.8013%" y="437" width="0.0842%" height="15" fill="rgb(221,79,51)" fg:x="556" fg:w="1"/><text x="47.0513%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="46.9697%" y="437" width="0.1684%" height="15" fill="rgb(232,65,53)" fg:x="558" fg:w="2"/><text x="47.2197%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="47.1380%" y="437" width="0.0842%" height="15" fill="rgb(211,37,7)" fg:x="560" fg:w="1"/><text x="47.3880%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.1380%" y="421" width="0.0842%" height="15" fill="rgb(234,221,18)" fg:x="560" fg:w="1"/><text x="47.3880%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.1380%" y="405" width="0.0842%" height="15" fill="rgb(220,158,26)" fg:x="560" fg:w="1"/><text x="47.3880%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="47.2222%" y="437" width="0.0842%" height="15" fill="rgb(220,70,6)" fg:x="561" fg:w="1"/><text x="47.4722%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.4747%" y="405" width="0.0842%" height="15" fill="rgb(250,39,48)" fg:x="564" fg:w="1"/><text x="47.7247%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.42%)</title><rect x="47.3064%" y="437" width="0.4209%" height="15" fill="rgb(206,40,27)" fg:x="562" fg:w="5"/><text x="47.5564%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.34%)</title><rect x="47.3906%" y="421" width="0.3367%" height="15" fill="rgb(247,80,36)" fg:x="563" fg:w="4"/><text x="47.6406%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="47.5589%" y="405" width="0.1684%" height="15" fill="rgb(222,9,20)" fg:x="565" fg:w="2"/><text x="47.8089%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.8956%" y="405" width="0.0842%" height="15" fill="rgb(217,26,45)" fg:x="569" fg:w="1"/><text x="48.1456%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="47.9798%" y="389" width="0.1684%" height="15" fill="rgb(221,67,14)" fg:x="570" fg:w="2"/><text x="48.2298%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="47.9798%" y="373" width="0.1684%" height="15" fill="rgb(248,100,24)" fg:x="570" fg:w="2"/><text x="48.2298%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="48.1481%" y="373" width="0.0842%" height="15" fill="rgb(230,187,16)" fg:x="572" fg:w="1"/><text x="48.3981%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1481%" y="357" width="0.0842%" height="15" fill="rgb(205,108,13)" fg:x="572" fg:w="1"/><text x="48.3981%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.3165%" y="357" width="0.0842%" height="15" fill="rgb(235,71,51)" fg:x="574" fg:w="1"/><text x="48.5665%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="48.4007%" y="341" width="0.1684%" height="15" fill="rgb(251,172,48)" fg:x="575" fg:w="2"/><text x="48.6507%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="48.6532%" y="325" width="0.0842%" height="15" fill="rgb(240,96,49)" fg:x="578" fg:w="1"/><text x="48.9032%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="48.6532%" y="309" width="0.0842%" height="15" fill="rgb(235,46,36)" fg:x="578" fg:w="1"/><text x="48.9032%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="48.6532%" y="293" width="0.0842%" height="15" fill="rgb(244,3,49)" fg:x="578" fg:w="1"/><text x="48.9032%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="48.6532%" y="277" width="0.0842%" height="15" fill="rgb(206,78,54)" fg:x="578" fg:w="1"/><text x="48.9032%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6532%" y="261" width="0.0842%" height="15" fill="rgb(208,85,42)" fg:x="578" fg:w="1"/><text x="48.9032%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.67%)</title><rect x="48.1481%" y="389" width="0.6734%" height="15" fill="rgb(219,196,21)" fg:x="572" fg:w="8"/><text x="48.3981%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.59%)</title><rect x="48.2323%" y="373" width="0.5892%" height="15" fill="rgb(238,19,9)" fg:x="573" fg:w="7"/><text x="48.4823%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.42%)</title><rect x="48.4007%" y="357" width="0.4209%" height="15" fill="rgb(206,86,13)" fg:x="575" fg:w="5"/><text x="48.6507%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="48.5690%" y="341" width="0.2525%" height="15" fill="rgb(214,123,40)" fg:x="577" fg:w="3"/><text x="48.8190%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7374%" y="325" width="0.0842%" height="15" fill="rgb(243,53,5)" fg:x="579" fg:w="1"/><text x="48.9874%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="48.9899%" y="373" width="0.0842%" height="15" fill="rgb(254,186,31)" fg:x="582" fg:w="1"/><text x="49.2399%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.67%)</title><rect x="49.2424%" y="357" width="0.6734%" height="15" fill="rgb(221,216,25)" fg:x="585" fg:w="8"/><text x="49.4924%" y="367.50"></text></g><g><title>__libc_malloc (4 samples, 0.34%)</title><rect x="49.5791%" y="341" width="0.3367%" height="15" fill="rgb(248,107,42)" fg:x="589" fg:w="4"/><text x="49.8291%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.34%)</title><rect x="50.2525%" y="325" width="0.3367%" height="15" fill="rgb(221,85,43)" fg:x="597" fg:w="4"/><text x="50.5025%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="50.4209%" y="309" width="0.1684%" height="15" fill="rgb(225,34,24)" fg:x="599" fg:w="2"/><text x="50.6709%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.51%)</title><rect x="50.1684%" y="341" width="0.5051%" height="15" fill="rgb(211,119,1)" fg:x="596" fg:w="6"/><text x="50.4184%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="50.5892%" y="325" width="0.0842%" height="15" fill="rgb(254,216,46)" fg:x="601" fg:w="1"/><text x="50.8392%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.5892%" y="309" width="0.0842%" height="15" fill="rgb(238,11,38)" fg:x="601" fg:w="1"/><text x="50.8392%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (33 samples, 2.78%)</title><rect x="47.9798%" y="405" width="2.7778%" height="15" fill="rgb(233,50,15)" fg:x="570" fg:w="33"/><text x="48.2298%" y="415.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (23 samples, 1.94%)</title><rect x="48.8215%" y="389" width="1.9360%" height="15" fill="rgb(217,181,29)" fg:x="580" fg:w="23"/><text x="49.0715%" y="399.50">s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.68%)</title><rect x="49.0741%" y="373" width="1.6835%" height="15" fill="rgb(214,56,3)" fg:x="583" fg:w="20"/><text x="49.3241%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.84%)</title><rect x="49.9158%" y="357" width="0.8418%" height="15" fill="rgb(230,69,45)" fg:x="593" fg:w="10"/><text x="50.1658%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6734%" y="341" width="0.0842%" height="15" fill="rgb(224,201,50)" fg:x="602" fg:w="1"/><text x="50.9234%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (36 samples, 3.03%)</title><rect x="47.8956%" y="421" width="3.0303%" height="15" fill="rgb(217,228,18)" fg:x="569" fg:w="36"/><text x="48.1456%" y="431.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.17%)</title><rect x="50.7576%" y="405" width="0.1684%" height="15" fill="rgb(239,33,44)" fg:x="603" fg:w="2"/><text x="51.0076%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="50.7576%" y="389" width="0.1684%" height="15" fill="rgb(248,210,23)" fg:x="603" fg:w="2"/><text x="51.0076%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (50 samples, 4.21%)</title><rect x="46.8855%" y="469" width="4.2088%" height="15" fill="rgb(253,135,8)" fg:x="557" fg:w="50"/><text x="47.1355%" y="479.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (50 samples, 4.21%)</title><rect x="46.8855%" y="453" width="4.2088%" height="15" fill="rgb(217,98,21)" fg:x="557" fg:w="50"/><text x="47.1355%" y="463.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (40 samples, 3.37%)</title><rect x="47.7273%" y="437" width="3.3670%" height="15" fill="rgb(253,130,21)" fg:x="567" fg:w="40"/><text x="47.9773%" y="447.50">ser..</text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="50.9259%" y="421" width="0.1684%" height="15" fill="rgb(207,81,54)" fg:x="605" fg:w="2"/><text x="51.1759%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.3468%" y="293" width="0.0842%" height="15" fill="rgb(232,48,33)" fg:x="610" fg:w="1"/><text x="51.5968%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.3468%" y="277" width="0.0842%" height="15" fill="rgb(211,9,35)" fg:x="610" fg:w="1"/><text x="51.5968%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.4310%" y="293" width="0.0842%" height="15" fill="rgb(205,152,21)" fg:x="611" fg:w="1"/><text x="51.6810%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.4310%" y="277" width="0.0842%" height="15" fill="rgb(249,21,27)" fg:x="611" fg:w="1"/><text x="51.6810%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="51.3468%" y="325" width="0.2525%" height="15" fill="rgb(252,29,24)" fg:x="610" fg:w="3"/><text x="51.5968%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="51.3468%" y="309" width="0.2525%" height="15" fill="rgb(230,130,50)" fg:x="610" fg:w="3"/><text x="51.5968%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.5152%" y="293" width="0.0842%" height="15" fill="rgb(239,144,14)" fg:x="612" fg:w="1"/><text x="51.7652%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="51.6835%" y="309" width="0.2525%" height="15" fill="rgb(227,111,50)" fg:x="614" fg:w="3"/><text x="51.9335%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="51.6835%" y="293" width="0.2525%" height="15" fill="rgb(254,84,20)" fg:x="614" fg:w="3"/><text x="51.9335%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="51.7677%" y="277" width="0.1684%" height="15" fill="rgb(232,90,48)" fg:x="615" fg:w="2"/><text x="52.0177%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.8519%" y="261" width="0.0842%" height="15" fill="rgb(253,63,47)" fg:x="616" fg:w="1"/><text x="52.1019%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8519%" y="245" width="0.0842%" height="15" fill="rgb(251,146,35)" fg:x="616" fg:w="1"/><text x="52.1019%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="51.9360%" y="309" width="0.1684%" height="15" fill="rgb(229,192,35)" fg:x="617" fg:w="2"/><text x="52.1860%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.17%)</title><rect x="51.9360%" y="293" width="0.1684%" height="15" fill="rgb(225,68,9)" fg:x="617" fg:w="2"/><text x="52.1860%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 1.01%)</title><rect x="51.3468%" y="341" width="1.0101%" height="15" fill="rgb(214,97,34)" fg:x="610" fg:w="12"/><text x="51.5968%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.76%)</title><rect x="51.5993%" y="325" width="0.7576%" height="15" fill="rgb(253,31,26)" fg:x="613" fg:w="9"/><text x="51.8493%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="52.1044%" y="309" width="0.2525%" height="15" fill="rgb(225,151,47)" fg:x="619" fg:w="3"/><text x="52.3544%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.2727%" y="293" width="0.0842%" height="15" fill="rgb(206,185,9)" fg:x="621" fg:w="1"/><text x="52.5227%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2727%" y="277" width="0.0842%" height="15" fill="rgb(249,65,17)" fg:x="621" fg:w="1"/><text x="52.5227%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4411%" y="309" width="0.0842%" height="15" fill="rgb(220,110,10)" fg:x="623" fg:w="1"/><text x="52.6911%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.35%)</title><rect x="51.2626%" y="373" width="1.3468%" height="15" fill="rgb(222,198,49)" fg:x="609" fg:w="16"/><text x="51.5126%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.35%)</title><rect x="51.2626%" y="357" width="1.3468%" height="15" fill="rgb(239,81,13)" fg:x="609" fg:w="16"/><text x="51.5126%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="52.3569%" y="341" width="0.2525%" height="15" fill="rgb(216,128,11)" fg:x="622" fg:w="3"/><text x="52.6069%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="52.3569%" y="325" width="0.2525%" height="15" fill="rgb(247,156,8)" fg:x="622" fg:w="3"/><text x="52.6069%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.5253%" y="309" width="0.0842%" height="15" fill="rgb(219,173,1)" fg:x="624" fg:w="1"/><text x="52.7753%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.6094%" y="373" width="0.0842%" height="15" fill="rgb(227,42,24)" fg:x="625" fg:w="1"/><text x="52.8594%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.6094%" y="357" width="0.0842%" height="15" fill="rgb(253,219,50)" fg:x="625" fg:w="1"/><text x="52.8594%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.68%)</title><rect x="51.0943%" y="405" width="1.6835%" height="15" fill="rgb(215,191,54)" fg:x="607" fg:w="20"/><text x="51.3443%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.60%)</title><rect x="51.1785%" y="389" width="1.5993%" height="15" fill="rgb(238,83,12)" fg:x="608" fg:w="19"/><text x="51.4285%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6936%" y="373" width="0.0842%" height="15" fill="rgb(205,124,9)" fg:x="626" fg:w="1"/><text x="52.9436%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6936%" y="357" width="0.0842%" height="15" fill="rgb(253,174,7)" fg:x="626" fg:w="1"/><text x="52.9436%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6936%" y="341" width="0.0842%" height="15" fill="rgb(206,134,49)" fg:x="626" fg:w="1"/><text x="52.9436%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="52.7778%" y="405" width="0.1684%" height="15" fill="rgb(221,89,20)" fg:x="627" fg:w="2"/><text x="53.0278%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.17%)</title><rect x="52.7778%" y="389" width="0.1684%" height="15" fill="rgb(240,205,13)" fg:x="627" fg:w="2"/><text x="53.0278%" y="399.50"></text></g><g><title>engine::session::state::State::flush_entities (144 samples, 12.12%)</title><rect x="41.0774%" y="549" width="12.1212%" height="15" fill="rgb(237,174,32)" fg:x="488" fg:w="144"/><text x="41.3274%" y="559.50">engine::session::s..</text></g><g><title>core::iter::adapters::try_process (138 samples, 11.62%)</title><rect x="41.5825%" y="533" width="11.6162%" height="15" fill="rgb(226,12,15)" fg:x="494" fg:w="138"/><text x="41.8325%" y="543.50">core::iter::adapt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (138 samples, 11.62%)</title><rect x="41.5825%" y="517" width="11.6162%" height="15" fill="rgb(245,160,52)" fg:x="494" fg:w="138"/><text x="41.8325%" y="527.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (137 samples, 11.53%)</title><rect x="41.6667%" y="501" width="11.5320%" height="15" fill="rgb(253,80,21)" fg:x="495" fg:w="137"/><text x="41.9167%" y="511.50">engine::session::..</text></g><g><title>kernel::model::any_entity_changes (94 samples, 7.91%)</title><rect x="45.2862%" y="485" width="7.9125%" height="15" fill="rgb(231,225,22)" fg:x="538" fg:w="94"/><text x="45.5362%" y="495.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (25 samples, 2.10%)</title><rect x="51.0943%" y="469" width="2.1044%" height="15" fill="rgb(253,185,12)" fg:x="607" fg:w="25"/><text x="51.3443%" y="479.50">s..</text></g><g><title>serde_json::de::from_trait (25 samples, 2.10%)</title><rect x="51.0943%" y="453" width="2.1044%" height="15" fill="rgb(234,197,21)" fg:x="607" fg:w="25"/><text x="51.3443%" y="463.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.10%)</title><rect x="51.0943%" y="437" width="2.1044%" height="15" fill="rgb(210,47,30)" fg:x="607" fg:w="25"/><text x="51.3443%" y="447.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.10%)</title><rect x="51.0943%" y="421" width="2.1044%" height="15" fill="rgb(246,139,27)" fg:x="607" fg:w="25"/><text x="51.3443%" y="431.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="52.9461%" y="405" width="0.2525%" height="15" fill="rgb(226,130,16)" fg:x="629" fg:w="3"/><text x="53.1961%" y="415.50"></text></g><g><title>engine::session::state::State::close (145 samples, 12.21%)</title><rect x="41.0774%" y="565" width="12.2054%" height="15" fill="rgb(237,208,20)" fg:x="488" fg:w="145"/><text x="41.3274%" y="575.50">engine::session::s..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="53.1987%" y="549" width="0.0842%" height="15" fill="rgb(245,186,28)" fg:x="632" fg:w="1"/><text x="53.4487%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="53.2828%" y="565" width="0.0842%" height="15" fill="rgb(238,105,39)" fg:x="633" fg:w="1"/><text x="53.5328%" y="575.50"></text></g><g><title>engine::session::Session::close (156 samples, 13.13%)</title><rect x="40.4040%" y="581" width="13.1313%" height="15" fill="rgb(253,228,11)" fg:x="480" fg:w="156"/><text x="40.6540%" y="591.50">engine::session::Ses..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.17%)</title><rect x="53.3670%" y="565" width="0.1684%" height="15" fill="rgb(224,136,38)" fg:x="634" fg:w="2"/><text x="53.6170%" y="575.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.17%)</title><rect x="53.3670%" y="549" width="0.1684%" height="15" fill="rgb(211,3,25)" fg:x="634" fg:w="2"/><text x="53.6170%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.17%)</title><rect x="53.3670%" y="533" width="0.1684%" height="15" fill="rgb(238,66,34)" fg:x="634" fg:w="2"/><text x="53.6170%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.17%)</title><rect x="53.3670%" y="517" width="0.1684%" height="15" fill="rgb(223,188,11)" fg:x="634" fg:w="2"/><text x="53.6170%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="53.4512%" y="501" width="0.0842%" height="15" fill="rgb(221,10,35)" fg:x="635" fg:w="1"/><text x="53.7012%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.6195%" y="517" width="0.0842%" height="15" fill="rgb(223,18,44)" fg:x="637" fg:w="1"/><text x="53.8695%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="53.6195%" y="501" width="0.0842%" height="15" fill="rgb(220,97,41)" fg:x="637" fg:w="1"/><text x="53.8695%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="53.6195%" y="485" width="0.0842%" height="15" fill="rgb(206,95,45)" fg:x="637" fg:w="1"/><text x="53.8695%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.7037%" y="485" width="0.0842%" height="15" fill="rgb(209,96,13)" fg:x="638" fg:w="1"/><text x="53.9537%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.25%)</title><rect x="53.6195%" y="549" width="0.2525%" height="15" fill="rgb(237,39,34)" fg:x="637" fg:w="3"/><text x="53.8695%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.25%)</title><rect x="53.6195%" y="533" width="0.2525%" height="15" fill="rgb(213,49,47)" fg:x="637" fg:w="3"/><text x="53.8695%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="53.7037%" y="517" width="0.1684%" height="15" fill="rgb(205,107,27)" fg:x="638" fg:w="2"/><text x="53.9537%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="53.7037%" y="501" width="0.1684%" height="15" fill="rgb(212,142,9)" fg:x="638" fg:w="2"/><text x="53.9537%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="53.7879%" y="485" width="0.0842%" height="15" fill="rgb(226,182,0)" fg:x="639" fg:w="1"/><text x="54.0379%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.7879%" y="469" width="0.0842%" height="15" fill="rgb(231,3,53)" fg:x="639" fg:w="1"/><text x="54.0379%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.8721%" y="517" width="0.0842%" height="15" fill="rgb(246,111,28)" fg:x="640" fg:w="1"/><text x="54.1221%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.8721%" y="501" width="0.0842%" height="15" fill="rgb(254,183,7)" fg:x="640" fg:w="1"/><text x="54.1221%" y="511.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="53.8721%" y="485" width="0.0842%" height="15" fill="rgb(247,177,28)" fg:x="640" fg:w="1"/><text x="54.1221%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.9562%" y="517" width="0.0842%" height="15" fill="rgb(244,43,1)" fg:x="641" fg:w="1"/><text x="54.2062%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.9562%" y="501" width="0.0842%" height="15" fill="rgb(207,2,35)" fg:x="641" fg:w="1"/><text x="54.2062%" y="511.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.25%)</title><rect x="53.8721%" y="549" width="0.2525%" height="15" fill="rgb(213,83,22)" fg:x="640" fg:w="3"/><text x="54.1221%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="53.8721%" y="533" width="0.2525%" height="15" fill="rgb(246,212,13)" fg:x="640" fg:w="3"/><text x="54.1221%" y="543.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="54.0404%" y="517" width="0.0842%" height="15" fill="rgb(213,127,46)" fg:x="642" fg:w="1"/><text x="54.2904%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.0404%" y="501" width="0.0842%" height="15" fill="rgb(219,215,39)" fg:x="642" fg:w="1"/><text x="54.2904%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.1246%" y="549" width="0.0842%" height="15" fill="rgb(227,99,17)" fg:x="643" fg:w="1"/><text x="54.3746%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1246%" y="533" width="0.0842%" height="15" fill="rgb(208,155,18)" fg:x="643" fg:w="1"/><text x="54.3746%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="54.3771%" y="389" width="0.0842%" height="15" fill="rgb(223,204,38)" fg:x="646" fg:w="1"/><text x="54.6271%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.08%)</title><rect x="54.3771%" y="373" width="0.0842%" height="15" fill="rgb(212,114,21)" fg:x="646" fg:w="1"/><text x="54.6271%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.08%)</title><rect x="54.3771%" y="357" width="0.0842%" height="15" fill="rgb(250,74,13)" fg:x="646" fg:w="1"/><text x="54.6271%" y="367.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.08%)</title><rect x="54.5455%" y="373" width="0.0842%" height="15" fill="rgb(234,7,1)" fg:x="648" fg:w="1"/><text x="54.7955%" y="383.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="54.5455%" y="357" width="0.0842%" height="15" fill="rgb(207,138,31)" fg:x="648" fg:w="1"/><text x="54.7955%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="54.5455%" y="341" width="0.0842%" height="15" fill="rgb(215,186,42)" fg:x="648" fg:w="1"/><text x="54.7955%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.5455%" y="325" width="0.0842%" height="15" fill="rgb(229,205,49)" fg:x="648" fg:w="1"/><text x="54.7955%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.5455%" y="309" width="0.0842%" height="15" fill="rgb(216,156,32)" fg:x="648" fg:w="1"/><text x="54.7955%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="54.5455%" y="293" width="0.0842%" height="15" fill="rgb(238,7,21)" fg:x="648" fg:w="1"/><text x="54.7955%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="54.5455%" y="277" width="0.0842%" height="15" fill="rgb(249,190,22)" fg:x="648" fg:w="1"/><text x="54.7955%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="54.5455%" y="261" width="0.0842%" height="15" fill="rgb(253,51,31)" fg:x="648" fg:w="1"/><text x="54.7955%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="54.5455%" y="245" width="0.0842%" height="15" fill="rgb(237,90,54)" fg:x="648" fg:w="1"/><text x="54.7955%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.5455%" y="229" width="0.0842%" height="15" fill="rgb(250,214,33)" fg:x="648" fg:w="1"/><text x="54.7955%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.5455%" y="213" width="0.0842%" height="15" fill="rgb(237,10,49)" fg:x="648" fg:w="1"/><text x="54.7955%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="54.5455%" y="197" width="0.0842%" height="15" fill="rgb(241,56,36)" fg:x="648" fg:w="1"/><text x="54.7955%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="54.5455%" y="181" width="0.0842%" height="15" fill="rgb(227,164,12)" fg:x="648" fg:w="1"/><text x="54.7955%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="54.5455%" y="165" width="0.0842%" height="15" fill="rgb(249,149,35)" fg:x="648" fg:w="1"/><text x="54.7955%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="54.5455%" y="149" width="0.0842%" height="15" fill="rgb(238,227,50)" fg:x="648" fg:w="1"/><text x="54.7955%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="54.5455%" y="133" width="0.0842%" height="15" fill="rgb(235,102,45)" fg:x="648" fg:w="1"/><text x="54.7955%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="54.5455%" y="117" width="0.0842%" height="15" fill="rgb(211,10,38)" fg:x="648" fg:w="1"/><text x="54.7955%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="54.5455%" y="101" width="0.0842%" height="15" fill="rgb(219,77,48)" fg:x="648" fg:w="1"/><text x="54.7955%" y="111.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (5 samples, 0.42%)</title><rect x="54.2929%" y="437" width="0.4209%" height="15" fill="rgb(246,6,15)" fg:x="645" fg:w="5"/><text x="54.5429%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.34%)</title><rect x="54.3771%" y="421" width="0.3367%" height="15" fill="rgb(207,220,2)" fg:x="646" fg:w="4"/><text x="54.6271%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (4 samples, 0.34%)</title><rect x="54.3771%" y="405" width="0.3367%" height="15" fill="rgb(242,48,14)" fg:x="646" fg:w="4"/><text x="54.6271%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="54.4613%" y="389" width="0.2525%" height="15" fill="rgb(218,19,27)" fg:x="647" fg:w="3"/><text x="54.7113%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="54.6296%" y="373" width="0.0842%" height="15" fill="rgb(228,0,35)" fg:x="649" fg:w="1"/><text x="54.8796%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="54.6296%" y="357" width="0.0842%" height="15" fill="rgb(244,142,54)" fg:x="649" fg:w="1"/><text x="54.8796%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="54.6296%" y="341" width="0.0842%" height="15" fill="rgb(243,217,40)" fg:x="649" fg:w="1"/><text x="54.8796%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="54.6296%" y="325" width="0.0842%" height="15" fill="rgb(207,114,16)" fg:x="649" fg:w="1"/><text x="54.8796%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="54.6296%" y="309" width="0.0842%" height="15" fill="rgb(224,33,25)" fg:x="649" fg:w="1"/><text x="54.8796%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="54.6296%" y="293" width="0.0842%" height="15" fill="rgb(230,93,54)" fg:x="649" fg:w="1"/><text x="54.8796%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="54.6296%" y="277" width="0.0842%" height="15" fill="rgb(224,56,24)" fg:x="649" fg:w="1"/><text x="54.8796%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.6296%" y="261" width="0.0842%" height="15" fill="rgb(235,189,50)" fg:x="649" fg:w="1"/><text x="54.8796%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.6296%" y="245" width="0.0842%" height="15" fill="rgb(242,173,8)" fg:x="649" fg:w="1"/><text x="54.8796%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="54.6296%" y="229" width="0.0842%" height="15" fill="rgb(209,206,10)" fg:x="649" fg:w="1"/><text x="54.8796%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="54.6296%" y="213" width="0.0842%" height="15" fill="rgb(213,182,44)" fg:x="649" fg:w="1"/><text x="54.8796%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="54.6296%" y="197" width="0.0842%" height="15" fill="rgb(243,51,15)" fg:x="649" fg:w="1"/><text x="54.8796%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="54.6296%" y="181" width="0.0842%" height="15" fill="rgb(241,13,14)" fg:x="649" fg:w="1"/><text x="54.8796%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.6296%" y="165" width="0.0842%" height="15" fill="rgb(239,147,24)" fg:x="649" fg:w="1"/><text x="54.8796%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="54.6296%" y="149" width="0.0842%" height="15" fill="rgb(223,129,16)" fg:x="649" fg:w="1"/><text x="54.8796%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="54.6296%" y="133" width="0.0842%" height="15" fill="rgb(209,169,13)" fg:x="649" fg:w="1"/><text x="54.8796%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="54.6296%" y="117" width="0.0842%" height="15" fill="rgb(235,159,41)" fg:x="649" fg:w="1"/><text x="54.8796%" y="127.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="54.6296%" y="101" width="0.0842%" height="15" fill="rgb(223,219,48)" fg:x="649" fg:w="1"/><text x="54.8796%" y="111.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="54.6296%" y="85" width="0.0842%" height="15" fill="rgb(236,80,13)" fg:x="649" fg:w="1"/><text x="54.8796%" y="95.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="54.6296%" y="69" width="0.0842%" height="15" fill="rgb(213,5,6)" fg:x="649" fg:w="1"/><text x="54.8796%" y="79.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.51%)</title><rect x="54.2929%" y="533" width="0.5051%" height="15" fill="rgb(205,59,21)" fg:x="645" fg:w="6"/><text x="54.5429%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.51%)</title><rect x="54.2929%" y="517" width="0.5051%" height="15" fill="rgb(247,137,35)" fg:x="645" fg:w="6"/><text x="54.5429%" y="527.50"></text></g><g><title>core::fmt::write (6 samples, 0.51%)</title><rect x="54.2929%" y="501" width="0.5051%" height="15" fill="rgb(242,208,28)" fg:x="645" fg:w="6"/><text x="54.5429%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.51%)</title><rect x="54.2929%" y="485" width="0.5051%" height="15" fill="rgb(245,62,25)" fg:x="645" fg:w="6"/><text x="54.5429%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (6 samples, 0.51%)</title><rect x="54.2929%" y="469" width="0.5051%" height="15" fill="rgb(233,99,54)" fg:x="645" fg:w="6"/><text x="54.5429%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (6 samples, 0.51%)</title><rect x="54.2929%" y="453" width="0.5051%" height="15" fill="rgb(213,10,37)" fg:x="645" fg:w="6"/><text x="54.5429%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.08%)</title><rect x="54.7138%" y="437" width="0.0842%" height="15" fill="rgb(235,143,30)" fg:x="650" fg:w="1"/><text x="54.9638%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="54.7138%" y="421" width="0.0842%" height="15" fill="rgb(250,146,33)" fg:x="650" fg:w="1"/><text x="54.9638%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (1 samples, 0.08%)</title><rect x="54.7138%" y="405" width="0.0842%" height="15" fill="rgb(226,198,42)" fg:x="650" fg:w="1"/><text x="54.9638%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.7138%" y="389" width="0.0842%" height="15" fill="rgb(222,55,6)" fg:x="650" fg:w="1"/><text x="54.9638%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="54.7980%" y="517" width="0.0842%" height="15" fill="rgb(213,224,31)" fg:x="651" fg:w="1"/><text x="55.0480%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::logs::SessionSubscriber&gt; (1 samples, 0.08%)</title><rect x="54.7980%" y="501" width="0.0842%" height="15" fill="rgb(226,103,35)" fg:x="651" fg:w="1"/><text x="55.0480%" y="511.50"></text></g><g><title>chrono::offset::utc::Utc::now (1 samples, 0.08%)</title><rect x="54.8822%" y="517" width="0.0842%" height="15" fill="rgb(205,66,45)" fg:x="652" fg:w="1"/><text x="55.1322%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="54.8822%" y="501" width="0.0842%" height="15" fill="rgb(226,51,42)" fg:x="652" fg:w="1"/><text x="55.1322%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (7 samples, 0.59%)</title><rect x="54.9663%" y="485" width="0.5892%" height="15" fill="rgb(206,69,1)" fg:x="653" fg:w="7"/><text x="55.2163%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (6 samples, 0.51%)</title><rect x="55.0505%" y="469" width="0.5051%" height="15" fill="rgb(213,228,47)" fg:x="654" fg:w="6"/><text x="55.3005%" y="479.50"></text></g><g><title>tracing_core::subscriber::Subscriber::register_callsite (2 samples, 0.17%)</title><rect x="55.3872%" y="453" width="0.1684%" height="15" fill="rgb(224,204,18)" fg:x="658" fg:w="2"/><text x="55.6372%" y="463.50"></text></g><g><title>&lt;engine::session::logs::SessionSubscriber as tracing_core::subscriber::Subscriber&gt;::enabled (2 samples, 0.17%)</title><rect x="55.3872%" y="437" width="0.1684%" height="15" fill="rgb(253,187,47)" fg:x="658" fg:w="2"/><text x="55.6372%" y="447.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (8 samples, 0.67%)</title><rect x="54.9663%" y="517" width="0.6734%" height="15" fill="rgb(232,61,2)" fg:x="653" fg:w="8"/><text x="55.2163%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (8 samples, 0.67%)</title><rect x="54.9663%" y="501" width="0.6734%" height="15" fill="rgb(213,132,35)" fg:x="653" fg:w="8"/><text x="55.2163%" y="511.50"></text></g><g><title>tracing_core::callsite::dispatchers::Dispatchers::register_dispatch (1 samples, 0.08%)</title><rect x="55.5556%" y="485" width="0.0842%" height="15" fill="rgb(247,33,21)" fg:x="660" fg:w="1"/><text x="55.8056%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (1 samples, 0.08%)</title><rect x="55.5556%" y="469" width="0.0842%" height="15" fill="rgb(233,71,46)" fg:x="660" fg:w="1"/><text x="55.8056%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.34%)</title><rect x="55.6397%" y="405" width="0.3367%" height="15" fill="rgb(222,173,43)" fg:x="661" fg:w="4"/><text x="55.8897%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="55.7239%" y="389" width="0.2525%" height="15" fill="rgb(249,218,47)" fg:x="662" fg:w="3"/><text x="55.9739%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="55.7239%" y="373" width="0.2525%" height="15" fill="rgb(254,185,48)" fg:x="662" fg:w="3"/><text x="55.9739%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="55.8081%" y="357" width="0.1684%" height="15" fill="rgb(252,165,50)" fg:x="663" fg:w="2"/><text x="56.0581%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.8923%" y="341" width="0.0842%" height="15" fill="rgb(206,219,6)" fg:x="664" fg:w="1"/><text x="56.1423%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.0606%" y="309" width="0.0842%" height="15" fill="rgb(212,212,45)" fg:x="666" fg:w="1"/><text x="56.3106%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.0606%" y="293" width="0.0842%" height="15" fill="rgb(221,31,9)" fg:x="666" fg:w="1"/><text x="56.3106%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.0606%" y="277" width="0.0842%" height="15" fill="rgb(234,198,39)" fg:x="666" fg:w="1"/><text x="56.3106%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.0606%" y="261" width="0.0842%" height="15" fill="rgb(252,145,46)" fg:x="666" fg:w="1"/><text x="56.3106%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.0606%" y="245" width="0.0842%" height="15" fill="rgb(237,149,0)" fg:x="666" fg:w="1"/><text x="56.3106%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="56.0606%" y="325" width="0.1684%" height="15" fill="rgb(229,65,5)" fg:x="666" fg:w="2"/><text x="56.3106%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.1448%" y="309" width="0.0842%" height="15" fill="rgb(235,60,36)" fg:x="667" fg:w="1"/><text x="56.3948%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="56.0606%" y="341" width="0.2525%" height="15" fill="rgb(222,47,18)" fg:x="666" fg:w="3"/><text x="56.3106%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.2290%" y="325" width="0.0842%" height="15" fill="rgb(235,114,22)" fg:x="668" fg:w="1"/><text x="56.4790%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3131%" y="325" width="0.0842%" height="15" fill="rgb(209,167,11)" fg:x="669" fg:w="1"/><text x="56.5631%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3131%" y="309" width="0.0842%" height="15" fill="rgb(251,73,18)" fg:x="669" fg:w="1"/><text x="56.5631%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3131%" y="293" width="0.0842%" height="15" fill="rgb(217,60,17)" fg:x="669" fg:w="1"/><text x="56.5631%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3131%" y="277" width="0.0842%" height="15" fill="rgb(224,36,37)" fg:x="669" fg:w="1"/><text x="56.5631%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3131%" y="261" width="0.0842%" height="15" fill="rgb(211,21,32)" fg:x="669" fg:w="1"/><text x="56.5631%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.3131%" y="245" width="0.0842%" height="15" fill="rgb(231,55,48)" fg:x="669" fg:w="1"/><text x="56.5631%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.3131%" y="229" width="0.0842%" height="15" fill="rgb(227,42,18)" fg:x="669" fg:w="1"/><text x="56.5631%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.3131%" y="213" width="0.0842%" height="15" fill="rgb(217,2,27)" fg:x="669" fg:w="1"/><text x="56.5631%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.3131%" y="197" width="0.0842%" height="15" fill="rgb(251,138,23)" fg:x="669" fg:w="1"/><text x="56.5631%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.3131%" y="181" width="0.0842%" height="15" fill="rgb(226,184,11)" fg:x="669" fg:w="1"/><text x="56.5631%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.3973%" y="325" width="0.0842%" height="15" fill="rgb(242,142,12)" fg:x="670" fg:w="1"/><text x="56.6473%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.3973%" y="309" width="0.0842%" height="15" fill="rgb(234,187,18)" fg:x="670" fg:w="1"/><text x="56.6473%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="56.3973%" y="293" width="0.0842%" height="15" fill="rgb(237,44,42)" fg:x="670" fg:w="1"/><text x="56.6473%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.3973%" y="277" width="0.0842%" height="15" fill="rgb(211,90,23)" fg:x="670" fg:w="1"/><text x="56.6473%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.3973%" y="261" width="0.0842%" height="15" fill="rgb(207,81,18)" fg:x="670" fg:w="1"/><text x="56.6473%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.3973%" y="245" width="0.0842%" height="15" fill="rgb(222,107,28)" fg:x="670" fg:w="1"/><text x="56.6473%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.3973%" y="229" width="0.0842%" height="15" fill="rgb(237,83,52)" fg:x="670" fg:w="1"/><text x="56.6473%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.25%)</title><rect x="56.3131%" y="341" width="0.2525%" height="15" fill="rgb(208,67,11)" fg:x="669" fg:w="3"/><text x="56.5631%" y="351.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="56.4815%" y="325" width="0.0842%" height="15" fill="rgb(249,157,49)" fg:x="671" fg:w="1"/><text x="56.7315%" y="335.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="56.5657%" y="341" width="0.0842%" height="15" fill="rgb(243,200,1)" fg:x="672" fg:w="1"/><text x="56.8157%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5657%" y="325" width="0.0842%" height="15" fill="rgb(225,162,37)" fg:x="672" fg:w="1"/><text x="56.8157%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.7340%" y="149" width="0.0842%" height="15" fill="rgb(242,92,13)" fg:x="674" fg:w="1"/><text x="56.9840%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.7340%" y="133" width="0.0842%" height="15" fill="rgb(220,43,36)" fg:x="674" fg:w="1"/><text x="56.9840%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.7340%" y="117" width="0.0842%" height="15" fill="rgb(213,165,48)" fg:x="674" fg:w="1"/><text x="56.9840%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="56.7340%" y="245" width="0.1684%" height="15" fill="rgb(227,200,9)" fg:x="674" fg:w="2"/><text x="56.9840%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="56.7340%" y="229" width="0.1684%" height="15" fill="rgb(221,222,28)" fg:x="674" fg:w="2"/><text x="56.9840%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.17%)</title><rect x="56.7340%" y="213" width="0.1684%" height="15" fill="rgb(223,142,26)" fg:x="674" fg:w="2"/><text x="56.9840%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="56.7340%" y="197" width="0.1684%" height="15" fill="rgb(243,46,9)" fg:x="674" fg:w="2"/><text x="56.9840%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="56.7340%" y="181" width="0.1684%" height="15" fill="rgb(250,56,11)" fg:x="674" fg:w="2"/><text x="56.9840%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="56.7340%" y="165" width="0.1684%" height="15" fill="rgb(229,113,5)" fg:x="674" fg:w="2"/><text x="56.9840%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8182%" y="149" width="0.0842%" height="15" fill="rgb(244,108,28)" fg:x="675" fg:w="1"/><text x="57.0682%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.9024%" y="245" width="0.0842%" height="15" fill="rgb(242,119,50)" fg:x="676" fg:w="1"/><text x="57.1524%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.9024%" y="229" width="0.0842%" height="15" fill="rgb(224,164,23)" fg:x="676" fg:w="1"/><text x="57.1524%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.9024%" y="213" width="0.0842%" height="15" fill="rgb(214,227,44)" fg:x="676" fg:w="1"/><text x="57.1524%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.9024%" y="197" width="0.0842%" height="15" fill="rgb(238,202,4)" fg:x="676" fg:w="1"/><text x="57.1524%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.9024%" y="181" width="0.0842%" height="15" fill="rgb(213,190,30)" fg:x="676" fg:w="1"/><text x="57.1524%" y="191.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.51%)</title><rect x="56.6498%" y="341" width="0.5051%" height="15" fill="rgb(239,15,2)" fg:x="673" fg:w="6"/><text x="56.8998%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.51%)</title><rect x="56.6498%" y="325" width="0.5051%" height="15" fill="rgb(249,229,4)" fg:x="673" fg:w="6"/><text x="56.8998%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.51%)</title><rect x="56.6498%" y="309" width="0.5051%" height="15" fill="rgb(239,75,44)" fg:x="673" fg:w="6"/><text x="56.8998%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.42%)</title><rect x="56.7340%" y="293" width="0.4209%" height="15" fill="rgb(251,206,23)" fg:x="674" fg:w="5"/><text x="56.9840%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.42%)</title><rect x="56.7340%" y="277" width="0.4209%" height="15" fill="rgb(215,208,0)" fg:x="674" fg:w="5"/><text x="56.9840%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.42%)</title><rect x="56.7340%" y="261" width="0.4209%" height="15" fill="rgb(230,75,50)" fg:x="674" fg:w="5"/><text x="56.9840%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="56.9865%" y="245" width="0.1684%" height="15" fill="rgb(246,180,39)" fg:x="677" fg:w="2"/><text x="57.2365%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="56.9865%" y="229" width="0.1684%" height="15" fill="rgb(249,175,24)" fg:x="677" fg:w="2"/><text x="57.2365%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="57.0707%" y="213" width="0.0842%" height="15" fill="rgb(247,176,22)" fg:x="678" fg:w="1"/><text x="57.3207%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.0707%" y="197" width="0.0842%" height="15" fill="rgb(241,100,24)" fg:x="678" fg:w="1"/><text x="57.3207%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.0707%" y="181" width="0.0842%" height="15" fill="rgb(233,4,35)" fg:x="678" fg:w="1"/><text x="57.3207%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.0707%" y="165" width="0.0842%" height="15" fill="rgb(211,164,46)" fg:x="678" fg:w="1"/><text x="57.3207%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.0707%" y="149" width="0.0842%" height="15" fill="rgb(242,99,53)" fg:x="678" fg:w="1"/><text x="57.3207%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.1549%" y="197" width="0.0842%" height="15" fill="rgb(243,45,33)" fg:x="679" fg:w="1"/><text x="57.4049%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.1549%" y="181" width="0.0842%" height="15" fill="rgb(217,55,21)" fg:x="679" fg:w="1"/><text x="57.4049%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.1549%" y="165" width="0.0842%" height="15" fill="rgb(245,145,46)" fg:x="679" fg:w="1"/><text x="57.4049%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.34%)</title><rect x="57.1549%" y="213" width="0.3367%" height="15" fill="rgb(215,112,45)" fg:x="679" fg:w="4"/><text x="57.4049%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="57.2391%" y="197" width="0.2525%" height="15" fill="rgb(228,104,16)" fg:x="680" fg:w="3"/><text x="57.4891%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="57.2391%" y="181" width="0.2525%" height="15" fill="rgb(239,186,38)" fg:x="680" fg:w="3"/><text x="57.4891%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="57.3232%" y="165" width="0.1684%" height="15" fill="rgb(228,38,35)" fg:x="681" fg:w="2"/><text x="57.5732%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="57.3232%" y="149" width="0.1684%" height="15" fill="rgb(251,42,40)" fg:x="681" fg:w="2"/><text x="57.5732%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4074%" y="133" width="0.0842%" height="15" fill="rgb(210,51,19)" fg:x="682" fg:w="1"/><text x="57.6574%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.42%)</title><rect x="57.1549%" y="277" width="0.4209%" height="15" fill="rgb(236,94,42)" fg:x="679" fg:w="5"/><text x="57.4049%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.42%)</title><rect x="57.1549%" y="261" width="0.4209%" height="15" fill="rgb(239,167,16)" fg:x="679" fg:w="5"/><text x="57.4049%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.42%)</title><rect x="57.1549%" y="245" width="0.4209%" height="15" fill="rgb(252,175,31)" fg:x="679" fg:w="5"/><text x="57.4049%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.42%)</title><rect x="57.1549%" y="229" width="0.4209%" height="15" fill="rgb(206,166,30)" fg:x="679" fg:w="5"/><text x="57.4049%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.4916%" y="213" width="0.0842%" height="15" fill="rgb(206,209,37)" fg:x="683" fg:w="1"/><text x="57.7416%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.4916%" y="197" width="0.0842%" height="15" fill="rgb(226,91,4)" fg:x="683" fg:w="1"/><text x="57.7416%" y="207.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (20 samples, 1.68%)</title><rect x="55.9764%" y="405" width="1.6835%" height="15" fill="rgb(222,167,0)" fg:x="665" fg:w="20"/><text x="56.2264%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (20 samples, 1.68%)</title><rect x="55.9764%" y="389" width="1.6835%" height="15" fill="rgb(211,70,14)" fg:x="665" fg:w="20"/><text x="56.2264%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (20 samples, 1.68%)</title><rect x="55.9764%" y="373" width="1.6835%" height="15" fill="rgb(214,84,42)" fg:x="665" fg:w="20"/><text x="56.2264%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.68%)</title><rect x="55.9764%" y="357" width="1.6835%" height="15" fill="rgb(235,157,37)" fg:x="665" fg:w="20"/><text x="56.2264%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.51%)</title><rect x="57.1549%" y="341" width="0.5051%" height="15" fill="rgb(225,13,6)" fg:x="679" fg:w="6"/><text x="57.4049%" y="351.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.51%)</title><rect x="57.1549%" y="325" width="0.5051%" height="15" fill="rgb(205,202,1)" fg:x="679" fg:w="6"/><text x="57.4049%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.51%)</title><rect x="57.1549%" y="309" width="0.5051%" height="15" fill="rgb(232,195,26)" fg:x="679" fg:w="6"/><text x="57.4049%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.51%)</title><rect x="57.1549%" y="293" width="0.5051%" height="15" fill="rgb(208,102,26)" fg:x="679" fg:w="6"/><text x="57.4049%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.5758%" y="277" width="0.0842%" height="15" fill="rgb(215,41,39)" fg:x="684" fg:w="1"/><text x="57.8258%" y="287.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (25 samples, 2.10%)</title><rect x="55.6397%" y="437" width="2.1044%" height="15" fill="rgb(247,139,11)" fg:x="661" fg:w="25"/><text x="55.8897%" y="447.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (25 samples, 2.10%)</title><rect x="55.6397%" y="421" width="2.1044%" height="15" fill="rgb(243,99,6)" fg:x="661" fg:w="25"/><text x="55.8897%" y="431.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6599%" y="405" width="0.0842%" height="15" fill="rgb(230,168,48)" fg:x="685" fg:w="1"/><text x="57.9099%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.9125%" y="229" width="0.0842%" height="15" fill="rgb(238,227,13)" fg:x="688" fg:w="1"/><text x="58.1625%" y="239.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.25%)</title><rect x="57.8283%" y="405" width="0.2525%" height="15" fill="rgb(209,109,13)" fg:x="687" fg:w="3"/><text x="58.0783%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.25%)</title><rect x="57.8283%" y="389" width="0.2525%" height="15" fill="rgb(228,195,1)" fg:x="687" fg:w="3"/><text x="58.0783%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.25%)</title><rect x="57.8283%" y="373" width="0.2525%" height="15" fill="rgb(230,218,0)" fg:x="687" fg:w="3"/><text x="58.0783%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.25%)</title><rect x="57.8283%" y="357" width="0.2525%" height="15" fill="rgb(206,1,45)" fg:x="687" fg:w="3"/><text x="58.0783%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.25%)</title><rect x="57.8283%" y="341" width="0.2525%" height="15" fill="rgb(209,124,26)" fg:x="687" fg:w="3"/><text x="58.0783%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.17%)</title><rect x="57.9125%" y="325" width="0.1684%" height="15" fill="rgb(220,59,8)" fg:x="688" fg:w="2"/><text x="58.1625%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.17%)</title><rect x="57.9125%" y="309" width="0.1684%" height="15" fill="rgb(251,41,37)" fg:x="688" fg:w="2"/><text x="58.1625%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.17%)</title><rect x="57.9125%" y="293" width="0.1684%" height="15" fill="rgb(239,152,21)" fg:x="688" fg:w="2"/><text x="58.1625%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.17%)</title><rect x="57.9125%" y="277" width="0.1684%" height="15" fill="rgb(226,32,1)" fg:x="688" fg:w="2"/><text x="58.1625%" y="287.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.17%)</title><rect x="57.9125%" y="261" width="0.1684%" height="15" fill="rgb(230,154,36)" fg:x="688" fg:w="2"/><text x="58.1625%" y="271.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.17%)</title><rect x="57.9125%" y="245" width="0.1684%" height="15" fill="rgb(208,228,43)" fg:x="688" fg:w="2"/><text x="58.1625%" y="255.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="57.9966%" y="229" width="0.0842%" height="15" fill="rgb(214,203,3)" fg:x="689" fg:w="1"/><text x="58.2466%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="57.9966%" y="213" width="0.0842%" height="15" fill="rgb(207,149,29)" fg:x="689" fg:w="1"/><text x="58.2466%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.9966%" y="197" width="0.0842%" height="15" fill="rgb(250,105,7)" fg:x="689" fg:w="1"/><text x="58.2466%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.9966%" y="181" width="0.0842%" height="15" fill="rgb(232,222,16)" fg:x="689" fg:w="1"/><text x="58.2466%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9966%" y="165" width="0.0842%" height="15" fill="rgb(209,32,24)" fg:x="689" fg:w="1"/><text x="58.2466%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.0808%" y="389" width="0.0842%" height="15" fill="rgb(225,13,6)" fg:x="690" fg:w="1"/><text x="58.3308%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="58.2492%" y="373" width="0.0842%" height="15" fill="rgb(245,226,26)" fg:x="692" fg:w="1"/><text x="58.4992%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="58.2492%" y="357" width="0.0842%" height="15" fill="rgb(229,178,27)" fg:x="692" fg:w="1"/><text x="58.4992%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="58.2492%" y="341" width="0.0842%" height="15" fill="rgb(205,227,28)" fg:x="692" fg:w="1"/><text x="58.4992%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="58.6700%" y="341" width="0.0842%" height="15" fill="rgb(210,191,45)" fg:x="697" fg:w="1"/><text x="58.9200%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.8384%" y="309" width="0.0842%" height="15" fill="rgb(206,124,16)" fg:x="699" fg:w="1"/><text x="59.0884%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.9226%" y="309" width="0.0842%" height="15" fill="rgb(210,162,0)" fg:x="700" fg:w="1"/><text x="59.1726%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.9226%" y="293" width="0.0842%" height="15" fill="rgb(211,54,38)" fg:x="700" fg:w="1"/><text x="59.1726%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.9226%" y="277" width="0.0842%" height="15" fill="rgb(248,192,3)" fg:x="700" fg:w="1"/><text x="59.1726%" y="287.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (7 samples, 0.59%)</title><rect x="58.5017%" y="357" width="0.5892%" height="15" fill="rgb(233,187,18)" fg:x="695" fg:w="7"/><text x="58.7517%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.34%)</title><rect x="58.7542%" y="341" width="0.3367%" height="15" fill="rgb(237,208,14)" fg:x="698" fg:w="4"/><text x="59.0042%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.34%)</title><rect x="58.7542%" y="325" width="0.3367%" height="15" fill="rgb(212,77,1)" fg:x="698" fg:w="4"/><text x="59.0042%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="59.0067%" y="309" width="0.0842%" height="15" fill="rgb(210,163,22)" fg:x="701" fg:w="1"/><text x="59.2567%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.0067%" y="293" width="0.0842%" height="15" fill="rgb(250,58,28)" fg:x="701" fg:w="1"/><text x="59.2567%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="59.0067%" y="277" width="0.0842%" height="15" fill="rgb(254,28,41)" fg:x="701" fg:w="1"/><text x="59.2567%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.0067%" y="261" width="0.0842%" height="15" fill="rgb(237,162,36)" fg:x="701" fg:w="1"/><text x="59.2567%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0067%" y="245" width="0.0842%" height="15" fill="rgb(232,56,6)" fg:x="701" fg:w="1"/><text x="59.2567%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.0909%" y="357" width="0.0842%" height="15" fill="rgb(216,127,42)" fg:x="702" fg:w="1"/><text x="59.3409%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2593%" y="213" width="0.0842%" height="15" fill="rgb(241,69,15)" fg:x="704" fg:w="1"/><text x="59.5093%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2593%" y="197" width="0.0842%" height="15" fill="rgb(227,180,19)" fg:x="704" fg:w="1"/><text x="59.5093%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2593%" y="181" width="0.0842%" height="15" fill="rgb(231,188,29)" fg:x="704" fg:w="1"/><text x="59.5093%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2593%" y="165" width="0.0842%" height="15" fill="rgb(224,176,27)" fg:x="704" fg:w="1"/><text x="59.5093%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2593%" y="149" width="0.0842%" height="15" fill="rgb(249,214,19)" fg:x="704" fg:w="1"/><text x="59.5093%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2593%" y="133" width="0.0842%" height="15" fill="rgb(240,0,4)" fg:x="704" fg:w="1"/><text x="59.5093%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2593%" y="117" width="0.0842%" height="15" fill="rgb(233,28,41)" fg:x="704" fg:w="1"/><text x="59.5093%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.2593%" y="101" width="0.0842%" height="15" fill="rgb(220,90,51)" fg:x="704" fg:w="1"/><text x="59.5093%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.2593%" y="85" width="0.0842%" height="15" fill="rgb(250,52,22)" fg:x="704" fg:w="1"/><text x="59.5093%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.2593%" y="69" width="0.0842%" height="15" fill="rgb(231,152,36)" fg:x="704" fg:w="1"/><text x="59.5093%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.2593%" y="53" width="0.0842%" height="15" fill="rgb(250,218,4)" fg:x="704" fg:w="1"/><text x="59.5093%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2593%" y="37" width="0.0842%" height="15" fill="rgb(210,38,21)" fg:x="704" fg:w="1"/><text x="59.5093%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="59.1751%" y="245" width="0.2525%" height="15" fill="rgb(230,75,13)" fg:x="703" fg:w="3"/><text x="59.4251%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="59.2593%" y="229" width="0.1684%" height="15" fill="rgb(250,68,53)" fg:x="704" fg:w="2"/><text x="59.5093%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3434%" y="213" width="0.0842%" height="15" fill="rgb(250,210,16)" fg:x="705" fg:w="1"/><text x="59.5934%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.34%)</title><rect x="59.1751%" y="261" width="0.3367%" height="15" fill="rgb(240,132,5)" fg:x="703" fg:w="4"/><text x="59.4251%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4276%" y="245" width="0.0842%" height="15" fill="rgb(222,148,48)" fg:x="706" fg:w="1"/><text x="59.6776%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4276%" y="229" width="0.0842%" height="15" fill="rgb(247,181,24)" fg:x="706" fg:w="1"/><text x="59.6776%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.4276%" y="213" width="0.0842%" height="15" fill="rgb(239,5,31)" fg:x="706" fg:w="1"/><text x="59.6776%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.4276%" y="197" width="0.0842%" height="15" fill="rgb(241,152,38)" fg:x="706" fg:w="1"/><text x="59.6776%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.4276%" y="181" width="0.0842%" height="15" fill="rgb(246,200,37)" fg:x="706" fg:w="1"/><text x="59.6776%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.42%)</title><rect x="59.1751%" y="293" width="0.4209%" height="15" fill="rgb(243,210,26)" fg:x="703" fg:w="5"/><text x="59.4251%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.42%)</title><rect x="59.1751%" y="277" width="0.4209%" height="15" fill="rgb(222,22,22)" fg:x="703" fg:w="5"/><text x="59.4251%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5118%" y="261" width="0.0842%" height="15" fill="rgb(208,129,28)" fg:x="707" fg:w="1"/><text x="59.7618%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5118%" y="245" width="0.0842%" height="15" fill="rgb(254,169,28)" fg:x="707" fg:w="1"/><text x="59.7618%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.5118%" y="229" width="0.0842%" height="15" fill="rgb(225,45,17)" fg:x="707" fg:w="1"/><text x="59.7618%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.5118%" y="213" width="0.0842%" height="15" fill="rgb(232,199,2)" fg:x="707" fg:w="1"/><text x="59.7618%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.5118%" y="197" width="0.0842%" height="15" fill="rgb(235,33,40)" fg:x="707" fg:w="1"/><text x="59.7618%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5118%" y="181" width="0.0842%" height="15" fill="rgb(237,89,50)" fg:x="707" fg:w="1"/><text x="59.7618%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5118%" y="165" width="0.0842%" height="15" fill="rgb(238,126,5)" fg:x="707" fg:w="1"/><text x="59.7618%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.5118%" y="149" width="0.0842%" height="15" fill="rgb(247,214,42)" fg:x="707" fg:w="1"/><text x="59.7618%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.5118%" y="133" width="0.0842%" height="15" fill="rgb(238,60,45)" fg:x="707" fg:w="1"/><text x="59.7618%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.5118%" y="117" width="0.0842%" height="15" fill="rgb(225,69,44)" fg:x="707" fg:w="1"/><text x="59.7618%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.5118%" y="101" width="0.0842%" height="15" fill="rgb(241,13,44)" fg:x="707" fg:w="1"/><text x="59.7618%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5118%" y="85" width="0.0842%" height="15" fill="rgb(227,121,22)" fg:x="707" fg:w="1"/><text x="59.7618%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="59.5960%" y="293" width="0.0842%" height="15" fill="rgb(231,160,23)" fg:x="708" fg:w="1"/><text x="59.8460%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.5960%" y="277" width="0.0842%" height="15" fill="rgb(250,179,43)" fg:x="708" fg:w="1"/><text x="59.8460%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.5960%" y="261" width="0.0842%" height="15" fill="rgb(233,54,46)" fg:x="708" fg:w="1"/><text x="59.8460%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="59.5960%" y="245" width="0.0842%" height="15" fill="rgb(247,120,42)" fg:x="708" fg:w="1"/><text x="59.8460%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.5960%" y="229" width="0.0842%" height="15" fill="rgb(221,219,12)" fg:x="708" fg:w="1"/><text x="59.8460%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5960%" y="213" width="0.0842%" height="15" fill="rgb(211,126,8)" fg:x="708" fg:w="1"/><text x="59.8460%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.5960%" y="197" width="0.0842%" height="15" fill="rgb(218,154,33)" fg:x="708" fg:w="1"/><text x="59.8460%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.7643%" y="213" width="0.0842%" height="15" fill="rgb(212,199,16)" fg:x="710" fg:w="1"/><text x="60.0143%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="59.8485%" y="197" width="0.1684%" height="15" fill="rgb(236,215,46)" fg:x="711" fg:w="2"/><text x="60.0985%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="59.8485%" y="181" width="0.1684%" height="15" fill="rgb(232,32,22)" fg:x="711" fg:w="2"/><text x="60.0985%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.17%)</title><rect x="59.8485%" y="165" width="0.1684%" height="15" fill="rgb(234,79,15)" fg:x="711" fg:w="2"/><text x="60.0985%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.9327%" y="149" width="0.0842%" height="15" fill="rgb(235,187,47)" fg:x="712" fg:w="1"/><text x="60.1827%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.9327%" y="133" width="0.0842%" height="15" fill="rgb(244,69,37)" fg:x="712" fg:w="1"/><text x="60.1827%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.9327%" y="117" width="0.0842%" height="15" fill="rgb(249,140,25)" fg:x="712" fg:w="1"/><text x="60.1827%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.9327%" y="101" width="0.0842%" height="15" fill="rgb(213,69,8)" fg:x="712" fg:w="1"/><text x="60.1827%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.0168%" y="197" width="0.0842%" height="15" fill="rgb(220,136,2)" fg:x="713" fg:w="1"/><text x="60.2668%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.0168%" y="181" width="0.0842%" height="15" fill="rgb(237,50,36)" fg:x="713" fg:w="1"/><text x="60.2668%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.0168%" y="165" width="0.0842%" height="15" fill="rgb(226,18,11)" fg:x="713" fg:w="1"/><text x="60.2668%" y="175.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.1010%" y="149" width="0.0842%" height="15" fill="rgb(243,156,2)" fg:x="714" fg:w="1"/><text x="60.3510%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.1010%" y="133" width="0.0842%" height="15" fill="rgb(218,8,34)" fg:x="714" fg:w="1"/><text x="60.3510%" y="143.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.59%)</title><rect x="59.6801%" y="293" width="0.5892%" height="15" fill="rgb(250,94,35)" fg:x="709" fg:w="7"/><text x="59.9301%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.59%)</title><rect x="59.6801%" y="277" width="0.5892%" height="15" fill="rgb(229,127,21)" fg:x="709" fg:w="7"/><text x="59.9301%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.59%)</title><rect x="59.6801%" y="261" width="0.5892%" height="15" fill="rgb(234,49,5)" fg:x="709" fg:w="7"/><text x="59.9301%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.51%)</title><rect x="59.7643%" y="245" width="0.5051%" height="15" fill="rgb(248,12,16)" fg:x="710" fg:w="6"/><text x="60.0143%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.51%)</title><rect x="59.7643%" y="229" width="0.5051%" height="15" fill="rgb(208,220,31)" fg:x="710" fg:w="6"/><text x="60.0143%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.42%)</title><rect x="59.8485%" y="213" width="0.4209%" height="15" fill="rgb(243,184,0)" fg:x="711" fg:w="5"/><text x="60.0985%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="60.1010%" y="197" width="0.1684%" height="15" fill="rgb(217,38,21)" fg:x="714" fg:w="2"/><text x="60.3510%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="60.1010%" y="181" width="0.1684%" height="15" fill="rgb(239,120,45)" fg:x="714" fg:w="2"/><text x="60.3510%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="60.1010%" y="165" width="0.1684%" height="15" fill="rgb(235,33,2)" fg:x="714" fg:w="2"/><text x="60.3510%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1852%" y="149" width="0.0842%" height="15" fill="rgb(249,161,5)" fg:x="715" fg:w="1"/><text x="60.4352%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.1852%" y="133" width="0.0842%" height="15" fill="rgb(250,165,48)" fg:x="715" fg:w="1"/><text x="60.4352%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.1852%" y="117" width="0.0842%" height="15" fill="rgb(221,23,45)" fg:x="715" fg:w="1"/><text x="60.4352%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1852%" y="101" width="0.0842%" height="15" fill="rgb(217,108,46)" fg:x="715" fg:w="1"/><text x="60.4352%" y="111.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="60.1852%" y="85" width="0.0842%" height="15" fill="rgb(254,26,35)" fg:x="715" fg:w="1"/><text x="60.4352%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.3535%" y="149" width="0.0842%" height="15" fill="rgb(218,223,28)" fg:x="717" fg:w="1"/><text x="60.6035%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.3535%" y="133" width="0.0842%" height="15" fill="rgb(242,27,47)" fg:x="717" fg:w="1"/><text x="60.6035%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.3535%" y="117" width="0.0842%" height="15" fill="rgb(218,39,35)" fg:x="717" fg:w="1"/><text x="60.6035%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3535%" y="101" width="0.0842%" height="15" fill="rgb(232,127,16)" fg:x="717" fg:w="1"/><text x="60.6035%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.4377%" y="149" width="0.0842%" height="15" fill="rgb(231,219,51)" fg:x="718" fg:w="1"/><text x="60.6877%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="60.3535%" y="197" width="0.2525%" height="15" fill="rgb(217,220,46)" fg:x="717" fg:w="3"/><text x="60.6035%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="60.3535%" y="181" width="0.2525%" height="15" fill="rgb(230,75,1)" fg:x="717" fg:w="3"/><text x="60.6035%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="60.3535%" y="165" width="0.2525%" height="15" fill="rgb(218,2,8)" fg:x="717" fg:w="3"/><text x="60.6035%" y="175.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="60.5219%" y="149" width="0.0842%" height="15" fill="rgb(206,111,30)" fg:x="719" fg:w="1"/><text x="60.7719%" y="159.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_decimal (1 samples, 0.08%)</title><rect x="60.5219%" y="133" width="0.0842%" height="15" fill="rgb(209,135,6)" fg:x="719" fg:w="1"/><text x="60.7719%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.6061%" y="197" width="0.0842%" height="15" fill="rgb(205,169,10)" fg:x="720" fg:w="1"/><text x="60.8561%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6061%" y="181" width="0.0842%" height="15" fill="rgb(212,204,38)" fg:x="720" fg:w="1"/><text x="60.8561%" y="191.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (19 samples, 1.60%)</title><rect x="59.1751%" y="357" width="1.5993%" height="15" fill="rgb(205,199,14)" fg:x="703" fg:w="19"/><text x="59.4251%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (19 samples, 1.60%)</title><rect x="59.1751%" y="341" width="1.5993%" height="15" fill="rgb(212,4,6)" fg:x="703" fg:w="19"/><text x="59.4251%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (19 samples, 1.60%)</title><rect x="59.1751%" y="325" width="1.5993%" height="15" fill="rgb(250,15,10)" fg:x="703" fg:w="19"/><text x="59.4251%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.60%)</title><rect x="59.1751%" y="309" width="1.5993%" height="15" fill="rgb(212,49,51)" fg:x="703" fg:w="19"/><text x="59.4251%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.51%)</title><rect x="60.2694%" y="293" width="0.5051%" height="15" fill="rgb(235,21,9)" fg:x="716" fg:w="6"/><text x="60.5194%" y="303.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.51%)</title><rect x="60.2694%" y="277" width="0.5051%" height="15" fill="rgb(251,31,32)" fg:x="716" fg:w="6"/><text x="60.5194%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.51%)</title><rect x="60.2694%" y="261" width="0.5051%" height="15" fill="rgb(246,23,9)" fg:x="716" fg:w="6"/><text x="60.5194%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.51%)</title><rect x="60.2694%" y="245" width="0.5051%" height="15" fill="rgb(225,216,14)" fg:x="716" fg:w="6"/><text x="60.5194%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.51%)</title><rect x="60.2694%" y="229" width="0.5051%" height="15" fill="rgb(215,200,26)" fg:x="716" fg:w="6"/><text x="60.5194%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.42%)</title><rect x="60.3535%" y="213" width="0.4209%" height="15" fill="rgb(237,130,47)" fg:x="717" fg:w="5"/><text x="60.6035%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.6902%" y="197" width="0.0842%" height="15" fill="rgb(247,74,14)" fg:x="721" fg:w="1"/><text x="60.9402%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.6902%" y="181" width="0.0842%" height="15" fill="rgb(254,97,46)" fg:x="721" fg:w="1"/><text x="60.9402%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6902%" y="165" width="0.0842%" height="15" fill="rgb(234,191,1)" fg:x="721" fg:w="1"/><text x="60.9402%" y="175.50"></text></g><g><title>plugins_core::tools::contained_by (30 samples, 2.53%)</title><rect x="58.3333%" y="373" width="2.5253%" height="15" fill="rgb(215,165,14)" fg:x="693" fg:w="30"/><text x="58.5833%" y="383.50">pl..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="60.7744%" y="357" width="0.0842%" height="15" fill="rgb(230,182,6)" fg:x="722" fg:w="1"/><text x="61.0244%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="60.7744%" y="341" width="0.0842%" height="15" fill="rgb(210,127,39)" fg:x="722" fg:w="1"/><text x="61.0244%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7744%" y="325" width="0.0842%" height="15" fill="rgb(223,212,51)" fg:x="722" fg:w="1"/><text x="61.0244%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8586%" y="325" width="0.0842%" height="15" fill="rgb(226,176,43)" fg:x="723" fg:w="1"/><text x="61.1086%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8586%" y="309" width="0.0842%" height="15" fill="rgb(222,155,4)" fg:x="723" fg:w="1"/><text x="61.1086%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.8586%" y="293" width="0.0842%" height="15" fill="rgb(215,149,7)" fg:x="723" fg:w="1"/><text x="61.1086%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.8586%" y="277" width="0.0842%" height="15" fill="rgb(252,199,23)" fg:x="723" fg:w="1"/><text x="61.1086%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.8586%" y="261" width="0.0842%" height="15" fill="rgb(245,52,29)" fg:x="723" fg:w="1"/><text x="61.1086%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8586%" y="245" width="0.0842%" height="15" fill="rgb(221,228,19)" fg:x="723" fg:w="1"/><text x="61.1086%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8586%" y="229" width="0.0842%" height="15" fill="rgb(253,101,6)" fg:x="723" fg:w="1"/><text x="61.1086%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.8586%" y="213" width="0.0842%" height="15" fill="rgb(211,130,8)" fg:x="723" fg:w="1"/><text x="61.1086%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.8586%" y="197" width="0.0842%" height="15" fill="rgb(238,37,53)" fg:x="723" fg:w="1"/><text x="61.1086%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.8586%" y="181" width="0.0842%" height="15" fill="rgb(235,145,5)" fg:x="723" fg:w="1"/><text x="61.1086%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.8586%" y="165" width="0.0842%" height="15" fill="rgb(244,12,43)" fg:x="723" fg:w="1"/><text x="61.1086%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8586%" y="149" width="0.0842%" height="15" fill="rgb(246,195,24)" fg:x="723" fg:w="1"/><text x="61.1086%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="60.8586%" y="341" width="0.1684%" height="15" fill="rgb(235,163,6)" fg:x="723" fg:w="2"/><text x="61.1086%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.9428%" y="325" width="0.0842%" height="15" fill="rgb(236,218,17)" fg:x="724" fg:w="1"/><text x="61.1928%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.9428%" y="309" width="0.0842%" height="15" fill="rgb(235,12,38)" fg:x="724" fg:w="1"/><text x="61.1928%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.9428%" y="293" width="0.0842%" height="15" fill="rgb(225,195,33)" fg:x="724" fg:w="1"/><text x="61.1928%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.9428%" y="277" width="0.0842%" height="15" fill="rgb(238,54,35)" fg:x="724" fg:w="1"/><text x="61.1928%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.9428%" y="261" width="0.0842%" height="15" fill="rgb(238,33,7)" fg:x="724" fg:w="1"/><text x="61.1928%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.9428%" y="245" width="0.0842%" height="15" fill="rgb(245,5,14)" fg:x="724" fg:w="1"/><text x="61.1928%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.9428%" y="229" width="0.0842%" height="15" fill="rgb(251,95,31)" fg:x="724" fg:w="1"/><text x="61.1928%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.9428%" y="213" width="0.0842%" height="15" fill="rgb(222,15,46)" fg:x="724" fg:w="1"/><text x="61.1928%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.9428%" y="197" width="0.0842%" height="15" fill="rgb(226,182,24)" fg:x="724" fg:w="1"/><text x="61.1928%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.9428%" y="181" width="0.0842%" height="15" fill="rgb(229,105,41)" fg:x="724" fg:w="1"/><text x="61.1928%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.9428%" y="165" width="0.0842%" height="15" fill="rgb(216,99,53)" fg:x="724" fg:w="1"/><text x="61.1928%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.9428%" y="149" width="0.0842%" height="15" fill="rgb(253,26,20)" fg:x="724" fg:w="1"/><text x="61.1928%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.9428%" y="133" width="0.0842%" height="15" fill="rgb(249,155,28)" fg:x="724" fg:w="1"/><text x="61.1928%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.9428%" y="117" width="0.0842%" height="15" fill="rgb(241,221,2)" fg:x="724" fg:w="1"/><text x="61.1928%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9428%" y="101" width="0.0842%" height="15" fill="rgb(219,124,6)" fg:x="724" fg:w="1"/><text x="61.1928%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="61.0269%" y="341" width="0.0842%" height="15" fill="rgb(233,37,6)" fg:x="725" fg:w="1"/><text x="61.2769%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.0269%" y="325" width="0.0842%" height="15" fill="rgb(238,20,14)" fg:x="725" fg:w="1"/><text x="61.2769%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.0269%" y="309" width="0.0842%" height="15" fill="rgb(232,106,27)" fg:x="725" fg:w="1"/><text x="61.2769%" y="319.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (3 samples, 0.25%)</title><rect x="61.2795%" y="261" width="0.2525%" height="15" fill="rgb(246,157,24)" fg:x="728" fg:w="3"/><text x="61.5295%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="61.2795%" y="245" width="0.2525%" height="15" fill="rgb(214,153,10)" fg:x="728" fg:w="3"/><text x="61.5295%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="61.2795%" y="229" width="0.2525%" height="15" fill="rgb(212,94,6)" fg:x="728" fg:w="3"/><text x="61.5295%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="61.3636%" y="213" width="0.1684%" height="15" fill="rgb(254,25,27)" fg:x="729" fg:w="2"/><text x="61.6136%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="61.3636%" y="197" width="0.1684%" height="15" fill="rgb(250,43,52)" fg:x="729" fg:w="2"/><text x="61.6136%" y="207.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (9 samples, 0.76%)</title><rect x="60.8586%" y="357" width="0.7576%" height="15" fill="rgb(221,226,40)" fg:x="723" fg:w="9"/><text x="61.1086%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.51%)</title><rect x="61.1111%" y="341" width="0.5051%" height="15" fill="rgb(235,162,34)" fg:x="726" fg:w="6"/><text x="61.3611%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.51%)</title><rect x="61.1111%" y="325" width="0.5051%" height="15" fill="rgb(239,24,26)" fg:x="726" fg:w="6"/><text x="61.3611%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.34%)</title><rect x="61.2795%" y="309" width="0.3367%" height="15" fill="rgb(244,226,11)" fg:x="728" fg:w="4"/><text x="61.5295%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.34%)</title><rect x="61.2795%" y="293" width="0.3367%" height="15" fill="rgb(225,23,10)" fg:x="728" fg:w="4"/><text x="61.5295%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.34%)</title><rect x="61.2795%" y="277" width="0.3367%" height="15" fill="rgb(249,125,6)" fg:x="728" fg:w="4"/><text x="61.5295%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.5320%" y="261" width="0.0842%" height="15" fill="rgb(246,212,12)" fg:x="731" fg:w="1"/><text x="61.7820%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.5320%" y="245" width="0.0842%" height="15" fill="rgb(230,43,32)" fg:x="731" fg:w="1"/><text x="61.7820%" y="255.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (42 samples, 3.54%)</title><rect x="58.1650%" y="389" width="3.5354%" height="15" fill="rgb(210,95,23)" fg:x="691" fg:w="42"/><text x="58.4150%" y="399.50">plu..</text></g><g><title>plugins_core::tools::occupied_by (10 samples, 0.84%)</title><rect x="60.8586%" y="373" width="0.8418%" height="15" fill="rgb(229,103,33)" fg:x="723" fg:w="10"/><text x="61.1086%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="61.6162%" y="357" width="0.0842%" height="15" fill="rgb(222,104,27)" fg:x="732" fg:w="1"/><text x="61.8662%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.6162%" y="341" width="0.0842%" height="15" fill="rgb(239,221,23)" fg:x="732" fg:w="1"/><text x="61.8662%" y="351.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (1 samples, 0.08%)</title><rect x="61.6162%" y="325" width="0.0842%" height="15" fill="rgb(222,98,21)" fg:x="732" fg:w="1"/><text x="61.8662%" y="335.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (1 samples, 0.08%)</title><rect x="61.6162%" y="309" width="0.0842%" height="15" fill="rgb(231,101,20)" fg:x="732" fg:w="1"/><text x="61.8662%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="61.6162%" y="293" width="0.0842%" height="15" fill="rgb(215,150,22)" fg:x="732" fg:w="1"/><text x="61.8662%" y="303.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="61.6162%" y="277" width="0.0842%" height="15" fill="rgb(248,3,34)" fg:x="732" fg:w="1"/><text x="61.8662%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.6162%" y="261" width="0.0842%" height="15" fill="rgb(220,141,21)" fg:x="732" fg:w="1"/><text x="61.8662%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.6162%" y="245" width="0.0842%" height="15" fill="rgb(223,41,48)" fg:x="732" fg:w="1"/><text x="61.8662%" y="255.50"></text></g><g><title>engine::session::Session::captured (90 samples, 7.58%)</title><rect x="54.2088%" y="549" width="7.5758%" height="15" fill="rgb(247,12,5)" fg:x="644" fg:w="90"/><text x="54.4588%" y="559.50">engine::se..</text></g><g><title>engine::session::logs::capture (83 samples, 6.99%)</title><rect x="54.7980%" y="533" width="6.9865%" height="15" fill="rgb(206,173,10)" fg:x="651" fg:w="83"/><text x="55.0480%" y="543.50">engine::s..</text></g><g><title>tracing_core::dispatcher::with_default (73 samples, 6.14%)</title><rect x="55.6397%" y="517" width="6.1448%" height="15" fill="rgb(233,214,37)" fg:x="661" fg:w="73"/><text x="55.8897%" y="527.50">tracing_..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (73 samples, 6.14%)</title><rect x="55.6397%" y="501" width="6.1448%" height="15" fill="rgb(238,86,43)" fg:x="661" fg:w="73"/><text x="55.8897%" y="511.50">&lt;engine:..</text></g><g><title>kernel::plugins::mw::apply_middleware (73 samples, 6.14%)</title><rect x="55.6397%" y="485" width="6.1448%" height="15" fill="rgb(212,182,8)" fg:x="661" fg:w="73"/><text x="55.8897%" y="495.50">kernel::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (73 samples, 6.14%)</title><rect x="55.6397%" y="469" width="6.1448%" height="15" fill="rgb(240,91,47)" fg:x="661" fg:w="73"/><text x="55.8897%" y="479.50">kernel::..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (73 samples, 6.14%)</title><rect x="55.6397%" y="453" width="6.1448%" height="15" fill="rgb(209,138,26)" fg:x="661" fg:w="73"/><text x="55.8897%" y="463.50">&lt;engine:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (48 samples, 4.04%)</title><rect x="57.7441%" y="437" width="4.0404%" height="15" fill="rgb(231,163,20)" fg:x="686" fg:w="48"/><text x="57.9941%" y="447.50">kern..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (48 samples, 4.04%)</title><rect x="57.7441%" y="421" width="4.0404%" height="15" fill="rgb(214,91,54)" fg:x="686" fg:w="48"/><text x="57.9941%" y="431.50">&lt;plu..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (44 samples, 3.70%)</title><rect x="58.0808%" y="405" width="3.7037%" height="15" fill="rgb(230,32,17)" fg:x="690" fg:w="44"/><text x="58.3308%" y="415.50">plug..</text></g><g><title>plugins_rune::sources::load_sources_from_entity (1 samples, 0.08%)</title><rect x="61.7003%" y="389" width="0.0842%" height="15" fill="rgb(231,34,34)" fg:x="733" fg:w="1"/><text x="61.9503%" y="399.50"></text></g><g><title>plugins_rune::sources::get_script (1 samples, 0.08%)</title><rect x="61.7003%" y="373" width="0.0842%" height="15" fill="rgb(224,228,27)" fg:x="733" fg:w="1"/><text x="61.9503%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="61.7003%" y="357" width="0.0842%" height="15" fill="rgb(219,35,40)" fg:x="733" fg:w="1"/><text x="61.9503%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="61.7003%" y="341" width="0.0842%" height="15" fill="rgb(234,42,8)" fg:x="733" fg:w="1"/><text x="61.9503%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.7003%" y="325" width="0.0842%" height="15" fill="rgb(226,75,22)" fg:x="733" fg:w="1"/><text x="61.9503%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.7003%" y="309" width="0.0842%" height="15" fill="rgb(242,203,28)" fg:x="733" fg:w="1"/><text x="61.9503%" y="319.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="61.7845%" y="533" width="0.0842%" height="15" fill="rgb(221,3,9)" fg:x="734" fg:w="1"/><text x="62.0345%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7845%" y="517" width="0.0842%" height="15" fill="rgb(214,34,31)" fg:x="734" fg:w="1"/><text x="62.0345%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7845%" y="501" width="0.0842%" height="15" fill="rgb(252,119,15)" fg:x="734" fg:w="1"/><text x="62.0345%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.7845%" y="485" width="0.0842%" height="15" fill="rgb(244,224,31)" fg:x="734" fg:w="1"/><text x="62.0345%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.7845%" y="469" width="0.0842%" height="15" fill="rgb(215,8,51)" fg:x="734" fg:w="1"/><text x="62.0345%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.7845%" y="453" width="0.0842%" height="15" fill="rgb(207,24,1)" fg:x="734" fg:w="1"/><text x="62.0345%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7845%" y="437" width="0.0842%" height="15" fill="rgb(245,90,0)" fg:x="734" fg:w="1"/><text x="62.0345%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7845%" y="421" width="0.0842%" height="15" fill="rgb(246,43,48)" fg:x="734" fg:w="1"/><text x="62.0345%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.7845%" y="405" width="0.0842%" height="15" fill="rgb(252,218,10)" fg:x="734" fg:w="1"/><text x="62.0345%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.7845%" y="389" width="0.0842%" height="15" fill="rgb(231,24,35)" fg:x="734" fg:w="1"/><text x="62.0345%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.7845%" y="373" width="0.0842%" height="15" fill="rgb(225,66,19)" fg:x="734" fg:w="1"/><text x="62.0345%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.7845%" y="357" width="0.0842%" height="15" fill="rgb(214,96,51)" fg:x="734" fg:w="1"/><text x="62.0345%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7845%" y="341" width="0.0842%" height="15" fill="rgb(251,151,47)" fg:x="734" fg:w="1"/><text x="62.0345%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.8687%" y="517" width="0.0842%" height="15" fill="rgb(236,79,14)" fg:x="735" fg:w="1"/><text x="62.1187%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="61.8687%" y="501" width="0.0842%" height="15" fill="rgb(210,205,11)" fg:x="735" fg:w="1"/><text x="62.1187%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.9529%" y="453" width="0.0842%" height="15" fill="rgb(233,142,53)" fg:x="736" fg:w="1"/><text x="62.2029%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9529%" y="437" width="0.0842%" height="15" fill="rgb(212,116,48)" fg:x="736" fg:w="1"/><text x="62.2029%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9529%" y="421" width="0.0842%" height="15" fill="rgb(234,55,33)" fg:x="736" fg:w="1"/><text x="62.2029%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9529%" y="405" width="0.0842%" height="15" fill="rgb(253,92,27)" fg:x="736" fg:w="1"/><text x="62.2029%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9529%" y="389" width="0.0842%" height="15" fill="rgb(220,7,35)" fg:x="736" fg:w="1"/><text x="62.2029%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9529%" y="373" width="0.0842%" height="15" fill="rgb(246,124,6)" fg:x="736" fg:w="1"/><text x="62.2029%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9529%" y="357" width="0.0842%" height="15" fill="rgb(212,111,51)" fg:x="736" fg:w="1"/><text x="62.2029%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9529%" y="341" width="0.0842%" height="15" fill="rgb(253,116,7)" fg:x="736" fg:w="1"/><text x="62.2029%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.9529%" y="325" width="0.0842%" height="15" fill="rgb(213,145,18)" fg:x="736" fg:w="1"/><text x="62.2029%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.9529%" y="309" width="0.0842%" height="15" fill="rgb(219,149,7)" fg:x="736" fg:w="1"/><text x="62.2029%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.9529%" y="293" width="0.0842%" height="15" fill="rgb(225,156,20)" fg:x="736" fg:w="1"/><text x="62.2029%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.9529%" y="277" width="0.0842%" height="15" fill="rgb(211,98,19)" fg:x="736" fg:w="1"/><text x="62.2029%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9529%" y="261" width="0.0842%" height="15" fill="rgb(231,192,31)" fg:x="736" fg:w="1"/><text x="62.2029%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="61.9529%" y="501" width="0.1684%" height="15" fill="rgb(249,95,19)" fg:x="736" fg:w="2"/><text x="62.2029%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="61.9529%" y="485" width="0.1684%" height="15" fill="rgb(247,101,36)" fg:x="736" fg:w="2"/><text x="62.2029%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="61.9529%" y="469" width="0.1684%" height="15" fill="rgb(221,45,43)" fg:x="736" fg:w="2"/><text x="62.2029%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.0370%" y="453" width="0.0842%" height="15" fill="rgb(220,42,1)" fg:x="737" fg:w="1"/><text x="62.2870%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.0370%" y="437" width="0.0842%" height="15" fill="rgb(236,19,24)" fg:x="737" fg:w="1"/><text x="62.2870%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.0370%" y="421" width="0.0842%" height="15" fill="rgb(225,192,6)" fg:x="737" fg:w="1"/><text x="62.2870%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.0370%" y="405" width="0.0842%" height="15" fill="rgb(242,30,19)" fg:x="737" fg:w="1"/><text x="62.2870%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.0370%" y="389" width="0.0842%" height="15" fill="rgb(240,36,6)" fg:x="737" fg:w="1"/><text x="62.2870%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.0370%" y="373" width="0.0842%" height="15" fill="rgb(246,40,28)" fg:x="737" fg:w="1"/><text x="62.2870%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.0370%" y="357" width="0.0842%" height="15" fill="rgb(225,155,33)" fg:x="737" fg:w="1"/><text x="62.2870%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.0370%" y="341" width="0.0842%" height="15" fill="rgb(240,65,18)" fg:x="737" fg:w="1"/><text x="62.2870%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.0370%" y="325" width="0.0842%" height="15" fill="rgb(217,0,48)" fg:x="737" fg:w="1"/><text x="62.2870%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.0370%" y="309" width="0.0842%" height="15" fill="rgb(217,80,15)" fg:x="737" fg:w="1"/><text x="62.2870%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.0370%" y="293" width="0.0842%" height="15" fill="rgb(253,43,51)" fg:x="737" fg:w="1"/><text x="62.2870%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.0370%" y="277" width="0.0842%" height="15" fill="rgb(246,60,4)" fg:x="737" fg:w="1"/><text x="62.2870%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.0370%" y="261" width="0.0842%" height="15" fill="rgb(230,40,54)" fg:x="737" fg:w="1"/><text x="62.2870%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.0370%" y="245" width="0.0842%" height="15" fill="rgb(208,20,44)" fg:x="737" fg:w="1"/><text x="62.2870%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="62.1212%" y="453" width="0.1684%" height="15" fill="rgb(230,22,22)" fg:x="738" fg:w="2"/><text x="62.3712%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="62.1212%" y="437" width="0.1684%" height="15" fill="rgb(207,57,4)" fg:x="738" fg:w="2"/><text x="62.3712%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.2054%" y="421" width="0.0842%" height="15" fill="rgb(242,130,33)" fg:x="739" fg:w="1"/><text x="62.4554%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.2054%" y="405" width="0.0842%" height="15" fill="rgb(218,66,43)" fg:x="739" fg:w="1"/><text x="62.4554%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.2054%" y="389" width="0.0842%" height="15" fill="rgb(236,105,16)" fg:x="739" fg:w="1"/><text x="62.4554%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.2054%" y="373" width="0.0842%" height="15" fill="rgb(230,46,15)" fg:x="739" fg:w="1"/><text x="62.4554%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.2054%" y="357" width="0.0842%" height="15" fill="rgb(251,172,40)" fg:x="739" fg:w="1"/><text x="62.4554%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.2054%" y="341" width="0.0842%" height="15" fill="rgb(225,217,32)" fg:x="739" fg:w="1"/><text x="62.4554%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.2054%" y="325" width="0.0842%" height="15" fill="rgb(243,10,29)" fg:x="739" fg:w="1"/><text x="62.4554%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.2054%" y="309" width="0.0842%" height="15" fill="rgb(207,102,10)" fg:x="739" fg:w="1"/><text x="62.4554%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.2054%" y="293" width="0.0842%" height="15" fill="rgb(241,125,5)" fg:x="739" fg:w="1"/><text x="62.4554%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.2054%" y="277" width="0.0842%" height="15" fill="rgb(230,125,29)" fg:x="739" fg:w="1"/><text x="62.4554%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.2054%" y="261" width="0.0842%" height="15" fill="rgb(223,65,44)" fg:x="739" fg:w="1"/><text x="62.4554%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.2054%" y="245" width="0.0842%" height="15" fill="rgb(224,188,28)" fg:x="739" fg:w="1"/><text x="62.4554%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2054%" y="229" width="0.0842%" height="15" fill="rgb(254,197,27)" fg:x="739" fg:w="1"/><text x="62.4554%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3737%" y="389" width="0.0842%" height="15" fill="rgb(220,200,25)" fg:x="741" fg:w="1"/><text x="62.6237%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3737%" y="373" width="0.0842%" height="15" fill="rgb(239,225,54)" fg:x="741" fg:w="1"/><text x="62.6237%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3737%" y="357" width="0.0842%" height="15" fill="rgb(211,59,40)" fg:x="741" fg:w="1"/><text x="62.6237%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3737%" y="341" width="0.0842%" height="15" fill="rgb(213,176,46)" fg:x="741" fg:w="1"/><text x="62.6237%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3737%" y="325" width="0.0842%" height="15" fill="rgb(226,99,4)" fg:x="741" fg:w="1"/><text x="62.6237%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3737%" y="309" width="0.0842%" height="15" fill="rgb(239,203,43)" fg:x="741" fg:w="1"/><text x="62.6237%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3737%" y="293" width="0.0842%" height="15" fill="rgb(246,1,45)" fg:x="741" fg:w="1"/><text x="62.6237%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3737%" y="277" width="0.0842%" height="15" fill="rgb(231,42,52)" fg:x="741" fg:w="1"/><text x="62.6237%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.3737%" y="261" width="0.0842%" height="15" fill="rgb(240,13,50)" fg:x="741" fg:w="1"/><text x="62.6237%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.3737%" y="245" width="0.0842%" height="15" fill="rgb(225,81,14)" fg:x="741" fg:w="1"/><text x="62.6237%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.3737%" y="229" width="0.0842%" height="15" fill="rgb(216,182,23)" fg:x="741" fg:w="1"/><text x="62.6237%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.3737%" y="213" width="0.0842%" height="15" fill="rgb(233,137,19)" fg:x="741" fg:w="1"/><text x="62.6237%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="62.3737%" y="405" width="0.1684%" height="15" fill="rgb(242,61,46)" fg:x="741" fg:w="2"/><text x="62.6237%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.4579%" y="389" width="0.0842%" height="15" fill="rgb(221,168,51)" fg:x="742" fg:w="1"/><text x="62.7079%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.4579%" y="373" width="0.0842%" height="15" fill="rgb(238,48,15)" fg:x="742" fg:w="1"/><text x="62.7079%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.4579%" y="357" width="0.0842%" height="15" fill="rgb(216,13,16)" fg:x="742" fg:w="1"/><text x="62.7079%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.4579%" y="341" width="0.0842%" height="15" fill="rgb(223,185,34)" fg:x="742" fg:w="1"/><text x="62.7079%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.4579%" y="325" width="0.0842%" height="15" fill="rgb(228,94,42)" fg:x="742" fg:w="1"/><text x="62.7079%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.4579%" y="309" width="0.0842%" height="15" fill="rgb(218,166,43)" fg:x="742" fg:w="1"/><text x="62.7079%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.4579%" y="293" width="0.0842%" height="15" fill="rgb(232,30,50)" fg:x="742" fg:w="1"/><text x="62.7079%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.4579%" y="277" width="0.0842%" height="15" fill="rgb(245,206,45)" fg:x="742" fg:w="1"/><text x="62.7079%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.4579%" y="261" width="0.0842%" height="15" fill="rgb(220,56,22)" fg:x="742" fg:w="1"/><text x="62.7079%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.4579%" y="245" width="0.0842%" height="15" fill="rgb(239,129,38)" fg:x="742" fg:w="1"/><text x="62.7079%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.4579%" y="229" width="0.0842%" height="15" fill="rgb(207,68,41)" fg:x="742" fg:w="1"/><text x="62.7079%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.4579%" y="213" width="0.0842%" height="15" fill="rgb(221,21,7)" fg:x="742" fg:w="1"/><text x="62.7079%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.5421%" y="309" width="0.0842%" height="15" fill="rgb(240,33,25)" fg:x="743" fg:w="1"/><text x="62.7921%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="62.6263%" y="309" width="0.0842%" height="15" fill="rgb(242,119,10)" fg:x="744" fg:w="1"/><text x="62.8763%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="62.6263%" y="293" width="0.0842%" height="15" fill="rgb(214,149,40)" fg:x="744" fg:w="1"/><text x="62.8763%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="62.5421%" y="357" width="0.2525%" height="15" fill="rgb(228,25,36)" fg:x="743" fg:w="3"/><text x="62.7921%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.25%)</title><rect x="62.5421%" y="341" width="0.2525%" height="15" fill="rgb(222,59,15)" fg:x="743" fg:w="3"/><text x="62.7921%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.25%)</title><rect x="62.5421%" y="325" width="0.2525%" height="15" fill="rgb(218,170,0)" fg:x="743" fg:w="3"/><text x="62.7921%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.7104%" y="309" width="0.0842%" height="15" fill="rgb(232,173,23)" fg:x="745" fg:w="1"/><text x="62.9604%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.7104%" y="293" width="0.0842%" height="15" fill="rgb(218,116,1)" fg:x="745" fg:w="1"/><text x="62.9604%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.7104%" y="277" width="0.0842%" height="15" fill="rgb(207,34,4)" fg:x="745" fg:w="1"/><text x="62.9604%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7104%" y="261" width="0.0842%" height="15" fill="rgb(229,54,52)" fg:x="745" fg:w="1"/><text x="62.9604%" y="271.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="62.7946%" y="261" width="0.1684%" height="15" fill="rgb(211,86,23)" fg:x="746" fg:w="2"/><text x="63.0446%" y="271.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="62.7946%" y="245" width="0.1684%" height="15" fill="rgb(254,153,34)" fg:x="746" fg:w="2"/><text x="63.0446%" y="255.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="62.7946%" y="229" width="0.1684%" height="15" fill="rgb(219,220,14)" fg:x="746" fg:w="2"/><text x="63.0446%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.8788%" y="213" width="0.0842%" height="15" fill="rgb(247,8,26)" fg:x="747" fg:w="1"/><text x="63.1288%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.8788%" y="197" width="0.0842%" height="15" fill="rgb(213,129,42)" fg:x="747" fg:w="1"/><text x="63.1288%" y="207.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.8788%" y="181" width="0.0842%" height="15" fill="rgb(225,95,41)" fg:x="747" fg:w="1"/><text x="63.1288%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.8788%" y="165" width="0.0842%" height="15" fill="rgb(215,134,24)" fg:x="747" fg:w="1"/><text x="63.1288%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.8788%" y="149" width="0.0842%" height="15" fill="rgb(235,23,54)" fg:x="747" fg:w="1"/><text x="63.1288%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.8788%" y="133" width="0.0842%" height="15" fill="rgb(229,96,31)" fg:x="747" fg:w="1"/><text x="63.1288%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.76%)</title><rect x="62.2896%" y="453" width="0.7576%" height="15" fill="rgb(206,111,12)" fg:x="740" fg:w="9"/><text x="62.5396%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.76%)</title><rect x="62.2896%" y="437" width="0.7576%" height="15" fill="rgb(222,177,8)" fg:x="740" fg:w="9"/><text x="62.5396%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.67%)</title><rect x="62.3737%" y="421" width="0.6734%" height="15" fill="rgb(251,36,52)" fg:x="741" fg:w="8"/><text x="62.6237%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.51%)</title><rect x="62.5421%" y="405" width="0.5051%" height="15" fill="rgb(216,182,29)" fg:x="743" fg:w="6"/><text x="62.7921%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.51%)</title><rect x="62.5421%" y="389" width="0.5051%" height="15" fill="rgb(241,145,50)" fg:x="743" fg:w="6"/><text x="62.7921%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.51%)</title><rect x="62.5421%" y="373" width="0.5051%" height="15" fill="rgb(231,71,35)" fg:x="743" fg:w="6"/><text x="62.7921%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="62.7946%" y="357" width="0.2525%" height="15" fill="rgb(218,22,17)" fg:x="746" fg:w="3"/><text x="63.0446%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="62.7946%" y="341" width="0.2525%" height="15" fill="rgb(225,227,6)" fg:x="746" fg:w="3"/><text x="63.0446%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (3 samples, 0.25%)</title><rect x="62.7946%" y="325" width="0.2525%" height="15" fill="rgb(224,204,17)" fg:x="746" fg:w="3"/><text x="63.0446%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (3 samples, 0.25%)</title><rect x="62.7946%" y="309" width="0.2525%" height="15" fill="rgb(227,61,28)" fg:x="746" fg:w="3"/><text x="63.0446%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (3 samples, 0.25%)</title><rect x="62.7946%" y="293" width="0.2525%" height="15" fill="rgb(242,148,23)" fg:x="746" fg:w="3"/><text x="63.0446%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (3 samples, 0.25%)</title><rect x="62.7946%" y="277" width="0.2525%" height="15" fill="rgb(237,105,33)" fg:x="746" fg:w="3"/><text x="63.0446%" y="287.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="62.9630%" y="261" width="0.0842%" height="15" fill="rgb(238,218,40)" fg:x="748" fg:w="1"/><text x="63.2130%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.09%)</title><rect x="62.1212%" y="501" width="1.0943%" height="15" fill="rgb(209,126,11)" fg:x="738" fg:w="13"/><text x="62.3712%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.09%)</title><rect x="62.1212%" y="485" width="1.0943%" height="15" fill="rgb(245,90,11)" fg:x="738" fg:w="13"/><text x="62.3712%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (13 samples, 1.09%)</title><rect x="62.1212%" y="469" width="1.0943%" height="15" fill="rgb(211,195,10)" fg:x="738" fg:w="13"/><text x="62.3712%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="63.0471%" y="453" width="0.1684%" height="15" fill="rgb(231,45,45)" fg:x="749" fg:w="2"/><text x="63.2971%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="63.0471%" y="437" width="0.1684%" height="15" fill="rgb(246,100,43)" fg:x="749" fg:w="2"/><text x="63.2971%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.1313%" y="421" width="0.0842%" height="15" fill="rgb(241,193,8)" fg:x="750" fg:w="1"/><text x="63.3813%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.2997%" y="437" width="0.0842%" height="15" fill="rgb(208,76,19)" fg:x="752" fg:w="1"/><text x="63.5497%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (20 samples, 1.68%)</title><rect x="61.8687%" y="533" width="1.6835%" height="15" fill="rgb(223,69,40)" fg:x="735" fg:w="20"/><text x="62.1187%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (19 samples, 1.60%)</title><rect x="61.9529%" y="517" width="1.5993%" height="15" fill="rgb(207,120,39)" fg:x="736" fg:w="19"/><text x="62.2029%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.34%)</title><rect x="63.2155%" y="501" width="0.3367%" height="15" fill="rgb(212,209,28)" fg:x="751" fg:w="4"/><text x="63.4655%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.34%)</title><rect x="63.2155%" y="485" width="0.3367%" height="15" fill="rgb(246,82,29)" fg:x="751" fg:w="4"/><text x="63.4655%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.34%)</title><rect x="63.2155%" y="469" width="0.3367%" height="15" fill="rgb(239,6,40)" fg:x="751" fg:w="4"/><text x="63.4655%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.34%)</title><rect x="63.2155%" y="453" width="0.3367%" height="15" fill="rgb(228,181,35)" fg:x="751" fg:w="4"/><text x="63.4655%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="63.3838%" y="437" width="0.1684%" height="15" fill="rgb(238,151,2)" fg:x="753" fg:w="2"/><text x="63.6338%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="63.3838%" y="421" width="0.1684%" height="15" fill="rgb(236,94,18)" fg:x="753" fg:w="2"/><text x="63.6338%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="63.4680%" y="405" width="0.0842%" height="15" fill="rgb(208,38,14)" fg:x="754" fg:w="1"/><text x="63.7180%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="63.4680%" y="389" width="0.0842%" height="15" fill="rgb(234,215,27)" fg:x="754" fg:w="1"/><text x="63.7180%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.4680%" y="373" width="0.0842%" height="15" fill="rgb(254,211,53)" fg:x="754" fg:w="1"/><text x="63.7180%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.5522%" y="517" width="0.0842%" height="15" fill="rgb(216,175,11)" fg:x="755" fg:w="1"/><text x="63.8022%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.5522%" y="501" width="0.0842%" height="15" fill="rgb(246,179,26)" fg:x="755" fg:w="1"/><text x="63.8022%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="63.6364%" y="517" width="0.0842%" height="15" fill="rgb(249,19,52)" fg:x="756" fg:w="1"/><text x="63.8864%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.6364%" y="501" width="0.0842%" height="15" fill="rgb(230,42,52)" fg:x="756" fg:w="1"/><text x="63.8864%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6364%" y="485" width="0.0842%" height="15" fill="rgb(221,171,0)" fg:x="756" fg:w="1"/><text x="63.8864%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.6364%" y="469" width="0.0842%" height="15" fill="rgb(222,177,40)" fg:x="756" fg:w="1"/><text x="63.8864%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6364%" y="453" width="0.0842%" height="15" fill="rgb(247,34,16)" fg:x="756" fg:w="1"/><text x="63.8864%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.6364%" y="437" width="0.0842%" height="15" fill="rgb(213,217,37)" fg:x="756" fg:w="1"/><text x="63.8864%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6364%" y="421" width="0.0842%" height="15" fill="rgb(231,189,24)" fg:x="756" fg:w="1"/><text x="63.8864%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.8889%" y="437" width="0.0842%" height="15" fill="rgb(214,22,9)" fg:x="759" fg:w="1"/><text x="64.1389%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.8889%" y="421" width="0.0842%" height="15" fill="rgb(212,70,22)" fg:x="759" fg:w="1"/><text x="64.1389%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="63.9731%" y="421" width="0.1684%" height="15" fill="rgb(249,64,51)" fg:x="760" fg:w="2"/><text x="64.2231%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="63.9731%" y="405" width="0.1684%" height="15" fill="rgb(249,148,20)" fg:x="760" fg:w="2"/><text x="64.2231%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.17%)</title><rect x="63.9731%" y="389" width="0.1684%" height="15" fill="rgb(246,46,48)" fg:x="760" fg:w="2"/><text x="64.2231%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="63.9731%" y="373" width="0.1684%" height="15" fill="rgb(217,34,48)" fg:x="760" fg:w="2"/><text x="64.2231%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="63.9731%" y="357" width="0.1684%" height="15" fill="rgb(222,45,26)" fg:x="760" fg:w="2"/><text x="64.2231%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="63.9731%" y="341" width="0.1684%" height="15" fill="rgb(230,201,36)" fg:x="760" fg:w="2"/><text x="64.2231%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.17%)</title><rect x="63.9731%" y="325" width="0.1684%" height="15" fill="rgb(217,30,43)" fg:x="760" fg:w="2"/><text x="64.2231%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="64.0572%" y="309" width="0.0842%" height="15" fill="rgb(230,197,40)" fg:x="761" fg:w="1"/><text x="64.3072%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0572%" y="293" width="0.0842%" height="15" fill="rgb(239,181,18)" fg:x="761" fg:w="1"/><text x="64.3072%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="64.1414%" y="373" width="0.0842%" height="15" fill="rgb(222,60,39)" fg:x="762" fg:w="1"/><text x="64.3914%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="64.1414%" y="357" width="0.0842%" height="15" fill="rgb(210,60,22)" fg:x="762" fg:w="1"/><text x="64.3914%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.51%)</title><rect x="63.8047%" y="469" width="0.5051%" height="15" fill="rgb(239,213,48)" fg:x="758" fg:w="6"/><text x="64.0547%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.51%)</title><rect x="63.8047%" y="453" width="0.5051%" height="15" fill="rgb(253,214,23)" fg:x="758" fg:w="6"/><text x="64.0547%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.34%)</title><rect x="63.9731%" y="437" width="0.3367%" height="15" fill="rgb(211,98,45)" fg:x="760" fg:w="4"/><text x="64.2231%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="64.1414%" y="421" width="0.1684%" height="15" fill="rgb(239,130,44)" fg:x="762" fg:w="2"/><text x="64.3914%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="64.1414%" y="405" width="0.1684%" height="15" fill="rgb(222,181,35)" fg:x="762" fg:w="2"/><text x="64.3914%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="64.1414%" y="389" width="0.1684%" height="15" fill="rgb(219,219,49)" fg:x="762" fg:w="2"/><text x="64.3914%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.2256%" y="373" width="0.0842%" height="15" fill="rgb(227,161,51)" fg:x="763" fg:w="1"/><text x="64.4756%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.2256%" y="357" width="0.0842%" height="15" fill="rgb(239,112,27)" fg:x="763" fg:w="1"/><text x="64.4756%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.2256%" y="341" width="0.0842%" height="15" fill="rgb(248,122,18)" fg:x="763" fg:w="1"/><text x="64.4756%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.2256%" y="325" width="0.0842%" height="15" fill="rgb(245,130,23)" fg:x="763" fg:w="1"/><text x="64.4756%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.2256%" y="309" width="0.0842%" height="15" fill="rgb(211,225,28)" fg:x="763" fg:w="1"/><text x="64.4756%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.67%)</title><rect x="63.7205%" y="517" width="0.6734%" height="15" fill="rgb(242,105,44)" fg:x="757" fg:w="8"/><text x="63.9705%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.67%)</title><rect x="63.7205%" y="501" width="0.6734%" height="15" fill="rgb(216,183,46)" fg:x="757" fg:w="8"/><text x="63.9705%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.67%)</title><rect x="63.7205%" y="485" width="0.6734%" height="15" fill="rgb(227,112,9)" fg:x="757" fg:w="8"/><text x="63.9705%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.3098%" y="469" width="0.0842%" height="15" fill="rgb(244,21,0)" fg:x="764" fg:w="1"/><text x="64.5598%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.3098%" y="453" width="0.0842%" height="15" fill="rgb(236,185,14)" fg:x="764" fg:w="1"/><text x="64.5598%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3098%" y="437" width="0.0842%" height="15" fill="rgb(236,170,30)" fg:x="764" fg:w="1"/><text x="64.5598%" y="447.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="64.3939%" y="517" width="0.0842%" height="15" fill="rgb(209,198,51)" fg:x="765" fg:w="1"/><text x="64.6439%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.4781%" y="389" width="0.0842%" height="15" fill="rgb(205,171,26)" fg:x="766" fg:w="1"/><text x="64.7281%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4781%" y="373" width="0.0842%" height="15" fill="rgb(246,41,49)" fg:x="766" fg:w="1"/><text x="64.7281%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4781%" y="357" width="0.0842%" height="15" fill="rgb(240,229,12)" fg:x="766" fg:w="1"/><text x="64.7281%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="64.5623%" y="389" width="0.1684%" height="15" fill="rgb(212,8,54)" fg:x="767" fg:w="2"/><text x="64.8123%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="64.5623%" y="373" width="0.1684%" height="15" fill="rgb(230,114,13)" fg:x="767" fg:w="2"/><text x="64.8123%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.34%)</title><rect x="64.4781%" y="421" width="0.3367%" height="15" fill="rgb(229,130,28)" fg:x="766" fg:w="4"/><text x="64.7281%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.34%)</title><rect x="64.4781%" y="405" width="0.3367%" height="15" fill="rgb(206,139,15)" fg:x="766" fg:w="4"/><text x="64.7281%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7306%" y="389" width="0.0842%" height="15" fill="rgb(241,188,35)" fg:x="769" fg:w="1"/><text x="64.9806%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.8148%" y="421" width="0.0842%" height="15" fill="rgb(208,224,26)" fg:x="770" fg:w="1"/><text x="65.0648%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.8148%" y="405" width="0.0842%" height="15" fill="rgb(251,131,28)" fg:x="770" fg:w="1"/><text x="65.0648%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (38 samples, 3.20%)</title><rect x="61.7845%" y="549" width="3.1987%" height="15" fill="rgb(208,153,1)" fg:x="734" fg:w="38"/><text x="62.0345%" y="559.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.43%)</title><rect x="63.5522%" y="533" width="1.4310%" height="15" fill="rgb(234,33,36)" fg:x="755" fg:w="17"/><text x="63.8022%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.51%)</title><rect x="64.4781%" y="517" width="0.5051%" height="15" fill="rgb(246,42,29)" fg:x="766" fg:w="6"/><text x="64.7281%" y="527.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.51%)</title><rect x="64.4781%" y="501" width="0.5051%" height="15" fill="rgb(251,114,16)" fg:x="766" fg:w="6"/><text x="64.7281%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.51%)</title><rect x="64.4781%" y="485" width="0.5051%" height="15" fill="rgb(233,13,38)" fg:x="766" fg:w="6"/><text x="64.7281%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.51%)</title><rect x="64.4781%" y="469" width="0.5051%" height="15" fill="rgb(247,120,19)" fg:x="766" fg:w="6"/><text x="64.7281%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.51%)</title><rect x="64.4781%" y="453" width="0.5051%" height="15" fill="rgb(205,11,16)" fg:x="766" fg:w="6"/><text x="64.7281%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.51%)</title><rect x="64.4781%" y="437" width="0.5051%" height="15" fill="rgb(228,185,19)" fg:x="766" fg:w="6"/><text x="64.7281%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8990%" y="421" width="0.0842%" height="15" fill="rgb(239,88,52)" fg:x="771" fg:w="1"/><text x="65.1490%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="65.2357%" y="469" width="0.1684%" height="15" fill="rgb(219,23,1)" fg:x="775" fg:w="2"/><text x="65.4857%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="65.2357%" y="453" width="0.1684%" height="15" fill="rgb(253,177,16)" fg:x="775" fg:w="2"/><text x="65.4857%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="65.2357%" y="437" width="0.1684%" height="15" fill="rgb(225,150,40)" fg:x="775" fg:w="2"/><text x="65.4857%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3199%" y="421" width="0.0842%" height="15" fill="rgb(208,108,30)" fg:x="776" fg:w="1"/><text x="65.5699%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="65.2357%" y="501" width="0.2525%" height="15" fill="rgb(214,122,4)" fg:x="775" fg:w="3"/><text x="65.4857%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="65.2357%" y="485" width="0.2525%" height="15" fill="rgb(229,74,37)" fg:x="775" fg:w="3"/><text x="65.4857%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4040%" y="469" width="0.0842%" height="15" fill="rgb(233,61,41)" fg:x="777" fg:w="1"/><text x="65.6540%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4882%" y="485" width="0.0842%" height="15" fill="rgb(238,191,5)" fg:x="778" fg:w="1"/><text x="65.7382%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4882%" y="469" width="0.0842%" height="15" fill="rgb(233,78,24)" fg:x="778" fg:w="1"/><text x="65.7382%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4882%" y="453" width="0.0842%" height="15" fill="rgb(211,142,8)" fg:x="778" fg:w="1"/><text x="65.7382%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.4882%" y="437" width="0.0842%" height="15" fill="rgb(253,38,53)" fg:x="778" fg:w="1"/><text x="65.7382%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.4882%" y="421" width="0.0842%" height="15" fill="rgb(234,63,51)" fg:x="778" fg:w="1"/><text x="65.7382%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.4882%" y="405" width="0.0842%" height="15" fill="rgb(205,23,31)" fg:x="778" fg:w="1"/><text x="65.7382%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.4882%" y="389" width="0.0842%" height="15" fill="rgb(210,184,50)" fg:x="778" fg:w="1"/><text x="65.7382%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.4882%" y="373" width="0.0842%" height="15" fill="rgb(222,112,26)" fg:x="778" fg:w="1"/><text x="65.7382%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.4882%" y="357" width="0.0842%" height="15" fill="rgb(250,98,18)" fg:x="778" fg:w="1"/><text x="65.7382%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.4882%" y="341" width="0.0842%" height="15" fill="rgb(250,34,12)" fg:x="778" fg:w="1"/><text x="65.7382%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.4882%" y="325" width="0.0842%" height="15" fill="rgb(236,141,30)" fg:x="778" fg:w="1"/><text x="65.7382%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.4882%" y="309" width="0.0842%" height="15" fill="rgb(246,134,38)" fg:x="778" fg:w="1"/><text x="65.7382%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.4882%" y="293" width="0.0842%" height="15" fill="rgb(240,114,4)" fg:x="778" fg:w="1"/><text x="65.7382%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.25%)</title><rect x="65.4882%" y="501" width="0.2525%" height="15" fill="rgb(243,113,39)" fg:x="778" fg:w="3"/><text x="65.7382%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="65.5724%" y="485" width="0.1684%" height="15" fill="rgb(239,215,4)" fg:x="779" fg:w="2"/><text x="65.8224%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="65.5724%" y="469" width="0.1684%" height="15" fill="rgb(236,229,45)" fg:x="779" fg:w="2"/><text x="65.8224%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.6566%" y="453" width="0.0842%" height="15" fill="rgb(242,2,6)" fg:x="780" fg:w="1"/><text x="65.9066%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.6566%" y="437" width="0.0842%" height="15" fill="rgb(239,108,21)" fg:x="780" fg:w="1"/><text x="65.9066%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.6566%" y="421" width="0.0842%" height="15" fill="rgb(215,168,34)" fg:x="780" fg:w="1"/><text x="65.9066%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.7407%" y="453" width="0.0842%" height="15" fill="rgb(238,31,17)" fg:x="781" fg:w="1"/><text x="65.9907%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.8249%" y="421" width="0.0842%" height="15" fill="rgb(220,133,11)" fg:x="782" fg:w="1"/><text x="66.0749%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8249%" y="405" width="0.0842%" height="15" fill="rgb(212,158,23)" fg:x="782" fg:w="1"/><text x="66.0749%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (2 samples, 0.17%)</title><rect x="65.8249%" y="453" width="0.1684%" height="15" fill="rgb(223,172,7)" fg:x="782" fg:w="2"/><text x="66.0749%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="65.8249%" y="437" width="0.1684%" height="15" fill="rgb(244,3,52)" fg:x="782" fg:w="2"/><text x="66.0749%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="65.9091%" y="421" width="0.0842%" height="15" fill="rgb(207,69,27)" fg:x="783" fg:w="1"/><text x="66.1591%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9933%" y="421" width="0.0842%" height="15" fill="rgb(213,136,45)" fg:x="784" fg:w="1"/><text x="66.2433%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.9933%" y="405" width="0.0842%" height="15" fill="rgb(218,79,17)" fg:x="784" fg:w="1"/><text x="66.2433%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.9933%" y="389" width="0.0842%" height="15" fill="rgb(216,106,36)" fg:x="784" fg:w="1"/><text x="66.2433%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.0774%" y="405" width="0.0842%" height="15" fill="rgb(251,27,45)" fg:x="785" fg:w="1"/><text x="66.3274%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.0774%" y="389" width="0.0842%" height="15" fill="rgb(232,21,34)" fg:x="785" fg:w="1"/><text x="66.3274%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.0774%" y="373" width="0.0842%" height="15" fill="rgb(249,191,16)" fg:x="785" fg:w="1"/><text x="66.3274%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.1616%" y="325" width="0.0842%" height="15" fill="rgb(224,88,20)" fg:x="786" fg:w="1"/><text x="66.4116%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.1616%" y="309" width="0.0842%" height="15" fill="rgb(237,93,27)" fg:x="786" fg:w="1"/><text x="66.4116%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1616%" y="293" width="0.0842%" height="15" fill="rgb(226,198,48)" fg:x="786" fg:w="1"/><text x="66.4116%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.34%)</title><rect x="65.9933%" y="453" width="0.3367%" height="15" fill="rgb(207,162,53)" fg:x="784" fg:w="4"/><text x="66.2433%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.34%)</title><rect x="65.9933%" y="437" width="0.3367%" height="15" fill="rgb(207,169,9)" fg:x="784" fg:w="4"/><text x="66.2433%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.25%)</title><rect x="66.0774%" y="421" width="0.2525%" height="15" fill="rgb(224,166,46)" fg:x="785" fg:w="3"/><text x="66.3274%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="66.1616%" y="405" width="0.1684%" height="15" fill="rgb(233,26,6)" fg:x="786" fg:w="2"/><text x="66.4116%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="66.1616%" y="389" width="0.1684%" height="15" fill="rgb(218,106,45)" fg:x="786" fg:w="2"/><text x="66.4116%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="66.1616%" y="373" width="0.1684%" height="15" fill="rgb(240,217,4)" fg:x="786" fg:w="2"/><text x="66.4116%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="66.1616%" y="357" width="0.1684%" height="15" fill="rgb(246,171,10)" fg:x="786" fg:w="2"/><text x="66.4116%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="66.1616%" y="341" width="0.1684%" height="15" fill="rgb(223,197,30)" fg:x="786" fg:w="2"/><text x="66.4116%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.2458%" y="325" width="0.0842%" height="15" fill="rgb(207,92,16)" fg:x="787" fg:w="1"/><text x="66.4958%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="66.2458%" y="309" width="0.0842%" height="15" fill="rgb(211,6,44)" fg:x="787" fg:w="1"/><text x="66.4958%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.67%)</title><rect x="65.7407%" y="501" width="0.6734%" height="15" fill="rgb(219,139,2)" fg:x="781" fg:w="8"/><text x="65.9907%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.67%)</title><rect x="65.7407%" y="485" width="0.6734%" height="15" fill="rgb(224,103,21)" fg:x="781" fg:w="8"/><text x="65.9907%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.67%)</title><rect x="65.7407%" y="469" width="0.6734%" height="15" fill="rgb(254,110,48)" fg:x="781" fg:w="8"/><text x="65.9907%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.3300%" y="453" width="0.0842%" height="15" fill="rgb(212,88,19)" fg:x="788" fg:w="1"/><text x="66.5800%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.3300%" y="437" width="0.0842%" height="15" fill="rgb(248,103,6)" fg:x="788" fg:w="1"/><text x="66.5800%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="66.3300%" y="421" width="0.0842%" height="15" fill="rgb(214,53,46)" fg:x="788" fg:w="1"/><text x="66.5800%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="66.4141%" y="341" width="0.1684%" height="15" fill="rgb(236,190,24)" fg:x="789" fg:w="2"/><text x="66.6641%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="66.4141%" y="325" width="0.1684%" height="15" fill="rgb(254,58,28)" fg:x="789" fg:w="2"/><text x="66.6641%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="66.4141%" y="309" width="0.1684%" height="15" fill="rgb(243,63,27)" fg:x="789" fg:w="2"/><text x="66.6641%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="66.4141%" y="293" width="0.1684%" height="15" fill="rgb(206,81,20)" fg:x="789" fg:w="2"/><text x="66.6641%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="66.4141%" y="277" width="0.1684%" height="15" fill="rgb(252,69,51)" fg:x="789" fg:w="2"/><text x="66.6641%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="66.4141%" y="373" width="0.2525%" height="15" fill="rgb(222,213,4)" fg:x="789" fg:w="3"/><text x="66.6641%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="66.4141%" y="357" width="0.2525%" height="15" fill="rgb(226,198,12)" fg:x="789" fg:w="3"/><text x="66.6641%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.5825%" y="341" width="0.0842%" height="15" fill="rgb(248,115,11)" fg:x="791" fg:w="1"/><text x="66.8325%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5825%" y="325" width="0.0842%" height="15" fill="rgb(221,148,54)" fg:x="791" fg:w="1"/><text x="66.8325%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.34%)</title><rect x="66.4141%" y="437" width="0.3367%" height="15" fill="rgb(214,209,51)" fg:x="789" fg:w="4"/><text x="66.6641%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.34%)</title><rect x="66.4141%" y="421" width="0.3367%" height="15" fill="rgb(249,116,53)" fg:x="789" fg:w="4"/><text x="66.6641%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.34%)</title><rect x="66.4141%" y="405" width="0.3367%" height="15" fill="rgb(248,170,1)" fg:x="789" fg:w="4"/><text x="66.6641%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.34%)</title><rect x="66.4141%" y="389" width="0.3367%" height="15" fill="rgb(244,105,10)" fg:x="789" fg:w="4"/><text x="66.6641%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.6667%" y="373" width="0.0842%" height="15" fill="rgb(229,100,5)" fg:x="792" fg:w="1"/><text x="66.9167%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="66.6667%" y="357" width="0.0842%" height="15" fill="rgb(233,221,39)" fg:x="792" fg:w="1"/><text x="66.9167%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.68%)</title><rect x="65.1515%" y="517" width="1.6835%" height="15" fill="rgb(233,88,21)" fg:x="774" fg:w="20"/><text x="65.4015%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.42%)</title><rect x="66.4141%" y="501" width="0.4209%" height="15" fill="rgb(206,13,0)" fg:x="789" fg:w="5"/><text x="66.6641%" y="511.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.42%)</title><rect x="66.4141%" y="485" width="0.4209%" height="15" fill="rgb(242,15,35)" fg:x="789" fg:w="5"/><text x="66.6641%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.42%)</title><rect x="66.4141%" y="469" width="0.4209%" height="15" fill="rgb(247,142,41)" fg:x="789" fg:w="5"/><text x="66.6641%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.42%)</title><rect x="66.4141%" y="453" width="0.4209%" height="15" fill="rgb(245,51,29)" fg:x="789" fg:w="5"/><text x="66.6641%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.7508%" y="437" width="0.0842%" height="15" fill="rgb(228,209,43)" fg:x="793" fg:w="1"/><text x="67.0008%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.7508%" y="421" width="0.0842%" height="15" fill="rgb(233,185,9)" fg:x="793" fg:w="1"/><text x="67.0008%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (795 samples, 66.92%)</title><rect x="0.0000%" y="629" width="66.9192%" height="15" fill="rgb(226,93,0)" fg:x="0" fg:w="795"/><text x="0.2500%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (795 samples, 66.92%)</title><rect x="0.0000%" y="613" width="66.9192%" height="15" fill="rgb(245,194,43)" fg:x="0" fg:w="795"/><text x="0.2500%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (794 samples, 66.84%)</title><rect x="0.0842%" y="597" width="66.8350%" height="15" fill="rgb(211,145,34)" fg:x="1" fg:w="794"/><text x="0.3342%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (159 samples, 13.38%)</title><rect x="53.5354%" y="581" width="13.3838%" height="15" fill="rgb(231,228,28)" fg:x="636" fg:w="159"/><text x="53.7854%" y="591.50">engine::session::Ses..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (159 samples, 13.38%)</title><rect x="53.5354%" y="565" width="13.3838%" height="15" fill="rgb(236,149,4)" fg:x="636" fg:w="159"/><text x="53.7854%" y="575.50">engine::session::Ses..</text></g><g><title>kernel::model::EntityPtrResolver::world (23 samples, 1.94%)</title><rect x="64.9832%" y="549" width="1.9360%" height="15" fill="rgb(234,114,38)" fg:x="772" fg:w="23"/><text x="65.2332%" y="559.50">k..</text></g><g><title>engine::session::Session::load_entity (22 samples, 1.85%)</title><rect x="65.0673%" y="533" width="1.8519%" height="15" fill="rgb(246,132,51)" fg:x="773" fg:w="22"/><text x="65.3173%" y="543.50">e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.8350%" y="517" width="0.0842%" height="15" fill="rgb(251,137,22)" fg:x="794" fg:w="1"/><text x="67.0850%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.0034%" y="533" width="0.0842%" height="15" fill="rgb(243,59,52)" fg:x="796" fg:w="1"/><text x="67.2534%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.0034%" y="517" width="0.0842%" height="15" fill="rgb(239,56,28)" fg:x="796" fg:w="1"/><text x="67.2534%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.42%)</title><rect x="66.9192%" y="565" width="0.4209%" height="15" fill="rgb(218,168,27)" fg:x="795" fg:w="5"/><text x="67.1692%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.42%)</title><rect x="66.9192%" y="549" width="0.4209%" height="15" fill="rgb(232,165,11)" fg:x="795" fg:w="5"/><text x="67.1692%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.25%)</title><rect x="67.0875%" y="533" width="0.2525%" height="15" fill="rgb(253,55,41)" fg:x="797" fg:w="3"/><text x="67.3375%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.25%)</title><rect x="67.0875%" y="517" width="0.2525%" height="15" fill="rgb(233,206,24)" fg:x="797" fg:w="3"/><text x="67.3375%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.25%)</title><rect x="67.0875%" y="501" width="0.2525%" height="15" fill="rgb(220,199,8)" fg:x="797" fg:w="3"/><text x="67.3375%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2559%" y="485" width="0.0842%" height="15" fill="rgb(254,65,26)" fg:x="799" fg:w="1"/><text x="67.5059%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="67.4242%" y="453" width="0.1684%" height="15" fill="rgb(253,102,23)" fg:x="801" fg:w="2"/><text x="67.6742%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.5926%" y="453" width="0.0842%" height="15" fill="rgb(231,103,35)" fg:x="803" fg:w="1"/><text x="67.8426%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5926%" y="437" width="0.0842%" height="15" fill="rgb(238,26,10)" fg:x="803" fg:w="1"/><text x="67.8426%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="67.8451%" y="437" width="0.1684%" height="15" fill="rgb(234,191,34)" fg:x="806" fg:w="2"/><text x="68.0951%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="67.8451%" y="421" width="0.1684%" height="15" fill="rgb(206,210,9)" fg:x="806" fg:w="2"/><text x="68.0951%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.0135%" y="405" width="0.0842%" height="15" fill="rgb(219,155,3)" fg:x="808" fg:w="1"/><text x="68.2635%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.17%)</title><rect x="68.0135%" y="437" width="0.1684%" height="15" fill="rgb(221,62,52)" fg:x="808" fg:w="2"/><text x="68.2635%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="68.0135%" y="421" width="0.1684%" height="15" fill="rgb(215,197,36)" fg:x="808" fg:w="2"/><text x="68.2635%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.0976%" y="405" width="0.0842%" height="15" fill="rgb(226,222,6)" fg:x="809" fg:w="1"/><text x="68.3476%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.2660%" y="421" width="0.0842%" height="15" fill="rgb(215,58,28)" fg:x="811" fg:w="1"/><text x="68.5160%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.09%)</title><rect x="67.4242%" y="501" width="1.0943%" height="15" fill="rgb(212,148,2)" fg:x="801" fg:w="13"/><text x="67.6742%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (13 samples, 1.09%)</title><rect x="67.4242%" y="485" width="1.0943%" height="15" fill="rgb(208,21,42)" fg:x="801" fg:w="13"/><text x="67.6742%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.09%)</title><rect x="67.4242%" y="469" width="1.0943%" height="15" fill="rgb(209,107,26)" fg:x="801" fg:w="13"/><text x="67.6742%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.84%)</title><rect x="67.6768%" y="453" width="0.8418%" height="15" fill="rgb(254,60,47)" fg:x="804" fg:w="10"/><text x="67.9268%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.34%)</title><rect x="68.1818%" y="437" width="0.3367%" height="15" fill="rgb(207,226,45)" fg:x="810" fg:w="4"/><text x="68.4318%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="68.3502%" y="421" width="0.1684%" height="15" fill="rgb(223,124,22)" fg:x="812" fg:w="2"/><text x="68.6002%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4343%" y="405" width="0.0842%" height="15" fill="rgb(240,162,13)" fg:x="813" fg:w="1"/><text x="68.6843%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="68.5185%" y="501" width="0.2525%" height="15" fill="rgb(244,199,31)" fg:x="814" fg:w="3"/><text x="68.7685%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.7710%" y="485" width="0.0842%" height="15" fill="rgb(207,92,16)" fg:x="817" fg:w="1"/><text x="69.0210%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.8552%" y="485" width="0.0842%" height="15" fill="rgb(215,31,19)" fg:x="818" fg:w="1"/><text x="69.1052%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.9394%" y="469" width="0.0842%" height="15" fill="rgb(245,118,14)" fg:x="819" fg:w="1"/><text x="69.1894%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.0236%" y="469" width="0.0842%" height="15" fill="rgb(248,12,46)" fg:x="820" fg:w="1"/><text x="69.2736%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.1077%" y="453" width="0.0842%" height="15" fill="rgb(209,119,0)" fg:x="821" fg:w="1"/><text x="69.3577%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.1919%" y="453" width="0.0842%" height="15" fill="rgb(254,51,44)" fg:x="822" fg:w="1"/><text x="69.4419%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.1919%" y="437" width="0.0842%" height="15" fill="rgb(253,182,35)" fg:x="822" fg:w="1"/><text x="69.4419%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.2761%" y="437" width="0.0842%" height="15" fill="rgb(205,198,39)" fg:x="823" fg:w="1"/><text x="69.5261%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2761%" y="421" width="0.0842%" height="15" fill="rgb(251,175,48)" fg:x="823" fg:w="1"/><text x="69.5261%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.53%)</title><rect x="66.9192%" y="581" width="2.5253%" height="15" fill="rgb(239,38,17)" fg:x="795" fg:w="30"/><text x="67.1692%" y="591.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (25 samples, 2.10%)</title><rect x="67.3401%" y="565" width="2.1044%" height="15" fill="rgb(212,101,8)" fg:x="800" fg:w="25"/><text x="67.5901%" y="575.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.10%)</title><rect x="67.3401%" y="549" width="2.1044%" height="15" fill="rgb(228,35,17)" fg:x="800" fg:w="25"/><text x="67.5901%" y="559.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (24 samples, 2.02%)</title><rect x="67.4242%" y="533" width="2.0202%" height="15" fill="rgb(214,95,8)" fg:x="801" fg:w="24"/><text x="67.6742%" y="543.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 2.02%)</title><rect x="67.4242%" y="517" width="2.0202%" height="15" fill="rgb(210,176,35)" fg:x="801" fg:w="24"/><text x="67.6742%" y="527.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.67%)</title><rect x="68.7710%" y="501" width="0.6734%" height="15" fill="rgb(226,4,3)" fg:x="817" fg:w="8"/><text x="69.0210%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.51%)</title><rect x="68.9394%" y="485" width="0.5051%" height="15" fill="rgb(232,133,14)" fg:x="819" fg:w="6"/><text x="69.1894%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.34%)</title><rect x="69.1077%" y="469" width="0.3367%" height="15" fill="rgb(250,191,8)" fg:x="821" fg:w="4"/><text x="69.3577%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="69.2761%" y="453" width="0.1684%" height="15" fill="rgb(213,12,45)" fg:x="823" fg:w="2"/><text x="69.5261%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.3603%" y="437" width="0.0842%" height="15" fill="rgb(233,78,26)" fg:x="824" fg:w="1"/><text x="69.6103%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6970%" y="485" width="0.0842%" height="15" fill="rgb(245,222,11)" fg:x="828" fg:w="1"/><text x="69.9470%" y="495.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="69.7811%" y="485" width="0.0842%" height="15" fill="rgb(216,174,12)" fg:x="829" fg:w="1"/><text x="70.0311%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7811%" y="469" width="0.0842%" height="15" fill="rgb(213,15,9)" fg:x="829" fg:w="1"/><text x="70.0311%" y="479.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="69.8653%" y="437" width="0.0842%" height="15" fill="rgb(238,103,32)" fg:x="830" fg:w="1"/><text x="70.1153%" y="447.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="69.8653%" y="421" width="0.0842%" height="15" fill="rgb(245,85,15)" fg:x="830" fg:w="1"/><text x="70.1153%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="69.8653%" y="405" width="0.0842%" height="15" fill="rgb(254,204,5)" fg:x="830" fg:w="1"/><text x="70.1153%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (1 samples, 0.08%)</title><rect x="69.8653%" y="389" width="0.0842%" height="15" fill="rgb(231,178,15)" fg:x="830" fg:w="1"/><text x="70.1153%" y="399.50"></text></g><g><title>core::ptr::align_offset (1 samples, 0.08%)</title><rect x="69.8653%" y="373" width="0.0842%" height="15" fill="rgb(248,151,3)" fg:x="830" fg:w="1"/><text x="70.1153%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.59%)</title><rect x="69.6128%" y="501" width="0.5892%" height="15" fill="rgb(250,139,13)" fg:x="827" fg:w="7"/><text x="69.8628%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (4 samples, 0.34%)</title><rect x="69.8653%" y="485" width="0.3367%" height="15" fill="rgb(243,107,53)" fg:x="830" fg:w="4"/><text x="70.1153%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.34%)</title><rect x="69.8653%" y="469" width="0.3367%" height="15" fill="rgb(232,81,15)" fg:x="830" fg:w="4"/><text x="70.1153%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.34%)</title><rect x="69.8653%" y="453" width="0.3367%" height="15" fill="rgb(225,187,48)" fg:x="830" fg:w="4"/><text x="70.1153%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.25%)</title><rect x="69.9495%" y="437" width="0.2525%" height="15" fill="rgb(205,116,12)" fg:x="831" fg:w="3"/><text x="70.1995%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.25%)</title><rect x="69.9495%" y="421" width="0.2525%" height="15" fill="rgb(220,222,31)" fg:x="831" fg:w="3"/><text x="70.1995%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.25%)</title><rect x="69.9495%" y="405" width="0.2525%" height="15" fill="rgb(233,187,49)" fg:x="831" fg:w="3"/><text x="70.1995%" y="415.50"></text></g><g><title>statx (3 samples, 0.25%)</title><rect x="69.9495%" y="389" width="0.2525%" height="15" fill="rgb(211,168,53)" fg:x="831" fg:w="3"/><text x="70.1995%" y="399.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (2 samples, 0.17%)</title><rect x="70.2020%" y="485" width="0.1684%" height="15" fill="rgb(206,160,16)" fg:x="834" fg:w="2"/><text x="70.4520%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="70.2020%" y="469" width="0.1684%" height="15" fill="rgb(254,164,13)" fg:x="834" fg:w="2"/><text x="70.4520%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="70.2020%" y="453" width="0.1684%" height="15" fill="rgb(229,45,30)" fg:x="834" fg:w="2"/><text x="70.4520%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2862%" y="437" width="0.0842%" height="15" fill="rgb(237,32,10)" fg:x="835" fg:w="1"/><text x="70.5362%" y="447.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="70.3704%" y="373" width="0.0842%" height="15" fill="rgb(251,20,47)" fg:x="836" fg:w="1"/><text x="70.6204%" y="383.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.34%)</title><rect x="70.3704%" y="469" width="0.3367%" height="15" fill="rgb(251,116,12)" fg:x="836" fg:w="4"/><text x="70.6204%" y="479.50"></text></g><g><title>glob::fill_todo (4 samples, 0.34%)</title><rect x="70.3704%" y="453" width="0.3367%" height="15" fill="rgb(214,227,27)" fg:x="836" fg:w="4"/><text x="70.6204%" y="463.50"></text></g><g><title>glob::is_dir (4 samples, 0.34%)</title><rect x="70.3704%" y="437" width="0.3367%" height="15" fill="rgb(248,10,53)" fg:x="836" fg:w="4"/><text x="70.6204%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (4 samples, 0.34%)</title><rect x="70.3704%" y="421" width="0.3367%" height="15" fill="rgb(221,176,25)" fg:x="836" fg:w="4"/><text x="70.6204%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.34%)</title><rect x="70.3704%" y="405" width="0.3367%" height="15" fill="rgb(205,70,46)" fg:x="836" fg:w="4"/><text x="70.6204%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.34%)</title><rect x="70.3704%" y="389" width="0.3367%" height="15" fill="rgb(217,45,38)" fg:x="836" fg:w="4"/><text x="70.6204%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.25%)</title><rect x="70.4545%" y="373" width="0.2525%" height="15" fill="rgb(243,6,54)" fg:x="837" fg:w="3"/><text x="70.7045%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.25%)</title><rect x="70.4545%" y="357" width="0.2525%" height="15" fill="rgb(242,76,23)" fg:x="837" fg:w="3"/><text x="70.7045%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.25%)</title><rect x="70.4545%" y="341" width="0.2525%" height="15" fill="rgb(239,166,0)" fg:x="837" fg:w="3"/><text x="70.7045%" y="351.50"></text></g><g><title>statx (3 samples, 0.25%)</title><rect x="70.4545%" y="325" width="0.2525%" height="15" fill="rgb(238,174,32)" fg:x="837" fg:w="3"/><text x="70.7045%" y="335.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.7071%" y="437" width="0.0842%" height="15" fill="rgb(238,124,44)" fg:x="840" fg:w="1"/><text x="70.9571%" y="447.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="70.7071%" y="421" width="0.0842%" height="15" fill="rgb(206,185,9)" fg:x="840" fg:w="1"/><text x="70.9571%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="70.7071%" y="405" width="0.0842%" height="15" fill="rgb(215,157,17)" fg:x="840" fg:w="1"/><text x="70.9571%" y="415.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="70.7071%" y="389" width="0.0842%" height="15" fill="rgb(251,17,29)" fg:x="840" fg:w="1"/><text x="70.9571%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="70.7071%" y="373" width="0.0842%" height="15" fill="rgb(227,113,27)" fg:x="840" fg:w="1"/><text x="70.9571%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="70.7071%" y="357" width="0.0842%" height="15" fill="rgb(217,226,24)" fg:x="840" fg:w="1"/><text x="70.9571%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="70.7071%" y="341" width="0.0842%" height="15" fill="rgb(251,99,38)" fg:x="840" fg:w="1"/><text x="70.9571%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.7071%" y="325" width="0.0842%" height="15" fill="rgb(231,147,19)" fg:x="840" fg:w="1"/><text x="70.9571%" y="335.50"></text></g><g><title>glob::Pattern::new (1 samples, 0.08%)</title><rect x="70.7912%" y="437" width="0.0842%" height="15" fill="rgb(230,86,8)" fg:x="841" fg:w="1"/><text x="71.0412%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="70.7912%" y="421" width="0.0842%" height="15" fill="rgb(237,159,39)" fg:x="841" fg:w="1"/><text x="71.0412%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.7912%" y="405" width="0.0842%" height="15" fill="rgb(247,179,47)" fg:x="841" fg:w="1"/><text x="71.0412%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.7912%" y="389" width="0.0842%" height="15" fill="rgb(253,152,26)" fg:x="841" fg:w="1"/><text x="71.0412%" y="399.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.76%)</title><rect x="70.2020%" y="501" width="0.7576%" height="15" fill="rgb(222,211,15)" fg:x="834" fg:w="9"/><text x="70.4520%" y="511.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (7 samples, 0.59%)</title><rect x="70.3704%" y="485" width="0.5892%" height="15" fill="rgb(236,193,6)" fg:x="836" fg:w="7"/><text x="70.6204%" y="495.50"></text></g><g><title>glob::glob (3 samples, 0.25%)</title><rect x="70.7071%" y="469" width="0.2525%" height="15" fill="rgb(226,206,10)" fg:x="840" fg:w="3"/><text x="70.9571%" y="479.50"></text></g><g><title>glob::glob_with (3 samples, 0.25%)</title><rect x="70.7071%" y="453" width="0.2525%" height="15" fill="rgb(213,125,22)" fg:x="840" fg:w="3"/><text x="70.9571%" y="463.50"></text></g><g><title>std::ffi::os_str::&lt;impl core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt; for &amp;str&gt;::try_from (1 samples, 0.08%)</title><rect x="70.8754%" y="437" width="0.0842%" height="15" fill="rgb(221,66,28)" fg:x="842" fg:w="1"/><text x="71.1254%" y="447.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.08%)</title><rect x="70.8754%" y="421" width="0.0842%" height="15" fill="rgb(222,84,53)" fg:x="842" fg:w="1"/><text x="71.1254%" y="431.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.08%)</title><rect x="70.8754%" y="405" width="0.0842%" height="15" fill="rgb(243,50,15)" fg:x="842" fg:w="1"/><text x="71.1254%" y="415.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.17%)</title><rect x="71.2121%" y="437" width="0.1684%" height="15" fill="rgb(208,184,23)" fg:x="846" fg:w="2"/><text x="71.4621%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.17%)</title><rect x="71.2121%" y="421" width="0.1684%" height="15" fill="rgb(221,83,2)" fg:x="846" fg:w="2"/><text x="71.4621%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="71.2121%" y="405" width="0.1684%" height="15" fill="rgb(236,53,24)" fg:x="846" fg:w="2"/><text x="71.4621%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="71.2121%" y="389" width="0.1684%" height="15" fill="rgb(244,171,29)" fg:x="846" fg:w="2"/><text x="71.4621%" y="399.50"></text></g><g><title>kernel::plugins::ActionSchema::new (2 samples, 0.17%)</title><rect x="71.3805%" y="437" width="0.1684%" height="15" fill="rgb(205,19,11)" fg:x="848" fg:w="2"/><text x="71.6305%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4646%" y="421" width="0.0842%" height="15" fill="rgb(207,108,29)" fg:x="849" fg:w="1"/><text x="71.7146%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.5488%" y="421" width="0.0842%" height="15" fill="rgb(236,215,43)" fg:x="850" fg:w="1"/><text x="71.7988%" y="431.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (7 samples, 0.59%)</title><rect x="71.2121%" y="469" width="0.5892%" height="15" fill="rgb(213,58,35)" fg:x="846" fg:w="7"/><text x="71.4621%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (7 samples, 0.59%)</title><rect x="71.2121%" y="453" width="0.5892%" height="15" fill="rgb(220,211,46)" fg:x="846" fg:w="7"/><text x="71.4621%" y="463.50"></text></g><g><title>replies::identifier_to_key (3 samples, 0.25%)</title><rect x="71.5488%" y="437" width="0.2525%" height="15" fill="rgb(212,134,16)" fg:x="850" fg:w="3"/><text x="71.7988%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="71.6330%" y="421" width="0.1684%" height="15" fill="rgb(232,90,44)" fg:x="851" fg:w="2"/><text x="71.8830%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="71.6330%" y="405" width="0.1684%" height="15" fill="rgb(212,18,36)" fg:x="851" fg:w="2"/><text x="71.8830%" y="415.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="71.6330%" y="389" width="0.1684%" height="15" fill="rgb(206,112,24)" fg:x="851" fg:w="2"/><text x="71.8830%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="71.8013%" y="469" width="0.0842%" height="15" fill="rgb(238,223,40)" fg:x="853" fg:w="1"/><text x="72.0513%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="71.8013%" y="453" width="0.0842%" height="15" fill="rgb(226,169,20)" fg:x="853" fg:w="1"/><text x="72.0513%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="71.8013%" y="437" width="0.0842%" height="15" fill="rgb(241,64,52)" fg:x="853" fg:w="1"/><text x="72.0513%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.8013%" y="421" width="0.0842%" height="15" fill="rgb(228,120,25)" fg:x="853" fg:w="1"/><text x="72.0513%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.8013%" y="405" width="0.0842%" height="15" fill="rgb(234,108,19)" fg:x="853" fg:w="1"/><text x="72.0513%" y="415.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.17%)</title><rect x="71.8855%" y="469" width="0.1684%" height="15" fill="rgb(236,133,29)" fg:x="854" fg:w="2"/><text x="72.1355%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.17%)</title><rect x="71.8855%" y="453" width="0.1684%" height="15" fill="rgb(246,174,53)" fg:x="854" fg:w="2"/><text x="72.1355%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="71.9697%" y="437" width="0.0842%" height="15" fill="rgb(210,105,35)" fg:x="855" fg:w="1"/><text x="72.2197%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 1.18%)</title><rect x="70.9596%" y="501" width="1.1785%" height="15" fill="rgb(225,27,26)" fg:x="843" fg:w="14"/><text x="71.2096%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.18%)</title><rect x="70.9596%" y="485" width="1.1785%" height="15" fill="rgb(233,2,39)" fg:x="843" fg:w="14"/><text x="71.2096%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0539%" y="469" width="0.0842%" height="15" fill="rgb(219,164,26)" fg:x="856" fg:w="1"/><text x="72.3039%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.0539%" y="453" width="0.0842%" height="15" fill="rgb(236,211,5)" fg:x="856" fg:w="1"/><text x="72.3039%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2222%" y="485" width="0.0842%" height="15" fill="rgb(244,227,23)" fg:x="858" fg:w="1"/><text x="72.4722%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (3 samples, 0.25%)</title><rect x="72.1380%" y="501" width="0.2525%" height="15" fill="rgb(230,184,8)" fg:x="857" fg:w="3"/><text x="72.3880%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="72.3064%" y="485" width="0.0842%" height="15" fill="rgb(217,125,48)" fg:x="859" fg:w="1"/><text x="72.5564%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (38 samples, 3.20%)</title><rect x="69.5286%" y="517" width="3.1987%" height="15" fill="rgb(223,192,47)" fg:x="826" fg:w="38"/><text x="69.7786%" y="527.50">ker..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.34%)</title><rect x="72.3906%" y="501" width="0.3367%" height="15" fill="rgb(226,119,10)" fg:x="860" fg:w="4"/><text x="72.6406%" y="511.50"></text></g><g><title>clock_gettime (3 samples, 0.25%)</title><rect x="72.4747%" y="485" width="0.2525%" height="15" fill="rgb(221,49,29)" fg:x="861" fg:w="3"/><text x="72.7247%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="72.8114%" y="485" width="0.1684%" height="15" fill="rgb(217,205,19)" fg:x="865" fg:w="2"/><text x="73.0614%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.8956%" y="469" width="0.0842%" height="15" fill="rgb(242,104,7)" fg:x="866" fg:w="1"/><text x="73.1456%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (43 samples, 3.62%)</title><rect x="69.4444%" y="581" width="3.6195%" height="15" fill="rgb(209,154,48)" fg:x="825" fg:w="43"/><text x="69.6944%" y="591.50">&lt;eng..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (43 samples, 3.62%)</title><rect x="69.4444%" y="565" width="3.6195%" height="15" fill="rgb(219,213,46)" fg:x="825" fg:w="43"/><text x="69.6944%" y="575.50">engi..</text></g><g><title>engine::session::Session::new (43 samples, 3.62%)</title><rect x="69.4444%" y="549" width="3.6195%" height="15" fill="rgb(229,105,38)" fg:x="825" fg:w="43"/><text x="69.6944%" y="559.50">engi..</text></g><g><title>engine::session::Session::initialize (43 samples, 3.62%)</title><rect x="69.4444%" y="533" width="3.6195%" height="15" fill="rgb(205,151,5)" fg:x="825" fg:w="43"/><text x="69.6944%" y="543.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.34%)</title><rect x="72.7273%" y="517" width="0.3367%" height="15" fill="rgb(248,115,40)" fg:x="864" fg:w="4"/><text x="72.9773%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.34%)</title><rect x="72.7273%" y="501" width="0.3367%" height="15" fill="rgb(206,179,2)" fg:x="864" fg:w="4"/><text x="72.9773%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.9798%" y="485" width="0.0842%" height="15" fill="rgb(230,103,24)" fg:x="867" fg:w="1"/><text x="73.2298%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.9798%" y="469" width="0.0842%" height="15" fill="rgb(218,152,4)" fg:x="867" fg:w="1"/><text x="73.2298%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.9798%" y="453" width="0.0842%" height="15" fill="rgb(236,161,54)" fg:x="867" fg:w="1"/><text x="73.2298%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.1481%" y="565" width="0.0842%" height="15" fill="rgb(226,65,17)" fg:x="869" fg:w="1"/><text x="73.3981%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="73.1481%" y="549" width="0.0842%" height="15" fill="rgb(221,134,44)" fg:x="869" fg:w="1"/><text x="73.3981%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.1481%" y="533" width="0.0842%" height="15" fill="rgb(251,129,4)" fg:x="869" fg:w="1"/><text x="73.3981%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.1481%" y="517" width="0.0842%" height="15" fill="rgb(244,32,34)" fg:x="869" fg:w="1"/><text x="73.3981%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="73.2323%" y="549" width="0.0842%" height="15" fill="rgb(251,224,37)" fg:x="870" fg:w="1"/><text x="73.4823%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2323%" y="533" width="0.0842%" height="15" fill="rgb(248,117,31)" fg:x="870" fg:w="1"/><text x="73.4823%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.3165%" y="517" width="0.0842%" height="15" fill="rgb(222,208,37)" fg:x="871" fg:w="1"/><text x="73.5665%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="73.3165%" y="501" width="0.0842%" height="15" fill="rgb(234,211,25)" fg:x="871" fg:w="1"/><text x="73.5665%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3165%" y="485" width="0.0842%" height="15" fill="rgb(211,72,6)" fg:x="871" fg:w="1"/><text x="73.5665%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.4007%" y="405" width="0.0842%" height="15" fill="rgb(249,198,38)" fg:x="872" fg:w="1"/><text x="73.6507%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="73.4007%" y="437" width="0.2525%" height="15" fill="rgb(221,86,51)" fg:x="872" fg:w="3"/><text x="73.6507%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="73.4007%" y="421" width="0.2525%" height="15" fill="rgb(226,178,43)" fg:x="872" fg:w="3"/><text x="73.6507%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="73.4848%" y="405" width="0.1684%" height="15" fill="rgb(215,145,7)" fg:x="873" fg:w="2"/><text x="73.7348%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="73.4848%" y="389" width="0.1684%" height="15" fill="rgb(250,202,36)" fg:x="873" fg:w="2"/><text x="73.7348%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.42%)</title><rect x="73.4007%" y="453" width="0.4209%" height="15" fill="rgb(215,86,13)" fg:x="872" fg:w="5"/><text x="73.6507%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="73.6532%" y="437" width="0.1684%" height="15" fill="rgb(221,134,12)" fg:x="875" fg:w="2"/><text x="73.9032%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.51%)</title><rect x="73.4007%" y="469" width="0.5051%" height="15" fill="rgb(213,82,10)" fg:x="872" fg:w="6"/><text x="73.6507%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8215%" y="453" width="0.0842%" height="15" fill="rgb(214,142,0)" fg:x="877" fg:w="1"/><text x="74.0715%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="73.9057%" y="437" width="0.1684%" height="15" fill="rgb(205,145,9)" fg:x="878" fg:w="2"/><text x="74.1557%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="73.9057%" y="421" width="0.1684%" height="15" fill="rgb(244,214,8)" fg:x="878" fg:w="2"/><text x="74.1557%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="73.9057%" y="405" width="0.1684%" height="15" fill="rgb(224,72,51)" fg:x="878" fg:w="2"/><text x="74.1557%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="73.9057%" y="389" width="0.1684%" height="15" fill="rgb(233,137,37)" fg:x="878" fg:w="2"/><text x="74.1557%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.9899%" y="373" width="0.0842%" height="15" fill="rgb(208,71,28)" fg:x="879" fg:w="1"/><text x="74.2399%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.9899%" y="357" width="0.0842%" height="15" fill="rgb(226,31,7)" fg:x="879" fg:w="1"/><text x="74.2399%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.9899%" y="341" width="0.0842%" height="15" fill="rgb(229,62,18)" fg:x="879" fg:w="1"/><text x="74.2399%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.25%)</title><rect x="73.9057%" y="453" width="0.2525%" height="15" fill="rgb(226,74,28)" fg:x="878" fg:w="3"/><text x="74.1557%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.0741%" y="437" width="0.0842%" height="15" fill="rgb(214,170,18)" fg:x="880" fg:w="1"/><text x="74.3241%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.0741%" y="421" width="0.0842%" height="15" fill="rgb(227,229,35)" fg:x="880" fg:w="1"/><text x="74.3241%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.0741%" y="405" width="0.0842%" height="15" fill="rgb(225,181,39)" fg:x="880" fg:w="1"/><text x="74.3241%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.1582%" y="437" width="0.0842%" height="15" fill="rgb(253,124,44)" fg:x="881" fg:w="1"/><text x="74.4082%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.1582%" y="421" width="0.0842%" height="15" fill="rgb(220,75,18)" fg:x="881" fg:w="1"/><text x="74.4082%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.1582%" y="405" width="0.0842%" height="15" fill="rgb(239,175,43)" fg:x="881" fg:w="1"/><text x="74.4082%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="74.2424%" y="437" width="0.1684%" height="15" fill="rgb(228,112,50)" fg:x="882" fg:w="2"/><text x="74.4924%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="74.2424%" y="421" width="0.1684%" height="15" fill="rgb(232,105,36)" fg:x="882" fg:w="2"/><text x="74.4924%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="74.2424%" y="405" width="0.1684%" height="15" fill="rgb(227,137,47)" fg:x="882" fg:w="2"/><text x="74.4924%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.3266%" y="389" width="0.0842%" height="15" fill="rgb(217,51,9)" fg:x="883" fg:w="1"/><text x="74.5766%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.3266%" y="373" width="0.0842%" height="15" fill="rgb(245,117,0)" fg:x="883" fg:w="1"/><text x="74.5766%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.3266%" y="357" width="0.0842%" height="15" fill="rgb(252,52,30)" fg:x="883" fg:w="1"/><text x="74.5766%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.3266%" y="341" width="0.0842%" height="15" fill="rgb(227,85,33)" fg:x="883" fg:w="1"/><text x="74.5766%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.4949%" y="389" width="0.0842%" height="15" fill="rgb(220,157,20)" fg:x="885" fg:w="1"/><text x="74.7449%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.5791%" y="389" width="0.0842%" height="15" fill="rgb(254,14,34)" fg:x="886" fg:w="1"/><text x="74.8291%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.5791%" y="373" width="0.0842%" height="15" fill="rgb(216,103,41)" fg:x="886" fg:w="1"/><text x="74.8291%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.5791%" y="357" width="0.0842%" height="15" fill="rgb(245,221,9)" fg:x="886" fg:w="1"/><text x="74.8291%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.5791%" y="341" width="0.0842%" height="15" fill="rgb(254,136,47)" fg:x="886" fg:w="1"/><text x="74.8291%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.34%)</title><rect x="74.4949%" y="421" width="0.3367%" height="15" fill="rgb(235,71,46)" fg:x="885" fg:w="4"/><text x="74.7449%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.34%)</title><rect x="74.4949%" y="405" width="0.3367%" height="15" fill="rgb(242,154,29)" fg:x="885" fg:w="4"/><text x="74.7449%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="74.6633%" y="389" width="0.1684%" height="15" fill="rgb(210,65,31)" fg:x="887" fg:w="2"/><text x="74.9133%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="74.6633%" y="373" width="0.1684%" height="15" fill="rgb(244,9,50)" fg:x="887" fg:w="2"/><text x="74.9133%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="74.6633%" y="357" width="0.1684%" height="15" fill="rgb(215,141,38)" fg:x="887" fg:w="2"/><text x="74.9133%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="74.8316%" y="421" width="0.2525%" height="15" fill="rgb(241,129,6)" fg:x="889" fg:w="3"/><text x="75.0816%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.0000%" y="405" width="0.0842%" height="15" fill="rgb(253,169,4)" fg:x="891" fg:w="1"/><text x="75.2500%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.0000%" y="389" width="0.0842%" height="15" fill="rgb(237,82,36)" fg:x="891" fg:w="1"/><text x="75.2500%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.0000%" y="373" width="0.0842%" height="15" fill="rgb(209,171,11)" fg:x="891" fg:w="1"/><text x="75.2500%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.0842%" y="405" width="0.0842%" height="15" fill="rgb(242,19,22)" fg:x="892" fg:w="1"/><text x="75.3342%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.1684%" y="389" width="0.0842%" height="15" fill="rgb(251,122,24)" fg:x="893" fg:w="1"/><text x="75.4184%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.1684%" y="373" width="0.0842%" height="15" fill="rgb(226,166,42)" fg:x="893" fg:w="1"/><text x="75.4184%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.1684%" y="357" width="0.0842%" height="15" fill="rgb(244,101,48)" fg:x="893" fg:w="1"/><text x="75.4184%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.1684%" y="341" width="0.0842%" height="15" fill="rgb(227,125,1)" fg:x="893" fg:w="1"/><text x="75.4184%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="75.2525%" y="373" width="0.1684%" height="15" fill="rgb(206,79,43)" fg:x="894" fg:w="2"/><text x="75.5025%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.3367%" y="357" width="0.0842%" height="15" fill="rgb(241,109,41)" fg:x="895" fg:w="1"/><text x="75.5867%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.3367%" y="341" width="0.0842%" height="15" fill="rgb(219,73,4)" fg:x="895" fg:w="1"/><text x="75.5867%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.42%)</title><rect x="75.0842%" y="421" width="0.4209%" height="15" fill="rgb(239,25,41)" fg:x="892" fg:w="5"/><text x="75.3342%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.34%)</title><rect x="75.1684%" y="405" width="0.3367%" height="15" fill="rgb(208,88,46)" fg:x="893" fg:w="4"/><text x="75.4184%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="75.2525%" y="389" width="0.2525%" height="15" fill="rgb(239,184,9)" fg:x="894" fg:w="3"/><text x="75.5025%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4209%" y="373" width="0.0842%" height="15" fill="rgb(223,114,13)" fg:x="896" fg:w="1"/><text x="75.6709%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.4209%" y="357" width="0.0842%" height="15" fill="rgb(214,28,42)" fg:x="896" fg:w="1"/><text x="75.6709%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.18%)</title><rect x="74.4108%" y="437" width="1.1785%" height="15" fill="rgb(252,32,44)" fg:x="884" fg:w="14"/><text x="74.6608%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.5051%" y="421" width="0.0842%" height="15" fill="rgb(231,159,4)" fg:x="897" fg:w="1"/><text x="75.7551%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 1.77%)</title><rect x="73.9057%" y="469" width="1.7677%" height="15" fill="rgb(210,35,26)" fg:x="878" fg:w="21"/><text x="74.1557%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.52%)</title><rect x="74.1582%" y="453" width="1.5152%" height="15" fill="rgb(208,190,37)" fg:x="881" fg:w="18"/><text x="74.4082%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.5892%" y="437" width="0.0842%" height="15" fill="rgb(226,148,22)" fg:x="898" fg:w="1"/><text x="75.8392%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.6734%" y="437" width="0.0842%" height="15" fill="rgb(242,153,24)" fg:x="899" fg:w="1"/><text x="75.9234%" y="447.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="75.7576%" y="437" width="0.0842%" height="15" fill="rgb(213,133,7)" fg:x="900" fg:w="1"/><text x="76.0076%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.7576%" y="421" width="0.0842%" height="15" fill="rgb(248,206,18)" fg:x="900" fg:w="1"/><text x="76.0076%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="75.7576%" y="405" width="0.0842%" height="15" fill="rgb(233,157,4)" fg:x="900" fg:w="1"/><text x="76.0076%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.25%)</title><rect x="75.6734%" y="453" width="0.2525%" height="15" fill="rgb(249,179,32)" fg:x="899" fg:w="3"/><text x="75.9234%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="75.8418%" y="437" width="0.0842%" height="15" fill="rgb(248,69,35)" fg:x="901" fg:w="1"/><text x="76.0918%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.8418%" y="421" width="0.0842%" height="15" fill="rgb(249,158,38)" fg:x="901" fg:w="1"/><text x="76.0918%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.8418%" y="405" width="0.0842%" height="15" fill="rgb(223,18,43)" fg:x="901" fg:w="1"/><text x="76.0918%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="75.8418%" y="389" width="0.0842%" height="15" fill="rgb(238,42,45)" fg:x="901" fg:w="1"/><text x="76.0918%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.25%)</title><rect x="76.0943%" y="421" width="0.2525%" height="15" fill="rgb(219,65,47)" fg:x="904" fg:w="3"/><text x="76.3443%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="76.0943%" y="405" width="0.2525%" height="15" fill="rgb(248,153,12)" fg:x="904" fg:w="3"/><text x="76.3443%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2626%" y="389" width="0.0842%" height="15" fill="rgb(240,118,4)" fg:x="906" fg:w="1"/><text x="76.5126%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="76.4310%" y="405" width="0.0842%" height="15" fill="rgb(250,96,34)" fg:x="908" fg:w="1"/><text x="76.6810%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.5152%" y="373" width="0.0842%" height="15" fill="rgb(221,15,4)" fg:x="909" fg:w="1"/><text x="76.7652%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5152%" y="357" width="0.0842%" height="15" fill="rgb(217,149,33)" fg:x="909" fg:w="1"/><text x="76.7652%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.5152%" y="341" width="0.0842%" height="15" fill="rgb(213,58,29)" fg:x="909" fg:w="1"/><text x="76.7652%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5152%" y="325" width="0.0842%" height="15" fill="rgb(236,218,9)" fg:x="909" fg:w="1"/><text x="76.7652%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5152%" y="309" width="0.0842%" height="15" fill="rgb(248,40,19)" fg:x="909" fg:w="1"/><text x="76.7652%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="76.5152%" y="389" width="0.2525%" height="15" fill="rgb(212,17,6)" fg:x="909" fg:w="3"/><text x="76.7652%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="76.5993%" y="373" width="0.1684%" height="15" fill="rgb(206,212,20)" fg:x="910" fg:w="2"/><text x="76.8493%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="76.5993%" y="357" width="0.1684%" height="15" fill="rgb(229,80,37)" fg:x="910" fg:w="2"/><text x="76.8493%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="76.5993%" y="341" width="0.1684%" height="15" fill="rgb(253,8,37)" fg:x="910" fg:w="2"/><text x="76.8493%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6835%" y="325" width="0.0842%" height="15" fill="rgb(215,16,43)" fg:x="911" fg:w="1"/><text x="76.9335%" y="335.50"></text></g><g><title>engine::session::Session::flush (43 samples, 3.62%)</title><rect x="73.2323%" y="565" width="3.6195%" height="15" fill="rgb(236,219,16)" fg:x="870" fg:w="43"/><text x="73.4823%" y="575.50">engi..</text></g><g><title>engine::session::state::State::close (42 samples, 3.54%)</title><rect x="73.3165%" y="549" width="3.5354%" height="15" fill="rgb(251,0,3)" fg:x="871" fg:w="42"/><text x="73.5665%" y="559.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (42 samples, 3.54%)</title><rect x="73.3165%" y="533" width="3.5354%" height="15" fill="rgb(207,133,37)" fg:x="871" fg:w="42"/><text x="73.5665%" y="543.50">eng..</text></g><g><title>core::iter::adapters::try_process (41 samples, 3.45%)</title><rect x="73.4007%" y="517" width="3.4512%" height="15" fill="rgb(250,143,20)" fg:x="872" fg:w="41"/><text x="73.6507%" y="527.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 3.45%)</title><rect x="73.4007%" y="501" width="3.4512%" height="15" fill="rgb(242,19,50)" fg:x="872" fg:w="41"/><text x="73.6507%" y="511.50">&lt;al..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (41 samples, 3.45%)</title><rect x="73.4007%" y="485" width="3.4512%" height="15" fill="rgb(206,124,43)" fg:x="872" fg:w="41"/><text x="73.6507%" y="495.50">eng..</text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.18%)</title><rect x="75.6734%" y="469" width="1.1785%" height="15" fill="rgb(229,4,38)" fg:x="899" fg:w="14"/><text x="75.9234%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.93%)</title><rect x="75.9259%" y="453" width="0.9259%" height="15" fill="rgb(247,220,45)" fg:x="902" fg:w="11"/><text x="76.1759%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.84%)</title><rect x="76.0101%" y="437" width="0.8418%" height="15" fill="rgb(247,195,0)" fg:x="903" fg:w="10"/><text x="76.2601%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.51%)</title><rect x="76.3468%" y="421" width="0.5051%" height="15" fill="rgb(252,12,19)" fg:x="907" fg:w="6"/><text x="76.5968%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.34%)</title><rect x="76.5152%" y="405" width="0.3367%" height="15" fill="rgb(222,49,50)" fg:x="909" fg:w="4"/><text x="76.7652%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.7677%" y="389" width="0.0842%" height="15" fill="rgb(209,157,28)" fg:x="912" fg:w="1"/><text x="77.0177%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7677%" y="373" width="0.0842%" height="15" fill="rgb(238,174,24)" fg:x="912" fg:w="1"/><text x="77.0177%" y="383.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="76.8519%" y="565" width="0.0842%" height="15" fill="rgb(224,17,28)" fg:x="913" fg:w="1"/><text x="77.1019%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="76.8519%" y="549" width="0.0842%" height="15" fill="rgb(249,7,29)" fg:x="913" fg:w="1"/><text x="77.1019%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="76.8519%" y="533" width="0.0842%" height="15" fill="rgb(243,178,4)" fg:x="913" fg:w="1"/><text x="77.1019%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8519%" y="517" width="0.0842%" height="15" fill="rgb(246,138,35)" fg:x="913" fg:w="1"/><text x="77.1019%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8519%" y="501" width="0.0842%" height="15" fill="rgb(251,85,18)" fg:x="913" fg:w="1"/><text x="77.1019%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.8519%" y="485" width="0.0842%" height="15" fill="rgb(254,55,9)" fg:x="913" fg:w="1"/><text x="77.1019%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8519%" y="469" width="0.0842%" height="15" fill="rgb(248,4,50)" fg:x="913" fg:w="1"/><text x="77.1019%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="76.9360%" y="549" width="0.1684%" height="15" fill="rgb(215,208,14)" fg:x="914" fg:w="2"/><text x="77.1860%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="76.9360%" y="533" width="0.1684%" height="15" fill="rgb(218,37,18)" fg:x="914" fg:w="2"/><text x="77.1860%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.17%)</title><rect x="76.9360%" y="517" width="0.1684%" height="15" fill="rgb(206,104,13)" fg:x="914" fg:w="2"/><text x="77.1860%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="76.9360%" y="501" width="0.1684%" height="15" fill="rgb(248,94,22)" fg:x="914" fg:w="2"/><text x="77.1860%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.17%)</title><rect x="76.9360%" y="485" width="0.1684%" height="15" fill="rgb(235,42,46)" fg:x="914" fg:w="2"/><text x="77.1860%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="76.9360%" y="469" width="0.1684%" height="15" fill="rgb(220,228,48)" fg:x="914" fg:w="2"/><text x="77.1860%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="76.9360%" y="453" width="0.1684%" height="15" fill="rgb(216,58,12)" fg:x="914" fg:w="2"/><text x="77.1860%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="76.9360%" y="437" width="0.1684%" height="15" fill="rgb(223,97,52)" fg:x="914" fg:w="2"/><text x="77.1860%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="76.9360%" y="421" width="0.1684%" height="15" fill="rgb(208,159,17)" fg:x="914" fg:w="2"/><text x="77.1860%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="76.9360%" y="405" width="0.1684%" height="15" fill="rgb(215,172,9)" fg:x="914" fg:w="2"/><text x="77.1860%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="76.9360%" y="389" width="0.1684%" height="15" fill="rgb(252,175,30)" fg:x="914" fg:w="2"/><text x="77.1860%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="76.9360%" y="373" width="0.1684%" height="15" fill="rgb(209,159,10)" fg:x="914" fg:w="2"/><text x="77.1860%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="77.1044%" y="533" width="0.0842%" height="15" fill="rgb(229,73,51)" fg:x="916" fg:w="1"/><text x="77.3544%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1044%" y="517" width="0.0842%" height="15" fill="rgb(208,212,43)" fg:x="916" fg:w="1"/><text x="77.3544%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="77.1886%" y="533" width="0.0842%" height="15" fill="rgb(254,123,53)" fg:x="917" fg:w="1"/><text x="77.4386%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="77.1886%" y="517" width="0.0842%" height="15" fill="rgb(254,128,49)" fg:x="917" fg:w="1"/><text x="77.4386%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="77.2727%" y="517" width="0.0842%" height="15" fill="rgb(246,16,16)" fg:x="918" fg:w="1"/><text x="77.5227%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="77.2727%" y="501" width="0.0842%" height="15" fill="rgb(209,200,1)" fg:x="918" fg:w="1"/><text x="77.5227%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="77.2727%" y="485" width="0.0842%" height="15" fill="rgb(235,9,3)" fg:x="918" fg:w="1"/><text x="77.5227%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.2727%" y="469" width="0.0842%" height="15" fill="rgb(233,121,54)" fg:x="918" fg:w="1"/><text x="77.5227%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="77.2727%" y="453" width="0.0842%" height="15" fill="rgb(236,80,25)" fg:x="918" fg:w="1"/><text x="77.5227%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="77.2727%" y="437" width="0.0842%" height="15" fill="rgb(220,44,24)" fg:x="918" fg:w="1"/><text x="77.5227%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.2727%" y="421" width="0.0842%" height="15" fill="rgb(236,225,16)" fg:x="918" fg:w="1"/><text x="77.5227%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.2727%" y="405" width="0.0842%" height="15" fill="rgb(237,140,0)" fg:x="918" fg:w="1"/><text x="77.5227%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.2727%" y="389" width="0.0842%" height="15" fill="rgb(243,225,53)" fg:x="918" fg:w="1"/><text x="77.5227%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.2727%" y="373" width="0.0842%" height="15" fill="rgb(240,140,30)" fg:x="918" fg:w="1"/><text x="77.5227%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::new_from_entity (1 samples, 0.08%)</title><rect x="77.3569%" y="517" width="0.0842%" height="15" fill="rgb(217,51,16)" fg:x="919" fg:w="1"/><text x="77.6069%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3569%" y="501" width="0.0842%" height="15" fill="rgb(245,75,50)" fg:x="919" fg:w="1"/><text x="77.6069%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4411%" y="485" width="0.0842%" height="15" fill="rgb(208,174,22)" fg:x="920" fg:w="1"/><text x="77.6911%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4411%" y="469" width="0.0842%" height="15" fill="rgb(219,98,50)" fg:x="920" fg:w="1"/><text x="77.6911%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="77.4411%" y="453" width="0.0842%" height="15" fill="rgb(243,138,3)" fg:x="920" fg:w="1"/><text x="77.6911%" y="463.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="77.5253%" y="485" width="0.0842%" height="15" fill="rgb(243,132,26)" fg:x="921" fg:w="1"/><text x="77.7753%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.5253%" y="469" width="0.0842%" height="15" fill="rgb(250,201,8)" fg:x="921" fg:w="1"/><text x="77.7753%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.5253%" y="453" width="0.0842%" height="15" fill="rgb(213,91,26)" fg:x="921" fg:w="1"/><text x="77.7753%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="77.5253%" y="437" width="0.0842%" height="15" fill="rgb(229,117,1)" fg:x="921" fg:w="1"/><text x="77.7753%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="77.6094%" y="469" width="0.0842%" height="15" fill="rgb(229,24,6)" fg:x="922" fg:w="1"/><text x="77.8594%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="77.6094%" y="485" width="0.1684%" height="15" fill="rgb(206,69,11)" fg:x="922" fg:w="2"/><text x="77.8594%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="77.6936%" y="469" width="0.0842%" height="15" fill="rgb(234,111,34)" fg:x="923" fg:w="1"/><text x="77.9436%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.6936%" y="453" width="0.0842%" height="15" fill="rgb(213,187,51)" fg:x="923" fg:w="1"/><text x="77.9436%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6936%" y="437" width="0.0842%" height="15" fill="rgb(207,45,11)" fg:x="923" fg:w="1"/><text x="77.9436%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.6936%" y="421" width="0.0842%" height="15" fill="rgb(225,151,47)" fg:x="923" fg:w="1"/><text x="77.9436%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6936%" y="405" width="0.0842%" height="15" fill="rgb(211,226,5)" fg:x="923" fg:w="1"/><text x="77.9436%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.6936%" y="389" width="0.0842%" height="15" fill="rgb(214,83,52)" fg:x="923" fg:w="1"/><text x="77.9436%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.6936%" y="373" width="0.0842%" height="15" fill="rgb(229,49,53)" fg:x="923" fg:w="1"/><text x="77.9436%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.6936%" y="357" width="0.0842%" height="15" fill="rgb(246,8,28)" fg:x="923" fg:w="1"/><text x="77.9436%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6936%" y="341" width="0.0842%" height="15" fill="rgb(207,28,41)" fg:x="923" fg:w="1"/><text x="77.9436%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.76%)</title><rect x="77.1044%" y="549" width="0.7576%" height="15" fill="rgb(254,22,25)" fg:x="916" fg:w="9"/><text x="77.3544%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.59%)</title><rect x="77.2727%" y="533" width="0.5892%" height="15" fill="rgb(209,120,42)" fg:x="918" fg:w="7"/><text x="77.5227%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.42%)</title><rect x="77.4411%" y="517" width="0.4209%" height="15" fill="rgb(216,194,18)" fg:x="920" fg:w="5"/><text x="77.6911%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.42%)</title><rect x="77.4411%" y="501" width="0.4209%" height="15" fill="rgb(213,70,17)" fg:x="920" fg:w="5"/><text x="77.6911%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="77.7778%" y="485" width="0.0842%" height="15" fill="rgb(228,66,19)" fg:x="924" fg:w="1"/><text x="78.0278%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (13 samples, 1.09%)</title><rect x="76.9360%" y="565" width="1.0943%" height="15" fill="rgb(236,221,54)" fg:x="914" fg:w="13"/><text x="77.1860%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="77.8620%" y="549" width="0.1684%" height="15" fill="rgb(207,175,15)" fg:x="925" fg:w="2"/><text x="78.1120%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="77.8620%" y="533" width="0.1684%" height="15" fill="rgb(234,76,8)" fg:x="925" fg:w="2"/><text x="78.1120%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.9461%" y="517" width="0.0842%" height="15" fill="rgb(243,106,0)" fg:x="926" fg:w="1"/><text x="78.1961%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="78.0303%" y="533" width="0.0842%" height="15" fill="rgb(208,48,19)" fg:x="927" fg:w="1"/><text x="78.2803%" y="543.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (3 samples, 0.25%)</title><rect x="78.0303%" y="565" width="0.2525%" height="15" fill="rgb(251,50,29)" fg:x="927" fg:w="3"/><text x="78.2803%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (3 samples, 0.25%)</title><rect x="78.0303%" y="549" width="0.2525%" height="15" fill="rgb(222,31,49)" fg:x="927" fg:w="3"/><text x="78.2803%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.17%)</title><rect x="78.1145%" y="533" width="0.1684%" height="15" fill="rgb(232,33,18)" fg:x="928" fg:w="2"/><text x="78.3645%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="78.1987%" y="517" width="0.0842%" height="15" fill="rgb(209,1,44)" fg:x="929" fg:w="1"/><text x="78.4487%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.1987%" y="501" width="0.0842%" height="15" fill="rgb(211,7,1)" fg:x="929" fg:w="1"/><text x="78.4487%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="78.2828%" y="533" width="0.0842%" height="15" fill="rgb(224,111,27)" fg:x="930" fg:w="1"/><text x="78.5328%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="78.2828%" y="517" width="0.0842%" height="15" fill="rgb(252,195,39)" fg:x="930" fg:w="1"/><text x="78.5328%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.2828%" y="501" width="0.0842%" height="15" fill="rgb(237,198,5)" fg:x="930" fg:w="1"/><text x="78.5328%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.3670%" y="501" width="0.0842%" height="15" fill="rgb(232,148,1)" fg:x="931" fg:w="1"/><text x="78.6170%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="78.3670%" y="485" width="0.0842%" height="15" fill="rgb(249,41,3)" fg:x="931" fg:w="1"/><text x="78.6170%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="78.4512%" y="485" width="0.1684%" height="15" fill="rgb(215,14,33)" fg:x="932" fg:w="2"/><text x="78.7012%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.5354%" y="469" width="0.0842%" height="15" fill="rgb(209,146,24)" fg:x="933" fg:w="1"/><text x="78.7854%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.5354%" y="453" width="0.0842%" height="15" fill="rgb(219,51,47)" fg:x="933" fg:w="1"/><text x="78.7854%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.5354%" y="437" width="0.0842%" height="15" fill="rgb(234,217,40)" fg:x="933" fg:w="1"/><text x="78.7854%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5354%" y="421" width="0.0842%" height="15" fill="rgb(228,34,26)" fg:x="933" fg:w="1"/><text x="78.7854%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5354%" y="405" width="0.0842%" height="15" fill="rgb(224,50,29)" fg:x="933" fg:w="1"/><text x="78.7854%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.5354%" y="389" width="0.0842%" height="15" fill="rgb(205,79,51)" fg:x="933" fg:w="1"/><text x="78.7854%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.5354%" y="373" width="0.0842%" height="15" fill="rgb(218,136,28)" fg:x="933" fg:w="1"/><text x="78.7854%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.5354%" y="357" width="0.0842%" height="15" fill="rgb(220,150,10)" fg:x="933" fg:w="1"/><text x="78.7854%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5354%" y="341" width="0.0842%" height="15" fill="rgb(242,158,47)" fg:x="933" fg:w="1"/><text x="78.7854%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5354%" y="325" width="0.0842%" height="15" fill="rgb(209,68,0)" fg:x="933" fg:w="1"/><text x="78.7854%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.5354%" y="309" width="0.0842%" height="15" fill="rgb(208,13,41)" fg:x="933" fg:w="1"/><text x="78.7854%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.5354%" y="293" width="0.0842%" height="15" fill="rgb(226,201,7)" fg:x="933" fg:w="1"/><text x="78.7854%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.5354%" y="277" width="0.0842%" height="15" fill="rgb(236,103,26)" fg:x="933" fg:w="1"/><text x="78.7854%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.5354%" y="261" width="0.0842%" height="15" fill="rgb(243,162,8)" fg:x="933" fg:w="1"/><text x="78.7854%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.5354%" y="245" width="0.0842%" height="15" fill="rgb(237,225,11)" fg:x="933" fg:w="1"/><text x="78.7854%" y="255.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.34%)</title><rect x="78.3670%" y="533" width="0.3367%" height="15" fill="rgb(247,186,32)" fg:x="931" fg:w="4"/><text x="78.6170%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.34%)</title><rect x="78.3670%" y="517" width="0.3367%" height="15" fill="rgb(215,26,28)" fg:x="931" fg:w="4"/><text x="78.6170%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.25%)</title><rect x="78.4512%" y="501" width="0.2525%" height="15" fill="rgb(208,121,6)" fg:x="932" fg:w="3"/><text x="78.7012%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6195%" y="485" width="0.0842%" height="15" fill="rgb(225,91,3)" fg:x="934" fg:w="1"/><text x="78.8695%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="78.7037%" y="533" width="0.0842%" height="15" fill="rgb(246,119,36)" fg:x="935" fg:w="1"/><text x="78.9537%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7037%" y="517" width="0.0842%" height="15" fill="rgb(254,173,2)" fg:x="935" fg:w="1"/><text x="78.9537%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.7037%" y="501" width="0.0842%" height="15" fill="rgb(209,87,54)" fg:x="935" fg:w="1"/><text x="78.9537%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.7037%" y="485" width="0.0842%" height="15" fill="rgb(223,216,20)" fg:x="935" fg:w="1"/><text x="78.9537%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7037%" y="469" width="0.0842%" height="15" fill="rgb(220,31,8)" fg:x="935" fg:w="1"/><text x="78.9537%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="78.7037%" y="453" width="0.0842%" height="15" fill="rgb(220,185,15)" fg:x="935" fg:w="1"/><text x="78.9537%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.17%)</title><rect x="78.7879%" y="485" width="0.1684%" height="15" fill="rgb(247,190,50)" fg:x="936" fg:w="2"/><text x="79.0379%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="78.7879%" y="469" width="0.1684%" height="15" fill="rgb(239,173,47)" fg:x="936" fg:w="2"/><text x="79.0379%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="78.7879%" y="453" width="0.1684%" height="15" fill="rgb(218,190,42)" fg:x="936" fg:w="2"/><text x="79.0379%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="78.7879%" y="437" width="0.1684%" height="15" fill="rgb(251,207,16)" fg:x="936" fg:w="2"/><text x="79.0379%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.8721%" y="421" width="0.0842%" height="15" fill="rgb(222,199,47)" fg:x="937" fg:w="1"/><text x="79.1221%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8721%" y="405" width="0.0842%" height="15" fill="rgb(245,190,7)" fg:x="937" fg:w="1"/><text x="79.1221%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.8721%" y="389" width="0.0842%" height="15" fill="rgb(239,85,38)" fg:x="937" fg:w="1"/><text x="79.1221%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8721%" y="373" width="0.0842%" height="15" fill="rgb(229,69,51)" fg:x="937" fg:w="1"/><text x="79.1221%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.8721%" y="357" width="0.0842%" height="15" fill="rgb(231,104,51)" fg:x="937" fg:w="1"/><text x="79.1221%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8721%" y="341" width="0.0842%" height="15" fill="rgb(235,49,4)" fg:x="937" fg:w="1"/><text x="79.1221%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.25%)</title><rect x="78.7879%" y="533" width="0.2525%" height="15" fill="rgb(246,166,20)" fg:x="936" fg:w="3"/><text x="79.0379%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.25%)</title><rect x="78.7879%" y="517" width="0.2525%" height="15" fill="rgb(230,119,37)" fg:x="936" fg:w="3"/><text x="79.0379%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.25%)</title><rect x="78.7879%" y="501" width="0.2525%" height="15" fill="rgb(234,77,34)" fg:x="936" fg:w="3"/><text x="79.0379%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.9562%" y="485" width="0.0842%" height="15" fill="rgb(211,222,33)" fg:x="938" fg:w="1"/><text x="79.2062%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="78.9562%" y="469" width="0.0842%" height="15" fill="rgb(226,45,42)" fg:x="938" fg:w="1"/><text x="79.2062%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9562%" y="453" width="0.0842%" height="15" fill="rgb(215,174,28)" fg:x="938" fg:w="1"/><text x="79.2062%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9562%" y="437" width="0.0842%" height="15" fill="rgb(254,173,49)" fg:x="938" fg:w="1"/><text x="79.2062%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9562%" y="421" width="0.0842%" height="15" fill="rgb(229,191,6)" fg:x="938" fg:w="1"/><text x="79.2062%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9562%" y="405" width="0.0842%" height="15" fill="rgb(212,145,22)" fg:x="938" fg:w="1"/><text x="79.2062%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9562%" y="389" width="0.0842%" height="15" fill="rgb(226,6,51)" fg:x="938" fg:w="1"/><text x="79.2062%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.9562%" y="373" width="0.0842%" height="15" fill="rgb(227,128,8)" fg:x="938" fg:w="1"/><text x="79.2062%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.9562%" y="357" width="0.0842%" height="15" fill="rgb(205,24,10)" fg:x="938" fg:w="1"/><text x="79.2062%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.9562%" y="341" width="0.0842%" height="15" fill="rgb(217,147,27)" fg:x="938" fg:w="1"/><text x="79.2062%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.9562%" y="325" width="0.0842%" height="15" fill="rgb(250,82,42)" fg:x="938" fg:w="1"/><text x="79.2062%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.9562%" y="309" width="0.0842%" height="15" fill="rgb(248,93,17)" fg:x="938" fg:w="1"/><text x="79.2062%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.9562%" y="293" width="0.0842%" height="15" fill="rgb(254,212,40)" fg:x="938" fg:w="1"/><text x="79.2062%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.9562%" y="277" width="0.0842%" height="15" fill="rgb(229,209,2)" fg:x="938" fg:w="1"/><text x="79.2062%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.9562%" y="261" width="0.0842%" height="15" fill="rgb(211,50,43)" fg:x="938" fg:w="1"/><text x="79.2062%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.9562%" y="245" width="0.0842%" height="15" fill="rgb(245,196,29)" fg:x="938" fg:w="1"/><text x="79.2062%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.9562%" y="229" width="0.0842%" height="15" fill="rgb(216,132,13)" fg:x="938" fg:w="1"/><text x="79.2062%" y="239.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (10 samples, 0.84%)</title><rect x="78.2828%" y="565" width="0.8418%" height="15" fill="rgb(251,108,21)" fg:x="930" fg:w="10"/><text x="78.5328%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (10 samples, 0.84%)</title><rect x="78.2828%" y="549" width="0.8418%" height="15" fill="rgb(229,174,54)" fg:x="930" fg:w="10"/><text x="78.5328%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="79.0404%" y="533" width="0.0842%" height="15" fill="rgb(211,175,47)" fg:x="939" fg:w="1"/><text x="79.2904%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="79.0404%" y="517" width="0.0842%" height="15" fill="rgb(234,5,37)" fg:x="939" fg:w="1"/><text x="79.2904%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="79.1246%" y="549" width="0.0842%" height="15" fill="rgb(244,150,43)" fg:x="940" fg:w="1"/><text x="79.3746%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1246%" y="533" width="0.0842%" height="15" fill="rgb(242,172,38)" fg:x="940" fg:w="1"/><text x="79.3746%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.17%)</title><rect x="79.2088%" y="549" width="0.1684%" height="15" fill="rgb(205,27,8)" fg:x="941" fg:w="2"/><text x="79.4588%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.17%)</title><rect x="79.2088%" y="533" width="0.1684%" height="15" fill="rgb(217,57,3)" fg:x="941" fg:w="2"/><text x="79.4588%" y="543.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (2 samples, 0.17%)</title><rect x="79.2088%" y="517" width="0.1684%" height="15" fill="rgb(242,21,38)" fg:x="941" fg:w="2"/><text x="79.4588%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="79.2088%" y="501" width="0.1684%" height="15" fill="rgb(209,64,43)" fg:x="941" fg:w="2"/><text x="79.4588%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.2929%" y="485" width="0.0842%" height="15" fill="rgb(222,2,46)" fg:x="942" fg:w="1"/><text x="79.5429%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="79.3771%" y="549" width="0.0842%" height="15" fill="rgb(218,19,44)" fg:x="943" fg:w="1"/><text x="79.6271%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.4613%" y="469" width="0.0842%" height="15" fill="rgb(240,203,42)" fg:x="944" fg:w="1"/><text x="79.7113%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="79.4613%" y="453" width="0.0842%" height="15" fill="rgb(229,23,45)" fg:x="944" fg:w="1"/><text x="79.7113%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4613%" y="437" width="0.0842%" height="15" fill="rgb(205,228,51)" fg:x="944" fg:w="1"/><text x="79.7113%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.17%)</title><rect x="79.4613%" y="549" width="0.1684%" height="15" fill="rgb(239,36,20)" fg:x="944" fg:w="2"/><text x="79.7113%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="79.4613%" y="533" width="0.1684%" height="15" fill="rgb(248,172,27)" fg:x="944" fg:w="2"/><text x="79.7113%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="79.4613%" y="517" width="0.1684%" height="15" fill="rgb(244,55,32)" fg:x="944" fg:w="2"/><text x="79.7113%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.17%)</title><rect x="79.4613%" y="501" width="0.1684%" height="15" fill="rgb(215,97,16)" fg:x="944" fg:w="2"/><text x="79.7113%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="79.4613%" y="485" width="0.1684%" height="15" fill="rgb(224,80,29)" fg:x="944" fg:w="2"/><text x="79.7113%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.5455%" y="469" width="0.0842%" height="15" fill="rgb(216,93,47)" fg:x="945" fg:w="1"/><text x="79.7955%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="79.5455%" y="453" width="0.0842%" height="15" fill="rgb(238,159,10)" fg:x="945" fg:w="1"/><text x="79.7955%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.5455%" y="437" width="0.0842%" height="15" fill="rgb(223,98,29)" fg:x="945" fg:w="1"/><text x="79.7955%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.5455%" y="421" width="0.0842%" height="15" fill="rgb(210,176,23)" fg:x="945" fg:w="1"/><text x="79.7955%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.5455%" y="405" width="0.0842%" height="15" fill="rgb(242,162,27)" fg:x="945" fg:w="1"/><text x="79.7955%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.5455%" y="389" width="0.0842%" height="15" fill="rgb(245,109,32)" fg:x="945" fg:w="1"/><text x="79.7955%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.5455%" y="373" width="0.0842%" height="15" fill="rgb(248,87,8)" fg:x="945" fg:w="1"/><text x="79.7955%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.5455%" y="357" width="0.0842%" height="15" fill="rgb(250,160,50)" fg:x="945" fg:w="1"/><text x="79.7955%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.5455%" y="341" width="0.0842%" height="15" fill="rgb(246,165,25)" fg:x="945" fg:w="1"/><text x="79.7955%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.5455%" y="325" width="0.0842%" height="15" fill="rgb(249,219,3)" fg:x="945" fg:w="1"/><text x="79.7955%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.5455%" y="309" width="0.0842%" height="15" fill="rgb(226,66,5)" fg:x="945" fg:w="1"/><text x="79.7955%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.5455%" y="293" width="0.0842%" height="15" fill="rgb(250,220,43)" fg:x="945" fg:w="1"/><text x="79.7955%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.5455%" y="277" width="0.0842%" height="15" fill="rgb(225,111,31)" fg:x="945" fg:w="1"/><text x="79.7955%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.5455%" y="261" width="0.0842%" height="15" fill="rgb(248,106,18)" fg:x="945" fg:w="1"/><text x="79.7955%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.5455%" y="245" width="0.0842%" height="15" fill="rgb(220,226,45)" fg:x="945" fg:w="1"/><text x="79.7955%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.5455%" y="229" width="0.0842%" height="15" fill="rgb(208,58,53)" fg:x="945" fg:w="1"/><text x="79.7955%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.6296%" y="485" width="0.0842%" height="15" fill="rgb(209,133,1)" fg:x="946" fg:w="1"/><text x="79.8796%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.6296%" y="469" width="0.0842%" height="15" fill="rgb(228,216,27)" fg:x="946" fg:w="1"/><text x="79.8796%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.6296%" y="453" width="0.0842%" height="15" fill="rgb(238,155,2)" fg:x="946" fg:w="1"/><text x="79.8796%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.6296%" y="437" width="0.0842%" height="15" fill="rgb(244,99,37)" fg:x="946" fg:w="1"/><text x="79.8796%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.7138%" y="485" width="0.0842%" height="15" fill="rgb(254,32,3)" fg:x="947" fg:w="1"/><text x="79.9638%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="79.7138%" y="469" width="0.0842%" height="15" fill="rgb(234,46,50)" fg:x="947" fg:w="1"/><text x="79.9638%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="79.7138%" y="453" width="0.0842%" height="15" fill="rgb(232,118,51)" fg:x="947" fg:w="1"/><text x="79.9638%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.7138%" y="437" width="0.0842%" height="15" fill="rgb(207,24,32)" fg:x="947" fg:w="1"/><text x="79.9638%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="79.8822%" y="421" width="0.1684%" height="15" fill="rgb(208,107,43)" fg:x="949" fg:w="2"/><text x="80.1322%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="79.8822%" y="405" width="0.1684%" height="15" fill="rgb(231,28,9)" fg:x="949" fg:w="2"/><text x="80.1322%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="79.8822%" y="437" width="0.2525%" height="15" fill="rgb(241,204,15)" fg:x="949" fg:w="3"/><text x="80.1322%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.0505%" y="421" width="0.0842%" height="15" fill="rgb(214,54,15)" fg:x="951" fg:w="1"/><text x="80.3005%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0505%" y="405" width="0.0842%" height="15" fill="rgb(230,12,28)" fg:x="951" fg:w="1"/><text x="80.3005%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.1347%" y="421" width="0.0842%" height="15" fill="rgb(221,171,5)" fg:x="952" fg:w="1"/><text x="80.3847%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.1347%" y="405" width="0.0842%" height="15" fill="rgb(207,72,25)" fg:x="952" fg:w="1"/><text x="80.3847%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.2189%" y="405" width="0.0842%" height="15" fill="rgb(249,79,37)" fg:x="953" fg:w="1"/><text x="80.4689%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="80.3030%" y="405" width="0.1684%" height="15" fill="rgb(209,98,49)" fg:x="954" fg:w="2"/><text x="80.5530%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="80.3030%" y="389" width="0.1684%" height="15" fill="rgb(221,62,13)" fg:x="954" fg:w="2"/><text x="80.5530%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="80.3030%" y="373" width="0.1684%" height="15" fill="rgb(223,39,6)" fg:x="954" fg:w="2"/><text x="80.5530%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="80.3030%" y="357" width="0.1684%" height="15" fill="rgb(246,163,20)" fg:x="954" fg:w="2"/><text x="80.5530%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.3872%" y="341" width="0.0842%" height="15" fill="rgb(211,111,29)" fg:x="955" fg:w="1"/><text x="80.6372%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.3872%" y="325" width="0.0842%" height="15" fill="rgb(243,118,5)" fg:x="955" fg:w="1"/><text x="80.6372%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.3872%" y="309" width="0.0842%" height="15" fill="rgb(240,144,52)" fg:x="955" fg:w="1"/><text x="80.6372%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="80.4714%" y="389" width="0.1684%" height="15" fill="rgb(244,158,36)" fg:x="956" fg:w="2"/><text x="80.7214%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="80.6397%" y="341" width="0.1684%" height="15" fill="rgb(241,109,37)" fg:x="958" fg:w="2"/><text x="80.8897%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7239%" y="325" width="0.0842%" height="15" fill="rgb(213,95,32)" fg:x="959" fg:w="1"/><text x="80.9739%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7239%" y="309" width="0.0842%" height="15" fill="rgb(252,193,9)" fg:x="959" fg:w="1"/><text x="80.9739%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="80.6397%" y="389" width="0.2525%" height="15" fill="rgb(225,213,21)" fg:x="958" fg:w="3"/><text x="80.8897%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="80.6397%" y="373" width="0.2525%" height="15" fill="rgb(220,172,46)" fg:x="958" fg:w="3"/><text x="80.8897%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="80.6397%" y="357" width="0.2525%" height="15" fill="rgb(235,75,41)" fg:x="958" fg:w="3"/><text x="80.8897%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8081%" y="341" width="0.0842%" height="15" fill="rgb(213,86,9)" fg:x="960" fg:w="1"/><text x="81.0581%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8081%" y="325" width="0.0842%" height="15" fill="rgb(238,127,51)" fg:x="960" fg:w="1"/><text x="81.0581%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8081%" y="309" width="0.0842%" height="15" fill="rgb(215,2,54)" fg:x="960" fg:w="1"/><text x="81.0581%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8081%" y="293" width="0.0842%" height="15" fill="rgb(245,80,6)" fg:x="960" fg:w="1"/><text x="81.0581%" y="303.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="80.8923%" y="373" width="0.0842%" height="15" fill="rgb(233,106,42)" fg:x="961" fg:w="1"/><text x="81.1423%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.9764%" y="373" width="0.0842%" height="15" fill="rgb(244,86,38)" fg:x="962" fg:w="1"/><text x="81.2264%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9764%" y="357" width="0.0842%" height="15" fill="rgb(242,167,7)" fg:x="962" fg:w="1"/><text x="81.2264%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9764%" y="341" width="0.0842%" height="15" fill="rgb(218,216,3)" fg:x="962" fg:w="1"/><text x="81.2264%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.67%)</title><rect x="80.4714%" y="405" width="0.6734%" height="15" fill="rgb(206,136,36)" fg:x="956" fg:w="8"/><text x="80.7214%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="80.8923%" y="389" width="0.2525%" height="15" fill="rgb(206,206,15)" fg:x="961" fg:w="3"/><text x="81.1423%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0606%" y="373" width="0.0842%" height="15" fill="rgb(207,163,34)" fg:x="963" fg:w="1"/><text x="81.3106%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.0606%" y="357" width="0.0842%" height="15" fill="rgb(240,127,22)" fg:x="963" fg:w="1"/><text x="81.3106%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.09%)</title><rect x="80.1347%" y="437" width="1.0943%" height="15" fill="rgb(227,49,5)" fg:x="952" fg:w="13"/><text x="80.3847%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 1.01%)</title><rect x="80.2189%" y="421" width="1.0101%" height="15" fill="rgb(231,8,6)" fg:x="953" fg:w="12"/><text x="80.4689%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.1448%" y="405" width="0.0842%" height="15" fill="rgb(223,21,24)" fg:x="964" fg:w="1"/><text x="81.3948%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.1448%" y="389" width="0.0842%" height="15" fill="rgb(244,44,52)" fg:x="964" fg:w="1"/><text x="81.3948%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.1448%" y="373" width="0.0842%" height="15" fill="rgb(207,73,28)" fg:x="964" fg:w="1"/><text x="81.3948%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.1448%" y="357" width="0.0842%" height="15" fill="rgb(234,215,10)" fg:x="964" fg:w="1"/><text x="81.3948%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.1448%" y="341" width="0.0842%" height="15" fill="rgb(236,85,3)" fg:x="964" fg:w="1"/><text x="81.3948%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.1448%" y="325" width="0.0842%" height="15" fill="rgb(236,102,39)" fg:x="964" fg:w="1"/><text x="81.3948%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="81.3973%" y="373" width="0.0842%" height="15" fill="rgb(243,50,8)" fg:x="967" fg:w="1"/><text x="81.6473%" y="383.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.17%)</title><rect x="81.3973%" y="389" width="0.1684%" height="15" fill="rgb(207,111,4)" fg:x="967" fg:w="2"/><text x="81.6473%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.4815%" y="373" width="0.0842%" height="15" fill="rgb(230,52,42)" fg:x="968" fg:w="1"/><text x="81.7315%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4815%" y="357" width="0.0842%" height="15" fill="rgb(252,178,50)" fg:x="968" fg:w="1"/><text x="81.7315%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5657%" y="389" width="0.0842%" height="15" fill="rgb(234,46,35)" fg:x="969" fg:w="1"/><text x="81.8157%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.5657%" y="373" width="0.0842%" height="15" fill="rgb(228,69,37)" fg:x="969" fg:w="1"/><text x="81.8157%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5657%" y="357" width="0.0842%" height="15" fill="rgb(221,21,11)" fg:x="969" fg:w="1"/><text x="81.8157%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6498%" y="389" width="0.0842%" height="15" fill="rgb(223,56,9)" fg:x="970" fg:w="1"/><text x="81.8998%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.6498%" y="373" width="0.0842%" height="15" fill="rgb(234,30,19)" fg:x="970" fg:w="1"/><text x="81.8998%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8182%" y="341" width="0.0842%" height="15" fill="rgb(211,64,54)" fg:x="972" fg:w="1"/><text x="82.0682%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.9865%" y="277" width="0.0842%" height="15" fill="rgb(250,189,5)" fg:x="974" fg:w="1"/><text x="82.2365%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.9865%" y="261" width="0.0842%" height="15" fill="rgb(214,180,13)" fg:x="974" fg:w="1"/><text x="82.2365%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="81.9865%" y="245" width="0.0842%" height="15" fill="rgb(238,40,40)" fg:x="974" fg:w="1"/><text x="82.2365%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="81.9024%" y="341" width="0.2525%" height="15" fill="rgb(214,101,38)" fg:x="973" fg:w="3"/><text x="82.1524%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="81.9024%" y="325" width="0.2525%" height="15" fill="rgb(242,65,53)" fg:x="973" fg:w="3"/><text x="82.1524%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="81.9865%" y="309" width="0.1684%" height="15" fill="rgb(230,22,45)" fg:x="974" fg:w="2"/><text x="82.2365%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="81.9865%" y="293" width="0.1684%" height="15" fill="rgb(223,77,1)" fg:x="974" fg:w="2"/><text x="82.2365%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.0707%" y="277" width="0.0842%" height="15" fill="rgb(227,33,37)" fg:x="975" fg:w="1"/><text x="82.3207%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="82.1549%" y="309" width="0.1684%" height="15" fill="rgb(224,148,39)" fg:x="976" fg:w="2"/><text x="82.4049%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.3232%" y="293" width="0.0842%" height="15" fill="rgb(232,212,39)" fg:x="978" fg:w="1"/><text x="82.5732%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3232%" y="277" width="0.0842%" height="15" fill="rgb(251,172,7)" fg:x="978" fg:w="1"/><text x="82.5732%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.76%)</title><rect x="81.7340%" y="357" width="0.7576%" height="15" fill="rgb(219,39,9)" fg:x="971" fg:w="9"/><text x="81.9840%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.34%)</title><rect x="82.1549%" y="341" width="0.3367%" height="15" fill="rgb(228,118,14)" fg:x="976" fg:w="4"/><text x="82.4049%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.34%)</title><rect x="82.1549%" y="325" width="0.3367%" height="15" fill="rgb(207,140,10)" fg:x="976" fg:w="4"/><text x="82.4049%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="82.3232%" y="309" width="0.1684%" height="15" fill="rgb(227,111,53)" fg:x="978" fg:w="2"/><text x="82.5732%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4074%" y="293" width="0.0842%" height="15" fill="rgb(216,165,16)" fg:x="979" fg:w="1"/><text x="82.6574%" y="303.50"></text></g><g><title>engine::session::Session::flush (35 samples, 2.95%)</title><rect x="79.6296%" y="549" width="2.9461%" height="15" fill="rgb(226,111,18)" fg:x="946" fg:w="35"/><text x="79.8796%" y="559.50">en..</text></g><g><title>engine::session::Session::save_changes (35 samples, 2.95%)</title><rect x="79.6296%" y="533" width="2.9461%" height="15" fill="rgb(251,27,17)" fg:x="946" fg:w="35"/><text x="79.8796%" y="543.50">en..</text></g><g><title>engine::session::state::State::close (35 samples, 2.95%)</title><rect x="79.6296%" y="517" width="2.9461%" height="15" fill="rgb(254,69,9)" fg:x="946" fg:w="35"/><text x="79.8796%" y="527.50">en..</text></g><g><title>engine::session::state::State::flush_entities (35 samples, 2.95%)</title><rect x="79.6296%" y="501" width="2.9461%" height="15" fill="rgb(234,140,37)" fg:x="946" fg:w="35"/><text x="79.8796%" y="511.50">en..</text></g><g><title>core::iter::adapters::try_process (33 samples, 2.78%)</title><rect x="79.7980%" y="485" width="2.7778%" height="15" fill="rgb(220,93,8)" fg:x="948" fg:w="33"/><text x="80.0480%" y="495.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 2.78%)</title><rect x="79.7980%" y="469" width="2.7778%" height="15" fill="rgb(236,113,3)" fg:x="948" fg:w="33"/><text x="80.0480%" y="479.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (33 samples, 2.78%)</title><rect x="79.7980%" y="453" width="2.7778%" height="15" fill="rgb(234,108,23)" fg:x="948" fg:w="33"/><text x="80.0480%" y="463.50">en..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.35%)</title><rect x="81.2290%" y="437" width="1.3468%" height="15" fill="rgb(205,114,34)" fg:x="965" fg:w="16"/><text x="81.4790%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.35%)</title><rect x="81.2290%" y="421" width="1.3468%" height="15" fill="rgb(236,200,45)" fg:x="965" fg:w="16"/><text x="81.4790%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.26%)</title><rect x="81.3131%" y="405" width="1.2626%" height="15" fill="rgb(227,194,29)" fg:x="966" fg:w="15"/><text x="81.5631%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.84%)</title><rect x="81.7340%" y="389" width="0.8418%" height="15" fill="rgb(250,76,42)" fg:x="971" fg:w="10"/><text x="81.9840%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.84%)</title><rect x="81.7340%" y="373" width="0.8418%" height="15" fill="rgb(208,128,8)" fg:x="971" fg:w="10"/><text x="81.9840%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.4916%" y="357" width="0.0842%" height="15" fill="rgb(229,209,35)" fg:x="980" fg:w="1"/><text x="82.7416%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4916%" y="341" width="0.0842%" height="15" fill="rgb(215,39,53)" fg:x="980" fg:w="1"/><text x="82.7416%" y="351.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="82.5758%" y="549" width="0.0842%" height="15" fill="rgb(219,123,41)" fg:x="981" fg:w="1"/><text x="82.8258%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="82.5758%" y="533" width="0.0842%" height="15" fill="rgb(212,158,18)" fg:x="981" fg:w="1"/><text x="82.8258%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="82.5758%" y="517" width="0.0842%" height="15" fill="rgb(234,196,53)" fg:x="981" fg:w="1"/><text x="82.8258%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.5758%" y="501" width="0.0842%" height="15" fill="rgb(210,139,12)" fg:x="981" fg:w="1"/><text x="82.8258%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.5758%" y="485" width="0.0842%" height="15" fill="rgb(220,116,54)" fg:x="981" fg:w="1"/><text x="82.8258%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.5758%" y="469" width="0.0842%" height="15" fill="rgb(247,103,28)" fg:x="981" fg:w="1"/><text x="82.8258%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.5758%" y="453" width="0.0842%" height="15" fill="rgb(253,156,45)" fg:x="981" fg:w="1"/><text x="82.8258%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="82.5758%" y="437" width="0.0842%" height="15" fill="rgb(237,157,52)" fg:x="981" fg:w="1"/><text x="82.8258%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="82.5758%" y="421" width="0.0842%" height="15" fill="rgb(253,112,16)" fg:x="981" fg:w="1"/><text x="82.8258%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.5758%" y="405" width="0.0842%" height="15" fill="rgb(234,70,18)" fg:x="981" fg:w="1"/><text x="82.8258%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6599%" y="533" width="0.0842%" height="15" fill="rgb(247,138,19)" fg:x="982" fg:w="1"/><text x="82.9099%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="82.8283%" y="517" width="0.0842%" height="15" fill="rgb(207,171,1)" fg:x="984" fg:w="1"/><text x="83.0783%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8283%" y="501" width="0.0842%" height="15" fill="rgb(239,213,3)" fg:x="984" fg:w="1"/><text x="83.0783%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8283%" y="485" width="0.0842%" height="15" fill="rgb(226,112,4)" fg:x="984" fg:w="1"/><text x="83.0783%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.8283%" y="469" width="0.0842%" height="15" fill="rgb(252,170,12)" fg:x="984" fg:w="1"/><text x="83.0783%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8283%" y="453" width="0.0842%" height="15" fill="rgb(241,106,13)" fg:x="984" fg:w="1"/><text x="83.0783%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8283%" y="437" width="0.0842%" height="15" fill="rgb(225,73,23)" fg:x="984" fg:w="1"/><text x="83.0783%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8283%" y="421" width="0.0842%" height="15" fill="rgb(251,227,29)" fg:x="984" fg:w="1"/><text x="83.0783%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.17%)</title><rect x="82.9125%" y="517" width="0.1684%" height="15" fill="rgb(237,144,13)" fg:x="985" fg:w="2"/><text x="83.1625%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.17%)</title><rect x="82.9125%" y="501" width="0.1684%" height="15" fill="rgb(232,106,46)" fg:x="985" fg:w="2"/><text x="83.1625%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.17%)</title><rect x="82.9125%" y="485" width="0.1684%" height="15" fill="rgb(245,154,53)" fg:x="985" fg:w="2"/><text x="83.1625%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.9966%" y="469" width="0.0842%" height="15" fill="rgb(212,119,47)" fg:x="986" fg:w="1"/><text x="83.2466%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.9966%" y="453" width="0.0842%" height="15" fill="rgb(253,135,25)" fg:x="986" fg:w="1"/><text x="83.2466%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.9966%" y="437" width="0.0842%" height="15" fill="rgb(253,208,39)" fg:x="986" fg:w="1"/><text x="83.2466%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.17%)</title><rect x="83.0808%" y="469" width="0.1684%" height="15" fill="rgb(226,64,12)" fg:x="987" fg:w="2"/><text x="83.3308%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="83.0808%" y="453" width="0.1684%" height="15" fill="rgb(214,162,37)" fg:x="987" fg:w="2"/><text x="83.3308%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="83.0808%" y="437" width="0.1684%" height="15" fill="rgb(250,104,5)" fg:x="987" fg:w="2"/><text x="83.3308%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.1650%" y="421" width="0.0842%" height="15" fill="rgb(220,202,50)" fg:x="988" fg:w="1"/><text x="83.4150%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1650%" y="405" width="0.0842%" height="15" fill="rgb(248,67,38)" fg:x="988" fg:w="1"/><text x="83.4150%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.1650%" y="389" width="0.0842%" height="15" fill="rgb(242,94,35)" fg:x="988" fg:w="1"/><text x="83.4150%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1650%" y="373" width="0.0842%" height="15" fill="rgb(209,78,37)" fg:x="988" fg:w="1"/><text x="83.4150%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="83.2492%" y="469" width="0.0842%" height="15" fill="rgb(230,126,47)" fg:x="989" fg:w="1"/><text x="83.4992%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="83.2492%" y="453" width="0.0842%" height="15" fill="rgb(222,110,35)" fg:x="989" fg:w="1"/><text x="83.4992%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.34%)</title><rect x="83.0808%" y="501" width="0.3367%" height="15" fill="rgb(233,154,20)" fg:x="987" fg:w="4"/><text x="83.3308%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.34%)</title><rect x="83.0808%" y="485" width="0.3367%" height="15" fill="rgb(223,53,50)" fg:x="987" fg:w="4"/><text x="83.3308%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.3333%" y="469" width="0.0842%" height="15" fill="rgb(251,27,26)" fg:x="990" fg:w="1"/><text x="83.5833%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3333%" y="453" width="0.0842%" height="15" fill="rgb(223,189,16)" fg:x="990" fg:w="1"/><text x="83.5833%" y="463.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="83.4175%" y="501" width="0.0842%" height="15" fill="rgb(207,5,54)" fg:x="991" fg:w="1"/><text x="83.6675%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4175%" y="485" width="0.0842%" height="15" fill="rgb(254,124,50)" fg:x="991" fg:w="1"/><text x="83.6675%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="83.5859%" y="469" width="0.0842%" height="15" fill="rgb(253,193,24)" fg:x="993" fg:w="1"/><text x="83.8359%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6700%" y="469" width="0.0842%" height="15" fill="rgb(235,170,24)" fg:x="994" fg:w="1"/><text x="83.9200%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.09%)</title><rect x="82.7441%" y="533" width="1.0943%" height="15" fill="rgb(222,212,52)" fg:x="983" fg:w="13"/><text x="82.9941%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.76%)</title><rect x="83.0808%" y="517" width="0.7576%" height="15" fill="rgb(223,17,45)" fg:x="987" fg:w="9"/><text x="83.3308%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.34%)</title><rect x="83.5017%" y="501" width="0.3367%" height="15" fill="rgb(227,103,26)" fg:x="992" fg:w="4"/><text x="83.7517%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="83.5859%" y="485" width="0.2525%" height="15" fill="rgb(251,151,25)" fg:x="993" fg:w="3"/><text x="83.8359%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.7542%" y="469" width="0.0842%" height="15" fill="rgb(248,144,29)" fg:x="995" fg:w="1"/><text x="84.0042%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7542%" y="453" width="0.0842%" height="15" fill="rgb(245,97,16)" fg:x="995" fg:w="1"/><text x="84.0042%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8384%" y="485" width="0.0842%" height="15" fill="rgb(220,200,29)" fg:x="996" fg:w="1"/><text x="84.0884%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8384%" y="469" width="0.0842%" height="15" fill="rgb(206,38,29)" fg:x="996" fg:w="1"/><text x="84.0884%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="83.8384%" y="533" width="0.1684%" height="15" fill="rgb(245,19,52)" fg:x="996" fg:w="2"/><text x="84.0884%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="83.8384%" y="517" width="0.1684%" height="15" fill="rgb(205,67,43)" fg:x="996" fg:w="2"/><text x="84.0884%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="83.8384%" y="501" width="0.1684%" height="15" fill="rgb(217,128,23)" fg:x="996" fg:w="2"/><text x="84.0884%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9226%" y="485" width="0.0842%" height="15" fill="rgb(210,109,28)" fg:x="997" fg:w="1"/><text x="84.1726%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0067%" y="517" width="0.0842%" height="15" fill="rgb(233,181,7)" fg:x="998" fg:w="1"/><text x="84.2567%" y="527.50"></text></g><g><title>plugins_core::build::Build::save (18 samples, 1.52%)</title><rect x="82.6599%" y="549" width="1.5152%" height="15" fill="rgb(244,11,22)" fg:x="982" fg:w="18"/><text x="82.9099%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="84.0067%" y="533" width="0.1684%" height="15" fill="rgb(205,124,54)" fg:x="998" fg:w="2"/><text x="84.2567%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0909%" y="517" width="0.0842%" height="15" fill="rgb(218,21,27)" fg:x="999" fg:w="1"/><text x="84.3409%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0909%" y="501" width="0.0842%" height="15" fill="rgb(224,153,33)" fg:x="999" fg:w="1"/><text x="84.3409%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.0909%" y="485" width="0.0842%" height="15" fill="rgb(240,219,28)" fg:x="999" fg:w="1"/><text x="84.3409%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0909%" y="469" width="0.0842%" height="15" fill="rgb(214,80,29)" fg:x="999" fg:w="1"/><text x="84.3409%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0909%" y="453" width="0.0842%" height="15" fill="rgb(247,148,44)" fg:x="999" fg:w="1"/><text x="84.3409%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="84.1751%" y="485" width="0.2525%" height="15" fill="rgb(243,110,30)" fg:x="1000" fg:w="3"/><text x="84.4251%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.25%)</title><rect x="84.1751%" y="469" width="0.2525%" height="15" fill="rgb(243,173,41)" fg:x="1000" fg:w="3"/><text x="84.4251%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3434%" y="453" width="0.0842%" height="15" fill="rgb(225,160,47)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3434%" y="437" width="0.0842%" height="15" fill="rgb(215,44,21)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3434%" y="421" width="0.0842%" height="15" fill="rgb(248,90,3)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3434%" y="405" width="0.0842%" height="15" fill="rgb(220,196,49)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3434%" y="389" width="0.0842%" height="15" fill="rgb(217,138,14)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.3434%" y="373" width="0.0842%" height="15" fill="rgb(219,111,20)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.3434%" y="357" width="0.0842%" height="15" fill="rgb(218,114,4)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.3434%" y="341" width="0.0842%" height="15" fill="rgb(238,133,3)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.3434%" y="325" width="0.0842%" height="15" fill="rgb(224,95,0)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.3434%" y="309" width="0.0842%" height="15" fill="rgb(220,169,35)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.3434%" y="293" width="0.0842%" height="15" fill="rgb(242,116,47)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.3434%" y="277" width="0.0842%" height="15" fill="rgb(251,42,20)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.3434%" y="261" width="0.0842%" height="15" fill="rgb(234,7,34)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.3434%" y="245" width="0.0842%" height="15" fill="rgb(243,208,13)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3434%" y="229" width="0.0842%" height="15" fill="rgb(227,33,28)" fg:x="1002" fg:w="1"/><text x="84.5934%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4276%" y="453" width="0.0842%" height="15" fill="rgb(250,47,37)" fg:x="1003" fg:w="1"/><text x="84.6776%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.42%)</title><rect x="84.1751%" y="517" width="0.4209%" height="15" fill="rgb(235,111,52)" fg:x="1000" fg:w="5"/><text x="84.4251%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.42%)</title><rect x="84.1751%" y="501" width="0.4209%" height="15" fill="rgb(223,64,28)" fg:x="1000" fg:w="5"/><text x="84.4251%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.17%)</title><rect x="84.4276%" y="485" width="0.1684%" height="15" fill="rgb(236,67,22)" fg:x="1003" fg:w="2"/><text x="84.6776%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="84.4276%" y="469" width="0.1684%" height="15" fill="rgb(243,79,24)" fg:x="1003" fg:w="2"/><text x="84.6776%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5118%" y="453" width="0.0842%" height="15" fill="rgb(241,225,22)" fg:x="1004" fg:w="1"/><text x="84.7618%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5118%" y="437" width="0.0842%" height="15" fill="rgb(228,214,26)" fg:x="1004" fg:w="1"/><text x="84.7618%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5118%" y="421" width="0.0842%" height="15" fill="rgb(219,84,52)" fg:x="1004" fg:w="1"/><text x="84.7618%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5118%" y="405" width="0.0842%" height="15" fill="rgb(220,12,22)" fg:x="1004" fg:w="1"/><text x="84.7618%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5118%" y="389" width="0.0842%" height="15" fill="rgb(219,9,49)" fg:x="1004" fg:w="1"/><text x="84.7618%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5118%" y="373" width="0.0842%" height="15" fill="rgb(237,40,43)" fg:x="1004" fg:w="1"/><text x="84.7618%" y="383.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (6 samples, 0.51%)</title><rect x="84.1751%" y="549" width="0.5051%" height="15" fill="rgb(212,189,32)" fg:x="1000" fg:w="6"/><text x="84.4251%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.51%)</title><rect x="84.1751%" y="533" width="0.5051%" height="15" fill="rgb(247,48,9)" fg:x="1000" fg:w="6"/><text x="84.4251%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.5960%" y="517" width="0.0842%" height="15" fill="rgb(247,112,3)" fg:x="1005" fg:w="1"/><text x="84.8460%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5960%" y="501" width="0.0842%" height="15" fill="rgb(243,110,18)" fg:x="1005" fg:w="1"/><text x="84.8460%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5960%" y="485" width="0.0842%" height="15" fill="rgb(233,223,44)" fg:x="1005" fg:w="1"/><text x="84.8460%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.5960%" y="469" width="0.0842%" height="15" fill="rgb(245,160,20)" fg:x="1005" fg:w="1"/><text x="84.8460%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5960%" y="453" width="0.0842%" height="15" fill="rgb(225,37,1)" fg:x="1005" fg:w="1"/><text x="84.8460%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5960%" y="437" width="0.0842%" height="15" fill="rgb(253,227,39)" fg:x="1005" fg:w="1"/><text x="84.8460%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="84.6801%" y="485" width="0.0842%" height="15" fill="rgb(240,179,26)" fg:x="1006" fg:w="1"/><text x="84.9301%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.6801%" y="469" width="0.0842%" height="15" fill="rgb(237,212,23)" fg:x="1006" fg:w="1"/><text x="84.9301%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.6801%" y="453" width="0.0842%" height="15" fill="rgb(221,38,11)" fg:x="1006" fg:w="1"/><text x="84.9301%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (3 samples, 0.25%)</title><rect x="84.6801%" y="549" width="0.2525%" height="15" fill="rgb(215,85,6)" fg:x="1006" fg:w="3"/><text x="84.9301%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.25%)</title><rect x="84.6801%" y="533" width="0.2525%" height="15" fill="rgb(239,64,14)" fg:x="1006" fg:w="3"/><text x="84.9301%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.25%)</title><rect x="84.6801%" y="517" width="0.2525%" height="15" fill="rgb(215,150,32)" fg:x="1006" fg:w="3"/><text x="84.9301%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="84.6801%" y="501" width="0.2525%" height="15" fill="rgb(238,15,13)" fg:x="1006" fg:w="3"/><text x="84.9301%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (2 samples, 0.17%)</title><rect x="84.7643%" y="485" width="0.1684%" height="15" fill="rgb(251,87,8)" fg:x="1007" fg:w="2"/><text x="85.0143%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (2 samples, 0.17%)</title><rect x="84.7643%" y="469" width="0.1684%" height="15" fill="rgb(206,86,1)" fg:x="1007" fg:w="2"/><text x="85.0143%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="84.7643%" y="453" width="0.1684%" height="15" fill="rgb(208,151,45)" fg:x="1007" fg:w="2"/><text x="85.0143%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8485%" y="437" width="0.0842%" height="15" fill="rgb(231,181,24)" fg:x="1008" fg:w="1"/><text x="85.0985%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9327%" y="469" width="0.0842%" height="15" fill="rgb(240,106,29)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9327%" y="453" width="0.0842%" height="15" fill="rgb(227,166,11)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9327%" y="437" width="0.0842%" height="15" fill="rgb(254,14,34)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9327%" y="421" width="0.0842%" height="15" fill="rgb(223,222,6)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9327%" y="405" width="0.0842%" height="15" fill="rgb(245,69,24)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9327%" y="389" width="0.0842%" height="15" fill="rgb(213,193,7)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9327%" y="373" width="0.0842%" height="15" fill="rgb(237,92,51)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9327%" y="357" width="0.0842%" height="15" fill="rgb(225,194,6)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9327%" y="341" width="0.0842%" height="15" fill="rgb(205,159,49)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9327%" y="325" width="0.0842%" height="15" fill="rgb(219,69,2)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.9327%" y="309" width="0.0842%" height="15" fill="rgb(215,107,24)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.9327%" y="293" width="0.0842%" height="15" fill="rgb(249,208,29)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.9327%" y="277" width="0.0842%" height="15" fill="rgb(213,147,10)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.9327%" y="261" width="0.0842%" height="15" fill="rgb(254,140,42)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9327%" y="245" width="0.0842%" height="15" fill="rgb(249,9,15)" fg:x="1009" fg:w="1"/><text x="85.1827%" y="255.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.17%)</title><rect x="84.9327%" y="533" width="0.1684%" height="15" fill="rgb(210,19,33)" fg:x="1009" fg:w="2"/><text x="85.1827%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="84.9327%" y="517" width="0.1684%" height="15" fill="rgb(241,121,22)" fg:x="1009" fg:w="2"/><text x="85.1827%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.17%)</title><rect x="84.9327%" y="501" width="0.1684%" height="15" fill="rgb(244,69,52)" fg:x="1009" fg:w="2"/><text x="85.1827%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.17%)</title><rect x="84.9327%" y="485" width="0.1684%" height="15" fill="rgb(244,191,54)" fg:x="1009" fg:w="2"/><text x="85.1827%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0168%" y="469" width="0.0842%" height="15" fill="rgb(250,3,53)" fg:x="1010" fg:w="1"/><text x="85.2668%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0168%" y="453" width="0.0842%" height="15" fill="rgb(205,77,3)" fg:x="1010" fg:w="1"/><text x="85.2668%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0168%" y="437" width="0.0842%" height="15" fill="rgb(207,155,3)" fg:x="1010" fg:w="1"/><text x="85.2668%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.0168%" y="421" width="0.0842%" height="15" fill="rgb(224,79,2)" fg:x="1010" fg:w="1"/><text x="85.2668%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.0168%" y="405" width="0.0842%" height="15" fill="rgb(243,172,5)" fg:x="1010" fg:w="1"/><text x="85.2668%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.0168%" y="389" width="0.0842%" height="15" fill="rgb(217,23,43)" fg:x="1010" fg:w="1"/><text x="85.2668%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.0168%" y="373" width="0.0842%" height="15" fill="rgb(223,109,20)" fg:x="1010" fg:w="1"/><text x="85.2668%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.0168%" y="357" width="0.0842%" height="15" fill="rgb(232,159,21)" fg:x="1010" fg:w="1"/><text x="85.2668%" y="367.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.1010%" y="533" width="0.0842%" height="15" fill="rgb(219,58,2)" fg:x="1011" fg:w="1"/><text x="85.3510%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1010%" y="517" width="0.0842%" height="15" fill="rgb(241,56,8)" fg:x="1011" fg:w="1"/><text x="85.3510%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.1010%" y="501" width="0.0842%" height="15" fill="rgb(249,10,27)" fg:x="1011" fg:w="1"/><text x="85.3510%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.1010%" y="485" width="0.0842%" height="15" fill="rgb(248,177,5)" fg:x="1011" fg:w="1"/><text x="85.3510%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1010%" y="469" width="0.0842%" height="15" fill="rgb(239,12,30)" fg:x="1011" fg:w="1"/><text x="85.3510%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.1010%" y="453" width="0.0842%" height="15" fill="rgb(229,164,25)" fg:x="1011" fg:w="1"/><text x="85.3510%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1010%" y="437" width="0.0842%" height="15" fill="rgb(231,217,50)" fg:x="1011" fg:w="1"/><text x="85.3510%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="85.1852%" y="533" width="0.0842%" height="15" fill="rgb(247,99,32)" fg:x="1012" fg:w="1"/><text x="85.4352%" y="543.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.42%)</title><rect x="84.9327%" y="549" width="0.4209%" height="15" fill="rgb(240,74,50)" fg:x="1009" fg:w="5"/><text x="85.1827%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="85.2694%" y="533" width="0.0842%" height="15" fill="rgb(218,54,8)" fg:x="1013" fg:w="1"/><text x="85.5194%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.2694%" y="517" width="0.0842%" height="15" fill="rgb(227,132,20)" fg:x="1013" fg:w="1"/><text x="85.5194%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2694%" y="501" width="0.0842%" height="15" fill="rgb(232,134,12)" fg:x="1013" fg:w="1"/><text x="85.5194%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2694%" y="485" width="0.0842%" height="15" fill="rgb(250,129,18)" fg:x="1013" fg:w="1"/><text x="85.5194%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2694%" y="469" width="0.0842%" height="15" fill="rgb(232,129,47)" fg:x="1013" fg:w="1"/><text x="85.5194%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2694%" y="453" width="0.0842%" height="15" fill="rgb(230,31,40)" fg:x="1013" fg:w="1"/><text x="85.5194%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2694%" y="437" width="0.0842%" height="15" fill="rgb(232,126,10)" fg:x="1013" fg:w="1"/><text x="85.5194%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2694%" y="421" width="0.0842%" height="15" fill="rgb(205,46,31)" fg:x="1013" fg:w="1"/><text x="85.5194%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (75 samples, 6.31%)</title><rect x="79.1246%" y="565" width="6.3131%" height="15" fill="rgb(232,37,37)" fg:x="940" fg:w="75"/><text x="79.3746%" y="575.50">plugins_..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="85.3535%" y="549" width="0.0842%" height="15" fill="rgb(240,91,16)" fg:x="1014" fg:w="1"/><text x="85.6035%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.3535%" y="533" width="0.0842%" height="15" fill="rgb(224,160,9)" fg:x="1014" fg:w="1"/><text x="85.6035%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="85.3535%" y="517" width="0.0842%" height="15" fill="rgb(215,116,14)" fg:x="1014" fg:w="1"/><text x="85.6035%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3535%" y="501" width="0.0842%" height="15" fill="rgb(235,46,36)" fg:x="1014" fg:w="1"/><text x="85.6035%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.3535%" y="485" width="0.0842%" height="15" fill="rgb(238,39,28)" fg:x="1014" fg:w="1"/><text x="85.6035%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.3535%" y="469" width="0.0842%" height="15" fill="rgb(242,125,29)" fg:x="1014" fg:w="1"/><text x="85.6035%" y="479.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="85.4377%" y="533" width="0.0842%" height="15" fill="rgb(238,211,30)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="85.4377%" y="517" width="0.0842%" height="15" fill="rgb(227,201,28)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.4377%" y="501" width="0.0842%" height="15" fill="rgb(238,77,29)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.4377%" y="485" width="0.0842%" height="15" fill="rgb(213,221,40)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.4377%" y="469" width="0.0842%" height="15" fill="rgb(226,220,44)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.4377%" y="453" width="0.0842%" height="15" fill="rgb(228,90,23)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.4377%" y="437" width="0.0842%" height="15" fill="rgb(235,72,29)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="85.4377%" y="421" width="0.0842%" height="15" fill="rgb(248,117,39)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="85.4377%" y="405" width="0.0842%" height="15" fill="rgb(225,43,28)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="85.4377%" y="389" width="0.0842%" height="15" fill="rgb(240,93,4)" fg:x="1015" fg:w="1"/><text x="85.6877%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="85.5219%" y="501" width="0.0842%" height="15" fill="rgb(234,178,27)" fg:x="1016" fg:w="1"/><text x="85.7719%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.5219%" y="485" width="0.0842%" height="15" fill="rgb(254,88,22)" fg:x="1016" fg:w="1"/><text x="85.7719%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="85.5219%" y="469" width="0.0842%" height="15" fill="rgb(240,206,50)" fg:x="1016" fg:w="1"/><text x="85.7719%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5219%" y="453" width="0.0842%" height="15" fill="rgb(249,103,8)" fg:x="1016" fg:w="1"/><text x="85.7719%" y="463.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5219%" y="437" width="0.0842%" height="15" fill="rgb(241,178,36)" fg:x="1016" fg:w="1"/><text x="85.7719%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5219%" y="421" width="0.0842%" height="15" fill="rgb(246,110,15)" fg:x="1016" fg:w="1"/><text x="85.7719%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5219%" y="405" width="0.0842%" height="15" fill="rgb(207,14,43)" fg:x="1016" fg:w="1"/><text x="85.7719%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5219%" y="389" width="0.0842%" height="15" fill="rgb(253,219,19)" fg:x="1016" fg:w="1"/><text x="85.7719%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="85.6061%" y="485" width="0.0842%" height="15" fill="rgb(216,126,5)" fg:x="1017" fg:w="1"/><text x="85.8561%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.6061%" y="469" width="0.0842%" height="15" fill="rgb(218,78,42)" fg:x="1017" fg:w="1"/><text x="85.8561%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="85.6061%" y="453" width="0.0842%" height="15" fill="rgb(215,154,40)" fg:x="1017" fg:w="1"/><text x="85.8561%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6061%" y="437" width="0.0842%" height="15" fill="rgb(235,129,32)" fg:x="1017" fg:w="1"/><text x="85.8561%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6061%" y="421" width="0.0842%" height="15" fill="rgb(218,51,8)" fg:x="1017" fg:w="1"/><text x="85.8561%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.6061%" y="405" width="0.0842%" height="15" fill="rgb(245,48,4)" fg:x="1017" fg:w="1"/><text x="85.8561%" y="415.50"></text></g><g><title>plugins_core::build::Build::save (3 samples, 0.25%)</title><rect x="85.5219%" y="533" width="0.2525%" height="15" fill="rgb(250,175,12)" fg:x="1016" fg:w="3"/><text x="85.7719%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.25%)</title><rect x="85.5219%" y="517" width="0.2525%" height="15" fill="rgb(237,95,40)" fg:x="1016" fg:w="3"/><text x="85.7719%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.17%)</title><rect x="85.6061%" y="501" width="0.1684%" height="15" fill="rgb(244,120,0)" fg:x="1017" fg:w="2"/><text x="85.8561%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6902%" y="485" width="0.0842%" height="15" fill="rgb(241,19,42)" fg:x="1018" fg:w="1"/><text x="85.9402%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.6902%" y="469" width="0.0842%" height="15" fill="rgb(217,174,48)" fg:x="1018" fg:w="1"/><text x="85.9402%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.6902%" y="453" width="0.0842%" height="15" fill="rgb(239,36,38)" fg:x="1018" fg:w="1"/><text x="85.9402%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="85.6902%" y="437" width="0.0842%" height="15" fill="rgb(220,63,49)" fg:x="1018" fg:w="1"/><text x="85.9402%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.6902%" y="421" width="0.0842%" height="15" fill="rgb(240,101,13)" fg:x="1018" fg:w="1"/><text x="85.9402%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6902%" y="405" width="0.0842%" height="15" fill="rgb(209,184,51)" fg:x="1018" fg:w="1"/><text x="85.9402%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.6902%" y="389" width="0.0842%" height="15" fill="rgb(206,136,39)" fg:x="1018" fg:w="1"/><text x="85.9402%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6902%" y="373" width="0.0842%" height="15" fill="rgb(254,47,45)" fg:x="1018" fg:w="1"/><text x="85.9402%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.59%)</title><rect x="85.4377%" y="565" width="0.5892%" height="15" fill="rgb(252,103,20)" fg:x="1015" fg:w="7"/><text x="85.6877%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.59%)</title><rect x="85.4377%" y="549" width="0.5892%" height="15" fill="rgb(230,69,12)" fg:x="1015" fg:w="7"/><text x="85.6877%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (3 samples, 0.25%)</title><rect x="85.7744%" y="533" width="0.2525%" height="15" fill="rgb(219,2,28)" fg:x="1019" fg:w="3"/><text x="86.0244%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.25%)</title><rect x="85.7744%" y="517" width="0.2525%" height="15" fill="rgb(210,9,12)" fg:x="1019" fg:w="3"/><text x="86.0244%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.25%)</title><rect x="85.7744%" y="501" width="0.2525%" height="15" fill="rgb(235,99,33)" fg:x="1019" fg:w="3"/><text x="86.0244%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="85.7744%" y="485" width="0.2525%" height="15" fill="rgb(230,11,38)" fg:x="1019" fg:w="3"/><text x="86.0244%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="85.8586%" y="469" width="0.1684%" height="15" fill="rgb(217,129,0)" fg:x="1020" fg:w="2"/><text x="86.1086%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.9428%" y="453" width="0.0842%" height="15" fill="rgb(222,198,4)" fg:x="1021" fg:w="1"/><text x="86.1928%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="86.1111%" y="549" width="0.0842%" height="15" fill="rgb(246,170,27)" fg:x="1023" fg:w="1"/><text x="86.3611%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1111%" y="533" width="0.0842%" height="15" fill="rgb(229,17,28)" fg:x="1023" fg:w="1"/><text x="86.3611%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1111%" y="517" width="0.0842%" height="15" fill="rgb(233,198,48)" fg:x="1023" fg:w="1"/><text x="86.3611%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.1111%" y="501" width="0.0842%" height="15" fill="rgb(238,103,23)" fg:x="1023" fg:w="1"/><text x="86.3611%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1111%" y="485" width="0.0842%" height="15" fill="rgb(206,91,41)" fg:x="1023" fg:w="1"/><text x="86.3611%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1111%" y="469" width="0.0842%" height="15" fill="rgb(227,34,25)" fg:x="1023" fg:w="1"/><text x="86.3611%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.1953%" y="549" width="0.0842%" height="15" fill="rgb(210,110,44)" fg:x="1024" fg:w="1"/><text x="86.4453%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.1953%" y="533" width="0.0842%" height="15" fill="rgb(216,189,8)" fg:x="1024" fg:w="1"/><text x="86.4453%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.1953%" y="517" width="0.0842%" height="15" fill="rgb(234,9,46)" fg:x="1024" fg:w="1"/><text x="86.4453%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.1953%" y="501" width="0.0842%" height="15" fill="rgb(251,200,5)" fg:x="1024" fg:w="1"/><text x="86.4453%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.1953%" y="485" width="0.0842%" height="15" fill="rgb(238,165,37)" fg:x="1024" fg:w="1"/><text x="86.4453%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.1953%" y="469" width="0.0842%" height="15" fill="rgb(232,77,38)" fg:x="1024" fg:w="1"/><text x="86.4453%" y="479.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="86.2795%" y="469" width="0.0842%" height="15" fill="rgb(253,179,33)" fg:x="1025" fg:w="1"/><text x="86.5295%" y="479.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.17%)</title><rect x="86.2795%" y="549" width="0.1684%" height="15" fill="rgb(240,13,35)" fg:x="1025" fg:w="2"/><text x="86.5295%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.17%)</title><rect x="86.2795%" y="533" width="0.1684%" height="15" fill="rgb(242,150,49)" fg:x="1025" fg:w="2"/><text x="86.5295%" y="543.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.17%)</title><rect x="86.2795%" y="517" width="0.1684%" height="15" fill="rgb(237,176,28)" fg:x="1025" fg:w="2"/><text x="86.5295%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.17%)</title><rect x="86.2795%" y="501" width="0.1684%" height="15" fill="rgb(214,176,33)" fg:x="1025" fg:w="2"/><text x="86.5295%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="86.2795%" y="485" width="0.1684%" height="15" fill="rgb(214,25,12)" fg:x="1025" fg:w="2"/><text x="86.5295%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.3636%" y="469" width="0.0842%" height="15" fill="rgb(238,190,20)" fg:x="1026" fg:w="1"/><text x="86.6136%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4478%" y="517" width="0.0842%" height="15" fill="rgb(208,11,19)" fg:x="1027" fg:w="1"/><text x="86.6978%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.17%)</title><rect x="86.5320%" y="501" width="0.1684%" height="15" fill="rgb(239,90,4)" fg:x="1028" fg:w="2"/><text x="86.7820%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.17%)</title><rect x="86.5320%" y="485" width="0.1684%" height="15" fill="rgb(248,110,3)" fg:x="1028" fg:w="2"/><text x="86.7820%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.17%)</title><rect x="86.5320%" y="469" width="0.1684%" height="15" fill="rgb(210,41,30)" fg:x="1028" fg:w="2"/><text x="86.7820%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6162%" y="453" width="0.0842%" height="15" fill="rgb(239,36,8)" fg:x="1029" fg:w="1"/><text x="86.8662%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.6162%" y="437" width="0.0842%" height="15" fill="rgb(237,201,47)" fg:x="1029" fg:w="1"/><text x="86.8662%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6162%" y="421" width="0.0842%" height="15" fill="rgb(224,140,29)" fg:x="1029" fg:w="1"/><text x="86.8662%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.6162%" y="405" width="0.0842%" height="15" fill="rgb(231,209,17)" fg:x="1029" fg:w="1"/><text x="86.8662%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6162%" y="389" width="0.0842%" height="15" fill="rgb(249,196,1)" fg:x="1029" fg:w="1"/><text x="86.8662%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7003%" y="469" width="0.0842%" height="15" fill="rgb(223,207,51)" fg:x="1030" fg:w="1"/><text x="86.9503%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.7003%" y="453" width="0.0842%" height="15" fill="rgb(210,14,40)" fg:x="1030" fg:w="1"/><text x="86.9503%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.7003%" y="437" width="0.0842%" height="15" fill="rgb(250,20,52)" fg:x="1030" fg:w="1"/><text x="86.9503%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.51%)</title><rect x="86.4478%" y="533" width="0.5051%" height="15" fill="rgb(241,46,11)" fg:x="1027" fg:w="6"/><text x="86.6978%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.42%)</title><rect x="86.5320%" y="517" width="0.4209%" height="15" fill="rgb(219,105,5)" fg:x="1028" fg:w="5"/><text x="86.7820%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.25%)</title><rect x="86.7003%" y="501" width="0.2525%" height="15" fill="rgb(252,77,35)" fg:x="1030" fg:w="3"/><text x="86.9503%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="86.7003%" y="485" width="0.2525%" height="15" fill="rgb(243,119,2)" fg:x="1030" fg:w="3"/><text x="86.9503%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="86.7845%" y="469" width="0.1684%" height="15" fill="rgb(206,82,28)" fg:x="1031" fg:w="2"/><text x="87.0345%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.17%)</title><rect x="86.7845%" y="453" width="0.1684%" height="15" fill="rgb(227,120,12)" fg:x="1031" fg:w="2"/><text x="87.0345%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (166 samples, 13.97%)</title><rect x="73.0640%" y="581" width="13.9731%" height="15" fill="rgb(229,134,41)" fg:x="868" fg:w="166"/><text x="73.3140%" y="591.50">&lt;tests::HoldingKeyInV..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (12 samples, 1.01%)</title><rect x="86.0269%" y="565" width="1.0101%" height="15" fill="rgb(239,96,32)" fg:x="1022" fg:w="12"/><text x="86.2769%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (7 samples, 0.59%)</title><rect x="86.4478%" y="549" width="0.5892%" height="15" fill="rgb(225,46,27)" fg:x="1027" fg:w="7"/><text x="86.6978%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9529%" y="533" width="0.0842%" height="15" fill="rgb(215,168,2)" fg:x="1033" fg:w="1"/><text x="87.2029%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9529%" y="517" width="0.0842%" height="15" fill="rgb(207,170,52)" fg:x="1033" fg:w="1"/><text x="87.2029%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9529%" y="501" width="0.0842%" height="15" fill="rgb(237,198,36)" fg:x="1033" fg:w="1"/><text x="87.2029%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="87.0370%" y="581" width="0.0842%" height="15" fill="rgb(213,27,14)" fg:x="1034" fg:w="1"/><text x="87.2870%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="87.0370%" y="565" width="0.0842%" height="15" fill="rgb(218,77,5)" fg:x="1034" fg:w="1"/><text x="87.2870%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="87.0370%" y="549" width="0.0842%" height="15" fill="rgb(230,219,39)" fg:x="1034" fg:w="1"/><text x="87.2870%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="87.1212%" y="565" width="0.1684%" height="15" fill="rgb(245,177,7)" fg:x="1035" fg:w="2"/><text x="87.3712%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="87.1212%" y="549" width="0.1684%" height="15" fill="rgb(246,44,46)" fg:x="1035" fg:w="2"/><text x="87.3712%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="87.1212%" y="533" width="0.1684%" height="15" fill="rgb(207,173,15)" fg:x="1035" fg:w="2"/><text x="87.3712%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="87.1212%" y="517" width="0.1684%" height="15" fill="rgb(245,170,50)" fg:x="1035" fg:w="2"/><text x="87.3712%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="87.1212%" y="501" width="0.1684%" height="15" fill="rgb(233,156,21)" fg:x="1035" fg:w="2"/><text x="87.3712%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.17%)</title><rect x="87.1212%" y="485" width="0.1684%" height="15" fill="rgb(253,146,27)" fg:x="1035" fg:w="2"/><text x="87.3712%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.17%)</title><rect x="87.1212%" y="469" width="0.1684%" height="15" fill="rgb(247,66,29)" fg:x="1035" fg:w="2"/><text x="87.3712%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.2054%" y="453" width="0.0842%" height="15" fill="rgb(218,207,26)" fg:x="1036" fg:w="1"/><text x="87.4554%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.2896%" y="517" width="0.0842%" height="15" fill="rgb(234,93,26)" fg:x="1037" fg:w="1"/><text x="87.5396%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.2896%" y="501" width="0.0842%" height="15" fill="rgb(214,75,48)" fg:x="1037" fg:w="1"/><text x="87.5396%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.2896%" y="485" width="0.0842%" height="15" fill="rgb(229,119,22)" fg:x="1037" fg:w="1"/><text x="87.5396%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="87.2896%" y="533" width="0.1684%" height="15" fill="rgb(226,153,19)" fg:x="1037" fg:w="2"/><text x="87.5396%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::array::iter::IntoIter&lt;alloc::rc::Rc&lt;dyn kernel::plugins::mw::Middleware&gt;,1_usize&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="87.3737%" y="517" width="0.0842%" height="15" fill="rgb(220,204,36)" fg:x="1038" fg:w="1"/><text x="87.6237%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4579%" y="533" width="0.0842%" height="15" fill="rgb(253,181,43)" fg:x="1039" fg:w="1"/><text x="87.7079%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.5421%" y="533" width="0.0842%" height="15" fill="rgb(211,41,51)" fg:x="1040" fg:w="1"/><text x="87.7921%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="87.5421%" y="517" width="0.0842%" height="15" fill="rgb(207,215,0)" fg:x="1040" fg:w="1"/><text x="87.7921%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5421%" y="501" width="0.0842%" height="15" fill="rgb(212,153,10)" fg:x="1040" fg:w="1"/><text x="87.7921%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.7946%" y="453" width="0.0842%" height="15" fill="rgb(251,171,36)" fg:x="1043" fg:w="1"/><text x="88.0446%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.7946%" y="437" width="0.0842%" height="15" fill="rgb(225,219,41)" fg:x="1043" fg:w="1"/><text x="88.0446%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7946%" y="421" width="0.0842%" height="15" fill="rgb(208,200,1)" fg:x="1043" fg:w="1"/><text x="88.0446%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="87.7946%" y="485" width="0.1684%" height="15" fill="rgb(206,75,47)" fg:x="1043" fg:w="2"/><text x="88.0446%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="87.7946%" y="469" width="0.1684%" height="15" fill="rgb(248,3,16)" fg:x="1043" fg:w="2"/><text x="88.0446%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8788%" y="453" width="0.0842%" height="15" fill="rgb(242,157,36)" fg:x="1044" fg:w="1"/><text x="88.1288%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.9630%" y="469" width="0.0842%" height="15" fill="rgb(215,175,11)" fg:x="1045" fg:w="1"/><text x="88.2130%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="88.0471%" y="469" width="0.0842%" height="15" fill="rgb(252,222,22)" fg:x="1046" fg:w="1"/><text x="88.2971%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.0471%" y="453" width="0.0842%" height="15" fill="rgb(250,121,35)" fg:x="1046" fg:w="1"/><text x="88.2971%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.0471%" y="437" width="0.0842%" height="15" fill="rgb(233,120,49)" fg:x="1046" fg:w="1"/><text x="88.2971%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.0471%" y="421" width="0.0842%" height="15" fill="rgb(205,201,14)" fg:x="1046" fg:w="1"/><text x="88.2971%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.0471%" y="405" width="0.0842%" height="15" fill="rgb(219,58,45)" fg:x="1046" fg:w="1"/><text x="88.2971%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.0471%" y="389" width="0.0842%" height="15" fill="rgb(251,65,12)" fg:x="1046" fg:w="1"/><text x="88.2971%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.0471%" y="373" width="0.0842%" height="15" fill="rgb(224,47,31)" fg:x="1046" fg:w="1"/><text x="88.2971%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.0471%" y="357" width="0.0842%" height="15" fill="rgb(233,74,26)" fg:x="1046" fg:w="1"/><text x="88.2971%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.1313%" y="437" width="0.0842%" height="15" fill="rgb(231,211,31)" fg:x="1047" fg:w="1"/><text x="88.3813%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.2155%" y="405" width="0.0842%" height="15" fill="rgb(239,167,5)" fg:x="1048" fg:w="1"/><text x="88.4655%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.2155%" y="389" width="0.0842%" height="15" fill="rgb(241,85,0)" fg:x="1048" fg:w="1"/><text x="88.4655%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.2155%" y="373" width="0.0842%" height="15" fill="rgb(229,130,21)" fg:x="1048" fg:w="1"/><text x="88.4655%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="88.2155%" y="437" width="0.1684%" height="15" fill="rgb(254,84,49)" fg:x="1048" fg:w="2"/><text x="88.4655%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="88.2155%" y="421" width="0.1684%" height="15" fill="rgb(235,85,21)" fg:x="1048" fg:w="2"/><text x="88.4655%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2997%" y="405" width="0.0842%" height="15" fill="rgb(246,128,52)" fg:x="1049" fg:w="1"/><text x="88.5497%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2997%" y="389" width="0.0842%" height="15" fill="rgb(243,114,49)" fg:x="1049" fg:w="1"/><text x="88.5497%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.2997%" y="373" width="0.0842%" height="15" fill="rgb(240,224,22)" fg:x="1049" fg:w="1"/><text x="88.5497%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="88.3838%" y="437" width="0.1684%" height="15" fill="rgb(247,201,52)" fg:x="1050" fg:w="2"/><text x="88.6338%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="88.3838%" y="421" width="0.1684%" height="15" fill="rgb(231,70,45)" fg:x="1050" fg:w="2"/><text x="88.6338%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="88.3838%" y="405" width="0.1684%" height="15" fill="rgb(217,215,20)" fg:x="1050" fg:w="2"/><text x="88.6338%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="88.3838%" y="389" width="0.1684%" height="15" fill="rgb(226,170,30)" fg:x="1050" fg:w="2"/><text x="88.6338%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.51%)</title><rect x="88.5522%" y="437" width="0.5051%" height="15" fill="rgb(220,190,43)" fg:x="1052" fg:w="6"/><text x="88.8022%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.42%)</title><rect x="88.6364%" y="421" width="0.4209%" height="15" fill="rgb(218,20,18)" fg:x="1053" fg:w="5"/><text x="88.8864%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.42%)</title><rect x="88.6364%" y="405" width="0.4209%" height="15" fill="rgb(245,37,26)" fg:x="1053" fg:w="5"/><text x="88.8864%" y="415.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.34%)</title><rect x="88.7205%" y="389" width="0.3367%" height="15" fill="rgb(241,127,29)" fg:x="1054" fg:w="4"/><text x="88.9705%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="88.8047%" y="373" width="0.2525%" height="15" fill="rgb(241,33,26)" fg:x="1055" fg:w="3"/><text x="89.0547%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="88.8889%" y="357" width="0.1684%" height="15" fill="rgb(220,106,21)" fg:x="1056" fg:w="2"/><text x="89.1389%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.9731%" y="341" width="0.0842%" height="15" fill="rgb(225,125,35)" fg:x="1057" fg:w="1"/><text x="89.2231%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.9731%" y="325" width="0.0842%" height="15" fill="rgb(248,80,22)" fg:x="1057" fg:w="1"/><text x="89.2231%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.9731%" y="309" width="0.0842%" height="15" fill="rgb(231,117,39)" fg:x="1057" fg:w="1"/><text x="89.2231%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.09%)</title><rect x="88.1313%" y="453" width="1.0943%" height="15" fill="rgb(239,183,16)" fg:x="1047" fg:w="13"/><text x="88.3813%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="89.0572%" y="437" width="0.1684%" height="15" fill="rgb(221,61,19)" fg:x="1058" fg:w="2"/><text x="89.3072%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.1414%" y="421" width="0.0842%" height="15" fill="rgb(239,196,44)" fg:x="1059" fg:w="1"/><text x="89.3914%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.18%)</title><rect x="88.1313%" y="469" width="1.1785%" height="15" fill="rgb(206,113,19)" fg:x="1047" fg:w="14"/><text x="88.3813%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.2256%" y="453" width="0.0842%" height="15" fill="rgb(245,114,12)" fg:x="1060" fg:w="1"/><text x="89.4756%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.2256%" y="437" width="0.0842%" height="15" fill="rgb(247,89,39)" fg:x="1060" fg:w="1"/><text x="89.4756%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.2256%" y="421" width="0.0842%" height="15" fill="rgb(213,85,14)" fg:x="1060" fg:w="1"/><text x="89.4756%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.43%)</title><rect x="87.9630%" y="485" width="1.4310%" height="15" fill="rgb(249,206,33)" fg:x="1045" fg:w="17"/><text x="88.2130%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.3098%" y="469" width="0.0842%" height="15" fill="rgb(235,167,47)" fg:x="1061" fg:w="1"/><text x="89.5598%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.3098%" y="453" width="0.0842%" height="15" fill="rgb(217,177,16)" fg:x="1061" fg:w="1"/><text x="89.5598%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="89.3098%" y="437" width="0.0842%" height="15" fill="rgb(250,228,29)" fg:x="1061" fg:w="1"/><text x="89.5598%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="89.6465%" y="405" width="0.1684%" height="15" fill="rgb(216,195,42)" fg:x="1065" fg:w="2"/><text x="89.8965%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.34%)</title><rect x="89.5623%" y="453" width="0.3367%" height="15" fill="rgb(232,192,32)" fg:x="1064" fg:w="4"/><text x="89.8123%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.34%)</title><rect x="89.5623%" y="437" width="0.3367%" height="15" fill="rgb(211,8,47)" fg:x="1064" fg:w="4"/><text x="89.8123%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.34%)</title><rect x="89.5623%" y="421" width="0.3367%" height="15" fill="rgb(251,201,9)" fg:x="1064" fg:w="4"/><text x="89.8123%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8148%" y="405" width="0.0842%" height="15" fill="rgb(206,185,47)" fg:x="1067" fg:w="1"/><text x="90.0648%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8148%" y="389" width="0.0842%" height="15" fill="rgb(245,54,32)" fg:x="1067" fg:w="1"/><text x="90.0648%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.8990%" y="453" width="0.0842%" height="15" fill="rgb(208,1,8)" fg:x="1068" fg:w="1"/><text x="90.1490%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (7 samples, 0.59%)</title><rect x="89.4781%" y="469" width="0.5892%" height="15" fill="rgb(228,57,24)" fg:x="1063" fg:w="7"/><text x="89.7281%" y="479.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="89.9832%" y="453" width="0.0842%" height="15" fill="rgb(251,24,8)" fg:x="1069" fg:w="1"/><text x="90.2332%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.9832%" y="437" width="0.0842%" height="15" fill="rgb(236,196,50)" fg:x="1069" fg:w="1"/><text x="90.2332%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.9832%" y="421" width="0.0842%" height="15" fill="rgb(246,222,29)" fg:x="1069" fg:w="1"/><text x="90.2332%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.9832%" y="405" width="0.0842%" height="15" fill="rgb(211,34,40)" fg:x="1069" fg:w="1"/><text x="90.2332%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.9832%" y="389" width="0.0842%" height="15" fill="rgb(210,66,51)" fg:x="1069" fg:w="1"/><text x="90.2332%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.17%)</title><rect x="90.1515%" y="437" width="0.1684%" height="15" fill="rgb(250,56,43)" fg:x="1071" fg:w="2"/><text x="90.4015%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="90.1515%" y="421" width="0.1684%" height="15" fill="rgb(240,111,50)" fg:x="1071" fg:w="2"/><text x="90.4015%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="90.1515%" y="405" width="0.1684%" height="15" fill="rgb(209,117,13)" fg:x="1071" fg:w="2"/><text x="90.4015%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.17%)</title><rect x="90.3199%" y="437" width="0.1684%" height="15" fill="rgb(232,164,45)" fg:x="1073" fg:w="2"/><text x="90.5699%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="90.3199%" y="421" width="0.1684%" height="15" fill="rgb(205,69,32)" fg:x="1073" fg:w="2"/><text x="90.5699%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="90.6566%" y="373" width="0.1684%" height="15" fill="rgb(240,147,45)" fg:x="1077" fg:w="2"/><text x="90.9066%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="90.6566%" y="389" width="0.2525%" height="15" fill="rgb(221,94,48)" fg:x="1077" fg:w="3"/><text x="90.9066%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="90.8249%" y="373" width="0.0842%" height="15" fill="rgb(249,209,17)" fg:x="1079" fg:w="1"/><text x="91.0749%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="90.8249%" y="357" width="0.0842%" height="15" fill="rgb(228,57,28)" fg:x="1079" fg:w="1"/><text x="91.0749%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.34%)</title><rect x="90.9933%" y="373" width="0.3367%" height="15" fill="rgb(250,133,26)" fg:x="1081" fg:w="4"/><text x="91.2433%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="91.1616%" y="357" width="0.1684%" height="15" fill="rgb(254,15,16)" fg:x="1083" fg:w="2"/><text x="91.4116%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="91.1616%" y="341" width="0.1684%" height="15" fill="rgb(209,147,42)" fg:x="1083" fg:w="2"/><text x="91.4116%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.76%)</title><rect x="90.6566%" y="405" width="0.7576%" height="15" fill="rgb(208,5,29)" fg:x="1077" fg:w="9"/><text x="90.9066%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.51%)</title><rect x="90.9091%" y="389" width="0.5051%" height="15" fill="rgb(250,73,31)" fg:x="1080" fg:w="6"/><text x="91.1591%" y="399.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;f64&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="91.3300%" y="373" width="0.0842%" height="15" fill="rgb(238,45,10)" fg:x="1085" fg:w="1"/><text x="91.5800%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.3300%" y="357" width="0.0842%" height="15" fill="rgb(214,104,5)" fg:x="1085" fg:w="1"/><text x="91.5800%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.84%)</title><rect x="90.6566%" y="421" width="0.8418%" height="15" fill="rgb(242,217,19)" fg:x="1077" fg:w="10"/><text x="90.9066%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="91.4141%" y="405" width="0.0842%" height="15" fill="rgb(246,113,27)" fg:x="1086" fg:w="1"/><text x="91.6641%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (18 samples, 1.52%)</title><rect x="90.0673%" y="469" width="1.5152%" height="15" fill="rgb(221,34,27)" fg:x="1070" fg:w="18"/><text x="90.3173%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.43%)</title><rect x="90.1515%" y="453" width="1.4310%" height="15" fill="rgb(246,109,6)" fg:x="1071" fg:w="17"/><text x="90.4015%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.09%)</title><rect x="90.4882%" y="437" width="1.0943%" height="15" fill="rgb(217,12,25)" fg:x="1075" fg:w="13"/><text x="90.7382%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4983%" y="421" width="0.0842%" height="15" fill="rgb(250,195,5)" fg:x="1087" fg:w="1"/><text x="91.7483%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.9192%" y="277" width="0.0842%" height="15" fill="rgb(244,140,45)" fg:x="1092" fg:w="1"/><text x="92.1692%" y="287.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="91.9192%" y="261" width="0.0842%" height="15" fill="rgb(230,64,14)" fg:x="1092" fg:w="1"/><text x="92.1692%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="92.0034%" y="277" width="0.1684%" height="15" fill="rgb(206,27,27)" fg:x="1093" fg:w="2"/><text x="92.2534%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.0875%" y="261" width="0.0842%" height="15" fill="rgb(230,14,50)" fg:x="1094" fg:w="1"/><text x="92.3375%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.34%)</title><rect x="91.9192%" y="309" width="0.3367%" height="15" fill="rgb(237,172,14)" fg:x="1092" fg:w="4"/><text x="92.1692%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.34%)</title><rect x="91.9192%" y="293" width="0.3367%" height="15" fill="rgb(209,25,21)" fg:x="1092" fg:w="4"/><text x="92.1692%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1717%" y="277" width="0.0842%" height="15" fill="rgb(248,148,22)" fg:x="1095" fg:w="1"/><text x="92.4217%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1717%" y="261" width="0.0842%" height="15" fill="rgb(234,100,22)" fg:x="1095" fg:w="1"/><text x="92.4217%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1717%" y="245" width="0.0842%" height="15" fill="rgb(210,20,30)" fg:x="1095" fg:w="1"/><text x="92.4217%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.51%)</title><rect x="91.9192%" y="341" width="0.5051%" height="15" fill="rgb(232,58,0)" fg:x="1092" fg:w="6"/><text x="92.1692%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.51%)</title><rect x="91.9192%" y="325" width="0.5051%" height="15" fill="rgb(221,68,13)" fg:x="1092" fg:w="6"/><text x="92.1692%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="92.2559%" y="309" width="0.1684%" height="15" fill="rgb(231,194,11)" fg:x="1096" fg:w="2"/><text x="92.5059%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3401%" y="293" width="0.0842%" height="15" fill="rgb(235,51,41)" fg:x="1097" fg:w="1"/><text x="92.5901%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3401%" y="277" width="0.0842%" height="15" fill="rgb(240,50,32)" fg:x="1097" fg:w="1"/><text x="92.5901%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.84%)</title><rect x="91.6667%" y="373" width="0.8418%" height="15" fill="rgb(240,185,36)" fg:x="1089" fg:w="10"/><text x="91.9167%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.67%)</title><rect x="91.8350%" y="357" width="0.6734%" height="15" fill="rgb(211,168,15)" fg:x="1091" fg:w="8"/><text x="92.0850%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.4242%" y="341" width="0.0842%" height="15" fill="rgb(221,70,0)" fg:x="1098" fg:w="1"/><text x="92.6742%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4242%" y="325" width="0.0842%" height="15" fill="rgb(205,21,33)" fg:x="1098" fg:w="1"/><text x="92.6742%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 1.01%)</title><rect x="91.5825%" y="405" width="1.0101%" height="15" fill="rgb(225,106,10)" fg:x="1088" fg:w="12"/><text x="91.8325%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.93%)</title><rect x="91.6667%" y="389" width="0.9259%" height="15" fill="rgb(236,200,50)" fg:x="1089" fg:w="11"/><text x="91.9167%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.5084%" y="373" width="0.0842%" height="15" fill="rgb(249,93,23)" fg:x="1099" fg:w="1"/><text x="92.7584%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.5926%" y="389" width="0.0842%" height="15" fill="rgb(244,115,35)" fg:x="1100" fg:w="1"/><text x="92.8426%" y="399.50"></text></g><g><title>engine::session::state::State::close (65 samples, 5.47%)</title><rect x="87.2896%" y="565" width="5.4714%" height="15" fill="rgb(231,129,47)" fg:x="1037" fg:w="65"/><text x="87.5396%" y="575.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (65 samples, 5.47%)</title><rect x="87.2896%" y="549" width="5.4714%" height="15" fill="rgb(225,160,50)" fg:x="1037" fg:w="65"/><text x="87.5396%" y="559.50">engine:..</text></g><g><title>core::iter::adapters::try_process (61 samples, 5.13%)</title><rect x="87.6263%" y="533" width="5.1347%" height="15" fill="rgb(218,135,23)" fg:x="1041" fg:w="61"/><text x="87.8763%" y="543.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (61 samples, 5.13%)</title><rect x="87.6263%" y="517" width="5.1347%" height="15" fill="rgb(227,119,14)" fg:x="1041" fg:w="61"/><text x="87.8763%" y="527.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (61 samples, 5.13%)</title><rect x="87.6263%" y="501" width="5.1347%" height="15" fill="rgb(242,138,13)" fg:x="1041" fg:w="61"/><text x="87.8763%" y="511.50">engine..</text></g><g><title>kernel::model::any_entity_changes (40 samples, 3.37%)</title><rect x="89.3939%" y="485" width="3.3670%" height="15" fill="rgb(215,11,16)" fg:x="1062" fg:w="40"/><text x="89.6439%" y="495.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.18%)</title><rect x="91.5825%" y="469" width="1.1785%" height="15" fill="rgb(234,170,50)" fg:x="1088" fg:w="14"/><text x="91.8325%" y="479.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.18%)</title><rect x="91.5825%" y="453" width="1.1785%" height="15" fill="rgb(233,34,20)" fg:x="1088" fg:w="14"/><text x="91.8325%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.18%)</title><rect x="91.5825%" y="437" width="1.1785%" height="15" fill="rgb(237,100,45)" fg:x="1088" fg:w="14"/><text x="91.8325%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.18%)</title><rect x="91.5825%" y="421" width="1.1785%" height="15" fill="rgb(231,184,36)" fg:x="1088" fg:w="14"/><text x="91.8325%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="92.5926%" y="405" width="0.1684%" height="15" fill="rgb(252,93,2)" fg:x="1100" fg:w="2"/><text x="92.8426%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6768%" y="389" width="0.0842%" height="15" fill="rgb(248,176,47)" fg:x="1101" fg:w="1"/><text x="92.9268%" y="399.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="92.7609%" y="565" width="0.0842%" height="15" fill="rgb(249,125,23)" fg:x="1102" fg:w="1"/><text x="93.0109%" y="575.50"></text></g><g><title>engine::session::Session::close (71 samples, 5.98%)</title><rect x="87.1212%" y="581" width="5.9764%" height="15" fill="rgb(239,67,42)" fg:x="1035" fg:w="71"/><text x="87.3712%" y="591.50">engine::..</text></g><g><title>std::time::Instant::elapsed (3 samples, 0.25%)</title><rect x="92.8451%" y="565" width="0.2525%" height="15" fill="rgb(244,162,4)" fg:x="1103" fg:w="3"/><text x="93.0951%" y="575.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.25%)</title><rect x="92.8451%" y="549" width="0.2525%" height="15" fill="rgb(214,150,38)" fg:x="1103" fg:w="3"/><text x="93.0951%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.25%)</title><rect x="92.8451%" y="533" width="0.2525%" height="15" fill="rgb(228,211,28)" fg:x="1103" fg:w="3"/><text x="93.0951%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.25%)</title><rect x="92.8451%" y="517" width="0.2525%" height="15" fill="rgb(212,98,48)" fg:x="1103" fg:w="3"/><text x="93.0951%" y="527.50"></text></g><g><title>clock_gettime (3 samples, 0.25%)</title><rect x="92.8451%" y="501" width="0.2525%" height="15" fill="rgb(213,45,13)" fg:x="1103" fg:w="3"/><text x="93.0951%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (2 samples, 0.17%)</title><rect x="93.0976%" y="549" width="0.1684%" height="15" fill="rgb(218,35,29)" fg:x="1106" fg:w="2"/><text x="93.3476%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.17%)</title><rect x="93.0976%" y="533" width="0.1684%" height="15" fill="rgb(244,13,3)" fg:x="1106" fg:w="2"/><text x="93.3476%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="93.0976%" y="517" width="0.1684%" height="15" fill="rgb(235,170,19)" fg:x="1106" fg:w="2"/><text x="93.3476%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="93.0976%" y="501" width="0.1684%" height="15" fill="rgb(233,193,43)" fg:x="1106" fg:w="2"/><text x="93.3476%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.1818%" y="485" width="0.0842%" height="15" fill="rgb(228,223,20)" fg:x="1107" fg:w="1"/><text x="93.4318%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1818%" y="469" width="0.0842%" height="15" fill="rgb(208,85,54)" fg:x="1107" fg:w="1"/><text x="93.4318%" y="479.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.2660%" y="517" width="0.0842%" height="15" fill="rgb(254,14,45)" fg:x="1108" fg:w="1"/><text x="93.5160%" y="527.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="93.2660%" y="501" width="0.0842%" height="15" fill="rgb(247,99,29)" fg:x="1108" fg:w="1"/><text x="93.5160%" y="511.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.3502%" y="517" width="0.0842%" height="15" fill="rgb(225,180,54)" fg:x="1109" fg:w="1"/><text x="93.6002%" y="527.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.25%)</title><rect x="93.2660%" y="549" width="0.2525%" height="15" fill="rgb(239,88,43)" fg:x="1108" fg:w="3"/><text x="93.5160%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="93.2660%" y="533" width="0.2525%" height="15" fill="rgb(209,47,11)" fg:x="1108" fg:w="3"/><text x="93.5160%" y="543.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.4343%" y="517" width="0.0842%" height="15" fill="rgb(219,179,23)" fg:x="1110" fg:w="1"/><text x="93.6843%" y="527.50"></text></g><g><title>&lt;plugins_rune::parser::EditActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.4343%" y="501" width="0.0842%" height="15" fill="rgb(213,183,19)" fg:x="1110" fg:w="1"/><text x="93.6843%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="93.4343%" y="485" width="0.0842%" height="15" fill="rgb(210,11,9)" fg:x="1110" fg:w="1"/><text x="93.6843%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.5185%" y="389" width="0.0842%" height="15" fill="rgb(239,194,16)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.08%)</title><rect x="93.5185%" y="373" width="0.0842%" height="15" fill="rgb(246,23,50)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.08%)</title><rect x="93.5185%" y="357" width="0.0842%" height="15" fill="rgb(245,10,41)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="93.5185%" y="341" width="0.0842%" height="15" fill="rgb(228,43,24)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.08%)</title><rect x="93.5185%" y="325" width="0.0842%" height="15" fill="rgb(220,151,0)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.5185%" y="309" width="0.0842%" height="15" fill="rgb(232,219,10)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="319.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (1 samples, 0.08%)</title><rect x="93.5185%" y="293" width="0.0842%" height="15" fill="rgb(227,217,48)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="303.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="93.5185%" y="277" width="0.0842%" height="15" fill="rgb(210,66,35)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="93.5185%" y="261" width="0.0842%" height="15" fill="rgb(254,6,7)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="271.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="93.5185%" y="245" width="0.0842%" height="15" fill="rgb(235,222,42)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.5185%" y="229" width="0.0842%" height="15" fill="rgb(245,126,5)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.5185%" y="213" width="0.0842%" height="15" fill="rgb(215,73,17)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.5185%" y="197" width="0.0842%" height="15" fill="rgb(219,198,52)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.5185%" y="181" width="0.0842%" height="15" fill="rgb(217,159,18)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.5185%" y="165" width="0.0842%" height="15" fill="rgb(212,177,18)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.5185%" y="149" width="0.0842%" height="15" fill="rgb(241,10,11)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.5185%" y="133" width="0.0842%" height="15" fill="rgb(232,114,35)" fg:x="1111" fg:w="1"/><text x="93.7685%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="93.5185%" y="533" width="0.1684%" height="15" fill="rgb(238,222,8)" fg:x="1111" fg:w="2"/><text x="93.7685%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="93.5185%" y="517" width="0.1684%" height="15" fill="rgb(251,153,44)" fg:x="1111" fg:w="2"/><text x="93.7685%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="93.5185%" y="501" width="0.1684%" height="15" fill="rgb(210,140,51)" fg:x="1111" fg:w="2"/><text x="93.7685%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="93.5185%" y="485" width="0.1684%" height="15" fill="rgb(222,63,0)" fg:x="1111" fg:w="2"/><text x="93.7685%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="93.5185%" y="469" width="0.1684%" height="15" fill="rgb(240,18,40)" fg:x="1111" fg:w="2"/><text x="93.7685%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.17%)</title><rect x="93.5185%" y="453" width="0.1684%" height="15" fill="rgb(237,88,16)" fg:x="1111" fg:w="2"/><text x="93.7685%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.17%)</title><rect x="93.5185%" y="437" width="0.1684%" height="15" fill="rgb(251,117,13)" fg:x="1111" fg:w="2"/><text x="93.7685%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.17%)</title><rect x="93.5185%" y="421" width="0.1684%" height="15" fill="rgb(251,228,8)" fg:x="1111" fg:w="2"/><text x="93.7685%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.17%)</title><rect x="93.5185%" y="405" width="0.1684%" height="15" fill="rgb(205,107,49)" fg:x="1111" fg:w="2"/><text x="93.7685%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.6027%" y="389" width="0.0842%" height="15" fill="rgb(238,72,41)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6027%" y="373" width="0.0842%" height="15" fill="rgb(248,183,52)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6027%" y="357" width="0.0842%" height="15" fill="rgb(215,58,20)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.6027%" y="341" width="0.0842%" height="15" fill="rgb(209,49,13)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.6027%" y="325" width="0.0842%" height="15" fill="rgb(208,113,17)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.6027%" y="309" width="0.0842%" height="15" fill="rgb(208,14,22)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6027%" y="293" width="0.0842%" height="15" fill="rgb(222,95,2)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6027%" y="277" width="0.0842%" height="15" fill="rgb(253,180,37)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.6027%" y="261" width="0.0842%" height="15" fill="rgb(250,81,33)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.6027%" y="245" width="0.0842%" height="15" fill="rgb(251,151,41)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.6027%" y="229" width="0.0842%" height="15" fill="rgb(210,135,17)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.6027%" y="213" width="0.0842%" height="15" fill="rgb(239,21,29)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6027%" y="197" width="0.0842%" height="15" fill="rgb(231,215,16)" fg:x="1112" fg:w="1"/><text x="93.8527%" y="207.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (3 samples, 0.25%)</title><rect x="93.7710%" y="517" width="0.2525%" height="15" fill="rgb(239,151,54)" fg:x="1114" fg:w="3"/><text x="94.0210%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (3 samples, 0.25%)</title><rect x="93.7710%" y="501" width="0.2525%" height="15" fill="rgb(222,122,38)" fg:x="1114" fg:w="3"/><text x="94.0210%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (3 samples, 0.25%)</title><rect x="93.7710%" y="485" width="0.2525%" height="15" fill="rgb(243,128,1)" fg:x="1114" fg:w="3"/><text x="94.0210%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (3 samples, 0.25%)</title><rect x="93.7710%" y="469" width="0.2525%" height="15" fill="rgb(225,74,21)" fg:x="1114" fg:w="3"/><text x="94.0210%" y="479.50"></text></g><g><title>tracing_core::subscriber::Subscriber::register_callsite (1 samples, 0.08%)</title><rect x="93.9394%" y="453" width="0.0842%" height="15" fill="rgb(216,210,10)" fg:x="1116" fg:w="1"/><text x="94.1894%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.1077%" y="421" width="0.0842%" height="15" fill="rgb(228,76,19)" fg:x="1118" fg:w="1"/><text x="94.3577%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2761%" y="389" width="0.0842%" height="15" fill="rgb(236,80,34)" fg:x="1120" fg:w="1"/><text x="94.5261%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2761%" y="373" width="0.0842%" height="15" fill="rgb(225,173,23)" fg:x="1120" fg:w="1"/><text x="94.5261%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.25%)</title><rect x="94.1919%" y="405" width="0.2525%" height="15" fill="rgb(253,38,1)" fg:x="1119" fg:w="3"/><text x="94.4419%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.3603%" y="389" width="0.0842%" height="15" fill="rgb(206,155,35)" fg:x="1121" fg:w="1"/><text x="94.6103%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3603%" y="373" width="0.0842%" height="15" fill="rgb(254,27,53)" fg:x="1121" fg:w="1"/><text x="94.6103%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.3603%" y="357" width="0.0842%" height="15" fill="rgb(225,52,41)" fg:x="1121" fg:w="1"/><text x="94.6103%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3603%" y="341" width="0.0842%" height="15" fill="rgb(244,53,18)" fg:x="1121" fg:w="1"/><text x="94.6103%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4444%" y="341" width="0.0842%" height="15" fill="rgb(254,206,48)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4444%" y="325" width="0.0842%" height="15" fill="rgb(236,182,23)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4444%" y="309" width="0.0842%" height="15" fill="rgb(236,191,37)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4444%" y="293" width="0.0842%" height="15" fill="rgb(245,53,8)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4444%" y="277" width="0.0842%" height="15" fill="rgb(245,147,9)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4444%" y="261" width="0.0842%" height="15" fill="rgb(218,24,48)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4444%" y="245" width="0.0842%" height="15" fill="rgb(254,23,9)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.4444%" y="229" width="0.0842%" height="15" fill="rgb(244,105,9)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.4444%" y="213" width="0.0842%" height="15" fill="rgb(212,142,22)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.4444%" y="197" width="0.0842%" height="15" fill="rgb(221,114,49)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4444%" y="181" width="0.0842%" height="15" fill="rgb(223,210,25)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4444%" y="165" width="0.0842%" height="15" fill="rgb(235,162,44)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.4444%" y="149" width="0.0842%" height="15" fill="rgb(237,65,45)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.4444%" y="133" width="0.0842%" height="15" fill="rgb(208,79,9)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.4444%" y="117" width="0.0842%" height="15" fill="rgb(215,228,8)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.4444%" y="101" width="0.0842%" height="15" fill="rgb(205,185,17)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4444%" y="85" width="0.0842%" height="15" fill="rgb(213,62,36)" fg:x="1122" fg:w="1"/><text x="94.6944%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="94.5286%" y="341" width="0.0842%" height="15" fill="rgb(209,34,9)" fg:x="1123" fg:w="1"/><text x="94.7786%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.5286%" y="325" width="0.0842%" height="15" fill="rgb(246,151,27)" fg:x="1123" fg:w="1"/><text x="94.7786%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.5286%" y="309" width="0.0842%" height="15" fill="rgb(218,206,3)" fg:x="1123" fg:w="1"/><text x="94.7786%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.5286%" y="293" width="0.0842%" height="15" fill="rgb(242,202,1)" fg:x="1123" fg:w="1"/><text x="94.7786%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5286%" y="277" width="0.0842%" height="15" fill="rgb(227,185,16)" fg:x="1123" fg:w="1"/><text x="94.7786%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.6128%" y="245" width="0.0842%" height="15" fill="rgb(241,1,14)" fg:x="1124" fg:w="1"/><text x="94.8628%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.6128%" y="229" width="0.0842%" height="15" fill="rgb(212,113,25)" fg:x="1124" fg:w="1"/><text x="94.8628%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.6128%" y="213" width="0.0842%" height="15" fill="rgb(247,37,43)" fg:x="1124" fg:w="1"/><text x="94.8628%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="94.6128%" y="197" width="0.0842%" height="15" fill="rgb(226,54,8)" fg:x="1124" fg:w="1"/><text x="94.8628%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6970%" y="197" width="0.0842%" height="15" fill="rgb(251,205,25)" fg:x="1125" fg:w="1"/><text x="94.9470%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.17%)</title><rect x="94.6970%" y="245" width="0.1684%" height="15" fill="rgb(246,87,35)" fg:x="1125" fg:w="2"/><text x="94.9470%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="94.6970%" y="229" width="0.1684%" height="15" fill="rgb(251,145,46)" fg:x="1125" fg:w="2"/><text x="94.9470%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.17%)</title><rect x="94.6970%" y="213" width="0.1684%" height="15" fill="rgb(210,210,33)" fg:x="1125" fg:w="2"/><text x="94.9470%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="94.7811%" y="197" width="0.0842%" height="15" fill="rgb(221,151,11)" fg:x="1126" fg:w="1"/><text x="95.0311%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.7811%" y="181" width="0.0842%" height="15" fill="rgb(208,160,28)" fg:x="1126" fg:w="1"/><text x="95.0311%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.8653%" y="181" width="0.0842%" height="15" fill="rgb(243,69,29)" fg:x="1127" fg:w="1"/><text x="95.1153%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.42%)</title><rect x="94.6128%" y="293" width="0.4209%" height="15" fill="rgb(224,144,4)" fg:x="1124" fg:w="5"/><text x="94.8628%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.42%)</title><rect x="94.6128%" y="277" width="0.4209%" height="15" fill="rgb(211,140,38)" fg:x="1124" fg:w="5"/><text x="94.8628%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.42%)</title><rect x="94.6128%" y="261" width="0.4209%" height="15" fill="rgb(252,189,15)" fg:x="1124" fg:w="5"/><text x="94.8628%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="94.8653%" y="245" width="0.1684%" height="15" fill="rgb(251,175,23)" fg:x="1127" fg:w="2"/><text x="95.1153%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="94.8653%" y="229" width="0.1684%" height="15" fill="rgb(212,184,11)" fg:x="1127" fg:w="2"/><text x="95.1153%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="94.8653%" y="213" width="0.1684%" height="15" fill="rgb(217,205,6)" fg:x="1127" fg:w="2"/><text x="95.1153%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="94.8653%" y="197" width="0.1684%" height="15" fill="rgb(235,45,45)" fg:x="1127" fg:w="2"/><text x="95.1153%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.9495%" y="181" width="0.0842%" height="15" fill="rgb(211,157,53)" fg:x="1128" fg:w="1"/><text x="95.1995%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.9495%" y="165" width="0.0842%" height="15" fill="rgb(212,13,8)" fg:x="1128" fg:w="1"/><text x="95.1995%" y="175.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.9495%" y="149" width="0.0842%" height="15" fill="rgb(218,80,36)" fg:x="1128" fg:w="1"/><text x="95.1995%" y="159.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="94.9495%" y="133" width="0.0842%" height="15" fill="rgb(211,123,43)" fg:x="1128" fg:w="1"/><text x="95.1995%" y="143.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.51%)</title><rect x="94.6128%" y="341" width="0.5051%" height="15" fill="rgb(206,165,2)" fg:x="1124" fg:w="6"/><text x="94.8628%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.51%)</title><rect x="94.6128%" y="325" width="0.5051%" height="15" fill="rgb(248,63,35)" fg:x="1124" fg:w="6"/><text x="94.8628%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.51%)</title><rect x="94.6128%" y="309" width="0.5051%" height="15" fill="rgb(219,133,41)" fg:x="1124" fg:w="6"/><text x="94.8628%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0337%" y="293" width="0.0842%" height="15" fill="rgb(206,175,46)" fg:x="1129" fg:w="1"/><text x="95.2837%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0337%" y="277" width="0.0842%" height="15" fill="rgb(224,41,35)" fg:x="1129" fg:w="1"/><text x="95.2837%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0337%" y="261" width="0.0842%" height="15" fill="rgb(226,113,24)" fg:x="1129" fg:w="1"/><text x="95.2837%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.1178%" y="277" width="0.0842%" height="15" fill="rgb(219,51,41)" fg:x="1130" fg:w="1"/><text x="95.3678%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.1178%" y="261" width="0.0842%" height="15" fill="rgb(220,145,47)" fg:x="1130" fg:w="1"/><text x="95.3678%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.1178%" y="245" width="0.0842%" height="15" fill="rgb(239,121,47)" fg:x="1130" fg:w="1"/><text x="95.3678%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.1178%" y="229" width="0.0842%" height="15" fill="rgb(207,60,40)" fg:x="1130" fg:w="1"/><text x="95.3678%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1178%" y="213" width="0.0842%" height="15" fill="rgb(224,229,11)" fg:x="1130" fg:w="1"/><text x="95.3678%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1178%" y="197" width="0.0842%" height="15" fill="rgb(252,28,32)" fg:x="1130" fg:w="1"/><text x="95.3678%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.1178%" y="181" width="0.0842%" height="15" fill="rgb(207,52,49)" fg:x="1130" fg:w="1"/><text x="95.3678%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.2020%" y="277" width="0.0842%" height="15" fill="rgb(243,51,50)" fg:x="1131" fg:w="1"/><text x="95.4520%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.2020%" y="261" width="0.0842%" height="15" fill="rgb(212,92,21)" fg:x="1131" fg:w="1"/><text x="95.4520%" y="271.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (17 samples, 1.43%)</title><rect x="94.1077%" y="437" width="1.4310%" height="15" fill="rgb(230,183,50)" fg:x="1118" fg:w="17"/><text x="94.3577%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (16 samples, 1.35%)</title><rect x="94.1919%" y="421" width="1.3468%" height="15" fill="rgb(225,48,9)" fg:x="1119" fg:w="16"/><text x="94.4419%" y="431.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (13 samples, 1.09%)</title><rect x="94.4444%" y="405" width="1.0943%" height="15" fill="rgb(254,44,4)" fg:x="1122" fg:w="13"/><text x="94.6944%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (13 samples, 1.09%)</title><rect x="94.4444%" y="389" width="1.0943%" height="15" fill="rgb(252,128,37)" fg:x="1122" fg:w="13"/><text x="94.6944%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (13 samples, 1.09%)</title><rect x="94.4444%" y="373" width="1.0943%" height="15" fill="rgb(227,178,8)" fg:x="1122" fg:w="13"/><text x="94.6944%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.09%)</title><rect x="94.4444%" y="357" width="1.0943%" height="15" fill="rgb(205,206,32)" fg:x="1122" fg:w="13"/><text x="94.6944%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.42%)</title><rect x="95.1178%" y="341" width="0.4209%" height="15" fill="rgb(220,218,22)" fg:x="1130" fg:w="5"/><text x="95.3678%" y="351.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.42%)</title><rect x="95.1178%" y="325" width="0.4209%" height="15" fill="rgb(236,41,28)" fg:x="1130" fg:w="5"/><text x="95.3678%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.42%)</title><rect x="95.1178%" y="309" width="0.4209%" height="15" fill="rgb(219,37,7)" fg:x="1130" fg:w="5"/><text x="95.3678%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.42%)</title><rect x="95.1178%" y="293" width="0.4209%" height="15" fill="rgb(206,160,15)" fg:x="1130" fg:w="5"/><text x="95.3678%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="95.2862%" y="277" width="0.2525%" height="15" fill="rgb(208,82,21)" fg:x="1132" fg:w="3"/><text x="95.5362%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4545%" y="261" width="0.0842%" height="15" fill="rgb(226,130,25)" fg:x="1134" fg:w="1"/><text x="95.7045%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.17%)</title><rect x="95.7912%" y="277" width="0.1684%" height="15" fill="rgb(212,72,24)" fg:x="1138" fg:w="2"/><text x="96.0412%" y="287.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.17%)</title><rect x="95.7912%" y="261" width="0.1684%" height="15" fill="rgb(206,28,16)" fg:x="1138" fg:w="2"/><text x="96.0412%" y="271.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.17%)</title><rect x="95.7912%" y="245" width="0.1684%" height="15" fill="rgb(249,41,5)" fg:x="1138" fg:w="2"/><text x="96.0412%" y="255.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.17%)</title><rect x="95.7912%" y="229" width="0.1684%" height="15" fill="rgb(233,96,48)" fg:x="1138" fg:w="2"/><text x="96.0412%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="95.7912%" y="213" width="0.1684%" height="15" fill="rgb(240,198,11)" fg:x="1138" fg:w="2"/><text x="96.0412%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="95.7912%" y="197" width="0.1684%" height="15" fill="rgb(209,175,35)" fg:x="1138" fg:w="2"/><text x="96.0412%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.8754%" y="181" width="0.0842%" height="15" fill="rgb(214,40,51)" fg:x="1139" fg:w="1"/><text x="96.1254%" y="191.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.42%)</title><rect x="95.6229%" y="405" width="0.4209%" height="15" fill="rgb(252,56,4)" fg:x="1136" fg:w="5"/><text x="95.8729%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (5 samples, 0.42%)</title><rect x="95.6229%" y="389" width="0.4209%" height="15" fill="rgb(219,131,5)" fg:x="1136" fg:w="5"/><text x="95.8729%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.34%)</title><rect x="95.7071%" y="373" width="0.3367%" height="15" fill="rgb(223,67,53)" fg:x="1137" fg:w="4"/><text x="95.9571%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.34%)</title><rect x="95.7071%" y="357" width="0.3367%" height="15" fill="rgb(227,154,8)" fg:x="1137" fg:w="4"/><text x="95.9571%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.34%)</title><rect x="95.7071%" y="341" width="0.3367%" height="15" fill="rgb(216,174,51)" fg:x="1137" fg:w="4"/><text x="95.9571%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.34%)</title><rect x="95.7071%" y="325" width="0.3367%" height="15" fill="rgb(239,60,34)" fg:x="1137" fg:w="4"/><text x="95.9571%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.34%)</title><rect x="95.7071%" y="309" width="0.3367%" height="15" fill="rgb(236,165,48)" fg:x="1137" fg:w="4"/><text x="95.9571%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (4 samples, 0.34%)</title><rect x="95.7071%" y="293" width="0.3367%" height="15" fill="rgb(210,37,26)" fg:x="1137" fg:w="4"/><text x="95.9571%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="95.9596%" y="277" width="0.0842%" height="15" fill="rgb(211,3,17)" fg:x="1140" fg:w="1"/><text x="96.2096%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.9596%" y="261" width="0.0842%" height="15" fill="rgb(234,88,49)" fg:x="1140" fg:w="1"/><text x="96.2096%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9596%" y="245" width="0.0842%" height="15" fill="rgb(233,40,17)" fg:x="1140" fg:w="1"/><text x="96.2096%" y="255.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.17%)</title><rect x="96.0438%" y="357" width="0.1684%" height="15" fill="rgb(235,127,31)" fg:x="1141" fg:w="2"/><text x="96.2938%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="96.0438%" y="341" width="0.1684%" height="15" fill="rgb(248,167,17)" fg:x="1141" fg:w="2"/><text x="96.2938%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="96.0438%" y="325" width="0.1684%" height="15" fill="rgb(218,179,8)" fg:x="1141" fg:w="2"/><text x="96.2938%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="96.2963%" y="293" width="0.1684%" height="15" fill="rgb(216,92,14)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="96.2963%" y="277" width="0.1684%" height="15" fill="rgb(221,198,46)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="96.2963%" y="261" width="0.1684%" height="15" fill="rgb(244,7,25)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="96.2963%" y="245" width="0.1684%" height="15" fill="rgb(233,75,6)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="96.2963%" y="229" width="0.1684%" height="15" fill="rgb(240,189,41)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="96.2963%" y="213" width="0.1684%" height="15" fill="rgb(237,157,21)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="96.2963%" y="197" width="0.1684%" height="15" fill="rgb(210,136,49)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.17%)</title><rect x="96.2963%" y="181" width="0.1684%" height="15" fill="rgb(210,68,29)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="96.2963%" y="165" width="0.1684%" height="15" fill="rgb(247,207,20)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.17%)</title><rect x="96.2963%" y="149" width="0.1684%" height="15" fill="rgb(224,73,48)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="96.2963%" y="133" width="0.1684%" height="15" fill="rgb(215,136,47)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="96.2963%" y="117" width="0.1684%" height="15" fill="rgb(232,222,16)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="96.2963%" y="101" width="0.1684%" height="15" fill="rgb(249,202,47)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="96.2963%" y="85" width="0.1684%" height="15" fill="rgb(236,56,8)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="96.2963%" y="69" width="0.1684%" height="15" fill="rgb(222,6,3)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="79.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="96.2963%" y="53" width="0.1684%" height="15" fill="rgb(254,222,28)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="63.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="96.2963%" y="37" width="0.1684%" height="15" fill="rgb(219,57,23)" fg:x="1144" fg:w="2"/><text x="96.5463%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="96.4646%" y="293" width="0.0842%" height="15" fill="rgb(251,106,48)" fg:x="1146" fg:w="1"/><text x="96.7146%" y="303.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="96.4646%" y="277" width="0.0842%" height="15" fill="rgb(242,2,23)" fg:x="1146" fg:w="1"/><text x="96.7146%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6330%" y="165" width="0.0842%" height="15" fill="rgb(212,109,31)" fg:x="1148" fg:w="1"/><text x="96.8830%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6330%" y="149" width="0.0842%" height="15" fill="rgb(241,9,22)" fg:x="1148" fg:w="1"/><text x="96.8830%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.6330%" y="133" width="0.0842%" height="15" fill="rgb(209,64,27)" fg:x="1148" fg:w="1"/><text x="96.8830%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7172%" y="133" width="0.0842%" height="15" fill="rgb(248,13,44)" fg:x="1149" fg:w="1"/><text x="96.9672%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7172%" y="117" width="0.0842%" height="15" fill="rgb(213,86,6)" fg:x="1149" fg:w="1"/><text x="96.9672%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.7172%" y="101" width="0.0842%" height="15" fill="rgb(247,11,18)" fg:x="1149" fg:w="1"/><text x="96.9672%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="96.7172%" y="85" width="0.0842%" height="15" fill="rgb(252,31,11)" fg:x="1149" fg:w="1"/><text x="96.9672%" y="95.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.34%)</title><rect x="96.5488%" y="293" width="0.3367%" height="15" fill="rgb(215,63,51)" fg:x="1147" fg:w="4"/><text x="96.7988%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.34%)</title><rect x="96.5488%" y="277" width="0.3367%" height="15" fill="rgb(222,180,4)" fg:x="1147" fg:w="4"/><text x="96.7988%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.34%)</title><rect x="96.5488%" y="261" width="0.3367%" height="15" fill="rgb(233,4,23)" fg:x="1147" fg:w="4"/><text x="96.7988%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="96.6330%" y="245" width="0.2525%" height="15" fill="rgb(230,116,22)" fg:x="1148" fg:w="3"/><text x="96.8830%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="96.6330%" y="229" width="0.2525%" height="15" fill="rgb(222,20,14)" fg:x="1148" fg:w="3"/><text x="96.8830%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.25%)</title><rect x="96.6330%" y="213" width="0.2525%" height="15" fill="rgb(210,176,43)" fg:x="1148" fg:w="3"/><text x="96.8830%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="96.6330%" y="197" width="0.2525%" height="15" fill="rgb(219,67,32)" fg:x="1148" fg:w="3"/><text x="96.8830%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="96.6330%" y="181" width="0.2525%" height="15" fill="rgb(228,91,39)" fg:x="1148" fg:w="3"/><text x="96.8830%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.17%)</title><rect x="96.7172%" y="165" width="0.1684%" height="15" fill="rgb(254,63,14)" fg:x="1149" fg:w="2"/><text x="96.9672%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="96.7172%" y="149" width="0.1684%" height="15" fill="rgb(216,171,39)" fg:x="1149" fg:w="2"/><text x="96.9672%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8013%" y="133" width="0.0842%" height="15" fill="rgb(248,68,25)" fg:x="1150" fg:w="1"/><text x="97.0513%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8855%" y="165" width="0.0842%" height="15" fill="rgb(239,63,16)" fg:x="1151" fg:w="1"/><text x="97.1355%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8855%" y="149" width="0.0842%" height="15" fill="rgb(225,111,43)" fg:x="1151" fg:w="1"/><text x="97.1355%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.8855%" y="133" width="0.0842%" height="15" fill="rgb(246,165,17)" fg:x="1151" fg:w="1"/><text x="97.1355%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.8855%" y="117" width="0.0842%" height="15" fill="rgb(208,124,1)" fg:x="1151" fg:w="1"/><text x="97.1355%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="96.8855%" y="197" width="0.1684%" height="15" fill="rgb(234,147,33)" fg:x="1151" fg:w="2"/><text x="97.1355%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="96.8855%" y="181" width="0.1684%" height="15" fill="rgb(240,86,30)" fg:x="1151" fg:w="2"/><text x="97.1355%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9697%" y="165" width="0.0842%" height="15" fill="rgb(237,34,51)" fg:x="1152" fg:w="1"/><text x="97.2197%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="96.8855%" y="229" width="0.2525%" height="15" fill="rgb(232,131,41)" fg:x="1151" fg:w="3"/><text x="97.1355%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="96.8855%" y="213" width="0.2525%" height="15" fill="rgb(227,129,53)" fg:x="1151" fg:w="3"/><text x="97.1355%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0539%" y="197" width="0.0842%" height="15" fill="rgb(230,90,35)" fg:x="1153" fg:w="1"/><text x="97.3039%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0539%" y="181" width="0.0842%" height="15" fill="rgb(248,88,27)" fg:x="1153" fg:w="1"/><text x="97.3039%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.0539%" y="165" width="0.0842%" height="15" fill="rgb(223,18,17)" fg:x="1153" fg:w="1"/><text x="97.3039%" y="175.50"></text></g><g><title>plugins_core::tools::contained_by (14 samples, 1.18%)</title><rect x="96.0438%" y="373" width="1.1785%" height="15" fill="rgb(241,11,10)" fg:x="1141" fg:w="14"/><text x="96.2938%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (12 samples, 1.01%)</title><rect x="96.2121%" y="357" width="1.0101%" height="15" fill="rgb(232,111,52)" fg:x="1143" fg:w="12"/><text x="96.4621%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (12 samples, 1.01%)</title><rect x="96.2121%" y="341" width="1.0101%" height="15" fill="rgb(228,67,8)" fg:x="1143" fg:w="12"/><text x="96.4621%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (12 samples, 1.01%)</title><rect x="96.2121%" y="325" width="1.0101%" height="15" fill="rgb(251,168,31)" fg:x="1143" fg:w="12"/><text x="96.4621%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 1.01%)</title><rect x="96.2121%" y="309" width="1.0101%" height="15" fill="rgb(249,164,11)" fg:x="1143" fg:w="12"/><text x="96.4621%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.34%)</title><rect x="96.8855%" y="293" width="0.3367%" height="15" fill="rgb(239,81,9)" fg:x="1151" fg:w="4"/><text x="97.1355%" y="303.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.34%)</title><rect x="96.8855%" y="277" width="0.3367%" height="15" fill="rgb(222,145,38)" fg:x="1151" fg:w="4"/><text x="97.1355%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.34%)</title><rect x="96.8855%" y="261" width="0.3367%" height="15" fill="rgb(238,80,54)" fg:x="1151" fg:w="4"/><text x="97.1355%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.34%)</title><rect x="96.8855%" y="245" width="0.3367%" height="15" fill="rgb(237,116,16)" fg:x="1151" fg:w="4"/><text x="97.1355%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1380%" y="229" width="0.0842%" height="15" fill="rgb(218,135,19)" fg:x="1154" fg:w="1"/><text x="97.3880%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1380%" y="213" width="0.0842%" height="15" fill="rgb(216,207,44)" fg:x="1154" fg:w="1"/><text x="97.3880%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="97.2222%" y="341" width="0.1684%" height="15" fill="rgb(226,152,40)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="97.2222%" y="325" width="0.1684%" height="15" fill="rgb(219,98,35)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="97.2222%" y="309" width="0.1684%" height="15" fill="rgb(222,136,46)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="97.2222%" y="293" width="0.1684%" height="15" fill="rgb(222,71,8)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="97.2222%" y="277" width="0.1684%" height="15" fill="rgb(209,89,53)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.17%)</title><rect x="97.2222%" y="261" width="0.1684%" height="15" fill="rgb(210,97,51)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="97.2222%" y="245" width="0.1684%" height="15" fill="rgb(248,65,21)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.17%)</title><rect x="97.2222%" y="229" width="0.1684%" height="15" fill="rgb(222,5,31)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="97.2222%" y="213" width="0.1684%" height="15" fill="rgb(241,16,30)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="97.2222%" y="197" width="0.1684%" height="15" fill="rgb(215,86,30)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="97.2222%" y="181" width="0.1684%" height="15" fill="rgb(235,26,44)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="97.2222%" y="165" width="0.1684%" height="15" fill="rgb(228,147,14)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="97.2222%" y="149" width="0.1684%" height="15" fill="rgb(253,38,50)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="159.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="97.2222%" y="133" width="0.1684%" height="15" fill="rgb(251,151,16)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="143.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="97.2222%" y="117" width="0.1684%" height="15" fill="rgb(224,64,19)" fg:x="1155" fg:w="2"/><text x="97.4722%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.5589%" y="309" width="0.0842%" height="15" fill="rgb(235,214,47)" fg:x="1159" fg:w="1"/><text x="97.8089%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.5589%" y="293" width="0.0842%" height="15" fill="rgb(218,15,19)" fg:x="1159" fg:w="1"/><text x="97.8089%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6431%" y="261" width="0.0842%" height="15" fill="rgb(247,209,3)" fg:x="1160" fg:w="1"/><text x="97.8931%" y="271.50"></text></g><g><title>plugins_core::tools::occupied_by (7 samples, 0.59%)</title><rect x="97.2222%" y="373" width="0.5892%" height="15" fill="rgb(217,29,2)" fg:x="1155" fg:w="7"/><text x="97.4722%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (7 samples, 0.59%)</title><rect x="97.2222%" y="357" width="0.5892%" height="15" fill="rgb(234,9,9)" fg:x="1155" fg:w="7"/><text x="97.4722%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.42%)</title><rect x="97.3906%" y="341" width="0.4209%" height="15" fill="rgb(207,43,14)" fg:x="1157" fg:w="5"/><text x="97.6406%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.42%)</title><rect x="97.3906%" y="325" width="0.4209%" height="15" fill="rgb(216,219,36)" fg:x="1157" fg:w="5"/><text x="97.6406%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.17%)</title><rect x="97.6431%" y="309" width="0.1684%" height="15" fill="rgb(238,12,26)" fg:x="1160" fg:w="2"/><text x="97.8931%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.17%)</title><rect x="97.6431%" y="293" width="0.1684%" height="15" fill="rgb(226,67,30)" fg:x="1160" fg:w="2"/><text x="97.8931%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.17%)</title><rect x="97.6431%" y="277" width="0.1684%" height="15" fill="rgb(229,154,7)" fg:x="1160" fg:w="2"/><text x="97.8931%" y="287.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.7273%" y="261" width="0.0842%" height="15" fill="rgb(249,90,18)" fg:x="1161" fg:w="1"/><text x="97.9773%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.7273%" y="245" width="0.0842%" height="15" fill="rgb(223,53,15)" fg:x="1161" fg:w="1"/><text x="97.9773%" y="255.50"></text></g><g><title>engine::session::Session::captured (52 samples, 4.38%)</title><rect x="93.5185%" y="549" width="4.3771%" height="15" fill="rgb(253,86,38)" fg:x="1111" fg:w="52"/><text x="93.7685%" y="559.50">engin..</text></g><g><title>engine::session::logs::capture (50 samples, 4.21%)</title><rect x="93.6869%" y="533" width="4.2088%" height="15" fill="rgb(222,198,9)" fg:x="1113" fg:w="50"/><text x="93.9369%" y="543.50">engin..</text></g><g><title>tracing_core::dispatcher::with_default (46 samples, 3.87%)</title><rect x="94.0236%" y="517" width="3.8721%" height="15" fill="rgb(240,146,25)" fg:x="1117" fg:w="46"/><text x="94.2736%" y="527.50">trac..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (45 samples, 3.79%)</title><rect x="94.1077%" y="501" width="3.7879%" height="15" fill="rgb(225,38,10)" fg:x="1118" fg:w="45"/><text x="94.3577%" y="511.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::apply_middleware (45 samples, 3.79%)</title><rect x="94.1077%" y="485" width="3.7879%" height="15" fill="rgb(246,93,4)" fg:x="1118" fg:w="45"/><text x="94.3577%" y="495.50">kern..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (45 samples, 3.79%)</title><rect x="94.1077%" y="469" width="3.7879%" height="15" fill="rgb(222,55,18)" fg:x="1118" fg:w="45"/><text x="94.3577%" y="479.50">kern..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (45 samples, 3.79%)</title><rect x="94.1077%" y="453" width="3.7879%" height="15" fill="rgb(233,137,48)" fg:x="1118" fg:w="45"/><text x="94.3577%" y="463.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (28 samples, 2.36%)</title><rect x="95.5387%" y="437" width="2.3569%" height="15" fill="rgb(214,8,54)" fg:x="1135" fg:w="28"/><text x="95.7887%" y="447.50">k..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (28 samples, 2.36%)</title><rect x="95.5387%" y="421" width="2.3569%" height="15" fill="rgb(206,75,4)" fg:x="1135" fg:w="28"/><text x="95.7887%" y="431.50">&lt;..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (22 samples, 1.85%)</title><rect x="96.0438%" y="405" width="1.8519%" height="15" fill="rgb(238,171,14)" fg:x="1141" fg:w="22"/><text x="96.2938%" y="415.50">p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (22 samples, 1.85%)</title><rect x="96.0438%" y="389" width="1.8519%" height="15" fill="rgb(233,70,41)" fg:x="1141" fg:w="22"/><text x="96.2938%" y="399.50">p..</text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="97.8114%" y="373" width="0.0842%" height="15" fill="rgb(214,68,36)" fg:x="1162" fg:w="1"/><text x="98.0614%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.8114%" y="357" width="0.0842%" height="15" fill="rgb(223,29,5)" fg:x="1162" fg:w="1"/><text x="98.0614%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8114%" y="341" width="0.0842%" height="15" fill="rgb(251,22,40)" fg:x="1162" fg:w="1"/><text x="98.0614%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8114%" y="325" width="0.0842%" height="15" fill="rgb(210,67,41)" fg:x="1162" fg:w="1"/><text x="98.0614%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.8114%" y="309" width="0.0842%" height="15" fill="rgb(225,177,31)" fg:x="1162" fg:w="1"/><text x="98.0614%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.8114%" y="293" width="0.0842%" height="15" fill="rgb(221,229,11)" fg:x="1162" fg:w="1"/><text x="98.0614%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.8114%" y="277" width="0.0842%" height="15" fill="rgb(247,172,52)" fg:x="1162" fg:w="1"/><text x="98.0614%" y="287.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="97.8956%" y="533" width="0.0842%" height="15" fill="rgb(212,73,19)" fg:x="1163" fg:w="1"/><text x="98.1456%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9798%" y="485" width="0.0842%" height="15" fill="rgb(244,7,46)" fg:x="1164" fg:w="1"/><text x="98.2298%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9798%" y="469" width="0.0842%" height="15" fill="rgb(230,113,20)" fg:x="1164" fg:w="1"/><text x="98.2298%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9798%" y="453" width="0.0842%" height="15" fill="rgb(209,97,30)" fg:x="1164" fg:w="1"/><text x="98.2298%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="97.9798%" y="501" width="0.1684%" height="15" fill="rgb(243,89,12)" fg:x="1164" fg:w="2"/><text x="98.2298%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0640%" y="485" width="0.0842%" height="15" fill="rgb(228,32,19)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0640%" y="469" width="0.0842%" height="15" fill="rgb(248,25,17)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0640%" y="453" width="0.0842%" height="15" fill="rgb(232,161,29)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0640%" y="437" width="0.0842%" height="15" fill="rgb(251,192,11)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0640%" y="421" width="0.0842%" height="15" fill="rgb(240,47,32)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0640%" y="405" width="0.0842%" height="15" fill="rgb(250,16,45)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0640%" y="389" width="0.0842%" height="15" fill="rgb(227,217,42)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0640%" y="373" width="0.0842%" height="15" fill="rgb(206,82,54)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0640%" y="357" width="0.0842%" height="15" fill="rgb(243,145,25)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0640%" y="341" width="0.0842%" height="15" fill="rgb(207,166,24)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0640%" y="325" width="0.0842%" height="15" fill="rgb(215,191,44)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="98.0640%" y="309" width="0.0842%" height="15" fill="rgb(234,218,51)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="98.0640%" y="293" width="0.0842%" height="15" fill="rgb(245,133,21)" fg:x="1165" fg:w="1"/><text x="98.3140%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.2323%" y="373" width="0.0842%" height="15" fill="rgb(230,136,45)" fg:x="1167" fg:w="1"/><text x="98.4823%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3165%" y="357" width="0.0842%" height="15" fill="rgb(247,63,43)" fg:x="1168" fg:w="1"/><text x="98.5665%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3165%" y="341" width="0.0842%" height="15" fill="rgb(254,223,31)" fg:x="1168" fg:w="1"/><text x="98.5665%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3165%" y="325" width="0.0842%" height="15" fill="rgb(236,185,0)" fg:x="1168" fg:w="1"/><text x="98.5665%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.34%)</title><rect x="98.1481%" y="389" width="0.3367%" height="15" fill="rgb(231,139,46)" fg:x="1166" fg:w="4"/><text x="98.3981%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.17%)</title><rect x="98.3165%" y="373" width="0.1684%" height="15" fill="rgb(236,147,31)" fg:x="1168" fg:w="2"/><text x="98.5665%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.4007%" y="357" width="0.0842%" height="15" fill="rgb(225,222,22)" fg:x="1169" fg:w="1"/><text x="98.6507%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4007%" y="341" width="0.0842%" height="15" fill="rgb(225,193,14)" fg:x="1169" fg:w="1"/><text x="98.6507%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.4007%" y="325" width="0.0842%" height="15" fill="rgb(253,193,46)" fg:x="1169" fg:w="1"/><text x="98.6507%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.42%)</title><rect x="98.1481%" y="405" width="0.4209%" height="15" fill="rgb(218,187,39)" fg:x="1166" fg:w="5"/><text x="98.3981%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;serde_json::value::Value&gt;,core::option::Option&lt;alloc::vec::Vec&lt;kernel::model::entity_ref::EntityRef&gt;&gt;,kernel::model::entity_ref::find_entity_refs&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="98.4848%" y="389" width="0.0842%" height="15" fill="rgb(227,162,48)" fg:x="1170" fg:w="1"/><text x="98.7348%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.59%)</title><rect x="98.1481%" y="453" width="0.5892%" height="15" fill="rgb(222,25,5)" fg:x="1166" fg:w="7"/><text x="98.3981%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.59%)</title><rect x="98.1481%" y="437" width="0.5892%" height="15" fill="rgb(211,205,16)" fg:x="1166" fg:w="7"/><text x="98.3981%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.59%)</title><rect x="98.1481%" y="421" width="0.5892%" height="15" fill="rgb(244,191,2)" fg:x="1166" fg:w="7"/><text x="98.3981%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="98.5690%" y="405" width="0.1684%" height="15" fill="rgb(248,159,12)" fg:x="1171" fg:w="2"/><text x="98.8190%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="98.5690%" y="389" width="0.1684%" height="15" fill="rgb(235,204,17)" fg:x="1171" fg:w="2"/><text x="98.8190%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.6532%" y="373" width="0.0842%" height="15" fill="rgb(240,21,27)" fg:x="1172" fg:w="1"/><text x="98.9032%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.6532%" y="357" width="0.0842%" height="15" fill="rgb(224,170,31)" fg:x="1172" fg:w="1"/><text x="98.9032%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.6532%" y="341" width="0.0842%" height="15" fill="rgb(223,145,32)" fg:x="1172" fg:w="1"/><text x="98.9032%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.6532%" y="325" width="0.0842%" height="15" fill="rgb(243,100,5)" fg:x="1172" fg:w="1"/><text x="98.9032%" y="335.50"></text></g><g><title>engine::session::internal::Added::find_refs (10 samples, 0.84%)</title><rect x="97.9798%" y="533" width="0.8418%" height="15" fill="rgb(242,131,51)" fg:x="1164" fg:w="10"/><text x="98.2298%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.84%)</title><rect x="97.9798%" y="517" width="0.8418%" height="15" fill="rgb(223,156,46)" fg:x="1164" fg:w="10"/><text x="98.2298%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.67%)</title><rect x="98.1481%" y="501" width="0.6734%" height="15" fill="rgb(215,10,40)" fg:x="1166" fg:w="8"/><text x="98.3981%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.67%)</title><rect x="98.1481%" y="485" width="0.6734%" height="15" fill="rgb(233,155,0)" fg:x="1166" fg:w="8"/><text x="98.3981%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.67%)</title><rect x="98.1481%" y="469" width="0.6734%" height="15" fill="rgb(247,78,6)" fg:x="1166" fg:w="8"/><text x="98.3981%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7374%" y="453" width="0.0842%" height="15" fill="rgb(237,217,21)" fg:x="1173" fg:w="1"/><text x="98.9874%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7374%" y="437" width="0.0842%" height="15" fill="rgb(212,1,21)" fg:x="1173" fg:w="1"/><text x="98.9874%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.7374%" y="421" width="0.0842%" height="15" fill="rgb(213,7,14)" fg:x="1173" fg:w="1"/><text x="98.9874%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.7374%" y="405" width="0.0842%" height="15" fill="rgb(225,84,14)" fg:x="1173" fg:w="1"/><text x="98.9874%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.7374%" y="389" width="0.0842%" height="15" fill="rgb(239,216,39)" fg:x="1173" fg:w="1"/><text x="98.9874%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="98.7374%" y="373" width="0.0842%" height="15" fill="rgb(253,29,23)" fg:x="1173" fg:w="1"/><text x="98.9874%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.7374%" y="357" width="0.0842%" height="15" fill="rgb(220,167,50)" fg:x="1173" fg:w="1"/><text x="98.9874%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.7374%" y="341" width="0.0842%" height="15" fill="rgb(232,141,1)" fg:x="1173" fg:w="1"/><text x="98.9874%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8215%" y="453" width="0.0842%" height="15" fill="rgb(222,210,1)" fg:x="1174" fg:w="1"/><text x="99.0715%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="98.8215%" y="517" width="0.1684%" height="15" fill="rgb(219,84,10)" fg:x="1174" fg:w="2"/><text x="99.0715%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="98.8215%" y="501" width="0.1684%" height="15" fill="rgb(245,188,6)" fg:x="1174" fg:w="2"/><text x="99.0715%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="98.8215%" y="485" width="0.1684%" height="15" fill="rgb(252,139,39)" fg:x="1174" fg:w="2"/><text x="99.0715%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="98.8215%" y="469" width="0.1684%" height="15" fill="rgb(218,42,26)" fg:x="1174" fg:w="2"/><text x="99.0715%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9057%" y="453" width="0.0842%" height="15" fill="rgb(237,226,51)" fg:x="1175" fg:w="1"/><text x="99.1557%" y="463.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="98.9899%" y="517" width="0.0842%" height="15" fill="rgb(246,15,17)" fg:x="1176" fg:w="1"/><text x="99.2399%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9899%" y="501" width="0.0842%" height="15" fill="rgb(228,170,42)" fg:x="1176" fg:w="1"/><text x="99.2399%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0741%" y="421" width="0.0842%" height="15" fill="rgb(248,118,53)" fg:x="1177" fg:w="1"/><text x="99.3241%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0741%" y="405" width="0.0842%" height="15" fill="rgb(207,30,10)" fg:x="1177" fg:w="1"/><text x="99.3241%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0741%" y="389" width="0.0842%" height="15" fill="rgb(217,104,38)" fg:x="1177" fg:w="1"/><text x="99.3241%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.17%)</title><rect x="99.0741%" y="517" width="0.1684%" height="15" fill="rgb(211,165,26)" fg:x="1177" fg:w="2"/><text x="99.3241%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="99.0741%" y="501" width="0.1684%" height="15" fill="rgb(247,38,9)" fg:x="1177" fg:w="2"/><text x="99.3241%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="99.0741%" y="485" width="0.1684%" height="15" fill="rgb(218,187,8)" fg:x="1177" fg:w="2"/><text x="99.3241%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="99.0741%" y="469" width="0.1684%" height="15" fill="rgb(247,94,28)" fg:x="1177" fg:w="2"/><text x="99.3241%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="99.0741%" y="453" width="0.1684%" height="15" fill="rgb(218,173,30)" fg:x="1177" fg:w="2"/><text x="99.3241%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.17%)</title><rect x="99.0741%" y="437" width="0.1684%" height="15" fill="rgb(245,45,36)" fg:x="1177" fg:w="2"/><text x="99.3241%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1582%" y="421" width="0.0842%" height="15" fill="rgb(221,172,44)" fg:x="1178" fg:w="1"/><text x="99.4082%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1582%" y="405" width="0.0842%" height="15" fill="rgb(222,45,12)" fg:x="1178" fg:w="1"/><text x="99.4082%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.1582%" y="389" width="0.0842%" height="15" fill="rgb(250,10,22)" fg:x="1178" fg:w="1"/><text x="99.4082%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1582%" y="373" width="0.0842%" height="15" fill="rgb(239,27,0)" fg:x="1178" fg:w="1"/><text x="99.4082%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1582%" y="357" width="0.0842%" height="15" fill="rgb(223,118,22)" fg:x="1178" fg:w="1"/><text x="99.4082%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.2424%" y="405" width="0.0842%" height="15" fill="rgb(251,81,25)" fg:x="1179" fg:w="1"/><text x="99.4924%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.59%)</title><rect x="98.8215%" y="533" width="0.5892%" height="15" fill="rgb(237,225,53)" fg:x="1174" fg:w="7"/><text x="99.0715%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.17%)</title><rect x="99.2424%" y="517" width="0.1684%" height="15" fill="rgb(237,186,51)" fg:x="1179" fg:w="2"/><text x="99.4924%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.17%)</title><rect x="99.2424%" y="501" width="0.1684%" height="15" fill="rgb(247,209,11)" fg:x="1179" fg:w="2"/><text x="99.4924%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="99.2424%" y="485" width="0.1684%" height="15" fill="rgb(223,109,27)" fg:x="1179" fg:w="2"/><text x="99.4924%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="99.2424%" y="469" width="0.1684%" height="15" fill="rgb(246,181,13)" fg:x="1179" fg:w="2"/><text x="99.4924%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="99.2424%" y="453" width="0.1684%" height="15" fill="rgb(234,57,44)" fg:x="1179" fg:w="2"/><text x="99.4924%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="99.2424%" y="437" width="0.1684%" height="15" fill="rgb(211,227,50)" fg:x="1179" fg:w="2"/><text x="99.4924%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="99.2424%" y="421" width="0.1684%" height="15" fill="rgb(254,57,34)" fg:x="1179" fg:w="2"/><text x="99.4924%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3266%" y="405" width="0.0842%" height="15" fill="rgb(227,212,26)" fg:x="1180" fg:w="1"/><text x="99.5766%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3266%" y="389" width="0.0842%" height="15" fill="rgb(244,169,44)" fg:x="1180" fg:w="1"/><text x="99.5766%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3266%" y="373" width="0.0842%" height="15" fill="rgb(236,135,50)" fg:x="1180" fg:w="1"/><text x="99.5766%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3266%" y="357" width="0.0842%" height="15" fill="rgb(241,89,30)" fg:x="1180" fg:w="1"/><text x="99.5766%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3266%" y="341" width="0.0842%" height="15" fill="rgb(206,113,34)" fg:x="1180" fg:w="1"/><text x="99.5766%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3266%" y="325" width="0.0842%" height="15" fill="rgb(218,104,52)" fg:x="1180" fg:w="1"/><text x="99.5766%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (19 samples, 1.60%)</title><rect x="97.8956%" y="549" width="1.5993%" height="15" fill="rgb(223,82,32)" fg:x="1163" fg:w="19"/><text x="98.1456%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.4108%" y="533" width="0.0842%" height="15" fill="rgb(249,219,30)" fg:x="1181" fg:w="1"/><text x="99.6608%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="99.4949%" y="517" width="0.0842%" height="15" fill="rgb(233,141,21)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4949%" y="501" width="0.0842%" height="15" fill="rgb(252,87,44)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4949%" y="485" width="0.0842%" height="15" fill="rgb(229,48,33)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.4949%" y="469" width="0.0842%" height="15" fill="rgb(229,23,22)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.4949%" y="453" width="0.0842%" height="15" fill="rgb(244,116,16)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.4949%" y="437" width="0.0842%" height="15" fill="rgb(247,45,10)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4949%" y="421" width="0.0842%" height="15" fill="rgb(228,60,29)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4949%" y="405" width="0.0842%" height="15" fill="rgb(205,129,15)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.4949%" y="389" width="0.0842%" height="15" fill="rgb(206,229,4)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.4949%" y="373" width="0.0842%" height="15" fill="rgb(249,191,30)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.4949%" y="357" width="0.0842%" height="15" fill="rgb(250,84,54)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.4949%" y="341" width="0.0842%" height="15" fill="rgb(207,25,53)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4949%" y="325" width="0.0842%" height="15" fill="rgb(235,40,8)" fg:x="1182" fg:w="1"/><text x="99.7449%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5791%" y="501" width="0.0842%" height="15" fill="rgb(226,169,33)" fg:x="1183" fg:w="1"/><text x="99.8291%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5791%" y="485" width="0.0842%" height="15" fill="rgb(238,110,8)" fg:x="1183" fg:w="1"/><text x="99.8291%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5791%" y="469" width="0.0842%" height="15" fill="rgb(251,206,12)" fg:x="1183" fg:w="1"/><text x="99.8291%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5791%" y="453" width="0.0842%" height="15" fill="rgb(248,171,18)" fg:x="1183" fg:w="1"/><text x="99.8291%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.5791%" y="437" width="0.0842%" height="15" fill="rgb(213,65,46)" fg:x="1183" fg:w="1"/><text x="99.8291%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.5791%" y="421" width="0.0842%" height="15" fill="rgb(211,154,15)" fg:x="1183" fg:w="1"/><text x="99.8291%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.5791%" y="405" width="0.0842%" height="15" fill="rgb(217,75,43)" fg:x="1183" fg:w="1"/><text x="99.8291%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="99.5791%" y="389" width="0.0842%" height="15" fill="rgb(230,32,33)" fg:x="1183" fg:w="1"/><text x="99.8291%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.5791%" y="373" width="0.0842%" height="15" fill="rgb(221,100,16)" fg:x="1183" fg:w="1"/><text x="99.8291%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="99.6633%" y="501" width="0.0842%" height="15" fill="rgb(212,129,47)" fg:x="1184" fg:w="1"/><text x="99.9133%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6633%" y="485" width="0.0842%" height="15" fill="rgb(239,217,47)" fg:x="1184" fg:w="1"/><text x="99.9133%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.7475%" y="421" width="0.0842%" height="15" fill="rgb(230,84,24)" fg:x="1185" fg:w="1"/><text x="99.9975%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.17%)</title><rect x="99.7475%" y="501" width="0.1684%" height="15" fill="rgb(214,153,51)" fg:x="1185" fg:w="2"/><text x="99.9975%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="99.7475%" y="485" width="0.1684%" height="15" fill="rgb(231,6,35)" fg:x="1185" fg:w="2"/><text x="99.9975%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="99.7475%" y="469" width="0.1684%" height="15" fill="rgb(229,122,30)" fg:x="1185" fg:w="2"/><text x="99.9975%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="99.7475%" y="453" width="0.1684%" height="15" fill="rgb(234,71,10)" fg:x="1185" fg:w="2"/><text x="99.9975%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="99.7475%" y="437" width="0.1684%" height="15" fill="rgb(215,173,26)" fg:x="1185" fg:w="2"/><text x="99.9975%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.8316%" y="421" width="0.0842%" height="15" fill="rgb(248,118,52)" fg:x="1186" fg:w="1"/><text x="100.0816%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8316%" y="405" width="0.0842%" height="15" fill="rgb(237,55,46)" fg:x="1186" fg:w="1"/><text x="100.0816%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8316%" y="389" width="0.0842%" height="15" fill="rgb(243,214,43)" fg:x="1186" fg:w="1"/><text x="100.0816%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.8316%" y="373" width="0.0842%" height="15" fill="rgb(252,123,30)" fg:x="1186" fg:w="1"/><text x="100.0816%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.8316%" y="357" width="0.0842%" height="15" fill="rgb(215,73,39)" fg:x="1186" fg:w="1"/><text x="100.0816%" y="367.50"></text></g><g><title>all (1,188 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(251,194,29)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="943.50"></text></g><g><title>simple-c60e4ccb (1,188 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(224,58,52)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="927.50">simple-c60e4ccb</text></g><g><title>_start (1,188 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(248,106,46)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="911.50">_start</text></g><g><title>__libc_start_main (1,188 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(223,80,29)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="895.50">__libc_start_main</text></g><g><title>main (1,188 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(243,137,9)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (1,188 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(235,121,28)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,188 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(219,121,41)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,188 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(251,60,6)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,188 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(208,12,30)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,188 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(207,176,36)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,188 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(211,188,29)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,188 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(220,184,37)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,188 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(239,87,37)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,188 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(232,113,44)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,188 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(246,25,39)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,188 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(247,30,13)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,188 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(230,176,35)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="687.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,188 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(222,23,18)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="671.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,188 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(234,86,8)" fg:x="0" fg:w="1188"/><text x="0.2500%" y="655.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (393 samples, 33.08%)</title><rect x="66.9192%" y="629" width="33.0808%" height="15" fill="rgb(206,218,47)" fg:x="795" fg:w="393"/><text x="67.1692%" y="639.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::rou..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (393 samples, 33.08%)</title><rect x="66.9192%" y="613" width="33.0808%" height="15" fill="rgb(229,35,31)" fg:x="795" fg:w="393"/><text x="67.1692%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (393 samples, 33.08%)</title><rect x="66.9192%" y="597" width="33.0808%" height="15" fill="rgb(242,81,7)" fg:x="795" fg:w="393"/><text x="67.1692%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (82 samples, 6.90%)</title><rect x="93.0976%" y="581" width="6.9024%" height="15" fill="rgb(231,11,35)" fg:x="1106" fg:w="82"/><text x="93.3476%" y="591.50">engine::s..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (82 samples, 6.90%)</title><rect x="93.0976%" y="565" width="6.9024%" height="15" fill="rgb(219,218,17)" fg:x="1106" fg:w="82"/><text x="93.3476%" y="575.50">engine::s..</text></g><g><title>kernel::model::EntityPtrResolver::world (6 samples, 0.51%)</title><rect x="99.4949%" y="549" width="0.5051%" height="15" fill="rgb(221,83,32)" fg:x="1182" fg:w="6"/><text x="99.7449%" y="559.50"></text></g><g><title>engine::session::Session::load_entity (6 samples, 0.51%)</title><rect x="99.4949%" y="533" width="0.5051%" height="15" fill="rgb(233,49,54)" fg:x="1182" fg:w="6"/><text x="99.7449%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.42%)</title><rect x="99.5791%" y="517" width="0.4209%" height="15" fill="rgb(206,18,51)" fg:x="1183" fg:w="5"/><text x="99.8291%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="99.9158%" y="501" width="0.0842%" height="15" fill="rgb(249,193,15)" fg:x="1187" fg:w="1"/><text x="100.1658%" y="511.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.9158%" y="485" width="0.0842%" height="15" fill="rgb(245,186,19)" fg:x="1187" fg:w="1"/><text x="100.1658%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.9158%" y="469" width="0.0842%" height="15" fill="rgb(230,4,24)" fg:x="1187" fg:w="1"/><text x="100.1658%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.9158%" y="453" width="0.0842%" height="15" fill="rgb(234,75,27)" fg:x="1187" fg:w="1"/><text x="100.1658%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.9158%" y="437" width="0.0842%" height="15" fill="rgb(244,187,35)" fg:x="1187" fg:w="1"/><text x="100.1658%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.9158%" y="421" width="0.0842%" height="15" fill="rgb(241,97,43)" fg:x="1187" fg:w="1"/><text x="100.1658%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.9158%" y="405" width="0.0842%" height="15" fill="rgb(236,94,2)" fg:x="1187" fg:w="1"/><text x="100.1658%" y="415.50"></text></g></svg></svg>