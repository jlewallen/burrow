<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1257"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0796%" y="501" width="0.0796%" height="15" fill="rgb(218,185,50)" fg:x="1" fg:w="1"/><text x="0.3296%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.0796%" y="565" width="0.1591%" height="15" fill="rgb(219,149,13)" fg:x="1" fg:w="2"/><text x="0.3296%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.0796%" y="549" width="0.1591%" height="15" fill="rgb(221,125,0)" fg:x="1" fg:w="2"/><text x="0.3296%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.0796%" y="533" width="0.1591%" height="15" fill="rgb(247,126,27)" fg:x="1" fg:w="2"/><text x="0.3296%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.16%)</title><rect x="0.0796%" y="517" width="0.1591%" height="15" fill="rgb(250,138,30)" fg:x="1" fg:w="2"/><text x="0.3296%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="0.1591%" y="501" width="0.0796%" height="15" fill="rgb(230,151,9)" fg:x="2" fg:w="1"/><text x="0.4091%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1591%" y="485" width="0.0796%" height="15" fill="rgb(233,80,38)" fg:x="2" fg:w="1"/><text x="0.4091%" y="495.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.3978%" y="453" width="0.3182%" height="15" fill="rgb(232,68,43)" fg:x="5" fg:w="4"/><text x="0.6478%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.7160%" y="437" width="0.1591%" height="15" fill="rgb(254,5,50)" fg:x="9" fg:w="2"/><text x="0.9660%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.8751%" y="437" width="0.1591%" height="15" fill="rgb(225,45,5)" fg:x="11" fg:w="2"/><text x="1.1251%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0342%" y="421" width="0.0796%" height="15" fill="rgb(239,22,3)" fg:x="13" fg:w="1"/><text x="1.2842%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0342%" y="405" width="0.0796%" height="15" fill="rgb(243,129,0)" fg:x="13" fg:w="1"/><text x="1.2842%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1933%" y="405" width="0.0796%" height="15" fill="rgb(223,164,0)" fg:x="15" fg:w="1"/><text x="1.4433%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2729%" y="373" width="0.0796%" height="15" fill="rgb(221,46,29)" fg:x="16" fg:w="1"/><text x="1.5229%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.11%)</title><rect x="0.3182%" y="501" width="1.1138%" height="15" fill="rgb(205,97,47)" fg:x="4" fg:w="14"/><text x="0.5682%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (14 samples, 1.11%)</title><rect x="0.3182%" y="485" width="1.1138%" height="15" fill="rgb(249,14,8)" fg:x="4" fg:w="14"/><text x="0.5682%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.11%)</title><rect x="0.3182%" y="469" width="1.1138%" height="15" fill="rgb(216,77,3)" fg:x="4" fg:w="14"/><text x="0.5682%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="0.7160%" y="453" width="0.7160%" height="15" fill="rgb(206,168,54)" fg:x="9" fg:w="9"/><text x="0.9660%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.0342%" y="437" width="0.3978%" height="15" fill="rgb(236,3,41)" fg:x="13" fg:w="5"/><text x="1.2842%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="1.1138%" y="421" width="0.3182%" height="15" fill="rgb(231,132,24)" fg:x="14" fg:w="4"/><text x="1.3638%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.2729%" y="405" width="0.1591%" height="15" fill="rgb(227,221,40)" fg:x="16" fg:w="2"/><text x="1.5229%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.2729%" y="389" width="0.1591%" height="15" fill="rgb(233,151,11)" fg:x="16" fg:w="2"/><text x="1.5229%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.3524%" y="373" width="0.0796%" height="15" fill="rgb(247,81,35)" fg:x="17" fg:w="1"/><text x="1.6024%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3524%" y="357" width="0.0796%" height="15" fill="rgb(243,128,48)" fg:x="17" fg:w="1"/><text x="1.6024%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.4320%" y="485" width="0.0796%" height="15" fill="rgb(253,16,10)" fg:x="18" fg:w="1"/><text x="1.6820%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.5911%" y="469" width="0.2387%" height="15" fill="rgb(228,67,27)" fg:x="20" fg:w="3"/><text x="1.8411%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7502%" y="453" width="0.0796%" height="15" fill="rgb(231,105,25)" fg:x="22" fg:w="1"/><text x="2.0002%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9093%" y="437" width="0.0796%" height="15" fill="rgb(213,166,47)" fg:x="24" fg:w="1"/><text x="2.1593%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9889%" y="437" width="0.0796%" height="15" fill="rgb(209,27,10)" fg:x="25" fg:w="1"/><text x="2.2389%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.0684%" y="421" width="0.0796%" height="15" fill="rgb(241,44,30)" fg:x="26" fg:w="1"/><text x="2.3184%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.1480%" y="405" width="0.0796%" height="15" fill="rgb(223,216,15)" fg:x="27" fg:w="1"/><text x="2.3980%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="1.4320%" y="501" width="0.8751%" height="15" fill="rgb(227,14,7)" fg:x="18" fg:w="11"/><text x="1.6820%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="1.5115%" y="485" width="0.7955%" height="15" fill="rgb(237,14,5)" fg:x="19" fg:w="10"/><text x="1.7615%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="1.8298%" y="469" width="0.4773%" height="15" fill="rgb(232,14,36)" fg:x="23" fg:w="6"/><text x="2.0798%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.9093%" y="453" width="0.3978%" height="15" fill="rgb(234,0,38)" fg:x="24" fg:w="5"/><text x="2.1593%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="2.0684%" y="437" width="0.2387%" height="15" fill="rgb(207,170,14)" fg:x="26" fg:w="3"/><text x="2.3184%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="2.1480%" y="421" width="0.1591%" height="15" fill="rgb(252,45,13)" fg:x="27" fg:w="2"/><text x="2.3980%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.2275%" y="405" width="0.0796%" height="15" fill="rgb(213,142,7)" fg:x="28" fg:w="1"/><text x="2.4775%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.2275%" y="389" width="0.0796%" height="15" fill="rgb(216,157,23)" fg:x="28" fg:w="1"/><text x="2.4775%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.2275%" y="373" width="0.0796%" height="15" fill="rgb(212,145,33)" fg:x="28" fg:w="1"/><text x="2.4775%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.39%)</title><rect x="0.0000%" y="581" width="2.3866%" height="15" fill="rgb(233,26,13)" fg:x="0" fg:w="30"/><text x="0.2500%" y="591.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (27 samples, 2.15%)</title><rect x="0.2387%" y="565" width="2.1480%" height="15" fill="rgb(219,196,19)" fg:x="3" fg:w="27"/><text x="0.4887%" y="575.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.15%)</title><rect x="0.2387%" y="549" width="2.1480%" height="15" fill="rgb(246,56,21)" fg:x="3" fg:w="27"/><text x="0.4887%" y="559.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (27 samples, 2.15%)</title><rect x="0.2387%" y="533" width="2.1480%" height="15" fill="rgb(222,28,53)" fg:x="3" fg:w="27"/><text x="0.4887%" y="543.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.15%)</title><rect x="0.2387%" y="517" width="2.1480%" height="15" fill="rgb(224,5,27)" fg:x="3" fg:w="27"/><text x="0.4887%" y="527.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;kernel::model::entity_ref::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.3071%" y="501" width="0.0796%" height="15" fill="rgb(220,153,33)" fg:x="29" fg:w="1"/><text x="2.5571%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="2.6253%" y="533" width="0.0796%" height="15" fill="rgb(226,58,19)" fg:x="33" fg:w="1"/><text x="2.8753%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="2.6253%" y="517" width="0.0796%" height="15" fill="rgb(239,112,23)" fg:x="33" fg:w="1"/><text x="2.8753%" y="527.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="3.0231%" y="453" width="0.0796%" height="15" fill="rgb(251,213,20)" fg:x="38" fg:w="1"/><text x="3.2731%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="3.0231%" y="437" width="0.0796%" height="15" fill="rgb(215,181,21)" fg:x="38" fg:w="1"/><text x="3.2731%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="3.0231%" y="421" width="0.0796%" height="15" fill="rgb(240,8,35)" fg:x="38" fg:w="1"/><text x="3.2731%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.0231%" y="405" width="0.0796%" height="15" fill="rgb(232,203,3)" fg:x="38" fg:w="1"/><text x="3.2731%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.0231%" y="389" width="0.0796%" height="15" fill="rgb(214,202,43)" fg:x="38" fg:w="1"/><text x="3.2731%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.1026%" y="437" width="0.0796%" height="15" fill="rgb(254,35,11)" fg:x="39" fg:w="1"/><text x="3.3526%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (3 samples, 0.24%)</title><rect x="3.1026%" y="453" width="0.2387%" height="15" fill="rgb(239,173,13)" fg:x="39" fg:w="3"/><text x="3.3526%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="3.1822%" y="437" width="0.1591%" height="15" fill="rgb(220,141,0)" fg:x="40" fg:w="2"/><text x="3.4322%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="3.1822%" y="421" width="0.1591%" height="15" fill="rgb(210,98,12)" fg:x="40" fg:w="2"/><text x="3.4322%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="3.1822%" y="405" width="0.1591%" height="15" fill="rgb(254,153,22)" fg:x="40" fg:w="2"/><text x="3.4322%" y="415.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (6 samples, 0.48%)</title><rect x="3.0231%" y="485" width="0.4773%" height="15" fill="rgb(247,223,17)" fg:x="38" fg:w="6"/><text x="3.2731%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (6 samples, 0.48%)</title><rect x="3.0231%" y="469" width="0.4773%" height="15" fill="rgb(246,56,7)" fg:x="38" fg:w="6"/><text x="3.2731%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="3.3413%" y="453" width="0.1591%" height="15" fill="rgb(240,226,12)" fg:x="42" fg:w="2"/><text x="3.5913%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.4208%" y="437" width="0.0796%" height="15" fill="rgb(205,87,46)" fg:x="43" fg:w="1"/><text x="3.6708%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.4208%" y="421" width="0.0796%" height="15" fill="rgb(245,214,51)" fg:x="43" fg:w="1"/><text x="3.6708%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.4208%" y="405" width="0.0796%" height="15" fill="rgb(223,172,33)" fg:x="43" fg:w="1"/><text x="3.6708%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="3.5800%" y="453" width="0.0796%" height="15" fill="rgb(227,203,34)" fg:x="45" fg:w="1"/><text x="3.8300%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="3.5800%" y="437" width="0.0796%" height="15" fill="rgb(248,143,44)" fg:x="45" fg:w="1"/><text x="3.8300%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="3.5800%" y="421" width="0.0796%" height="15" fill="rgb(226,162,5)" fg:x="45" fg:w="1"/><text x="3.8300%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.5800%" y="405" width="0.0796%" height="15" fill="rgb(211,143,1)" fg:x="45" fg:w="1"/><text x="3.8300%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.5800%" y="389" width="0.0796%" height="15" fill="rgb(224,96,15)" fg:x="45" fg:w="1"/><text x="3.8300%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="3.6595%" y="453" width="0.1591%" height="15" fill="rgb(222,4,38)" fg:x="46" fg:w="2"/><text x="3.9095%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="3.7391%" y="437" width="0.0796%" height="15" fill="rgb(253,228,15)" fg:x="47" fg:w="1"/><text x="3.9891%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="3.8186%" y="453" width="0.0796%" height="15" fill="rgb(242,194,12)" fg:x="48" fg:w="1"/><text x="4.0686%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.8186%" y="437" width="0.0796%" height="15" fill="rgb(214,177,31)" fg:x="48" fg:w="1"/><text x="4.0686%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.8186%" y="421" width="0.0796%" height="15" fill="rgb(226,58,51)" fg:x="48" fg:w="1"/><text x="4.0686%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (6 samples, 0.48%)</title><rect x="3.5004%" y="485" width="0.4773%" height="15" fill="rgb(250,119,16)" fg:x="44" fg:w="6"/><text x="3.7504%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (6 samples, 0.48%)</title><rect x="3.5004%" y="469" width="0.4773%" height="15" fill="rgb(223,128,53)" fg:x="44" fg:w="6"/><text x="3.7504%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="3.8982%" y="453" width="0.0796%" height="15" fill="rgb(251,199,15)" fg:x="49" fg:w="1"/><text x="4.1482%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.8982%" y="437" width="0.0796%" height="15" fill="rgb(235,168,42)" fg:x="49" fg:w="1"/><text x="4.1482%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.8982%" y="421" width="0.0796%" height="15" fill="rgb(250,210,17)" fg:x="49" fg:w="1"/><text x="4.1482%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="4.0573%" y="453" width="0.0796%" height="15" fill="rgb(226,36,41)" fg:x="51" fg:w="1"/><text x="4.3073%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.0573%" y="437" width="0.0796%" height="15" fill="rgb(225,87,10)" fg:x="51" fg:w="1"/><text x="4.3073%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.0573%" y="421" width="0.0796%" height="15" fill="rgb(228,83,9)" fg:x="51" fg:w="1"/><text x="4.3073%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="3.9777%" y="485" width="0.2387%" height="15" fill="rgb(225,16,36)" fg:x="50" fg:w="3"/><text x="4.2277%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="3.9777%" y="469" width="0.2387%" height="15" fill="rgb(242,198,13)" fg:x="50" fg:w="3"/><text x="4.2277%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="4.1368%" y="453" width="0.0796%" height="15" fill="rgb(239,25,51)" fg:x="52" fg:w="1"/><text x="4.3868%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="4.1368%" y="437" width="0.0796%" height="15" fill="rgb(239,28,37)" fg:x="52" fg:w="1"/><text x="4.3868%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.1368%" y="421" width="0.0796%" height="15" fill="rgb(234,70,17)" fg:x="52" fg:w="1"/><text x="4.3868%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.1368%" y="405" width="0.0796%" height="15" fill="rgb(231,215,53)" fg:x="52" fg:w="1"/><text x="4.3868%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::key (1 samples, 0.08%)</title><rect x="4.2164%" y="485" width="0.0796%" height="15" fill="rgb(218,140,42)" fg:x="53" fg:w="1"/><text x="4.4664%" y="495.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="4.2959%" y="485" width="0.1591%" height="15" fill="rgb(233,227,45)" fg:x="54" fg:w="2"/><text x="4.5459%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="4.2959%" y="469" width="0.1591%" height="15" fill="rgb(225,189,21)" fg:x="54" fg:w="2"/><text x="4.5459%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="4.3755%" y="453" width="0.0796%" height="15" fill="rgb(237,176,54)" fg:x="55" fg:w="1"/><text x="4.6255%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (22 samples, 1.75%)</title><rect x="2.7844%" y="501" width="1.7502%" height="15" fill="rgb(215,131,46)" fg:x="35" fg:w="22"/><text x="3.0344%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="4.4551%" y="485" width="0.0796%" height="15" fill="rgb(218,95,20)" fg:x="56" fg:w="1"/><text x="4.7051%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="4.6142%" y="485" width="0.0796%" height="15" fill="rgb(208,198,12)" fg:x="58" fg:w="1"/><text x="4.8642%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="4.6142%" y="469" width="0.0796%" height="15" fill="rgb(239,107,50)" fg:x="58" fg:w="1"/><text x="4.8642%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="4.6142%" y="453" width="0.0796%" height="15" fill="rgb(240,217,37)" fg:x="58" fg:w="1"/><text x="4.8642%" y="463.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="4.6937%" y="485" width="0.0796%" height="15" fill="rgb(242,197,49)" fg:x="59" fg:w="1"/><text x="4.9437%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="4.5346%" y="501" width="0.3182%" height="15" fill="rgb(219,171,17)" fg:x="57" fg:w="4"/><text x="4.7846%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="4.7733%" y="485" width="0.0796%" height="15" fill="rgb(209,81,40)" fg:x="60" fg:w="1"/><text x="5.0233%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="4.7733%" y="469" width="0.0796%" height="15" fill="rgb(237,156,30)" fg:x="60" fg:w="1"/><text x="5.0233%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="4.7733%" y="453" width="0.0796%" height="15" fill="rgb(212,127,16)" fg:x="60" fg:w="1"/><text x="5.0233%" y="463.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="4.7733%" y="437" width="0.0796%" height="15" fill="rgb(226,66,32)" fg:x="60" fg:w="1"/><text x="5.0233%" y="447.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="4.7733%" y="421" width="0.0796%" height="15" fill="rgb(245,22,46)" fg:x="60" fg:w="1"/><text x="5.0233%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="4.7733%" y="405" width="0.0796%" height="15" fill="rgb(210,112,21)" fg:x="60" fg:w="1"/><text x="5.0233%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.9324%" y="453" width="0.0796%" height="15" fill="rgb(207,118,39)" fg:x="62" fg:w="1"/><text x="5.1824%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.9324%" y="437" width="0.0796%" height="15" fill="rgb(205,206,35)" fg:x="62" fg:w="1"/><text x="5.1824%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.9324%" y="421" width="0.0796%" height="15" fill="rgb(222,120,2)" fg:x="62" fg:w="1"/><text x="5.1824%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.9324%" y="405" width="0.0796%" height="15" fill="rgb(205,38,18)" fg:x="62" fg:w="1"/><text x="5.1824%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.9324%" y="389" width="0.0796%" height="15" fill="rgb(226,61,2)" fg:x="62" fg:w="1"/><text x="5.1824%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9324%" y="373" width="0.0796%" height="15" fill="rgb(242,161,23)" fg:x="62" fg:w="1"/><text x="5.1824%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9324%" y="357" width="0.0796%" height="15" fill="rgb(213,13,52)" fg:x="62" fg:w="1"/><text x="5.1824%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.9324%" y="341" width="0.0796%" height="15" fill="rgb(246,209,47)" fg:x="62" fg:w="1"/><text x="5.1824%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.9324%" y="325" width="0.0796%" height="15" fill="rgb(214,41,3)" fg:x="62" fg:w="1"/><text x="5.1824%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.9324%" y="309" width="0.0796%" height="15" fill="rgb(236,119,38)" fg:x="62" fg:w="1"/><text x="5.1824%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.9324%" y="293" width="0.0796%" height="15" fill="rgb(218,50,11)" fg:x="62" fg:w="1"/><text x="5.1824%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9324%" y="277" width="0.0796%" height="15" fill="rgb(228,38,11)" fg:x="62" fg:w="1"/><text x="5.1824%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="5.0119%" y="437" width="0.3182%" height="15" fill="rgb(212,13,9)" fg:x="63" fg:w="4"/><text x="5.2619%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="5.0119%" y="421" width="0.3182%" height="15" fill="rgb(208,211,9)" fg:x="63" fg:w="4"/><text x="5.2619%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="5.0119%" y="405" width="0.3182%" height="15" fill="rgb(239,39,32)" fg:x="63" fg:w="4"/><text x="5.2619%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="5.0119%" y="389" width="0.3182%" height="15" fill="rgb(254,179,26)" fg:x="63" fg:w="4"/><text x="5.2619%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="5.0119%" y="373" width="0.3182%" height="15" fill="rgb(249,165,28)" fg:x="63" fg:w="4"/><text x="5.2619%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="5.0915%" y="357" width="0.2387%" height="15" fill="rgb(225,59,50)" fg:x="64" fg:w="3"/><text x="5.3415%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="5.0915%" y="341" width="0.2387%" height="15" fill="rgb(209,122,5)" fg:x="64" fg:w="3"/><text x="5.3415%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="5.0915%" y="325" width="0.2387%" height="15" fill="rgb(214,65,34)" fg:x="64" fg:w="3"/><text x="5.3415%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="5.0915%" y="309" width="0.2387%" height="15" fill="rgb(249,183,32)" fg:x="64" fg:w="3"/><text x="5.3415%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="5.0915%" y="293" width="0.2387%" height="15" fill="rgb(218,122,24)" fg:x="64" fg:w="3"/><text x="5.3415%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="5.0915%" y="277" width="0.2387%" height="15" fill="rgb(224,109,18)" fg:x="64" fg:w="3"/><text x="5.3415%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="5.0915%" y="261" width="0.2387%" height="15" fill="rgb(210,68,50)" fg:x="64" fg:w="3"/><text x="5.3415%" y="271.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (6 samples, 0.48%)</title><rect x="4.9324%" y="485" width="0.4773%" height="15" fill="rgb(212,184,34)" fg:x="62" fg:w="6"/><text x="5.1824%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="4.9324%" y="469" width="0.4773%" height="15" fill="rgb(238,105,48)" fg:x="62" fg:w="6"/><text x="5.1824%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="5.0119%" y="453" width="0.3978%" height="15" fill="rgb(222,134,54)" fg:x="63" fg:w="5"/><text x="5.2619%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.3302%" y="437" width="0.0796%" height="15" fill="rgb(246,24,43)" fg:x="67" fg:w="1"/><text x="5.5802%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.4097%" y="437" width="0.0796%" height="15" fill="rgb(227,169,22)" fg:x="68" fg:w="1"/><text x="5.6597%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.4893%" y="437" width="0.0796%" height="15" fill="rgb(253,152,4)" fg:x="69" fg:w="1"/><text x="5.7393%" y="447.50"></text></g><g><title>glob::is_dir (11 samples, 0.88%)</title><rect x="5.5688%" y="437" width="0.8751%" height="15" fill="rgb(219,158,36)" fg:x="70" fg:w="11"/><text x="5.8188%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (11 samples, 0.88%)</title><rect x="5.5688%" y="421" width="0.8751%" height="15" fill="rgb(251,128,40)" fg:x="70" fg:w="11"/><text x="5.8188%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (11 samples, 0.88%)</title><rect x="5.5688%" y="405" width="0.8751%" height="15" fill="rgb(254,101,39)" fg:x="70" fg:w="11"/><text x="5.8188%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (11 samples, 0.88%)</title><rect x="5.5688%" y="389" width="0.8751%" height="15" fill="rgb(221,168,40)" fg:x="70" fg:w="11"/><text x="5.8188%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (11 samples, 0.88%)</title><rect x="5.5688%" y="373" width="0.8751%" height="15" fill="rgb(221,14,27)" fg:x="70" fg:w="11"/><text x="5.8188%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (11 samples, 0.88%)</title><rect x="5.5688%" y="357" width="0.8751%" height="15" fill="rgb(207,36,43)" fg:x="70" fg:w="11"/><text x="5.8188%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (11 samples, 0.88%)</title><rect x="5.5688%" y="341" width="0.8751%" height="15" fill="rgb(240,172,53)" fg:x="70" fg:w="11"/><text x="5.8188%" y="351.50"></text></g><g><title>statx (11 samples, 0.88%)</title><rect x="5.5688%" y="325" width="0.8751%" height="15" fill="rgb(241,138,43)" fg:x="70" fg:w="11"/><text x="5.8188%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.11%)</title><rect x="5.4097%" y="469" width="1.1138%" height="15" fill="rgb(227,78,19)" fg:x="68" fg:w="14"/><text x="5.6597%" y="479.50"></text></g><g><title>glob::fill_todo (14 samples, 1.11%)</title><rect x="5.4097%" y="453" width="1.1138%" height="15" fill="rgb(215,127,44)" fg:x="68" fg:w="14"/><text x="5.6597%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="6.4439%" y="437" width="0.0796%" height="15" fill="rgb(227,13,10)" fg:x="81" fg:w="1"/><text x="6.6939%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="6.4439%" y="421" width="0.0796%" height="15" fill="rgb(249,177,6)" fg:x="81" fg:w="1"/><text x="6.6939%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="6.4439%" y="405" width="0.0796%" height="15" fill="rgb(215,154,26)" fg:x="81" fg:w="1"/><text x="6.6939%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="6.4439%" y="389" width="0.0796%" height="15" fill="rgb(250,168,20)" fg:x="81" fg:w="1"/><text x="6.6939%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="6.4439%" y="373" width="0.0796%" height="15" fill="rgb(222,53,38)" fg:x="81" fg:w="1"/><text x="6.6939%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="6.4439%" y="357" width="0.0796%" height="15" fill="rgb(245,154,5)" fg:x="81" fg:w="1"/><text x="6.6939%" y="367.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="6.4439%" y="341" width="0.0796%" height="15" fill="rgb(214,89,50)" fg:x="81" fg:w="1"/><text x="6.6939%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;glob::Paths&gt; (1 samples, 0.08%)</title><rect x="6.5235%" y="469" width="0.0796%" height="15" fill="rgb(232,73,14)" fg:x="82" fg:w="1"/><text x="6.7735%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="6.5235%" y="453" width="0.0796%" height="15" fill="rgb(230,101,20)" fg:x="82" fg:w="1"/><text x="6.7735%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.5235%" y="437" width="0.0796%" height="15" fill="rgb(208,56,28)" fg:x="82" fg:w="1"/><text x="6.7735%" y="447.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.7621%" y="437" width="0.0796%" height="15" fill="rgb(247,205,22)" fg:x="85" fg:w="1"/><text x="7.0121%" y="447.50"></text></g><g><title>std::path::Components::parse_next_component (1 samples, 0.08%)</title><rect x="6.7621%" y="421" width="0.0796%" height="15" fill="rgb(252,109,51)" fg:x="85" fg:w="1"/><text x="7.0121%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.08%)</title><rect x="6.7621%" y="405" width="0.0796%" height="15" fill="rgb(220,40,24)" fg:x="85" fg:w="1"/><text x="7.0121%" y="415.50"></text></g><g><title>std::path::Components::parse_next_component::{{closure}} (1 samples, 0.08%)</title><rect x="6.7621%" y="389" width="0.0796%" height="15" fill="rgb(251,108,7)" fg:x="85" fg:w="1"/><text x="7.0121%" y="399.50"></text></g><g><title>std::path::Components::is_sep_byte (1 samples, 0.08%)</title><rect x="6.7621%" y="373" width="0.0796%" height="15" fill="rgb(238,102,51)" fg:x="85" fg:w="1"/><text x="7.0121%" y="383.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="6.8417%" y="437" width="0.1591%" height="15" fill="rgb(219,149,34)" fg:x="86" fg:w="2"/><text x="7.0917%" y="447.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="6.9212%" y="421" width="0.0796%" height="15" fill="rgb(239,70,0)" fg:x="87" fg:w="1"/><text x="7.1712%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="6.9212%" y="405" width="0.0796%" height="15" fill="rgb(246,214,23)" fg:x="87" fg:w="1"/><text x="7.1712%" y="415.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="6.9212%" y="389" width="0.0796%" height="15" fill="rgb(239,221,51)" fg:x="87" fg:w="1"/><text x="7.1712%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="6.9212%" y="373" width="0.0796%" height="15" fill="rgb(254,62,14)" fg:x="87" fg:w="1"/><text x="7.1712%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="6.9212%" y="357" width="0.0796%" height="15" fill="rgb(253,57,33)" fg:x="87" fg:w="1"/><text x="7.1712%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="6.9212%" y="341" width="0.0796%" height="15" fill="rgb(229,34,6)" fg:x="87" fg:w="1"/><text x="7.1712%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="6.9212%" y="325" width="0.0796%" height="15" fill="rgb(235,191,23)" fg:x="87" fg:w="1"/><text x="7.1712%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0008%" y="437" width="0.0796%" height="15" fill="rgb(217,207,27)" fg:x="88" fg:w="1"/><text x="7.2508%" y="447.50"></text></g><g><title>glob::Pattern::new (3 samples, 0.24%)</title><rect x="7.0804%" y="437" width="0.2387%" height="15" fill="rgb(232,41,44)" fg:x="89" fg:w="3"/><text x="7.3304%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.1599%" y="421" width="0.1591%" height="15" fill="rgb(221,188,19)" fg:x="90" fg:w="2"/><text x="7.4099%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.2395%" y="405" width="0.0796%" height="15" fill="rgb(245,180,45)" fg:x="91" fg:w="1"/><text x="7.4895%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (32 samples, 2.55%)</title><rect x="4.8528%" y="501" width="2.5457%" height="15" fill="rgb(250,220,42)" fg:x="61" fg:w="32"/><text x="5.1028%" y="511.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_directory_sources (25 samples, 1.99%)</title><rect x="5.4097%" y="485" width="1.9889%" height="15" fill="rgb(234,16,34)" fg:x="68" fg:w="25"/><text x="5.6597%" y="495.50">p..</text></g><g><title>glob::glob (10 samples, 0.80%)</title><rect x="6.6030%" y="469" width="0.7955%" height="15" fill="rgb(233,217,23)" fg:x="83" fg:w="10"/><text x="6.8530%" y="479.50"></text></g><g><title>glob::glob_with (10 samples, 0.80%)</title><rect x="6.6030%" y="453" width="0.7955%" height="15" fill="rgb(209,22,46)" fg:x="83" fg:w="10"/><text x="6.8530%" y="463.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.08%)</title><rect x="7.3190%" y="437" width="0.0796%" height="15" fill="rgb(213,101,18)" fg:x="92" fg:w="1"/><text x="7.5690%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.3190%" y="421" width="0.0796%" height="15" fill="rgb(215,179,52)" fg:x="92" fg:w="1"/><text x="7.5690%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.3190%" y="405" width="0.0796%" height="15" fill="rgb(223,50,25)" fg:x="92" fg:w="1"/><text x="7.5690%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.3190%" y="389" width="0.0796%" height="15" fill="rgb(224,51,44)" fg:x="92" fg:w="1"/><text x="7.5690%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.3190%" y="373" width="0.0796%" height="15" fill="rgb(224,13,54)" fg:x="92" fg:w="1"/><text x="7.5690%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="7.3190%" y="357" width="0.0796%" height="15" fill="rgb(219,58,47)" fg:x="92" fg:w="1"/><text x="7.5690%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="7.3190%" y="341" width="0.0796%" height="15" fill="rgb(246,124,34)" fg:x="92" fg:w="1"/><text x="7.5690%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (3 samples, 0.24%)</title><rect x="7.3986%" y="501" width="0.2387%" height="15" fill="rgb(245,109,25)" fg:x="93" fg:w="3"/><text x="7.6486%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="7.4781%" y="485" width="0.1591%" height="15" fill="rgb(235,48,23)" fg:x="94" fg:w="2"/><text x="7.7281%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.32%)</title><rect x="7.6372%" y="501" width="0.3182%" height="15" fill="rgb(229,203,36)" fg:x="96" fg:w="4"/><text x="7.8872%" y="511.50"></text></g><g><title>clock_gettime (4 samples, 0.32%)</title><rect x="7.6372%" y="485" width="0.3182%" height="15" fill="rgb(234,180,9)" fg:x="96" fg:w="4"/><text x="7.8872%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (67 samples, 5.33%)</title><rect x="2.7049%" y="517" width="5.3302%" height="15" fill="rgb(228,98,45)" fg:x="34" fg:w="67"/><text x="2.9549%" y="527.50">kernel:..</text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="7.9554%" y="501" width="0.0796%" height="15" fill="rgb(240,24,36)" fg:x="100" fg:w="1"/><text x="8.2054%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="7.9554%" y="485" width="0.0796%" height="15" fill="rgb(227,154,19)" fg:x="100" fg:w="1"/><text x="8.2054%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.0350%" y="485" width="0.0796%" height="15" fill="rgb(231,2,48)" fg:x="101" fg:w="1"/><text x="8.2850%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0350%" y="469" width="0.0796%" height="15" fill="rgb(219,216,0)" fg:x="101" fg:w="1"/><text x="8.2850%" y="479.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::middleware (2 samples, 0.16%)</title><rect x="8.1146%" y="485" width="0.1591%" height="15" fill="rgb(251,88,0)" fg:x="102" fg:w="2"/><text x="8.3646%" y="495.50"></text></g><g><title>engine::session::Session::initialize (71 samples, 5.65%)</title><rect x="2.7049%" y="533" width="5.6484%" height="15" fill="rgb(242,45,45)" fg:x="34" fg:w="71"/><text x="2.9549%" y="543.50">engine:..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="8.0350%" y="517" width="0.3182%" height="15" fill="rgb(218,149,45)" fg:x="101" fg:w="4"/><text x="8.2850%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="8.0350%" y="501" width="0.3182%" height="15" fill="rgb(247,194,10)" fg:x="101" fg:w="4"/><text x="8.2850%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2737%" y="485" width="0.0796%" height="15" fill="rgb(234,33,37)" fg:x="104" fg:w="1"/><text x="8.5237%" y="495.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="8.3532%" y="533" width="0.0796%" height="15" fill="rgb(218,61,13)" fg:x="105" fg:w="1"/><text x="8.6032%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.3532%" y="517" width="0.0796%" height="15" fill="rgb(210,80,52)" fg:x="105" fg:w="1"/><text x="8.6032%" y="527.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (77 samples, 6.13%)</title><rect x="2.3866%" y="581" width="6.1257%" height="15" fill="rgb(218,203,27)" fg:x="30" fg:w="77"/><text x="2.6366%" y="591.50">&lt;engine:..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (76 samples, 6.05%)</title><rect x="2.4662%" y="565" width="6.0461%" height="15" fill="rgb(209,126,33)" fg:x="31" fg:w="76"/><text x="2.7162%" y="575.50">engine::..</text></g><g><title>engine::session::Session::new (76 samples, 6.05%)</title><rect x="2.4662%" y="549" width="6.0461%" height="15" fill="rgb(234,173,41)" fg:x="31" fg:w="76"/><text x="2.7162%" y="559.50">engine::..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="8.4328%" y="533" width="0.0796%" height="15" fill="rgb(228,166,9)" fg:x="106" fg:w="1"/><text x="8.6828%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="8.4328%" y="517" width="0.0796%" height="15" fill="rgb(208,124,43)" fg:x="106" fg:w="1"/><text x="8.6828%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.5123%" y="565" width="0.0796%" height="15" fill="rgb(212,154,38)" fg:x="107" fg:w="1"/><text x="8.7623%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.5123%" y="549" width="0.0796%" height="15" fill="rgb(246,179,35)" fg:x="107" fg:w="1"/><text x="8.7623%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5123%" y="533" width="0.0796%" height="15" fill="rgb(251,3,50)" fg:x="107" fg:w="1"/><text x="8.7623%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::EntityPtr&gt;&gt; (1 samples, 0.08%)</title><rect x="8.5919%" y="565" width="0.0796%" height="15" fill="rgb(219,96,8)" fg:x="108" fg:w="1"/><text x="8.8419%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="8.6714%" y="549" width="0.0796%" height="15" fill="rgb(251,216,33)" fg:x="109" fg:w="1"/><text x="8.9214%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.6714%" y="533" width="0.0796%" height="15" fill="rgb(243,145,29)" fg:x="109" fg:w="1"/><text x="8.9214%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::delete (1 samples, 0.08%)</title><rect x="8.7510%" y="549" width="0.0796%" height="15" fill="rgb(210,75,20)" fg:x="110" fg:w="1"/><text x="9.0010%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="8.8305%" y="485" width="0.0796%" height="15" fill="rgb(235,56,8)" fg:x="111" fg:w="1"/><text x="9.0805%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.8305%" y="469" width="0.0796%" height="15" fill="rgb(226,175,49)" fg:x="111" fg:w="1"/><text x="9.0805%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.8305%" y="453" width="0.0796%" height="15" fill="rgb(242,204,23)" fg:x="111" fg:w="1"/><text x="9.0805%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.8305%" y="437" width="0.0796%" height="15" fill="rgb(225,104,24)" fg:x="111" fg:w="1"/><text x="9.0805%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.8305%" y="421" width="0.0796%" height="15" fill="rgb(253,34,1)" fg:x="111" fg:w="1"/><text x="9.0805%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.8305%" y="405" width="0.0796%" height="15" fill="rgb(233,199,23)" fg:x="111" fg:w="1"/><text x="9.0805%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="8.8305%" y="389" width="0.0796%" height="15" fill="rgb(247,7,51)" fg:x="111" fg:w="1"/><text x="9.0805%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.8305%" y="373" width="0.0796%" height="15" fill="rgb(214,146,12)" fg:x="111" fg:w="1"/><text x="9.0805%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="8.8305%" y="517" width="0.1591%" height="15" fill="rgb(234,181,43)" fg:x="111" fg:w="2"/><text x="9.0805%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="8.8305%" y="501" width="0.1591%" height="15" fill="rgb(239,148,6)" fg:x="111" fg:w="2"/><text x="9.0805%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.9101%" y="485" width="0.0796%" height="15" fill="rgb(206,151,17)" fg:x="112" fg:w="1"/><text x="9.1601%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="8.9897%" y="469" width="0.0796%" height="15" fill="rgb(213,215,10)" fg:x="113" fg:w="1"/><text x="9.2397%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.1488%" y="437" width="0.0796%" height="15" fill="rgb(215,220,44)" fg:x="115" fg:w="1"/><text x="9.3988%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.3079%" y="405" width="0.0796%" height="15" fill="rgb(245,205,37)" fg:x="117" fg:w="1"/><text x="9.5579%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="9.1488%" y="453" width="0.3182%" height="15" fill="rgb(245,130,43)" fg:x="115" fg:w="4"/><text x="9.3988%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.2283%" y="437" width="0.2387%" height="15" fill="rgb(231,227,38)" fg:x="116" fg:w="3"/><text x="9.4783%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.3079%" y="421" width="0.1591%" height="15" fill="rgb(233,185,4)" fg:x="117" fg:w="2"/><text x="9.5579%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.3874%" y="405" width="0.0796%" height="15" fill="rgb(224,154,43)" fg:x="118" fg:w="1"/><text x="9.6374%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="9.5465%" y="437" width="0.3182%" height="15" fill="rgb(235,156,15)" fg:x="120" fg:w="4"/><text x="9.7965%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.5465%" y="421" width="0.3182%" height="15" fill="rgb(211,55,43)" fg:x="120" fg:w="4"/><text x="9.7965%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.7852%" y="405" width="0.0796%" height="15" fill="rgb(247,149,40)" fg:x="123" fg:w="1"/><text x="10.0352%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.9443%" y="357" width="0.0796%" height="15" fill="rgb(232,171,16)" fg:x="125" fg:w="1"/><text x="10.1943%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="9.9443%" y="421" width="0.2387%" height="15" fill="rgb(215,117,49)" fg:x="125" fg:w="3"/><text x="10.1943%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="9.9443%" y="405" width="0.2387%" height="15" fill="rgb(246,194,11)" fg:x="125" fg:w="3"/><text x="10.1943%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="9.9443%" y="389" width="0.2387%" height="15" fill="rgb(242,101,44)" fg:x="125" fg:w="3"/><text x="10.1943%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="9.9443%" y="373" width="0.2387%" height="15" fill="rgb(226,174,6)" fg:x="125" fg:w="3"/><text x="10.1943%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.0239%" y="357" width="0.1591%" height="15" fill="rgb(213,150,20)" fg:x="126" fg:w="2"/><text x="10.2739%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.1034%" y="341" width="0.0796%" height="15" fill="rgb(222,124,42)" fg:x="127" fg:w="1"/><text x="10.3534%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1034%" y="325" width="0.0796%" height="15" fill="rgb(250,19,47)" fg:x="127" fg:w="1"/><text x="10.3534%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.1830%" y="421" width="0.1591%" height="15" fill="rgb(241,217,19)" fg:x="128" fg:w="2"/><text x="10.4330%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.2625%" y="405" width="0.0796%" height="15" fill="rgb(207,210,34)" fg:x="129" fg:w="1"/><text x="10.5125%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.2625%" y="389" width="0.0796%" height="15" fill="rgb(244,45,4)" fg:x="129" fg:w="1"/><text x="10.5125%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.3421%" y="405" width="0.0796%" height="15" fill="rgb(252,134,50)" fg:x="130" fg:w="1"/><text x="10.5921%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.4216%" y="405" width="0.1591%" height="15" fill="rgb(238,74,2)" fg:x="131" fg:w="2"/><text x="10.6716%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.5012%" y="389" width="0.0796%" height="15" fill="rgb(226,58,46)" fg:x="132" fg:w="1"/><text x="10.7512%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.5012%" y="373" width="0.0796%" height="15" fill="rgb(232,83,35)" fg:x="132" fg:w="1"/><text x="10.7512%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.5012%" y="357" width="0.0796%" height="15" fill="rgb(212,148,47)" fg:x="132" fg:w="1"/><text x="10.7512%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.5012%" y="341" width="0.0796%" height="15" fill="rgb(235,29,1)" fg:x="132" fg:w="1"/><text x="10.7512%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.5012%" y="325" width="0.0796%" height="15" fill="rgb(247,55,37)" fg:x="132" fg:w="1"/><text x="10.7512%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.5012%" y="309" width="0.0796%" height="15" fill="rgb(222,48,3)" fg:x="132" fg:w="1"/><text x="10.7512%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="10.5807%" y="405" width="0.2387%" height="15" fill="rgb(234,21,33)" fg:x="133" fg:w="3"/><text x="10.8307%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="10.5807%" y="389" width="0.2387%" height="15" fill="rgb(247,178,53)" fg:x="133" fg:w="3"/><text x="10.8307%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.6603%" y="373" width="0.1591%" height="15" fill="rgb(225,75,7)" fg:x="134" fg:w="2"/><text x="10.9103%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.6603%" y="357" width="0.1591%" height="15" fill="rgb(219,199,7)" fg:x="134" fg:w="2"/><text x="10.9103%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.6603%" y="341" width="0.1591%" height="15" fill="rgb(209,93,42)" fg:x="134" fg:w="2"/><text x="10.9103%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.7399%" y="325" width="0.0796%" height="15" fill="rgb(240,175,17)" fg:x="135" fg:w="1"/><text x="10.9899%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.7399%" y="309" width="0.0796%" height="15" fill="rgb(232,106,7)" fg:x="135" fg:w="1"/><text x="10.9899%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.7399%" y="293" width="0.0796%" height="15" fill="rgb(242,106,43)" fg:x="135" fg:w="1"/><text x="10.9899%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="10.3421%" y="421" width="0.6364%" height="15" fill="rgb(242,61,37)" fg:x="130" fg:w="8"/><text x="10.5921%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.8194%" y="405" width="0.1591%" height="15" fill="rgb(205,72,10)" fg:x="136" fg:w="2"/><text x="11.0694%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.8194%" y="389" width="0.1591%" height="15" fill="rgb(214,184,36)" fg:x="136" fg:w="2"/><text x="11.0694%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="9.8648%" y="437" width="1.1933%" height="15" fill="rgb(206,107,18)" fg:x="124" fg:w="15"/><text x="10.1148%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.9785%" y="421" width="0.0796%" height="15" fill="rgb(210,75,5)" fg:x="138" fg:w="1"/><text x="11.2285%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (27 samples, 2.15%)</title><rect x="9.0692%" y="469" width="2.1480%" height="15" fill="rgb(205,3,19)" fg:x="114" fg:w="27"/><text x="9.3192%" y="479.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.75%)</title><rect x="9.4670%" y="453" width="1.7502%" height="15" fill="rgb(207,181,42)" fg:x="119" fg:w="22"/><text x="9.7170%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.0581%" y="437" width="0.1591%" height="15" fill="rgb(229,179,43)" fg:x="139" fg:w="2"/><text x="11.3081%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.0581%" y="421" width="0.1591%" height="15" fill="rgb(246,95,30)" fg:x="139" fg:w="2"/><text x="11.3081%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="11.0581%" y="405" width="0.1591%" height="15" fill="rgb(234,144,45)" fg:x="139" fg:w="2"/><text x="11.3081%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.2967%" y="437" width="0.0796%" height="15" fill="rgb(250,54,25)" fg:x="142" fg:w="1"/><text x="11.5467%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2967%" y="421" width="0.0796%" height="15" fill="rgb(215,195,40)" fg:x="142" fg:w="1"/><text x="11.5467%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="11.3763%" y="421" width="0.2387%" height="15" fill="rgb(233,188,42)" fg:x="143" fg:w="3"/><text x="11.6263%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.6150%" y="421" width="0.0796%" height="15" fill="rgb(247,227,35)" fg:x="146" fg:w="1"/><text x="11.8650%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.6150%" y="405" width="0.0796%" height="15" fill="rgb(249,124,27)" fg:x="146" fg:w="1"/><text x="11.8650%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.6945%" y="389" width="0.1591%" height="15" fill="rgb(219,207,25)" fg:x="147" fg:w="2"/><text x="11.9445%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8536%" y="325" width="0.0796%" height="15" fill="rgb(241,216,47)" fg:x="149" fg:w="1"/><text x="12.1036%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="11.8536%" y="389" width="0.1591%" height="15" fill="rgb(233,82,50)" fg:x="149" fg:w="2"/><text x="12.1036%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="11.8536%" y="373" width="0.1591%" height="15" fill="rgb(232,63,2)" fg:x="149" fg:w="2"/><text x="12.1036%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.8536%" y="357" width="0.1591%" height="15" fill="rgb(236,184,28)" fg:x="149" fg:w="2"/><text x="12.1036%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.8536%" y="341" width="0.1591%" height="15" fill="rgb(254,63,27)" fg:x="149" fg:w="2"/><text x="12.1036%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.9332%" y="325" width="0.0796%" height="15" fill="rgb(253,106,28)" fg:x="150" fg:w="1"/><text x="12.1832%" y="335.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="12.0127%" y="373" width="0.2387%" height="15" fill="rgb(225,141,39)" fg:x="151" fg:w="3"/><text x="12.2627%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.11%)</title><rect x="11.2172%" y="469" width="1.1138%" height="15" fill="rgb(222,157,20)" fg:x="141" fg:w="14"/><text x="11.4672%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.03%)</title><rect x="11.2967%" y="453" width="1.0342%" height="15" fill="rgb(210,190,9)" fg:x="142" fg:w="13"/><text x="11.5467%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="11.3763%" y="437" width="0.9547%" height="15" fill="rgb(242,167,7)" fg:x="143" fg:w="12"/><text x="11.6263%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="11.6945%" y="421" width="0.6364%" height="15" fill="rgb(227,82,41)" fg:x="147" fg:w="8"/><text x="11.9445%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="11.6945%" y="405" width="0.6364%" height="15" fill="rgb(222,131,13)" fg:x="147" fg:w="8"/><text x="11.9445%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="12.0127%" y="389" width="0.3182%" height="15" fill="rgb(221,98,26)" fg:x="151" fg:w="4"/><text x="12.2627%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.2514%" y="373" width="0.0796%" height="15" fill="rgb(251,63,52)" fg:x="154" fg:w="1"/><text x="12.5014%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2514%" y="357" width="0.0796%" height="15" fill="rgb(246,25,43)" fg:x="154" fg:w="1"/><text x="12.5014%" y="367.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="12.3309%" y="437" width="0.0796%" height="15" fill="rgb(247,167,15)" fg:x="155" fg:w="1"/><text x="12.5809%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.3309%" y="421" width="0.0796%" height="15" fill="rgb(240,104,42)" fg:x="155" fg:w="1"/><text x="12.5809%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.4105%" y="405" width="0.0796%" height="15" fill="rgb(224,54,6)" fg:x="156" fg:w="1"/><text x="12.6605%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="12.3309%" y="453" width="0.3182%" height="15" fill="rgb(244,108,35)" fg:x="155" fg:w="4"/><text x="12.5809%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (3 samples, 0.24%)</title><rect x="12.4105%" y="437" width="0.2387%" height="15" fill="rgb(216,154,2)" fg:x="156" fg:w="3"/><text x="12.6605%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="12.4105%" y="421" width="0.2387%" height="15" fill="rgb(222,8,47)" fg:x="156" fg:w="3"/><text x="12.6605%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="12.4901%" y="405" width="0.1591%" height="15" fill="rgb(252,93,1)" fg:x="157" fg:w="2"/><text x="12.7401%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.16%)</title><rect x="12.4901%" y="389" width="0.1591%" height="15" fill="rgb(223,226,51)" fg:x="157" fg:w="2"/><text x="12.7401%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="12.6492%" y="421" width="0.0796%" height="15" fill="rgb(206,147,9)" fg:x="159" fg:w="1"/><text x="12.8992%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7287%" y="421" width="0.0796%" height="15" fill="rgb(248,180,41)" fg:x="160" fg:w="1"/><text x="12.9787%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.7287%" y="405" width="0.0796%" height="15" fill="rgb(209,47,50)" fg:x="160" fg:w="1"/><text x="12.9787%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7287%" y="389" width="0.0796%" height="15" fill="rgb(243,65,31)" fg:x="160" fg:w="1"/><text x="12.9787%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7287%" y="373" width="0.0796%" height="15" fill="rgb(228,128,1)" fg:x="160" fg:w="1"/><text x="12.9787%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.0469%" y="373" width="0.1591%" height="15" fill="rgb(231,192,16)" fg:x="164" fg:w="2"/><text x="13.2969%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1265%" y="357" width="0.0796%" height="15" fill="rgb(224,26,40)" fg:x="165" fg:w="1"/><text x="13.3765%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="13.5243%" y="325" width="0.1591%" height="15" fill="rgb(214,192,17)" fg:x="170" fg:w="2"/><text x="13.7743%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6038%" y="309" width="0.0796%" height="15" fill="rgb(225,147,18)" fg:x="171" fg:w="1"/><text x="13.8538%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6038%" y="293" width="0.0796%" height="15" fill="rgb(205,35,11)" fg:x="171" fg:w="1"/><text x="13.8538%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="13.2060%" y="357" width="0.5569%" height="15" fill="rgb(242,40,42)" fg:x="166" fg:w="7"/><text x="13.4560%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="13.3652%" y="341" width="0.3978%" height="15" fill="rgb(250,170,13)" fg:x="168" fg:w="5"/><text x="13.6152%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="13.6834%" y="325" width="0.0796%" height="15" fill="rgb(240,161,28)" fg:x="172" fg:w="1"/><text x="13.9334%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="13.6834%" y="309" width="0.0796%" height="15" fill="rgb(245,179,12)" fg:x="172" fg:w="1"/><text x="13.9334%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.11%)</title><rect x="12.8878%" y="389" width="1.1138%" height="15" fill="rgb(250,92,32)" fg:x="162" fg:w="14"/><text x="13.1378%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="13.2060%" y="373" width="0.7955%" height="15" fill="rgb(233,10,40)" fg:x="166" fg:w="10"/><text x="13.4560%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="13.7629%" y="357" width="0.2387%" height="15" fill="rgb(217,98,1)" fg:x="173" fg:w="3"/><text x="14.0129%" y="367.50"></text></g><g><title>engine::session::Session::flush (70 samples, 5.57%)</title><rect x="8.6714%" y="565" width="5.5688%" height="15" fill="rgb(238,202,7)" fg:x="109" fg:w="70"/><text x="8.9214%" y="575.50">engine:..</text></g><g><title>engine::session::state::State::close (68 samples, 5.41%)</title><rect x="8.8305%" y="549" width="5.4097%" height="15" fill="rgb(222,91,3)" fg:x="111" fg:w="68"/><text x="9.0805%" y="559.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (68 samples, 5.41%)</title><rect x="8.8305%" y="533" width="5.4097%" height="15" fill="rgb(211,170,49)" fg:x="111" fg:w="68"/><text x="9.0805%" y="543.50">engine:..</text></g><g><title>core::iter::adapters::try_process (66 samples, 5.25%)</title><rect x="8.9897%" y="517" width="5.2506%" height="15" fill="rgb(253,139,18)" fg:x="113" fg:w="66"/><text x="9.2397%" y="527.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (66 samples, 5.25%)</title><rect x="8.9897%" y="501" width="5.2506%" height="15" fill="rgb(222,4,43)" fg:x="113" fg:w="66"/><text x="9.2397%" y="511.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (66 samples, 5.25%)</title><rect x="8.9897%" y="485" width="5.2506%" height="15" fill="rgb(207,205,12)" fg:x="113" fg:w="66"/><text x="9.2397%" y="495.50">engine..</text></g><g><title>kernel::model::any_entity_changes (24 samples, 1.91%)</title><rect x="12.3309%" y="469" width="1.9093%" height="15" fill="rgb(216,159,46)" fg:x="155" fg:w="24"/><text x="12.5809%" y="479.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.59%)</title><rect x="12.6492%" y="453" width="1.5911%" height="15" fill="rgb(236,115,1)" fg:x="159" fg:w="20"/><text x="12.8992%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.59%)</title><rect x="12.6492%" y="437" width="1.5911%" height="15" fill="rgb(251,35,33)" fg:x="159" fg:w="20"/><text x="12.8992%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.43%)</title><rect x="12.8083%" y="421" width="1.4320%" height="15" fill="rgb(248,62,51)" fg:x="161" fg:w="18"/><text x="13.0583%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.35%)</title><rect x="12.8878%" y="405" width="1.3524%" height="15" fill="rgb(254,180,19)" fg:x="162" fg:w="17"/><text x="13.1378%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="14.0016%" y="389" width="0.2387%" height="15" fill="rgb(217,100,32)" fg:x="176" fg:w="3"/><text x="14.2516%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1607%" y="373" width="0.0796%" height="15" fill="rgb(224,71,22)" fg:x="178" fg:w="1"/><text x="14.4107%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.3198%" y="485" width="0.0796%" height="15" fill="rgb(251,185,33)" fg:x="180" fg:w="1"/><text x="14.5698%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.3198%" y="469" width="0.0796%" height="15" fill="rgb(209,75,48)" fg:x="180" fg:w="1"/><text x="14.5698%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="14.3198%" y="533" width="0.1591%" height="15" fill="rgb(253,190,16)" fg:x="180" fg:w="2"/><text x="14.5698%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.3198%" y="517" width="0.1591%" height="15" fill="rgb(226,140,1)" fg:x="180" fg:w="2"/><text x="14.5698%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.3198%" y="501" width="0.1591%" height="15" fill="rgb(206,75,30)" fg:x="180" fg:w="2"/><text x="14.5698%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.3994%" y="485" width="0.0796%" height="15" fill="rgb(231,208,37)" fg:x="181" fg:w="1"/><text x="14.6494%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="14.4789%" y="469" width="0.0796%" height="15" fill="rgb(238,136,40)" fg:x="182" fg:w="1"/><text x="14.7289%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="14.4789%" y="453" width="0.0796%" height="15" fill="rgb(247,137,17)" fg:x="182" fg:w="1"/><text x="14.7289%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="14.2403%" y="565" width="0.3978%" height="15" fill="rgb(240,60,40)" fg:x="179" fg:w="5"/><text x="14.4903%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (5 samples, 0.40%)</title><rect x="14.2403%" y="549" width="0.3978%" height="15" fill="rgb(236,68,50)" fg:x="179" fg:w="5"/><text x="14.4903%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="14.4789%" y="533" width="0.1591%" height="15" fill="rgb(230,42,12)" fg:x="182" fg:w="2"/><text x="14.7289%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.4789%" y="517" width="0.1591%" height="15" fill="rgb(219,16,16)" fg:x="182" fg:w="2"/><text x="14.7289%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="14.4789%" y="501" width="0.1591%" height="15" fill="rgb(220,38,35)" fg:x="182" fg:w="2"/><text x="14.7289%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="14.4789%" y="485" width="0.1591%" height="15" fill="rgb(228,33,1)" fg:x="182" fg:w="2"/><text x="14.7289%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.5585%" y="469" width="0.0796%" height="15" fill="rgb(241,46,31)" fg:x="183" fg:w="1"/><text x="14.8085%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.5585%" y="453" width="0.0796%" height="15" fill="rgb(232,58,20)" fg:x="183" fg:w="1"/><text x="14.8085%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.5585%" y="437" width="0.0796%" height="15" fill="rgb(206,228,53)" fg:x="183" fg:w="1"/><text x="14.8085%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5585%" y="421" width="0.0796%" height="15" fill="rgb(206,88,33)" fg:x="183" fg:w="1"/><text x="14.8085%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7176%" y="517" width="0.0796%" height="15" fill="rgb(238,69,7)" fg:x="185" fg:w="1"/><text x="14.9676%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7176%" y="501" width="0.0796%" height="15" fill="rgb(250,21,46)" fg:x="185" fg:w="1"/><text x="14.9676%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7176%" y="485" width="0.0796%" height="15" fill="rgb(215,212,21)" fg:x="185" fg:w="1"/><text x="14.9676%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="14.7971%" y="517" width="0.0796%" height="15" fill="rgb(211,35,12)" fg:x="186" fg:w="1"/><text x="15.0471%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="14.7176%" y="533" width="0.3978%" height="15" fill="rgb(231,184,16)" fg:x="185" fg:w="5"/><text x="14.9676%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.8767%" y="517" width="0.2387%" height="15" fill="rgb(242,140,15)" fg:x="187" fg:w="3"/><text x="15.1267%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.8767%" y="501" width="0.2387%" height="15" fill="rgb(220,37,14)" fg:x="187" fg:w="3"/><text x="15.1267%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.9562%" y="485" width="0.1591%" height="15" fill="rgb(223,146,22)" fg:x="188" fg:w="2"/><text x="15.2062%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.9562%" y="469" width="0.1591%" height="15" fill="rgb(216,132,15)" fg:x="188" fg:w="2"/><text x="15.2062%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="14.9562%" y="453" width="0.1591%" height="15" fill="rgb(248,83,5)" fg:x="188" fg:w="2"/><text x="15.2062%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="14.7176%" y="549" width="0.4773%" height="15" fill="rgb(231,206,48)" fg:x="185" fg:w="6"/><text x="14.9676%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="15.1154%" y="533" width="0.0796%" height="15" fill="rgb(253,185,37)" fg:x="190" fg:w="1"/><text x="15.3654%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1154%" y="517" width="0.0796%" height="15" fill="rgb(208,21,44)" fg:x="190" fg:w="1"/><text x="15.3654%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1949%" y="485" width="0.0796%" height="15" fill="rgb(236,125,4)" fg:x="191" fg:w="1"/><text x="15.4449%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1949%" y="469" width="0.0796%" height="15" fill="rgb(226,134,25)" fg:x="191" fg:w="1"/><text x="15.4449%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="15.1949%" y="517" width="0.3182%" height="15" fill="rgb(250,201,12)" fg:x="191" fg:w="4"/><text x="15.4449%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="15.1949%" y="501" width="0.3182%" height="15" fill="rgb(225,92,18)" fg:x="191" fg:w="4"/><text x="15.4449%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="15.2745%" y="485" width="0.2387%" height="15" fill="rgb(227,35,22)" fg:x="192" fg:w="3"/><text x="15.5245%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="15.2745%" y="469" width="0.2387%" height="15" fill="rgb(214,180,52)" fg:x="192" fg:w="3"/><text x="15.5245%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="15.2745%" y="453" width="0.2387%" height="15" fill="rgb(233,55,38)" fg:x="192" fg:w="3"/><text x="15.5245%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="15.2745%" y="437" width="0.2387%" height="15" fill="rgb(249,171,43)" fg:x="192" fg:w="3"/><text x="15.5245%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="15.2745%" y="421" width="0.2387%" height="15" fill="rgb(239,87,2)" fg:x="192" fg:w="3"/><text x="15.5245%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="15.2745%" y="405" width="0.2387%" height="15" fill="rgb(248,141,5)" fg:x="192" fg:w="3"/><text x="15.5245%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="15.2745%" y="389" width="0.2387%" height="15" fill="rgb(238,33,42)" fg:x="192" fg:w="3"/><text x="15.5245%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="15.2745%" y="373" width="0.2387%" height="15" fill="rgb(231,57,19)" fg:x="192" fg:w="3"/><text x="15.5245%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="15.2745%" y="357" width="0.2387%" height="15" fill="rgb(214,78,53)" fg:x="192" fg:w="3"/><text x="15.5245%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="15.2745%" y="341" width="0.2387%" height="15" fill="rgb(206,132,29)" fg:x="192" fg:w="3"/><text x="15.5245%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="15.2745%" y="325" width="0.2387%" height="15" fill="rgb(248,174,31)" fg:x="192" fg:w="3"/><text x="15.5245%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="15.2745%" y="309" width="0.2387%" height="15" fill="rgb(221,87,13)" fg:x="192" fg:w="3"/><text x="15.5245%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.5131%" y="517" width="0.0796%" height="15" fill="rgb(223,197,17)" fg:x="195" fg:w="1"/><text x="15.7631%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (6 samples, 0.48%)</title><rect x="15.1949%" y="533" width="0.4773%" height="15" fill="rgb(220,144,50)" fg:x="191" fg:w="6"/><text x="15.4449%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.5927%" y="517" width="0.0796%" height="15" fill="rgb(244,201,11)" fg:x="196" fg:w="1"/><text x="15.8427%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5927%" y="501" width="0.0796%" height="15" fill="rgb(249,81,34)" fg:x="196" fg:w="1"/><text x="15.8427%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.5927%" y="485" width="0.0796%" height="15" fill="rgb(205,161,12)" fg:x="196" fg:w="1"/><text x="15.8427%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.5927%" y="469" width="0.0796%" height="15" fill="rgb(252,139,50)" fg:x="196" fg:w="1"/><text x="15.8427%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5927%" y="453" width="0.0796%" height="15" fill="rgb(205,169,14)" fg:x="196" fg:w="1"/><text x="15.8427%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6722%" y="533" width="0.0796%" height="15" fill="rgb(248,198,33)" fg:x="197" fg:w="1"/><text x="15.9222%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="15.7518%" y="517" width="0.0796%" height="15" fill="rgb(236,23,21)" fg:x="198" fg:w="1"/><text x="16.0018%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.7518%" y="501" width="0.0796%" height="15" fill="rgb(231,13,38)" fg:x="198" fg:w="1"/><text x="16.0018%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7518%" y="485" width="0.0796%" height="15" fill="rgb(239,139,21)" fg:x="198" fg:w="1"/><text x="16.0018%" y="495.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.7518%" y="469" width="0.0796%" height="15" fill="rgb(222,164,45)" fg:x="198" fg:w="1"/><text x="16.0018%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7518%" y="453" width="0.0796%" height="15" fill="rgb(230,52,27)" fg:x="198" fg:w="1"/><text x="16.0018%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="15.7518%" y="437" width="0.0796%" height="15" fill="rgb(227,143,42)" fg:x="198" fg:w="1"/><text x="16.0018%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="15.7518%" y="421" width="0.0796%" height="15" fill="rgb(249,127,1)" fg:x="198" fg:w="1"/><text x="16.0018%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8313%" y="485" width="0.0796%" height="15" fill="rgb(243,107,26)" fg:x="199" fg:w="1"/><text x="16.0813%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="15.8313%" y="501" width="0.1591%" height="15" fill="rgb(225,7,45)" fg:x="199" fg:w="2"/><text x="16.0813%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="15.9109%" y="485" width="0.0796%" height="15" fill="rgb(241,88,38)" fg:x="200" fg:w="1"/><text x="16.1609%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="15.7518%" y="533" width="0.3182%" height="15" fill="rgb(226,121,9)" fg:x="198" fg:w="4"/><text x="16.0018%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="15.8313%" y="517" width="0.2387%" height="15" fill="rgb(253,60,29)" fg:x="199" fg:w="3"/><text x="16.0813%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="15.9905%" y="501" width="0.0796%" height="15" fill="rgb(244,181,39)" fg:x="201" fg:w="1"/><text x="16.2405%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="16.0700%" y="405" width="0.0796%" height="15" fill="rgb(252,203,31)" fg:x="202" fg:w="1"/><text x="16.3200%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.1496%" y="405" width="0.1591%" height="15" fill="rgb(224,120,8)" fg:x="203" fg:w="2"/><text x="16.3996%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3087%" y="405" width="0.0796%" height="15" fill="rgb(205,171,54)" fg:x="205" fg:w="1"/><text x="16.5587%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (6 samples, 0.48%)</title><rect x="16.0700%" y="485" width="0.4773%" height="15" fill="rgb(235,89,11)" fg:x="202" fg:w="6"/><text x="16.3200%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="16.0700%" y="469" width="0.4773%" height="15" fill="rgb(212,180,28)" fg:x="202" fg:w="6"/><text x="16.3200%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="16.0700%" y="453" width="0.4773%" height="15" fill="rgb(247,84,49)" fg:x="202" fg:w="6"/><text x="16.3200%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="16.0700%" y="437" width="0.4773%" height="15" fill="rgb(236,187,52)" fg:x="202" fg:w="6"/><text x="16.3200%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="16.0700%" y="421" width="0.4773%" height="15" fill="rgb(227,24,15)" fg:x="202" fg:w="6"/><text x="16.3200%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.3882%" y="405" width="0.1591%" height="15" fill="rgb(227,211,13)" fg:x="206" fg:w="2"/><text x="16.6382%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.3882%" y="389" width="0.1591%" height="15" fill="rgb(245,52,14)" fg:x="206" fg:w="2"/><text x="16.6382%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4678%" y="373" width="0.0796%" height="15" fill="rgb(225,185,13)" fg:x="207" fg:w="1"/><text x="16.7178%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="16.5473%" y="485" width="0.0796%" height="15" fill="rgb(217,160,29)" fg:x="208" fg:w="1"/><text x="16.7973%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.5473%" y="469" width="0.0796%" height="15" fill="rgb(216,115,53)" fg:x="208" fg:w="1"/><text x="16.7973%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.5473%" y="453" width="0.0796%" height="15" fill="rgb(236,99,5)" fg:x="208" fg:w="1"/><text x="16.7973%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5473%" y="437" width="0.0796%" height="15" fill="rgb(222,60,38)" fg:x="208" fg:w="1"/><text x="16.7973%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.64%)</title><rect x="16.0700%" y="517" width="0.6364%" height="15" fill="rgb(212,82,22)" fg:x="202" fg:w="8"/><text x="16.3200%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (8 samples, 0.64%)</title><rect x="16.0700%" y="501" width="0.6364%" height="15" fill="rgb(214,48,28)" fg:x="202" fg:w="8"/><text x="16.3200%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.6269%" y="485" width="0.0796%" height="15" fill="rgb(245,196,50)" fg:x="209" fg:w="1"/><text x="16.8769%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7064%" y="485" width="0.0796%" height="15" fill="rgb(225,159,46)" fg:x="210" fg:w="1"/><text x="16.9564%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7064%" y="469" width="0.0796%" height="15" fill="rgb(207,195,48)" fg:x="210" fg:w="1"/><text x="16.9564%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="16.7064%" y="453" width="0.0796%" height="15" fill="rgb(240,73,3)" fg:x="210" fg:w="1"/><text x="16.9564%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="16.7860%" y="469" width="0.0796%" height="15" fill="rgb(245,57,23)" fg:x="211" fg:w="1"/><text x="17.0360%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="16.7860%" y="453" width="0.0796%" height="15" fill="rgb(240,75,18)" fg:x="211" fg:w="1"/><text x="17.0360%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="16.7860%" y="437" width="0.0796%" height="15" fill="rgb(238,168,12)" fg:x="211" fg:w="1"/><text x="17.0360%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="16.7860%" y="421" width="0.0796%" height="15" fill="rgb(226,20,40)" fg:x="211" fg:w="1"/><text x="17.0360%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="16.7860%" y="405" width="0.0796%" height="15" fill="rgb(224,130,35)" fg:x="211" fg:w="1"/><text x="17.0360%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="16.7860%" y="389" width="0.0796%" height="15" fill="rgb(225,63,41)" fg:x="211" fg:w="1"/><text x="17.0360%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7860%" y="373" width="0.0796%" height="15" fill="rgb(219,3,3)" fg:x="211" fg:w="1"/><text x="17.0360%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7860%" y="357" width="0.0796%" height="15" fill="rgb(218,157,4)" fg:x="211" fg:w="1"/><text x="17.0360%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (22 samples, 1.75%)</title><rect x="15.1949%" y="549" width="1.7502%" height="15" fill="rgb(232,76,36)" fg:x="191" fg:w="22"/><text x="15.4449%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.88%)</title><rect x="16.0700%" y="533" width="0.8751%" height="15" fill="rgb(247,36,0)" fg:x="202" fg:w="11"/><text x="16.3200%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="16.7064%" y="517" width="0.2387%" height="15" fill="rgb(205,2,34)" fg:x="210" fg:w="3"/><text x="16.9564%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="16.7064%" y="501" width="0.2387%" height="15" fill="rgb(239,136,13)" fg:x="210" fg:w="3"/><text x="16.9564%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="16.7860%" y="485" width="0.1591%" height="15" fill="rgb(253,122,12)" fg:x="211" fg:w="2"/><text x="17.0360%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8656%" y="469" width="0.0796%" height="15" fill="rgb(222,174,7)" fg:x="212" fg:w="1"/><text x="17.1156%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0247%" y="517" width="0.0796%" height="15" fill="rgb(208,191,42)" fg:x="214" fg:w="1"/><text x="17.2747%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0247%" y="501" width="0.0796%" height="15" fill="rgb(237,212,15)" fg:x="214" fg:w="1"/><text x="17.2747%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (32 samples, 2.55%)</title><rect x="14.6380%" y="565" width="2.5457%" height="15" fill="rgb(215,65,20)" fg:x="184" fg:w="32"/><text x="14.8880%" y="575.50">pl..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="16.9451%" y="549" width="0.2387%" height="15" fill="rgb(232,103,11)" fg:x="213" fg:w="3"/><text x="17.1951%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.9451%" y="533" width="0.2387%" height="15" fill="rgb(235,148,18)" fg:x="213" fg:w="3"/><text x="17.1951%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1042%" y="517" width="0.0796%" height="15" fill="rgb(240,173,7)" fg:x="215" fg:w="1"/><text x="17.3542%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="17.2633%" y="421" width="0.1591%" height="15" fill="rgb(228,182,25)" fg:x="217" fg:w="2"/><text x="17.5133%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (4 samples, 0.32%)</title><rect x="17.1838%" y="565" width="0.3182%" height="15" fill="rgb(247,3,52)" fg:x="216" fg:w="4"/><text x="17.4338%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (4 samples, 0.32%)</title><rect x="17.1838%" y="549" width="0.3182%" height="15" fill="rgb(226,155,8)" fg:x="216" fg:w="4"/><text x="17.4338%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="17.1838%" y="533" width="0.3182%" height="15" fill="rgb(243,195,38)" fg:x="216" fg:w="4"/><text x="17.4338%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (4 samples, 0.32%)</title><rect x="17.1838%" y="517" width="0.3182%" height="15" fill="rgb(254,181,33)" fg:x="216" fg:w="4"/><text x="17.4338%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="17.1838%" y="501" width="0.3182%" height="15" fill="rgb(232,98,23)" fg:x="216" fg:w="4"/><text x="17.4338%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (4 samples, 0.32%)</title><rect x="17.1838%" y="485" width="0.3182%" height="15" fill="rgb(205,23,10)" fg:x="216" fg:w="4"/><text x="17.4338%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="17.1838%" y="469" width="0.3182%" height="15" fill="rgb(212,124,38)" fg:x="216" fg:w="4"/><text x="17.4338%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="17.1838%" y="453" width="0.3182%" height="15" fill="rgb(228,207,2)" fg:x="216" fg:w="4"/><text x="17.4338%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="17.1838%" y="437" width="0.3182%" height="15" fill="rgb(215,120,22)" fg:x="216" fg:w="4"/><text x="17.4338%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4224%" y="421" width="0.0796%" height="15" fill="rgb(251,172,33)" fg:x="219" fg:w="1"/><text x="17.6724%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.5815%" y="501" width="0.0796%" height="15" fill="rgb(250,83,2)" fg:x="221" fg:w="1"/><text x="17.8315%" y="511.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="17.5815%" y="485" width="0.0796%" height="15" fill="rgb(210,132,53)" fg:x="221" fg:w="1"/><text x="17.8315%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.5815%" y="469" width="0.0796%" height="15" fill="rgb(221,208,36)" fg:x="221" fg:w="1"/><text x="17.8315%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="17.5815%" y="533" width="0.1591%" height="15" fill="rgb(205,192,46)" fg:x="221" fg:w="2"/><text x="17.8315%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="17.5815%" y="517" width="0.1591%" height="15" fill="rgb(223,163,14)" fg:x="221" fg:w="2"/><text x="17.8315%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6611%" y="501" width="0.0796%" height="15" fill="rgb(218,41,28)" fg:x="222" fg:w="1"/><text x="17.9111%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6611%" y="485" width="0.0796%" height="15" fill="rgb(235,104,10)" fg:x="222" fg:w="1"/><text x="17.9111%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.6611%" y="469" width="0.0796%" height="15" fill="rgb(246,17,4)" fg:x="222" fg:w="1"/><text x="17.9111%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.6611%" y="453" width="0.0796%" height="15" fill="rgb(240,7,16)" fg:x="222" fg:w="1"/><text x="17.9111%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.6611%" y="437" width="0.0796%" height="15" fill="rgb(213,160,23)" fg:x="222" fg:w="1"/><text x="17.9111%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.6611%" y="421" width="0.0796%" height="15" fill="rgb(251,179,49)" fg:x="222" fg:w="1"/><text x="17.9111%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.6611%" y="405" width="0.0796%" height="15" fill="rgb(247,198,10)" fg:x="222" fg:w="1"/><text x="17.9111%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="17.7407%" y="517" width="0.0796%" height="15" fill="rgb(220,65,29)" fg:x="223" fg:w="1"/><text x="17.9907%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.7407%" y="501" width="0.0796%" height="15" fill="rgb(237,171,28)" fg:x="223" fg:w="1"/><text x="17.9907%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="17.7407%" y="533" width="0.2387%" height="15" fill="rgb(228,44,26)" fg:x="223" fg:w="3"/><text x="17.9907%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="17.8202%" y="517" width="0.1591%" height="15" fill="rgb(216,210,27)" fg:x="224" fg:w="2"/><text x="18.0702%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.8202%" y="501" width="0.1591%" height="15" fill="rgb(252,10,17)" fg:x="224" fg:w="2"/><text x="18.0702%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="17.8998%" y="485" width="0.0796%" height="15" fill="rgb(214,172,30)" fg:x="225" fg:w="1"/><text x="18.1498%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="17.8998%" y="469" width="0.0796%" height="15" fill="rgb(253,130,48)" fg:x="225" fg:w="1"/><text x="18.1498%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.8998%" y="453" width="0.0796%" height="15" fill="rgb(226,99,43)" fg:x="225" fg:w="1"/><text x="18.1498%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8998%" y="437" width="0.0796%" height="15" fill="rgb(239,111,26)" fg:x="225" fg:w="1"/><text x="18.1498%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9793%" y="437" width="0.0796%" height="15" fill="rgb(240,27,53)" fg:x="226" fg:w="1"/><text x="18.2293%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="17.9793%" y="517" width="0.3182%" height="15" fill="rgb(254,163,12)" fg:x="226" fg:w="4"/><text x="18.2293%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="17.9793%" y="501" width="0.3182%" height="15" fill="rgb(225,51,48)" fg:x="226" fg:w="4"/><text x="18.2293%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="17.9793%" y="485" width="0.3182%" height="15" fill="rgb(205,19,32)" fg:x="226" fg:w="4"/><text x="18.2293%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="17.9793%" y="469" width="0.3182%" height="15" fill="rgb(218,119,26)" fg:x="226" fg:w="4"/><text x="18.2293%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="17.9793%" y="453" width="0.3182%" height="15" fill="rgb(231,173,33)" fg:x="226" fg:w="4"/><text x="18.2293%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="18.0589%" y="437" width="0.2387%" height="15" fill="rgb(241,100,29)" fg:x="227" fg:w="3"/><text x="18.3089%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.0589%" y="421" width="0.2387%" height="15" fill="rgb(250,194,34)" fg:x="227" fg:w="3"/><text x="18.3089%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="18.2975%" y="517" width="0.0796%" height="15" fill="rgb(215,23,50)" fg:x="230" fg:w="1"/><text x="18.5475%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3771%" y="453" width="0.0796%" height="15" fill="rgb(206,49,37)" fg:x="231" fg:w="1"/><text x="18.6271%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3771%" y="437" width="0.0796%" height="15" fill="rgb(247,39,21)" fg:x="231" fg:w="1"/><text x="18.6271%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3771%" y="421" width="0.0796%" height="15" fill="rgb(209,220,15)" fg:x="231" fg:w="1"/><text x="18.6271%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3771%" y="405" width="0.0796%" height="15" fill="rgb(206,41,33)" fg:x="231" fg:w="1"/><text x="18.6271%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="18.3771%" y="469" width="0.1591%" height="15" fill="rgb(221,225,45)" fg:x="231" fg:w="2"/><text x="18.6271%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.4566%" y="453" width="0.0796%" height="15" fill="rgb(216,27,18)" fg:x="232" fg:w="1"/><text x="18.7066%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.4566%" y="437" width="0.0796%" height="15" fill="rgb(250,193,34)" fg:x="232" fg:w="1"/><text x="18.7066%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.4566%" y="421" width="0.0796%" height="15" fill="rgb(227,215,20)" fg:x="232" fg:w="1"/><text x="18.7066%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.4566%" y="405" width="0.0796%" height="15" fill="rgb(242,211,27)" fg:x="232" fg:w="1"/><text x="18.7066%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4566%" y="389" width="0.0796%" height="15" fill="rgb(229,190,30)" fg:x="232" fg:w="1"/><text x="18.7066%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="17.9793%" y="533" width="0.6364%" height="15" fill="rgb(253,31,29)" fg:x="226" fg:w="8"/><text x="18.2293%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="18.3771%" y="517" width="0.2387%" height="15" fill="rgb(229,177,52)" fg:x="231" fg:w="3"/><text x="18.6271%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="18.3771%" y="501" width="0.2387%" height="15" fill="rgb(226,88,8)" fg:x="231" fg:w="3"/><text x="18.6271%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="18.3771%" y="485" width="0.2387%" height="15" fill="rgb(214,55,27)" fg:x="231" fg:w="3"/><text x="18.6271%" y="495.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="18.5362%" y="469" width="0.0796%" height="15" fill="rgb(233,202,5)" fg:x="233" fg:w="1"/><text x="18.7862%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.5362%" y="453" width="0.0796%" height="15" fill="rgb(251,49,30)" fg:x="233" fg:w="1"/><text x="18.7862%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.5362%" y="437" width="0.0796%" height="15" fill="rgb(235,18,52)" fg:x="233" fg:w="1"/><text x="18.7862%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="18.6158%" y="501" width="0.0796%" height="15" fill="rgb(250,111,51)" fg:x="234" fg:w="1"/><text x="18.8658%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="18.6158%" y="485" width="0.0796%" height="15" fill="rgb(218,13,25)" fg:x="234" fg:w="1"/><text x="18.8658%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="18.6158%" y="469" width="0.0796%" height="15" fill="rgb(248,96,7)" fg:x="234" fg:w="1"/><text x="18.8658%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (16 samples, 1.27%)</title><rect x="17.5020%" y="565" width="1.2729%" height="15" fill="rgb(217,31,15)" fg:x="220" fg:w="16"/><text x="17.7520%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (16 samples, 1.27%)</title><rect x="17.5020%" y="549" width="1.2729%" height="15" fill="rgb(228,59,49)" fg:x="220" fg:w="16"/><text x="17.7520%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="18.6158%" y="533" width="0.1591%" height="15" fill="rgb(210,152,38)" fg:x="234" fg:w="2"/><text x="18.8658%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="18.6158%" y="517" width="0.1591%" height="15" fill="rgb(206,71,11)" fg:x="234" fg:w="2"/><text x="18.8658%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="18.6953%" y="501" width="0.0796%" height="15" fill="rgb(244,199,5)" fg:x="235" fg:w="1"/><text x="18.9453%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="18.7749%" y="533" width="0.0796%" height="15" fill="rgb(253,49,1)" fg:x="236" fg:w="1"/><text x="19.0249%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7749%" y="517" width="0.0796%" height="15" fill="rgb(225,206,40)" fg:x="236" fg:w="1"/><text x="19.0249%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.8544%" y="533" width="0.0796%" height="15" fill="rgb(243,116,47)" fg:x="237" fg:w="1"/><text x="19.1044%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="18.9340%" y="533" width="0.0796%" height="15" fill="rgb(219,225,16)" fg:x="238" fg:w="1"/><text x="19.1840%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.9340%" y="517" width="0.0796%" height="15" fill="rgb(233,29,47)" fg:x="238" fg:w="1"/><text x="19.1840%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (4 samples, 0.32%)</title><rect x="18.7749%" y="549" width="0.3182%" height="15" fill="rgb(250,179,18)" fg:x="236" fg:w="4"/><text x="19.0249%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.0135%" y="533" width="0.0796%" height="15" fill="rgb(215,176,6)" fg:x="239" fg:w="1"/><text x="19.2635%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.0135%" y="517" width="0.0796%" height="15" fill="rgb(214,117,39)" fg:x="239" fg:w="1"/><text x="19.2635%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.0135%" y="501" width="0.0796%" height="15" fill="rgb(247,183,36)" fg:x="239" fg:w="1"/><text x="19.2635%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.0931%" y="501" width="0.1591%" height="15" fill="rgb(237,200,3)" fg:x="240" fg:w="2"/><text x="19.3431%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="19.0931%" y="549" width="0.3182%" height="15" fill="rgb(212,220,24)" fg:x="240" fg:w="4"/><text x="19.3431%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="19.0931%" y="533" width="0.3182%" height="15" fill="rgb(245,216,20)" fg:x="240" fg:w="4"/><text x="19.3431%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="19.0931%" y="517" width="0.3182%" height="15" fill="rgb(219,124,7)" fg:x="240" fg:w="4"/><text x="19.3431%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.2522%" y="501" width="0.1591%" height="15" fill="rgb(227,167,8)" fg:x="242" fg:w="2"/><text x="19.5022%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.3317%" y="485" width="0.0796%" height="15" fill="rgb(241,37,2)" fg:x="243" fg:w="1"/><text x="19.5817%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3317%" y="469" width="0.0796%" height="15" fill="rgb(238,134,33)" fg:x="243" fg:w="1"/><text x="19.5817%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="19.4113%" y="549" width="0.0796%" height="15" fill="rgb(248,48,27)" fg:x="244" fg:w="1"/><text x="19.6613%" y="559.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="19.4113%" y="533" width="0.0796%" height="15" fill="rgb(212,14,16)" fg:x="244" fg:w="1"/><text x="19.6613%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="19.4113%" y="517" width="0.0796%" height="15" fill="rgb(217,205,37)" fg:x="244" fg:w="1"/><text x="19.6613%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="19.5704%" y="453" width="0.0796%" height="15" fill="rgb(233,185,47)" fg:x="246" fg:w="1"/><text x="19.8204%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.5704%" y="437" width="0.0796%" height="15" fill="rgb(244,88,8)" fg:x="246" fg:w="1"/><text x="19.8204%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.5704%" y="421" width="0.0796%" height="15" fill="rgb(213,0,20)" fg:x="246" fg:w="1"/><text x="19.8204%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.5704%" y="405" width="0.0796%" height="15" fill="rgb(238,159,36)" fg:x="246" fg:w="1"/><text x="19.8204%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.5704%" y="389" width="0.0796%" height="15" fill="rgb(253,173,17)" fg:x="246" fg:w="1"/><text x="19.8204%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.5704%" y="373" width="0.0796%" height="15" fill="rgb(221,23,28)" fg:x="246" fg:w="1"/><text x="19.8204%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5704%" y="357" width="0.0796%" height="15" fill="rgb(218,113,15)" fg:x="246" fg:w="1"/><text x="19.8204%" y="367.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="19.4909%" y="469" width="0.2387%" height="15" fill="rgb(233,58,3)" fg:x="245" fg:w="3"/><text x="19.7409%" y="479.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="19.6500%" y="453" width="0.0796%" height="15" fill="rgb(250,46,35)" fg:x="247" fg:w="1"/><text x="19.9000%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.6500%" y="437" width="0.0796%" height="15" fill="rgb(210,169,11)" fg:x="247" fg:w="1"/><text x="19.9000%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="19.4909%" y="549" width="0.3978%" height="15" fill="rgb(246,88,19)" fg:x="245" fg:w="5"/><text x="19.7409%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="19.4909%" y="533" width="0.3978%" height="15" fill="rgb(206,81,49)" fg:x="245" fg:w="5"/><text x="19.7409%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="19.4909%" y="517" width="0.3978%" height="15" fill="rgb(232,144,18)" fg:x="245" fg:w="5"/><text x="19.7409%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.40%)</title><rect x="19.4909%" y="501" width="0.3978%" height="15" fill="rgb(235,2,27)" fg:x="245" fg:w="5"/><text x="19.7409%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="19.4909%" y="485" width="0.3978%" height="15" fill="rgb(239,157,39)" fg:x="245" fg:w="5"/><text x="19.7409%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="19.7295%" y="469" width="0.1591%" height="15" fill="rgb(220,11,17)" fg:x="248" fg:w="2"/><text x="19.9795%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="19.7295%" y="453" width="0.1591%" height="15" fill="rgb(243,94,50)" fg:x="248" fg:w="2"/><text x="19.9795%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.7295%" y="437" width="0.1591%" height="15" fill="rgb(218,22,0)" fg:x="248" fg:w="2"/><text x="19.9795%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8091%" y="421" width="0.0796%" height="15" fill="rgb(249,70,21)" fg:x="249" fg:w="1"/><text x="20.0591%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8091%" y="405" width="0.0796%" height="15" fill="rgb(245,111,46)" fg:x="249" fg:w="1"/><text x="20.0591%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (2 samples, 0.16%)</title><rect x="19.8886%" y="549" width="0.1591%" height="15" fill="rgb(244,183,12)" fg:x="250" fg:w="2"/><text x="20.1386%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;kernel::model::entity_ref::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9682%" y="533" width="0.0796%" height="15" fill="rgb(207,117,0)" fg:x="251" fg:w="1"/><text x="20.2182%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0477%" y="517" width="0.0796%" height="15" fill="rgb(206,20,43)" fg:x="252" fg:w="1"/><text x="20.2977%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0477%" y="501" width="0.0796%" height="15" fill="rgb(221,104,11)" fg:x="252" fg:w="1"/><text x="20.2977%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.0477%" y="485" width="0.0796%" height="15" fill="rgb(254,36,50)" fg:x="252" fg:w="1"/><text x="20.2977%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.0477%" y="469" width="0.0796%" height="15" fill="rgb(252,17,15)" fg:x="252" fg:w="1"/><text x="20.2977%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.0477%" y="453" width="0.0796%" height="15" fill="rgb(219,129,43)" fg:x="252" fg:w="1"/><text x="20.2977%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="20.0477%" y="437" width="0.0796%" height="15" fill="rgb(205,34,45)" fg:x="252" fg:w="1"/><text x="20.2977%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="20.0477%" y="421" width="0.0796%" height="15" fill="rgb(251,201,32)" fg:x="252" fg:w="1"/><text x="20.2977%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.1273%" y="517" width="0.0796%" height="15" fill="rgb(205,56,0)" fg:x="253" fg:w="1"/><text x="20.3773%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.2068%" y="517" width="0.0796%" height="15" fill="rgb(211,193,27)" fg:x="254" fg:w="1"/><text x="20.4568%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="20.2068%" y="501" width="0.0796%" height="15" fill="rgb(231,100,42)" fg:x="254" fg:w="1"/><text x="20.4568%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.2068%" y="485" width="0.0796%" height="15" fill="rgb(245,85,27)" fg:x="254" fg:w="1"/><text x="20.4568%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="20.0477%" y="533" width="0.3182%" height="15" fill="rgb(241,76,24)" fg:x="252" fg:w="4"/><text x="20.2977%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="20.2864%" y="517" width="0.0796%" height="15" fill="rgb(249,157,15)" fg:x="255" fg:w="1"/><text x="20.5364%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="20.3660%" y="485" width="0.0796%" height="15" fill="rgb(222,218,25)" fg:x="256" fg:w="1"/><text x="20.6160%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.3660%" y="469" width="0.0796%" height="15" fill="rgb(252,156,52)" fg:x="256" fg:w="1"/><text x="20.6160%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.3660%" y="453" width="0.0796%" height="15" fill="rgb(211,185,7)" fg:x="256" fg:w="1"/><text x="20.6160%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.3660%" y="437" width="0.0796%" height="15" fill="rgb(234,108,24)" fg:x="256" fg:w="1"/><text x="20.6160%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6842%" y="437" width="0.0796%" height="15" fill="rgb(227,218,2)" fg:x="260" fg:w="1"/><text x="20.9342%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="20.4455%" y="485" width="0.3978%" height="15" fill="rgb(224,0,36)" fg:x="257" fg:w="5"/><text x="20.6955%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="20.4455%" y="469" width="0.3978%" height="15" fill="rgb(233,201,10)" fg:x="257" fg:w="5"/><text x="20.6955%" y="479.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (3 samples, 0.24%)</title><rect x="20.6046%" y="453" width="0.2387%" height="15" fill="rgb(252,209,14)" fg:x="259" fg:w="3"/><text x="20.8546%" y="463.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="20.7637%" y="437" width="0.0796%" height="15" fill="rgb(205,93,49)" fg:x="261" fg:w="1"/><text x="21.0137%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7637%" y="421" width="0.0796%" height="15" fill="rgb(234,116,45)" fg:x="261" fg:w="1"/><text x="21.0137%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="21.0024%" y="437" width="0.0796%" height="15" fill="rgb(248,89,35)" fg:x="264" fg:w="1"/><text x="21.2524%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="21.0024%" y="421" width="0.0796%" height="15" fill="rgb(233,167,45)" fg:x="264" fg:w="1"/><text x="21.2524%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.0024%" y="405" width="0.0796%" height="15" fill="rgb(248,228,14)" fg:x="264" fg:w="1"/><text x="21.2524%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.0024%" y="389" width="0.0796%" height="15" fill="rgb(246,91,14)" fg:x="264" fg:w="1"/><text x="21.2524%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.0024%" y="373" width="0.0796%" height="15" fill="rgb(227,142,5)" fg:x="264" fg:w="1"/><text x="21.2524%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.0024%" y="357" width="0.0796%" height="15" fill="rgb(221,63,33)" fg:x="264" fg:w="1"/><text x="21.2524%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.0024%" y="341" width="0.0796%" height="15" fill="rgb(233,49,0)" fg:x="264" fg:w="1"/><text x="21.2524%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="21.0819%" y="405" width="0.7160%" height="15" fill="rgb(251,115,38)" fg:x="265" fg:w="9"/><text x="21.3319%" y="415.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="21.2411%" y="389" width="0.5569%" height="15" fill="rgb(231,214,32)" fg:x="267" fg:w="7"/><text x="21.4911%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="21.3206%" y="373" width="0.4773%" height="15" fill="rgb(248,73,46)" fg:x="268" fg:w="6"/><text x="21.5706%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="21.4002%" y="357" width="0.3978%" height="15" fill="rgb(237,156,4)" fg:x="269" fg:w="5"/><text x="21.6502%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="21.5593%" y="341" width="0.2387%" height="15" fill="rgb(227,132,2)" fg:x="271" fg:w="3"/><text x="21.8093%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="21.5593%" y="325" width="0.2387%" height="15" fill="rgb(248,161,9)" fg:x="271" fg:w="3"/><text x="21.8093%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="21.6388%" y="309" width="0.1591%" height="15" fill="rgb(238,77,38)" fg:x="272" fg:w="2"/><text x="21.8888%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (11 samples, 0.88%)</title><rect x="21.0819%" y="421" width="0.8751%" height="15" fill="rgb(222,166,40)" fg:x="265" fg:w="11"/><text x="21.3319%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.7979%" y="405" width="0.1591%" height="15" fill="rgb(214,168,45)" fg:x="274" fg:w="2"/><text x="22.0479%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.7979%" y="389" width="0.1591%" height="15" fill="rgb(226,64,37)" fg:x="274" fg:w="2"/><text x="22.0479%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.7979%" y="373" width="0.1591%" height="15" fill="rgb(232,210,43)" fg:x="274" fg:w="2"/><text x="22.0479%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.0366%" y="405" width="0.0796%" height="15" fill="rgb(214,76,33)" fg:x="277" fg:w="1"/><text x="22.2866%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="22.1161%" y="405" width="0.1591%" height="15" fill="rgb(210,78,5)" fg:x="278" fg:w="2"/><text x="22.3661%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.1161%" y="389" width="0.1591%" height="15" fill="rgb(211,107,37)" fg:x="278" fg:w="2"/><text x="22.3661%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.1957%" y="373" width="0.0796%" height="15" fill="rgb(249,67,16)" fg:x="279" fg:w="1"/><text x="22.4457%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="22.1957%" y="357" width="0.0796%" height="15" fill="rgb(222,114,31)" fg:x="279" fg:w="1"/><text x="22.4457%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="22.2753%" y="389" width="0.3182%" height="15" fill="rgb(242,118,19)" fg:x="280" fg:w="4"/><text x="22.5253%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="22.3548%" y="373" width="0.2387%" height="15" fill="rgb(223,115,1)" fg:x="281" fg:w="3"/><text x="22.6048%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="22.3548%" y="357" width="0.2387%" height="15" fill="rgb(241,182,54)" fg:x="281" fg:w="3"/><text x="22.6048%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="22.4344%" y="341" width="0.1591%" height="15" fill="rgb(244,166,36)" fg:x="282" fg:w="2"/><text x="22.6844%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="22.4344%" y="325" width="0.1591%" height="15" fill="rgb(241,52,43)" fg:x="282" fg:w="2"/><text x="22.6844%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.4344%" y="309" width="0.1591%" height="15" fill="rgb(236,82,9)" fg:x="282" fg:w="2"/><text x="22.6844%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.5139%" y="293" width="0.0796%" height="15" fill="rgb(241,119,0)" fg:x="283" fg:w="1"/><text x="22.7639%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.5139%" y="277" width="0.0796%" height="15" fill="rgb(221,19,22)" fg:x="283" fg:w="1"/><text x="22.7639%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="22.5935%" y="389" width="0.4773%" height="15" fill="rgb(254,144,35)" fg:x="284" fg:w="6"/><text x="22.8435%" y="399.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="22.5935%" y="373" width="0.4773%" height="15" fill="rgb(246,132,30)" fg:x="284" fg:w="6"/><text x="22.8435%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="22.8321%" y="357" width="0.2387%" height="15" fill="rgb(234,69,28)" fg:x="287" fg:w="3"/><text x="23.0821%" y="367.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="23.1504%" y="373" width="0.0796%" height="15" fill="rgb(219,106,47)" fg:x="291" fg:w="1"/><text x="23.4004%" y="383.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (1 samples, 0.08%)</title><rect x="23.2299%" y="373" width="0.0796%" height="15" fill="rgb(218,79,24)" fg:x="292" fg:w="1"/><text x="23.4799%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="23.3095%" y="373" width="0.3978%" height="15" fill="rgb(225,26,21)" fg:x="293" fg:w="5"/><text x="23.5595%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="23.4686%" y="357" width="0.2387%" height="15" fill="rgb(217,68,49)" fg:x="295" fg:w="3"/><text x="23.7186%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="23.4686%" y="341" width="0.2387%" height="15" fill="rgb(220,204,28)" fg:x="295" fg:w="3"/><text x="23.7186%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="23.4686%" y="325" width="0.2387%" height="15" fill="rgb(237,208,43)" fg:x="295" fg:w="3"/><text x="23.7186%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="23.4686%" y="309" width="0.2387%" height="15" fill="rgb(213,97,42)" fg:x="295" fg:w="3"/><text x="23.7186%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="23.4686%" y="293" width="0.2387%" height="15" fill="rgb(238,96,52)" fg:x="295" fg:w="3"/><text x="23.7186%" y="303.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="23.4686%" y="277" width="0.2387%" height="15" fill="rgb(228,14,13)" fg:x="295" fg:w="3"/><text x="23.7186%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="23.7072%" y="373" width="0.3978%" height="15" fill="rgb(219,123,13)" fg:x="298" fg:w="5"/><text x="23.9572%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="23.8663%" y="357" width="0.2387%" height="15" fill="rgb(216,144,17)" fg:x="300" fg:w="3"/><text x="24.1163%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="23.8663%" y="341" width="0.2387%" height="15" fill="rgb(230,228,29)" fg:x="300" fg:w="3"/><text x="24.1163%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.9459%" y="325" width="0.1591%" height="15" fill="rgb(233,18,5)" fg:x="301" fg:w="2"/><text x="24.1959%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="23.9459%" y="309" width="0.1591%" height="15" fill="rgb(233,197,12)" fg:x="301" fg:w="2"/><text x="24.1959%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="23.9459%" y="293" width="0.1591%" height="15" fill="rgb(234,140,29)" fg:x="301" fg:w="2"/><text x="24.1959%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="23.9459%" y="277" width="0.1591%" height="15" fill="rgb(233,113,19)" fg:x="301" fg:w="2"/><text x="24.1959%" y="287.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="23.9459%" y="261" width="0.1591%" height="15" fill="rgb(246,209,13)" fg:x="301" fg:w="2"/><text x="24.1959%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.35%)</title><rect x="23.0708%" y="389" width="1.3524%" height="15" fill="rgb(242,79,54)" fg:x="290" fg:w="17"/><text x="23.3208%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="24.1050%" y="373" width="0.3182%" height="15" fill="rgb(219,73,16)" fg:x="303" fg:w="4"/><text x="24.3550%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.2641%" y="357" width="0.1591%" height="15" fill="rgb(224,52,10)" fg:x="305" fg:w="2"/><text x="24.5141%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="24.2641%" y="341" width="0.1591%" height="15" fill="rgb(237,179,5)" fg:x="305" fg:w="2"/><text x="24.5141%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.31%)</title><rect x="22.2753%" y="405" width="2.3071%" height="15" fill="rgb(231,20,6)" fg:x="280" fg:w="29"/><text x="22.5253%" y="415.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.4232%" y="389" width="0.1591%" height="15" fill="rgb(253,171,45)" fg:x="307" fg:w="2"/><text x="24.6732%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (48 samples, 3.82%)</title><rect x="21.0819%" y="437" width="3.8186%" height="15" fill="rgb(230,75,49)" fg:x="265" fg:w="48"/><text x="21.3319%" y="447.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.94%)</title><rect x="21.9570%" y="421" width="2.9435%" height="15" fill="rgb(216,83,46)" fg:x="276" fg:w="37"/><text x="22.2070%" y="431.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="24.5823%" y="405" width="0.3182%" height="15" fill="rgb(236,56,9)" fg:x="309" fg:w="4"/><text x="24.8323%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="24.5823%" y="389" width="0.3182%" height="15" fill="rgb(215,28,34)" fg:x="309" fg:w="4"/><text x="24.8323%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="24.6619%" y="373" width="0.2387%" height="15" fill="rgb(230,222,20)" fg:x="310" fg:w="3"/><text x="24.9119%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="24.7414%" y="357" width="0.1591%" height="15" fill="rgb(235,209,51)" fg:x="311" fg:w="2"/><text x="24.9914%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="24.7414%" y="341" width="0.1591%" height="15" fill="rgb(235,167,1)" fg:x="311" fg:w="2"/><text x="24.9914%" y="351.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="24.7414%" y="325" width="0.1591%" height="15" fill="rgb(248,220,0)" fg:x="311" fg:w="2"/><text x="24.9914%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.0597%" y="389" width="0.0796%" height="15" fill="rgb(239,0,18)" fg:x="315" fg:w="1"/><text x="25.3097%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="25.1392%" y="389" width="0.1591%" height="15" fill="rgb(229,179,11)" fg:x="316" fg:w="2"/><text x="25.3892%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.2188%" y="373" width="0.0796%" height="15" fill="rgb(226,116,53)" fg:x="317" fg:w="1"/><text x="25.4688%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.2983%" y="373" width="0.1591%" height="15" fill="rgb(218,1,49)" fg:x="318" fg:w="2"/><text x="25.5483%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="25.4574%" y="373" width="0.1591%" height="15" fill="rgb(208,184,47)" fg:x="320" fg:w="2"/><text x="25.7074%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.5370%" y="357" width="0.0796%" height="15" fill="rgb(238,174,3)" fg:x="321" fg:w="1"/><text x="25.7870%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="25.6165%" y="357" width="0.3182%" height="15" fill="rgb(247,188,6)" fg:x="322" fg:w="4"/><text x="25.8665%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="25.6165%" y="341" width="0.3182%" height="15" fill="rgb(211,165,46)" fg:x="322" fg:w="4"/><text x="25.8665%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="25.6165%" y="325" width="0.3182%" height="15" fill="rgb(222,190,10)" fg:x="322" fg:w="4"/><text x="25.8665%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8552%" y="309" width="0.0796%" height="15" fill="rgb(206,185,3)" fg:x="325" fg:w="1"/><text x="26.1052%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.27%)</title><rect x="24.9006%" y="437" width="1.2729%" height="15" fill="rgb(244,125,37)" fg:x="313" fg:w="16"/><text x="25.1506%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.27%)</title><rect x="24.9006%" y="421" width="1.2729%" height="15" fill="rgb(211,43,7)" fg:x="313" fg:w="16"/><text x="25.1506%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.11%)</title><rect x="25.0597%" y="405" width="1.1138%" height="15" fill="rgb(250,41,42)" fg:x="315" fg:w="14"/><text x="25.3097%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="25.2983%" y="389" width="0.8751%" height="15" fill="rgb(254,54,42)" fg:x="318" fg:w="11"/><text x="25.5483%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="25.6165%" y="373" width="0.5569%" height="15" fill="rgb(213,71,43)" fg:x="322" fg:w="7"/><text x="25.8665%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="25.9348%" y="357" width="0.2387%" height="15" fill="rgb(249,3,44)" fg:x="326" fg:w="3"/><text x="26.1848%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="26.0143%" y="341" width="0.1591%" height="15" fill="rgb(229,80,41)" fg:x="327" fg:w="2"/><text x="26.2643%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0939%" y="325" width="0.0796%" height="15" fill="rgb(231,25,28)" fg:x="328" fg:w="1"/><text x="26.3439%" y="335.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="26.1734%" y="405" width="0.0796%" height="15" fill="rgb(208,79,48)" fg:x="329" fg:w="1"/><text x="26.4234%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.3325%" y="373" width="0.0796%" height="15" fill="rgb(207,196,38)" fg:x="331" fg:w="1"/><text x="26.5825%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.5712%" y="341" width="0.0796%" height="15" fill="rgb(228,105,49)" fg:x="334" fg:w="1"/><text x="26.8212%" y="351.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (6 samples, 0.48%)</title><rect x="26.2530%" y="405" width="0.4773%" height="15" fill="rgb(237,99,15)" fg:x="330" fg:w="6"/><text x="26.5030%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="26.2530%" y="389" width="0.4773%" height="15" fill="rgb(224,207,46)" fg:x="330" fg:w="6"/><text x="26.5030%" y="399.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="26.4121%" y="373" width="0.3182%" height="15" fill="rgb(249,117,50)" fg:x="332" fg:w="4"/><text x="26.6621%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.32%)</title><rect x="26.4121%" y="357" width="0.3182%" height="15" fill="rgb(248,17,13)" fg:x="332" fg:w="4"/><text x="26.6621%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="26.6508%" y="341" width="0.0796%" height="15" fill="rgb(228,187,36)" fg:x="335" fg:w="1"/><text x="26.9008%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6508%" y="325" width="0.0796%" height="15" fill="rgb(234,132,20)" fg:x="335" fg:w="1"/><text x="26.9008%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="26.1734%" y="421" width="0.7160%" height="15" fill="rgb(209,170,46)" fg:x="329" fg:w="9"/><text x="26.4234%" y="431.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="26.7303%" y="405" width="0.1591%" height="15" fill="rgb(237,23,19)" fg:x="336" fg:w="2"/><text x="26.9803%" y="415.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="26.8099%" y="389" width="0.0796%" height="15" fill="rgb(227,21,26)" fg:x="337" fg:w="1"/><text x="27.0599%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.8099%" y="373" width="0.0796%" height="15" fill="rgb(222,220,48)" fg:x="337" fg:w="1"/><text x="27.0599%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="27.0485%" y="389" width="0.1591%" height="15" fill="rgb(214,9,16)" fg:x="340" fg:w="2"/><text x="27.2985%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="27.2076%" y="389" width="0.2387%" height="15" fill="rgb(209,73,30)" fg:x="342" fg:w="3"/><text x="27.4576%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="27.4463%" y="389" width="0.0796%" height="15" fill="rgb(207,20,33)" fg:x="345" fg:w="1"/><text x="27.6963%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="27.5259%" y="389" width="0.0796%" height="15" fill="rgb(219,153,12)" fg:x="346" fg:w="1"/><text x="27.7759%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.5259%" y="373" width="0.0796%" height="15" fill="rgb(235,97,25)" fg:x="346" fg:w="1"/><text x="27.7759%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.5259%" y="357" width="0.0796%" height="15" fill="rgb(244,30,34)" fg:x="346" fg:w="1"/><text x="27.7759%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="27.6054%" y="389" width="0.0796%" height="15" fill="rgb(214,106,45)" fg:x="347" fg:w="1"/><text x="27.8554%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.6054%" y="373" width="0.0796%" height="15" fill="rgb(226,41,9)" fg:x="347" fg:w="1"/><text x="27.8554%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.6054%" y="357" width="0.0796%" height="15" fill="rgb(253,139,29)" fg:x="347" fg:w="1"/><text x="27.8554%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="27.7645%" y="341" width="0.2387%" height="15" fill="rgb(213,205,39)" fg:x="349" fg:w="3"/><text x="28.0145%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="27.8441%" y="325" width="0.1591%" height="15" fill="rgb(209,27,10)" fg:x="350" fg:w="2"/><text x="28.0941%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="28.0032%" y="341" width="0.0796%" height="15" fill="rgb(249,142,16)" fg:x="352" fg:w="1"/><text x="28.2532%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="28.0032%" y="325" width="0.0796%" height="15" fill="rgb(242,65,12)" fg:x="352" fg:w="1"/><text x="28.2532%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="28.0032%" y="309" width="0.0796%" height="15" fill="rgb(232,48,10)" fg:x="352" fg:w="1"/><text x="28.2532%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="28.0032%" y="293" width="0.0796%" height="15" fill="rgb(253,67,19)" fg:x="352" fg:w="1"/><text x="28.2532%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.3214%" y="309" width="0.0796%" height="15" fill="rgb(227,93,29)" fg:x="356" fg:w="1"/><text x="28.5714%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.6396%" y="261" width="0.1591%" height="15" fill="rgb(226,189,53)" fg:x="360" fg:w="2"/><text x="28.8896%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="28.4805%" y="293" width="0.3978%" height="15" fill="rgb(223,224,1)" fg:x="358" fg:w="5"/><text x="28.7305%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="28.6396%" y="277" width="0.2387%" height="15" fill="rgb(221,84,32)" fg:x="360" fg:w="3"/><text x="28.8896%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="28.7987%" y="261" width="0.0796%" height="15" fill="rgb(214,189,28)" fg:x="362" fg:w="1"/><text x="29.0487%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="28.3214%" y="325" width="0.7955%" height="15" fill="rgb(234,7,52)" fg:x="356" fg:w="10"/><text x="28.5714%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="28.4010%" y="309" width="0.7160%" height="15" fill="rgb(249,73,31)" fg:x="357" fg:w="9"/><text x="28.6510%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="28.8783%" y="293" width="0.2387%" height="15" fill="rgb(253,153,41)" fg:x="363" fg:w="3"/><text x="29.1283%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.1169%" y="325" width="0.0796%" height="15" fill="rgb(249,52,34)" fg:x="366" fg:w="1"/><text x="29.3669%" y="335.50"></text></g><g><title>engine::session::Session::flush (116 samples, 9.23%)</title><rect x="20.0477%" y="549" width="9.2283%" height="15" fill="rgb(236,177,47)" fg:x="252" fg:w="116"/><text x="20.2977%" y="559.50">engine::sessi..</text></g><g><title>engine::session::Session::save_changes (112 samples, 8.91%)</title><rect x="20.3660%" y="533" width="8.9101%" height="15" fill="rgb(252,185,45)" fg:x="256" fg:w="112"/><text x="20.6160%" y="543.50">engine::sessi..</text></g><g><title>engine::session::state::State::close (112 samples, 8.91%)</title><rect x="20.3660%" y="517" width="8.9101%" height="15" fill="rgb(251,15,30)" fg:x="256" fg:w="112"/><text x="20.6160%" y="527.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (112 samples, 8.91%)</title><rect x="20.3660%" y="501" width="8.9101%" height="15" fill="rgb(233,31,4)" fg:x="256" fg:w="112"/><text x="20.6160%" y="511.50">engine::sessi..</text></g><g><title>core::iter::adapters::try_process (106 samples, 8.43%)</title><rect x="20.8433%" y="485" width="8.4328%" height="15" fill="rgb(254,44,24)" fg:x="262" fg:w="106"/><text x="21.0933%" y="495.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106 samples, 8.43%)</title><rect x="20.8433%" y="469" width="8.4328%" height="15" fill="rgb(218,54,1)" fg:x="262" fg:w="106"/><text x="21.0933%" y="479.50">&lt;alloc::vec:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (106 samples, 8.43%)</title><rect x="20.8433%" y="453" width="8.4328%" height="15" fill="rgb(243,209,39)" fg:x="262" fg:w="106"/><text x="21.0933%" y="463.50">engine::sess..</text></g><g><title>kernel::model::any_entity_changes (39 samples, 3.10%)</title><rect x="26.1734%" y="437" width="3.1026%" height="15" fill="rgb(206,75,33)" fg:x="329" fg:w="39"/><text x="26.4234%" y="447.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (30 samples, 2.39%)</title><rect x="26.8894%" y="421" width="2.3866%" height="15" fill="rgb(223,108,18)" fg:x="338" fg:w="30"/><text x="27.1394%" y="431.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.31%)</title><rect x="26.9690%" y="405" width="2.3071%" height="15" fill="rgb(244,89,31)" fg:x="339" fg:w="29"/><text x="27.2190%" y="415.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.59%)</title><rect x="27.6850%" y="389" width="1.5911%" height="15" fill="rgb(222,167,27)" fg:x="348" fg:w="20"/><text x="27.9350%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 1.59%)</title><rect x="27.6850%" y="373" width="1.5911%" height="15" fill="rgb(247,41,16)" fg:x="348" fg:w="20"/><text x="27.9350%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.59%)</title><rect x="27.6850%" y="357" width="1.5911%" height="15" fill="rgb(233,168,40)" fg:x="348" fg:w="20"/><text x="27.9350%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.19%)</title><rect x="28.0827%" y="341" width="1.1933%" height="15" fill="rgb(205,211,8)" fg:x="353" fg:w="15"/><text x="28.3327%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="29.1965%" y="325" width="0.0796%" height="15" fill="rgb(238,105,11)" fg:x="367" fg:w="1"/><text x="29.4465%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="29.2761%" y="517" width="0.0796%" height="15" fill="rgb(223,142,52)" fg:x="368" fg:w="1"/><text x="29.5261%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="29.2761%" y="501" width="0.0796%" height="15" fill="rgb(238,51,33)" fg:x="368" fg:w="1"/><text x="29.5261%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="29.2761%" y="549" width="0.1591%" height="15" fill="rgb(231,188,43)" fg:x="368" fg:w="2"/><text x="29.5261%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="29.2761%" y="533" width="0.1591%" height="15" fill="rgb(216,92,17)" fg:x="368" fg:w="2"/><text x="29.5261%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="29.3556%" y="517" width="0.0796%" height="15" fill="rgb(228,2,40)" fg:x="369" fg:w="1"/><text x="29.6056%" y="527.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="29.3556%" y="501" width="0.0796%" height="15" fill="rgb(226,73,15)" fg:x="369" fg:w="1"/><text x="29.6056%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.3556%" y="485" width="0.0796%" height="15" fill="rgb(227,66,46)" fg:x="369" fg:w="1"/><text x="29.6056%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="29.4352%" y="533" width="0.1591%" height="15" fill="rgb(209,71,6)" fg:x="370" fg:w="2"/><text x="29.6852%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="29.4352%" y="517" width="0.1591%" height="15" fill="rgb(246,100,25)" fg:x="370" fg:w="2"/><text x="29.6852%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.5147%" y="501" width="0.0796%" height="15" fill="rgb(248,185,27)" fg:x="371" fg:w="1"/><text x="29.7647%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.5147%" y="485" width="0.0796%" height="15" fill="rgb(225,118,47)" fg:x="371" fg:w="1"/><text x="29.7647%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.5147%" y="469" width="0.0796%" height="15" fill="rgb(220,185,44)" fg:x="371" fg:w="1"/><text x="29.7647%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.5147%" y="453" width="0.0796%" height="15" fill="rgb(227,95,24)" fg:x="371" fg:w="1"/><text x="29.7647%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="29.5147%" y="437" width="0.0796%" height="15" fill="rgb(252,84,24)" fg:x="371" fg:w="1"/><text x="29.7647%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="29.5147%" y="421" width="0.0796%" height="15" fill="rgb(240,34,44)" fg:x="371" fg:w="1"/><text x="29.7647%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="29.5943%" y="517" width="0.0796%" height="15" fill="rgb(209,72,54)" fg:x="372" fg:w="1"/><text x="29.8443%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="29.5943%" y="501" width="0.0796%" height="15" fill="rgb(226,19,45)" fg:x="372" fg:w="1"/><text x="29.8443%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.5943%" y="485" width="0.0796%" height="15" fill="rgb(246,7,45)" fg:x="372" fg:w="1"/><text x="29.8443%" y="495.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="29.5943%" y="469" width="0.0796%" height="15" fill="rgb(225,45,2)" fg:x="372" fg:w="1"/><text x="29.8443%" y="479.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="29.5943%" y="533" width="0.1591%" height="15" fill="rgb(221,80,29)" fg:x="372" fg:w="2"/><text x="29.8443%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="29.6738%" y="517" width="0.0796%" height="15" fill="rgb(228,11,19)" fg:x="373" fg:w="1"/><text x="29.9238%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (5 samples, 0.40%)</title><rect x="29.4352%" y="549" width="0.3978%" height="15" fill="rgb(243,17,21)" fg:x="370" fg:w="5"/><text x="29.6852%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="29.7534%" y="533" width="0.0796%" height="15" fill="rgb(243,88,8)" fg:x="374" fg:w="1"/><text x="30.0034%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="29.7534%" y="517" width="0.0796%" height="15" fill="rgb(214,17,9)" fg:x="374" fg:w="1"/><text x="30.0034%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8329%" y="501" width="0.0796%" height="15" fill="rgb(232,169,15)" fg:x="375" fg:w="1"/><text x="30.0829%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8329%" y="485" width="0.0796%" height="15" fill="rgb(232,86,53)" fg:x="375" fg:w="1"/><text x="30.0829%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8329%" y="469" width="0.0796%" height="15" fill="rgb(222,100,4)" fg:x="375" fg:w="1"/><text x="30.0829%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8329%" y="453" width="0.0796%" height="15" fill="rgb(253,151,38)" fg:x="375" fg:w="1"/><text x="30.0829%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8329%" y="437" width="0.0796%" height="15" fill="rgb(238,215,29)" fg:x="375" fg:w="1"/><text x="30.0829%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.8329%" y="421" width="0.0796%" height="15" fill="rgb(205,128,53)" fg:x="375" fg:w="1"/><text x="30.0829%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.8329%" y="405" width="0.0796%" height="15" fill="rgb(248,183,14)" fg:x="375" fg:w="1"/><text x="30.0829%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.8329%" y="389" width="0.0796%" height="15" fill="rgb(244,172,35)" fg:x="375" fg:w="1"/><text x="30.0829%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.8329%" y="373" width="0.0796%" height="15" fill="rgb(234,93,19)" fg:x="375" fg:w="1"/><text x="30.0829%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.8329%" y="357" width="0.0796%" height="15" fill="rgb(227,109,7)" fg:x="375" fg:w="1"/><text x="30.0829%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.8329%" y="341" width="0.0796%" height="15" fill="rgb(233,136,54)" fg:x="375" fg:w="1"/><text x="30.0829%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.8329%" y="325" width="0.0796%" height="15" fill="rgb(233,19,40)" fg:x="375" fg:w="1"/><text x="30.0829%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.8329%" y="309" width="0.0796%" height="15" fill="rgb(247,41,18)" fg:x="375" fg:w="1"/><text x="30.0829%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.8329%" y="293" width="0.0796%" height="15" fill="rgb(220,34,34)" fg:x="375" fg:w="1"/><text x="30.0829%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="29.9125%" y="437" width="0.0796%" height="15" fill="rgb(222,135,32)" fg:x="376" fg:w="1"/><text x="30.1625%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="29.8329%" y="533" width="0.3182%" height="15" fill="rgb(214,80,19)" fg:x="375" fg:w="4"/><text x="30.0829%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="29.8329%" y="517" width="0.3182%" height="15" fill="rgb(234,54,46)" fg:x="375" fg:w="4"/><text x="30.0829%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="29.9125%" y="501" width="0.2387%" height="15" fill="rgb(251,48,23)" fg:x="376" fg:w="3"/><text x="30.1625%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.9125%" y="485" width="0.2387%" height="15" fill="rgb(254,109,52)" fg:x="376" fg:w="3"/><text x="30.1625%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="29.9125%" y="469" width="0.2387%" height="15" fill="rgb(240,186,19)" fg:x="376" fg:w="3"/><text x="30.1625%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.9125%" y="453" width="0.2387%" height="15" fill="rgb(246,187,17)" fg:x="376" fg:w="3"/><text x="30.1625%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.9920%" y="437" width="0.1591%" height="15" fill="rgb(212,21,5)" fg:x="377" fg:w="2"/><text x="30.2420%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.9920%" y="421" width="0.1591%" height="15" fill="rgb(225,185,18)" fg:x="377" fg:w="2"/><text x="30.2420%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.9920%" y="405" width="0.1591%" height="15" fill="rgb(245,114,17)" fg:x="377" fg:w="2"/><text x="30.2420%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="30.1512%" y="517" width="0.0796%" height="15" fill="rgb(223,164,24)" fg:x="379" fg:w="1"/><text x="30.4012%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.1512%" y="501" width="0.0796%" height="15" fill="rgb(211,228,3)" fg:x="379" fg:w="1"/><text x="30.4012%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.1512%" y="485" width="0.0796%" height="15" fill="rgb(223,16,38)" fg:x="379" fg:w="1"/><text x="30.4012%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.1512%" y="469" width="0.0796%" height="15" fill="rgb(207,31,54)" fg:x="379" fg:w="1"/><text x="30.4012%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.1512%" y="453" width="0.0796%" height="15" fill="rgb(220,39,11)" fg:x="379" fg:w="1"/><text x="30.4012%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.1512%" y="437" width="0.0796%" height="15" fill="rgb(235,185,0)" fg:x="379" fg:w="1"/><text x="30.4012%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1512%" y="421" width="0.0796%" height="15" fill="rgb(249,39,18)" fg:x="379" fg:w="1"/><text x="30.4012%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1512%" y="405" width="0.0796%" height="15" fill="rgb(240,110,33)" fg:x="379" fg:w="1"/><text x="30.4012%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.3103%" y="453" width="0.0796%" height="15" fill="rgb(210,92,42)" fg:x="381" fg:w="1"/><text x="30.5603%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3103%" y="437" width="0.0796%" height="15" fill="rgb(218,215,28)" fg:x="381" fg:w="1"/><text x="30.5603%" y="447.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="30.3103%" y="485" width="0.1591%" height="15" fill="rgb(238,215,36)" fg:x="381" fg:w="2"/><text x="30.5603%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.3103%" y="469" width="0.1591%" height="15" fill="rgb(220,31,10)" fg:x="381" fg:w="2"/><text x="30.5603%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="30.3898%" y="453" width="0.0796%" height="15" fill="rgb(212,93,14)" fg:x="382" fg:w="1"/><text x="30.6398%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.3898%" y="437" width="0.0796%" height="15" fill="rgb(254,207,2)" fg:x="382" fg:w="1"/><text x="30.6398%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="30.3103%" y="501" width="0.2387%" height="15" fill="rgb(205,57,44)" fg:x="381" fg:w="3"/><text x="30.5603%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="30.4694%" y="485" width="0.0796%" height="15" fill="rgb(226,151,19)" fg:x="383" fg:w="1"/><text x="30.7194%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="30.5489%" y="485" width="0.0796%" height="15" fill="rgb(230,72,30)" fg:x="384" fg:w="1"/><text x="30.7989%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="30.5489%" y="469" width="0.0796%" height="15" fill="rgb(244,0,8)" fg:x="384" fg:w="1"/><text x="30.7989%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.5489%" y="453" width="0.0796%" height="15" fill="rgb(230,192,6)" fg:x="384" fg:w="1"/><text x="30.7989%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.48%)</title><rect x="30.2307%" y="517" width="0.4773%" height="15" fill="rgb(233,207,13)" fg:x="380" fg:w="6"/><text x="30.4807%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="30.5489%" y="501" width="0.1591%" height="15" fill="rgb(206,227,7)" fg:x="384" fg:w="2"/><text x="30.7989%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="30.6285%" y="485" width="0.0796%" height="15" fill="rgb(213,217,25)" fg:x="385" fg:w="1"/><text x="30.8785%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.6285%" y="469" width="0.0796%" height="15" fill="rgb(249,75,4)" fg:x="385" fg:w="1"/><text x="30.8785%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.6285%" y="453" width="0.0796%" height="15" fill="rgb(225,114,18)" fg:x="385" fg:w="1"/><text x="30.8785%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.6285%" y="437" width="0.0796%" height="15" fill="rgb(211,162,40)" fg:x="385" fg:w="1"/><text x="30.8785%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.6285%" y="421" width="0.0796%" height="15" fill="rgb(206,49,29)" fg:x="385" fg:w="1"/><text x="30.8785%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="30.6285%" y="405" width="0.0796%" height="15" fill="rgb(244,8,6)" fg:x="385" fg:w="1"/><text x="30.8785%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="30.7080%" y="517" width="0.0796%" height="15" fill="rgb(231,194,28)" fg:x="386" fg:w="1"/><text x="30.9580%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="30.7080%" y="501" width="0.0796%" height="15" fill="rgb(210,69,5)" fg:x="386" fg:w="1"/><text x="30.9580%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="30.7876%" y="501" width="0.0796%" height="15" fill="rgb(216,186,12)" fg:x="387" fg:w="1"/><text x="31.0376%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="30.7876%" y="485" width="0.0796%" height="15" fill="rgb(238,61,15)" fg:x="387" fg:w="1"/><text x="31.0376%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="30.7876%" y="469" width="0.0796%" height="15" fill="rgb(226,104,1)" fg:x="387" fg:w="1"/><text x="31.0376%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="30.7876%" y="453" width="0.0796%" height="15" fill="rgb(229,128,15)" fg:x="387" fg:w="1"/><text x="31.0376%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="30.7876%" y="437" width="0.0796%" height="15" fill="rgb(247,110,15)" fg:x="387" fg:w="1"/><text x="31.0376%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="30.7876%" y="421" width="0.0796%" height="15" fill="rgb(210,74,48)" fg:x="387" fg:w="1"/><text x="31.0376%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7876%" y="405" width="0.0796%" height="15" fill="rgb(246,121,10)" fg:x="387" fg:w="1"/><text x="31.0376%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8671%" y="469" width="0.0796%" height="15" fill="rgb(214,156,37)" fg:x="388" fg:w="1"/><text x="31.1171%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.9467%" y="469" width="0.0796%" height="15" fill="rgb(214,210,34)" fg:x="389" fg:w="1"/><text x="31.1967%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="31.0263%" y="469" width="0.0796%" height="15" fill="rgb(237,93,35)" fg:x="390" fg:w="1"/><text x="31.2763%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.0263%" y="453" width="0.0796%" height="15" fill="rgb(206,36,8)" fg:x="390" fg:w="1"/><text x="31.2763%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.0263%" y="437" width="0.0796%" height="15" fill="rgb(208,151,12)" fg:x="390" fg:w="1"/><text x="31.2763%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.19%)</title><rect x="30.1512%" y="533" width="1.1933%" height="15" fill="rgb(225,133,52)" fg:x="379" fg:w="15"/><text x="30.4012%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="30.7876%" y="517" width="0.5569%" height="15" fill="rgb(231,71,53)" fg:x="387" fg:w="7"/><text x="31.0376%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="30.8671%" y="501" width="0.4773%" height="15" fill="rgb(243,76,21)" fg:x="388" fg:w="6"/><text x="31.1171%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="30.8671%" y="485" width="0.4773%" height="15" fill="rgb(252,144,3)" fg:x="388" fg:w="6"/><text x="31.1171%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="31.1058%" y="469" width="0.2387%" height="15" fill="rgb(231,199,10)" fg:x="391" fg:w="3"/><text x="31.3558%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="31.1854%" y="453" width="0.1591%" height="15" fill="rgb(215,18,11)" fg:x="392" fg:w="2"/><text x="31.4354%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="31.1854%" y="437" width="0.1591%" height="15" fill="rgb(241,65,24)" fg:x="392" fg:w="2"/><text x="31.4354%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2649%" y="421" width="0.0796%" height="15" fill="rgb(251,192,38)" fg:x="393" fg:w="1"/><text x="31.5149%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="31.2649%" y="405" width="0.0796%" height="15" fill="rgb(205,9,35)" fg:x="393" fg:w="1"/><text x="31.5149%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2649%" y="389" width="0.0796%" height="15" fill="rgb(229,225,49)" fg:x="393" fg:w="1"/><text x="31.5149%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="31.2649%" y="373" width="0.0796%" height="15" fill="rgb(207,125,39)" fg:x="393" fg:w="1"/><text x="31.5149%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.3445%" y="501" width="0.0796%" height="15" fill="rgb(222,78,19)" fg:x="394" fg:w="1"/><text x="31.5945%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.3445%" y="485" width="0.0796%" height="15" fill="rgb(248,207,20)" fg:x="394" fg:w="1"/><text x="31.5945%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.3445%" y="469" width="0.0796%" height="15" fill="rgb(205,103,49)" fg:x="394" fg:w="1"/><text x="31.5945%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.4240%" y="501" width="0.0796%" height="15" fill="rgb(216,42,28)" fg:x="395" fg:w="1"/><text x="31.6740%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.4240%" y="485" width="0.0796%" height="15" fill="rgb(213,205,53)" fg:x="395" fg:w="1"/><text x="31.6740%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.4240%" y="469" width="0.0796%" height="15" fill="rgb(239,140,53)" fg:x="395" fg:w="1"/><text x="31.6740%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.4240%" y="453" width="0.0796%" height="15" fill="rgb(248,95,9)" fg:x="395" fg:w="1"/><text x="31.6740%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.4240%" y="437" width="0.0796%" height="15" fill="rgb(254,58,47)" fg:x="395" fg:w="1"/><text x="31.6740%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4240%" y="421" width="0.0796%" height="15" fill="rgb(234,227,14)" fg:x="395" fg:w="1"/><text x="31.6740%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4240%" y="405" width="0.0796%" height="15" fill="rgb(205,192,45)" fg:x="395" fg:w="1"/><text x="31.6740%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.4240%" y="389" width="0.0796%" height="15" fill="rgb(253,187,31)" fg:x="395" fg:w="1"/><text x="31.6740%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.4240%" y="373" width="0.0796%" height="15" fill="rgb(222,6,32)" fg:x="395" fg:w="1"/><text x="31.6740%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.4240%" y="357" width="0.0796%" height="15" fill="rgb(249,190,19)" fg:x="395" fg:w="1"/><text x="31.6740%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.4240%" y="341" width="0.0796%" height="15" fill="rgb(251,28,20)" fg:x="395" fg:w="1"/><text x="31.6740%" y="351.50"></text></g><g><title>plugins_core::build::Build::save (22 samples, 1.75%)</title><rect x="29.8329%" y="549" width="1.7502%" height="15" fill="rgb(210,223,40)" fg:x="375" fg:w="22"/><text x="30.0829%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="31.3445%" y="533" width="0.2387%" height="15" fill="rgb(216,137,22)" fg:x="394" fg:w="3"/><text x="31.5945%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="31.3445%" y="517" width="0.2387%" height="15" fill="rgb(247,39,34)" fg:x="394" fg:w="3"/><text x="31.5945%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5036%" y="501" width="0.0796%" height="15" fill="rgb(239,43,50)" fg:x="396" fg:w="1"/><text x="31.7536%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="31.5831%" y="517" width="0.0796%" height="15" fill="rgb(241,212,9)" fg:x="397" fg:w="1"/><text x="31.8331%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.6627%" y="421" width="0.0796%" height="15" fill="rgb(205,8,2)" fg:x="398" fg:w="1"/><text x="31.9127%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="31.6627%" y="469" width="0.2387%" height="15" fill="rgb(217,173,54)" fg:x="398" fg:w="3"/><text x="31.9127%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="31.6627%" y="453" width="0.2387%" height="15" fill="rgb(208,149,52)" fg:x="398" fg:w="3"/><text x="31.9127%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.6627%" y="437" width="0.2387%" height="15" fill="rgb(239,99,40)" fg:x="398" fg:w="3"/><text x="31.9127%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.7422%" y="421" width="0.1591%" height="15" fill="rgb(233,214,26)" fg:x="399" fg:w="2"/><text x="31.9922%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.7422%" y="405" width="0.1591%" height="15" fill="rgb(231,225,37)" fg:x="399" fg:w="2"/><text x="31.9922%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.8218%" y="389" width="0.0796%" height="15" fill="rgb(252,55,35)" fg:x="400" fg:w="1"/><text x="32.0718%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.8218%" y="373" width="0.0796%" height="15" fill="rgb(239,43,18)" fg:x="400" fg:w="1"/><text x="32.0718%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.8218%" y="357" width="0.0796%" height="15" fill="rgb(251,125,49)" fg:x="400" fg:w="1"/><text x="32.0718%" y="367.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="31.6627%" y="485" width="0.3182%" height="15" fill="rgb(212,83,54)" fg:x="398" fg:w="4"/><text x="31.9127%" y="495.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="31.9014%" y="469" width="0.0796%" height="15" fill="rgb(250,75,6)" fg:x="401" fg:w="1"/><text x="32.1514%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.9809%" y="453" width="0.0796%" height="15" fill="rgb(252,36,40)" fg:x="402" fg:w="1"/><text x="32.2309%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.9809%" y="437" width="0.0796%" height="15" fill="rgb(230,91,51)" fg:x="402" fg:w="1"/><text x="32.2309%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.9809%" y="421" width="0.0796%" height="15" fill="rgb(212,92,28)" fg:x="402" fg:w="1"/><text x="32.2309%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.9809%" y="405" width="0.0796%" height="15" fill="rgb(227,13,22)" fg:x="402" fg:w="1"/><text x="32.2309%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.9809%" y="389" width="0.0796%" height="15" fill="rgb(239,204,32)" fg:x="402" fg:w="1"/><text x="32.2309%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.9809%" y="373" width="0.0796%" height="15" fill="rgb(228,49,41)" fg:x="402" fg:w="1"/><text x="32.2309%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.9809%" y="357" width="0.0796%" height="15" fill="rgb(206,95,6)" fg:x="402" fg:w="1"/><text x="32.2309%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.9809%" y="341" width="0.0796%" height="15" fill="rgb(251,20,14)" fg:x="402" fg:w="1"/><text x="32.2309%" y="351.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="31.6627%" y="517" width="0.4773%" height="15" fill="rgb(214,99,28)" fg:x="398" fg:w="6"/><text x="31.9127%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="31.6627%" y="501" width="0.4773%" height="15" fill="rgb(239,122,54)" fg:x="398" fg:w="6"/><text x="31.9127%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="31.9809%" y="485" width="0.1591%" height="15" fill="rgb(218,217,46)" fg:x="402" fg:w="2"/><text x="32.2309%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="31.9809%" y="469" width="0.1591%" height="15" fill="rgb(249,106,28)" fg:x="402" fg:w="2"/><text x="32.2309%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.0605%" y="453" width="0.0796%" height="15" fill="rgb(250,158,18)" fg:x="403" fg:w="1"/><text x="32.3105%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0605%" y="437" width="0.0796%" height="15" fill="rgb(226,137,29)" fg:x="403" fg:w="1"/><text x="32.3105%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.0605%" y="421" width="0.0796%" height="15" fill="rgb(210,188,1)" fg:x="403" fg:w="1"/><text x="32.3105%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0605%" y="405" width="0.0796%" height="15" fill="rgb(227,84,42)" fg:x="403" fg:w="1"/><text x="32.3105%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.0605%" y="389" width="0.0796%" height="15" fill="rgb(222,147,48)" fg:x="403" fg:w="1"/><text x="32.3105%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.0605%" y="373" width="0.0796%" height="15" fill="rgb(241,150,43)" fg:x="403" fg:w="1"/><text x="32.3105%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="32.1400%" y="501" width="0.0796%" height="15" fill="rgb(206,139,52)" fg:x="404" fg:w="1"/><text x="32.3900%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.1400%" y="485" width="0.0796%" height="15" fill="rgb(230,63,14)" fg:x="404" fg:w="1"/><text x="32.3900%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="32.1400%" y="469" width="0.0796%" height="15" fill="rgb(247,8,20)" fg:x="404" fg:w="1"/><text x="32.3900%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1400%" y="453" width="0.0796%" height="15" fill="rgb(213,115,4)" fg:x="404" fg:w="1"/><text x="32.3900%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.2196%" y="485" width="0.0796%" height="15" fill="rgb(241,79,49)" fg:x="405" fg:w="1"/><text x="32.4696%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.2196%" y="469" width="0.0796%" height="15" fill="rgb(222,42,35)" fg:x="405" fg:w="1"/><text x="32.4696%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="32.2196%" y="453" width="0.0796%" height="15" fill="rgb(247,59,23)" fg:x="405" fg:w="1"/><text x="32.4696%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.2196%" y="437" width="0.0796%" height="15" fill="rgb(247,93,18)" fg:x="405" fg:w="1"/><text x="32.4696%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2196%" y="421" width="0.0796%" height="15" fill="rgb(249,107,47)" fg:x="405" fg:w="1"/><text x="32.4696%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2991%" y="485" width="0.0796%" height="15" fill="rgb(219,27,1)" fg:x="406" fg:w="1"/><text x="32.5491%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="32.2196%" y="501" width="0.2387%" height="15" fill="rgb(217,82,32)" fg:x="405" fg:w="3"/><text x="32.4696%" y="511.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.3787%" y="485" width="0.0796%" height="15" fill="rgb(250,129,47)" fg:x="407" fg:w="1"/><text x="32.6287%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.3787%" y="469" width="0.0796%" height="15" fill="rgb(253,88,35)" fg:x="407" fg:w="1"/><text x="32.6287%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.3787%" y="453" width="0.0796%" height="15" fill="rgb(245,221,14)" fg:x="407" fg:w="1"/><text x="32.6287%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="32.3787%" y="437" width="0.0796%" height="15" fill="rgb(217,119,54)" fg:x="407" fg:w="1"/><text x="32.6287%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (12 samples, 0.95%)</title><rect x="31.5831%" y="549" width="0.9547%" height="15" fill="rgb(247,128,31)" fg:x="397" fg:w="12"/><text x="31.8331%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (12 samples, 0.95%)</title><rect x="31.5831%" y="533" width="0.9547%" height="15" fill="rgb(211,99,22)" fg:x="397" fg:w="12"/><text x="31.8331%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.40%)</title><rect x="32.1400%" y="517" width="0.3978%" height="15" fill="rgb(212,20,17)" fg:x="404" fg:w="5"/><text x="32.3900%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="32.4582%" y="501" width="0.0796%" height="15" fill="rgb(209,159,29)" fg:x="408" fg:w="1"/><text x="32.7082%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.4582%" y="485" width="0.0796%" height="15" fill="rgb(222,177,53)" fg:x="408" fg:w="1"/><text x="32.7082%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="32.4582%" y="469" width="0.0796%" height="15" fill="rgb(234,46,43)" fg:x="408" fg:w="1"/><text x="32.7082%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="32.5378%" y="533" width="0.3182%" height="15" fill="rgb(208,108,14)" fg:x="409" fg:w="4"/><text x="32.7878%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.6173%" y="517" width="0.2387%" height="15" fill="rgb(226,78,53)" fg:x="410" fg:w="3"/><text x="32.8673%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.7765%" y="501" width="0.0796%" height="15" fill="rgb(230,20,41)" fg:x="412" fg:w="1"/><text x="33.0265%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.7765%" y="485" width="0.0796%" height="15" fill="rgb(213,195,35)" fg:x="412" fg:w="1"/><text x="33.0265%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.7765%" y="469" width="0.0796%" height="15" fill="rgb(242,62,36)" fg:x="412" fg:w="1"/><text x="33.0265%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.7765%" y="453" width="0.0796%" height="15" fill="rgb(222,210,37)" fg:x="412" fg:w="1"/><text x="33.0265%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.7765%" y="437" width="0.0796%" height="15" fill="rgb(232,107,19)" fg:x="412" fg:w="1"/><text x="33.0265%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.7765%" y="421" width="0.0796%" height="15" fill="rgb(235,85,17)" fg:x="412" fg:w="1"/><text x="33.0265%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.7765%" y="405" width="0.0796%" height="15" fill="rgb(219,195,31)" fg:x="412" fg:w="1"/><text x="33.0265%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.7765%" y="389" width="0.0796%" height="15" fill="rgb(231,183,30)" fg:x="412" fg:w="1"/><text x="33.0265%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.7765%" y="373" width="0.0796%" height="15" fill="rgb(212,0,11)" fg:x="412" fg:w="1"/><text x="33.0265%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.7765%" y="357" width="0.0796%" height="15" fill="rgb(249,53,54)" fg:x="412" fg:w="1"/><text x="33.0265%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.7765%" y="341" width="0.0796%" height="15" fill="rgb(211,118,13)" fg:x="412" fg:w="1"/><text x="33.0265%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.7765%" y="325" width="0.0796%" height="15" fill="rgb(237,42,9)" fg:x="412" fg:w="1"/><text x="33.0265%" y="335.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (6 samples, 0.48%)</title><rect x="32.5378%" y="549" width="0.4773%" height="15" fill="rgb(227,68,32)" fg:x="409" fg:w="6"/><text x="32.7878%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="32.8560%" y="533" width="0.1591%" height="15" fill="rgb(238,10,7)" fg:x="413" fg:w="2"/><text x="33.1060%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="32.8560%" y="517" width="0.1591%" height="15" fill="rgb(224,42,12)" fg:x="413" fg:w="2"/><text x="33.1060%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.8560%" y="501" width="0.1591%" height="15" fill="rgb(252,190,5)" fg:x="413" fg:w="2"/><text x="33.1060%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="32.8560%" y="485" width="0.1591%" height="15" fill="rgb(220,214,39)" fg:x="413" fg:w="2"/><text x="33.1060%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="32.8560%" y="469" width="0.1591%" height="15" fill="rgb(247,98,4)" fg:x="413" fg:w="2"/><text x="33.1060%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.8560%" y="453" width="0.1591%" height="15" fill="rgb(211,60,12)" fg:x="413" fg:w="2"/><text x="33.1060%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9356%" y="437" width="0.0796%" height="15" fill="rgb(224,42,10)" fg:x="414" fg:w="1"/><text x="33.1856%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="33.0151%" y="533" width="0.1591%" height="15" fill="rgb(217,167,4)" fg:x="415" fg:w="2"/><text x="33.2651%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="33.0151%" y="517" width="0.1591%" height="15" fill="rgb(253,18,17)" fg:x="415" fg:w="2"/><text x="33.2651%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="33.0151%" y="501" width="0.1591%" height="15" fill="rgb(249,186,44)" fg:x="415" fg:w="2"/><text x="33.2651%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="33.0151%" y="485" width="0.1591%" height="15" fill="rgb(254,124,54)" fg:x="415" fg:w="2"/><text x="33.2651%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.0151%" y="469" width="0.1591%" height="15" fill="rgb(220,124,39)" fg:x="415" fg:w="2"/><text x="33.2651%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.0151%" y="453" width="0.1591%" height="15" fill="rgb(225,96,46)" fg:x="415" fg:w="2"/><text x="33.2651%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="33.0151%" y="437" width="0.1591%" height="15" fill="rgb(221,106,12)" fg:x="415" fg:w="2"/><text x="33.2651%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.0151%" y="421" width="0.1591%" height="15" fill="rgb(227,133,23)" fg:x="415" fg:w="2"/><text x="33.2651%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.0151%" y="405" width="0.1591%" height="15" fill="rgb(216,44,52)" fg:x="415" fg:w="2"/><text x="33.2651%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.0151%" y="389" width="0.1591%" height="15" fill="rgb(239,149,7)" fg:x="415" fg:w="2"/><text x="33.2651%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2538%" y="469" width="0.0796%" height="15" fill="rgb(211,157,31)" fg:x="418" fg:w="1"/><text x="33.5038%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="33.1742%" y="533" width="0.2387%" height="15" fill="rgb(206,215,22)" fg:x="417" fg:w="3"/><text x="33.4242%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="33.1742%" y="517" width="0.2387%" height="15" fill="rgb(208,113,15)" fg:x="417" fg:w="3"/><text x="33.4242%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="33.1742%" y="501" width="0.2387%" height="15" fill="rgb(207,189,15)" fg:x="417" fg:w="3"/><text x="33.4242%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="33.1742%" y="485" width="0.2387%" height="15" fill="rgb(231,115,4)" fg:x="417" fg:w="3"/><text x="33.4242%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3333%" y="469" width="0.0796%" height="15" fill="rgb(253,117,2)" fg:x="419" fg:w="1"/><text x="33.5833%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3333%" y="453" width="0.0796%" height="15" fill="rgb(248,48,24)" fg:x="419" fg:w="1"/><text x="33.5833%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.3333%" y="437" width="0.0796%" height="15" fill="rgb(241,28,46)" fg:x="419" fg:w="1"/><text x="33.5833%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3333%" y="421" width="0.0796%" height="15" fill="rgb(216,165,52)" fg:x="419" fg:w="1"/><text x="33.5833%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="33.4129%" y="501" width="0.0796%" height="15" fill="rgb(220,222,34)" fg:x="420" fg:w="1"/><text x="33.6629%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4129%" y="485" width="0.0796%" height="15" fill="rgb(247,222,49)" fg:x="420" fg:w="1"/><text x="33.6629%" y="495.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="33.0151%" y="549" width="0.5569%" height="15" fill="rgb(240,10,31)" fg:x="415" fg:w="7"/><text x="33.2651%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="33.4129%" y="533" width="0.1591%" height="15" fill="rgb(221,199,35)" fg:x="420" fg:w="2"/><text x="33.6629%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="33.4129%" y="517" width="0.1591%" height="15" fill="rgb(230,223,11)" fg:x="420" fg:w="2"/><text x="33.6629%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="33.4924%" y="501" width="0.0796%" height="15" fill="rgb(218,82,45)" fg:x="421" fg:w="1"/><text x="33.7424%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.4924%" y="485" width="0.0796%" height="15" fill="rgb(233,213,33)" fg:x="421" fg:w="1"/><text x="33.7424%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="33.4924%" y="469" width="0.0796%" height="15" fill="rgb(210,143,52)" fg:x="421" fg:w="1"/><text x="33.7424%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.4924%" y="453" width="0.0796%" height="15" fill="rgb(206,95,4)" fg:x="421" fg:w="1"/><text x="33.7424%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4924%" y="437" width="0.0796%" height="15" fill="rgb(246,164,46)" fg:x="421" fg:w="1"/><text x="33.7424%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (187 samples, 14.88%)</title><rect x="18.7749%" y="565" width="14.8767%" height="15" fill="rgb(213,210,47)" fg:x="236" fg:w="187"/><text x="19.0249%" y="575.50">plugins_core::build::Bu..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="33.5720%" y="549" width="0.0796%" height="15" fill="rgb(210,12,38)" fg:x="422" fg:w="1"/><text x="33.8220%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="33.6516%" y="517" width="0.0796%" height="15" fill="rgb(252,192,54)" fg:x="423" fg:w="1"/><text x="33.9016%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="33.6516%" y="501" width="0.0796%" height="15" fill="rgb(242,92,6)" fg:x="423" fg:w="1"/><text x="33.9016%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="33.6516%" y="485" width="0.0796%" height="15" fill="rgb(253,154,15)" fg:x="423" fg:w="1"/><text x="33.9016%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="33.6516%" y="469" width="0.0796%" height="15" fill="rgb(209,20,43)" fg:x="423" fg:w="1"/><text x="33.9016%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.6516%" y="453" width="0.0796%" height="15" fill="rgb(232,28,49)" fg:x="423" fg:w="1"/><text x="33.9016%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="33.6516%" y="565" width="0.2387%" height="15" fill="rgb(248,131,53)" fg:x="423" fg:w="3"/><text x="33.9016%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="33.6516%" y="549" width="0.2387%" height="15" fill="rgb(214,16,30)" fg:x="423" fg:w="3"/><text x="33.9016%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="33.6516%" y="533" width="0.2387%" height="15" fill="rgb(245,16,0)" fg:x="423" fg:w="3"/><text x="33.9016%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="33.7311%" y="517" width="0.1591%" height="15" fill="rgb(245,17,35)" fg:x="424" fg:w="2"/><text x="33.9811%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8107%" y="501" width="0.0796%" height="15" fill="rgb(249,27,53)" fg:x="425" fg:w="1"/><text x="34.0607%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="33.8902%" y="565" width="0.0796%" height="15" fill="rgb(214,73,24)" fg:x="426" fg:w="1"/><text x="34.1402%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.8902%" y="549" width="0.0796%" height="15" fill="rgb(223,84,37)" fg:x="426" fg:w="1"/><text x="34.1402%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="33.9698%" y="533" width="0.0796%" height="15" fill="rgb(210,109,28)" fg:x="427" fg:w="1"/><text x="34.2198%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="33.9698%" y="517" width="0.0796%" height="15" fill="rgb(208,186,6)" fg:x="427" fg:w="1"/><text x="34.2198%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="33.9698%" y="501" width="0.0796%" height="15" fill="rgb(235,201,30)" fg:x="427" fg:w="1"/><text x="34.2198%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.0493%" y="533" width="0.0796%" height="15" fill="rgb(216,198,48)" fg:x="428" fg:w="1"/><text x="34.2993%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.0493%" y="517" width="0.0796%" height="15" fill="rgb(254,186,25)" fg:x="428" fg:w="1"/><text x="34.2993%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.0493%" y="501" width="0.0796%" height="15" fill="rgb(227,87,5)" fg:x="428" fg:w="1"/><text x="34.2993%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.0493%" y="485" width="0.0796%" height="15" fill="rgb(236,205,25)" fg:x="428" fg:w="1"/><text x="34.2993%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.1289%" y="533" width="0.0796%" height="15" fill="rgb(229,99,32)" fg:x="429" fg:w="1"/><text x="34.3789%" y="543.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="34.2084%" y="533" width="0.0796%" height="15" fill="rgb(231,177,31)" fg:x="430" fg:w="1"/><text x="34.4584%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="34.2084%" y="517" width="0.0796%" height="15" fill="rgb(246,15,2)" fg:x="430" fg:w="1"/><text x="34.4584%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="34.2084%" y="501" width="0.0796%" height="15" fill="rgb(207,39,15)" fg:x="430" fg:w="1"/><text x="34.4584%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2084%" y="485" width="0.0796%" height="15" fill="rgb(207,44,9)" fg:x="430" fg:w="1"/><text x="34.4584%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.2084%" y="469" width="0.0796%" height="15" fill="rgb(225,224,33)" fg:x="430" fg:w="1"/><text x="34.4584%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.2880%" y="453" width="0.0796%" height="15" fill="rgb(252,151,3)" fg:x="431" fg:w="1"/><text x="34.5380%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.2880%" y="437" width="0.0796%" height="15" fill="rgb(211,140,13)" fg:x="431" fg:w="1"/><text x="34.5380%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="34.3675%" y="421" width="0.0796%" height="15" fill="rgb(239,225,17)" fg:x="432" fg:w="1"/><text x="34.6175%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="34.2880%" y="501" width="0.2387%" height="15" fill="rgb(223,170,52)" fg:x="431" fg:w="3"/><text x="34.5380%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="34.2880%" y="485" width="0.2387%" height="15" fill="rgb(212,64,21)" fg:x="431" fg:w="3"/><text x="34.5380%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.2880%" y="469" width="0.2387%" height="15" fill="rgb(236,126,48)" fg:x="431" fg:w="3"/><text x="34.5380%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="34.3675%" y="453" width="0.1591%" height="15" fill="rgb(209,135,11)" fg:x="432" fg:w="2"/><text x="34.6175%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.3675%" y="437" width="0.1591%" height="15" fill="rgb(228,126,40)" fg:x="432" fg:w="2"/><text x="34.6175%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.4471%" y="421" width="0.0796%" height="15" fill="rgb(205,196,36)" fg:x="433" fg:w="1"/><text x="34.6971%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="34.2880%" y="517" width="0.3182%" height="15" fill="rgb(243,160,33)" fg:x="431" fg:w="4"/><text x="34.5380%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5267%" y="501" width="0.0796%" height="15" fill="rgb(210,84,20)" fg:x="434" fg:w="1"/><text x="34.7767%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6062%" y="485" width="0.0796%" height="15" fill="rgb(228,213,30)" fg:x="435" fg:w="1"/><text x="34.8562%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="34.6062%" y="501" width="0.1591%" height="15" fill="rgb(252,33,45)" fg:x="435" fg:w="2"/><text x="34.8562%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6858%" y="485" width="0.0796%" height="15" fill="rgb(254,227,20)" fg:x="436" fg:w="1"/><text x="34.9358%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6858%" y="469" width="0.0796%" height="15" fill="rgb(228,192,2)" fg:x="436" fg:w="1"/><text x="34.9358%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.6858%" y="453" width="0.0796%" height="15" fill="rgb(233,32,8)" fg:x="436" fg:w="1"/><text x="34.9358%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6858%" y="437" width="0.0796%" height="15" fill="rgb(220,146,47)" fg:x="436" fg:w="1"/><text x="34.9358%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="34.6858%" y="421" width="0.0796%" height="15" fill="rgb(246,194,1)" fg:x="436" fg:w="1"/><text x="34.9358%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.6858%" y="405" width="0.0796%" height="15" fill="rgb(218,203,9)" fg:x="436" fg:w="1"/><text x="34.9358%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6858%" y="389" width="0.0796%" height="15" fill="rgb(237,97,14)" fg:x="436" fg:w="1"/><text x="34.9358%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="34.7653%" y="501" width="0.0796%" height="15" fill="rgb(239,76,15)" fg:x="437" fg:w="1"/><text x="35.0153%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="34.7653%" y="485" width="0.0796%" height="15" fill="rgb(222,53,45)" fg:x="437" fg:w="1"/><text x="35.0153%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="34.7653%" y="469" width="0.0796%" height="15" fill="rgb(237,88,5)" fg:x="437" fg:w="1"/><text x="35.0153%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="34.7653%" y="453" width="0.0796%" height="15" fill="rgb(218,223,35)" fg:x="437" fg:w="1"/><text x="35.0153%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8449%" y="437" width="0.0796%" height="15" fill="rgb(243,229,38)" fg:x="438" fg:w="1"/><text x="35.0949%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8449%" y="421" width="0.0796%" height="15" fill="rgb(240,75,41)" fg:x="438" fg:w="1"/><text x="35.0949%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8449%" y="405" width="0.0796%" height="15" fill="rgb(209,110,37)" fg:x="438" fg:w="1"/><text x="35.0949%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8449%" y="389" width="0.0796%" height="15" fill="rgb(221,130,46)" fg:x="438" fg:w="1"/><text x="35.0949%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8449%" y="373" width="0.0796%" height="15" fill="rgb(237,160,20)" fg:x="438" fg:w="1"/><text x="35.0949%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8449%" y="357" width="0.0796%" height="15" fill="rgb(234,126,24)" fg:x="438" fg:w="1"/><text x="35.0949%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8449%" y="341" width="0.0796%" height="15" fill="rgb(207,177,9)" fg:x="438" fg:w="1"/><text x="35.0949%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8449%" y="325" width="0.0796%" height="15" fill="rgb(231,191,33)" fg:x="438" fg:w="1"/><text x="35.0949%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8449%" y="309" width="0.0796%" height="15" fill="rgb(207,42,1)" fg:x="438" fg:w="1"/><text x="35.0949%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.8449%" y="293" width="0.0796%" height="15" fill="rgb(218,34,50)" fg:x="438" fg:w="1"/><text x="35.0949%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.8449%" y="277" width="0.0796%" height="15" fill="rgb(254,126,39)" fg:x="438" fg:w="1"/><text x="35.0949%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.8449%" y="261" width="0.0796%" height="15" fill="rgb(251,17,26)" fg:x="438" fg:w="1"/><text x="35.0949%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.8449%" y="245" width="0.0796%" height="15" fill="rgb(252,215,34)" fg:x="438" fg:w="1"/><text x="35.0949%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8449%" y="229" width="0.0796%" height="15" fill="rgb(217,120,44)" fg:x="438" fg:w="1"/><text x="35.0949%" y="239.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="34.8449%" y="485" width="0.1591%" height="15" fill="rgb(211,31,11)" fg:x="438" fg:w="2"/><text x="35.0949%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="34.8449%" y="469" width="0.1591%" height="15" fill="rgb(222,69,51)" fg:x="438" fg:w="2"/><text x="35.0949%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="34.8449%" y="453" width="0.1591%" height="15" fill="rgb(215,229,42)" fg:x="438" fg:w="2"/><text x="35.0949%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9244%" y="437" width="0.0796%" height="15" fill="rgb(212,102,15)" fg:x="439" fg:w="1"/><text x="35.1744%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="34.6062%" y="517" width="0.7160%" height="15" fill="rgb(205,179,41)" fg:x="435" fg:w="9"/><text x="34.8562%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="34.8449%" y="501" width="0.4773%" height="15" fill="rgb(219,148,46)" fg:x="438" fg:w="6"/><text x="35.0949%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="35.0040%" y="485" width="0.3182%" height="15" fill="rgb(243,40,19)" fg:x="440" fg:w="4"/><text x="35.2540%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="35.0040%" y="469" width="0.3182%" height="15" fill="rgb(208,206,34)" fg:x="440" fg:w="4"/><text x="35.2540%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="35.0835%" y="453" width="0.2387%" height="15" fill="rgb(244,184,38)" fg:x="441" fg:w="3"/><text x="35.3335%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="35.0835%" y="437" width="0.2387%" height="15" fill="rgb(244,151,47)" fg:x="441" fg:w="3"/><text x="35.3335%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="35.0835%" y="421" width="0.2387%" height="15" fill="rgb(236,134,42)" fg:x="441" fg:w="3"/><text x="35.3335%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="35.0835%" y="405" width="0.2387%" height="15" fill="rgb(233,93,22)" fg:x="441" fg:w="3"/><text x="35.3335%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="35.1631%" y="389" width="0.1591%" height="15" fill="rgb(211,202,10)" fg:x="442" fg:w="2"/><text x="35.4131%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.2426%" y="373" width="0.0796%" height="15" fill="rgb(240,63,8)" fg:x="443" fg:w="1"/><text x="35.4926%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3222%" y="485" width="0.0796%" height="15" fill="rgb(214,9,4)" fg:x="444" fg:w="1"/><text x="35.5722%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3222%" y="469" width="0.0796%" height="15" fill="rgb(243,66,45)" fg:x="444" fg:w="1"/><text x="35.5722%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.3222%" y="453" width="0.0796%" height="15" fill="rgb(220,50,42)" fg:x="444" fg:w="1"/><text x="35.5722%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (19 samples, 1.51%)</title><rect x="33.9698%" y="565" width="1.5115%" height="15" fill="rgb(220,134,27)" fg:x="427" fg:w="19"/><text x="34.2198%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (19 samples, 1.51%)</title><rect x="33.9698%" y="549" width="1.5115%" height="15" fill="rgb(246,151,50)" fg:x="427" fg:w="19"/><text x="34.2198%" y="559.50"></text></g><g><title>plugins_core::build::Build::save (15 samples, 1.19%)</title><rect x="34.2880%" y="533" width="1.1933%" height="15" fill="rgb(238,216,27)" fg:x="431" fg:w="15"/><text x="34.5380%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.3222%" y="517" width="0.1591%" height="15" fill="rgb(250,92,11)" fg:x="444" fg:w="2"/><text x="35.5722%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.3222%" y="501" width="0.1591%" height="15" fill="rgb(248,183,6)" fg:x="444" fg:w="2"/><text x="35.5722%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.4018%" y="485" width="0.0796%" height="15" fill="rgb(211,204,50)" fg:x="445" fg:w="1"/><text x="35.6518%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.5609%" y="517" width="0.0796%" height="15" fill="rgb(252,55,47)" fg:x="447" fg:w="1"/><text x="35.8109%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.6404%" y="517" width="0.0796%" height="15" fill="rgb(240,198,32)" fg:x="448" fg:w="1"/><text x="35.8904%" y="527.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="35.5609%" y="533" width="0.2387%" height="15" fill="rgb(224,203,19)" fg:x="447" fg:w="3"/><text x="35.8109%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.7200%" y="517" width="0.0796%" height="15" fill="rgb(205,27,16)" fg:x="449" fg:w="1"/><text x="35.9700%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7200%" y="501" width="0.0796%" height="15" fill="rgb(224,226,17)" fg:x="449" fg:w="1"/><text x="35.9700%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.7200%" y="485" width="0.0796%" height="15" fill="rgb(205,216,54)" fg:x="449" fg:w="1"/><text x="35.9700%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7200%" y="469" width="0.0796%" height="15" fill="rgb(248,168,46)" fg:x="449" fg:w="1"/><text x="35.9700%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.7995%" y="469" width="0.0796%" height="15" fill="rgb(226,111,45)" fg:x="450" fg:w="1"/><text x="36.0495%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.7995%" y="453" width="0.0796%" height="15" fill="rgb(231,15,9)" fg:x="450" fg:w="1"/><text x="36.0495%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.7995%" y="437" width="0.0796%" height="15" fill="rgb(243,168,3)" fg:x="450" fg:w="1"/><text x="36.0495%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (6 samples, 0.48%)</title><rect x="35.4813%" y="549" width="0.4773%" height="15" fill="rgb(221,220,54)" fg:x="446" fg:w="6"/><text x="35.7313%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="35.7995%" y="533" width="0.1591%" height="15" fill="rgb(232,174,38)" fg:x="450" fg:w="2"/><text x="36.0495%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.7995%" y="517" width="0.1591%" height="15" fill="rgb(205,14,38)" fg:x="450" fg:w="2"/><text x="36.0495%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="35.7995%" y="501" width="0.1591%" height="15" fill="rgb(234,89,19)" fg:x="450" fg:w="2"/><text x="36.0495%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="35.7995%" y="485" width="0.1591%" height="15" fill="rgb(216,68,51)" fg:x="450" fg:w="2"/><text x="36.0495%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.08%)</title><rect x="35.8791%" y="469" width="0.0796%" height="15" fill="rgb(213,49,2)" fg:x="451" fg:w="1"/><text x="36.1291%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.9586%" y="469" width="0.0796%" height="15" fill="rgb(242,146,30)" fg:x="452" fg:w="1"/><text x="36.2086%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="35.9586%" y="549" width="0.1591%" height="15" fill="rgb(224,188,11)" fg:x="452" fg:w="2"/><text x="36.2086%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="35.9586%" y="533" width="0.1591%" height="15" fill="rgb(213,159,11)" fg:x="452" fg:w="2"/><text x="36.2086%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="35.9586%" y="517" width="0.1591%" height="15" fill="rgb(229,13,31)" fg:x="452" fg:w="2"/><text x="36.2086%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.9586%" y="501" width="0.1591%" height="15" fill="rgb(209,103,11)" fg:x="452" fg:w="2"/><text x="36.2086%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.9586%" y="485" width="0.1591%" height="15" fill="rgb(206,3,4)" fg:x="452" fg:w="2"/><text x="36.2086%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.0382%" y="469" width="0.0796%" height="15" fill="rgb(252,10,49)" fg:x="453" fg:w="1"/><text x="36.2882%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.0382%" y="453" width="0.0796%" height="15" fill="rgb(217,160,32)" fg:x="453" fg:w="1"/><text x="36.2882%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="36.1177%" y="549" width="0.0796%" height="15" fill="rgb(249,196,0)" fg:x="454" fg:w="1"/><text x="36.3677%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1177%" y="533" width="0.0796%" height="15" fill="rgb(213,17,48)" fg:x="454" fg:w="1"/><text x="36.3677%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.4360%" y="437" width="0.0796%" height="15" fill="rgb(206,42,46)" fg:x="458" fg:w="1"/><text x="36.6860%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.4360%" y="421" width="0.0796%" height="15" fill="rgb(212,105,24)" fg:x="458" fg:w="1"/><text x="36.6860%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="36.4360%" y="405" width="0.0796%" height="15" fill="rgb(243,216,30)" fg:x="458" fg:w="1"/><text x="36.6860%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="36.4360%" y="389" width="0.0796%" height="15" fill="rgb(207,121,3)" fg:x="458" fg:w="1"/><text x="36.6860%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="36.4360%" y="373" width="0.0796%" height="15" fill="rgb(249,78,0)" fg:x="458" fg:w="1"/><text x="36.6860%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="36.4360%" y="357" width="0.0796%" height="15" fill="rgb(244,151,32)" fg:x="458" fg:w="1"/><text x="36.6860%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.4360%" y="341" width="0.0796%" height="15" fill="rgb(228,63,25)" fg:x="458" fg:w="1"/><text x="36.6860%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (3 samples, 0.24%)</title><rect x="36.3564%" y="517" width="0.2387%" height="15" fill="rgb(231,158,23)" fg:x="457" fg:w="3"/><text x="36.6064%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (3 samples, 0.24%)</title><rect x="36.3564%" y="501" width="0.2387%" height="15" fill="rgb(248,107,23)" fg:x="457" fg:w="3"/><text x="36.6064%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="36.4360%" y="485" width="0.1591%" height="15" fill="rgb(215,168,21)" fg:x="458" fg:w="2"/><text x="36.6860%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="36.4360%" y="469" width="0.1591%" height="15" fill="rgb(227,83,22)" fg:x="458" fg:w="2"/><text x="36.6860%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="36.4360%" y="453" width="0.1591%" height="15" fill="rgb(217,118,43)" fg:x="458" fg:w="2"/><text x="36.6860%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.5155%" y="437" width="0.0796%" height="15" fill="rgb(229,220,41)" fg:x="459" fg:w="1"/><text x="36.7655%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="36.5155%" y="421" width="0.0796%" height="15" fill="rgb(254,146,46)" fg:x="459" fg:w="1"/><text x="36.7655%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="36.5155%" y="405" width="0.0796%" height="15" fill="rgb(233,208,31)" fg:x="459" fg:w="1"/><text x="36.7655%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.5155%" y="389" width="0.0796%" height="15" fill="rgb(222,162,7)" fg:x="459" fg:w="1"/><text x="36.7655%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.5155%" y="373" width="0.0796%" height="15" fill="rgb(230,117,45)" fg:x="459" fg:w="1"/><text x="36.7655%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="36.5155%" y="357" width="0.0796%" height="15" fill="rgb(239,163,6)" fg:x="459" fg:w="1"/><text x="36.7655%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="36.5155%" y="341" width="0.0796%" height="15" fill="rgb(246,130,17)" fg:x="459" fg:w="1"/><text x="36.7655%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="36.5155%" y="325" width="0.0796%" height="15" fill="rgb(216,84,5)" fg:x="459" fg:w="1"/><text x="36.7655%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="36.5155%" y="309" width="0.0796%" height="15" fill="rgb(230,200,21)" fg:x="459" fg:w="1"/><text x="36.7655%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.5155%" y="293" width="0.0796%" height="15" fill="rgb(224,2,8)" fg:x="459" fg:w="1"/><text x="36.7655%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="36.5951%" y="517" width="0.1591%" height="15" fill="rgb(238,178,10)" fg:x="460" fg:w="2"/><text x="36.8451%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6746%" y="501" width="0.0796%" height="15" fill="rgb(242,153,24)" fg:x="461" fg:w="1"/><text x="36.9246%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.6746%" y="485" width="0.0796%" height="15" fill="rgb(242,32,48)" fg:x="461" fg:w="1"/><text x="36.9246%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="36.6746%" y="469" width="0.0796%" height="15" fill="rgb(227,36,0)" fg:x="461" fg:w="1"/><text x="36.9246%" y="479.50"></text></g><g><title>plugins_core::build::Build::new_world (8 samples, 0.64%)</title><rect x="36.1973%" y="549" width="0.6364%" height="15" fill="rgb(251,33,35)" fg:x="455" fg:w="8"/><text x="36.4473%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (8 samples, 0.64%)</title><rect x="36.1973%" y="533" width="0.6364%" height="15" fill="rgb(232,168,51)" fg:x="455" fg:w="8"/><text x="36.4473%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="36.7542%" y="517" width="0.0796%" height="15" fill="rgb(228,56,10)" fg:x="462" fg:w="1"/><text x="37.0042%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.7542%" y="501" width="0.0796%" height="15" fill="rgb(231,10,26)" fg:x="462" fg:w="1"/><text x="37.0042%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.7542%" y="485" width="0.0796%" height="15" fill="rgb(226,202,12)" fg:x="462" fg:w="1"/><text x="37.0042%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.7542%" y="469" width="0.0796%" height="15" fill="rgb(251,49,21)" fg:x="462" fg:w="1"/><text x="37.0042%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8337%" y="437" width="0.0796%" height="15" fill="rgb(206,228,28)" fg:x="463" fg:w="1"/><text x="37.0837%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="36.8337%" y="517" width="0.1591%" height="15" fill="rgb(205,198,31)" fg:x="463" fg:w="2"/><text x="37.0837%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.8337%" y="501" width="0.1591%" height="15" fill="rgb(213,69,1)" fg:x="463" fg:w="2"/><text x="37.0837%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.8337%" y="485" width="0.1591%" height="15" fill="rgb(209,177,9)" fg:x="463" fg:w="2"/><text x="37.0837%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.8337%" y="469" width="0.1591%" height="15" fill="rgb(227,119,30)" fg:x="463" fg:w="2"/><text x="37.0837%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.8337%" y="453" width="0.1591%" height="15" fill="rgb(234,106,41)" fg:x="463" fg:w="2"/><text x="37.0837%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9133%" y="437" width="0.0796%" height="15" fill="rgb(244,103,47)" fg:x="464" fg:w="1"/><text x="37.1633%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9133%" y="421" width="0.0796%" height="15" fill="rgb(212,211,25)" fg:x="464" fg:w="1"/><text x="37.1633%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.9133%" y="405" width="0.0796%" height="15" fill="rgb(208,63,53)" fg:x="464" fg:w="1"/><text x="37.1633%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.9133%" y="389" width="0.0796%" height="15" fill="rgb(213,176,21)" fg:x="464" fg:w="1"/><text x="37.1633%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="36.8337%" y="533" width="0.2387%" height="15" fill="rgb(243,124,12)" fg:x="463" fg:w="3"/><text x="37.0837%" y="543.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="36.9928%" y="517" width="0.0796%" height="15" fill="rgb(239,2,35)" fg:x="465" fg:w="1"/><text x="37.2428%" y="527.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="37.1519%" y="469" width="0.0796%" height="15" fill="rgb(253,169,22)" fg:x="467" fg:w="1"/><text x="37.4019%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.1519%" y="453" width="0.0796%" height="15" fill="rgb(254,51,12)" fg:x="467" fg:w="1"/><text x="37.4019%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.1519%" y="437" width="0.0796%" height="15" fill="rgb(244,17,47)" fg:x="467" fg:w="1"/><text x="37.4019%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.1519%" y="421" width="0.0796%" height="15" fill="rgb(251,45,46)" fg:x="467" fg:w="1"/><text x="37.4019%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.1519%" y="405" width="0.0796%" height="15" fill="rgb(223,87,43)" fg:x="467" fg:w="1"/><text x="37.4019%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1519%" y="389" width="0.0796%" height="15" fill="rgb(230,132,31)" fg:x="467" fg:w="1"/><text x="37.4019%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="37.1519%" y="501" width="0.1591%" height="15" fill="rgb(206,99,1)" fg:x="467" fg:w="2"/><text x="37.4019%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="37.1519%" y="485" width="0.1591%" height="15" fill="rgb(227,110,25)" fg:x="467" fg:w="2"/><text x="37.4019%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2315%" y="469" width="0.0796%" height="15" fill="rgb(217,182,7)" fg:x="468" fg:w="1"/><text x="37.4815%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2315%" y="453" width="0.0796%" height="15" fill="rgb(250,176,4)" fg:x="468" fg:w="1"/><text x="37.4815%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2315%" y="437" width="0.0796%" height="15" fill="rgb(244,98,30)" fg:x="468" fg:w="1"/><text x="37.4815%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="37.3111%" y="501" width="0.0796%" height="15" fill="rgb(228,150,42)" fg:x="469" fg:w="1"/><text x="37.5611%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3111%" y="485" width="0.0796%" height="15" fill="rgb(231,91,46)" fg:x="469" fg:w="1"/><text x="37.5611%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.3111%" y="469" width="0.0796%" height="15" fill="rgb(252,161,32)" fg:x="469" fg:w="1"/><text x="37.5611%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.3111%" y="453" width="0.0796%" height="15" fill="rgb(236,69,41)" fg:x="469" fg:w="1"/><text x="37.5611%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.4702%" y="469" width="0.1591%" height="15" fill="rgb(212,160,3)" fg:x="471" fg:w="2"/><text x="37.7202%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="37.6293%" y="469" width="0.0796%" height="15" fill="rgb(216,5,50)" fg:x="473" fg:w="1"/><text x="37.8793%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.6293%" y="453" width="0.0796%" height="15" fill="rgb(241,138,25)" fg:x="473" fg:w="1"/><text x="37.8793%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6293%" y="437" width="0.0796%" height="15" fill="rgb(239,42,18)" fg:x="473" fg:w="1"/><text x="37.8793%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.8679%" y="373" width="0.0796%" height="15" fill="rgb(239,40,7)" fg:x="476" fg:w="1"/><text x="38.1179%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.8679%" y="357" width="0.0796%" height="15" fill="rgb(239,11,31)" fg:x="476" fg:w="1"/><text x="38.1179%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.8679%" y="341" width="0.0796%" height="15" fill="rgb(224,77,40)" fg:x="476" fg:w="1"/><text x="38.1179%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8679%" y="325" width="0.0796%" height="15" fill="rgb(226,15,5)" fg:x="476" fg:w="1"/><text x="38.1179%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.88%)</title><rect x="37.1519%" y="517" width="0.8751%" height="15" fill="rgb(254,188,5)" fg:x="467" fg:w="11"/><text x="37.4019%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="37.3906%" y="501" width="0.6364%" height="15" fill="rgb(241,148,52)" fg:x="470" fg:w="8"/><text x="37.6406%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="37.3906%" y="485" width="0.6364%" height="15" fill="rgb(251,48,36)" fg:x="470" fg:w="8"/><text x="37.6406%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="37.7088%" y="469" width="0.3182%" height="15" fill="rgb(243,83,13)" fg:x="474" fg:w="4"/><text x="37.9588%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="37.7884%" y="453" width="0.2387%" height="15" fill="rgb(210,105,0)" fg:x="475" fg:w="3"/><text x="38.0384%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="37.8679%" y="437" width="0.1591%" height="15" fill="rgb(239,60,36)" fg:x="476" fg:w="2"/><text x="38.1179%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="37.8679%" y="421" width="0.1591%" height="15" fill="rgb(210,20,0)" fg:x="476" fg:w="2"/><text x="38.1179%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="37.8679%" y="405" width="0.1591%" height="15" fill="rgb(244,26,53)" fg:x="476" fg:w="2"/><text x="38.1179%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="37.8679%" y="389" width="0.1591%" height="15" fill="rgb(240,100,49)" fg:x="476" fg:w="2"/><text x="38.1179%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9475%" y="373" width="0.0796%" height="15" fill="rgb(250,46,45)" fg:x="477" fg:w="1"/><text x="38.1975%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.03%)</title><rect x="37.0724%" y="533" width="1.0342%" height="15" fill="rgb(220,181,29)" fg:x="466" fg:w="13"/><text x="37.3224%" y="543.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="38.0270%" y="517" width="0.0796%" height="15" fill="rgb(213,137,33)" fg:x="478" fg:w="1"/><text x="38.2770%" y="527.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="38.0270%" y="501" width="0.0796%" height="15" fill="rgb(213,27,48)" fg:x="478" fg:w="1"/><text x="38.2770%" y="511.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (373 samples, 29.67%)</title><rect x="8.5123%" y="581" width="29.6738%" height="15" fill="rgb(245,180,39)" fg:x="107" fg:w="373"/><text x="8.7623%" y="591.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixtur..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (34 samples, 2.70%)</title><rect x="35.4813%" y="565" width="2.7049%" height="15" fill="rgb(212,158,42)" fg:x="446" fg:w="34"/><text x="35.7313%" y="575.50">pl..</text></g><g><title>plugins_core::build::Build::save (17 samples, 1.35%)</title><rect x="36.8337%" y="549" width="1.3524%" height="15" fill="rgb(228,193,18)" fg:x="463" fg:w="17"/><text x="37.0837%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1066%" y="533" width="0.0796%" height="15" fill="rgb(245,172,29)" fg:x="479" fg:w="1"/><text x="38.3566%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1066%" y="517" width="0.0796%" height="15" fill="rgb(207,98,24)" fg:x="479" fg:w="1"/><text x="38.3566%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1066%" y="501" width="0.0796%" height="15" fill="rgb(249,92,26)" fg:x="479" fg:w="1"/><text x="38.3566%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1066%" y="485" width="0.0796%" height="15" fill="rgb(217,176,26)" fg:x="479" fg:w="1"/><text x="38.3566%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="38.1862%" y="581" width="0.0796%" height="15" fill="rgb(221,8,39)" fg:x="480" fg:w="1"/><text x="38.4362%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="38.1862%" y="565" width="0.0796%" height="15" fill="rgb(208,90,18)" fg:x="480" fg:w="1"/><text x="38.4362%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="38.1862%" y="549" width="0.0796%" height="15" fill="rgb(207,202,30)" fg:x="480" fg:w="1"/><text x="38.4362%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1862%" y="533" width="0.0796%" height="15" fill="rgb(231,124,22)" fg:x="480" fg:w="1"/><text x="38.4362%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.3453%" y="565" width="0.0796%" height="15" fill="rgb(206,15,5)" fg:x="482" fg:w="1"/><text x="38.5953%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5044%" y="533" width="0.0796%" height="15" fill="rgb(239,16,52)" fg:x="484" fg:w="1"/><text x="38.7544%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="38.4248%" y="565" width="0.2387%" height="15" fill="rgb(245,213,29)" fg:x="483" fg:w="3"/><text x="38.6748%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.5044%" y="549" width="0.1591%" height="15" fill="rgb(213,203,36)" fg:x="484" fg:w="2"/><text x="38.7544%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.5839%" y="533" width="0.0796%" height="15" fill="rgb(209,55,18)" fg:x="485" fg:w="1"/><text x="38.8339%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.9021%" y="453" width="0.0796%" height="15" fill="rgb(207,133,49)" fg:x="489" fg:w="1"/><text x="39.1521%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.9021%" y="437" width="0.0796%" height="15" fill="rgb(240,33,46)" fg:x="489" fg:w="1"/><text x="39.1521%" y="447.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="38.9021%" y="421" width="0.0796%" height="15" fill="rgb(212,35,2)" fg:x="489" fg:w="1"/><text x="39.1521%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.9021%" y="405" width="0.0796%" height="15" fill="rgb(231,119,28)" fg:x="489" fg:w="1"/><text x="39.1521%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="38.9021%" y="389" width="0.0796%" height="15" fill="rgb(252,178,7)" fg:x="489" fg:w="1"/><text x="39.1521%" y="399.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="38.9021%" y="373" width="0.0796%" height="15" fill="rgb(251,91,4)" fg:x="489" fg:w="1"/><text x="39.1521%" y="383.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="38.9021%" y="357" width="0.0796%" height="15" fill="rgb(233,122,19)" fg:x="489" fg:w="1"/><text x="39.1521%" y="367.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="38.9021%" y="341" width="0.0796%" height="15" fill="rgb(231,208,46)" fg:x="489" fg:w="1"/><text x="39.1521%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="38.9021%" y="325" width="0.0796%" height="15" fill="rgb(243,15,41)" fg:x="489" fg:w="1"/><text x="39.1521%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="38.9021%" y="309" width="0.0796%" height="15" fill="rgb(210,32,43)" fg:x="489" fg:w="1"/><text x="39.1521%" y="319.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="38.9021%" y="293" width="0.0796%" height="15" fill="rgb(222,177,15)" fg:x="489" fg:w="1"/><text x="39.1521%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="38.9021%" y="277" width="0.0796%" height="15" fill="rgb(244,121,34)" fg:x="489" fg:w="1"/><text x="39.1521%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="38.9021%" y="261" width="0.0796%" height="15" fill="rgb(234,138,4)" fg:x="489" fg:w="1"/><text x="39.1521%" y="271.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.40%)</title><rect x="38.6635%" y="565" width="0.3978%" height="15" fill="rgb(240,97,48)" fg:x="486" fg:w="5"/><text x="38.9135%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="38.6635%" y="549" width="0.3978%" height="15" fill="rgb(237,65,54)" fg:x="486" fg:w="5"/><text x="38.9135%" y="559.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="38.6635%" y="533" width="0.3978%" height="15" fill="rgb(214,25,24)" fg:x="486" fg:w="5"/><text x="38.9135%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="38.7430%" y="517" width="0.3182%" height="15" fill="rgb(213,5,3)" fg:x="487" fg:w="4"/><text x="38.9930%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="38.7430%" y="501" width="0.3182%" height="15" fill="rgb(219,81,29)" fg:x="487" fg:w="4"/><text x="38.9930%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="38.8226%" y="485" width="0.2387%" height="15" fill="rgb(220,43,48)" fg:x="488" fg:w="3"/><text x="39.0726%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="38.9021%" y="469" width="0.1591%" height="15" fill="rgb(239,157,2)" fg:x="489" fg:w="2"/><text x="39.1521%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.9817%" y="453" width="0.0796%" height="15" fill="rgb(213,104,43)" fg:x="490" fg:w="1"/><text x="39.2317%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.9817%" y="437" width="0.0796%" height="15" fill="rgb(237,84,9)" fg:x="490" fg:w="1"/><text x="39.2317%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="38.9817%" y="421" width="0.0796%" height="15" fill="rgb(252,6,33)" fg:x="490" fg:w="1"/><text x="39.2317%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="38.9817%" y="405" width="0.0796%" height="15" fill="rgb(251,172,22)" fg:x="490" fg:w="1"/><text x="39.2317%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.9817%" y="389" width="0.0796%" height="15" fill="rgb(244,91,53)" fg:x="490" fg:w="1"/><text x="39.2317%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.9817%" y="373" width="0.0796%" height="15" fill="rgb(219,29,30)" fg:x="490" fg:w="1"/><text x="39.2317%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="38.9817%" y="357" width="0.0796%" height="15" fill="rgb(213,3,15)" fg:x="490" fg:w="1"/><text x="39.2317%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="38.9817%" y="341" width="0.0796%" height="15" fill="rgb(208,25,28)" fg:x="490" fg:w="1"/><text x="39.2317%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="38.9817%" y="325" width="0.0796%" height="15" fill="rgb(252,144,25)" fg:x="490" fg:w="1"/><text x="39.2317%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="38.9817%" y="309" width="0.0796%" height="15" fill="rgb(226,220,25)" fg:x="490" fg:w="1"/><text x="39.2317%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="38.9817%" y="293" width="0.0796%" height="15" fill="rgb(212,131,28)" fg:x="490" fg:w="1"/><text x="39.2317%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="38.9817%" y="277" width="0.0796%" height="15" fill="rgb(219,143,52)" fg:x="490" fg:w="1"/><text x="39.2317%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.9817%" y="261" width="0.0796%" height="15" fill="rgb(215,56,7)" fg:x="490" fg:w="1"/><text x="39.2317%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="38.9817%" y="245" width="0.0796%" height="15" fill="rgb(239,59,51)" fg:x="490" fg:w="1"/><text x="39.2317%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.9817%" y="229" width="0.0796%" height="15" fill="rgb(209,215,4)" fg:x="490" fg:w="1"/><text x="39.2317%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.9817%" y="213" width="0.0796%" height="15" fill="rgb(221,118,39)" fg:x="490" fg:w="1"/><text x="39.2317%" y="223.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="39.1408%" y="533" width="0.0796%" height="15" fill="rgb(236,6,44)" fg:x="492" fg:w="1"/><text x="39.3908%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="39.1408%" y="517" width="0.0796%" height="15" fill="rgb(216,122,9)" fg:x="492" fg:w="1"/><text x="39.3908%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="39.1408%" y="501" width="0.0796%" height="15" fill="rgb(244,134,42)" fg:x="492" fg:w="1"/><text x="39.3908%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.2999%" y="469" width="0.0796%" height="15" fill="rgb(209,189,35)" fg:x="494" fg:w="1"/><text x="39.5499%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="39.3795%" y="453" width="0.3978%" height="15" fill="rgb(250,47,36)" fg:x="495" fg:w="5"/><text x="39.6295%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="39.4590%" y="437" width="0.3182%" height="15" fill="rgb(252,112,4)" fg:x="496" fg:w="4"/><text x="39.7090%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="39.5386%" y="421" width="0.2387%" height="15" fill="rgb(221,79,51)" fg:x="497" fg:w="3"/><text x="39.7886%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="39.6181%" y="405" width="0.1591%" height="15" fill="rgb(232,65,53)" fg:x="498" fg:w="2"/><text x="39.8681%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="39.6181%" y="389" width="0.1591%" height="15" fill="rgb(211,37,7)" fg:x="498" fg:w="2"/><text x="39.8681%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="39.6181%" y="373" width="0.1591%" height="15" fill="rgb(234,221,18)" fg:x="498" fg:w="2"/><text x="39.8681%" y="383.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="39.6181%" y="357" width="0.1591%" height="15" fill="rgb(220,158,26)" fg:x="498" fg:w="2"/><text x="39.8681%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="39.3795%" y="469" width="0.4773%" height="15" fill="rgb(220,70,6)" fg:x="495" fg:w="6"/><text x="39.6295%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.7772%" y="453" width="0.0796%" height="15" fill="rgb(250,39,48)" fg:x="500" fg:w="1"/><text x="40.0272%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="39.8568%" y="453" width="0.0796%" height="15" fill="rgb(206,40,27)" fg:x="501" fg:w="1"/><text x="40.1068%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.8568%" y="437" width="0.0796%" height="15" fill="rgb(247,80,36)" fg:x="501" fg:w="1"/><text x="40.1068%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="39.9364%" y="453" width="0.3978%" height="15" fill="rgb(222,9,20)" fg:x="502" fg:w="5"/><text x="40.1864%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="40.0955%" y="437" width="0.2387%" height="15" fill="rgb(217,26,45)" fg:x="504" fg:w="3"/><text x="40.3455%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="40.0955%" y="421" width="0.2387%" height="15" fill="rgb(221,67,14)" fg:x="504" fg:w="3"/><text x="40.3455%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="40.0955%" y="405" width="0.2387%" height="15" fill="rgb(248,100,24)" fg:x="504" fg:w="3"/><text x="40.3455%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="40.1750%" y="389" width="0.1591%" height="15" fill="rgb(230,187,16)" fg:x="505" fg:w="2"/><text x="40.4250%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.2546%" y="373" width="0.0796%" height="15" fill="rgb(205,108,13)" fg:x="506" fg:w="1"/><text x="40.5046%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="40.2546%" y="357" width="0.0796%" height="15" fill="rgb(235,71,51)" fg:x="506" fg:w="1"/><text x="40.5046%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="40.4932%" y="405" width="0.0796%" height="15" fill="rgb(251,172,48)" fg:x="509" fg:w="1"/><text x="40.7432%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="40.5728%" y="389" width="0.1591%" height="15" fill="rgb(240,96,49)" fg:x="510" fg:w="2"/><text x="40.8228%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="40.5728%" y="405" width="0.2387%" height="15" fill="rgb(235,46,36)" fg:x="510" fg:w="3"/><text x="40.8228%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.7319%" y="389" width="0.0796%" height="15" fill="rgb(244,3,49)" fg:x="512" fg:w="1"/><text x="40.9819%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.7319%" y="373" width="0.0796%" height="15" fill="rgb(206,78,54)" fg:x="512" fg:w="1"/><text x="40.9819%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.7319%" y="357" width="0.0796%" height="15" fill="rgb(208,85,42)" fg:x="512" fg:w="1"/><text x="40.9819%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="40.4137%" y="421" width="0.4773%" height="15" fill="rgb(219,196,21)" fg:x="508" fg:w="6"/><text x="40.6637%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.8115%" y="405" width="0.0796%" height="15" fill="rgb(238,19,9)" fg:x="513" fg:w="1"/><text x="41.0615%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="40.4137%" y="437" width="0.5569%" height="15" fill="rgb(206,86,13)" fg:x="508" fg:w="7"/><text x="40.6637%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.8910%" y="421" width="0.0796%" height="15" fill="rgb(214,123,40)" fg:x="514" fg:w="1"/><text x="41.1410%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="40.9706%" y="437" width="0.3182%" height="15" fill="rgb(243,53,5)" fg:x="515" fg:w="4"/><text x="41.2206%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.2092%" y="421" width="0.0796%" height="15" fill="rgb(254,186,31)" fg:x="518" fg:w="1"/><text x="41.4592%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.2092%" y="405" width="0.0796%" height="15" fill="rgb(221,216,25)" fg:x="518" fg:w="1"/><text x="41.4592%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.2092%" y="389" width="0.0796%" height="15" fill="rgb(248,107,42)" fg:x="518" fg:w="1"/><text x="41.4592%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="41.3683%" y="421" width="0.3182%" height="15" fill="rgb(221,85,43)" fg:x="520" fg:w="4"/><text x="41.6183%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="41.3683%" y="405" width="0.3182%" height="15" fill="rgb(225,34,24)" fg:x="520" fg:w="4"/><text x="41.6183%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="41.4479%" y="389" width="0.2387%" height="15" fill="rgb(211,119,1)" fg:x="521" fg:w="3"/><text x="41.6979%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="41.5274%" y="373" width="0.1591%" height="15" fill="rgb(254,216,46)" fg:x="522" fg:w="2"/><text x="41.7774%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.6070%" y="357" width="0.0796%" height="15" fill="rgb(238,11,38)" fg:x="523" fg:w="1"/><text x="41.8570%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.6070%" y="341" width="0.0796%" height="15" fill="rgb(233,50,15)" fg:x="523" fg:w="1"/><text x="41.8570%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.6070%" y="325" width="0.0796%" height="15" fill="rgb(217,181,29)" fg:x="523" fg:w="1"/><text x="41.8570%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="41.7661%" y="405" width="0.1591%" height="15" fill="rgb(214,56,3)" fg:x="525" fg:w="2"/><text x="42.0161%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.7661%" y="389" width="0.1591%" height="15" fill="rgb(230,69,45)" fg:x="525" fg:w="2"/><text x="42.0161%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.8457%" y="373" width="0.0796%" height="15" fill="rgb(224,201,50)" fg:x="526" fg:w="1"/><text x="42.0957%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.8457%" y="357" width="0.0796%" height="15" fill="rgb(217,228,18)" fg:x="526" fg:w="1"/><text x="42.0957%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.8457%" y="341" width="0.0796%" height="15" fill="rgb(239,33,44)" fg:x="526" fg:w="1"/><text x="42.0957%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.8457%" y="325" width="0.0796%" height="15" fill="rgb(248,210,23)" fg:x="526" fg:w="1"/><text x="42.0957%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.8457%" y="309" width="0.0796%" height="15" fill="rgb(253,135,8)" fg:x="526" fg:w="1"/><text x="42.0957%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="41.9252%" y="405" width="0.0796%" height="15" fill="rgb(217,98,21)" fg:x="527" fg:w="1"/><text x="42.1752%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.9252%" y="389" width="0.0796%" height="15" fill="rgb(253,130,21)" fg:x="527" fg:w="1"/><text x="42.1752%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.9252%" y="373" width="0.0796%" height="15" fill="rgb(207,81,54)" fg:x="527" fg:w="1"/><text x="42.1752%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.9252%" y="357" width="0.0796%" height="15" fill="rgb(232,48,33)" fg:x="527" fg:w="1"/><text x="42.1752%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="41.6866%" y="421" width="0.3978%" height="15" fill="rgb(211,9,35)" fg:x="524" fg:w="5"/><text x="41.9366%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="42.0048%" y="405" width="0.0796%" height="15" fill="rgb(205,152,21)" fg:x="528" fg:w="1"/><text x="42.2548%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.07%)</title><rect x="40.3341%" y="453" width="2.0684%" height="15" fill="rgb(249,21,27)" fg:x="507" fg:w="26"/><text x="40.5841%" y="463.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.11%)</title><rect x="41.2888%" y="437" width="1.1138%" height="15" fill="rgb(252,29,24)" fg:x="519" fg:w="14"/><text x="41.5388%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="42.0843%" y="421" width="0.3182%" height="15" fill="rgb(230,130,50)" fg:x="529" fg:w="4"/><text x="42.3343%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (41 samples, 3.26%)</title><rect x="39.2999%" y="485" width="3.2617%" height="15" fill="rgb(239,144,14)" fg:x="494" fg:w="41"/><text x="39.5499%" y="495.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.70%)</title><rect x="39.8568%" y="469" width="2.7049%" height="15" fill="rgb(227,111,50)" fg:x="501" fg:w="34"/><text x="40.1068%" y="479.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="42.4025%" y="453" width="0.1591%" height="15" fill="rgb(254,84,20)" fg:x="533" fg:w="2"/><text x="42.6525%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6412%" y="437" width="0.0796%" height="15" fill="rgb(232,90,48)" fg:x="536" fg:w="1"/><text x="42.8912%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="42.7208%" y="437" width="0.1591%" height="15" fill="rgb(253,63,47)" fg:x="537" fg:w="2"/><text x="42.9708%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.8003%" y="421" width="0.0796%" height="15" fill="rgb(251,146,35)" fg:x="538" fg:w="1"/><text x="43.0503%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.8799%" y="421" width="0.0796%" height="15" fill="rgb(229,192,35)" fg:x="539" fg:w="1"/><text x="43.1299%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.9594%" y="405" width="0.0796%" height="15" fill="rgb(225,68,9)" fg:x="540" fg:w="1"/><text x="43.2094%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.0390%" y="405" width="0.0796%" height="15" fill="rgb(214,97,34)" fg:x="541" fg:w="1"/><text x="43.2890%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0390%" y="389" width="0.0796%" height="15" fill="rgb(253,31,26)" fg:x="541" fg:w="1"/><text x="43.2890%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.1185%" y="373" width="0.0796%" height="15" fill="rgb(225,151,47)" fg:x="542" fg:w="1"/><text x="43.3685%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="42.5617%" y="485" width="0.7160%" height="15" fill="rgb(206,185,9)" fg:x="535" fg:w="9"/><text x="42.8117%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="42.5617%" y="469" width="0.7160%" height="15" fill="rgb(249,65,17)" fg:x="535" fg:w="9"/><text x="42.8117%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="42.5617%" y="453" width="0.7160%" height="15" fill="rgb(220,110,10)" fg:x="535" fg:w="9"/><text x="42.8117%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="42.8799%" y="437" width="0.3978%" height="15" fill="rgb(222,198,49)" fg:x="539" fg:w="5"/><text x="43.1299%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="42.9594%" y="421" width="0.3182%" height="15" fill="rgb(239,81,13)" fg:x="540" fg:w="4"/><text x="43.2094%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="43.1185%" y="405" width="0.1591%" height="15" fill="rgb(216,128,11)" fg:x="542" fg:w="2"/><text x="43.3685%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="43.1185%" y="389" width="0.1591%" height="15" fill="rgb(247,156,8)" fg:x="542" fg:w="2"/><text x="43.3685%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.1981%" y="373" width="0.0796%" height="15" fill="rgb(219,173,1)" fg:x="543" fg:w="1"/><text x="43.4481%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.3572%" y="437" width="0.0796%" height="15" fill="rgb(227,42,24)" fg:x="545" fg:w="1"/><text x="43.6072%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.4368%" y="421" width="0.0796%" height="15" fill="rgb(253,219,50)" fg:x="546" fg:w="1"/><text x="43.6868%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="43.5163%" y="421" width="0.2387%" height="15" fill="rgb(215,191,54)" fg:x="547" fg:w="3"/><text x="43.7663%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="43.5163%" y="405" width="0.2387%" height="15" fill="rgb(238,83,12)" fg:x="547" fg:w="3"/><text x="43.7663%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.9936%" y="405" width="0.0796%" height="15" fill="rgb(205,124,9)" fg:x="553" fg:w="1"/><text x="44.2436%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.0732%" y="405" width="0.0796%" height="15" fill="rgb(253,174,7)" fg:x="554" fg:w="1"/><text x="44.3232%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0732%" y="389" width="0.0796%" height="15" fill="rgb(206,134,49)" fg:x="554" fg:w="1"/><text x="44.3232%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.1527%" y="389" width="0.0796%" height="15" fill="rgb(221,89,20)" fg:x="555" fg:w="1"/><text x="44.4027%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.2323%" y="357" width="0.0796%" height="15" fill="rgb(240,205,13)" fg:x="556" fg:w="1"/><text x="44.4823%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3119%" y="341" width="0.0796%" height="15" fill="rgb(237,174,32)" fg:x="557" fg:w="1"/><text x="44.5619%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="44.2323%" y="389" width="0.2387%" height="15" fill="rgb(226,12,15)" fg:x="556" fg:w="3"/><text x="44.4823%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="44.2323%" y="373" width="0.2387%" height="15" fill="rgb(245,160,52)" fg:x="556" fg:w="3"/><text x="44.4823%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.3119%" y="357" width="0.1591%" height="15" fill="rgb(253,80,21)" fg:x="557" fg:w="2"/><text x="44.5619%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.3914%" y="341" width="0.0796%" height="15" fill="rgb(231,225,22)" fg:x="558" fg:w="1"/><text x="44.6414%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3914%" y="325" width="0.0796%" height="15" fill="rgb(253,185,12)" fg:x="558" fg:w="1"/><text x="44.6414%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.6301%" y="373" width="0.1591%" height="15" fill="rgb(234,197,21)" fg:x="561" fg:w="2"/><text x="44.8801%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.7892%" y="373" width="0.1591%" height="15" fill="rgb(210,47,30)" fg:x="563" fg:w="2"/><text x="45.0392%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.7892%" y="357" width="0.1591%" height="15" fill="rgb(246,139,27)" fg:x="563" fg:w="2"/><text x="45.0392%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.67%)</title><rect x="43.3572%" y="453" width="1.6706%" height="15" fill="rgb(226,130,16)" fg:x="545" fg:w="21"/><text x="43.6072%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.59%)</title><rect x="43.4368%" y="437" width="1.5911%" height="15" fill="rgb(237,208,20)" fg:x="546" fg:w="20"/><text x="43.6868%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.27%)</title><rect x="43.7550%" y="421" width="1.2729%" height="15" fill="rgb(245,186,28)" fg:x="550" fg:w="16"/><text x="44.0050%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="44.1527%" y="405" width="0.8751%" height="15" fill="rgb(238,105,39)" fg:x="555" fg:w="11"/><text x="44.4027%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="44.4710%" y="389" width="0.5569%" height="15" fill="rgb(253,228,11)" fg:x="559" fg:w="7"/><text x="44.7210%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.9483%" y="373" width="0.0796%" height="15" fill="rgb(224,136,38)" fg:x="565" fg:w="1"/><text x="45.1983%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="45.0278%" y="453" width="0.0796%" height="15" fill="rgb(211,3,25)" fg:x="566" fg:w="1"/><text x="45.2778%" y="463.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPath as core::convert::From&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::from (1 samples, 0.08%)</title><rect x="45.0278%" y="437" width="0.0796%" height="15" fill="rgb(238,66,34)" fg:x="566" fg:w="1"/><text x="45.2778%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.1074%" y="453" width="0.0796%" height="15" fill="rgb(223,188,11)" fg:x="567" fg:w="1"/><text x="45.3574%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="45.2665%" y="389" width="0.0796%" height="15" fill="rgb(221,10,35)" fg:x="569" fg:w="1"/><text x="45.5165%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.6643%" y="373" width="0.0796%" height="15" fill="rgb(223,18,44)" fg:x="574" fg:w="1"/><text x="45.9143%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="45.3461%" y="389" width="0.4773%" height="15" fill="rgb(220,97,41)" fg:x="570" fg:w="6"/><text x="45.5961%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.7438%" y="373" width="0.0796%" height="15" fill="rgb(206,95,45)" fg:x="575" fg:w="1"/><text x="45.9938%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="45.1870%" y="405" width="0.7160%" height="15" fill="rgb(209,96,13)" fg:x="568" fg:w="9"/><text x="45.4370%" y="415.50"></text></g><g><title>&lt;serde_json::number::N as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.8234%" y="389" width="0.0796%" height="15" fill="rgb(237,39,34)" fg:x="576" fg:w="1"/><text x="46.0734%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.80%)</title><rect x="45.1870%" y="437" width="0.7955%" height="15" fill="rgb(213,49,47)" fg:x="568" fg:w="10"/><text x="45.4370%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.80%)</title><rect x="45.1870%" y="421" width="0.7955%" height="15" fill="rgb(205,107,27)" fg:x="568" fg:w="10"/><text x="45.4370%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.9029%" y="405" width="0.0796%" height="15" fill="rgb(212,142,9)" fg:x="577" fg:w="1"/><text x="46.1529%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (35 samples, 2.78%)</title><rect x="43.2776%" y="469" width="2.7844%" height="15" fill="rgb(226,182,0)" fg:x="544" fg:w="35"/><text x="43.5276%" y="479.50">&lt;k..</text></g><g><title>treediff::diff::diff (11 samples, 0.88%)</title><rect x="45.1870%" y="453" width="0.8751%" height="15" fill="rgb(231,3,53)" fg:x="568" fg:w="11"/><text x="45.4370%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="45.9825%" y="437" width="0.0796%" height="15" fill="rgb(246,111,28)" fg:x="578" fg:w="1"/><text x="46.2325%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.9825%" y="421" width="0.0796%" height="15" fill="rgb(254,183,7)" fg:x="578" fg:w="1"/><text x="46.2325%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.9825%" y="405" width="0.0796%" height="15" fill="rgb(247,177,28)" fg:x="578" fg:w="1"/><text x="46.2325%" y="415.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="46.1416%" y="437" width="0.3182%" height="15" fill="rgb(244,43,1)" fg:x="580" fg:w="4"/><text x="46.3916%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="46.4598%" y="437" width="0.4773%" height="15" fill="rgb(207,2,35)" fg:x="584" fg:w="6"/><text x="46.7098%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="46.8576%" y="421" width="0.0796%" height="15" fill="rgb(213,83,22)" fg:x="589" fg:w="1"/><text x="47.1076%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="46.9372%" y="437" width="0.1591%" height="15" fill="rgb(246,212,13)" fg:x="590" fg:w="2"/><text x="47.1872%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.0167%" y="421" width="0.0796%" height="15" fill="rgb(213,127,46)" fg:x="591" fg:w="1"/><text x="47.2667%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="47.0167%" y="405" width="0.0796%" height="15" fill="rgb(219,215,39)" fg:x="591" fg:w="1"/><text x="47.2667%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="47.0963%" y="437" width="0.1591%" height="15" fill="rgb(227,99,17)" fg:x="592" fg:w="2"/><text x="47.3463%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="47.0963%" y="421" width="0.1591%" height="15" fill="rgb(208,155,18)" fg:x="592" fg:w="2"/><text x="47.3463%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.2554%" y="405" width="0.1591%" height="15" fill="rgb(223,204,38)" fg:x="594" fg:w="2"/><text x="47.5054%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="47.2554%" y="437" width="0.2387%" height="15" fill="rgb(212,114,21)" fg:x="594" fg:w="3"/><text x="47.5054%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="47.2554%" y="421" width="0.2387%" height="15" fill="rgb(250,74,13)" fg:x="594" fg:w="3"/><text x="47.5054%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.4145%" y="405" width="0.0796%" height="15" fill="rgb(234,7,1)" fg:x="596" fg:w="1"/><text x="47.6645%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="47.4145%" y="389" width="0.0796%" height="15" fill="rgb(207,138,31)" fg:x="596" fg:w="1"/><text x="47.6645%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="47.8123%" y="405" width="0.1591%" height="15" fill="rgb(215,186,42)" fg:x="601" fg:w="2"/><text x="48.0623%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.2100%" y="373" width="0.0796%" height="15" fill="rgb(229,205,49)" fg:x="606" fg:w="1"/><text x="48.4600%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="48.0509%" y="389" width="0.3182%" height="15" fill="rgb(216,156,32)" fg:x="604" fg:w="4"/><text x="48.3009%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.2896%" y="373" width="0.0796%" height="15" fill="rgb(238,7,21)" fg:x="607" fg:w="1"/><text x="48.5396%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="48.3691%" y="373" width="0.0796%" height="15" fill="rgb(249,190,22)" fg:x="608" fg:w="1"/><text x="48.6191%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="48.4487%" y="373" width="0.0796%" height="15" fill="rgb(253,51,31)" fg:x="609" fg:w="1"/><text x="48.6987%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6078%" y="341" width="0.0796%" height="15" fill="rgb(237,90,54)" fg:x="611" fg:w="1"/><text x="48.8578%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6078%" y="325" width="0.0796%" height="15" fill="rgb(250,214,33)" fg:x="611" fg:w="1"/><text x="48.8578%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="48.3691%" y="389" width="0.6364%" height="15" fill="rgb(237,10,49)" fg:x="608" fg:w="8"/><text x="48.6191%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="48.5282%" y="373" width="0.4773%" height="15" fill="rgb(241,56,36)" fg:x="610" fg:w="6"/><text x="48.7782%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="48.5282%" y="357" width="0.4773%" height="15" fill="rgb(227,164,12)" fg:x="610" fg:w="6"/><text x="48.7782%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="48.6874%" y="341" width="0.3182%" height="15" fill="rgb(249,149,35)" fg:x="612" fg:w="4"/><text x="48.9374%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="48.8465%" y="325" width="0.1591%" height="15" fill="rgb(238,227,50)" fg:x="614" fg:w="2"/><text x="49.0965%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="48.8465%" y="309" width="0.1591%" height="15" fill="rgb(235,102,45)" fg:x="614" fg:w="2"/><text x="49.0965%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="48.9260%" y="293" width="0.0796%" height="15" fill="rgb(211,10,38)" fg:x="615" fg:w="1"/><text x="49.1760%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="48.9260%" y="277" width="0.0796%" height="15" fill="rgb(219,77,48)" fg:x="615" fg:w="1"/><text x="49.1760%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9260%" y="261" width="0.0796%" height="15" fill="rgb(246,6,15)" fg:x="615" fg:w="1"/><text x="49.1760%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.2442%" y="373" width="0.0796%" height="15" fill="rgb(207,220,2)" fg:x="619" fg:w="1"/><text x="49.4942%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="49.3238%" y="373" width="0.0796%" height="15" fill="rgb(242,48,14)" fg:x="620" fg:w="1"/><text x="49.5738%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4033%" y="357" width="0.0796%" height="15" fill="rgb(218,19,27)" fg:x="621" fg:w="1"/><text x="49.6533%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="49.5625%" y="341" width="0.1591%" height="15" fill="rgb(228,0,35)" fg:x="623" fg:w="2"/><text x="49.8125%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="49.6420%" y="325" width="0.0796%" height="15" fill="rgb(244,142,54)" fg:x="624" fg:w="1"/><text x="49.8920%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.6420%" y="309" width="0.0796%" height="15" fill="rgb(243,217,40)" fg:x="624" fg:w="1"/><text x="49.8920%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="49.4033%" y="373" width="0.3978%" height="15" fill="rgb(207,114,16)" fg:x="621" fg:w="5"/><text x="49.6533%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="49.4829%" y="357" width="0.3182%" height="15" fill="rgb(224,33,25)" fg:x="622" fg:w="4"/><text x="49.7329%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.7216%" y="341" width="0.0796%" height="15" fill="rgb(230,93,54)" fg:x="625" fg:w="1"/><text x="49.9716%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.91%)</title><rect x="47.9714%" y="405" width="1.9093%" height="15" fill="rgb(224,56,24)" fg:x="603" fg:w="24"/><text x="48.2214%" y="415.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="49.0056%" y="389" width="0.8751%" height="15" fill="rgb(235,189,50)" fg:x="616" fg:w="11"/><text x="49.2556%" y="399.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;f64&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="49.8011%" y="373" width="0.0796%" height="15" fill="rgb(242,173,8)" fg:x="626" fg:w="1"/><text x="50.0511%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.39%)</title><rect x="47.7327%" y="421" width="2.3866%" height="15" fill="rgb(209,206,10)" fg:x="600" fg:w="30"/><text x="47.9827%" y="431.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="49.8807%" y="405" width="0.2387%" height="15" fill="rgb(213,182,44)" fg:x="627" fg:w="3"/><text x="50.1307%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="50.0398%" y="389" width="0.0796%" height="15" fill="rgb(243,51,15)" fg:x="629" fg:w="1"/><text x="50.2898%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="50.0398%" y="373" width="0.0796%" height="15" fill="rgb(241,13,14)" fg:x="629" fg:w="1"/><text x="50.2898%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1193%" y="421" width="0.0796%" height="15" fill="rgb(239,147,24)" fg:x="630" fg:w="1"/><text x="50.3693%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (53 samples, 4.22%)</title><rect x="46.0621%" y="469" width="4.2164%" height="15" fill="rgb(223,129,16)" fg:x="579" fg:w="53"/><text x="46.3121%" y="479.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (53 samples, 4.22%)</title><rect x="46.0621%" y="453" width="4.2164%" height="15" fill="rgb(209,169,13)" fg:x="579" fg:w="53"/><text x="46.3121%" y="463.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (35 samples, 2.78%)</title><rect x="47.4940%" y="437" width="2.7844%" height="15" fill="rgb(235,159,41)" fg:x="597" fg:w="35"/><text x="47.7440%" y="447.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.1989%" y="421" width="0.0796%" height="15" fill="rgb(223,219,48)" fg:x="631" fg:w="1"/><text x="50.4489%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1989%" y="405" width="0.0796%" height="15" fill="rgb(236,80,13)" fg:x="631" fg:w="1"/><text x="50.4489%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.4375%" y="277" width="0.0796%" height="15" fill="rgb(213,5,6)" fg:x="634" fg:w="1"/><text x="50.6875%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="50.4375%" y="293" width="0.1591%" height="15" fill="rgb(205,59,21)" fg:x="634" fg:w="2"/><text x="50.6875%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.5171%" y="277" width="0.0796%" height="15" fill="rgb(247,137,35)" fg:x="635" fg:w="1"/><text x="50.7671%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.5171%" y="261" width="0.0796%" height="15" fill="rgb(242,208,28)" fg:x="635" fg:w="1"/><text x="50.7671%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.5171%" y="245" width="0.0796%" height="15" fill="rgb(245,62,25)" fg:x="635" fg:w="1"/><text x="50.7671%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="50.4375%" y="325" width="0.2387%" height="15" fill="rgb(233,99,54)" fg:x="634" fg:w="3"/><text x="50.6875%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.4375%" y="309" width="0.2387%" height="15" fill="rgb(213,10,37)" fg:x="634" fg:w="3"/><text x="50.6875%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.5967%" y="293" width="0.0796%" height="15" fill="rgb(235,143,30)" fg:x="636" fg:w="1"/><text x="50.8467%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.5967%" y="277" width="0.0796%" height="15" fill="rgb(250,146,33)" fg:x="636" fg:w="1"/><text x="50.8467%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.7558%" y="309" width="0.0796%" height="15" fill="rgb(226,198,42)" fg:x="638" fg:w="1"/><text x="51.0058%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.7558%" y="293" width="0.0796%" height="15" fill="rgb(222,55,6)" fg:x="638" fg:w="1"/><text x="51.0058%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.7558%" y="277" width="0.0796%" height="15" fill="rgb(213,224,31)" fg:x="638" fg:w="1"/><text x="51.0058%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.7558%" y="261" width="0.0796%" height="15" fill="rgb(226,103,35)" fg:x="638" fg:w="1"/><text x="51.0058%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="50.3580%" y="341" width="0.5569%" height="15" fill="rgb(205,66,45)" fg:x="633" fg:w="7"/><text x="50.6080%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.6762%" y="325" width="0.2387%" height="15" fill="rgb(226,51,42)" fg:x="637" fg:w="3"/><text x="50.9262%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.8353%" y="309" width="0.0796%" height="15" fill="rgb(206,69,1)" fg:x="639" fg:w="1"/><text x="51.0853%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.8353%" y="293" width="0.0796%" height="15" fill="rgb(213,228,47)" fg:x="639" fg:w="1"/><text x="51.0853%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="50.3580%" y="373" width="0.7160%" height="15" fill="rgb(224,204,18)" fg:x="633" fg:w="9"/><text x="50.6080%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="50.3580%" y="357" width="0.7160%" height="15" fill="rgb(253,187,47)" fg:x="633" fg:w="9"/><text x="50.6080%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="50.9149%" y="341" width="0.1591%" height="15" fill="rgb(232,61,2)" fg:x="640" fg:w="2"/><text x="51.1649%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.9944%" y="325" width="0.0796%" height="15" fill="rgb(213,132,35)" fg:x="641" fg:w="1"/><text x="51.2444%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="51.0740%" y="373" width="0.2387%" height="15" fill="rgb(247,33,21)" fg:x="642" fg:w="3"/><text x="51.3240%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2331%" y="357" width="0.0796%" height="15" fill="rgb(233,71,46)" fg:x="644" fg:w="1"/><text x="51.4831%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.11%)</title><rect x="50.2784%" y="405" width="1.1138%" height="15" fill="rgb(222,173,43)" fg:x="632" fg:w="14"/><text x="50.5284%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.11%)</title><rect x="50.2784%" y="389" width="1.1138%" height="15" fill="rgb(249,218,47)" fg:x="632" fg:w="14"/><text x="50.5284%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.3126%" y="373" width="0.0796%" height="15" fill="rgb(254,185,48)" fg:x="645" fg:w="1"/><text x="51.5626%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.3126%" y="357" width="0.0796%" height="15" fill="rgb(252,165,50)" fg:x="645" fg:w="1"/><text x="51.5626%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.3126%" y="341" width="0.0796%" height="15" fill="rgb(206,219,6)" fg:x="645" fg:w="1"/><text x="51.5626%" y="351.50"></text></g><g><title>engine::session::state::State::close (156 samples, 12.41%)</title><rect x="39.0613%" y="565" width="12.4105%" height="15" fill="rgb(212,212,45)" fg:x="491" fg:w="156"/><text x="39.3113%" y="575.50">engine::session::st..</text></g><g><title>engine::session::state::State::flush_entities (156 samples, 12.41%)</title><rect x="39.0613%" y="549" width="12.4105%" height="15" fill="rgb(221,31,9)" fg:x="491" fg:w="156"/><text x="39.3113%" y="559.50">engine::session::st..</text></g><g><title>core::iter::adapters::try_process (154 samples, 12.25%)</title><rect x="39.2204%" y="533" width="12.2514%" height="15" fill="rgb(234,198,39)" fg:x="493" fg:w="154"/><text x="39.4704%" y="543.50">core::iter::adapte..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (154 samples, 12.25%)</title><rect x="39.2204%" y="517" width="12.2514%" height="15" fill="rgb(252,145,46)" fg:x="493" fg:w="154"/><text x="39.4704%" y="527.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (154 samples, 12.25%)</title><rect x="39.2204%" y="501" width="12.2514%" height="15" fill="rgb(237,149,0)" fg:x="493" fg:w="154"/><text x="39.4704%" y="511.50">engine::session::s..</text></g><g><title>kernel::model::any_entity_changes (103 samples, 8.19%)</title><rect x="43.2776%" y="485" width="8.1941%" height="15" fill="rgb(229,65,5)" fg:x="544" fg:w="103"/><text x="43.5276%" y="495.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (15 samples, 1.19%)</title><rect x="50.2784%" y="469" width="1.1933%" height="15" fill="rgb(235,60,36)" fg:x="632" fg:w="15"/><text x="50.5284%" y="479.50"></text></g><g><title>serde_json::de::from_trait (15 samples, 1.19%)</title><rect x="50.2784%" y="453" width="1.1933%" height="15" fill="rgb(222,47,18)" fg:x="632" fg:w="15"/><text x="50.5284%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.19%)</title><rect x="50.2784%" y="437" width="1.1933%" height="15" fill="rgb(235,114,22)" fg:x="632" fg:w="15"/><text x="50.5284%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.19%)</title><rect x="50.2784%" y="421" width="1.1933%" height="15" fill="rgb(209,167,11)" fg:x="632" fg:w="15"/><text x="50.5284%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.3922%" y="405" width="0.0796%" height="15" fill="rgb(251,73,18)" fg:x="646" fg:w="1"/><text x="51.6422%" y="415.50"></text></g><g><title>engine::session::Session::close (167 samples, 13.29%)</title><rect x="38.2657%" y="581" width="13.2856%" height="15" fill="rgb(217,60,17)" fg:x="481" fg:w="167"/><text x="38.5157%" y="591.50">engine::session::Ses..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="51.4718%" y="565" width="0.0796%" height="15" fill="rgb(224,36,37)" fg:x="647" fg:w="1"/><text x="51.7218%" y="575.50"></text></g><g><title>kernel::plugins::Plugin::stop (1 samples, 0.08%)</title><rect x="51.4718%" y="549" width="0.0796%" height="15" fill="rgb(211,21,32)" fg:x="647" fg:w="1"/><text x="51.7218%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.5513%" y="389" width="0.0796%" height="15" fill="rgb(231,55,48)" fg:x="648" fg:w="1"/><text x="51.8013%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.08%)</title><rect x="51.5513%" y="373" width="0.0796%" height="15" fill="rgb(227,42,18)" fg:x="648" fg:w="1"/><text x="51.8013%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.08%)</title><rect x="51.5513%" y="357" width="0.0796%" height="15" fill="rgb(217,2,27)" fg:x="648" fg:w="1"/><text x="51.8013%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="51.5513%" y="341" width="0.0796%" height="15" fill="rgb(251,138,23)" fg:x="648" fg:w="1"/><text x="51.8013%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.08%)</title><rect x="51.5513%" y="325" width="0.0796%" height="15" fill="rgb(226,184,11)" fg:x="648" fg:w="1"/><text x="51.8013%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.5513%" y="309" width="0.0796%" height="15" fill="rgb(242,142,12)" fg:x="648" fg:w="1"/><text x="51.8013%" y="319.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (1 samples, 0.08%)</title><rect x="51.5513%" y="293" width="0.0796%" height="15" fill="rgb(234,187,18)" fg:x="648" fg:w="1"/><text x="51.8013%" y="303.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="51.5513%" y="277" width="0.0796%" height="15" fill="rgb(237,44,42)" fg:x="648" fg:w="1"/><text x="51.8013%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="51.5513%" y="261" width="0.0796%" height="15" fill="rgb(211,90,23)" fg:x="648" fg:w="1"/><text x="51.8013%" y="271.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="51.5513%" y="245" width="0.0796%" height="15" fill="rgb(207,81,18)" fg:x="648" fg:w="1"/><text x="51.8013%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.5513%" y="229" width="0.0796%" height="15" fill="rgb(222,107,28)" fg:x="648" fg:w="1"/><text x="51.8013%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="51.5513%" y="533" width="0.1591%" height="15" fill="rgb(237,83,52)" fg:x="648" fg:w="2"/><text x="51.8013%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="51.5513%" y="517" width="0.1591%" height="15" fill="rgb(208,67,11)" fg:x="648" fg:w="2"/><text x="51.8013%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="51.5513%" y="501" width="0.1591%" height="15" fill="rgb(249,157,49)" fg:x="648" fg:w="2"/><text x="51.8013%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="51.5513%" y="485" width="0.1591%" height="15" fill="rgb(243,200,1)" fg:x="648" fg:w="2"/><text x="51.8013%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="51.5513%" y="469" width="0.1591%" height="15" fill="rgb(225,162,37)" fg:x="648" fg:w="2"/><text x="51.8013%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.16%)</title><rect x="51.5513%" y="453" width="0.1591%" height="15" fill="rgb(242,92,13)" fg:x="648" fg:w="2"/><text x="51.8013%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.16%)</title><rect x="51.5513%" y="437" width="0.1591%" height="15" fill="rgb(220,43,36)" fg:x="648" fg:w="2"/><text x="51.8013%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="51.5513%" y="421" width="0.1591%" height="15" fill="rgb(213,165,48)" fg:x="648" fg:w="2"/><text x="51.8013%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.16%)</title><rect x="51.5513%" y="405" width="0.1591%" height="15" fill="rgb(227,200,9)" fg:x="648" fg:w="2"/><text x="51.8013%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.6309%" y="389" width="0.0796%" height="15" fill="rgb(221,222,28)" fg:x="649" fg:w="1"/><text x="51.8809%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="51.6309%" y="373" width="0.0796%" height="15" fill="rgb(223,142,26)" fg:x="649" fg:w="1"/><text x="51.8809%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="51.6309%" y="357" width="0.0796%" height="15" fill="rgb(243,46,9)" fg:x="649" fg:w="1"/><text x="51.8809%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="51.6309%" y="341" width="0.0796%" height="15" fill="rgb(250,56,11)" fg:x="649" fg:w="1"/><text x="51.8809%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.6309%" y="325" width="0.0796%" height="15" fill="rgb(229,113,5)" fg:x="649" fg:w="1"/><text x="51.8809%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="51.6309%" y="309" width="0.0796%" height="15" fill="rgb(244,108,28)" fg:x="649" fg:w="1"/><text x="51.8809%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.6309%" y="293" width="0.0796%" height="15" fill="rgb(242,119,50)" fg:x="649" fg:w="1"/><text x="51.8809%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.6309%" y="277" width="0.0796%" height="15" fill="rgb(224,164,23)" fg:x="649" fg:w="1"/><text x="51.8809%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.6309%" y="261" width="0.0796%" height="15" fill="rgb(214,227,44)" fg:x="649" fg:w="1"/><text x="51.8809%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.6309%" y="245" width="0.0796%" height="15" fill="rgb(238,202,4)" fg:x="649" fg:w="1"/><text x="51.8809%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="51.6309%" y="229" width="0.0796%" height="15" fill="rgb(213,190,30)" fg:x="649" fg:w="1"/><text x="51.8809%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="51.6309%" y="213" width="0.0796%" height="15" fill="rgb(239,15,2)" fg:x="649" fg:w="1"/><text x="51.8809%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="51.6309%" y="197" width="0.0796%" height="15" fill="rgb(249,229,4)" fg:x="649" fg:w="1"/><text x="51.8809%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="51.6309%" y="181" width="0.0796%" height="15" fill="rgb(239,75,44)" fg:x="649" fg:w="1"/><text x="51.8809%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.6309%" y="165" width="0.0796%" height="15" fill="rgb(251,206,23)" fg:x="649" fg:w="1"/><text x="51.8809%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.6309%" y="149" width="0.0796%" height="15" fill="rgb(215,208,0)" fg:x="649" fg:w="1"/><text x="51.8809%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.6309%" y="133" width="0.0796%" height="15" fill="rgb(230,75,50)" fg:x="649" fg:w="1"/><text x="51.8809%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="51.6309%" y="117" width="0.0796%" height="15" fill="rgb(246,180,39)" fg:x="649" fg:w="1"/><text x="51.8809%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.6309%" y="101" width="0.0796%" height="15" fill="rgb(249,175,24)" fg:x="649" fg:w="1"/><text x="51.8809%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::logs::SessionSubscriber&gt; (1 samples, 0.08%)</title><rect x="51.7900%" y="517" width="0.0796%" height="15" fill="rgb(247,176,22)" fg:x="651" fg:w="1"/><text x="52.0400%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.1877%" y="389" width="0.1591%" height="15" fill="rgb(241,100,24)" fg:x="656" fg:w="2"/><text x="52.4377%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.1877%" y="373" width="0.1591%" height="15" fill="rgb(233,4,35)" fg:x="656" fg:w="2"/><text x="52.4377%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2673%" y="357" width="0.0796%" height="15" fill="rgb(211,164,46)" fg:x="657" fg:w="1"/><text x="52.5173%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2673%" y="341" width="0.0796%" height="15" fill="rgb(242,99,53)" fg:x="657" fg:w="1"/><text x="52.5173%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.2673%" y="325" width="0.0796%" height="15" fill="rgb(243,45,33)" fg:x="657" fg:w="1"/><text x="52.5173%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.2673%" y="309" width="0.0796%" height="15" fill="rgb(217,55,21)" fg:x="657" fg:w="1"/><text x="52.5173%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.2673%" y="293" width="0.0796%" height="15" fill="rgb(245,145,46)" fg:x="657" fg:w="1"/><text x="52.5173%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2673%" y="277" width="0.0796%" height="15" fill="rgb(215,112,45)" fg:x="657" fg:w="1"/><text x="52.5173%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2673%" y="261" width="0.0796%" height="15" fill="rgb(228,104,16)" fg:x="657" fg:w="1"/><text x="52.5173%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.2673%" y="245" width="0.0796%" height="15" fill="rgb(239,186,38)" fg:x="657" fg:w="1"/><text x="52.5173%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.2673%" y="229" width="0.0796%" height="15" fill="rgb(228,38,35)" fg:x="657" fg:w="1"/><text x="52.5173%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.2673%" y="213" width="0.0796%" height="15" fill="rgb(251,42,40)" fg:x="657" fg:w="1"/><text x="52.5173%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.2673%" y="197" width="0.0796%" height="15" fill="rgb(210,51,19)" fg:x="657" fg:w="1"/><text x="52.5173%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2673%" y="181" width="0.0796%" height="15" fill="rgb(236,94,42)" fg:x="657" fg:w="1"/><text x="52.5173%" y="191.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="52.3469%" y="389" width="0.0796%" height="15" fill="rgb(239,167,16)" fg:x="658" fg:w="1"/><text x="52.5969%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.4264%" y="357" width="0.0796%" height="15" fill="rgb(252,175,31)" fg:x="659" fg:w="1"/><text x="52.6764%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (6 samples, 0.48%)</title><rect x="52.1082%" y="405" width="0.4773%" height="15" fill="rgb(206,166,30)" fg:x="655" fg:w="6"/><text x="52.3582%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.4264%" y="389" width="0.1591%" height="15" fill="rgb(206,209,37)" fg:x="659" fg:w="2"/><text x="52.6764%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.4264%" y="373" width="0.1591%" height="15" fill="rgb(226,91,4)" fg:x="659" fg:w="2"/><text x="52.6764%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.5060%" y="357" width="0.0796%" height="15" fill="rgb(222,167,0)" fg:x="660" fg:w="1"/><text x="52.7560%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.5060%" y="341" width="0.0796%" height="15" fill="rgb(211,70,14)" fg:x="660" fg:w="1"/><text x="52.7560%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.6651%" y="293" width="0.0796%" height="15" fill="rgb(214,84,42)" fg:x="662" fg:w="1"/><text x="52.9151%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.6651%" y="341" width="0.1591%" height="15" fill="rgb(235,157,37)" fg:x="662" fg:w="2"/><text x="52.9151%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.6651%" y="325" width="0.1591%" height="15" fill="rgb(225,13,6)" fg:x="662" fg:w="2"/><text x="52.9151%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.6651%" y="309" width="0.1591%" height="15" fill="rgb(205,202,1)" fg:x="662" fg:w="2"/><text x="52.9151%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7446%" y="293" width="0.0796%" height="15" fill="rgb(232,195,26)" fg:x="663" fg:w="1"/><text x="52.9946%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.7446%" y="277" width="0.0796%" height="15" fill="rgb(208,102,26)" fg:x="663" fg:w="1"/><text x="52.9946%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7446%" y="261" width="0.0796%" height="15" fill="rgb(215,41,39)" fg:x="663" fg:w="1"/><text x="52.9946%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7446%" y="245" width="0.0796%" height="15" fill="rgb(247,139,11)" fg:x="663" fg:w="1"/><text x="52.9946%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.7446%" y="229" width="0.0796%" height="15" fill="rgb(243,99,6)" fg:x="663" fg:w="1"/><text x="52.9946%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.7446%" y="213" width="0.0796%" height="15" fill="rgb(230,168,48)" fg:x="663" fg:w="1"/><text x="52.9946%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.7446%" y="197" width="0.0796%" height="15" fill="rgb(238,227,13)" fg:x="663" fg:w="1"/><text x="52.9946%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7446%" y="181" width="0.0796%" height="15" fill="rgb(209,109,13)" fg:x="663" fg:w="1"/><text x="52.9946%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7446%" y="165" width="0.0796%" height="15" fill="rgb(228,195,1)" fg:x="663" fg:w="1"/><text x="52.9946%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.7446%" y="149" width="0.0796%" height="15" fill="rgb(230,218,0)" fg:x="663" fg:w="1"/><text x="52.9946%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.7446%" y="133" width="0.0796%" height="15" fill="rgb(206,1,45)" fg:x="663" fg:w="1"/><text x="52.9946%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.7446%" y="117" width="0.0796%" height="15" fill="rgb(209,124,26)" fg:x="663" fg:w="1"/><text x="52.9946%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.7446%" y="101" width="0.0796%" height="15" fill="rgb(220,59,8)" fg:x="663" fg:w="1"/><text x="52.9946%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7446%" y="85" width="0.0796%" height="15" fill="rgb(251,41,37)" fg:x="663" fg:w="1"/><text x="52.9946%" y="95.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.8242%" y="341" width="0.0796%" height="15" fill="rgb(239,152,21)" fg:x="664" fg:w="1"/><text x="53.0742%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="52.8242%" y="325" width="0.0796%" height="15" fill="rgb(226,32,1)" fg:x="664" fg:w="1"/><text x="53.0742%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.8242%" y="309" width="0.0796%" height="15" fill="rgb(230,154,36)" fg:x="664" fg:w="1"/><text x="53.0742%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.9037%" y="325" width="0.0796%" height="15" fill="rgb(208,228,43)" fg:x="665" fg:w="1"/><text x="53.1537%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="52.9037%" y="341" width="0.2387%" height="15" fill="rgb(214,203,3)" fg:x="665" fg:w="3"/><text x="53.1537%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.9833%" y="325" width="0.1591%" height="15" fill="rgb(207,149,29)" fg:x="666" fg:w="2"/><text x="53.2333%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.9833%" y="309" width="0.1591%" height="15" fill="rgb(250,105,7)" fg:x="666" fg:w="2"/><text x="53.2333%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="52.9833%" y="293" width="0.1591%" height="15" fill="rgb(232,222,16)" fg:x="666" fg:w="2"/><text x="53.2333%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.9833%" y="277" width="0.1591%" height="15" fill="rgb(209,32,24)" fg:x="666" fg:w="2"/><text x="53.2333%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.0628%" y="261" width="0.0796%" height="15" fill="rgb(225,13,6)" fg:x="667" fg:w="1"/><text x="53.3128%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.0628%" y="245" width="0.0796%" height="15" fill="rgb(245,226,26)" fg:x="667" fg:w="1"/><text x="53.3128%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.0628%" y="229" width="0.0796%" height="15" fill="rgb(229,178,27)" fg:x="667" fg:w="1"/><text x="53.3128%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.0628%" y="213" width="0.0796%" height="15" fill="rgb(205,227,28)" fg:x="667" fg:w="1"/><text x="53.3128%" y="223.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="53.1424%" y="341" width="0.0796%" height="15" fill="rgb(210,191,45)" fg:x="668" fg:w="1"/><text x="53.3924%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.1424%" y="325" width="0.0796%" height="15" fill="rgb(206,124,16)" fg:x="668" fg:w="1"/><text x="53.3924%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.1424%" y="309" width="0.0796%" height="15" fill="rgb(210,162,0)" fg:x="668" fg:w="1"/><text x="53.3924%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3015%" y="261" width="0.0796%" height="15" fill="rgb(211,54,38)" fg:x="670" fg:w="1"/><text x="53.5515%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.3015%" y="245" width="0.0796%" height="15" fill="rgb(248,192,3)" fg:x="670" fg:w="1"/><text x="53.5515%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="53.3015%" y="229" width="0.0796%" height="15" fill="rgb(233,187,18)" fg:x="670" fg:w="1"/><text x="53.5515%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="53.5402%" y="133" width="0.0796%" height="15" fill="rgb(237,208,14)" fg:x="673" fg:w="1"/><text x="53.7902%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="53.4606%" y="213" width="0.2387%" height="15" fill="rgb(212,77,1)" fg:x="672" fg:w="3"/><text x="53.7106%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="53.4606%" y="197" width="0.2387%" height="15" fill="rgb(210,163,22)" fg:x="672" fg:w="3"/><text x="53.7106%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="53.5402%" y="181" width="0.1591%" height="15" fill="rgb(250,58,28)" fg:x="673" fg:w="2"/><text x="53.7902%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="53.5402%" y="165" width="0.1591%" height="15" fill="rgb(254,28,41)" fg:x="673" fg:w="2"/><text x="53.7902%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.5402%" y="149" width="0.1591%" height="15" fill="rgb(237,162,36)" fg:x="673" fg:w="2"/><text x="53.7902%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.6197%" y="133" width="0.0796%" height="15" fill="rgb(232,56,6)" fg:x="674" fg:w="1"/><text x="53.8697%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.6197%" y="117" width="0.0796%" height="15" fill="rgb(216,127,42)" fg:x="674" fg:w="1"/><text x="53.8697%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6197%" y="101" width="0.0796%" height="15" fill="rgb(241,69,15)" fg:x="674" fg:w="1"/><text x="53.8697%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.8584%" y="69" width="0.0796%" height="15" fill="rgb(227,180,19)" fg:x="677" fg:w="1"/><text x="54.1084%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="53.4606%" y="245" width="0.5569%" height="15" fill="rgb(231,188,29)" fg:x="672" fg:w="7"/><text x="53.7106%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="53.4606%" y="229" width="0.5569%" height="15" fill="rgb(224,176,27)" fg:x="672" fg:w="7"/><text x="53.7106%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="53.6993%" y="213" width="0.3182%" height="15" fill="rgb(249,214,19)" fg:x="675" fg:w="4"/><text x="53.9493%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="53.7788%" y="197" width="0.2387%" height="15" fill="rgb(240,0,4)" fg:x="676" fg:w="3"/><text x="54.0288%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="53.7788%" y="181" width="0.2387%" height="15" fill="rgb(233,28,41)" fg:x="676" fg:w="3"/><text x="54.0288%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="53.7788%" y="165" width="0.2387%" height="15" fill="rgb(220,90,51)" fg:x="676" fg:w="3"/><text x="54.0288%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="53.8584%" y="149" width="0.1591%" height="15" fill="rgb(250,52,22)" fg:x="677" fg:w="2"/><text x="54.1084%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.8584%" y="133" width="0.1591%" height="15" fill="rgb(231,152,36)" fg:x="677" fg:w="2"/><text x="54.1084%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="53.8584%" y="117" width="0.1591%" height="15" fill="rgb(250,218,4)" fg:x="677" fg:w="2"/><text x="54.1084%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="53.8584%" y="101" width="0.1591%" height="15" fill="rgb(210,38,21)" fg:x="677" fg:w="2"/><text x="54.1084%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.8584%" y="85" width="0.1591%" height="15" fill="rgb(230,75,13)" fg:x="677" fg:w="2"/><text x="54.1084%" y="95.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.9379%" y="69" width="0.0796%" height="15" fill="rgb(250,68,53)" fg:x="678" fg:w="1"/><text x="54.1879%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.0175%" y="245" width="0.0796%" height="15" fill="rgb(250,210,16)" fg:x="679" fg:w="1"/><text x="54.2675%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.0175%" y="229" width="0.0796%" height="15" fill="rgb(240,132,5)" fg:x="679" fg:w="1"/><text x="54.2675%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="54.1766%" y="197" width="0.0796%" height="15" fill="rgb(222,148,48)" fg:x="681" fg:w="1"/><text x="54.4266%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="54.1766%" y="181" width="0.0796%" height="15" fill="rgb(247,181,24)" fg:x="681" fg:w="1"/><text x="54.4266%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.1766%" y="165" width="0.0796%" height="15" fill="rgb(239,5,31)" fg:x="681" fg:w="1"/><text x="54.4266%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.1766%" y="149" width="0.0796%" height="15" fill="rgb(241,152,38)" fg:x="681" fg:w="1"/><text x="54.4266%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1766%" y="133" width="0.0796%" height="15" fill="rgb(246,200,37)" fg:x="681" fg:w="1"/><text x="54.4266%" y="143.50"></text></g><g><title>kernel::model::entity::Entity::from_value (14 samples, 1.11%)</title><rect x="53.2220%" y="341" width="1.1138%" height="15" fill="rgb(243,210,26)" fg:x="669" fg:w="14"/><text x="53.4720%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.11%)</title><rect x="53.2220%" y="325" width="1.1138%" height="15" fill="rgb(222,22,22)" fg:x="669" fg:w="14"/><text x="53.4720%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.11%)</title><rect x="53.2220%" y="309" width="1.1138%" height="15" fill="rgb(208,129,28)" fg:x="669" fg:w="14"/><text x="53.4720%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.03%)</title><rect x="53.3015%" y="293" width="1.0342%" height="15" fill="rgb(254,169,28)" fg:x="670" fg:w="13"/><text x="53.5515%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.03%)</title><rect x="53.3015%" y="277" width="1.0342%" height="15" fill="rgb(225,45,17)" fg:x="670" fg:w="13"/><text x="53.5515%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.95%)</title><rect x="53.3811%" y="261" width="0.9547%" height="15" fill="rgb(232,199,2)" fg:x="671" fg:w="12"/><text x="53.6311%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.0971%" y="245" width="0.2387%" height="15" fill="rgb(235,33,40)" fg:x="680" fg:w="3"/><text x="54.3471%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.0971%" y="229" width="0.2387%" height="15" fill="rgb(237,89,50)" fg:x="680" fg:w="3"/><text x="54.3471%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="54.1766%" y="213" width="0.1591%" height="15" fill="rgb(238,126,5)" fg:x="681" fg:w="2"/><text x="54.4266%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.2562%" y="197" width="0.0796%" height="15" fill="rgb(247,214,42)" fg:x="682" fg:w="1"/><text x="54.5062%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.2562%" y="181" width="0.0796%" height="15" fill="rgb(238,60,45)" fg:x="682" fg:w="1"/><text x="54.5062%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.2562%" y="165" width="0.0796%" height="15" fill="rgb(225,69,44)" fg:x="682" fg:w="1"/><text x="54.5062%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.2562%" y="149" width="0.0796%" height="15" fill="rgb(241,13,44)" fg:x="682" fg:w="1"/><text x="54.5062%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.2562%" y="133" width="0.0796%" height="15" fill="rgb(227,121,22)" fg:x="682" fg:w="1"/><text x="54.5062%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.2562%" y="117" width="0.0796%" height="15" fill="rgb(231,160,23)" fg:x="682" fg:w="1"/><text x="54.5062%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.3357%" y="213" width="0.0796%" height="15" fill="rgb(250,179,43)" fg:x="683" fg:w="1"/><text x="54.5857%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.3357%" y="197" width="0.0796%" height="15" fill="rgb(233,54,46)" fg:x="683" fg:w="1"/><text x="54.5857%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.3357%" y="181" width="0.0796%" height="15" fill="rgb(247,120,42)" fg:x="683" fg:w="1"/><text x="54.5857%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3357%" y="165" width="0.0796%" height="15" fill="rgb(221,219,12)" fg:x="683" fg:w="1"/><text x="54.5857%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.3357%" y="229" width="0.1591%" height="15" fill="rgb(211,126,8)" fg:x="683" fg:w="2"/><text x="54.5857%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.4153%" y="213" width="0.0796%" height="15" fill="rgb(218,154,33)" fg:x="684" fg:w="1"/><text x="54.6653%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="54.3357%" y="277" width="0.2387%" height="15" fill="rgb(212,199,16)" fg:x="683" fg:w="3"/><text x="54.5857%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.3357%" y="261" width="0.2387%" height="15" fill="rgb(236,215,46)" fg:x="683" fg:w="3"/><text x="54.5857%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="54.3357%" y="245" width="0.2387%" height="15" fill="rgb(232,32,22)" fg:x="683" fg:w="3"/><text x="54.5857%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.4948%" y="229" width="0.0796%" height="15" fill="rgb(234,79,15)" fg:x="685" fg:w="1"/><text x="54.7448%" y="239.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.07%)</title><rect x="52.5855%" y="357" width="2.0684%" height="15" fill="rgb(235,187,47)" fg:x="661" fg:w="26"/><text x="52.8355%" y="367.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="54.3357%" y="341" width="0.3182%" height="15" fill="rgb(244,69,37)" fg:x="683" fg:w="4"/><text x="54.5857%" y="351.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="54.3357%" y="325" width="0.3182%" height="15" fill="rgb(249,140,25)" fg:x="683" fg:w="4"/><text x="54.5857%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="54.3357%" y="309" width="0.3182%" height="15" fill="rgb(213,69,8)" fg:x="683" fg:w="4"/><text x="54.5857%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="54.3357%" y="293" width="0.3182%" height="15" fill="rgb(220,136,2)" fg:x="683" fg:w="4"/><text x="54.5857%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.5744%" y="277" width="0.0796%" height="15" fill="rgb(237,50,36)" fg:x="686" fg:w="1"/><text x="54.8244%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.5744%" y="261" width="0.0796%" height="15" fill="rgb(226,18,11)" fg:x="686" fg:w="1"/><text x="54.8244%" y="271.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (27 samples, 2.15%)</title><rect x="52.5855%" y="405" width="2.1480%" height="15" fill="rgb(243,156,2)" fg:x="661" fg:w="27"/><text x="52.8355%" y="415.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (27 samples, 2.15%)</title><rect x="52.5855%" y="389" width="2.1480%" height="15" fill="rgb(218,8,34)" fg:x="661" fg:w="27"/><text x="52.8355%" y="399.50">k..</text></g><g><title>engine::session::Session::load_entity (27 samples, 2.15%)</title><rect x="52.5855%" y="373" width="2.1480%" height="15" fill="rgb(250,94,35)" fg:x="661" fg:w="27"/><text x="52.8355%" y="383.50">e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="54.6539%" y="357" width="0.0796%" height="15" fill="rgb(229,127,21)" fg:x="687" fg:w="1"/><text x="54.9039%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.7335%" y="405" width="0.0796%" height="15" fill="rgb(234,49,5)" fg:x="688" fg:w="1"/><text x="54.9835%" y="415.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (35 samples, 2.78%)</title><rect x="52.1082%" y="437" width="2.7844%" height="15" fill="rgb(248,12,16)" fg:x="655" fg:w="35"/><text x="52.3582%" y="447.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (35 samples, 2.78%)</title><rect x="52.1082%" y="421" width="2.7844%" height="15" fill="rgb(208,220,31)" fg:x="655" fg:w="35"/><text x="52.3582%" y="431.50">&lt;p..</text></g><g><title>plugins_core::finding::DefaultFinder::find_top_container (1 samples, 0.08%)</title><rect x="54.8130%" y="405" width="0.0796%" height="15" fill="rgb(243,184,0)" fg:x="689" fg:w="1"/><text x="55.0630%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="54.8130%" y="389" width="0.0796%" height="15" fill="rgb(217,38,21)" fg:x="689" fg:w="1"/><text x="55.0630%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="54.8130%" y="373" width="0.0796%" height="15" fill="rgb(239,120,45)" fg:x="689" fg:w="1"/><text x="55.0630%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.8130%" y="357" width="0.0796%" height="15" fill="rgb(235,33,2)" fg:x="689" fg:w="1"/><text x="55.0630%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.8130%" y="341" width="0.0796%" height="15" fill="rgb(249,161,5)" fg:x="689" fg:w="1"/><text x="55.0630%" y="351.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="54.9722%" y="405" width="0.3182%" height="15" fill="rgb(250,165,48)" fg:x="691" fg:w="4"/><text x="55.2222%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="54.9722%" y="389" width="0.3182%" height="15" fill="rgb(221,23,45)" fg:x="691" fg:w="4"/><text x="55.2222%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="55.0517%" y="373" width="0.2387%" height="15" fill="rgb(217,108,46)" fg:x="692" fg:w="3"/><text x="55.3017%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="55.0517%" y="357" width="0.2387%" height="15" fill="rgb(254,26,35)" fg:x="692" fg:w="3"/><text x="55.3017%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="55.0517%" y="341" width="0.2387%" height="15" fill="rgb(218,223,28)" fg:x="692" fg:w="3"/><text x="55.3017%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="55.0517%" y="325" width="0.2387%" height="15" fill="rgb(242,27,47)" fg:x="692" fg:w="3"/><text x="55.3017%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="55.0517%" y="309" width="0.2387%" height="15" fill="rgb(218,39,35)" fg:x="692" fg:w="3"/><text x="55.3017%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="55.0517%" y="293" width="0.2387%" height="15" fill="rgb(232,127,16)" fg:x="692" fg:w="3"/><text x="55.3017%" y="303.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="55.2108%" y="277" width="0.0796%" height="15" fill="rgb(231,219,51)" fg:x="694" fg:w="1"/><text x="55.4608%" y="287.50"></text></g><g><title>plugins_rune::runner::SharedRunners::add_runners_for (1 samples, 0.08%)</title><rect x="55.2904%" y="405" width="0.0796%" height="15" fill="rgb(217,220,46)" fg:x="695" fg:w="1"/><text x="55.5404%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.3699%" y="389" width="0.0796%" height="15" fill="rgb(230,75,1)" fg:x="696" fg:w="1"/><text x="55.6199%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="55.6086%" y="373" width="0.0796%" height="15" fill="rgb(218,2,8)" fg:x="699" fg:w="1"/><text x="55.8586%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="55.6086%" y="357" width="0.0796%" height="15" fill="rgb(206,111,30)" fg:x="699" fg:w="1"/><text x="55.8586%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="55.6086%" y="341" width="0.0796%" height="15" fill="rgb(209,135,6)" fg:x="699" fg:w="1"/><text x="55.8586%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.6881%" y="341" width="0.1591%" height="15" fill="rgb(205,169,10)" fg:x="700" fg:w="2"/><text x="55.9381%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.7677%" y="325" width="0.0796%" height="15" fill="rgb(212,204,38)" fg:x="701" fg:w="1"/><text x="56.0177%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.0859%" y="309" width="0.0796%" height="15" fill="rgb(205,199,14)" fg:x="705" fg:w="1"/><text x="56.3359%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.1655%" y="309" width="0.0796%" height="15" fill="rgb(212,4,6)" fg:x="706" fg:w="1"/><text x="56.4155%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="56.2450%" y="309" width="0.1591%" height="15" fill="rgb(250,15,10)" fg:x="707" fg:w="2"/><text x="56.4950%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.2450%" y="293" width="0.1591%" height="15" fill="rgb(212,49,51)" fg:x="707" fg:w="2"/><text x="56.4950%" y="303.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (10 samples, 0.80%)</title><rect x="55.6881%" y="357" width="0.7955%" height="15" fill="rgb(235,21,9)" fg:x="700" fg:w="10"/><text x="55.9381%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="55.8473%" y="341" width="0.6364%" height="15" fill="rgb(251,31,32)" fg:x="702" fg:w="8"/><text x="56.0973%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="55.8473%" y="325" width="0.6364%" height="15" fill="rgb(246,23,9)" fg:x="702" fg:w="8"/><text x="56.0973%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.4041%" y="309" width="0.0796%" height="15" fill="rgb(225,216,14)" fg:x="709" fg:w="1"/><text x="56.6541%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.4041%" y="293" width="0.0796%" height="15" fill="rgb(215,200,26)" fg:x="709" fg:w="1"/><text x="56.6541%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="56.4041%" y="277" width="0.0796%" height="15" fill="rgb(237,130,47)" fg:x="709" fg:w="1"/><text x="56.6541%" y="287.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="56.4837%" y="309" width="0.0796%" height="15" fill="rgb(247,74,14)" fg:x="710" fg:w="1"/><text x="56.7337%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4837%" y="293" width="0.0796%" height="15" fill="rgb(254,97,46)" fg:x="710" fg:w="1"/><text x="56.7337%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4837%" y="277" width="0.0796%" height="15" fill="rgb(234,191,1)" fg:x="710" fg:w="1"/><text x="56.7337%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.4837%" y="261" width="0.0796%" height="15" fill="rgb(215,165,14)" fg:x="710" fg:w="1"/><text x="56.7337%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.4837%" y="245" width="0.0796%" height="15" fill="rgb(230,182,6)" fg:x="710" fg:w="1"/><text x="56.7337%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.4837%" y="229" width="0.0796%" height="15" fill="rgb(210,127,39)" fg:x="710" fg:w="1"/><text x="56.7337%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4837%" y="213" width="0.0796%" height="15" fill="rgb(223,212,51)" fg:x="710" fg:w="1"/><text x="56.7337%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4837%" y="197" width="0.0796%" height="15" fill="rgb(226,176,43)" fg:x="710" fg:w="1"/><text x="56.7337%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.4837%" y="181" width="0.0796%" height="15" fill="rgb(222,155,4)" fg:x="710" fg:w="1"/><text x="56.7337%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.4837%" y="165" width="0.0796%" height="15" fill="rgb(215,149,7)" fg:x="710" fg:w="1"/><text x="56.7337%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.4837%" y="149" width="0.0796%" height="15" fill="rgb(252,199,23)" fg:x="710" fg:w="1"/><text x="56.7337%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.4837%" y="133" width="0.0796%" height="15" fill="rgb(245,52,29)" fg:x="710" fg:w="1"/><text x="56.7337%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4837%" y="117" width="0.0796%" height="15" fill="rgb(221,228,19)" fg:x="710" fg:w="1"/><text x="56.7337%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.6428%" y="245" width="0.0796%" height="15" fill="rgb(253,101,6)" fg:x="712" fg:w="1"/><text x="56.8928%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.6428%" y="229" width="0.0796%" height="15" fill="rgb(211,130,8)" fg:x="712" fg:w="1"/><text x="56.8928%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6428%" y="213" width="0.0796%" height="15" fill="rgb(238,37,53)" fg:x="712" fg:w="1"/><text x="56.8928%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6428%" y="197" width="0.0796%" height="15" fill="rgb(235,145,5)" fg:x="712" fg:w="1"/><text x="56.8928%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.6428%" y="181" width="0.0796%" height="15" fill="rgb(244,12,43)" fg:x="712" fg:w="1"/><text x="56.8928%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.6428%" y="165" width="0.0796%" height="15" fill="rgb(246,195,24)" fg:x="712" fg:w="1"/><text x="56.8928%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.6428%" y="149" width="0.0796%" height="15" fill="rgb(235,163,6)" fg:x="712" fg:w="1"/><text x="56.8928%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.6428%" y="133" width="0.0796%" height="15" fill="rgb(236,218,17)" fg:x="712" fg:w="1"/><text x="56.8928%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.6428%" y="117" width="0.0796%" height="15" fill="rgb(235,12,38)" fg:x="712" fg:w="1"/><text x="56.8928%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.6428%" y="101" width="0.0796%" height="15" fill="rgb(225,195,33)" fg:x="712" fg:w="1"/><text x="56.8928%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.6428%" y="85" width="0.0796%" height="15" fill="rgb(238,54,35)" fg:x="712" fg:w="1"/><text x="56.8928%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.6428%" y="69" width="0.0796%" height="15" fill="rgb(238,33,7)" fg:x="712" fg:w="1"/><text x="56.8928%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.6428%" y="53" width="0.0796%" height="15" fill="rgb(245,5,14)" fg:x="712" fg:w="1"/><text x="56.8928%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.6428%" y="277" width="0.1591%" height="15" fill="rgb(251,95,31)" fg:x="712" fg:w="2"/><text x="56.8928%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.6428%" y="261" width="0.1591%" height="15" fill="rgb(222,15,46)" fg:x="712" fg:w="2"/><text x="56.8928%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7224%" y="245" width="0.0796%" height="15" fill="rgb(226,182,24)" fg:x="713" fg:w="1"/><text x="56.9724%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7224%" y="229" width="0.0796%" height="15" fill="rgb(229,105,41)" fg:x="713" fg:w="1"/><text x="56.9724%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.7224%" y="213" width="0.0796%" height="15" fill="rgb(216,99,53)" fg:x="713" fg:w="1"/><text x="56.9724%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.7224%" y="197" width="0.0796%" height="15" fill="rgb(253,26,20)" fg:x="713" fg:w="1"/><text x="56.9724%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.7224%" y="181" width="0.0796%" height="15" fill="rgb(249,155,28)" fg:x="713" fg:w="1"/><text x="56.9724%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7224%" y="165" width="0.0796%" height="15" fill="rgb(241,221,2)" fg:x="713" fg:w="1"/><text x="56.9724%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7224%" y="149" width="0.0796%" height="15" fill="rgb(219,124,6)" fg:x="713" fg:w="1"/><text x="56.9724%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.7224%" y="133" width="0.0796%" height="15" fill="rgb(233,37,6)" fg:x="713" fg:w="1"/><text x="56.9724%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.7224%" y="117" width="0.0796%" height="15" fill="rgb(238,20,14)" fg:x="713" fg:w="1"/><text x="56.9724%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.7224%" y="101" width="0.0796%" height="15" fill="rgb(232,106,27)" fg:x="713" fg:w="1"/><text x="56.9724%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.7224%" y="85" width="0.0796%" height="15" fill="rgb(246,157,24)" fg:x="713" fg:w="1"/><text x="56.9724%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7224%" y="69" width="0.0796%" height="15" fill="rgb(214,153,10)" fg:x="713" fg:w="1"/><text x="56.9724%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="56.6428%" y="293" width="0.2387%" height="15" fill="rgb(212,94,6)" fg:x="712" fg:w="3"/><text x="56.8928%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8019%" y="277" width="0.0796%" height="15" fill="rgb(254,25,27)" fg:x="714" fg:w="1"/><text x="57.0519%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8019%" y="261" width="0.0796%" height="15" fill="rgb(250,43,52)" fg:x="714" fg:w="1"/><text x="57.0519%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.8019%" y="245" width="0.0796%" height="15" fill="rgb(221,226,40)" fg:x="714" fg:w="1"/><text x="57.0519%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.8019%" y="229" width="0.0796%" height="15" fill="rgb(235,162,34)" fg:x="714" fg:w="1"/><text x="57.0519%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.8019%" y="213" width="0.0796%" height="15" fill="rgb(239,24,26)" fg:x="714" fg:w="1"/><text x="57.0519%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8019%" y="197" width="0.0796%" height="15" fill="rgb(244,226,11)" fg:x="714" fg:w="1"/><text x="57.0519%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8019%" y="181" width="0.0796%" height="15" fill="rgb(225,23,10)" fg:x="714" fg:w="1"/><text x="57.0519%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.8019%" y="165" width="0.0796%" height="15" fill="rgb(249,125,6)" fg:x="714" fg:w="1"/><text x="57.0519%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.8019%" y="149" width="0.0796%" height="15" fill="rgb(246,212,12)" fg:x="714" fg:w="1"/><text x="57.0519%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.8019%" y="133" width="0.0796%" height="15" fill="rgb(230,43,32)" fg:x="714" fg:w="1"/><text x="57.0519%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.8019%" y="117" width="0.0796%" height="15" fill="rgb(210,95,23)" fg:x="714" fg:w="1"/><text x="57.0519%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8019%" y="101" width="0.0796%" height="15" fill="rgb(229,103,33)" fg:x="714" fg:w="1"/><text x="57.0519%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="56.8815%" y="293" width="0.0796%" height="15" fill="rgb(222,104,27)" fg:x="715" fg:w="1"/><text x="57.1315%" y="303.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="56.9610%" y="293" width="0.1591%" height="15" fill="rgb(239,221,23)" fg:x="716" fg:w="2"/><text x="57.2110%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.9610%" y="277" width="0.1591%" height="15" fill="rgb(222,98,21)" fg:x="716" fg:w="2"/><text x="57.2110%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="56.9610%" y="261" width="0.1591%" height="15" fill="rgb(231,101,20)" fg:x="716" fg:w="2"/><text x="57.2110%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.0406%" y="245" width="0.0796%" height="15" fill="rgb(215,150,22)" fg:x="717" fg:w="1"/><text x="57.2906%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.1201%" y="133" width="0.0796%" height="15" fill="rgb(248,3,34)" fg:x="718" fg:w="1"/><text x="57.3701%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.1201%" y="117" width="0.0796%" height="15" fill="rgb(220,141,21)" fg:x="718" fg:w="1"/><text x="57.3701%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.1201%" y="165" width="0.1591%" height="15" fill="rgb(223,41,48)" fg:x="718" fg:w="2"/><text x="57.3701%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.1201%" y="149" width="0.1591%" height="15" fill="rgb(247,12,5)" fg:x="718" fg:w="2"/><text x="57.3701%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="57.1997%" y="133" width="0.0796%" height="15" fill="rgb(206,173,10)" fg:x="719" fg:w="1"/><text x="57.4497%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="57.1201%" y="197" width="0.3978%" height="15" fill="rgb(233,214,37)" fg:x="718" fg:w="5"/><text x="57.3701%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="57.1201%" y="181" width="0.3978%" height="15" fill="rgb(238,86,43)" fg:x="718" fg:w="5"/><text x="57.3701%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="57.2792%" y="165" width="0.2387%" height="15" fill="rgb(212,182,8)" fg:x="720" fg:w="3"/><text x="57.5292%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="57.2792%" y="149" width="0.2387%" height="15" fill="rgb(240,91,47)" fg:x="720" fg:w="3"/><text x="57.5292%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.4383%" y="133" width="0.0796%" height="15" fill="rgb(209,138,26)" fg:x="722" fg:w="1"/><text x="57.6883%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.4383%" y="117" width="0.0796%" height="15" fill="rgb(231,163,20)" fg:x="722" fg:w="1"/><text x="57.6883%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4383%" y="101" width="0.0796%" height="15" fill="rgb(214,91,54)" fg:x="722" fg:w="1"/><text x="57.6883%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.5179%" y="197" width="0.0796%" height="15" fill="rgb(230,32,17)" fg:x="723" fg:w="1"/><text x="57.7679%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.5975%" y="133" width="0.1591%" height="15" fill="rgb(231,34,34)" fg:x="724" fg:w="2"/><text x="57.8475%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="57.6770%" y="117" width="0.0796%" height="15" fill="rgb(224,228,27)" fg:x="725" fg:w="1"/><text x="57.9270%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.6770%" y="101" width="0.0796%" height="15" fill="rgb(219,35,40)" fg:x="725" fg:w="1"/><text x="57.9270%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.6770%" y="85" width="0.0796%" height="15" fill="rgb(234,42,8)" fg:x="725" fg:w="1"/><text x="57.9270%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.6770%" y="69" width="0.0796%" height="15" fill="rgb(226,75,22)" fg:x="725" fg:w="1"/><text x="57.9270%" y="79.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.72%)</title><rect x="57.1201%" y="293" width="0.7160%" height="15" fill="rgb(242,203,28)" fg:x="718" fg:w="9"/><text x="57.3701%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="57.1201%" y="277" width="0.7160%" height="15" fill="rgb(221,3,9)" fg:x="718" fg:w="9"/><text x="57.3701%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="57.1201%" y="261" width="0.7160%" height="15" fill="rgb(214,34,31)" fg:x="718" fg:w="9"/><text x="57.3701%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="57.1201%" y="245" width="0.7160%" height="15" fill="rgb(252,119,15)" fg:x="718" fg:w="9"/><text x="57.3701%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="57.1201%" y="229" width="0.7160%" height="15" fill="rgb(244,224,31)" fg:x="718" fg:w="9"/><text x="57.3701%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="57.1201%" y="213" width="0.7160%" height="15" fill="rgb(215,8,51)" fg:x="718" fg:w="9"/><text x="57.3701%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.5975%" y="197" width="0.2387%" height="15" fill="rgb(207,24,1)" fg:x="724" fg:w="3"/><text x="57.8475%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="57.5975%" y="181" width="0.2387%" height="15" fill="rgb(245,90,0)" fg:x="724" fg:w="3"/><text x="57.8475%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="57.5975%" y="165" width="0.2387%" height="15" fill="rgb(246,43,48)" fg:x="724" fg:w="3"/><text x="57.8475%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.5975%" y="149" width="0.2387%" height="15" fill="rgb(252,218,10)" fg:x="724" fg:w="3"/><text x="57.8475%" y="159.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="57.7566%" y="133" width="0.0796%" height="15" fill="rgb(231,24,35)" fg:x="726" fg:w="1"/><text x="58.0066%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.8361%" y="213" width="0.0796%" height="15" fill="rgb(225,66,19)" fg:x="727" fg:w="1"/><text x="58.0861%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.9952%" y="133" width="0.0796%" height="15" fill="rgb(214,96,51)" fg:x="729" fg:w="1"/><text x="58.2452%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.9952%" y="117" width="0.0796%" height="15" fill="rgb(251,151,47)" fg:x="729" fg:w="1"/><text x="58.2452%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.9952%" y="101" width="0.0796%" height="15" fill="rgb(236,79,14)" fg:x="729" fg:w="1"/><text x="58.2452%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.9952%" y="85" width="0.0796%" height="15" fill="rgb(210,205,11)" fg:x="729" fg:w="1"/><text x="58.2452%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="57.9952%" y="149" width="0.2387%" height="15" fill="rgb(233,142,53)" fg:x="729" fg:w="3"/><text x="58.2452%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.0748%" y="133" width="0.1591%" height="15" fill="rgb(212,116,48)" fg:x="730" fg:w="2"/><text x="58.3248%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1543%" y="117" width="0.0796%" height="15" fill="rgb(234,55,33)" fg:x="731" fg:w="1"/><text x="58.4043%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="57.9157%" y="197" width="0.3978%" height="15" fill="rgb(253,92,27)" fg:x="728" fg:w="5"/><text x="58.1657%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="57.9157%" y="181" width="0.3978%" height="15" fill="rgb(220,7,35)" fg:x="728" fg:w="5"/><text x="58.1657%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="57.9157%" y="165" width="0.3978%" height="15" fill="rgb(246,124,6)" fg:x="728" fg:w="5"/><text x="58.1657%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.2339%" y="149" width="0.0796%" height="15" fill="rgb(212,111,51)" fg:x="732" fg:w="1"/><text x="58.4839%" y="159.50"></text></g><g><title>plugins_core::tools::contained_by (35 samples, 2.78%)</title><rect x="55.6881%" y="373" width="2.7844%" height="15" fill="rgb(253,116,7)" fg:x="700" fg:w="35"/><text x="55.9381%" y="383.50">pl..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (25 samples, 1.99%)</title><rect x="56.4837%" y="357" width="1.9889%" height="15" fill="rgb(213,145,18)" fg:x="710" fg:w="25"/><text x="56.7337%" y="367.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (25 samples, 1.99%)</title><rect x="56.4837%" y="341" width="1.9889%" height="15" fill="rgb(219,149,7)" fg:x="710" fg:w="25"/><text x="56.7337%" y="351.50">k..</text></g><g><title>engine::session::Session::load_entity (25 samples, 1.99%)</title><rect x="56.4837%" y="325" width="1.9889%" height="15" fill="rgb(225,156,20)" fg:x="710" fg:w="25"/><text x="56.7337%" y="335.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.91%)</title><rect x="56.5632%" y="309" width="1.9093%" height="15" fill="rgb(211,98,19)" fg:x="711" fg:w="24"/><text x="56.8132%" y="319.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="57.8361%" y="293" width="0.6364%" height="15" fill="rgb(231,192,31)" fg:x="727" fg:w="8"/><text x="58.0861%" y="303.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="57.8361%" y="277" width="0.6364%" height="15" fill="rgb(249,95,19)" fg:x="727" fg:w="8"/><text x="58.0861%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="57.8361%" y="261" width="0.6364%" height="15" fill="rgb(247,101,36)" fg:x="727" fg:w="8"/><text x="58.0861%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="57.8361%" y="245" width="0.6364%" height="15" fill="rgb(221,45,43)" fg:x="727" fg:w="8"/><text x="58.0861%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="57.8361%" y="229" width="0.6364%" height="15" fill="rgb(220,42,1)" fg:x="727" fg:w="8"/><text x="58.0861%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="57.9157%" y="213" width="0.5569%" height="15" fill="rgb(236,19,24)" fg:x="728" fg:w="7"/><text x="58.1657%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.3134%" y="197" width="0.1591%" height="15" fill="rgb(225,192,6)" fg:x="733" fg:w="2"/><text x="58.5634%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.3930%" y="181" width="0.0796%" height="15" fill="rgb(242,30,19)" fg:x="734" fg:w="1"/><text x="58.6430%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.3930%" y="165" width="0.0796%" height="15" fill="rgb(240,36,6)" fg:x="734" fg:w="1"/><text x="58.6430%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.4726%" y="325" width="0.0796%" height="15" fill="rgb(246,40,28)" fg:x="735" fg:w="1"/><text x="58.7226%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="58.4726%" y="341" width="0.3182%" height="15" fill="rgb(225,155,33)" fg:x="735" fg:w="4"/><text x="58.7226%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.5521%" y="325" width="0.2387%" height="15" fill="rgb(240,65,18)" fg:x="736" fg:w="3"/><text x="58.8021%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.6317%" y="309" width="0.1591%" height="15" fill="rgb(217,0,48)" fg:x="737" fg:w="2"/><text x="58.8817%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7112%" y="293" width="0.0796%" height="15" fill="rgb(217,80,15)" fg:x="738" fg:w="1"/><text x="58.9612%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8703%" y="213" width="0.0796%" height="15" fill="rgb(253,43,51)" fg:x="740" fg:w="1"/><text x="59.1203%" y="223.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (3 samples, 0.24%)</title><rect x="58.7908%" y="261" width="0.2387%" height="15" fill="rgb(246,60,4)" fg:x="739" fg:w="3"/><text x="59.0408%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.7908%" y="245" width="0.2387%" height="15" fill="rgb(230,40,54)" fg:x="739" fg:w="3"/><text x="59.0408%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.7908%" y="229" width="0.2387%" height="15" fill="rgb(208,20,44)" fg:x="739" fg:w="3"/><text x="59.0408%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.9499%" y="213" width="0.0796%" height="15" fill="rgb(230,22,22)" fg:x="741" fg:w="1"/><text x="59.1999%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.9499%" y="197" width="0.0796%" height="15" fill="rgb(207,57,4)" fg:x="741" fg:w="1"/><text x="59.1999%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="58.7908%" y="309" width="0.3182%" height="15" fill="rgb(242,130,33)" fg:x="739" fg:w="4"/><text x="59.0408%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="58.7908%" y="293" width="0.3182%" height="15" fill="rgb(218,66,43)" fg:x="739" fg:w="4"/><text x="59.0408%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="58.7908%" y="277" width="0.3182%" height="15" fill="rgb(236,105,16)" fg:x="739" fg:w="4"/><text x="59.0408%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.0294%" y="261" width="0.0796%" height="15" fill="rgb(230,46,15)" fg:x="742" fg:w="1"/><text x="59.2794%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0294%" y="245" width="0.0796%" height="15" fill="rgb(251,172,40)" fg:x="742" fg:w="1"/><text x="59.2794%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.0294%" y="229" width="0.0796%" height="15" fill="rgb(225,217,32)" fg:x="742" fg:w="1"/><text x="59.2794%" y="239.50"></text></g><g><title>plugins_core::tools::occupied_by (9 samples, 0.72%)</title><rect x="58.4726%" y="373" width="0.7160%" height="15" fill="rgb(243,10,29)" fg:x="735" fg:w="9"/><text x="58.7226%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (9 samples, 0.72%)</title><rect x="58.4726%" y="357" width="0.7160%" height="15" fill="rgb(207,102,10)" fg:x="735" fg:w="9"/><text x="58.7226%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="58.7908%" y="341" width="0.3978%" height="15" fill="rgb(241,125,5)" fg:x="739" fg:w="5"/><text x="59.0408%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="58.7908%" y="325" width="0.3978%" height="15" fill="rgb(230,125,29)" fg:x="739" fg:w="5"/><text x="59.0408%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.1090%" y="309" width="0.0796%" height="15" fill="rgb(223,65,44)" fg:x="743" fg:w="1"/><text x="59.3590%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.1090%" y="293" width="0.0796%" height="15" fill="rgb(224,188,28)" fg:x="743" fg:w="1"/><text x="59.3590%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="59.1885%" y="341" width="0.0796%" height="15" fill="rgb(254,197,27)" fg:x="744" fg:w="1"/><text x="59.4385%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.1885%" y="325" width="0.0796%" height="15" fill="rgb(220,200,25)" fg:x="744" fg:w="1"/><text x="59.4385%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.1885%" y="309" width="0.0796%" height="15" fill="rgb(239,225,54)" fg:x="744" fg:w="1"/><text x="59.4385%" y="319.50"></text></g><g><title>engine::session::Session::captured (98 samples, 7.80%)</title><rect x="51.5513%" y="549" width="7.7963%" height="15" fill="rgb(211,59,40)" fg:x="648" fg:w="98"/><text x="51.8013%" y="559.50">engine::ses..</text></g><g><title>engine::session::logs::capture (96 samples, 7.64%)</title><rect x="51.7104%" y="533" width="7.6372%" height="15" fill="rgb(213,176,46)" fg:x="650" fg:w="96"/><text x="51.9604%" y="543.50">engine::se..</text></g><g><title>tracing_core::dispatcher::with_default (94 samples, 7.48%)</title><rect x="51.8695%" y="517" width="7.4781%" height="15" fill="rgb(226,99,4)" fg:x="652" fg:w="94"/><text x="52.1195%" y="527.50">tracing_co..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (93 samples, 7.40%)</title><rect x="51.9491%" y="501" width="7.3986%" height="15" fill="rgb(239,203,43)" fg:x="653" fg:w="93"/><text x="52.1991%" y="511.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::apply_middleware (92 samples, 7.32%)</title><rect x="52.0286%" y="485" width="7.3190%" height="15" fill="rgb(246,1,45)" fg:x="654" fg:w="92"/><text x="52.2786%" y="495.50">kernel::pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (92 samples, 7.32%)</title><rect x="52.0286%" y="469" width="7.3190%" height="15" fill="rgb(231,42,52)" fg:x="654" fg:w="92"/><text x="52.2786%" y="479.50">kernel::pl..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (92 samples, 7.32%)</title><rect x="52.0286%" y="453" width="7.3190%" height="15" fill="rgb(240,13,50)" fg:x="654" fg:w="92"/><text x="52.2786%" y="463.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (56 samples, 4.46%)</title><rect x="54.8926%" y="437" width="4.4551%" height="15" fill="rgb(225,81,14)" fg:x="690" fg:w="56"/><text x="55.1426%" y="447.50">kerne..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (55 samples, 4.38%)</title><rect x="54.9722%" y="421" width="4.3755%" height="15" fill="rgb(216,182,23)" fg:x="691" fg:w="55"/><text x="55.2222%" y="431.50">&lt;plug..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (50 samples, 3.98%)</title><rect x="55.3699%" y="405" width="3.9777%" height="15" fill="rgb(233,137,19)" fg:x="696" fg:w="50"/><text x="55.6199%" y="415.50">plug..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (49 samples, 3.90%)</title><rect x="55.4495%" y="389" width="3.8982%" height="15" fill="rgb(242,61,46)" fg:x="697" fg:w="49"/><text x="55.6995%" y="399.50">plug..</text></g><g><title>plugins_core::tools::worn_by (2 samples, 0.16%)</title><rect x="59.1885%" y="373" width="0.1591%" height="15" fill="rgb(221,168,51)" fg:x="744" fg:w="2"/><text x="59.4385%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="59.1885%" y="357" width="0.1591%" height="15" fill="rgb(238,48,15)" fg:x="744" fg:w="2"/><text x="59.4385%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.2681%" y="341" width="0.0796%" height="15" fill="rgb(216,13,16)" fg:x="745" fg:w="1"/><text x="59.5181%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.2681%" y="325" width="0.0796%" height="15" fill="rgb(223,185,34)" fg:x="745" fg:w="1"/><text x="59.5181%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.2681%" y="309" width="0.0796%" height="15" fill="rgb(228,94,42)" fg:x="745" fg:w="1"/><text x="59.5181%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.3477%" y="469" width="0.0796%" height="15" fill="rgb(218,166,43)" fg:x="746" fg:w="1"/><text x="59.5977%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.4272%" y="405" width="0.2387%" height="15" fill="rgb(232,30,50)" fg:x="747" fg:w="3"/><text x="59.6772%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5863%" y="389" width="0.0796%" height="15" fill="rgb(245,206,45)" fg:x="749" fg:w="1"/><text x="59.8363%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.9045%" y="309" width="0.1591%" height="15" fill="rgb(220,56,22)" fg:x="753" fg:w="2"/><text x="60.1545%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9841%" y="293" width="0.0796%" height="15" fill="rgb(239,129,38)" fg:x="754" fg:w="1"/><text x="60.2341%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9841%" y="277" width="0.0796%" height="15" fill="rgb(207,68,41)" fg:x="754" fg:w="1"/><text x="60.2341%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.9841%" y="261" width="0.0796%" height="15" fill="rgb(221,21,7)" fg:x="754" fg:w="1"/><text x="60.2341%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.9841%" y="245" width="0.0796%" height="15" fill="rgb(240,33,25)" fg:x="754" fg:w="1"/><text x="60.2341%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.9841%" y="229" width="0.0796%" height="15" fill="rgb(242,119,10)" fg:x="754" fg:w="1"/><text x="60.2341%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.9841%" y="213" width="0.0796%" height="15" fill="rgb(214,149,40)" fg:x="754" fg:w="1"/><text x="60.2341%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.9841%" y="197" width="0.0796%" height="15" fill="rgb(228,25,36)" fg:x="754" fg:w="1"/><text x="60.2341%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.9841%" y="181" width="0.0796%" height="15" fill="rgb(222,59,15)" fg:x="754" fg:w="1"/><text x="60.2341%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="59.9841%" y="165" width="0.0796%" height="15" fill="rgb(218,170,0)" fg:x="754" fg:w="1"/><text x="60.2341%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="59.9841%" y="149" width="0.0796%" height="15" fill="rgb(232,173,23)" fg:x="754" fg:w="1"/><text x="60.2341%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="59.8250%" y="357" width="0.3182%" height="15" fill="rgb(218,116,1)" fg:x="752" fg:w="4"/><text x="60.0750%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="59.9045%" y="341" width="0.2387%" height="15" fill="rgb(207,34,4)" fg:x="753" fg:w="3"/><text x="60.1545%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="59.9045%" y="325" width="0.2387%" height="15" fill="rgb(229,54,52)" fg:x="753" fg:w="3"/><text x="60.1545%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.0636%" y="309" width="0.0796%" height="15" fill="rgb(211,86,23)" fg:x="755" fg:w="1"/><text x="60.3136%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.0636%" y="293" width="0.0796%" height="15" fill="rgb(254,153,34)" fg:x="755" fg:w="1"/><text x="60.3136%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="59.6659%" y="405" width="0.5569%" height="15" fill="rgb(219,220,14)" fg:x="750" fg:w="7"/><text x="59.9159%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.56%)</title><rect x="59.6659%" y="389" width="0.5569%" height="15" fill="rgb(247,8,26)" fg:x="750" fg:w="7"/><text x="59.9159%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="59.7454%" y="373" width="0.4773%" height="15" fill="rgb(213,129,42)" fg:x="751" fg:w="6"/><text x="59.9954%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.1432%" y="357" width="0.0796%" height="15" fill="rgb(225,95,41)" fg:x="756" fg:w="1"/><text x="60.3932%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1432%" y="341" width="0.0796%" height="15" fill="rgb(215,134,24)" fg:x="756" fg:w="1"/><text x="60.3932%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="60.1432%" y="325" width="0.0796%" height="15" fill="rgb(235,23,54)" fg:x="756" fg:w="1"/><text x="60.3932%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="60.1432%" y="309" width="0.0796%" height="15" fill="rgb(229,96,31)" fg:x="756" fg:w="1"/><text x="60.3932%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::unexpected (1 samples, 0.08%)</title><rect x="60.1432%" y="293" width="0.0796%" height="15" fill="rgb(206,111,12)" fg:x="756" fg:w="1"/><text x="60.3932%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="59.4272%" y="453" width="0.8751%" height="15" fill="rgb(222,177,8)" fg:x="747" fg:w="11"/><text x="59.6772%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.88%)</title><rect x="59.4272%" y="437" width="0.8751%" height="15" fill="rgb(251,36,52)" fg:x="747" fg:w="11"/><text x="59.6772%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (11 samples, 0.88%)</title><rect x="59.4272%" y="421" width="0.8751%" height="15" fill="rgb(216,182,29)" fg:x="747" fg:w="11"/><text x="59.6772%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2228%" y="405" width="0.0796%" height="15" fill="rgb(241,145,50)" fg:x="757" fg:w="1"/><text x="60.4728%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2228%" y="389" width="0.0796%" height="15" fill="rgb(231,71,35)" fg:x="757" fg:w="1"/><text x="60.4728%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.2228%" y="373" width="0.0796%" height="15" fill="rgb(218,22,17)" fg:x="757" fg:w="1"/><text x="60.4728%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.2228%" y="357" width="0.0796%" height="15" fill="rgb(225,227,6)" fg:x="757" fg:w="1"/><text x="60.4728%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.2228%" y="341" width="0.0796%" height="15" fill="rgb(224,204,17)" fg:x="757" fg:w="1"/><text x="60.4728%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4614%" y="405" width="0.0796%" height="15" fill="rgb(227,61,28)" fg:x="760" fg:w="1"/><text x="60.7114%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.27%)</title><rect x="59.3477%" y="501" width="1.2729%" height="15" fill="rgb(242,148,23)" fg:x="746" fg:w="16"/><text x="59.5977%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.27%)</title><rect x="59.3477%" y="485" width="1.2729%" height="15" fill="rgb(237,105,33)" fg:x="746" fg:w="16"/><text x="59.5977%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (15 samples, 1.19%)</title><rect x="59.4272%" y="469" width="1.1933%" height="15" fill="rgb(238,218,40)" fg:x="747" fg:w="15"/><text x="59.6772%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.3023%" y="453" width="0.3182%" height="15" fill="rgb(209,126,11)" fg:x="758" fg:w="4"/><text x="60.5523%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.3023%" y="437" width="0.3182%" height="15" fill="rgb(245,90,11)" fg:x="758" fg:w="4"/><text x="60.5523%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="60.3819%" y="421" width="0.2387%" height="15" fill="rgb(211,195,10)" fg:x="759" fg:w="3"/><text x="60.6319%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.5410%" y="405" width="0.0796%" height="15" fill="rgb(231,45,45)" fg:x="761" fg:w="1"/><text x="60.7910%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.5410%" y="389" width="0.0796%" height="15" fill="rgb(246,100,43)" fg:x="761" fg:w="1"/><text x="60.7910%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.6205%" y="453" width="0.0796%" height="15" fill="rgb(241,193,8)" fg:x="762" fg:w="1"/><text x="60.8705%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.6205%" y="437" width="0.0796%" height="15" fill="rgb(208,76,19)" fg:x="762" fg:w="1"/><text x="60.8705%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (18 samples, 1.43%)</title><rect x="59.3477%" y="533" width="1.4320%" height="15" fill="rgb(223,69,40)" fg:x="746" fg:w="18"/><text x="59.5977%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (18 samples, 1.43%)</title><rect x="59.3477%" y="517" width="1.4320%" height="15" fill="rgb(207,120,39)" fg:x="746" fg:w="18"/><text x="59.5977%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.6205%" y="501" width="0.1591%" height="15" fill="rgb(212,209,28)" fg:x="762" fg:w="2"/><text x="60.8705%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.6205%" y="485" width="0.1591%" height="15" fill="rgb(246,82,29)" fg:x="762" fg:w="2"/><text x="60.8705%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="60.6205%" y="469" width="0.1591%" height="15" fill="rgb(239,6,40)" fg:x="762" fg:w="2"/><text x="60.8705%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.7001%" y="453" width="0.0796%" height="15" fill="rgb(228,181,35)" fg:x="763" fg:w="1"/><text x="60.9501%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7796%" y="517" width="0.0796%" height="15" fill="rgb(238,151,2)" fg:x="764" fg:w="1"/><text x="61.0296%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7796%" y="501" width="0.0796%" height="15" fill="rgb(236,94,18)" fg:x="764" fg:w="1"/><text x="61.0296%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7796%" y="485" width="0.0796%" height="15" fill="rgb(208,38,14)" fg:x="764" fg:w="1"/><text x="61.0296%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.7796%" y="469" width="0.0796%" height="15" fill="rgb(234,215,27)" fg:x="764" fg:w="1"/><text x="61.0296%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.7796%" y="453" width="0.0796%" height="15" fill="rgb(254,211,53)" fg:x="764" fg:w="1"/><text x="61.0296%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.7796%" y="437" width="0.0796%" height="15" fill="rgb(216,175,11)" fg:x="764" fg:w="1"/><text x="61.0296%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7796%" y="421" width="0.0796%" height="15" fill="rgb(246,179,26)" fg:x="764" fg:w="1"/><text x="61.0296%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7796%" y="405" width="0.0796%" height="15" fill="rgb(249,19,52)" fg:x="764" fg:w="1"/><text x="61.0296%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.7796%" y="389" width="0.0796%" height="15" fill="rgb(230,42,52)" fg:x="764" fg:w="1"/><text x="61.0296%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.7796%" y="373" width="0.0796%" height="15" fill="rgb(221,171,0)" fg:x="764" fg:w="1"/><text x="61.0296%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.7796%" y="357" width="0.0796%" height="15" fill="rgb(222,177,40)" fg:x="764" fg:w="1"/><text x="61.0296%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.7796%" y="341" width="0.0796%" height="15" fill="rgb(247,34,16)" fg:x="764" fg:w="1"/><text x="61.0296%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7796%" y="325" width="0.0796%" height="15" fill="rgb(213,217,37)" fg:x="764" fg:w="1"/><text x="61.0296%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8592%" y="501" width="0.0796%" height="15" fill="rgb(231,189,24)" fg:x="765" fg:w="1"/><text x="61.1092%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8592%" y="485" width="0.0796%" height="15" fill="rgb(214,22,9)" fg:x="765" fg:w="1"/><text x="61.1092%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8592%" y="469" width="0.0796%" height="15" fill="rgb(212,70,22)" fg:x="765" fg:w="1"/><text x="61.1092%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8592%" y="453" width="0.0796%" height="15" fill="rgb(249,64,51)" fg:x="765" fg:w="1"/><text x="61.1092%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="60.8592%" y="517" width="0.1591%" height="15" fill="rgb(249,148,20)" fg:x="765" fg:w="2"/><text x="61.1092%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.9387%" y="501" width="0.0796%" height="15" fill="rgb(246,46,48)" fg:x="766" fg:w="1"/><text x="61.1887%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.0183%" y="517" width="0.0796%" height="15" fill="rgb(217,34,48)" fg:x="767" fg:w="1"/><text x="61.2683%" y="527.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="61.0979%" y="517" width="0.0796%" height="15" fill="rgb(222,45,26)" fg:x="768" fg:w="1"/><text x="61.3479%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0979%" y="501" width="0.0796%" height="15" fill="rgb(230,201,36)" fg:x="768" fg:w="1"/><text x="61.3479%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.0979%" y="485" width="0.0796%" height="15" fill="rgb(217,30,43)" fg:x="768" fg:w="1"/><text x="61.3479%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.0979%" y="469" width="0.0796%" height="15" fill="rgb(230,197,40)" fg:x="768" fg:w="1"/><text x="61.3479%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.2570%" y="469" width="0.0796%" height="15" fill="rgb(239,181,18)" fg:x="770" fg:w="1"/><text x="61.5070%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.2570%" y="453" width="0.0796%" height="15" fill="rgb(222,60,39)" fg:x="770" fg:w="1"/><text x="61.5070%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.2570%" y="437" width="0.0796%" height="15" fill="rgb(210,60,22)" fg:x="770" fg:w="1"/><text x="61.5070%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.2570%" y="421" width="0.0796%" height="15" fill="rgb(239,213,48)" fg:x="770" fg:w="1"/><text x="61.5070%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.3365%" y="389" width="0.1591%" height="15" fill="rgb(253,214,23)" fg:x="771" fg:w="2"/><text x="61.5865%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.3365%" y="373" width="0.1591%" height="15" fill="rgb(211,98,45)" fg:x="771" fg:w="2"/><text x="61.5865%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.3365%" y="357" width="0.1591%" height="15" fill="rgb(239,130,44)" fg:x="771" fg:w="2"/><text x="61.5865%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="61.3365%" y="421" width="0.3182%" height="15" fill="rgb(222,181,35)" fg:x="771" fg:w="4"/><text x="61.5865%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="61.3365%" y="405" width="0.3182%" height="15" fill="rgb(219,219,49)" fg:x="771" fg:w="4"/><text x="61.5865%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.4956%" y="389" width="0.1591%" height="15" fill="rgb(227,161,51)" fg:x="773" fg:w="2"/><text x="61.7456%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5752%" y="373" width="0.0796%" height="15" fill="rgb(239,112,27)" fg:x="774" fg:w="1"/><text x="61.8252%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.7343%" y="373" width="0.0796%" height="15" fill="rgb(248,122,18)" fg:x="776" fg:w="1"/><text x="61.9843%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.7343%" y="357" width="0.0796%" height="15" fill="rgb(245,130,23)" fg:x="776" fg:w="1"/><text x="61.9843%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.7343%" y="341" width="0.0796%" height="15" fill="rgb(211,225,28)" fg:x="776" fg:w="1"/><text x="61.9843%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.7343%" y="325" width="0.0796%" height="15" fill="rgb(242,105,44)" fg:x="776" fg:w="1"/><text x="61.9843%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.7343%" y="309" width="0.0796%" height="15" fill="rgb(216,183,46)" fg:x="776" fg:w="1"/><text x="61.9843%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.72%)</title><rect x="61.1774%" y="517" width="0.7160%" height="15" fill="rgb(227,112,9)" fg:x="769" fg:w="9"/><text x="61.4274%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="61.1774%" y="501" width="0.7160%" height="15" fill="rgb(244,21,0)" fg:x="769" fg:w="9"/><text x="61.4274%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="61.1774%" y="485" width="0.7160%" height="15" fill="rgb(236,185,14)" fg:x="769" fg:w="9"/><text x="61.4274%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="61.3365%" y="469" width="0.5569%" height="15" fill="rgb(236,170,30)" fg:x="771" fg:w="7"/><text x="61.5865%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="61.3365%" y="453" width="0.5569%" height="15" fill="rgb(209,198,51)" fg:x="771" fg:w="7"/><text x="61.5865%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="61.3365%" y="437" width="0.5569%" height="15" fill="rgb(205,171,26)" fg:x="771" fg:w="7"/><text x="61.5865%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.6547%" y="421" width="0.2387%" height="15" fill="rgb(246,41,49)" fg:x="775" fg:w="3"/><text x="61.9047%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.6547%" y="405" width="0.2387%" height="15" fill="rgb(240,229,12)" fg:x="775" fg:w="3"/><text x="61.9047%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="61.7343%" y="389" width="0.1591%" height="15" fill="rgb(212,8,54)" fg:x="776" fg:w="2"/><text x="61.9843%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.8138%" y="373" width="0.0796%" height="15" fill="rgb(230,114,13)" fg:x="777" fg:w="1"/><text x="62.0638%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.8138%" y="357" width="0.0796%" height="15" fill="rgb(229,130,28)" fg:x="777" fg:w="1"/><text x="62.0638%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.8138%" y="341" width="0.0796%" height="15" fill="rgb(206,139,15)" fg:x="777" fg:w="1"/><text x="62.0638%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.0525%" y="341" width="0.0796%" height="15" fill="rgb(241,188,35)" fg:x="780" fg:w="1"/><text x="62.3025%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="61.8934%" y="453" width="0.3182%" height="15" fill="rgb(208,224,26)" fg:x="778" fg:w="4"/><text x="62.1434%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.9730%" y="437" width="0.2387%" height="15" fill="rgb(251,131,28)" fg:x="779" fg:w="3"/><text x="62.2230%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="61.9730%" y="421" width="0.2387%" height="15" fill="rgb(208,153,1)" fg:x="779" fg:w="3"/><text x="62.2230%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.9730%" y="405" width="0.2387%" height="15" fill="rgb(234,33,36)" fg:x="779" fg:w="3"/><text x="62.2230%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="61.9730%" y="389" width="0.2387%" height="15" fill="rgb(246,42,29)" fg:x="779" fg:w="3"/><text x="62.2230%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.9730%" y="373" width="0.2387%" height="15" fill="rgb(251,114,16)" fg:x="779" fg:w="3"/><text x="62.2230%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="61.9730%" y="357" width="0.2387%" height="15" fill="rgb(233,13,38)" fg:x="779" fg:w="3"/><text x="62.2230%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.1321%" y="341" width="0.0796%" height="15" fill="rgb(247,120,19)" fg:x="781" fg:w="1"/><text x="62.3821%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1321%" y="325" width="0.0796%" height="15" fill="rgb(205,11,16)" fg:x="781" fg:w="1"/><text x="62.3821%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (37 samples, 2.94%)</title><rect x="59.3477%" y="549" width="2.9435%" height="15" fill="rgb(228,185,19)" fg:x="746" fg:w="37"/><text x="59.5977%" y="559.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.51%)</title><rect x="60.7796%" y="533" width="1.5115%" height="15" fill="rgb(239,88,52)" fg:x="764" fg:w="19"/><text x="61.0296%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="61.8934%" y="517" width="0.3978%" height="15" fill="rgb(219,23,1)" fg:x="778" fg:w="5"/><text x="62.1434%" y="527.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="61.8934%" y="501" width="0.3978%" height="15" fill="rgb(253,177,16)" fg:x="778" fg:w="5"/><text x="62.1434%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="61.8934%" y="485" width="0.3978%" height="15" fill="rgb(225,150,40)" fg:x="778" fg:w="5"/><text x="62.1434%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="61.8934%" y="469" width="0.3978%" height="15" fill="rgb(208,108,30)" fg:x="778" fg:w="5"/><text x="62.1434%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.2116%" y="453" width="0.0796%" height="15" fill="rgb(214,122,4)" fg:x="782" fg:w="1"/><text x="62.4616%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.2116%" y="437" width="0.0796%" height="15" fill="rgb(229,74,37)" fg:x="782" fg:w="1"/><text x="62.4616%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="62.2116%" y="421" width="0.0796%" height="15" fill="rgb(233,61,41)" fg:x="782" fg:w="1"/><text x="62.4616%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3707%" y="517" width="0.0796%" height="15" fill="rgb(238,191,5)" fg:x="784" fg:w="1"/><text x="62.6207%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3707%" y="501" width="0.0796%" height="15" fill="rgb(233,78,24)" fg:x="784" fg:w="1"/><text x="62.6207%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.4503%" y="453" width="0.0796%" height="15" fill="rgb(211,142,8)" fg:x="785" fg:w="1"/><text x="62.7003%" y="463.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="62.2912%" y="549" width="0.3182%" height="15" fill="rgb(253,38,53)" fg:x="783" fg:w="4"/><text x="62.5412%" y="559.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="62.3707%" y="533" width="0.2387%" height="15" fill="rgb(234,63,51)" fg:x="784" fg:w="3"/><text x="62.6207%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.4503%" y="517" width="0.1591%" height="15" fill="rgb(205,23,31)" fg:x="785" fg:w="2"/><text x="62.7003%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.4503%" y="501" width="0.1591%" height="15" fill="rgb(210,184,50)" fg:x="785" fg:w="2"/><text x="62.7003%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="62.4503%" y="485" width="0.1591%" height="15" fill="rgb(222,112,26)" fg:x="785" fg:w="2"/><text x="62.7003%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.4503%" y="469" width="0.1591%" height="15" fill="rgb(250,98,18)" fg:x="785" fg:w="2"/><text x="62.7003%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.5298%" y="453" width="0.0796%" height="15" fill="rgb(250,34,12)" fg:x="786" fg:w="1"/><text x="62.7798%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.6889%" y="469" width="0.1591%" height="15" fill="rgb(236,141,30)" fg:x="788" fg:w="2"/><text x="62.9389%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.6889%" y="453" width="0.1591%" height="15" fill="rgb(246,134,38)" fg:x="788" fg:w="2"/><text x="62.9389%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="62.6094%" y="501" width="0.3182%" height="15" fill="rgb(240,114,4)" fg:x="787" fg:w="4"/><text x="62.8594%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.6889%" y="485" width="0.2387%" height="15" fill="rgb(243,113,39)" fg:x="788" fg:w="3"/><text x="62.9389%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8481%" y="469" width="0.0796%" height="15" fill="rgb(239,215,4)" fg:x="790" fg:w="1"/><text x="63.0981%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="62.9276%" y="501" width="0.1591%" height="15" fill="rgb(236,229,45)" fg:x="791" fg:w="2"/><text x="63.1776%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.9276%" y="485" width="0.1591%" height="15" fill="rgb(242,2,6)" fg:x="791" fg:w="2"/><text x="63.1776%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.9276%" y="469" width="0.1591%" height="15" fill="rgb(239,108,21)" fg:x="791" fg:w="2"/><text x="63.1776%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="62.9276%" y="453" width="0.1591%" height="15" fill="rgb(215,168,34)" fg:x="791" fg:w="2"/><text x="63.1776%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.9276%" y="437" width="0.1591%" height="15" fill="rgb(238,31,17)" fg:x="791" fg:w="2"/><text x="63.1776%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.0072%" y="421" width="0.0796%" height="15" fill="rgb(220,133,11)" fg:x="792" fg:w="1"/><text x="63.2572%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0072%" y="405" width="0.0796%" height="15" fill="rgb(212,158,23)" fg:x="792" fg:w="1"/><text x="63.2572%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.0072%" y="389" width="0.0796%" height="15" fill="rgb(223,172,7)" fg:x="792" fg:w="1"/><text x="63.2572%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.0072%" y="373" width="0.0796%" height="15" fill="rgb(244,3,52)" fg:x="792" fg:w="1"/><text x="63.2572%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.3254%" y="421" width="0.0796%" height="15" fill="rgb(207,69,27)" fg:x="796" fg:w="1"/><text x="63.5754%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (3 samples, 0.24%)</title><rect x="63.2458%" y="453" width="0.2387%" height="15" fill="rgb(213,136,45)" fg:x="795" fg:w="3"/><text x="63.4958%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.2458%" y="437" width="0.2387%" height="15" fill="rgb(218,79,17)" fg:x="795" fg:w="3"/><text x="63.4958%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="63.4049%" y="421" width="0.0796%" height="15" fill="rgb(216,106,36)" fg:x="797" fg:w="1"/><text x="63.6549%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="63.4049%" y="405" width="0.0796%" height="15" fill="rgb(251,27,45)" fg:x="797" fg:w="1"/><text x="63.6549%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4845%" y="421" width="0.0796%" height="15" fill="rgb(232,21,34)" fg:x="798" fg:w="1"/><text x="63.7345%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.5640%" y="421" width="0.1591%" height="15" fill="rgb(249,191,16)" fg:x="799" fg:w="2"/><text x="63.8140%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7232%" y="373" width="0.0796%" height="15" fill="rgb(224,88,20)" fg:x="801" fg:w="1"/><text x="63.9732%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7232%" y="357" width="0.0796%" height="15" fill="rgb(237,93,27)" fg:x="801" fg:w="1"/><text x="63.9732%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7232%" y="341" width="0.0796%" height="15" fill="rgb(226,198,48)" fg:x="801" fg:w="1"/><text x="63.9732%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="63.7232%" y="405" width="0.2387%" height="15" fill="rgb(207,162,53)" fg:x="801" fg:w="3"/><text x="63.9732%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.7232%" y="389" width="0.2387%" height="15" fill="rgb(207,169,9)" fg:x="801" fg:w="3"/><text x="63.9732%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="63.8027%" y="373" width="0.1591%" height="15" fill="rgb(224,166,46)" fg:x="802" fg:w="2"/><text x="64.0527%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="63.8823%" y="357" width="0.0796%" height="15" fill="rgb(233,26,6)" fg:x="803" fg:w="1"/><text x="64.1323%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9618%" y="373" width="0.0796%" height="15" fill="rgb(218,106,45)" fg:x="804" fg:w="1"/><text x="64.2118%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="63.9618%" y="405" width="0.1591%" height="15" fill="rgb(240,217,4)" fg:x="804" fg:w="2"/><text x="64.2118%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="63.9618%" y="389" width="0.1591%" height="15" fill="rgb(246,171,10)" fg:x="804" fg:w="2"/><text x="64.2118%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.0414%" y="373" width="0.0796%" height="15" fill="rgb(223,197,30)" fg:x="805" fg:w="1"/><text x="64.2914%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.1209%" y="373" width="0.0796%" height="15" fill="rgb(207,92,16)" fg:x="806" fg:w="1"/><text x="64.3709%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.1209%" y="357" width="0.0796%" height="15" fill="rgb(211,6,44)" fg:x="806" fg:w="1"/><text x="64.3709%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.80%)</title><rect x="63.4845%" y="453" width="0.7955%" height="15" fill="rgb(219,139,2)" fg:x="798" fg:w="10"/><text x="63.7345%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="63.4845%" y="437" width="0.7955%" height="15" fill="rgb(224,103,21)" fg:x="798" fg:w="10"/><text x="63.7345%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="63.7232%" y="421" width="0.5569%" height="15" fill="rgb(254,110,48)" fg:x="801" fg:w="7"/><text x="63.9732%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.1209%" y="405" width="0.1591%" height="15" fill="rgb(212,88,19)" fg:x="806" fg:w="2"/><text x="64.3709%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1209%" y="389" width="0.1591%" height="15" fill="rgb(248,103,6)" fg:x="806" fg:w="2"/><text x="64.3709%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.2005%" y="373" width="0.0796%" height="15" fill="rgb(214,53,46)" fg:x="807" fg:w="1"/><text x="64.4505%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.2005%" y="357" width="0.0796%" height="15" fill="rgb(236,190,24)" fg:x="807" fg:w="1"/><text x="64.4505%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.2005%" y="341" width="0.0796%" height="15" fill="rgb(254,58,28)" fg:x="807" fg:w="1"/><text x="64.4505%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.2005%" y="325" width="0.0796%" height="15" fill="rgb(243,63,27)" fg:x="807" fg:w="1"/><text x="64.4505%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.2005%" y="309" width="0.0796%" height="15" fill="rgb(206,81,20)" fg:x="807" fg:w="1"/><text x="64.4505%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.2005%" y="293" width="0.0796%" height="15" fill="rgb(252,69,51)" fg:x="807" fg:w="1"/><text x="64.4505%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.2005%" y="277" width="0.0796%" height="15" fill="rgb(222,213,4)" fg:x="807" fg:w="1"/><text x="64.4505%" y="287.50"></text></g><g><title>kernel::model::entity::Entity::from_value (16 samples, 1.27%)</title><rect x="63.0867%" y="501" width="1.2729%" height="15" fill="rgb(226,198,12)" fg:x="793" fg:w="16"/><text x="63.3367%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (16 samples, 1.27%)</title><rect x="63.0867%" y="485" width="1.2729%" height="15" fill="rgb(248,115,11)" fg:x="793" fg:w="16"/><text x="63.3367%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.19%)</title><rect x="63.1663%" y="469" width="1.1933%" height="15" fill="rgb(221,148,54)" fg:x="794" fg:w="15"/><text x="63.4163%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.2800%" y="453" width="0.0796%" height="15" fill="rgb(214,209,51)" fg:x="808" fg:w="1"/><text x="64.5300%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.2800%" y="437" width="0.0796%" height="15" fill="rgb(249,116,53)" fg:x="808" fg:w="1"/><text x="64.5300%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.2800%" y="421" width="0.0796%" height="15" fill="rgb(248,170,1)" fg:x="808" fg:w="1"/><text x="64.5300%" y="431.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="64.3596%" y="501" width="0.0796%" height="15" fill="rgb(244,105,10)" fg:x="809" fg:w="1"/><text x="64.6096%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.3596%" y="485" width="0.0796%" height="15" fill="rgb(229,100,5)" fg:x="809" fg:w="1"/><text x="64.6096%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.3596%" y="469" width="0.0796%" height="15" fill="rgb(233,221,39)" fg:x="809" fg:w="1"/><text x="64.6096%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.5982%" y="373" width="0.0796%" height="15" fill="rgb(233,88,21)" fg:x="812" fg:w="1"/><text x="64.8482%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5982%" y="357" width="0.0796%" height="15" fill="rgb(206,13,0)" fg:x="812" fg:w="1"/><text x="64.8482%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.5982%" y="341" width="0.0796%" height="15" fill="rgb(242,15,35)" fg:x="812" fg:w="1"/><text x="64.8482%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5982%" y="325" width="0.0796%" height="15" fill="rgb(247,142,41)" fg:x="812" fg:w="1"/><text x="64.8482%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.5982%" y="309" width="0.0796%" height="15" fill="rgb(245,51,29)" fg:x="812" fg:w="1"/><text x="64.8482%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.5982%" y="293" width="0.0796%" height="15" fill="rgb(228,209,43)" fg:x="812" fg:w="1"/><text x="64.8482%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="64.4391%" y="405" width="0.3182%" height="15" fill="rgb(233,185,9)" fg:x="810" fg:w="4"/><text x="64.6891%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.5187%" y="389" width="0.2387%" height="15" fill="rgb(226,93,0)" fg:x="811" fg:w="3"/><text x="64.7687%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.6778%" y="373" width="0.0796%" height="15" fill="rgb(245,194,43)" fg:x="813" fg:w="1"/><text x="64.9278%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6778%" y="357" width="0.0796%" height="15" fill="rgb(211,145,34)" fg:x="813" fg:w="1"/><text x="64.9278%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="64.4391%" y="437" width="0.3978%" height="15" fill="rgb(231,228,28)" fg:x="810" fg:w="5"/><text x="64.6891%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="64.4391%" y="421" width="0.3978%" height="15" fill="rgb(236,149,4)" fg:x="810" fg:w="5"/><text x="64.6891%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7574%" y="405" width="0.0796%" height="15" fill="rgb(234,114,38)" fg:x="814" fg:w="1"/><text x="65.0074%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7574%" y="389" width="0.0796%" height="15" fill="rgb(246,132,51)" fg:x="814" fg:w="1"/><text x="65.0074%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7574%" y="373" width="0.0796%" height="15" fill="rgb(251,137,22)" fg:x="814" fg:w="1"/><text x="65.0074%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (29 samples, 2.31%)</title><rect x="62.6094%" y="517" width="2.3071%" height="15" fill="rgb(243,59,52)" fg:x="787" fg:w="29"/><text x="62.8594%" y="527.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="64.4391%" y="501" width="0.4773%" height="15" fill="rgb(239,56,28)" fg:x="810" fg:w="6"/><text x="64.6891%" y="511.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="64.4391%" y="485" width="0.4773%" height="15" fill="rgb(218,168,27)" fg:x="810" fg:w="6"/><text x="64.6891%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="64.4391%" y="469" width="0.4773%" height="15" fill="rgb(232,165,11)" fg:x="810" fg:w="6"/><text x="64.6891%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="64.4391%" y="453" width="0.4773%" height="15" fill="rgb(253,55,41)" fg:x="810" fg:w="6"/><text x="64.6891%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.8369%" y="437" width="0.0796%" height="15" fill="rgb(233,206,24)" fg:x="815" fg:w="1"/><text x="65.0869%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (30 samples, 2.39%)</title><rect x="62.6094%" y="533" width="2.3866%" height="15" fill="rgb(220,199,8)" fg:x="787" fg:w="30"/><text x="62.8594%" y="543.50">en..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="64.9165%" y="517" width="0.0796%" height="15" fill="rgb(254,65,26)" fg:x="816" fg:w="1"/><text x="65.1665%" y="527.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (170 samples, 13.52%)</title><rect x="51.5513%" y="581" width="13.5243%" height="15" fill="rgb(253,102,23)" fg:x="648" fg:w="170"/><text x="51.8013%" y="591.50">engine::session::Ses..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (170 samples, 13.52%)</title><rect x="51.5513%" y="565" width="13.5243%" height="15" fill="rgb(231,103,35)" fg:x="648" fg:w="170"/><text x="51.8013%" y="575.50">engine::session::Ses..</text></g><g><title>kernel::model::EntityPtrResolver::world (31 samples, 2.47%)</title><rect x="62.6094%" y="549" width="2.4662%" height="15" fill="rgb(238,26,10)" fg:x="787" fg:w="31"/><text x="62.8594%" y="559.50">ke..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="64.9960%" y="533" width="0.0796%" height="15" fill="rgb(234,191,34)" fg:x="817" fg:w="1"/><text x="65.2460%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0756%" y="565" width="0.0796%" height="15" fill="rgb(206,210,9)" fg:x="818" fg:w="1"/><text x="65.3256%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (822 samples, 65.39%)</title><rect x="0.0000%" y="629" width="65.3938%" height="15" fill="rgb(219,155,3)" fg:x="0" fg:w="822"/><text x="0.2500%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (822 samples, 65.39%)</title><rect x="0.0000%" y="613" width="65.3938%" height="15" fill="rgb(221,62,52)" fg:x="0" fg:w="822"/><text x="0.2500%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (822 samples, 65.39%)</title><rect x="0.0000%" y="597" width="65.3938%" height="15" fill="rgb(215,197,36)" fg:x="0" fg:w="822"/><text x="0.2500%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (4 samples, 0.32%)</title><rect x="65.0756%" y="581" width="0.3182%" height="15" fill="rgb(226,222,6)" fg:x="818" fg:w="4"/><text x="65.3256%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="65.1551%" y="565" width="0.2387%" height="15" fill="rgb(215,58,28)" fg:x="819" fg:w="3"/><text x="65.4051%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="65.1551%" y="549" width="0.2387%" height="15" fill="rgb(212,148,2)" fg:x="819" fg:w="3"/><text x="65.4051%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="65.2347%" y="533" width="0.1591%" height="15" fill="rgb(208,21,42)" fg:x="820" fg:w="2"/><text x="65.4847%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.4733%" y="501" width="0.1591%" height="15" fill="rgb(209,107,26)" fg:x="823" fg:w="2"/><text x="65.7233%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.40%)</title><rect x="65.4733%" y="533" width="0.3978%" height="15" fill="rgb(254,60,47)" fg:x="823" fg:w="5"/><text x="65.7233%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.40%)</title><rect x="65.4733%" y="517" width="0.3978%" height="15" fill="rgb(207,226,45)" fg:x="823" fg:w="5"/><text x="65.7233%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.24%)</title><rect x="65.6325%" y="501" width="0.2387%" height="15" fill="rgb(223,124,22)" fg:x="825" fg:w="3"/><text x="65.8825%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.48%)</title><rect x="65.4733%" y="565" width="0.4773%" height="15" fill="rgb(240,162,13)" fg:x="823" fg:w="6"/><text x="65.7233%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="65.4733%" y="549" width="0.4773%" height="15" fill="rgb(244,199,31)" fg:x="823" fg:w="6"/><text x="65.7233%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="65.8711%" y="533" width="0.0796%" height="15" fill="rgb(207,92,16)" fg:x="828" fg:w="1"/><text x="66.1211%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.8711%" y="517" width="0.0796%" height="15" fill="rgb(215,31,19)" fg:x="828" fg:w="1"/><text x="66.1211%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.0302%" y="485" width="0.1591%" height="15" fill="rgb(245,118,14)" fg:x="830" fg:w="2"/><text x="66.2802%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.1893%" y="453" width="0.1591%" height="15" fill="rgb(248,12,46)" fg:x="832" fg:w="2"/><text x="66.4393%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.3484%" y="437" width="0.1591%" height="15" fill="rgb(209,119,0)" fg:x="834" fg:w="2"/><text x="66.5984%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.6667%" y="421" width="0.1591%" height="15" fill="rgb(254,51,44)" fg:x="838" fg:w="2"/><text x="66.9167%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="66.8258%" y="421" width="0.1591%" height="15" fill="rgb(253,182,35)" fg:x="840" fg:w="2"/><text x="67.0758%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.9053%" y="405" width="0.0796%" height="15" fill="rgb(205,198,39)" fg:x="841" fg:w="1"/><text x="67.1553%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.9053%" y="389" width="0.0796%" height="15" fill="rgb(251,175,48)" fg:x="841" fg:w="1"/><text x="67.1553%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.03%)</title><rect x="66.0302%" y="501" width="1.0342%" height="15" fill="rgb(239,38,17)" fg:x="830" fg:w="13"/><text x="66.2802%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (11 samples, 0.88%)</title><rect x="66.1893%" y="485" width="0.8751%" height="15" fill="rgb(212,101,8)" fg:x="832" fg:w="11"/><text x="66.4393%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="66.1893%" y="469" width="0.8751%" height="15" fill="rgb(228,35,17)" fg:x="832" fg:w="11"/><text x="66.4393%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="66.3484%" y="453" width="0.7160%" height="15" fill="rgb(214,95,8)" fg:x="834" fg:w="9"/><text x="66.5984%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="66.5076%" y="437" width="0.5569%" height="15" fill="rgb(210,176,35)" fg:x="836" fg:w="7"/><text x="66.7576%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.9849%" y="421" width="0.0796%" height="15" fill="rgb(226,4,3)" fg:x="842" fg:w="1"/><text x="67.2349%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0644%" y="485" width="0.0796%" height="15" fill="rgb(232,133,14)" fg:x="843" fg:w="1"/><text x="67.3144%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.1440%" y="485" width="0.0796%" height="15" fill="rgb(250,191,8)" fg:x="844" fg:w="1"/><text x="67.3940%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2235%" y="469" width="0.0796%" height="15" fill="rgb(213,12,45)" fg:x="845" fg:w="1"/><text x="67.4735%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3827%" y="437" width="0.0796%" height="15" fill="rgb(233,78,26)" fg:x="847" fg:w="1"/><text x="67.6327%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.4622%" y="437" width="0.0796%" height="15" fill="rgb(245,222,11)" fg:x="848" fg:w="1"/><text x="67.7122%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (21 samples, 1.67%)</title><rect x="65.9507%" y="565" width="1.6706%" height="15" fill="rgb(216,174,12)" fg:x="829" fg:w="21"/><text x="66.2007%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.67%)</title><rect x="65.9507%" y="549" width="1.6706%" height="15" fill="rgb(213,15,9)" fg:x="829" fg:w="21"/><text x="66.2007%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (21 samples, 1.67%)</title><rect x="65.9507%" y="533" width="1.6706%" height="15" fill="rgb(238,103,32)" fg:x="829" fg:w="21"/><text x="66.2007%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.67%)</title><rect x="65.9507%" y="517" width="1.6706%" height="15" fill="rgb(245,85,15)" fg:x="829" fg:w="21"/><text x="66.2007%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="67.0644%" y="501" width="0.5569%" height="15" fill="rgb(254,204,5)" fg:x="843" fg:w="7"/><text x="67.3144%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="67.2235%" y="485" width="0.3978%" height="15" fill="rgb(231,178,15)" fg:x="845" fg:w="5"/><text x="67.4735%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="67.3031%" y="469" width="0.3182%" height="15" fill="rgb(248,151,3)" fg:x="846" fg:w="4"/><text x="67.5531%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="67.3827%" y="453" width="0.2387%" height="15" fill="rgb(250,139,13)" fg:x="847" fg:w="3"/><text x="67.6327%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.5418%" y="437" width="0.0796%" height="15" fill="rgb(243,107,53)" fg:x="849" fg:w="1"/><text x="67.7918%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.5418%" y="421" width="0.0796%" height="15" fill="rgb(232,81,15)" fg:x="849" fg:w="1"/><text x="67.7918%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5418%" y="405" width="0.0796%" height="15" fill="rgb(225,187,48)" fg:x="849" fg:w="1"/><text x="67.7918%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::Captured&gt; (1 samples, 0.08%)</title><rect x="67.6213%" y="565" width="0.0796%" height="15" fill="rgb(205,116,12)" fg:x="850" fg:w="1"/><text x="67.8713%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.31%)</title><rect x="65.4733%" y="581" width="2.3071%" height="15" fill="rgb(220,222,31)" fg:x="823" fg:w="29"/><text x="65.7233%" y="591.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="67.7009%" y="565" width="0.0796%" height="15" fill="rgb(233,187,49)" fg:x="851" fg:w="1"/><text x="67.9509%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.7009%" y="549" width="0.0796%" height="15" fill="rgb(211,168,53)" fg:x="851" fg:w="1"/><text x="67.9509%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.7804%" y="533" width="0.0796%" height="15" fill="rgb(206,160,16)" fg:x="852" fg:w="1"/><text x="68.0304%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1782%" y="437" width="0.0796%" height="15" fill="rgb(254,164,13)" fg:x="857" fg:w="1"/><text x="68.4282%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (3 samples, 0.24%)</title><rect x="68.1782%" y="453" width="0.2387%" height="15" fill="rgb(229,45,30)" fg:x="857" fg:w="3"/><text x="68.4282%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="68.2578%" y="437" width="0.1591%" height="15" fill="rgb(237,32,10)" fg:x="858" fg:w="2"/><text x="68.5078%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="68.2578%" y="421" width="0.1591%" height="15" fill="rgb(251,20,47)" fg:x="858" fg:w="2"/><text x="68.5078%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.2578%" y="405" width="0.1591%" height="15" fill="rgb(251,116,12)" fg:x="858" fg:w="2"/><text x="68.5078%" y="415.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.40%)</title><rect x="68.1782%" y="485" width="0.3978%" height="15" fill="rgb(214,227,27)" fg:x="857" fg:w="5"/><text x="68.4282%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.40%)</title><rect x="68.1782%" y="469" width="0.3978%" height="15" fill="rgb(248,10,53)" fg:x="857" fg:w="5"/><text x="68.4282%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::new (2 samples, 0.16%)</title><rect x="68.4169%" y="453" width="0.1591%" height="15" fill="rgb(221,176,25)" fg:x="860" fg:w="2"/><text x="68.6669%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.4169%" y="437" width="0.1591%" height="15" fill="rgb(205,70,46)" fg:x="860" fg:w="2"/><text x="68.6669%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="68.6555%" y="453" width="0.0796%" height="15" fill="rgb(217,45,38)" fg:x="863" fg:w="1"/><text x="68.9055%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="68.5760%" y="485" width="0.2387%" height="15" fill="rgb(243,6,54)" fg:x="862" fg:w="3"/><text x="68.8260%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="68.5760%" y="469" width="0.2387%" height="15" fill="rgb(242,76,23)" fg:x="862" fg:w="3"/><text x="68.8260%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::PutInsideAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="68.7351%" y="453" width="0.0796%" height="15" fill="rgb(239,166,0)" fg:x="864" fg:w="1"/><text x="68.9851%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="68.7351%" y="437" width="0.0796%" height="15" fill="rgb(238,174,32)" fg:x="864" fg:w="1"/><text x="68.9851%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.7351%" y="421" width="0.0796%" height="15" fill="rgb(238,124,44)" fg:x="864" fg:w="1"/><text x="68.9851%" y="431.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="68.8146%" y="485" width="0.1591%" height="15" fill="rgb(206,185,9)" fg:x="865" fg:w="2"/><text x="69.0646%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="68.8146%" y="469" width="0.1591%" height="15" fill="rgb(215,157,17)" fg:x="865" fg:w="2"/><text x="69.0646%" y="479.50"></text></g><g><title>&lt;plugins_core::chat::actions::SpeakAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="68.8146%" y="453" width="0.1591%" height="15" fill="rgb(251,17,29)" fg:x="865" fg:w="2"/><text x="69.0646%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="68.8146%" y="437" width="0.1591%" height="15" fill="rgb(227,113,27)" fg:x="865" fg:w="2"/><text x="69.0646%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8942%" y="421" width="0.0796%" height="15" fill="rgb(217,226,24)" fg:x="866" fg:w="1"/><text x="69.1442%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="68.9737%" y="485" width="0.0796%" height="15" fill="rgb(251,99,38)" fg:x="867" fg:w="1"/><text x="69.2237%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="68.9737%" y="469" width="0.0796%" height="15" fill="rgb(231,147,19)" fg:x="867" fg:w="1"/><text x="69.2237%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="68.9737%" y="453" width="0.0796%" height="15" fill="rgb(230,86,8)" fg:x="867" fg:w="1"/><text x="69.2237%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.9737%" y="437" width="0.0796%" height="15" fill="rgb(237,159,39)" fg:x="867" fg:w="1"/><text x="69.2237%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::actions::DeactivateRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="69.0533%" y="453" width="0.0796%" height="15" fill="rgb(247,179,47)" fg:x="868" fg:w="1"/><text x="69.3033%" y="463.50"></text></g><g><title>&lt;plugins_core::moving::actions::RemoveRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="69.1329%" y="453" width="0.0796%" height="15" fill="rgb(253,152,26)" fg:x="869" fg:w="1"/><text x="69.3829%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="69.2920%" y="437" width="0.0796%" height="15" fill="rgb(222,211,15)" fg:x="871" fg:w="1"/><text x="69.5420%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.2920%" y="421" width="0.0796%" height="15" fill="rgb(236,193,6)" fg:x="871" fg:w="1"/><text x="69.5420%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.2920%" y="405" width="0.0796%" height="15" fill="rgb(226,206,10)" fg:x="871" fg:w="1"/><text x="69.5420%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2920%" y="389" width="0.0796%" height="15" fill="rgb(213,125,22)" fg:x="871" fg:w="1"/><text x="69.5420%" y="399.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.40%)</title><rect x="69.0533%" y="485" width="0.3978%" height="15" fill="rgb(221,66,28)" fg:x="868" fg:w="5"/><text x="69.3033%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.40%)</title><rect x="69.0533%" y="469" width="0.3978%" height="15" fill="rgb(222,84,53)" fg:x="868" fg:w="5"/><text x="69.3033%" y="479.50"></text></g><g><title>replies::identifier_to_key (3 samples, 0.24%)</title><rect x="69.2124%" y="453" width="0.2387%" height="15" fill="rgb(243,50,15)" fg:x="870" fg:w="3"/><text x="69.4624%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.3715%" y="437" width="0.0796%" height="15" fill="rgb(208,184,23)" fg:x="872" fg:w="1"/><text x="69.6215%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.3715%" y="421" width="0.0796%" height="15" fill="rgb(221,83,2)" fg:x="872" fg:w="1"/><text x="69.6215%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="69.3715%" y="405" width="0.0796%" height="15" fill="rgb(236,53,24)" fg:x="872" fg:w="1"/><text x="69.6215%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="69.4511%" y="485" width="0.1591%" height="15" fill="rgb(244,171,29)" fg:x="873" fg:w="2"/><text x="69.7011%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="69.4511%" y="469" width="0.1591%" height="15" fill="rgb(205,19,11)" fg:x="873" fg:w="2"/><text x="69.7011%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="69.4511%" y="453" width="0.1591%" height="15" fill="rgb(207,108,29)" fg:x="873" fg:w="2"/><text x="69.7011%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.5306%" y="437" width="0.0796%" height="15" fill="rgb(236,215,43)" fg:x="874" fg:w="1"/><text x="69.7806%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.5306%" y="421" width="0.0796%" height="15" fill="rgb(213,58,35)" fg:x="874" fg:w="1"/><text x="69.7806%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6102%" y="485" width="0.0796%" height="15" fill="rgb(220,211,46)" fg:x="875" fg:w="1"/><text x="69.8602%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (22 samples, 1.75%)</title><rect x="68.0191%" y="501" width="1.7502%" height="15" fill="rgb(212,134,16)" fg:x="855" fg:w="22"/><text x="68.2691%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="69.6897%" y="485" width="0.0796%" height="15" fill="rgb(232,90,44)" fg:x="876" fg:w="1"/><text x="69.9397%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6897%" y="469" width="0.0796%" height="15" fill="rgb(212,18,36)" fg:x="876" fg:w="1"/><text x="69.9397%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (2 samples, 0.16%)</title><rect x="69.7693%" y="501" width="0.1591%" height="15" fill="rgb(206,112,24)" fg:x="877" fg:w="2"/><text x="70.0193%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (2 samples, 0.16%)</title><rect x="69.7693%" y="485" width="0.1591%" height="15" fill="rgb(238,223,40)" fg:x="877" fg:w="2"/><text x="70.0193%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.16%)</title><rect x="69.7693%" y="469" width="0.1591%" height="15" fill="rgb(226,169,20)" fg:x="877" fg:w="2"/><text x="70.0193%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="69.7693%" y="453" width="0.1591%" height="15" fill="rgb(241,64,52)" fg:x="877" fg:w="2"/><text x="70.0193%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="69.7693%" y="437" width="0.1591%" height="15" fill="rgb(228,120,25)" fg:x="877" fg:w="2"/><text x="70.0193%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="69.7693%" y="421" width="0.1591%" height="15" fill="rgb(234,108,19)" fg:x="877" fg:w="2"/><text x="70.0193%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="69.7693%" y="405" width="0.1591%" height="15" fill="rgb(236,133,29)" fg:x="877" fg:w="2"/><text x="70.0193%" y="415.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="69.7693%" y="389" width="0.1591%" height="15" fill="rgb(246,174,53)" fg:x="877" fg:w="2"/><text x="70.0193%" y="399.50"></text></g><g><title>plugins_rune::runner::SharedRunners::add_runners_for (1 samples, 0.08%)</title><rect x="70.0080%" y="485" width="0.0796%" height="15" fill="rgb(210,105,35)" fg:x="880" fg:w="1"/><text x="70.2580%" y="495.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (2 samples, 0.16%)</title><rect x="70.0875%" y="485" width="0.1591%" height="15" fill="rgb(225,27,26)" fg:x="881" fg:w="2"/><text x="70.3375%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.0875%" y="469" width="0.1591%" height="15" fill="rgb(233,2,39)" fg:x="881" fg:w="2"/><text x="70.3375%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.0875%" y="453" width="0.1591%" height="15" fill="rgb(219,164,26)" fg:x="881" fg:w="2"/><text x="70.3375%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.1671%" y="437" width="0.0796%" height="15" fill="rgb(236,211,5)" fg:x="882" fg:w="1"/><text x="70.4171%" y="447.50"></text></g><g><title>glob::is_dir (4 samples, 0.32%)</title><rect x="70.3262%" y="437" width="0.3182%" height="15" fill="rgb(244,227,23)" fg:x="884" fg:w="4"/><text x="70.5762%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (4 samples, 0.32%)</title><rect x="70.3262%" y="421" width="0.3182%" height="15" fill="rgb(230,184,8)" fg:x="884" fg:w="4"/><text x="70.5762%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.32%)</title><rect x="70.3262%" y="405" width="0.3182%" height="15" fill="rgb(217,125,48)" fg:x="884" fg:w="4"/><text x="70.5762%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.32%)</title><rect x="70.3262%" y="389" width="0.3182%" height="15" fill="rgb(223,192,47)" fg:x="884" fg:w="4"/><text x="70.5762%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (4 samples, 0.32%)</title><rect x="70.3262%" y="373" width="0.3182%" height="15" fill="rgb(226,119,10)" fg:x="884" fg:w="4"/><text x="70.5762%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (4 samples, 0.32%)</title><rect x="70.3262%" y="357" width="0.3182%" height="15" fill="rgb(221,49,29)" fg:x="884" fg:w="4"/><text x="70.5762%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (4 samples, 0.32%)</title><rect x="70.3262%" y="341" width="0.3182%" height="15" fill="rgb(217,205,19)" fg:x="884" fg:w="4"/><text x="70.5762%" y="351.50"></text></g><g><title>statx (4 samples, 0.32%)</title><rect x="70.3262%" y="325" width="0.3182%" height="15" fill="rgb(242,104,7)" fg:x="884" fg:w="4"/><text x="70.5762%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="70.3262%" y="469" width="0.4773%" height="15" fill="rgb(209,154,48)" fg:x="884" fg:w="6"/><text x="70.5762%" y="479.50"></text></g><g><title>glob::fill_todo (6 samples, 0.48%)</title><rect x="70.3262%" y="453" width="0.4773%" height="15" fill="rgb(219,213,46)" fg:x="884" fg:w="6"/><text x="70.5762%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (2 samples, 0.16%)</title><rect x="70.6444%" y="437" width="0.1591%" height="15" fill="rgb(229,105,38)" fg:x="888" fg:w="2"/><text x="70.8944%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.16%)</title><rect x="70.6444%" y="421" width="0.1591%" height="15" fill="rgb(205,151,5)" fg:x="888" fg:w="2"/><text x="70.8944%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="70.6444%" y="405" width="0.1591%" height="15" fill="rgb(248,115,40)" fg:x="888" fg:w="2"/><text x="70.8944%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="70.6444%" y="389" width="0.1591%" height="15" fill="rgb(206,179,2)" fg:x="888" fg:w="2"/><text x="70.8944%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="70.6444%" y="373" width="0.1591%" height="15" fill="rgb(230,103,24)" fg:x="888" fg:w="2"/><text x="70.8944%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="70.6444%" y="357" width="0.1591%" height="15" fill="rgb(218,152,4)" fg:x="888" fg:w="2"/><text x="70.8944%" y="367.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="70.6444%" y="341" width="0.1591%" height="15" fill="rgb(236,161,54)" fg:x="888" fg:w="2"/><text x="70.8944%" y="351.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.8035%" y="437" width="0.0796%" height="15" fill="rgb(226,65,17)" fg:x="890" fg:w="1"/><text x="71.0535%" y="447.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.8831%" y="437" width="0.0796%" height="15" fill="rgb(221,134,44)" fg:x="891" fg:w="1"/><text x="71.1331%" y="447.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="70.8831%" y="421" width="0.0796%" height="15" fill="rgb(251,129,4)" fg:x="891" fg:w="1"/><text x="71.1331%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="70.8831%" y="405" width="0.0796%" height="15" fill="rgb(244,32,34)" fg:x="891" fg:w="1"/><text x="71.1331%" y="415.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="70.8831%" y="389" width="0.0796%" height="15" fill="rgb(251,224,37)" fg:x="891" fg:w="1"/><text x="71.1331%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="70.8831%" y="373" width="0.0796%" height="15" fill="rgb(248,117,31)" fg:x="891" fg:w="1"/><text x="71.1331%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="70.8831%" y="357" width="0.0796%" height="15" fill="rgb(222,208,37)" fg:x="891" fg:w="1"/><text x="71.1331%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="70.8831%" y="341" width="0.0796%" height="15" fill="rgb(234,211,25)" fg:x="891" fg:w="1"/><text x="71.1331%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.8831%" y="325" width="0.0796%" height="15" fill="rgb(211,72,6)" fg:x="891" fg:w="1"/><text x="71.1331%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.8831%" y="309" width="0.0796%" height="15" fill="rgb(249,198,38)" fg:x="891" fg:w="1"/><text x="71.1331%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.8831%" y="293" width="0.0796%" height="15" fill="rgb(221,86,51)" fg:x="891" fg:w="1"/><text x="71.1331%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="70.8831%" y="277" width="0.0796%" height="15" fill="rgb(226,178,43)" fg:x="891" fg:w="1"/><text x="71.1331%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.8831%" y="261" width="0.0796%" height="15" fill="rgb(215,145,7)" fg:x="891" fg:w="1"/><text x="71.1331%" y="271.50"></text></g><g><title>glob::Pattern::new (1 samples, 0.08%)</title><rect x="70.9626%" y="437" width="0.0796%" height="15" fill="rgb(250,202,36)" fg:x="892" fg:w="1"/><text x="71.2126%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.9626%" y="421" width="0.0796%" height="15" fill="rgb(215,86,13)" fg:x="892" fg:w="1"/><text x="71.2126%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.9626%" y="405" width="0.0796%" height="15" fill="rgb(221,134,12)" fg:x="892" fg:w="1"/><text x="71.2126%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (15 samples, 1.19%)</title><rect x="69.9284%" y="501" width="1.1933%" height="15" fill="rgb(213,82,10)" fg:x="879" fg:w="15"/><text x="70.1784%" y="511.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (11 samples, 0.88%)</title><rect x="70.2466%" y="485" width="0.8751%" height="15" fill="rgb(214,142,0)" fg:x="883" fg:w="11"/><text x="70.4966%" y="495.50"></text></g><g><title>glob::glob (4 samples, 0.32%)</title><rect x="70.8035%" y="469" width="0.3182%" height="15" fill="rgb(205,145,9)" fg:x="890" fg:w="4"/><text x="71.0535%" y="479.50"></text></g><g><title>glob::glob_with (4 samples, 0.32%)</title><rect x="70.8035%" y="453" width="0.3182%" height="15" fill="rgb(244,214,8)" fg:x="890" fg:w="4"/><text x="71.0535%" y="463.50"></text></g><g><title>std::ffi::os_str::&lt;impl core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt; for &amp;str&gt;::try_from (1 samples, 0.08%)</title><rect x="71.0422%" y="437" width="0.0796%" height="15" fill="rgb(224,72,51)" fg:x="893" fg:w="1"/><text x="71.2922%" y="447.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.08%)</title><rect x="71.0422%" y="421" width="0.0796%" height="15" fill="rgb(233,137,37)" fg:x="893" fg:w="1"/><text x="71.2922%" y="431.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.08%)</title><rect x="71.0422%" y="405" width="0.0796%" height="15" fill="rgb(208,71,28)" fg:x="893" fg:w="1"/><text x="71.2922%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.1217%" y="485" width="0.1591%" height="15" fill="rgb(226,31,7)" fg:x="894" fg:w="2"/><text x="71.3717%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (3 samples, 0.24%)</title><rect x="71.1217%" y="501" width="0.2387%" height="15" fill="rgb(229,62,18)" fg:x="894" fg:w="3"/><text x="71.3717%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="71.2808%" y="485" width="0.0796%" height="15" fill="rgb(226,74,28)" fg:x="896" fg:w="1"/><text x="71.5308%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.2808%" y="469" width="0.0796%" height="15" fill="rgb(214,170,18)" fg:x="896" fg:w="1"/><text x="71.5308%" y="479.50"></text></g><g><title>engine::session::Session::initialize (46 samples, 3.66%)</title><rect x="67.8600%" y="533" width="3.6595%" height="15" fill="rgb(227,229,35)" fg:x="853" fg:w="46"/><text x="68.1100%" y="543.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (45 samples, 3.58%)</title><rect x="67.9395%" y="517" width="3.5800%" height="15" fill="rgb(225,181,39)" fg:x="854" fg:w="45"/><text x="68.1895%" y="527.50">kern..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="71.3604%" y="501" width="0.1591%" height="15" fill="rgb(253,124,44)" fg:x="897" fg:w="2"/><text x="71.6104%" y="511.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="71.3604%" y="485" width="0.1591%" height="15" fill="rgb(220,75,18)" fg:x="897" fg:w="2"/><text x="71.6104%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (49 samples, 3.90%)</title><rect x="67.7804%" y="581" width="3.8982%" height="15" fill="rgb(239,175,43)" fg:x="852" fg:w="49"/><text x="68.0304%" y="591.50">&lt;eng..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (49 samples, 3.90%)</title><rect x="67.7804%" y="565" width="3.8982%" height="15" fill="rgb(228,112,50)" fg:x="852" fg:w="49"/><text x="68.0304%" y="575.50">engi..</text></g><g><title>engine::session::Session::new (49 samples, 3.90%)</title><rect x="67.7804%" y="549" width="3.8982%" height="15" fill="rgb(232,105,36)" fg:x="852" fg:w="49"/><text x="68.0304%" y="559.50">engi..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="71.5195%" y="533" width="0.1591%" height="15" fill="rgb(227,137,47)" fg:x="899" fg:w="2"/><text x="71.7695%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="71.5195%" y="517" width="0.1591%" height="15" fill="rgb(217,51,9)" fg:x="899" fg:w="2"/><text x="71.7695%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.5990%" y="501" width="0.0796%" height="15" fill="rgb(245,117,0)" fg:x="900" fg:w="1"/><text x="71.8490%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.5990%" y="485" width="0.0796%" height="15" fill="rgb(252,52,30)" fg:x="900" fg:w="1"/><text x="71.8490%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.5990%" y="469" width="0.0796%" height="15" fill="rgb(227,85,33)" fg:x="900" fg:w="1"/><text x="71.8490%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="71.9173%" y="549" width="0.0796%" height="15" fill="rgb(220,157,20)" fg:x="904" fg:w="1"/><text x="72.1673%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9173%" y="533" width="0.0796%" height="15" fill="rgb(254,14,34)" fg:x="904" fg:w="1"/><text x="72.1673%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9173%" y="517" width="0.0796%" height="15" fill="rgb(216,103,41)" fg:x="904" fg:w="1"/><text x="72.1673%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.9173%" y="501" width="0.0796%" height="15" fill="rgb(245,221,9)" fg:x="904" fg:w="1"/><text x="72.1673%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.9173%" y="485" width="0.0796%" height="15" fill="rgb(254,136,47)" fg:x="904" fg:w="1"/><text x="72.1673%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.9173%" y="469" width="0.0796%" height="15" fill="rgb(235,71,46)" fg:x="904" fg:w="1"/><text x="72.1673%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.9173%" y="453" width="0.0796%" height="15" fill="rgb(242,154,29)" fg:x="904" fg:w="1"/><text x="72.1673%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.9173%" y="437" width="0.0796%" height="15" fill="rgb(210,65,31)" fg:x="904" fg:w="1"/><text x="72.1673%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.9173%" y="421" width="0.0796%" height="15" fill="rgb(244,9,50)" fg:x="904" fg:w="1"/><text x="72.1673%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.9173%" y="405" width="0.0796%" height="15" fill="rgb(215,141,38)" fg:x="904" fg:w="1"/><text x="72.1673%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.9173%" y="389" width="0.0796%" height="15" fill="rgb(241,129,6)" fg:x="904" fg:w="1"/><text x="72.1673%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.9173%" y="373" width="0.0796%" height="15" fill="rgb(253,169,4)" fg:x="904" fg:w="1"/><text x="72.1673%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.9173%" y="357" width="0.0796%" height="15" fill="rgb(237,82,36)" fg:x="904" fg:w="1"/><text x="72.1673%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9968%" y="517" width="0.0796%" height="15" fill="rgb(209,171,11)" fg:x="905" fg:w="1"/><text x="72.2468%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="72.0764%" y="517" width="0.0796%" height="15" fill="rgb(242,19,22)" fg:x="906" fg:w="1"/><text x="72.3264%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.0764%" y="501" width="0.0796%" height="15" fill="rgb(251,122,24)" fg:x="906" fg:w="1"/><text x="72.3264%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.0764%" y="485" width="0.0796%" height="15" fill="rgb(226,166,42)" fg:x="906" fg:w="1"/><text x="72.3264%" y="495.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="72.0764%" y="469" width="0.0796%" height="15" fill="rgb(244,101,48)" fg:x="906" fg:w="1"/><text x="72.3264%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="72.1559%" y="517" width="0.0796%" height="15" fill="rgb(227,125,1)" fg:x="907" fg:w="1"/><text x="72.4059%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="72.1559%" y="501" width="0.0796%" height="15" fill="rgb(206,79,43)" fg:x="907" fg:w="1"/><text x="72.4059%" y="511.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="72.1559%" y="485" width="0.0796%" height="15" fill="rgb(241,109,41)" fg:x="907" fg:w="1"/><text x="72.4059%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="72.1559%" y="469" width="0.0796%" height="15" fill="rgb(219,73,4)" fg:x="907" fg:w="1"/><text x="72.4059%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="72.2355%" y="437" width="0.1591%" height="15" fill="rgb(239,25,41)" fg:x="908" fg:w="2"/><text x="72.4855%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.3150%" y="421" width="0.0796%" height="15" fill="rgb(208,88,46)" fg:x="909" fg:w="1"/><text x="72.5650%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.3150%" y="405" width="0.0796%" height="15" fill="rgb(239,184,9)" fg:x="909" fg:w="1"/><text x="72.5650%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.3150%" y="389" width="0.0796%" height="15" fill="rgb(223,114,13)" fg:x="909" fg:w="1"/><text x="72.5650%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.3150%" y="373" width="0.0796%" height="15" fill="rgb(214,28,42)" fg:x="909" fg:w="1"/><text x="72.5650%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.3150%" y="357" width="0.0796%" height="15" fill="rgb(252,32,44)" fg:x="909" fg:w="1"/><text x="72.5650%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.3150%" y="341" width="0.0796%" height="15" fill="rgb(231,159,4)" fg:x="909" fg:w="1"/><text x="72.5650%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="72.2355%" y="453" width="0.2387%" height="15" fill="rgb(210,35,26)" fg:x="908" fg:w="3"/><text x="72.4855%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.3946%" y="437" width="0.0796%" height="15" fill="rgb(208,190,37)" fg:x="910" fg:w="1"/><text x="72.6446%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.3946%" y="421" width="0.0796%" height="15" fill="rgb(226,148,22)" fg:x="910" fg:w="1"/><text x="72.6446%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="72.3946%" y="405" width="0.0796%" height="15" fill="rgb(242,153,24)" fg:x="910" fg:w="1"/><text x="72.6446%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="72.5537%" y="437" width="0.1591%" height="15" fill="rgb(213,133,7)" fg:x="912" fg:w="2"/><text x="72.8037%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.6333%" y="421" width="0.0796%" height="15" fill="rgb(248,206,18)" fg:x="913" fg:w="1"/><text x="72.8833%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.6333%" y="405" width="0.0796%" height="15" fill="rgb(233,157,4)" fg:x="913" fg:w="1"/><text x="72.8833%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.6333%" y="389" width="0.0796%" height="15" fill="rgb(249,179,32)" fg:x="913" fg:w="1"/><text x="72.8833%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.6333%" y="373" width="0.0796%" height="15" fill="rgb(248,69,35)" fg:x="913" fg:w="1"/><text x="72.8833%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.6333%" y="357" width="0.0796%" height="15" fill="rgb(249,158,38)" fg:x="913" fg:w="1"/><text x="72.8833%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.6333%" y="341" width="0.0796%" height="15" fill="rgb(223,18,43)" fg:x="913" fg:w="1"/><text x="72.8833%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.7128%" y="421" width="0.0796%" height="15" fill="rgb(238,42,45)" fg:x="914" fg:w="1"/><text x="72.9628%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="72.7924%" y="421" width="0.0796%" height="15" fill="rgb(219,65,47)" fg:x="915" fg:w="1"/><text x="73.0424%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.7924%" y="405" width="0.0796%" height="15" fill="rgb(248,153,12)" fg:x="915" fg:w="1"/><text x="73.0424%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.7924%" y="389" width="0.0796%" height="15" fill="rgb(240,118,4)" fg:x="915" fg:w="1"/><text x="73.0424%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.7924%" y="373" width="0.0796%" height="15" fill="rgb(250,96,34)" fg:x="915" fg:w="1"/><text x="73.0424%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="72.8719%" y="421" width="0.2387%" height="15" fill="rgb(221,15,4)" fg:x="916" fg:w="3"/><text x="73.1219%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="72.8719%" y="405" width="0.2387%" height="15" fill="rgb(217,149,33)" fg:x="916" fg:w="3"/><text x="73.1219%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="72.8719%" y="389" width="0.2387%" height="15" fill="rgb(213,58,29)" fg:x="916" fg:w="3"/><text x="73.1219%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="72.8719%" y="373" width="0.2387%" height="15" fill="rgb(236,218,9)" fg:x="916" fg:w="3"/><text x="73.1219%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.0310%" y="357" width="0.0796%" height="15" fill="rgb(248,40,19)" fg:x="918" fg:w="1"/><text x="73.2810%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.2697%" y="405" width="0.0796%" height="15" fill="rgb(212,17,6)" fg:x="921" fg:w="1"/><text x="73.5197%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.2697%" y="389" width="0.0796%" height="15" fill="rgb(206,212,20)" fg:x="921" fg:w="1"/><text x="73.5197%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.2697%" y="373" width="0.0796%" height="15" fill="rgb(229,80,37)" fg:x="921" fg:w="1"/><text x="73.5197%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.2697%" y="357" width="0.0796%" height="15" fill="rgb(253,8,37)" fg:x="921" fg:w="1"/><text x="73.5197%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.3492%" y="389" width="0.0796%" height="15" fill="rgb(215,16,43)" fg:x="922" fg:w="1"/><text x="73.5992%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.3492%" y="373" width="0.0796%" height="15" fill="rgb(236,219,16)" fg:x="922" fg:w="1"/><text x="73.5992%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.3492%" y="357" width="0.0796%" height="15" fill="rgb(251,0,3)" fg:x="922" fg:w="1"/><text x="73.5992%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.3492%" y="341" width="0.0796%" height="15" fill="rgb(207,133,37)" fg:x="922" fg:w="1"/><text x="73.5992%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.4288%" y="389" width="0.0796%" height="15" fill="rgb(250,143,20)" fg:x="923" fg:w="1"/><text x="73.6788%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.4288%" y="373" width="0.0796%" height="15" fill="rgb(242,19,50)" fg:x="923" fg:w="1"/><text x="73.6788%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="72.7128%" y="437" width="0.8751%" height="15" fill="rgb(206,124,43)" fg:x="914" fg:w="11"/><text x="72.9628%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="73.1106%" y="421" width="0.4773%" height="15" fill="rgb(229,4,38)" fg:x="919" fg:w="6"/><text x="73.3606%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="73.3492%" y="405" width="0.2387%" height="15" fill="rgb(247,220,45)" fg:x="922" fg:w="3"/><text x="73.5992%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.5084%" y="389" width="0.0796%" height="15" fill="rgb(247,195,0)" fg:x="924" fg:w="1"/><text x="73.7584%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.5084%" y="373" width="0.0796%" height="15" fill="rgb(252,12,19)" fg:x="924" fg:w="1"/><text x="73.7584%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.43%)</title><rect x="72.2355%" y="469" width="1.4320%" height="15" fill="rgb(222,49,50)" fg:x="908" fg:w="18"/><text x="72.4855%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="72.4741%" y="453" width="1.1933%" height="15" fill="rgb(209,157,28)" fg:x="911" fg:w="15"/><text x="72.7241%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.5879%" y="437" width="0.0796%" height="15" fill="rgb(238,174,24)" fg:x="925" fg:w="1"/><text x="73.8379%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.5879%" y="421" width="0.0796%" height="15" fill="rgb(224,17,28)" fg:x="925" fg:w="1"/><text x="73.8379%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.08%)</title><rect x="73.6675%" y="469" width="0.0796%" height="15" fill="rgb(249,7,29)" fg:x="926" fg:w="1"/><text x="73.9175%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6675%" y="453" width="0.0796%" height="15" fill="rgb(243,178,4)" fg:x="926" fg:w="1"/><text x="73.9175%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.7470%" y="469" width="0.1591%" height="15" fill="rgb(246,138,35)" fg:x="927" fg:w="2"/><text x="73.9970%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="73.7470%" y="453" width="0.1591%" height="15" fill="rgb(251,85,18)" fg:x="927" fg:w="2"/><text x="73.9970%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.7470%" y="437" width="0.1591%" height="15" fill="rgb(254,55,9)" fg:x="927" fg:w="2"/><text x="73.9970%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.7470%" y="421" width="0.1591%" height="15" fill="rgb(248,4,50)" fg:x="927" fg:w="2"/><text x="73.9970%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.7470%" y="405" width="0.1591%" height="15" fill="rgb(215,208,14)" fg:x="927" fg:w="2"/><text x="73.9970%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="73.9061%" y="453" width="0.1591%" height="15" fill="rgb(218,37,18)" fg:x="929" fg:w="2"/><text x="74.1561%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9857%" y="437" width="0.0796%" height="15" fill="rgb(206,104,13)" fg:x="930" fg:w="1"/><text x="74.2357%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0652%" y="421" width="0.0796%" height="15" fill="rgb(248,94,22)" fg:x="931" fg:w="1"/><text x="74.3152%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1448%" y="421" width="0.0796%" height="15" fill="rgb(235,42,46)" fg:x="932" fg:w="1"/><text x="74.3948%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.1448%" y="405" width="0.0796%" height="15" fill="rgb(220,228,48)" fg:x="932" fg:w="1"/><text x="74.3948%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3835%" y="373" width="0.0796%" height="15" fill="rgb(216,58,12)" fg:x="935" fg:w="1"/><text x="74.6335%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.3835%" y="357" width="0.0796%" height="15" fill="rgb(223,97,52)" fg:x="935" fg:w="1"/><text x="74.6335%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5426%" y="341" width="0.0796%" height="15" fill="rgb(208,159,17)" fg:x="937" fg:w="1"/><text x="74.7926%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.5426%" y="325" width="0.0796%" height="15" fill="rgb(215,172,9)" fg:x="937" fg:w="1"/><text x="74.7926%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7812%" y="293" width="0.0796%" height="15" fill="rgb(252,175,30)" fg:x="940" fg:w="1"/><text x="75.0312%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="74.3835%" y="389" width="0.5569%" height="15" fill="rgb(209,159,10)" fg:x="935" fg:w="7"/><text x="74.6335%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="74.4630%" y="373" width="0.4773%" height="15" fill="rgb(229,73,51)" fg:x="936" fg:w="6"/><text x="74.7130%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="74.5426%" y="357" width="0.3978%" height="15" fill="rgb(208,212,43)" fg:x="937" fg:w="5"/><text x="74.7926%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="74.6221%" y="341" width="0.3182%" height="15" fill="rgb(254,123,53)" fg:x="938" fg:w="4"/><text x="74.8721%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="74.6221%" y="325" width="0.3182%" height="15" fill="rgb(254,128,49)" fg:x="938" fg:w="4"/><text x="74.8721%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="74.6221%" y="309" width="0.3182%" height="15" fill="rgb(246,16,16)" fg:x="938" fg:w="4"/><text x="74.8721%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.8608%" y="293" width="0.0796%" height="15" fill="rgb(209,200,1)" fg:x="941" fg:w="1"/><text x="75.1108%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="74.3039%" y="405" width="0.7160%" height="15" fill="rgb(235,9,3)" fg:x="934" fg:w="9"/><text x="74.5539%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="74.9403%" y="389" width="0.0796%" height="15" fill="rgb(233,121,54)" fg:x="942" fg:w="1"/><text x="75.1903%" y="399.50"></text></g><g><title>engine::session::Session::flush (41 samples, 3.26%)</title><rect x="71.8377%" y="565" width="3.2617%" height="15" fill="rgb(236,80,25)" fg:x="903" fg:w="41"/><text x="72.0877%" y="575.50">eng..</text></g><g><title>engine::session::state::State::close (39 samples, 3.10%)</title><rect x="71.9968%" y="549" width="3.1026%" height="15" fill="rgb(220,44,24)" fg:x="905" fg:w="39"/><text x="72.2468%" y="559.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (39 samples, 3.10%)</title><rect x="71.9968%" y="533" width="3.1026%" height="15" fill="rgb(236,225,16)" fg:x="905" fg:w="39"/><text x="72.2468%" y="543.50">eng..</text></g><g><title>core::iter::adapters::try_process (36 samples, 2.86%)</title><rect x="72.2355%" y="517" width="2.8640%" height="15" fill="rgb(237,140,0)" fg:x="908" fg:w="36"/><text x="72.4855%" y="527.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.86%)</title><rect x="72.2355%" y="501" width="2.8640%" height="15" fill="rgb(243,225,53)" fg:x="908" fg:w="36"/><text x="72.4855%" y="511.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (36 samples, 2.86%)</title><rect x="72.2355%" y="485" width="2.8640%" height="15" fill="rgb(240,140,30)" fg:x="908" fg:w="36"/><text x="72.4855%" y="495.50">en..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.19%)</title><rect x="73.9061%" y="469" width="1.1933%" height="15" fill="rgb(217,51,16)" fg:x="929" fg:w="15"/><text x="74.1561%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.03%)</title><rect x="74.0652%" y="453" width="1.0342%" height="15" fill="rgb(245,75,50)" fg:x="931" fg:w="13"/><text x="74.3152%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.03%)</title><rect x="74.0652%" y="437" width="1.0342%" height="15" fill="rgb(208,174,22)" fg:x="931" fg:w="13"/><text x="74.3152%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="74.2243%" y="421" width="0.8751%" height="15" fill="rgb(219,98,50)" fg:x="933" fg:w="11"/><text x="74.4743%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.0199%" y="405" width="0.0796%" height="15" fill="rgb(243,138,3)" fg:x="943" fg:w="1"/><text x="75.2699%" y="415.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="75.0994%" y="565" width="0.1591%" height="15" fill="rgb(243,132,26)" fg:x="944" fg:w="2"/><text x="75.3494%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="75.0994%" y="549" width="0.1591%" height="15" fill="rgb(250,201,8)" fg:x="944" fg:w="2"/><text x="75.3494%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="75.0994%" y="533" width="0.1591%" height="15" fill="rgb(213,91,26)" fg:x="944" fg:w="2"/><text x="75.3494%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="75.0994%" y="517" width="0.1591%" height="15" fill="rgb(229,117,1)" fg:x="944" fg:w="2"/><text x="75.3494%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="75.0994%" y="501" width="0.1591%" height="15" fill="rgb(229,24,6)" fg:x="944" fg:w="2"/><text x="75.3494%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1790%" y="485" width="0.0796%" height="15" fill="rgb(206,69,11)" fg:x="945" fg:w="1"/><text x="75.4290%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.1790%" y="469" width="0.0796%" height="15" fill="rgb(234,111,34)" fg:x="945" fg:w="1"/><text x="75.4290%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.2586%" y="517" width="0.1591%" height="15" fill="rgb(213,187,51)" fg:x="946" fg:w="2"/><text x="75.5086%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.2586%" y="501" width="0.1591%" height="15" fill="rgb(207,45,11)" fg:x="946" fg:w="2"/><text x="75.5086%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.3381%" y="485" width="0.0796%" height="15" fill="rgb(225,151,47)" fg:x="947" fg:w="1"/><text x="75.5881%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="75.4177%" y="517" width="0.0796%" height="15" fill="rgb(211,226,5)" fg:x="948" fg:w="1"/><text x="75.6677%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4177%" y="501" width="0.0796%" height="15" fill="rgb(214,83,52)" fg:x="948" fg:w="1"/><text x="75.6677%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="75.2586%" y="533" width="0.3182%" height="15" fill="rgb(229,49,53)" fg:x="946" fg:w="4"/><text x="75.5086%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.4972%" y="517" width="0.0796%" height="15" fill="rgb(246,8,28)" fg:x="949" fg:w="1"/><text x="75.7472%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4972%" y="501" width="0.0796%" height="15" fill="rgb(207,28,41)" fg:x="949" fg:w="1"/><text x="75.7472%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.4972%" y="485" width="0.0796%" height="15" fill="rgb(254,22,25)" fg:x="949" fg:w="1"/><text x="75.7472%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4972%" y="469" width="0.0796%" height="15" fill="rgb(209,120,42)" fg:x="949" fg:w="1"/><text x="75.7472%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.4972%" y="453" width="0.0796%" height="15" fill="rgb(216,194,18)" fg:x="949" fg:w="1"/><text x="75.7472%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4972%" y="437" width="0.0796%" height="15" fill="rgb(213,70,17)" fg:x="949" fg:w="1"/><text x="75.7472%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="75.2586%" y="549" width="0.3978%" height="15" fill="rgb(228,66,19)" fg:x="946" fg:w="5"/><text x="75.5086%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.5768%" y="533" width="0.0796%" height="15" fill="rgb(236,221,54)" fg:x="950" fg:w="1"/><text x="75.8268%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.6563%" y="517" width="0.0796%" height="15" fill="rgb(207,175,15)" fg:x="951" fg:w="1"/><text x="75.9063%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="75.6563%" y="533" width="0.1591%" height="15" fill="rgb(234,76,8)" fg:x="951" fg:w="2"/><text x="75.9063%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.7359%" y="517" width="0.0796%" height="15" fill="rgb(243,106,0)" fg:x="952" fg:w="1"/><text x="75.9859%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.7359%" y="501" width="0.0796%" height="15" fill="rgb(208,48,19)" fg:x="952" fg:w="1"/><text x="75.9859%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="75.8154%" y="533" width="0.0796%" height="15" fill="rgb(251,50,29)" fg:x="953" fg:w="1"/><text x="76.0654%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="75.8154%" y="517" width="0.0796%" height="15" fill="rgb(222,31,49)" fg:x="953" fg:w="1"/><text x="76.0654%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.8154%" y="501" width="0.0796%" height="15" fill="rgb(232,33,18)" fg:x="953" fg:w="1"/><text x="76.0654%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8154%" y="485" width="0.0796%" height="15" fill="rgb(209,1,44)" fg:x="953" fg:w="1"/><text x="76.0654%" y="495.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.8154%" y="469" width="0.0796%" height="15" fill="rgb(211,7,1)" fg:x="953" fg:w="1"/><text x="76.0654%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8154%" y="453" width="0.0796%" height="15" fill="rgb(224,111,27)" fg:x="953" fg:w="1"/><text x="76.0654%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.8154%" y="437" width="0.0796%" height="15" fill="rgb(252,195,39)" fg:x="953" fg:w="1"/><text x="76.0654%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.8154%" y="421" width="0.0796%" height="15" fill="rgb(237,198,5)" fg:x="953" fg:w="1"/><text x="76.0654%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="75.8950%" y="533" width="0.0796%" height="15" fill="rgb(232,148,1)" fg:x="954" fg:w="1"/><text x="76.1450%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="75.8950%" y="517" width="0.0796%" height="15" fill="rgb(249,41,3)" fg:x="954" fg:w="1"/><text x="76.1450%" y="527.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="75.9745%" y="485" width="0.0796%" height="15" fill="rgb(215,14,33)" fg:x="955" fg:w="1"/><text x="76.2245%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9745%" y="469" width="0.0796%" height="15" fill="rgb(209,146,24)" fg:x="955" fg:w="1"/><text x="76.2245%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9745%" y="453" width="0.0796%" height="15" fill="rgb(219,51,47)" fg:x="955" fg:w="1"/><text x="76.2245%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="75.9745%" y="517" width="0.1591%" height="15" fill="rgb(234,217,40)" fg:x="955" fg:w="2"/><text x="76.2245%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="75.9745%" y="501" width="0.1591%" height="15" fill="rgb(228,34,26)" fg:x="955" fg:w="2"/><text x="76.2245%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="76.0541%" y="485" width="0.0796%" height="15" fill="rgb(224,50,29)" fg:x="956" fg:w="1"/><text x="76.3041%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.1337%" y="485" width="0.1591%" height="15" fill="rgb(205,79,51)" fg:x="957" fg:w="2"/><text x="76.3837%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2132%" y="469" width="0.0796%" height="15" fill="rgb(218,136,28)" fg:x="958" fg:w="1"/><text x="76.4632%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.2132%" y="453" width="0.0796%" height="15" fill="rgb(220,150,10)" fg:x="958" fg:w="1"/><text x="76.4632%" y="463.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2928%" y="485" width="0.0796%" height="15" fill="rgb(242,158,47)" fg:x="959" fg:w="1"/><text x="76.5428%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.2928%" y="469" width="0.0796%" height="15" fill="rgb(209,68,0)" fg:x="959" fg:w="1"/><text x="76.5428%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.2928%" y="453" width="0.0796%" height="15" fill="rgb(208,13,41)" fg:x="959" fg:w="1"/><text x="76.5428%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.3723%" y="453" width="0.0796%" height="15" fill="rgb(226,201,7)" fg:x="960" fg:w="1"/><text x="76.6223%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3723%" y="437" width="0.0796%" height="15" fill="rgb(236,103,26)" fg:x="960" fg:w="1"/><text x="76.6223%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.3723%" y="421" width="0.0796%" height="15" fill="rgb(243,162,8)" fg:x="960" fg:w="1"/><text x="76.6223%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3723%" y="405" width="0.0796%" height="15" fill="rgb(237,225,11)" fg:x="960" fg:w="1"/><text x="76.6223%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.3723%" y="389" width="0.0796%" height="15" fill="rgb(247,186,32)" fg:x="960" fg:w="1"/><text x="76.6223%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3723%" y="373" width="0.0796%" height="15" fill="rgb(215,26,28)" fg:x="960" fg:w="1"/><text x="76.6223%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3723%" y="357" width="0.0796%" height="15" fill="rgb(208,121,6)" fg:x="960" fg:w="1"/><text x="76.6223%" y="367.50"></text></g><g><title>plugins_core::build::Build::save (16 samples, 1.27%)</title><rect x="75.2586%" y="565" width="1.2729%" height="15" fill="rgb(225,91,3)" fg:x="946" fg:w="16"/><text x="75.5086%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="75.6563%" y="549" width="0.8751%" height="15" fill="rgb(246,119,36)" fg:x="951" fg:w="11"/><text x="75.9063%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="75.9745%" y="533" width="0.5569%" height="15" fill="rgb(254,173,2)" fg:x="955" fg:w="7"/><text x="76.2245%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="76.1337%" y="517" width="0.3978%" height="15" fill="rgb(209,87,54)" fg:x="957" fg:w="5"/><text x="76.3837%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="76.1337%" y="501" width="0.3978%" height="15" fill="rgb(223,216,20)" fg:x="957" fg:w="5"/><text x="76.3837%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="76.3723%" y="485" width="0.1591%" height="15" fill="rgb(220,31,8)" fg:x="960" fg:w="2"/><text x="76.6223%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="76.3723%" y="469" width="0.1591%" height="15" fill="rgb(220,185,15)" fg:x="960" fg:w="2"/><text x="76.6223%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.4519%" y="453" width="0.0796%" height="15" fill="rgb(247,190,50)" fg:x="961" fg:w="1"/><text x="76.7019%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (1 samples, 0.08%)</title><rect x="76.5314%" y="565" width="0.0796%" height="15" fill="rgb(239,173,47)" fg:x="962" fg:w="1"/><text x="76.7814%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.08%)</title><rect x="76.5314%" y="549" width="0.0796%" height="15" fill="rgb(218,190,42)" fg:x="962" fg:w="1"/><text x="76.7814%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="76.5314%" y="533" width="0.0796%" height="15" fill="rgb(251,207,16)" fg:x="962" fg:w="1"/><text x="76.7814%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5314%" y="517" width="0.0796%" height="15" fill="rgb(222,199,47)" fg:x="962" fg:w="1"/><text x="76.7814%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.5314%" y="501" width="0.0796%" height="15" fill="rgb(245,190,7)" fg:x="962" fg:w="1"/><text x="76.7814%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5314%" y="485" width="0.0796%" height="15" fill="rgb(239,85,38)" fg:x="962" fg:w="1"/><text x="76.7814%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5314%" y="469" width="0.0796%" height="15" fill="rgb(229,69,51)" fg:x="962" fg:w="1"/><text x="76.7814%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.6110%" y="501" width="0.0796%" height="15" fill="rgb(231,104,51)" fg:x="963" fg:w="1"/><text x="76.8610%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="76.6110%" y="485" width="0.0796%" height="15" fill="rgb(235,49,4)" fg:x="963" fg:w="1"/><text x="76.8610%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6110%" y="469" width="0.0796%" height="15" fill="rgb(246,166,20)" fg:x="963" fg:w="1"/><text x="76.8610%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.6905%" y="469" width="0.0796%" height="15" fill="rgb(230,119,37)" fg:x="964" fg:w="1"/><text x="76.9405%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6905%" y="453" width="0.0796%" height="15" fill="rgb(234,77,34)" fg:x="964" fg:w="1"/><text x="76.9405%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="76.6110%" y="533" width="0.2387%" height="15" fill="rgb(211,222,33)" fg:x="963" fg:w="3"/><text x="76.8610%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="76.6110%" y="517" width="0.2387%" height="15" fill="rgb(226,45,42)" fg:x="963" fg:w="3"/><text x="76.8610%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.6905%" y="501" width="0.1591%" height="15" fill="rgb(215,174,28)" fg:x="964" fg:w="2"/><text x="76.9405%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="76.6905%" y="485" width="0.1591%" height="15" fill="rgb(254,173,49)" fg:x="964" fg:w="2"/><text x="76.9405%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.7701%" y="469" width="0.0796%" height="15" fill="rgb(229,191,6)" fg:x="965" fg:w="1"/><text x="77.0201%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.7701%" y="453" width="0.0796%" height="15" fill="rgb(212,145,22)" fg:x="965" fg:w="1"/><text x="77.0201%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="76.8496%" y="517" width="0.0796%" height="15" fill="rgb(226,6,51)" fg:x="966" fg:w="1"/><text x="77.0996%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8496%" y="501" width="0.0796%" height="15" fill="rgb(227,128,8)" fg:x="966" fg:w="1"/><text x="77.0996%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8496%" y="485" width="0.0796%" height="15" fill="rgb(205,24,10)" fg:x="966" fg:w="1"/><text x="77.0996%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8496%" y="469" width="0.0796%" height="15" fill="rgb(217,147,27)" fg:x="966" fg:w="1"/><text x="77.0996%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8496%" y="453" width="0.0796%" height="15" fill="rgb(250,82,42)" fg:x="966" fg:w="1"/><text x="77.0996%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8496%" y="437" width="0.0796%" height="15" fill="rgb(248,93,17)" fg:x="966" fg:w="1"/><text x="77.0996%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8496%" y="421" width="0.0796%" height="15" fill="rgb(254,212,40)" fg:x="966" fg:w="1"/><text x="77.0996%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8496%" y="405" width="0.0796%" height="15" fill="rgb(229,209,2)" fg:x="966" fg:w="1"/><text x="77.0996%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.9292%" y="485" width="0.1591%" height="15" fill="rgb(211,50,43)" fg:x="967" fg:w="2"/><text x="77.1792%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="76.9292%" y="469" width="0.1591%" height="15" fill="rgb(245,196,29)" fg:x="967" fg:w="2"/><text x="77.1792%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.9292%" y="453" width="0.1591%" height="15" fill="rgb(216,132,13)" fg:x="967" fg:w="2"/><text x="77.1792%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.9292%" y="437" width="0.1591%" height="15" fill="rgb(251,108,21)" fg:x="967" fg:w="2"/><text x="77.1792%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.9292%" y="421" width="0.1591%" height="15" fill="rgb(229,174,54)" fg:x="967" fg:w="2"/><text x="77.1792%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.9292%" y="405" width="0.1591%" height="15" fill="rgb(211,175,47)" fg:x="967" fg:w="2"/><text x="77.1792%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.9292%" y="389" width="0.1591%" height="15" fill="rgb(234,5,37)" fg:x="967" fg:w="2"/><text x="77.1792%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.9292%" y="373" width="0.1591%" height="15" fill="rgb(244,150,43)" fg:x="967" fg:w="2"/><text x="77.1792%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0088%" y="357" width="0.0796%" height="15" fill="rgb(242,172,38)" fg:x="968" fg:w="1"/><text x="77.2588%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="76.8496%" y="533" width="0.3182%" height="15" fill="rgb(205,27,8)" fg:x="966" fg:w="4"/><text x="77.0996%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="76.9292%" y="517" width="0.2387%" height="15" fill="rgb(217,57,3)" fg:x="967" fg:w="3"/><text x="77.1792%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="76.9292%" y="501" width="0.2387%" height="15" fill="rgb(242,21,38)" fg:x="967" fg:w="3"/><text x="77.1792%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.0883%" y="485" width="0.0796%" height="15" fill="rgb(209,64,43)" fg:x="969" fg:w="1"/><text x="77.3383%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="77.0883%" y="469" width="0.0796%" height="15" fill="rgb(222,2,46)" fg:x="969" fg:w="1"/><text x="77.3383%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0883%" y="453" width="0.0796%" height="15" fill="rgb(218,19,44)" fg:x="969" fg:w="1"/><text x="77.3383%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0883%" y="437" width="0.0796%" height="15" fill="rgb(240,203,42)" fg:x="969" fg:w="1"/><text x="77.3383%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.0883%" y="421" width="0.0796%" height="15" fill="rgb(229,23,45)" fg:x="969" fg:w="1"/><text x="77.3383%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0883%" y="405" width="0.0796%" height="15" fill="rgb(205,228,51)" fg:x="969" fg:w="1"/><text x="77.3383%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0883%" y="389" width="0.0796%" height="15" fill="rgb(239,36,20)" fg:x="969" fg:w="1"/><text x="77.3383%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0883%" y="373" width="0.0796%" height="15" fill="rgb(248,172,27)" fg:x="969" fg:w="1"/><text x="77.3383%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0883%" y="357" width="0.0796%" height="15" fill="rgb(244,55,32)" fg:x="969" fg:w="1"/><text x="77.3383%" y="367.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (8 samples, 0.64%)</title><rect x="76.6110%" y="565" width="0.6364%" height="15" fill="rgb(215,97,16)" fg:x="963" fg:w="8"/><text x="76.8610%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.64%)</title><rect x="76.6110%" y="549" width="0.6364%" height="15" fill="rgb(224,80,29)" fg:x="963" fg:w="8"/><text x="76.8610%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="77.1679%" y="533" width="0.0796%" height="15" fill="rgb(216,93,47)" fg:x="970" fg:w="1"/><text x="77.4179%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="77.1679%" y="517" width="0.0796%" height="15" fill="rgb(238,159,10)" fg:x="970" fg:w="1"/><text x="77.4179%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="77.1679%" y="501" width="0.0796%" height="15" fill="rgb(223,98,29)" fg:x="970" fg:w="1"/><text x="77.4179%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.1679%" y="485" width="0.0796%" height="15" fill="rgb(210,176,23)" fg:x="970" fg:w="1"/><text x="77.4179%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="77.1679%" y="469" width="0.0796%" height="15" fill="rgb(242,162,27)" fg:x="970" fg:w="1"/><text x="77.4179%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.1679%" y="453" width="0.0796%" height="15" fill="rgb(245,109,32)" fg:x="970" fg:w="1"/><text x="77.4179%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1679%" y="437" width="0.0796%" height="15" fill="rgb(248,87,8)" fg:x="970" fg:w="1"/><text x="77.4179%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.2474%" y="517" width="0.0796%" height="15" fill="rgb(250,160,50)" fg:x="971" fg:w="1"/><text x="77.4974%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2474%" y="501" width="0.0796%" height="15" fill="rgb(246,165,25)" fg:x="971" fg:w="1"/><text x="77.4974%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3270%" y="517" width="0.0796%" height="15" fill="rgb(249,219,3)" fg:x="972" fg:w="1"/><text x="77.5770%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="77.2474%" y="549" width="0.2387%" height="15" fill="rgb(226,66,5)" fg:x="971" fg:w="3"/><text x="77.4974%" y="559.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="77.2474%" y="533" width="0.2387%" height="15" fill="rgb(250,220,43)" fg:x="971" fg:w="3"/><text x="77.4974%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4065%" y="517" width="0.0796%" height="15" fill="rgb(225,111,31)" fg:x="973" fg:w="1"/><text x="77.6565%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="77.4065%" y="501" width="0.0796%" height="15" fill="rgb(248,106,18)" fg:x="973" fg:w="1"/><text x="77.6565%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.4065%" y="485" width="0.0796%" height="15" fill="rgb(220,226,45)" fg:x="973" fg:w="1"/><text x="77.6565%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="77.4861%" y="549" width="0.1591%" height="15" fill="rgb(208,58,53)" fg:x="974" fg:w="2"/><text x="77.7361%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.5656%" y="533" width="0.0796%" height="15" fill="rgb(209,133,1)" fg:x="975" fg:w="1"/><text x="77.8156%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.7247%" y="517" width="0.0796%" height="15" fill="rgb(228,216,27)" fg:x="977" fg:w="1"/><text x="77.9747%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.7247%" y="501" width="0.0796%" height="15" fill="rgb(238,155,2)" fg:x="977" fg:w="1"/><text x="77.9747%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.7247%" y="485" width="0.0796%" height="15" fill="rgb(244,99,37)" fg:x="977" fg:w="1"/><text x="77.9747%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.7247%" y="469" width="0.0796%" height="15" fill="rgb(254,32,3)" fg:x="977" fg:w="1"/><text x="77.9747%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.7247%" y="453" width="0.0796%" height="15" fill="rgb(234,46,50)" fg:x="977" fg:w="1"/><text x="77.9747%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.7247%" y="437" width="0.0796%" height="15" fill="rgb(232,118,51)" fg:x="977" fg:w="1"/><text x="77.9747%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.7247%" y="421" width="0.0796%" height="15" fill="rgb(207,24,32)" fg:x="977" fg:w="1"/><text x="77.9747%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.7247%" y="405" width="0.0796%" height="15" fill="rgb(208,107,43)" fg:x="977" fg:w="1"/><text x="77.9747%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.7247%" y="389" width="0.0796%" height="15" fill="rgb(231,28,9)" fg:x="977" fg:w="1"/><text x="77.9747%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.7247%" y="373" width="0.0796%" height="15" fill="rgb(241,204,15)" fg:x="977" fg:w="1"/><text x="77.9747%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.7247%" y="357" width="0.0796%" height="15" fill="rgb(214,54,15)" fg:x="977" fg:w="1"/><text x="77.9747%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7247%" y="341" width="0.0796%" height="15" fill="rgb(230,12,28)" fg:x="977" fg:w="1"/><text x="77.9747%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="77.6452%" y="533" width="0.2387%" height="15" fill="rgb(221,171,5)" fg:x="976" fg:w="3"/><text x="77.8952%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8043%" y="517" width="0.0796%" height="15" fill="rgb(207,72,25)" fg:x="978" fg:w="1"/><text x="78.0543%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.8839%" y="485" width="0.0796%" height="15" fill="rgb(249,79,37)" fg:x="979" fg:w="1"/><text x="78.1339%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="77.8839%" y="469" width="0.0796%" height="15" fill="rgb(209,98,49)" fg:x="979" fg:w="1"/><text x="78.1339%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="77.8839%" y="453" width="0.0796%" height="15" fill="rgb(221,62,13)" fg:x="979" fg:w="1"/><text x="78.1339%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="77.8839%" y="437" width="0.0796%" height="15" fill="rgb(223,39,6)" fg:x="979" fg:w="1"/><text x="78.1339%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.8839%" y="421" width="0.0796%" height="15" fill="rgb(246,163,20)" fg:x="979" fg:w="1"/><text x="78.1339%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.8839%" y="405" width="0.0796%" height="15" fill="rgb(211,111,29)" fg:x="979" fg:w="1"/><text x="78.1339%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="78.0430%" y="421" width="0.4773%" height="15" fill="rgb(243,118,5)" fg:x="981" fg:w="6"/><text x="78.2930%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="78.1225%" y="405" width="0.3978%" height="15" fill="rgb(240,144,52)" fg:x="982" fg:w="5"/><text x="78.3725%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.3612%" y="389" width="0.1591%" height="15" fill="rgb(244,158,36)" fg:x="985" fg:w="2"/><text x="78.6112%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.3612%" y="373" width="0.1591%" height="15" fill="rgb(241,109,37)" fg:x="985" fg:w="2"/><text x="78.6112%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4407%" y="357" width="0.0796%" height="15" fill="rgb(213,95,32)" fg:x="986" fg:w="1"/><text x="78.6907%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.4407%" y="341" width="0.0796%" height="15" fill="rgb(252,193,9)" fg:x="986" fg:w="1"/><text x="78.6907%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.5203%" y="405" width="0.0796%" height="15" fill="rgb(225,213,21)" fg:x="987" fg:w="1"/><text x="78.7703%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.5203%" y="389" width="0.0796%" height="15" fill="rgb(220,172,46)" fg:x="987" fg:w="1"/><text x="78.7703%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7589%" y="357" width="0.0796%" height="15" fill="rgb(235,75,41)" fg:x="990" fg:w="1"/><text x="79.0089%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7589%" y="341" width="0.0796%" height="15" fill="rgb(213,86,9)" fg:x="990" fg:w="1"/><text x="79.0089%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.7589%" y="325" width="0.0796%" height="15" fill="rgb(238,127,51)" fg:x="990" fg:w="1"/><text x="79.0089%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.7589%" y="309" width="0.0796%" height="15" fill="rgb(215,2,54)" fg:x="990" fg:w="1"/><text x="79.0089%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.7589%" y="293" width="0.0796%" height="15" fill="rgb(245,80,6)" fg:x="990" fg:w="1"/><text x="79.0089%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.7589%" y="277" width="0.0796%" height="15" fill="rgb(233,106,42)" fg:x="990" fg:w="1"/><text x="79.0089%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="78.7589%" y="389" width="0.1591%" height="15" fill="rgb(244,86,38)" fg:x="990" fg:w="2"/><text x="79.0089%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="78.7589%" y="373" width="0.1591%" height="15" fill="rgb(242,167,7)" fg:x="990" fg:w="2"/><text x="79.0089%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8385%" y="357" width="0.0796%" height="15" fill="rgb(218,216,3)" fg:x="991" fg:w="1"/><text x="79.0885%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.8385%" y="341" width="0.0796%" height="15" fill="rgb(206,136,36)" fg:x="991" fg:w="1"/><text x="79.0885%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.8385%" y="325" width="0.0796%" height="15" fill="rgb(206,206,15)" fg:x="991" fg:w="1"/><text x="79.0885%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.9181%" y="389" width="0.0796%" height="15" fill="rgb(207,163,34)" fg:x="992" fg:w="1"/><text x="79.1681%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.9181%" y="373" width="0.0796%" height="15" fill="rgb(240,127,22)" fg:x="992" fg:w="1"/><text x="79.1681%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.9181%" y="357" width="0.0796%" height="15" fill="rgb(227,49,5)" fg:x="992" fg:w="1"/><text x="79.1681%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.9181%" y="341" width="0.0796%" height="15" fill="rgb(231,8,6)" fg:x="992" fg:w="1"/><text x="79.1681%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="78.9976%" y="325" width="0.2387%" height="15" fill="rgb(223,21,24)" fg:x="993" fg:w="3"/><text x="79.2476%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="78.9976%" y="309" width="0.2387%" height="15" fill="rgb(244,44,52)" fg:x="993" fg:w="3"/><text x="79.2476%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="79.0772%" y="293" width="0.1591%" height="15" fill="rgb(207,73,28)" fg:x="994" fg:w="2"/><text x="79.3272%" y="303.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="79.0772%" y="277" width="0.1591%" height="15" fill="rgb(234,215,10)" fg:x="994" fg:w="2"/><text x="79.3272%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="78.9976%" y="373" width="0.3182%" height="15" fill="rgb(236,85,3)" fg:x="993" fg:w="4"/><text x="79.2476%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="78.9976%" y="357" width="0.3182%" height="15" fill="rgb(236,102,39)" fg:x="993" fg:w="4"/><text x="79.2476%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="78.9976%" y="341" width="0.3182%" height="15" fill="rgb(243,50,8)" fg:x="993" fg:w="4"/><text x="79.2476%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="79.2363%" y="325" width="0.0796%" height="15" fill="rgb(207,111,4)" fg:x="996" fg:w="1"/><text x="79.4863%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.3158%" y="373" width="0.1591%" height="15" fill="rgb(230,52,42)" fg:x="997" fg:w="2"/><text x="79.5658%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.3158%" y="357" width="0.1591%" height="15" fill="rgb(252,178,50)" fg:x="997" fg:w="2"/><text x="79.5658%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.3954%" y="341" width="0.0796%" height="15" fill="rgb(234,46,35)" fg:x="998" fg:w="1"/><text x="79.6454%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.3954%" y="325" width="0.0796%" height="15" fill="rgb(228,69,37)" fg:x="998" fg:w="1"/><text x="79.6454%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.3954%" y="309" width="0.0796%" height="15" fill="rgb(221,21,11)" fg:x="998" fg:w="1"/><text x="79.6454%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.11%)</title><rect x="78.5998%" y="405" width="1.1138%" height="15" fill="rgb(223,56,9)" fg:x="988" fg:w="14"/><text x="78.8498%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="78.9976%" y="389" width="0.7160%" height="15" fill="rgb(234,30,19)" fg:x="993" fg:w="9"/><text x="79.2476%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.4749%" y="373" width="0.2387%" height="15" fill="rgb(211,64,54)" fg:x="999" fg:w="3"/><text x="79.7249%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.6340%" y="357" width="0.0796%" height="15" fill="rgb(250,189,5)" fg:x="1001" fg:w="1"/><text x="79.8840%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (25 samples, 1.99%)</title><rect x="78.0430%" y="437" width="1.9889%" height="15" fill="rgb(214,180,13)" fg:x="981" fg:w="25"/><text x="78.2930%" y="447.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.51%)</title><rect x="78.5203%" y="421" width="1.5115%" height="15" fill="rgb(238,40,40)" fg:x="987" fg:w="19"/><text x="78.7703%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="79.7136%" y="405" width="0.3182%" height="15" fill="rgb(214,101,38)" fg:x="1002" fg:w="4"/><text x="79.9636%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="79.7932%" y="389" width="0.2387%" height="15" fill="rgb(242,65,53)" fg:x="1003" fg:w="3"/><text x="80.0432%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="79.7932%" y="373" width="0.2387%" height="15" fill="rgb(230,22,45)" fg:x="1003" fg:w="3"/><text x="80.0432%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0318%" y="389" width="0.0796%" height="15" fill="rgb(223,77,1)" fg:x="1006" fg:w="1"/><text x="80.2818%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.1114%" y="389" width="0.0796%" height="15" fill="rgb(227,33,37)" fg:x="1007" fg:w="1"/><text x="80.3614%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1114%" y="373" width="0.0796%" height="15" fill="rgb(224,148,39)" fg:x="1007" fg:w="1"/><text x="80.3614%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1909%" y="373" width="0.0796%" height="15" fill="rgb(232,212,39)" fg:x="1008" fg:w="1"/><text x="80.4409%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.2705%" y="357" width="0.0796%" height="15" fill="rgb(251,172,7)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2705%" y="341" width="0.0796%" height="15" fill="rgb(219,39,9)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4296%" y="341" width="0.0796%" height="15" fill="rgb(228,118,14)" fg:x="1011" fg:w="1"/><text x="80.6796%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="80.0318%" y="437" width="0.5569%" height="15" fill="rgb(207,140,10)" fg:x="1006" fg:w="7"/><text x="80.2818%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="80.0318%" y="421" width="0.5569%" height="15" fill="rgb(227,111,53)" fg:x="1006" fg:w="7"/><text x="80.2818%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="80.0318%" y="405" width="0.5569%" height="15" fill="rgb(216,165,16)" fg:x="1006" fg:w="7"/><text x="80.2818%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="80.1909%" y="389" width="0.3978%" height="15" fill="rgb(226,111,18)" fg:x="1008" fg:w="5"/><text x="80.4409%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="80.2705%" y="373" width="0.3182%" height="15" fill="rgb(251,27,17)" fg:x="1009" fg:w="4"/><text x="80.5205%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.3500%" y="357" width="0.2387%" height="15" fill="rgb(254,69,9)" fg:x="1010" fg:w="3"/><text x="80.6000%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.5091%" y="341" width="0.0796%" height="15" fill="rgb(234,140,37)" fg:x="1012" fg:w="1"/><text x="80.7591%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5091%" y="325" width="0.0796%" height="15" fill="rgb(220,93,8)" fg:x="1012" fg:w="1"/><text x="80.7591%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="80.5887%" y="421" width="0.0796%" height="15" fill="rgb(236,113,3)" fg:x="1013" fg:w="1"/><text x="80.8387%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.5887%" y="405" width="0.0796%" height="15" fill="rgb(234,108,23)" fg:x="1013" fg:w="1"/><text x="80.8387%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7478%" y="389" width="0.0796%" height="15" fill="rgb(205,114,34)" fg:x="1015" fg:w="1"/><text x="80.9978%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.7478%" y="373" width="0.0796%" height="15" fill="rgb(236,200,45)" fg:x="1015" fg:w="1"/><text x="80.9978%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.7478%" y="357" width="0.0796%" height="15" fill="rgb(227,194,29)" fg:x="1015" fg:w="1"/><text x="80.9978%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="80.7478%" y="341" width="0.0796%" height="15" fill="rgb(250,76,42)" fg:x="1015" fg:w="1"/><text x="80.9978%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9069%" y="357" width="0.0796%" height="15" fill="rgb(208,128,8)" fg:x="1017" fg:w="1"/><text x="81.1569%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="80.8274%" y="389" width="0.2387%" height="15" fill="rgb(229,209,35)" fg:x="1016" fg:w="3"/><text x="81.0774%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="80.8274%" y="373" width="0.2387%" height="15" fill="rgb(215,39,53)" fg:x="1016" fg:w="3"/><text x="81.0774%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.9865%" y="357" width="0.0796%" height="15" fill="rgb(219,123,41)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1456%" y="309" width="0.0796%" height="15" fill="rgb(212,158,18)" fg:x="1020" fg:w="1"/><text x="81.3956%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5434%" y="277" width="0.0796%" height="15" fill="rgb(234,196,53)" fg:x="1025" fg:w="1"/><text x="81.7934%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="81.1456%" y="325" width="0.5569%" height="15" fill="rgb(210,139,12)" fg:x="1020" fg:w="7"/><text x="81.3956%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="81.2251%" y="309" width="0.4773%" height="15" fill="rgb(220,116,54)" fg:x="1021" fg:w="6"/><text x="81.4751%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.5434%" y="293" width="0.1591%" height="15" fill="rgb(247,103,28)" fg:x="1025" fg:w="2"/><text x="81.7934%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6229%" y="277" width="0.0796%" height="15" fill="rgb(253,156,45)" fg:x="1026" fg:w="1"/><text x="81.8729%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="81.1456%" y="357" width="0.6364%" height="15" fill="rgb(237,157,52)" fg:x="1020" fg:w="8"/><text x="81.3956%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="81.1456%" y="341" width="0.6364%" height="15" fill="rgb(253,112,16)" fg:x="1020" fg:w="8"/><text x="81.3956%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7025%" y="325" width="0.0796%" height="15" fill="rgb(234,70,18)" fg:x="1027" fg:w="1"/><text x="81.9525%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="81.0660%" y="373" width="0.7955%" height="15" fill="rgb(247,138,19)" fg:x="1019" fg:w="10"/><text x="81.3160%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="81.7820%" y="357" width="0.0796%" height="15" fill="rgb(207,171,1)" fg:x="1028" fg:w="1"/><text x="82.0320%" y="367.50"></text></g><g><title>engine::session::Session::flush (55 samples, 4.38%)</title><rect x="77.6452%" y="549" width="4.3755%" height="15" fill="rgb(239,213,3)" fg:x="976" fg:w="55"/><text x="77.8952%" y="559.50">engin..</text></g><g><title>engine::session::Session::save_changes (52 samples, 4.14%)</title><rect x="77.8839%" y="533" width="4.1368%" height="15" fill="rgb(226,112,4)" fg:x="979" fg:w="52"/><text x="78.1339%" y="543.50">engin..</text></g><g><title>engine::session::state::State::close (52 samples, 4.14%)</title><rect x="77.8839%" y="517" width="4.1368%" height="15" fill="rgb(252,170,12)" fg:x="979" fg:w="52"/><text x="78.1339%" y="527.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (52 samples, 4.14%)</title><rect x="77.8839%" y="501" width="4.1368%" height="15" fill="rgb(241,106,13)" fg:x="979" fg:w="52"/><text x="78.1339%" y="511.50">engin..</text></g><g><title>core::iter::adapters::try_process (51 samples, 4.06%)</title><rect x="77.9634%" y="485" width="4.0573%" height="15" fill="rgb(225,73,23)" fg:x="980" fg:w="51"/><text x="78.2134%" y="495.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 4.06%)</title><rect x="77.9634%" y="469" width="4.0573%" height="15" fill="rgb(251,227,29)" fg:x="980" fg:w="51"/><text x="78.2134%" y="479.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (51 samples, 4.06%)</title><rect x="77.9634%" y="453" width="4.0573%" height="15" fill="rgb(237,144,13)" fg:x="980" fg:w="51"/><text x="78.2134%" y="463.50">engi..</text></g><g><title>kernel::model::any_entity_changes (18 samples, 1.43%)</title><rect x="80.5887%" y="437" width="1.4320%" height="15" fill="rgb(232,106,46)" fg:x="1013" fg:w="18"/><text x="80.8387%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.35%)</title><rect x="80.6683%" y="421" width="1.3524%" height="15" fill="rgb(245,154,53)" fg:x="1014" fg:w="17"/><text x="80.9183%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.35%)</title><rect x="80.6683%" y="405" width="1.3524%" height="15" fill="rgb(212,119,47)" fg:x="1014" fg:w="17"/><text x="80.9183%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.95%)</title><rect x="81.0660%" y="389" width="0.9547%" height="15" fill="rgb(253,135,25)" fg:x="1019" fg:w="12"/><text x="81.3160%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="81.8616%" y="373" width="0.1591%" height="15" fill="rgb(253,208,39)" fg:x="1029" fg:w="2"/><text x="82.1116%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.0207%" y="453" width="0.0796%" height="15" fill="rgb(226,64,12)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.0207%" y="437" width="0.0796%" height="15" fill="rgb(214,162,37)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.0207%" y="421" width="0.0796%" height="15" fill="rgb(250,104,5)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.0207%" y="405" width="0.0796%" height="15" fill="rgb(220,202,50)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.0207%" y="389" width="0.0796%" height="15" fill="rgb(248,67,38)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.0207%" y="373" width="0.0796%" height="15" fill="rgb(242,94,35)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="82.0207%" y="357" width="0.0796%" height="15" fill="rgb(209,78,37)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="367.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="82.0207%" y="549" width="0.1591%" height="15" fill="rgb(230,126,47)" fg:x="1031" fg:w="2"/><text x="82.2707%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="82.0207%" y="533" width="0.1591%" height="15" fill="rgb(222,110,35)" fg:x="1031" fg:w="2"/><text x="82.2707%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="82.0207%" y="517" width="0.1591%" height="15" fill="rgb(233,154,20)" fg:x="1031" fg:w="2"/><text x="82.2707%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="82.0207%" y="501" width="0.1591%" height="15" fill="rgb(223,53,50)" fg:x="1031" fg:w="2"/><text x="82.2707%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="82.0207%" y="485" width="0.1591%" height="15" fill="rgb(251,27,26)" fg:x="1031" fg:w="2"/><text x="82.2707%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="82.0207%" y="469" width="0.1591%" height="15" fill="rgb(223,189,16)" fg:x="1031" fg:w="2"/><text x="82.2707%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.1002%" y="453" width="0.0796%" height="15" fill="rgb(207,5,54)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="82.1002%" y="437" width="0.0796%" height="15" fill="rgb(254,124,50)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="82.1002%" y="421" width="0.0796%" height="15" fill="rgb(253,193,24)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.2593%" y="533" width="0.1591%" height="15" fill="rgb(235,170,24)" fg:x="1034" fg:w="2"/><text x="82.5093%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="82.2593%" y="517" width="0.1591%" height="15" fill="rgb(222,212,52)" fg:x="1034" fg:w="2"/><text x="82.5093%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.2593%" y="501" width="0.1591%" height="15" fill="rgb(223,17,45)" fg:x="1034" fg:w="2"/><text x="82.5093%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.2593%" y="485" width="0.1591%" height="15" fill="rgb(227,103,26)" fg:x="1034" fg:w="2"/><text x="82.5093%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="82.2593%" y="469" width="0.1591%" height="15" fill="rgb(251,151,25)" fg:x="1034" fg:w="2"/><text x="82.5093%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.2593%" y="453" width="0.1591%" height="15" fill="rgb(248,144,29)" fg:x="1034" fg:w="2"/><text x="82.5093%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.2593%" y="437" width="0.1591%" height="15" fill="rgb(245,97,16)" fg:x="1034" fg:w="2"/><text x="82.5093%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3389%" y="421" width="0.0796%" height="15" fill="rgb(220,200,29)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="82.4185%" y="517" width="0.0796%" height="15" fill="rgb(206,38,29)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4185%" y="501" width="0.0796%" height="15" fill="rgb(245,19,52)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4185%" y="485" width="0.0796%" height="15" fill="rgb(205,67,43)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="82.4980%" y="517" width="0.0796%" height="15" fill="rgb(217,128,23)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="82.4980%" y="501" width="0.0796%" height="15" fill="rgb(210,109,28)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4980%" y="485" width="0.0796%" height="15" fill="rgb(233,181,7)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="82.5776%" y="469" width="0.0796%" height="15" fill="rgb(244,11,22)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5776%" y="453" width="0.0796%" height="15" fill="rgb(205,124,54)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5776%" y="437" width="0.0796%" height="15" fill="rgb(218,21,27)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5776%" y="421" width="0.0796%" height="15" fill="rgb(224,153,33)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5776%" y="405" width="0.0796%" height="15" fill="rgb(240,219,28)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5776%" y="389" width="0.0796%" height="15" fill="rgb(214,80,29)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.5776%" y="373" width="0.0796%" height="15" fill="rgb(247,148,44)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.5776%" y="357" width="0.0796%" height="15" fill="rgb(243,110,30)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.5776%" y="341" width="0.0796%" height="15" fill="rgb(243,173,41)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.5776%" y="325" width="0.0796%" height="15" fill="rgb(225,160,47)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.5776%" y="309" width="0.0796%" height="15" fill="rgb(215,44,21)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.5776%" y="293" width="0.0796%" height="15" fill="rgb(248,90,3)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.5776%" y="277" width="0.0796%" height="15" fill="rgb(220,196,49)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.5776%" y="261" width="0.0796%" height="15" fill="rgb(217,138,14)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.5776%" y="245" width="0.0796%" height="15" fill="rgb(219,111,20)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5776%" y="229" width="0.0796%" height="15" fill="rgb(218,114,4)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.6571%" y="421" width="0.0796%" height="15" fill="rgb(238,133,3)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6571%" y="405" width="0.0796%" height="15" fill="rgb(224,95,0)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="82.5776%" y="501" width="0.2387%" height="15" fill="rgb(220,169,35)" fg:x="1038" fg:w="3"/><text x="82.8276%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.24%)</title><rect x="82.5776%" y="485" width="0.2387%" height="15" fill="rgb(242,116,47)" fg:x="1038" fg:w="3"/><text x="82.8276%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="82.6571%" y="469" width="0.1591%" height="15" fill="rgb(251,42,20)" fg:x="1039" fg:w="2"/><text x="82.9071%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="82.6571%" y="453" width="0.1591%" height="15" fill="rgb(234,7,34)" fg:x="1039" fg:w="2"/><text x="82.9071%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="82.6571%" y="437" width="0.1591%" height="15" fill="rgb(243,208,13)" fg:x="1039" fg:w="2"/><text x="82.9071%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7367%" y="421" width="0.0796%" height="15" fill="rgb(227,33,28)" fg:x="1040" fg:w="1"/><text x="82.9867%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="82.8162%" y="501" width="0.0796%" height="15" fill="rgb(250,47,37)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="82.4185%" y="533" width="0.7955%" height="15" fill="rgb(235,111,52)" fg:x="1036" fg:w="10"/><text x="82.6685%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="82.5776%" y="517" width="0.6364%" height="15" fill="rgb(223,64,28)" fg:x="1038" fg:w="8"/><text x="82.8276%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="82.8958%" y="501" width="0.3182%" height="15" fill="rgb(236,67,22)" fg:x="1042" fg:w="4"/><text x="83.1458%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="82.9753%" y="485" width="0.2387%" height="15" fill="rgb(243,79,24)" fg:x="1043" fg:w="3"/><text x="83.2253%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="83.0549%" y="469" width="0.1591%" height="15" fill="rgb(241,225,22)" fg:x="1044" fg:w="2"/><text x="83.3049%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.0549%" y="453" width="0.1591%" height="15" fill="rgb(228,214,26)" fg:x="1044" fg:w="2"/><text x="83.3049%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.0549%" y="437" width="0.1591%" height="15" fill="rgb(219,84,52)" fg:x="1044" fg:w="2"/><text x="83.3049%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.2140%" y="517" width="0.0796%" height="15" fill="rgb(220,12,22)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="527.50"></text></g><g><title>plugins_core::build::Build::save (16 samples, 1.27%)</title><rect x="82.1798%" y="549" width="1.2729%" height="15" fill="rgb(219,9,49)" fg:x="1033" fg:w="16"/><text x="82.4298%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="83.2140%" y="533" width="0.2387%" height="15" fill="rgb(237,40,43)" fg:x="1046" fg:w="3"/><text x="83.4640%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.2936%" y="517" width="0.1591%" height="15" fill="rgb(212,189,32)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.2936%" y="501" width="0.1591%" height="15" fill="rgb(247,48,9)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="83.2936%" y="485" width="0.1591%" height="15" fill="rgb(247,112,3)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="83.2936%" y="469" width="0.1591%" height="15" fill="rgb(243,110,18)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="83.2936%" y="453" width="0.1591%" height="15" fill="rgb(233,223,44)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.2936%" y="437" width="0.1591%" height="15" fill="rgb(245,160,20)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.2936%" y="421" width="0.1591%" height="15" fill="rgb(225,37,1)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="83.2936%" y="405" width="0.1591%" height="15" fill="rgb(253,227,39)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="83.2936%" y="389" width="0.1591%" height="15" fill="rgb(240,179,26)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="83.2936%" y="373" width="0.1591%" height="15" fill="rgb(237,212,23)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="83.2936%" y="357" width="0.1591%" height="15" fill="rgb(221,38,11)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.2936%" y="341" width="0.1591%" height="15" fill="rgb(215,85,6)" fg:x="1047" fg:w="2"/><text x="83.5436%" y="351.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="83.4527%" y="517" width="0.0796%" height="15" fill="rgb(239,64,14)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="83.4527%" y="501" width="0.0796%" height="15" fill="rgb(215,150,32)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="511.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (2 samples, 0.16%)</title><rect x="83.4527%" y="549" width="0.1591%" height="15" fill="rgb(238,15,13)" fg:x="1049" fg:w="2"/><text x="83.7027%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="83.4527%" y="533" width="0.1591%" height="15" fill="rgb(251,87,8)" fg:x="1049" fg:w="2"/><text x="83.7027%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="83.5322%" y="517" width="0.0796%" height="15" fill="rgb(206,86,1)" fg:x="1050" fg:w="1"/><text x="83.7822%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5322%" y="501" width="0.0796%" height="15" fill="rgb(208,151,45)" fg:x="1050" fg:w="1"/><text x="83.7822%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.5322%" y="485" width="0.0796%" height="15" fill="rgb(231,181,24)" fg:x="1050" fg:w="1"/><text x="83.7822%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6118%" y="453" width="0.0796%" height="15" fill="rgb(240,106,29)" fg:x="1051" fg:w="1"/><text x="83.8618%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.6118%" y="437" width="0.0796%" height="15" fill="rgb(227,166,11)" fg:x="1051" fg:w="1"/><text x="83.8618%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.6118%" y="421" width="0.0796%" height="15" fill="rgb(254,14,34)" fg:x="1051" fg:w="1"/><text x="83.8618%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.6118%" y="485" width="0.1591%" height="15" fill="rgb(223,222,6)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="83.6118%" y="469" width="0.1591%" height="15" fill="rgb(245,69,24)" fg:x="1051" fg:w="2"/><text x="83.8618%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.6913%" y="453" width="0.0796%" height="15" fill="rgb(213,193,7)" fg:x="1052" fg:w="1"/><text x="83.9413%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (3 samples, 0.24%)</title><rect x="83.6118%" y="549" width="0.2387%" height="15" fill="rgb(237,92,51)" fg:x="1051" fg:w="3"/><text x="83.8618%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="83.6118%" y="533" width="0.2387%" height="15" fill="rgb(225,194,6)" fg:x="1051" fg:w="3"/><text x="83.8618%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="83.6118%" y="517" width="0.2387%" height="15" fill="rgb(205,159,49)" fg:x="1051" fg:w="3"/><text x="83.8618%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="83.6118%" y="501" width="0.2387%" height="15" fill="rgb(219,69,2)" fg:x="1051" fg:w="3"/><text x="83.8618%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.7709%" y="485" width="0.0796%" height="15" fill="rgb(215,107,24)" fg:x="1053" fg:w="1"/><text x="84.0209%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="83.7709%" y="469" width="0.0796%" height="15" fill="rgb(249,208,29)" fg:x="1053" fg:w="1"/><text x="84.0209%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7709%" y="453" width="0.0796%" height="15" fill="rgb(213,147,10)" fg:x="1053" fg:w="1"/><text x="84.0209%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7709%" y="437" width="0.0796%" height="15" fill="rgb(254,140,42)" fg:x="1053" fg:w="1"/><text x="84.0209%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7709%" y="421" width="0.0796%" height="15" fill="rgb(249,9,15)" fg:x="1053" fg:w="1"/><text x="84.0209%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8504%" y="517" width="0.0796%" height="15" fill="rgb(210,19,33)" fg:x="1054" fg:w="1"/><text x="84.1004%" y="527.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (3 samples, 0.24%)</title><rect x="83.8504%" y="549" width="0.2387%" height="15" fill="rgb(241,121,22)" fg:x="1054" fg:w="3"/><text x="84.1004%" y="559.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="83.8504%" y="533" width="0.2387%" height="15" fill="rgb(244,69,52)" fg:x="1054" fg:w="3"/><text x="84.1004%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.9300%" y="517" width="0.1591%" height="15" fill="rgb(244,191,54)" fg:x="1055" fg:w="2"/><text x="84.1800%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.9300%" y="501" width="0.1591%" height="15" fill="rgb(250,3,53)" fg:x="1055" fg:w="2"/><text x="84.1800%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="84.0095%" y="485" width="0.0796%" height="15" fill="rgb(205,77,3)" fg:x="1056" fg:w="1"/><text x="84.2595%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="84.0095%" y="469" width="0.0796%" height="15" fill="rgb(207,155,3)" fg:x="1056" fg:w="1"/><text x="84.2595%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="84.0095%" y="453" width="0.0796%" height="15" fill="rgb(224,79,2)" fg:x="1056" fg:w="1"/><text x="84.2595%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0095%" y="437" width="0.0796%" height="15" fill="rgb(243,172,5)" fg:x="1056" fg:w="1"/><text x="84.2595%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0095%" y="421" width="0.0796%" height="15" fill="rgb(217,23,43)" fg:x="1056" fg:w="1"/><text x="84.2595%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="84.0891%" y="469" width="0.0796%" height="15" fill="rgb(223,109,20)" fg:x="1057" fg:w="1"/><text x="84.3391%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="84.0891%" y="533" width="0.2387%" height="15" fill="rgb(232,159,21)" fg:x="1057" fg:w="3"/><text x="84.3391%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="84.0891%" y="517" width="0.2387%" height="15" fill="rgb(219,58,2)" fg:x="1057" fg:w="3"/><text x="84.3391%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="84.0891%" y="501" width="0.2387%" height="15" fill="rgb(241,56,8)" fg:x="1057" fg:w="3"/><text x="84.3391%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="84.0891%" y="485" width="0.2387%" height="15" fill="rgb(249,10,27)" fg:x="1057" fg:w="3"/><text x="84.3391%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.1687%" y="469" width="0.1591%" height="15" fill="rgb(248,177,5)" fg:x="1058" fg:w="2"/><text x="84.4187%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.1687%" y="453" width="0.1591%" height="15" fill="rgb(239,12,30)" fg:x="1058" fg:w="2"/><text x="84.4187%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.2482%" y="437" width="0.0796%" height="15" fill="rgb(229,164,25)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2482%" y="421" width="0.0796%" height="15" fill="rgb(231,217,50)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2482%" y="405" width="0.0796%" height="15" fill="rgb(247,99,32)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2482%" y="389" width="0.0796%" height="15" fill="rgb(240,74,50)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="399.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.3278%" y="533" width="0.0796%" height="15" fill="rgb(218,54,8)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3278%" y="517" width="0.0796%" height="15" fill="rgb(227,132,20)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3278%" y="501" width="0.0796%" height="15" fill="rgb(232,134,12)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.3278%" y="485" width="0.0796%" height="15" fill="rgb(250,129,18)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3278%" y="469" width="0.0796%" height="15" fill="rgb(232,129,47)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3278%" y="453" width="0.0796%" height="15" fill="rgb(230,31,40)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3278%" y="437" width="0.0796%" height="15" fill="rgb(232,126,10)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3278%" y="421" width="0.0796%" height="15" fill="rgb(205,46,31)" fg:x="1060" fg:w="1"/><text x="84.5778%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="84.4073%" y="517" width="0.0796%" height="15" fill="rgb(232,37,37)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4073%" y="501" width="0.0796%" height="15" fill="rgb(240,91,16)" fg:x="1061" fg:w="1"/><text x="84.6573%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (92 samples, 7.32%)</title><rect x="77.2474%" y="565" width="7.3190%" height="15" fill="rgb(224,160,9)" fg:x="971" fg:w="92"/><text x="77.4974%" y="575.50">plugins_co..</text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="84.0891%" y="549" width="0.4773%" height="15" fill="rgb(215,116,14)" fg:x="1057" fg:w="6"/><text x="84.3391%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="84.4073%" y="533" width="0.1591%" height="15" fill="rgb(235,46,36)" fg:x="1061" fg:w="2"/><text x="84.6573%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="84.4869%" y="517" width="0.0796%" height="15" fill="rgb(238,39,28)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.4869%" y="501" width="0.0796%" height="15" fill="rgb(242,125,29)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.4869%" y="485" width="0.0796%" height="15" fill="rgb(238,211,30)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="495.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="84.4869%" y="469" width="0.0796%" height="15" fill="rgb(227,201,28)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="84.5664%" y="565" width="0.1591%" height="15" fill="rgb(238,77,29)" fg:x="1063" fg:w="2"/><text x="84.8164%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="84.5664%" y="549" width="0.1591%" height="15" fill="rgb(213,221,40)" fg:x="1063" fg:w="2"/><text x="84.8164%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="84.5664%" y="533" width="0.1591%" height="15" fill="rgb(226,220,44)" fg:x="1063" fg:w="2"/><text x="84.8164%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="84.6460%" y="517" width="0.0796%" height="15" fill="rgb(228,90,23)" fg:x="1064" fg:w="1"/><text x="84.8960%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6460%" y="501" width="0.0796%" height="15" fill="rgb(235,72,29)" fg:x="1064" fg:w="1"/><text x="84.8960%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="84.8051%" y="533" width="0.0796%" height="15" fill="rgb(248,117,39)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="84.8846%" y="517" width="0.0796%" height="15" fill="rgb(225,43,28)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="84.8846%" y="533" width="0.1591%" height="15" fill="rgb(240,93,4)" fg:x="1067" fg:w="2"/><text x="85.1346%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="84.9642%" y="517" width="0.0796%" height="15" fill="rgb(234,178,27)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="84.9642%" y="501" width="0.0796%" height="15" fill="rgb(254,88,22)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="84.9642%" y="485" width="0.0796%" height="15" fill="rgb(240,206,50)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.0438%" y="517" width="0.0796%" height="15" fill="rgb(249,103,8)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.0438%" y="501" width="0.0796%" height="15" fill="rgb(241,178,36)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0438%" y="485" width="0.0796%" height="15" fill="rgb(246,110,15)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0438%" y="469" width="0.0796%" height="15" fill="rgb(207,14,43)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.0438%" y="453" width="0.0796%" height="15" fill="rgb(253,219,19)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0438%" y="437" width="0.0796%" height="15" fill="rgb(216,126,5)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0438%" y="421" width="0.0796%" height="15" fill="rgb(218,78,42)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0438%" y="405" width="0.0796%" height="15" fill="rgb(215,154,40)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.1233%" y="501" width="0.0796%" height="15" fill="rgb(235,129,32)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="85.1233%" y="485" width="0.0796%" height="15" fill="rgb(218,51,8)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1233%" y="469" width="0.0796%" height="15" fill="rgb(245,48,4)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="479.50"></text></g><g><title>plugins_core::build::Build::save (3 samples, 0.24%)</title><rect x="85.0438%" y="533" width="0.2387%" height="15" fill="rgb(250,175,12)" fg:x="1069" fg:w="3"/><text x="85.2938%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.1233%" y="517" width="0.1591%" height="15" fill="rgb(237,95,40)" fg:x="1070" fg:w="2"/><text x="85.3733%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="85.2029%" y="501" width="0.0796%" height="15" fill="rgb(244,120,0)" fg:x="1071" fg:w="1"/><text x="85.4529%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="85.2029%" y="485" width="0.0796%" height="15" fill="rgb(241,19,42)" fg:x="1071" fg:w="1"/><text x="85.4529%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.64%)</title><rect x="84.7255%" y="565" width="0.6364%" height="15" fill="rgb(217,174,48)" fg:x="1065" fg:w="8"/><text x="84.9755%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="84.7255%" y="549" width="0.6364%" height="15" fill="rgb(239,36,38)" fg:x="1065" fg:w="8"/><text x="84.9755%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="85.2824%" y="533" width="0.0796%" height="15" fill="rgb(220,63,49)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.2824%" y="517" width="0.0796%" height="15" fill="rgb(240,101,13)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2824%" y="501" width="0.0796%" height="15" fill="rgb(209,184,51)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2824%" y="485" width="0.0796%" height="15" fill="rgb(206,136,39)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.4415%" y="485" width="0.0796%" height="15" fill="rgb(254,47,45)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="85.3620%" y="533" width="0.2387%" height="15" fill="rgb(252,103,20)" fg:x="1073" fg:w="3"/><text x="85.6120%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="85.3620%" y="517" width="0.2387%" height="15" fill="rgb(230,69,12)" fg:x="1073" fg:w="3"/><text x="85.6120%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.4415%" y="501" width="0.1591%" height="15" fill="rgb(219,2,28)" fg:x="1074" fg:w="2"/><text x="85.6915%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.5211%" y="485" width="0.0796%" height="15" fill="rgb(210,9,12)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5211%" y="469" width="0.0796%" height="15" fill="rgb(235,99,33)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.5211%" y="453" width="0.0796%" height="15" fill="rgb(230,11,38)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (4 samples, 0.32%)</title><rect x="85.3620%" y="549" width="0.3182%" height="15" fill="rgb(217,129,0)" fg:x="1073" fg:w="4"/><text x="85.6120%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="85.6006%" y="533" width="0.0796%" height="15" fill="rgb(222,198,4)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="85.6802%" y="533" width="0.1591%" height="15" fill="rgb(246,170,27)" fg:x="1077" fg:w="2"/><text x="85.9302%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="85.6802%" y="517" width="0.1591%" height="15" fill="rgb(229,17,28)" fg:x="1077" fg:w="2"/><text x="85.9302%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="85.7597%" y="501" width="0.0796%" height="15" fill="rgb(233,198,48)" fg:x="1078" fg:w="1"/><text x="86.0097%" y="511.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="85.6802%" y="549" width="0.2387%" height="15" fill="rgb(238,103,23)" fg:x="1077" fg:w="3"/><text x="85.9302%" y="559.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="85.8393%" y="533" width="0.0796%" height="15" fill="rgb(206,91,41)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.9189%" y="517" width="0.0796%" height="15" fill="rgb(227,34,25)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9189%" y="501" width="0.0796%" height="15" fill="rgb(210,110,44)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.9189%" y="533" width="0.1591%" height="15" fill="rgb(216,189,8)" fg:x="1080" fg:w="2"/><text x="86.1689%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="85.9984%" y="517" width="0.0796%" height="15" fill="rgb(234,9,46)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9984%" y="501" width="0.0796%" height="15" fill="rgb(251,200,5)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="86.1575%" y="517" width="0.1591%" height="15" fill="rgb(238,165,37)" fg:x="1083" fg:w="2"/><text x="86.4075%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.2371%" y="501" width="0.0796%" height="15" fill="rgb(232,77,38)" fg:x="1084" fg:w="1"/><text x="86.4871%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3166%" y="453" width="0.0796%" height="15" fill="rgb(253,179,33)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3166%" y="437" width="0.0796%" height="15" fill="rgb(240,13,35)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="86.4757%" y="389" width="0.2387%" height="15" fill="rgb(242,150,49)" fg:x="1087" fg:w="3"/><text x="86.7257%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="86.5553%" y="373" width="0.1591%" height="15" fill="rgb(237,176,28)" fg:x="1088" fg:w="2"/><text x="86.8053%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="86.5553%" y="357" width="0.1591%" height="15" fill="rgb(214,176,33)" fg:x="1088" fg:w="2"/><text x="86.8053%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="86.3166%" y="501" width="0.4773%" height="15" fill="rgb(214,25,12)" fg:x="1085" fg:w="6"/><text x="86.5666%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (6 samples, 0.48%)</title><rect x="86.3166%" y="485" width="0.4773%" height="15" fill="rgb(238,190,20)" fg:x="1085" fg:w="6"/><text x="86.5666%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (6 samples, 0.48%)</title><rect x="86.3166%" y="469" width="0.4773%" height="15" fill="rgb(208,11,19)" fg:x="1085" fg:w="6"/><text x="86.5666%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="86.3962%" y="453" width="0.3978%" height="15" fill="rgb(239,90,4)" fg:x="1086" fg:w="5"/><text x="86.6462%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="86.3962%" y="437" width="0.3978%" height="15" fill="rgb(248,110,3)" fg:x="1086" fg:w="5"/><text x="86.6462%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="86.4757%" y="421" width="0.3182%" height="15" fill="rgb(210,41,30)" fg:x="1087" fg:w="4"/><text x="86.7257%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="86.4757%" y="405" width="0.3182%" height="15" fill="rgb(239,36,8)" fg:x="1087" fg:w="4"/><text x="86.7257%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7144%" y="389" width="0.0796%" height="15" fill="rgb(237,201,47)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7144%" y="373" width="0.0796%" height="15" fill="rgb(224,140,29)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.7940%" y="469" width="0.0796%" height="15" fill="rgb(231,209,17)" fg:x="1091" fg:w="1"/><text x="87.0440%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="86.3166%" y="517" width="0.6364%" height="15" fill="rgb(249,196,1)" fg:x="1085" fg:w="8"/><text x="86.5666%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="86.7940%" y="501" width="0.1591%" height="15" fill="rgb(223,207,51)" fg:x="1091" fg:w="2"/><text x="87.0440%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.7940%" y="485" width="0.1591%" height="15" fill="rgb(210,14,40)" fg:x="1091" fg:w="2"/><text x="87.0440%" y="495.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="86.8735%" y="469" width="0.0796%" height="15" fill="rgb(250,20,52)" fg:x="1092" fg:w="1"/><text x="87.1235%" y="479.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (193 samples, 15.35%)</title><rect x="71.6786%" y="581" width="15.3540%" height="15" fill="rgb(241,46,11)" fg:x="901" fg:w="193"/><text x="71.9286%" y="591.50">&lt;tests::HoldingKeyInVess..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (21 samples, 1.67%)</title><rect x="85.3620%" y="565" width="1.6706%" height="15" fill="rgb(219,105,5)" fg:x="1073" fg:w="21"/><text x="85.6120%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (14 samples, 1.11%)</title><rect x="85.9189%" y="549" width="1.1138%" height="15" fill="rgb(252,77,35)" fg:x="1080" fg:w="14"/><text x="86.1689%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.95%)</title><rect x="86.0780%" y="533" width="0.9547%" height="15" fill="rgb(243,119,2)" fg:x="1082" fg:w="12"/><text x="86.3280%" y="543.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="86.9531%" y="517" width="0.0796%" height="15" fill="rgb(206,82,28)" fg:x="1093" fg:w="1"/><text x="87.2031%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0326%" y="581" width="0.0796%" height="15" fill="rgb(227,120,12)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="87.1122%" y="565" width="0.0796%" height="15" fill="rgb(229,134,41)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="575.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="87.1917%" y="549" width="0.0796%" height="15" fill="rgb(239,96,32)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="87.1917%" y="533" width="0.0796%" height="15" fill="rgb(225,46,27)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="87.1917%" y="517" width="0.0796%" height="15" fill="rgb(215,168,2)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="87.1917%" y="501" width="0.0796%" height="15" fill="rgb(207,170,52)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="87.1917%" y="485" width="0.0796%" height="15" fill="rgb(237,198,36)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="87.1917%" y="469" width="0.0796%" height="15" fill="rgb(213,27,14)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="87.1917%" y="453" width="0.0796%" height="15" fill="rgb(218,77,5)" fg:x="1096" fg:w="1"/><text x="87.4417%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="87.1917%" y="565" width="0.1591%" height="15" fill="rgb(230,219,39)" fg:x="1096" fg:w="2"/><text x="87.4417%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.2713%" y="549" width="0.0796%" height="15" fill="rgb(245,177,7)" fg:x="1097" fg:w="1"/><text x="87.5213%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.2713%" y="533" width="0.0796%" height="15" fill="rgb(246,44,46)" fg:x="1097" fg:w="1"/><text x="87.5213%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.2713%" y="517" width="0.0796%" height="15" fill="rgb(207,173,15)" fg:x="1097" fg:w="1"/><text x="87.5213%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.2713%" y="501" width="0.0796%" height="15" fill="rgb(245,170,50)" fg:x="1097" fg:w="1"/><text x="87.5213%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.6691%" y="421" width="0.0796%" height="15" fill="rgb(233,156,21)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.6691%" y="405" width="0.0796%" height="15" fill="rgb(253,146,27)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.6691%" y="389" width="0.0796%" height="15" fill="rgb(247,66,29)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6691%" y="373" width="0.0796%" height="15" fill="rgb(218,207,26)" fg:x="1102" fg:w="1"/><text x="87.9191%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="87.5895%" y="485" width="0.2387%" height="15" fill="rgb(234,93,26)" fg:x="1101" fg:w="3"/><text x="87.8395%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="87.6691%" y="469" width="0.1591%" height="15" fill="rgb(214,75,48)" fg:x="1102" fg:w="2"/><text x="87.9191%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="87.6691%" y="453" width="0.1591%" height="15" fill="rgb(229,119,22)" fg:x="1102" fg:w="2"/><text x="87.9191%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="87.6691%" y="437" width="0.1591%" height="15" fill="rgb(226,153,19)" fg:x="1102" fg:w="2"/><text x="87.9191%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="87.7486%" y="421" width="0.0796%" height="15" fill="rgb(220,204,36)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="87.8282%" y="469" width="0.2387%" height="15" fill="rgb(253,181,43)" fg:x="1104" fg:w="3"/><text x="88.0782%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="87.8282%" y="453" width="0.2387%" height="15" fill="rgb(211,41,51)" fg:x="1104" fg:w="3"/><text x="88.0782%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="87.8282%" y="437" width="0.2387%" height="15" fill="rgb(207,215,0)" fg:x="1104" fg:w="3"/><text x="88.0782%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.9077%" y="421" width="0.1591%" height="15" fill="rgb(212,153,10)" fg:x="1105" fg:w="2"/><text x="88.1577%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.9077%" y="405" width="0.1591%" height="15" fill="rgb(251,171,36)" fg:x="1105" fg:w="2"/><text x="88.1577%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.9873%" y="389" width="0.0796%" height="15" fill="rgb(225,219,41)" fg:x="1106" fg:w="1"/><text x="88.2373%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.9873%" y="373" width="0.0796%" height="15" fill="rgb(208,200,1)" fg:x="1106" fg:w="1"/><text x="88.2373%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.9873%" y="357" width="0.0796%" height="15" fill="rgb(206,75,47)" fg:x="1106" fg:w="1"/><text x="88.2373%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.0668%" y="453" width="0.0796%" height="15" fill="rgb(248,3,16)" fg:x="1107" fg:w="1"/><text x="88.3168%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="88.1464%" y="453" width="0.3182%" height="15" fill="rgb(242,157,36)" fg:x="1108" fg:w="4"/><text x="88.3964%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="88.2259%" y="437" width="0.2387%" height="15" fill="rgb(215,175,11)" fg:x="1109" fg:w="3"/><text x="88.4759%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="88.2259%" y="421" width="0.2387%" height="15" fill="rgb(252,222,22)" fg:x="1109" fg:w="3"/><text x="88.4759%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="88.2259%" y="405" width="0.2387%" height="15" fill="rgb(250,121,35)" fg:x="1109" fg:w="3"/><text x="88.4759%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="88.3055%" y="389" width="0.1591%" height="15" fill="rgb(233,120,49)" fg:x="1110" fg:w="2"/><text x="88.5555%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="88.3055%" y="373" width="0.1591%" height="15" fill="rgb(205,201,14)" fg:x="1110" fg:w="2"/><text x="88.5555%" y="383.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="88.3055%" y="357" width="0.1591%" height="15" fill="rgb(219,58,45)" fg:x="1110" fg:w="2"/><text x="88.5555%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.4646%" y="437" width="0.0796%" height="15" fill="rgb(251,65,12)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.4646%" y="421" width="0.0796%" height="15" fill="rgb(224,47,31)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.4646%" y="405" width="0.0796%" height="15" fill="rgb(233,74,26)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.4646%" y="389" width="0.0796%" height="15" fill="rgb(231,211,31)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.5442%" y="437" width="0.0796%" height="15" fill="rgb(239,167,5)" fg:x="1113" fg:w="1"/><text x="88.7942%" y="447.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="88.6237%" y="421" width="0.0796%" height="15" fill="rgb(241,85,0)" fg:x="1114" fg:w="1"/><text x="88.8737%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.7033%" y="421" width="0.0796%" height="15" fill="rgb(229,130,21)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.7033%" y="405" width="0.0796%" height="15" fill="rgb(254,84,49)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.7033%" y="389" width="0.0796%" height="15" fill="rgb(235,85,21)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7033%" y="373" width="0.0796%" height="15" fill="rgb(246,128,52)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.7033%" y="357" width="0.0796%" height="15" fill="rgb(243,114,49)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.7033%" y="341" width="0.0796%" height="15" fill="rgb(240,224,22)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.7033%" y="325" width="0.0796%" height="15" fill="rgb(247,201,52)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7828%" y="421" width="0.0796%" height="15" fill="rgb(231,70,45)" fg:x="1116" fg:w="1"/><text x="89.0328%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7828%" y="405" width="0.0796%" height="15" fill="rgb(217,215,20)" fg:x="1116" fg:w="1"/><text x="89.0328%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.6237%" y="437" width="0.3182%" height="15" fill="rgb(226,170,30)" fg:x="1114" fg:w="4"/><text x="88.8737%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.8624%" y="421" width="0.0796%" height="15" fill="rgb(220,190,43)" fg:x="1117" fg:w="1"/><text x="89.1124%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.8624%" y="405" width="0.0796%" height="15" fill="rgb(218,20,18)" fg:x="1117" fg:w="1"/><text x="89.1124%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="88.4646%" y="453" width="0.5569%" height="15" fill="rgb(245,37,26)" fg:x="1112" fg:w="7"/><text x="88.7146%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.9419%" y="437" width="0.0796%" height="15" fill="rgb(241,127,29)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.9419%" y="421" width="0.0796%" height="15" fill="rgb(241,33,26)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.9419%" y="405" width="0.0796%" height="15" fill="rgb(220,106,21)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.59%)</title><rect x="87.8282%" y="485" width="1.5911%" height="15" fill="rgb(225,125,35)" fg:x="1104" fg:w="20"/><text x="88.0782%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.35%)</title><rect x="88.0668%" y="469" width="1.3524%" height="15" fill="rgb(248,80,22)" fg:x="1107" fg:w="17"/><text x="88.3168%" y="479.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="89.0215%" y="453" width="0.3978%" height="15" fill="rgb(231,117,39)" fg:x="1119" fg:w="5"/><text x="89.2715%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="89.2601%" y="437" width="0.1591%" height="15" fill="rgb(239,183,16)" fg:x="1122" fg:w="2"/><text x="89.5101%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="89.2601%" y="421" width="0.1591%" height="15" fill="rgb(221,61,19)" fg:x="1122" fg:w="2"/><text x="89.5101%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.3397%" y="405" width="0.0796%" height="15" fill="rgb(239,196,44)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.3397%" y="389" width="0.0796%" height="15" fill="rgb(206,113,19)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.3397%" y="373" width="0.0796%" height="15" fill="rgb(245,114,12)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.4193%" y="485" width="0.1591%" height="15" fill="rgb(247,89,39)" fg:x="1124" fg:w="2"/><text x="89.6693%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="89.4193%" y="469" width="0.1591%" height="15" fill="rgb(213,85,14)" fg:x="1124" fg:w="2"/><text x="89.6693%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.4193%" y="453" width="0.1591%" height="15" fill="rgb(249,206,33)" fg:x="1124" fg:w="2"/><text x="89.6693%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4988%" y="437" width="0.0796%" height="15" fill="rgb(235,167,47)" fg:x="1125" fg:w="1"/><text x="89.7488%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.6579%" y="437" width="0.0796%" height="15" fill="rgb(217,177,16)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8170%" y="421" width="0.0796%" height="15" fill="rgb(250,228,29)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.8966%" y="405" width="0.0796%" height="15" fill="rgb(216,195,42)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="90.0557%" y="389" width="0.1591%" height="15" fill="rgb(232,192,32)" fg:x="1132" fg:w="2"/><text x="90.3057%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.1352%" y="373" width="0.0796%" height="15" fill="rgb(211,8,47)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.1352%" y="357" width="0.0796%" height="15" fill="rgb(251,201,9)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="89.5784%" y="453" width="0.7160%" height="15" fill="rgb(206,185,47)" fg:x="1126" fg:w="9"/><text x="89.8284%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="89.7375%" y="437" width="0.5569%" height="15" fill="rgb(245,54,32)" fg:x="1128" fg:w="7"/><text x="89.9875%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="89.8966%" y="421" width="0.3978%" height="15" fill="rgb(208,1,8)" fg:x="1130" fg:w="5"/><text x="90.1466%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.9761%" y="405" width="0.3182%" height="15" fill="rgb(228,57,24)" fg:x="1131" fg:w="4"/><text x="90.2261%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.2148%" y="389" width="0.0796%" height="15" fill="rgb(251,24,8)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2944%" y="453" width="0.0796%" height="15" fill="rgb(236,196,50)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2944%" y="437" width="0.0796%" height="15" fill="rgb(246,222,29)" fg:x="1135" fg:w="1"/><text x="90.5444%" y="447.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="90.3739%" y="453" width="0.1591%" height="15" fill="rgb(211,34,40)" fg:x="1136" fg:w="2"/><text x="90.6239%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="90.3739%" y="437" width="0.1591%" height="15" fill="rgb(210,66,51)" fg:x="1136" fg:w="2"/><text x="90.6239%" y="447.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="90.3739%" y="421" width="0.1591%" height="15" fill="rgb(250,56,43)" fg:x="1136" fg:w="2"/><text x="90.6239%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="90.4535%" y="405" width="0.0796%" height="15" fill="rgb(240,111,50)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="90.4535%" y="389" width="0.0796%" height="15" fill="rgb(209,117,13)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="90.6126%" y="389" width="0.0796%" height="15" fill="rgb(232,164,45)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.6126%" y="373" width="0.0796%" height="15" fill="rgb(205,69,32)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.6126%" y="357" width="0.0796%" height="15" fill="rgb(240,147,45)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.6126%" y="341" width="0.0796%" height="15" fill="rgb(221,94,48)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (15 samples, 1.19%)</title><rect x="89.5784%" y="469" width="1.1933%" height="15" fill="rgb(249,209,17)" fg:x="1126" fg:w="15"/><text x="89.8284%" y="479.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="90.5330%" y="453" width="0.2387%" height="15" fill="rgb(228,57,28)" fg:x="1138" fg:w="3"/><text x="90.7830%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="90.5330%" y="437" width="0.2387%" height="15" fill="rgb(250,133,26)" fg:x="1138" fg:w="3"/><text x="90.7830%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="90.5330%" y="421" width="0.2387%" height="15" fill="rgb(254,15,16)" fg:x="1138" fg:w="3"/><text x="90.7830%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.6126%" y="405" width="0.1591%" height="15" fill="rgb(209,147,42)" fg:x="1139" fg:w="2"/><text x="90.8626%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.6921%" y="389" width="0.0796%" height="15" fill="rgb(208,5,29)" fg:x="1140" fg:w="1"/><text x="90.9421%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.7717%" y="437" width="0.1591%" height="15" fill="rgb(250,73,31)" fg:x="1141" fg:w="2"/><text x="91.0217%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.8512%" y="421" width="0.0796%" height="15" fill="rgb(238,45,10)" fg:x="1142" fg:w="1"/><text x="91.1012%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="90.9308%" y="437" width="0.0796%" height="15" fill="rgb(214,104,5)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.9308%" y="421" width="0.0796%" height="15" fill="rgb(242,217,19)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.9308%" y="405" width="0.0796%" height="15" fill="rgb(246,113,27)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="91.0103%" y="437" width="0.0796%" height="15" fill="rgb(221,34,27)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="91.0899%" y="437" width="0.1591%" height="15" fill="rgb(246,109,6)" fg:x="1145" fg:w="2"/><text x="91.3399%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.0899%" y="421" width="0.1591%" height="15" fill="rgb(217,12,25)" fg:x="1145" fg:w="2"/><text x="91.3399%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.0899%" y="405" width="0.1591%" height="15" fill="rgb(250,195,5)" fg:x="1145" fg:w="2"/><text x="91.3399%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="91.3286%" y="389" width="0.2387%" height="15" fill="rgb(244,140,45)" fg:x="1148" fg:w="3"/><text x="91.5786%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.4081%" y="373" width="0.1591%" height="15" fill="rgb(230,64,14)" fg:x="1149" fg:w="2"/><text x="91.6581%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8059%" y="341" width="0.0796%" height="15" fill="rgb(206,27,27)" fg:x="1154" fg:w="1"/><text x="92.0559%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="91.5672%" y="389" width="0.4773%" height="15" fill="rgb(230,14,50)" fg:x="1151" fg:w="6"/><text x="91.8172%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="91.5672%" y="373" width="0.4773%" height="15" fill="rgb(237,172,14)" fg:x="1151" fg:w="6"/><text x="91.8172%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="91.7263%" y="357" width="0.3182%" height="15" fill="rgb(209,25,21)" fg:x="1153" fg:w="4"/><text x="91.9763%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.8854%" y="341" width="0.1591%" height="15" fill="rgb(248,148,22)" fg:x="1155" fg:w="2"/><text x="92.1354%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="91.9650%" y="325" width="0.0796%" height="15" fill="rgb(234,100,22)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.9650%" y="309" width="0.0796%" height="15" fill="rgb(210,20,30)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="91.9650%" y="293" width="0.0796%" height="15" fill="rgb(232,58,0)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.9650%" y="277" width="0.0796%" height="15" fill="rgb(221,68,13)" fg:x="1156" fg:w="1"/><text x="92.2150%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.2832%" y="357" width="0.1591%" height="15" fill="rgb(231,194,11)" fg:x="1160" fg:w="2"/><text x="92.5332%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3628%" y="341" width="0.0796%" height="15" fill="rgb(235,51,41)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.4423%" y="341" width="0.0796%" height="15" fill="rgb(240,50,32)" fg:x="1162" fg:w="1"/><text x="92.6923%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.43%)</title><rect x="91.2490%" y="405" width="1.4320%" height="15" fill="rgb(240,185,36)" fg:x="1147" fg:w="18"/><text x="91.4990%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="92.0446%" y="389" width="0.6364%" height="15" fill="rgb(211,168,15)" fg:x="1157" fg:w="8"/><text x="92.2946%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="92.2037%" y="373" width="0.4773%" height="15" fill="rgb(221,70,0)" fg:x="1159" fg:w="6"/><text x="92.4537%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="92.4423%" y="357" width="0.2387%" height="15" fill="rgb(205,21,33)" fg:x="1162" fg:w="3"/><text x="92.6923%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="92.5219%" y="341" width="0.1591%" height="15" fill="rgb(225,106,10)" fg:x="1163" fg:w="2"/><text x="92.7719%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.5219%" y="325" width="0.1591%" height="15" fill="rgb(236,200,50)" fg:x="1163" fg:w="2"/><text x="92.7719%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6014%" y="309" width="0.0796%" height="15" fill="rgb(249,93,23)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="319.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 1.99%)</title><rect x="90.7717%" y="469" width="1.9889%" height="15" fill="rgb(244,115,35)" fg:x="1141" fg:w="25"/><text x="91.0217%" y="479.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 1.99%)</title><rect x="90.7717%" y="453" width="1.9889%" height="15" fill="rgb(231,129,47)" fg:x="1141" fg:w="25"/><text x="91.0217%" y="463.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.51%)</title><rect x="91.2490%" y="437" width="1.5115%" height="15" fill="rgb(225,160,50)" fg:x="1147" fg:w="19"/><text x="91.4990%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (19 samples, 1.51%)</title><rect x="91.2490%" y="421" width="1.5115%" height="15" fill="rgb(218,135,23)" fg:x="1147" fg:w="19"/><text x="91.4990%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="92.6810%" y="405" width="0.0796%" height="15" fill="rgb(227,119,14)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.8401%" y="277" width="0.0796%" height="15" fill="rgb(242,138,13)" fg:x="1167" fg:w="1"/><text x="93.0901%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.8401%" y="261" width="0.0796%" height="15" fill="rgb(215,11,16)" fg:x="1167" fg:w="1"/><text x="93.0901%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.8401%" y="245" width="0.0796%" height="15" fill="rgb(234,170,50)" fg:x="1167" fg:w="1"/><text x="93.0901%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.8401%" y="229" width="0.0796%" height="15" fill="rgb(233,34,20)" fg:x="1167" fg:w="1"/><text x="93.0901%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.8401%" y="293" width="0.1591%" height="15" fill="rgb(237,100,45)" fg:x="1167" fg:w="2"/><text x="93.0901%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9196%" y="277" width="0.0796%" height="15" fill="rgb(231,184,36)" fg:x="1168" fg:w="1"/><text x="93.1696%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="92.8401%" y="325" width="0.2387%" height="15" fill="rgb(252,93,2)" fg:x="1167" fg:w="3"/><text x="93.0901%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.8401%" y="309" width="0.2387%" height="15" fill="rgb(248,176,47)" fg:x="1167" fg:w="3"/><text x="93.0901%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.9992%" y="293" width="0.0796%" height="15" fill="rgb(249,125,23)" fg:x="1169" fg:w="1"/><text x="93.2492%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9992%" y="277" width="0.0796%" height="15" fill="rgb(239,67,42)" fg:x="1169" fg:w="1"/><text x="93.2492%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.1583%" y="277" width="0.0796%" height="15" fill="rgb(244,162,4)" fg:x="1171" fg:w="1"/><text x="93.4083%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="93.2379%" y="277" width="0.1591%" height="15" fill="rgb(214,150,38)" fg:x="1172" fg:w="2"/><text x="93.4879%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="92.7605%" y="373" width="0.7160%" height="15" fill="rgb(228,211,28)" fg:x="1166" fg:w="9"/><text x="93.0105%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="92.8401%" y="357" width="0.6364%" height="15" fill="rgb(212,98,48)" fg:x="1167" fg:w="8"/><text x="93.0901%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="92.8401%" y="341" width="0.6364%" height="15" fill="rgb(213,45,13)" fg:x="1167" fg:w="8"/><text x="93.0901%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.0788%" y="325" width="0.3978%" height="15" fill="rgb(218,35,29)" fg:x="1170" fg:w="5"/><text x="93.3288%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="93.0788%" y="309" width="0.3978%" height="15" fill="rgb(244,13,3)" fg:x="1170" fg:w="5"/><text x="93.3288%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.0788%" y="293" width="0.3978%" height="15" fill="rgb(235,170,19)" fg:x="1170" fg:w="5"/><text x="93.3288%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3970%" y="277" width="0.0796%" height="15" fill="rgb(233,193,43)" fg:x="1174" fg:w="1"/><text x="93.6470%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3970%" y="261" width="0.0796%" height="15" fill="rgb(228,223,20)" fg:x="1174" fg:w="1"/><text x="93.6470%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3970%" y="245" width="0.0796%" height="15" fill="rgb(208,85,54)" fg:x="1174" fg:w="1"/><text x="93.6470%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.4765%" y="357" width="0.0796%" height="15" fill="rgb(254,14,45)" fg:x="1175" fg:w="1"/><text x="93.7265%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.95%)</title><rect x="92.7605%" y="405" width="0.9547%" height="15" fill="rgb(247,99,29)" fg:x="1166" fg:w="12"/><text x="93.0105%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.95%)</title><rect x="92.7605%" y="389" width="0.9547%" height="15" fill="rgb(225,180,54)" fg:x="1166" fg:w="12"/><text x="93.0105%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="93.4765%" y="373" width="0.2387%" height="15" fill="rgb(239,88,43)" fg:x="1175" fg:w="3"/><text x="93.7265%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.5561%" y="357" width="0.1591%" height="15" fill="rgb(209,47,11)" fg:x="1176" fg:w="2"/><text x="93.8061%" y="367.50"></text></g><g><title>engine::session::state::State::close (81 samples, 6.44%)</title><rect x="87.3508%" y="565" width="6.4439%" height="15" fill="rgb(219,179,23)" fg:x="1098" fg:w="81"/><text x="87.6008%" y="575.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (81 samples, 6.44%)</title><rect x="87.3508%" y="549" width="6.4439%" height="15" fill="rgb(213,183,19)" fg:x="1098" fg:w="81"/><text x="87.6008%" y="559.50">engine::..</text></g><g><title>core::iter::adapters::try_process (80 samples, 6.36%)</title><rect x="87.4304%" y="533" width="6.3644%" height="15" fill="rgb(210,11,9)" fg:x="1099" fg:w="80"/><text x="87.6804%" y="543.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (80 samples, 6.36%)</title><rect x="87.4304%" y="517" width="6.3644%" height="15" fill="rgb(239,194,16)" fg:x="1099" fg:w="80"/><text x="87.6804%" y="527.50">&lt;alloc::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (80 samples, 6.36%)</title><rect x="87.4304%" y="501" width="6.3644%" height="15" fill="rgb(246,23,50)" fg:x="1099" fg:w="80"/><text x="87.6804%" y="511.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (53 samples, 4.22%)</title><rect x="89.5784%" y="485" width="4.2164%" height="15" fill="rgb(245,10,41)" fg:x="1126" fg:w="53"/><text x="89.8284%" y="495.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (13 samples, 1.03%)</title><rect x="92.7605%" y="469" width="1.0342%" height="15" fill="rgb(228,43,24)" fg:x="1166" fg:w="13"/><text x="93.0105%" y="479.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.03%)</title><rect x="92.7605%" y="453" width="1.0342%" height="15" fill="rgb(220,151,0)" fg:x="1166" fg:w="13"/><text x="93.0105%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.03%)</title><rect x="92.7605%" y="437" width="1.0342%" height="15" fill="rgb(232,219,10)" fg:x="1166" fg:w="13"/><text x="93.0105%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.03%)</title><rect x="92.7605%" y="421" width="1.0342%" height="15" fill="rgb(227,217,48)" fg:x="1166" fg:w="13"/><text x="93.0105%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7152%" y="405" width="0.0796%" height="15" fill="rgb(210,66,35)" fg:x="1178" fg:w="1"/><text x="93.9652%" y="415.50"></text></g><g><title>engine::session::Session::close (85 samples, 6.76%)</title><rect x="87.1122%" y="581" width="6.7621%" height="15" fill="rgb(254,6,7)" fg:x="1095" fg:w="85"/><text x="87.3622%" y="591.50">engine::s..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="93.7947%" y="565" width="0.0796%" height="15" fill="rgb(235,222,42)" fg:x="1179" fg:w="1"/><text x="94.0447%" y="575.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="93.8743%" y="549" width="0.1591%" height="15" fill="rgb(245,126,5)" fg:x="1180" fg:w="2"/><text x="94.1243%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="93.8743%" y="533" width="0.1591%" height="15" fill="rgb(215,73,17)" fg:x="1180" fg:w="2"/><text x="94.1243%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::PerformAction&gt; (2 samples, 0.16%)</title><rect x="94.0334%" y="533" width="0.1591%" height="15" fill="rgb(219,198,52)" fg:x="1182" fg:w="2"/><text x="94.2834%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::logs::SessionSubscriber&gt; (1 samples, 0.08%)</title><rect x="94.2721%" y="517" width="0.0796%" height="15" fill="rgb(217,159,18)" fg:x="1185" fg:w="1"/><text x="94.5221%" y="527.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (5 samples, 0.40%)</title><rect x="94.3516%" y="517" width="0.3978%" height="15" fill="rgb(212,177,18)" fg:x="1186" fg:w="5"/><text x="94.6016%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (5 samples, 0.40%)</title><rect x="94.3516%" y="501" width="0.3978%" height="15" fill="rgb(241,10,11)" fg:x="1186" fg:w="5"/><text x="94.6016%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (5 samples, 0.40%)</title><rect x="94.3516%" y="485" width="0.3978%" height="15" fill="rgb(232,114,35)" fg:x="1186" fg:w="5"/><text x="94.6016%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (5 samples, 0.40%)</title><rect x="94.3516%" y="469" width="0.3978%" height="15" fill="rgb(238,222,8)" fg:x="1186" fg:w="5"/><text x="94.6016%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="94.7494%" y="405" width="0.0796%" height="15" fill="rgb(251,153,44)" fg:x="1191" fg:w="1"/><text x="94.9994%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="94.7494%" y="389" width="0.0796%" height="15" fill="rgb(210,140,51)" fg:x="1191" fg:w="1"/><text x="94.9994%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.7494%" y="373" width="0.0796%" height="15" fill="rgb(222,63,0)" fg:x="1191" fg:w="1"/><text x="94.9994%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.7494%" y="357" width="0.0796%" height="15" fill="rgb(240,18,40)" fg:x="1191" fg:w="1"/><text x="94.9994%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.8290%" y="341" width="0.0796%" height="15" fill="rgb(237,88,16)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="94.8290%" y="325" width="0.0796%" height="15" fill="rgb(251,117,13)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.1472%" y="149" width="0.0796%" height="15" fill="rgb(251,228,8)" fg:x="1196" fg:w="1"/><text x="95.3972%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.1472%" y="133" width="0.0796%" height="15" fill="rgb(205,107,49)" fg:x="1196" fg:w="1"/><text x="95.3972%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="95.1472%" y="117" width="0.0796%" height="15" fill="rgb(238,72,41)" fg:x="1196" fg:w="1"/><text x="95.3972%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.1472%" y="101" width="0.0796%" height="15" fill="rgb(248,183,52)" fg:x="1196" fg:w="1"/><text x="95.3972%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.1472%" y="85" width="0.0796%" height="15" fill="rgb(215,58,20)" fg:x="1196" fg:w="1"/><text x="95.3972%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.0676%" y="245" width="0.2387%" height="15" fill="rgb(209,49,13)" fg:x="1195" fg:w="3"/><text x="95.3176%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.0676%" y="229" width="0.2387%" height="15" fill="rgb(208,113,17)" fg:x="1195" fg:w="3"/><text x="95.3176%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="95.0676%" y="213" width="0.2387%" height="15" fill="rgb(208,14,22)" fg:x="1195" fg:w="3"/><text x="95.3176%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.0676%" y="197" width="0.2387%" height="15" fill="rgb(222,95,2)" fg:x="1195" fg:w="3"/><text x="95.3176%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.1472%" y="181" width="0.1591%" height="15" fill="rgb(253,180,37)" fg:x="1196" fg:w="2"/><text x="95.3972%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.1472%" y="165" width="0.1591%" height="15" fill="rgb(250,81,33)" fg:x="1196" fg:w="2"/><text x="95.3972%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="95.2267%" y="149" width="0.0796%" height="15" fill="rgb(251,151,41)" fg:x="1197" fg:w="1"/><text x="95.4767%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.3063%" y="245" width="0.0796%" height="15" fill="rgb(210,135,17)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.3063%" y="229" width="0.0796%" height="15" fill="rgb(239,21,29)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.3063%" y="213" width="0.0796%" height="15" fill="rgb(231,215,16)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.3063%" y="197" width="0.0796%" height="15" fill="rgb(239,151,54)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="207.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.56%)</title><rect x="94.9085%" y="341" width="0.5569%" height="15" fill="rgb(222,122,38)" fg:x="1193" fg:w="7"/><text x="95.1585%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="94.9085%" y="325" width="0.5569%" height="15" fill="rgb(243,128,1)" fg:x="1193" fg:w="7"/><text x="95.1585%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="94.9085%" y="309" width="0.5569%" height="15" fill="rgb(225,74,21)" fg:x="1193" fg:w="7"/><text x="95.1585%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="95.0676%" y="293" width="0.3978%" height="15" fill="rgb(216,210,10)" fg:x="1195" fg:w="5"/><text x="95.3176%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="95.0676%" y="277" width="0.3978%" height="15" fill="rgb(228,76,19)" fg:x="1195" fg:w="5"/><text x="95.3176%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="95.0676%" y="261" width="0.3978%" height="15" fill="rgb(236,80,34)" fg:x="1195" fg:w="5"/><text x="95.3176%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3858%" y="245" width="0.0796%" height="15" fill="rgb(225,173,23)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.3858%" y="229" width="0.0796%" height="15" fill="rgb(253,38,1)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="95.3858%" y="213" width="0.0796%" height="15" fill="rgb(206,155,35)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3858%" y="197" width="0.0796%" height="15" fill="rgb(254,27,53)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.3858%" y="181" width="0.0796%" height="15" fill="rgb(225,52,41)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.5449%" y="181" width="0.0796%" height="15" fill="rgb(244,53,18)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.5449%" y="165" width="0.0796%" height="15" fill="rgb(254,206,48)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="175.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (12 samples, 0.95%)</title><rect x="94.7494%" y="437" width="0.9547%" height="15" fill="rgb(236,182,23)" fg:x="1191" fg:w="12"/><text x="94.9994%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (12 samples, 0.95%)</title><rect x="94.7494%" y="421" width="0.9547%" height="15" fill="rgb(236,191,37)" fg:x="1191" fg:w="12"/><text x="94.9994%" y="431.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (11 samples, 0.88%)</title><rect x="94.8290%" y="405" width="0.8751%" height="15" fill="rgb(245,53,8)" fg:x="1192" fg:w="11"/><text x="95.0790%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (11 samples, 0.88%)</title><rect x="94.8290%" y="389" width="0.8751%" height="15" fill="rgb(245,147,9)" fg:x="1192" fg:w="11"/><text x="95.0790%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (11 samples, 0.88%)</title><rect x="94.8290%" y="373" width="0.8751%" height="15" fill="rgb(218,24,48)" fg:x="1192" fg:w="11"/><text x="95.0790%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="94.8290%" y="357" width="0.8751%" height="15" fill="rgb(254,23,9)" fg:x="1192" fg:w="11"/><text x="95.0790%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="95.4654%" y="341" width="0.2387%" height="15" fill="rgb(244,105,9)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="351.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="95.4654%" y="325" width="0.2387%" height="15" fill="rgb(212,142,22)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.4654%" y="309" width="0.2387%" height="15" fill="rgb(221,114,49)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.4654%" y="293" width="0.2387%" height="15" fill="rgb(223,210,25)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.4654%" y="277" width="0.2387%" height="15" fill="rgb(235,162,44)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.4654%" y="261" width="0.2387%" height="15" fill="rgb(237,65,45)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.5449%" y="245" width="0.1591%" height="15" fill="rgb(208,79,9)" fg:x="1201" fg:w="2"/><text x="95.7949%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.5449%" y="229" width="0.1591%" height="15" fill="rgb(215,228,8)" fg:x="1201" fg:w="2"/><text x="95.7949%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.5449%" y="213" width="0.1591%" height="15" fill="rgb(205,185,17)" fg:x="1201" fg:w="2"/><text x="95.7949%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.5449%" y="197" width="0.1591%" height="15" fill="rgb(213,62,36)" fg:x="1201" fg:w="2"/><text x="95.7949%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6245%" y="181" width="0.0796%" height="15" fill="rgb(209,34,9)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.7836%" y="373" width="0.0796%" height="15" fill="rgb(246,151,27)" fg:x="1204" fg:w="1"/><text x="96.0336%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.7836%" y="357" width="0.0796%" height="15" fill="rgb(218,206,3)" fg:x="1204" fg:w="1"/><text x="96.0336%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.0223%" y="325" width="0.0796%" height="15" fill="rgb(242,202,1)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.0223%" y="309" width="0.0796%" height="15" fill="rgb(227,185,16)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.0223%" y="293" width="0.0796%" height="15" fill="rgb(241,1,14)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.0223%" y="277" width="0.0796%" height="15" fill="rgb(212,113,25)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.0223%" y="261" width="0.0796%" height="15" fill="rgb(247,37,43)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.0223%" y="245" width="0.0796%" height="15" fill="rgb(226,54,8)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.0223%" y="229" width="0.0796%" height="15" fill="rgb(251,205,25)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="239.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="96.0223%" y="357" width="0.2387%" height="15" fill="rgb(246,87,35)" fg:x="1207" fg:w="3"/><text x="96.2723%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.0223%" y="341" width="0.2387%" height="15" fill="rgb(251,145,46)" fg:x="1207" fg:w="3"/><text x="96.2723%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.1018%" y="325" width="0.1591%" height="15" fill="rgb(210,210,33)" fg:x="1208" fg:w="2"/><text x="96.3518%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.1018%" y="309" width="0.1591%" height="15" fill="rgb(221,151,11)" fg:x="1208" fg:w="2"/><text x="96.3518%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2609%" y="293" width="0.0796%" height="15" fill="rgb(208,160,28)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2609%" y="277" width="0.0796%" height="15" fill="rgb(243,69,29)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2609%" y="261" width="0.0796%" height="15" fill="rgb(224,144,4)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2609%" y="245" width="0.0796%" height="15" fill="rgb(211,140,38)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2609%" y="229" width="0.0796%" height="15" fill="rgb(252,189,15)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2609%" y="213" width="0.0796%" height="15" fill="rgb(251,175,23)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2609%" y="197" width="0.0796%" height="15" fill="rgb(212,184,11)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.2609%" y="181" width="0.0796%" height="15" fill="rgb(217,205,6)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.2609%" y="165" width="0.0796%" height="15" fill="rgb(235,45,45)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.2609%" y="149" width="0.0796%" height="15" fill="rgb(211,157,53)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.2609%" y="133" width="0.0796%" height="15" fill="rgb(212,13,8)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.2609%" y="117" width="0.0796%" height="15" fill="rgb(218,80,36)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.2609%" y="101" width="0.0796%" height="15" fill="rgb(211,123,43)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.2609%" y="85" width="0.0796%" height="15" fill="rgb(206,165,2)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.2609%" y="69" width="0.0796%" height="15" fill="rgb(248,63,35)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.2609%" y="53" width="0.0796%" height="15" fill="rgb(219,133,41)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.2609%" y="37" width="0.0796%" height="15" fill="rgb(206,175,46)" fg:x="1210" fg:w="1"/><text x="96.5109%" y="47.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.4200%" y="197" width="0.0796%" height="15" fill="rgb(224,41,35)" fg:x="1212" fg:w="1"/><text x="96.6700%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4200%" y="181" width="0.0796%" height="15" fill="rgb(226,113,24)" fg:x="1212" fg:w="1"/><text x="96.6700%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4200%" y="165" width="0.0796%" height="15" fill="rgb(219,51,41)" fg:x="1212" fg:w="1"/><text x="96.6700%" y="175.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="96.3405%" y="293" width="0.2387%" height="15" fill="rgb(220,145,47)" fg:x="1211" fg:w="3"/><text x="96.5905%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.3405%" y="277" width="0.2387%" height="15" fill="rgb(239,121,47)" fg:x="1211" fg:w="3"/><text x="96.5905%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.3405%" y="261" width="0.2387%" height="15" fill="rgb(207,60,40)" fg:x="1211" fg:w="3"/><text x="96.5905%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="96.3405%" y="245" width="0.2387%" height="15" fill="rgb(224,229,11)" fg:x="1211" fg:w="3"/><text x="96.5905%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.3405%" y="229" width="0.2387%" height="15" fill="rgb(252,28,32)" fg:x="1211" fg:w="3"/><text x="96.5905%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.4200%" y="213" width="0.1591%" height="15" fill="rgb(207,52,49)" fg:x="1212" fg:w="2"/><text x="96.6700%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4996%" y="197" width="0.0796%" height="15" fill="rgb(243,51,50)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4996%" y="181" width="0.0796%" height="15" fill="rgb(212,92,21)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.4996%" y="165" width="0.0796%" height="15" fill="rgb(230,183,50)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4996%" y="149" width="0.0796%" height="15" fill="rgb(225,48,9)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.5792%" y="229" width="0.0796%" height="15" fill="rgb(254,44,4)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5792%" y="213" width="0.0796%" height="15" fill="rgb(252,128,37)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.5792%" y="197" width="0.0796%" height="15" fill="rgb(227,178,8)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5792%" y="181" width="0.0796%" height="15" fill="rgb(205,206,32)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.5792%" y="165" width="0.0796%" height="15" fill="rgb(220,218,22)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5792%" y="149" width="0.0796%" height="15" fill="rgb(236,41,28)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.5792%" y="133" width="0.0796%" height="15" fill="rgb(219,37,7)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.5792%" y="117" width="0.0796%" height="15" fill="rgb(206,160,15)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="127.50"></text></g><g><title>plugins_core::tools::contained_by (11 samples, 0.88%)</title><rect x="95.8632%" y="373" width="0.8751%" height="15" fill="rgb(208,82,21)" fg:x="1205" fg:w="11"/><text x="96.1132%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (6 samples, 0.48%)</title><rect x="96.2609%" y="357" width="0.4773%" height="15" fill="rgb(226,130,25)" fg:x="1210" fg:w="6"/><text x="96.5109%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (6 samples, 0.48%)</title><rect x="96.2609%" y="341" width="0.4773%" height="15" fill="rgb(212,72,24)" fg:x="1210" fg:w="6"/><text x="96.5109%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (6 samples, 0.48%)</title><rect x="96.2609%" y="325" width="0.4773%" height="15" fill="rgb(206,28,16)" fg:x="1210" fg:w="6"/><text x="96.5109%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="96.2609%" y="309" width="0.4773%" height="15" fill="rgb(249,41,5)" fg:x="1210" fg:w="6"/><text x="96.5109%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="96.5792%" y="293" width="0.1591%" height="15" fill="rgb(233,96,48)" fg:x="1214" fg:w="2"/><text x="96.8292%" y="303.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="96.5792%" y="277" width="0.1591%" height="15" fill="rgb(240,198,11)" fg:x="1214" fg:w="2"/><text x="96.8292%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.5792%" y="261" width="0.1591%" height="15" fill="rgb(209,175,35)" fg:x="1214" fg:w="2"/><text x="96.8292%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.5792%" y="245" width="0.1591%" height="15" fill="rgb(214,40,51)" fg:x="1214" fg:w="2"/><text x="96.8292%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6587%" y="229" width="0.0796%" height="15" fill="rgb(252,56,4)" fg:x="1215" fg:w="1"/><text x="96.9087%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.7383%" y="341" width="0.2387%" height="15" fill="rgb(219,131,5)" fg:x="1216" fg:w="3"/><text x="96.9883%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="96.7383%" y="325" width="0.2387%" height="15" fill="rgb(223,67,53)" fg:x="1216" fg:w="3"/><text x="96.9883%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.8178%" y="309" width="0.1591%" height="15" fill="rgb(227,154,8)" fg:x="1217" fg:w="2"/><text x="97.0678%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8974%" y="293" width="0.0796%" height="15" fill="rgb(216,174,51)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="303.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="96.7383%" y="357" width="0.3978%" height="15" fill="rgb(239,60,34)" fg:x="1216" fg:w="5"/><text x="96.9883%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.9769%" y="341" width="0.1591%" height="15" fill="rgb(236,165,48)" fg:x="1219" fg:w="2"/><text x="97.2269%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9769%" y="325" width="0.1591%" height="15" fill="rgb(210,37,26)" fg:x="1219" fg:w="2"/><text x="97.2269%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.0565%" y="309" width="0.0796%" height="15" fill="rgb(211,3,17)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0565%" y="293" width="0.0796%" height="15" fill="rgb(234,88,49)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.0565%" y="277" width="0.0796%" height="15" fill="rgb(233,40,17)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="287.50"></text></g><g><title>plugins_core::tools::occupied_by (6 samples, 0.48%)</title><rect x="96.7383%" y="373" width="0.4773%" height="15" fill="rgb(235,127,31)" fg:x="1216" fg:w="6"/><text x="96.9883%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="97.1360%" y="357" width="0.0796%" height="15" fill="rgb(248,167,17)" fg:x="1221" fg:w="1"/><text x="97.3860%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="97.1360%" y="341" width="0.0796%" height="15" fill="rgb(218,179,8)" fg:x="1221" fg:w="1"/><text x="97.3860%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (20 samples, 1.59%)</title><rect x="95.7041%" y="389" width="1.5911%" height="15" fill="rgb(216,92,14)" fg:x="1203" fg:w="20"/><text x="95.9541%" y="399.50"></text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="97.2156%" y="373" width="0.0796%" height="15" fill="rgb(221,198,46)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.2156%" y="357" width="0.0796%" height="15" fill="rgb(244,7,25)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="97.2156%" y="341" width="0.0796%" height="15" fill="rgb(233,75,6)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="351.50"></text></g><g><title>engine::session::Session::captured (42 samples, 3.34%)</title><rect x="94.0334%" y="549" width="3.3413%" height="15" fill="rgb(240,189,41)" fg:x="1182" fg:w="42"/><text x="94.2834%" y="559.50">eng..</text></g><g><title>engine::session::logs::capture (40 samples, 3.18%)</title><rect x="94.1925%" y="533" width="3.1822%" height="15" fill="rgb(237,157,21)" fg:x="1184" fg:w="40"/><text x="94.4425%" y="543.50">eng..</text></g><g><title>tracing_core::dispatcher::with_default (33 samples, 2.63%)</title><rect x="94.7494%" y="517" width="2.6253%" height="15" fill="rgb(210,136,49)" fg:x="1191" fg:w="33"/><text x="94.9994%" y="527.50">tr..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (33 samples, 2.63%)</title><rect x="94.7494%" y="501" width="2.6253%" height="15" fill="rgb(210,68,29)" fg:x="1191" fg:w="33"/><text x="94.9994%" y="511.50">&lt;e..</text></g><g><title>kernel::plugins::mw::apply_middleware (33 samples, 2.63%)</title><rect x="94.7494%" y="485" width="2.6253%" height="15" fill="rgb(247,207,20)" fg:x="1191" fg:w="33"/><text x="94.9994%" y="495.50">ke..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (33 samples, 2.63%)</title><rect x="94.7494%" y="469" width="2.6253%" height="15" fill="rgb(224,73,48)" fg:x="1191" fg:w="33"/><text x="94.9994%" y="479.50">ke..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (33 samples, 2.63%)</title><rect x="94.7494%" y="453" width="2.6253%" height="15" fill="rgb(215,136,47)" fg:x="1191" fg:w="33"/><text x="94.9994%" y="463.50">&lt;e..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (21 samples, 1.67%)</title><rect x="95.7041%" y="437" width="1.6706%" height="15" fill="rgb(232,222,16)" fg:x="1203" fg:w="21"/><text x="95.9541%" y="447.50"></text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (21 samples, 1.67%)</title><rect x="95.7041%" y="421" width="1.6706%" height="15" fill="rgb(249,202,47)" fg:x="1203" fg:w="21"/><text x="95.9541%" y="431.50"></text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (21 samples, 1.67%)</title><rect x="95.7041%" y="405" width="1.6706%" height="15" fill="rgb(236,56,8)" fg:x="1203" fg:w="21"/><text x="95.9541%" y="415.50"></text></g><g><title>plugins_rune::sources::load_sources_from_entity (1 samples, 0.08%)</title><rect x="97.2951%" y="389" width="0.0796%" height="15" fill="rgb(222,6,3)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3747%" y="453" width="0.0796%" height="15" fill="rgb(254,222,28)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3747%" y="437" width="0.0796%" height="15" fill="rgb(219,57,23)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.3747%" y="421" width="0.0796%" height="15" fill="rgb(251,106,48)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.3747%" y="405" width="0.0796%" height="15" fill="rgb(242,2,23)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.3747%" y="389" width="0.0796%" height="15" fill="rgb(212,109,31)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.3747%" y="501" width="0.1591%" height="15" fill="rgb(241,9,22)" fg:x="1224" fg:w="2"/><text x="97.6247%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.3747%" y="485" width="0.1591%" height="15" fill="rgb(209,64,27)" fg:x="1224" fg:w="2"/><text x="97.6247%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.3747%" y="469" width="0.1591%" height="15" fill="rgb(248,13,44)" fg:x="1224" fg:w="2"/><text x="97.6247%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4543%" y="453" width="0.0796%" height="15" fill="rgb(213,86,6)" fg:x="1225" fg:w="1"/><text x="97.7043%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4543%" y="437" width="0.0796%" height="15" fill="rgb(247,11,18)" fg:x="1225" fg:w="1"/><text x="97.7043%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7725%" y="357" width="0.0796%" height="15" fill="rgb(252,31,11)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="97.5338%" y="501" width="0.3978%" height="15" fill="rgb(215,63,51)" fg:x="1226" fg:w="5"/><text x="97.7838%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="97.5338%" y="485" width="0.3978%" height="15" fill="rgb(222,180,4)" fg:x="1226" fg:w="5"/><text x="97.7838%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="97.5338%" y="469" width="0.3978%" height="15" fill="rgb(233,4,23)" fg:x="1226" fg:w="5"/><text x="97.7838%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="97.5338%" y="453" width="0.3978%" height="15" fill="rgb(230,116,22)" fg:x="1226" fg:w="5"/><text x="97.7838%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="97.5338%" y="437" width="0.3978%" height="15" fill="rgb(222,20,14)" fg:x="1226" fg:w="5"/><text x="97.7838%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="97.6134%" y="421" width="0.3182%" height="15" fill="rgb(210,176,43)" fg:x="1227" fg:w="4"/><text x="97.8634%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="97.6134%" y="405" width="0.3182%" height="15" fill="rgb(219,67,32)" fg:x="1227" fg:w="4"/><text x="97.8634%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="97.6929%" y="389" width="0.2387%" height="15" fill="rgb(228,91,39)" fg:x="1228" fg:w="3"/><text x="97.9429%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.7725%" y="373" width="0.1591%" height="15" fill="rgb(254,63,14)" fg:x="1229" fg:w="2"/><text x="98.0225%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8520%" y="357" width="0.0796%" height="15" fill="rgb(216,171,39)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8520%" y="341" width="0.0796%" height="15" fill="rgb(248,68,25)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8520%" y="325" width="0.0796%" height="15" fill="rgb(239,63,16)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8520%" y="309" width="0.0796%" height="15" fill="rgb(225,111,43)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8520%" y="293" width="0.0796%" height="15" fill="rgb(246,165,17)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8520%" y="277" width="0.0796%" height="15" fill="rgb(208,124,1)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="287.50"></text></g><g><title>engine::session::internal::Added::find_refs (8 samples, 0.64%)</title><rect x="97.3747%" y="533" width="0.6364%" height="15" fill="rgb(234,147,33)" fg:x="1224" fg:w="8"/><text x="97.6247%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="97.3747%" y="517" width="0.6364%" height="15" fill="rgb(240,86,30)" fg:x="1224" fg:w="8"/><text x="97.6247%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9316%" y="501" width="0.0796%" height="15" fill="rgb(237,34,51)" fg:x="1231" fg:w="1"/><text x="98.1816%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9316%" y="485" width="0.0796%" height="15" fill="rgb(232,131,41)" fg:x="1231" fg:w="1"/><text x="98.1816%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.9316%" y="469" width="0.0796%" height="15" fill="rgb(227,129,53)" fg:x="1231" fg:w="1"/><text x="98.1816%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0111%" y="517" width="0.1591%" height="15" fill="rgb(230,90,35)" fg:x="1232" fg:w="2"/><text x="98.2611%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0111%" y="501" width="0.1591%" height="15" fill="rgb(248,88,27)" fg:x="1232" fg:w="2"/><text x="98.2611%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0111%" y="485" width="0.1591%" height="15" fill="rgb(223,18,17)" fg:x="1232" fg:w="2"/><text x="98.2611%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0907%" y="469" width="0.0796%" height="15" fill="rgb(241,11,10)" fg:x="1233" fg:w="1"/><text x="98.3407%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="98.1702%" y="517" width="0.0796%" height="15" fill="rgb(232,111,52)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1702%" y="501" width="0.0796%" height="15" fill="rgb(228,67,8)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1702%" y="485" width="0.0796%" height="15" fill="rgb(251,168,31)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.1702%" y="469" width="0.0796%" height="15" fill="rgb(249,164,11)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1702%" y="453" width="0.0796%" height="15" fill="rgb(239,81,9)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1702%" y="437" width="0.0796%" height="15" fill="rgb(222,145,38)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1702%" y="421" width="0.0796%" height="15" fill="rgb(238,80,54)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.2498%" y="469" width="0.0796%" height="15" fill="rgb(237,116,16)" fg:x="1235" fg:w="1"/><text x="98.4998%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3294%" y="469" width="0.0796%" height="15" fill="rgb(218,135,19)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3294%" y="453" width="0.0796%" height="15" fill="rgb(216,207,44)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3294%" y="437" width="0.0796%" height="15" fill="rgb(226,152,40)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.4089%" y="389" width="0.0796%" height="15" fill="rgb(219,98,35)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.4089%" y="421" width="0.1591%" height="15" fill="rgb(222,136,46)" fg:x="1237" fg:w="2"/><text x="98.6589%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4089%" y="405" width="0.1591%" height="15" fill="rgb(222,71,8)" fg:x="1237" fg:w="2"/><text x="98.6589%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4885%" y="389" width="0.0796%" height="15" fill="rgb(209,89,53)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.48%)</title><rect x="98.2498%" y="517" width="0.4773%" height="15" fill="rgb(210,97,51)" fg:x="1235" fg:w="6"/><text x="98.4998%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="98.2498%" y="501" width="0.4773%" height="15" fill="rgb(248,65,21)" fg:x="1235" fg:w="6"/><text x="98.4998%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="98.2498%" y="485" width="0.4773%" height="15" fill="rgb(222,5,31)" fg:x="1235" fg:w="6"/><text x="98.4998%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.4089%" y="469" width="0.3182%" height="15" fill="rgb(241,16,30)" fg:x="1237" fg:w="4"/><text x="98.6589%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.4089%" y="453" width="0.3182%" height="15" fill="rgb(215,86,30)" fg:x="1237" fg:w="4"/><text x="98.6589%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.4089%" y="437" width="0.3182%" height="15" fill="rgb(235,26,44)" fg:x="1237" fg:w="4"/><text x="98.6589%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5680%" y="421" width="0.1591%" height="15" fill="rgb(228,147,14)" fg:x="1239" fg:w="2"/><text x="98.8180%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5680%" y="405" width="0.1591%" height="15" fill="rgb(253,38,50)" fg:x="1239" fg:w="2"/><text x="98.8180%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.5680%" y="389" width="0.1591%" height="15" fill="rgb(251,151,16)" fg:x="1239" fg:w="2"/><text x="98.8180%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5680%" y="373" width="0.1591%" height="15" fill="rgb(224,64,19)" fg:x="1239" fg:w="2"/><text x="98.8180%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5680%" y="357" width="0.1591%" height="15" fill="rgb(235,214,47)" fg:x="1239" fg:w="2"/><text x="98.8180%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.6476%" y="341" width="0.0796%" height="15" fill="rgb(218,15,19)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="351.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="98.7271%" y="517" width="0.0796%" height="15" fill="rgb(247,209,3)" fg:x="1241" fg:w="1"/><text x="98.9771%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8067%" y="421" width="0.1591%" height="15" fill="rgb(217,29,2)" fg:x="1242" fg:w="2"/><text x="99.0567%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8067%" y="405" width="0.1591%" height="15" fill="rgb(234,9,9)" fg:x="1242" fg:w="2"/><text x="99.0567%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8067%" y="389" width="0.1591%" height="15" fill="rgb(207,43,14)" fg:x="1242" fg:w="2"/><text x="99.0567%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8067%" y="373" width="0.1591%" height="15" fill="rgb(216,219,36)" fg:x="1242" fg:w="2"/><text x="99.0567%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8067%" y="357" width="0.1591%" height="15" fill="rgb(238,12,26)" fg:x="1242" fg:w="2"/><text x="99.0567%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8862%" y="341" width="0.0796%" height="15" fill="rgb(226,67,30)" fg:x="1243" fg:w="1"/><text x="99.1362%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8862%" y="325" width="0.0796%" height="15" fill="rgb(229,154,7)" fg:x="1243" fg:w="1"/><text x="99.1362%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (21 samples, 1.67%)</title><rect x="97.3747%" y="549" width="1.6706%" height="15" fill="rgb(249,90,18)" fg:x="1224" fg:w="21"/><text x="97.6247%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.03%)</title><rect x="98.0111%" y="533" width="1.0342%" height="15" fill="rgb(223,53,15)" fg:x="1232" fg:w="13"/><text x="98.2611%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="98.8067%" y="517" width="0.2387%" height="15" fill="rgb(253,86,38)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="98.8067%" y="501" width="0.2387%" height="15" fill="rgb(222,198,9)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.8067%" y="485" width="0.2387%" height="15" fill="rgb(240,146,25)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.8067%" y="469" width="0.2387%" height="15" fill="rgb(225,38,10)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.8067%" y="453" width="0.2387%" height="15" fill="rgb(246,93,4)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.8067%" y="437" width="0.2387%" height="15" fill="rgb(222,55,18)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.9658%" y="421" width="0.0796%" height="15" fill="rgb(233,137,48)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.9658%" y="405" width="0.0796%" height="15" fill="rgb(214,8,54)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.0453%" y="517" width="0.1591%" height="15" fill="rgb(206,75,4)" fg:x="1245" fg:w="2"/><text x="99.2953%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1249%" y="501" width="0.0796%" height="15" fill="rgb(238,171,14)" fg:x="1246" fg:w="1"/><text x="99.3749%" y="511.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="99.0453%" y="549" width="0.2387%" height="15" fill="rgb(233,70,41)" fg:x="1245" fg:w="3"/><text x="99.2953%" y="559.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="99.0453%" y="533" width="0.2387%" height="15" fill="rgb(214,68,36)" fg:x="1245" fg:w="3"/><text x="99.2953%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2045%" y="517" width="0.0796%" height="15" fill="rgb(223,29,5)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2045%" y="501" width="0.0796%" height="15" fill="rgb(251,22,40)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3636%" y="485" width="0.0796%" height="15" fill="rgb(210,67,41)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3636%" y="469" width="0.0796%" height="15" fill="rgb(225,177,31)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3636%" y="453" width="0.0796%" height="15" fill="rgb(221,229,11)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.3636%" y="437" width="0.0796%" height="15" fill="rgb(247,172,52)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.3636%" y="501" width="0.1591%" height="15" fill="rgb(212,73,19)" fg:x="1249" fg:w="2"/><text x="99.6136%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4431%" y="485" width="0.0796%" height="15" fill="rgb(244,7,46)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4431%" y="469" width="0.0796%" height="15" fill="rgb(230,113,20)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.4431%" y="453" width="0.0796%" height="15" fill="rgb(209,97,30)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.4431%" y="437" width="0.0796%" height="15" fill="rgb(243,89,12)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.4431%" y="421" width="0.0796%" height="15" fill="rgb(228,32,19)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4431%" y="405" width="0.0796%" height="15" fill="rgb(248,25,17)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4431%" y="389" width="0.0796%" height="15" fill="rgb(232,161,29)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.4431%" y="373" width="0.0796%" height="15" fill="rgb(251,192,11)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.4431%" y="357" width="0.0796%" height="15" fill="rgb(240,47,32)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.4431%" y="341" width="0.0796%" height="15" fill="rgb(250,16,45)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.4431%" y="325" width="0.0796%" height="15" fill="rgb(227,217,42)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4431%" y="309" width="0.0796%" height="15" fill="rgb(206,82,54)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="99.5227%" y="501" width="0.0796%" height="15" fill="rgb(243,145,25)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5227%" y="485" width="0.0796%" height="15" fill="rgb(207,166,24)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5227%" y="469" width="0.0796%" height="15" fill="rgb(215,191,44)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.5227%" y="453" width="0.0796%" height="15" fill="rgb(234,218,51)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5227%" y="437" width="0.0796%" height="15" fill="rgb(245,133,21)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5227%" y="421" width="0.0796%" height="15" fill="rgb(230,136,45)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5227%" y="405" width="0.0796%" height="15" fill="rgb(247,63,43)" fg:x="1251" fg:w="1"/><text x="99.7727%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="99.6022%" y="501" width="0.0796%" height="15" fill="rgb(254,223,31)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6022%" y="485" width="0.0796%" height="15" fill="rgb(236,185,0)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6022%" y="469" width="0.0796%" height="15" fill="rgb(231,139,46)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.6022%" y="453" width="0.0796%" height="15" fill="rgb(236,147,31)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6022%" y="437" width="0.0796%" height="15" fill="rgb(225,222,22)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.6022%" y="421" width="0.0796%" height="15" fill="rgb(225,193,14)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6022%" y="405" width="0.0796%" height="15" fill="rgb(253,193,46)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6022%" y="389" width="0.0796%" height="15" fill="rgb(218,187,39)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6022%" y="373" width="0.0796%" height="15" fill="rgb(227,162,48)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="99.2840%" y="517" width="0.6364%" height="15" fill="rgb(222,25,5)" fg:x="1248" fg:w="8"/><text x="99.5340%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="99.6818%" y="501" width="0.2387%" height="15" fill="rgb(211,205,16)" fg:x="1253" fg:w="3"/><text x="99.9318%" y="511.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="99.6818%" y="485" width="0.2387%" height="15" fill="rgb(244,191,2)" fg:x="1253" fg:w="3"/><text x="99.9318%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.6818%" y="469" width="0.2387%" height="15" fill="rgb(248,159,12)" fg:x="1253" fg:w="3"/><text x="99.9318%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.6818%" y="453" width="0.2387%" height="15" fill="rgb(235,204,17)" fg:x="1253" fg:w="3"/><text x="99.9318%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.6818%" y="437" width="0.2387%" height="15" fill="rgb(240,21,27)" fg:x="1253" fg:w="3"/><text x="99.9318%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.6818%" y="421" width="0.2387%" height="15" fill="rgb(224,170,31)" fg:x="1253" fg:w="3"/><text x="99.9318%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.7613%" y="405" width="0.1591%" height="15" fill="rgb(223,145,32)" fg:x="1254" fg:w="2"/><text x="100.0113%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8409%" y="389" width="0.0796%" height="15" fill="rgb(243,100,5)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.8409%" y="373" width="0.0796%" height="15" fill="rgb(242,131,51)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8409%" y="357" width="0.0796%" height="15" fill="rgb(223,156,46)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="367.50"></text></g><g><title>all (1,257 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(215,10,40)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="943.50"></text></g><g><title>simple-7b9109e4 (1,257 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(233,155,0)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="927.50">simple-7b9109e4</text></g><g><title>_start (1,257 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(247,78,6)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="911.50">_start</text></g><g><title>__libc_start_main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(237,217,21)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="895.50">__libc_start_main</text></g><g><title>main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(212,1,21)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (1,257 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(213,7,14)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,257 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(225,84,14)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,257 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(239,216,39)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,257 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(253,29,23)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,257 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(220,167,50)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,257 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(232,141,1)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,257 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(222,210,1)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,257 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(219,84,10)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,257 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(245,188,6)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,257 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(252,139,39)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,257 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(218,42,26)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(237,226,51)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="687.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,257 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(246,15,17)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="671.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,257 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(228,170,42)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="655.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (435 samples, 34.61%)</title><rect x="65.3938%" y="629" width="34.6062%" height="15" fill="rgb(248,118,53)" fg:x="822" fg:w="435"/><text x="65.6438%" y="639.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routi..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (435 samples, 34.61%)</title><rect x="65.3938%" y="613" width="34.6062%" height="15" fill="rgb(207,30,10)" fg:x="822" fg:w="435"/><text x="65.6438%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (434 samples, 34.53%)</title><rect x="65.4733%" y="597" width="34.5267%" height="15" fill="rgb(217,104,38)" fg:x="823" fg:w="434"/><text x="65.7233%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (77 samples, 6.13%)</title><rect x="93.8743%" y="581" width="6.1257%" height="15" fill="rgb(211,165,26)" fg:x="1180" fg:w="77"/><text x="94.1243%" y="591.50">engine::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (77 samples, 6.13%)</title><rect x="93.8743%" y="565" width="6.1257%" height="15" fill="rgb(247,38,9)" fg:x="1180" fg:w="77"/><text x="94.1243%" y="575.50">engine::..</text></g><g><title>kernel::model::EntityPtrResolver::world (9 samples, 0.72%)</title><rect x="99.2840%" y="549" width="0.7160%" height="15" fill="rgb(218,187,8)" fg:x="1248" fg:w="9"/><text x="99.5340%" y="559.50"></text></g><g><title>engine::session::Session::load_entity (9 samples, 0.72%)</title><rect x="99.2840%" y="533" width="0.7160%" height="15" fill="rgb(247,94,28)" fg:x="1248" fg:w="9"/><text x="99.5340%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.9204%" y="517" width="0.0796%" height="15" fill="rgb(218,173,30)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="527.50"></text></g></svg></svg>