<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="853.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="1247"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4010%" y="421" width="0.0802%" height="15" fill="rgb(226,91,4)" fg:x="5" fg:w="1"/><text x="0.6510%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.32%)</title><rect x="0.2406%" y="453" width="0.3208%" height="15" fill="rgb(222,167,0)" fg:x="3" fg:w="4"/><text x="0.4906%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="0.2406%" y="437" width="0.3208%" height="15" fill="rgb(211,70,14)" fg:x="3" fg:w="4"/><text x="0.4906%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.4812%" y="421" width="0.0802%" height="15" fill="rgb(214,84,42)" fg:x="6" fg:w="1"/><text x="0.7312%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4812%" y="405" width="0.0802%" height="15" fill="rgb(235,157,37)" fg:x="6" fg:w="1"/><text x="0.7312%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.8019%" y="373" width="0.2406%" height="15" fill="rgb(225,13,6)" fg:x="10" fg:w="3"/><text x="1.0519%" y="383.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="1.0425%" y="357" width="0.3208%" height="15" fill="rgb(205,202,1)" fg:x="13" fg:w="4"/><text x="1.2925%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.3633%" y="357" width="0.1604%" height="15" fill="rgb(232,195,26)" fg:x="17" fg:w="2"/><text x="1.6133%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4435%" y="341" width="0.0802%" height="15" fill="rgb(208,102,26)" fg:x="18" fg:w="1"/><text x="1.6935%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5237%" y="341" width="0.0802%" height="15" fill="rgb(215,41,39)" fg:x="19" fg:w="1"/><text x="1.7737%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.6038%" y="341" width="0.0802%" height="15" fill="rgb(247,139,11)" fg:x="20" fg:w="1"/><text x="1.8538%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.6840%" y="325" width="0.0802%" height="15" fill="rgb(243,99,6)" fg:x="21" fg:w="1"/><text x="1.9340%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6840%" y="309" width="0.0802%" height="15" fill="rgb(230,168,48)" fg:x="21" fg:w="1"/><text x="1.9340%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.7642%" y="325" width="0.1604%" height="15" fill="rgb(238,227,13)" fg:x="22" fg:w="2"/><text x="2.0142%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.9246%" y="325" width="0.1604%" height="15" fill="rgb(209,109,13)" fg:x="24" fg:w="2"/><text x="2.1746%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.9246%" y="309" width="0.1604%" height="15" fill="rgb(228,195,1)" fg:x="24" fg:w="2"/><text x="2.1746%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2454%" y="309" width="0.0802%" height="15" fill="rgb(230,218,0)" fg:x="28" fg:w="1"/><text x="2.4954%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="0.7217%" y="389" width="1.6840%" height="15" fill="rgb(206,1,45)" fg:x="9" fg:w="21"/><text x="0.9717%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="1.0425%" y="373" width="1.3633%" height="15" fill="rgb(209,124,26)" fg:x="13" fg:w="17"/><text x="1.2925%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="1.5237%" y="357" width="0.8821%" height="15" fill="rgb(220,59,8)" fg:x="19" fg:w="11"/><text x="1.7737%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="1.6840%" y="341" width="0.7217%" height="15" fill="rgb(251,41,37)" fg:x="21" fg:w="9"/><text x="1.9340%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="2.0850%" y="325" width="0.3208%" height="15" fill="rgb(239,152,21)" fg:x="26" fg:w="4"/><text x="2.3350%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.3256%" y="309" width="0.0802%" height="15" fill="rgb(226,32,1)" fg:x="29" fg:w="1"/><text x="2.5756%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3256%" y="293" width="0.0802%" height="15" fill="rgb(230,154,36)" fg:x="29" fg:w="1"/><text x="2.5756%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.4058%" y="357" width="0.1604%" height="15" fill="rgb(208,228,43)" fg:x="30" fg:w="2"/><text x="2.6558%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="2.5662%" y="357" width="0.3208%" height="15" fill="rgb(214,203,3)" fg:x="32" fg:w="4"/><text x="2.8162%" y="367.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.6464%" y="341" width="0.2406%" height="15" fill="rgb(207,149,29)" fg:x="33" fg:w="3"/><text x="2.8964%" y="351.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.0473%" y="341" width="0.2406%" height="15" fill="rgb(250,105,7)" fg:x="38" fg:w="3"/><text x="3.2973%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="3.2879%" y="341" width="0.3208%" height="15" fill="rgb(232,222,16)" fg:x="41" fg:w="4"/><text x="3.5379%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.4483%" y="325" width="0.1604%" height="15" fill="rgb(209,32,24)" fg:x="43" fg:w="2"/><text x="3.6983%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6889%" y="325" width="0.0802%" height="15" fill="rgb(225,13,6)" fg:x="46" fg:w="1"/><text x="3.9389%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="2.4058%" y="389" width="1.5237%" height="15" fill="rgb(245,226,26)" fg:x="30" fg:w="19"/><text x="2.6558%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="2.4058%" y="373" width="1.5237%" height="15" fill="rgb(229,178,27)" fg:x="30" fg:w="19"/><text x="2.6558%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="2.8869%" y="357" width="1.0425%" height="15" fill="rgb(205,227,28)" fg:x="36" fg:w="13"/><text x="3.1369%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="3.6087%" y="341" width="0.3208%" height="15" fill="rgb(210,191,45)" fg:x="45" fg:w="4"/><text x="3.8587%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.7690%" y="325" width="0.1604%" height="15" fill="rgb(206,124,16)" fg:x="47" fg:w="2"/><text x="4.0190%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.7690%" y="309" width="0.1604%" height="15" fill="rgb(210,162,0)" fg:x="47" fg:w="2"/><text x="4.0190%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 3.53%)</title><rect x="0.5613%" y="405" width="3.5285%" height="15" fill="rgb(211,54,38)" fg:x="7" fg:w="44"/><text x="0.8113%" y="415.50">&lt;al..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.9294%" y="389" width="0.1604%" height="15" fill="rgb(248,192,3)" fg:x="49" fg:w="2"/><text x="4.1794%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 4.01%)</title><rect x="0.1604%" y="469" width="4.0096%" height="15" fill="rgb(233,187,18)" fg:x="2" fg:w="50"/><text x="0.4104%" y="479.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (45 samples, 3.61%)</title><rect x="0.5613%" y="453" width="3.6087%" height="15" fill="rgb(237,208,14)" fg:x="7" fg:w="45"/><text x="0.8113%" y="463.50">core..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 3.61%)</title><rect x="0.5613%" y="437" width="3.6087%" height="15" fill="rgb(212,77,1)" fg:x="7" fg:w="45"/><text x="0.8113%" y="447.50">&lt;has..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (45 samples, 3.61%)</title><rect x="0.5613%" y="421" width="3.6087%" height="15" fill="rgb(210,163,22)" fg:x="7" fg:w="45"/><text x="0.8113%" y="431.50">core..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0898%" y="405" width="0.0802%" height="15" fill="rgb(250,58,28)" fg:x="51" fg:w="1"/><text x="4.3398%" y="415.50"></text></g><g><title>_IO_default_xsputn (2 samples, 0.16%)</title><rect x="4.4908%" y="325" width="0.1604%" height="15" fill="rgb(254,28,41)" fg:x="56" fg:w="2"/><text x="4.7408%" y="335.50"></text></g><g><title>dlerror (6 samples, 0.48%)</title><rect x="4.2502%" y="357" width="0.4812%" height="15" fill="rgb(237,162,36)" fg:x="53" fg:w="6"/><text x="4.5002%" y="367.50"></text></g><g><title>__asprintf (6 samples, 0.48%)</title><rect x="4.2502%" y="341" width="0.4812%" height="15" fill="rgb(232,56,6)" fg:x="53" fg:w="6"/><text x="4.5002%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.6512%" y="325" width="0.0802%" height="15" fill="rgb(216,127,42)" fg:x="58" fg:w="1"/><text x="4.9012%" y="335.50"></text></g><g><title>libloading::safe::Library::new (16 samples, 1.28%)</title><rect x="4.2502%" y="373" width="1.2831%" height="15" fill="rgb(241,69,15)" fg:x="53" fg:w="16"/><text x="4.5002%" y="383.50"></text></g><g><title>dlopen (10 samples, 0.80%)</title><rect x="4.7314%" y="357" width="0.8019%" height="15" fill="rgb(227,180,19)" fg:x="59" fg:w="10"/><text x="4.9814%" y="367.50"></text></g><g><title>_dl_catch_error (10 samples, 0.80%)</title><rect x="4.7314%" y="341" width="0.8019%" height="15" fill="rgb(231,188,29)" fg:x="59" fg:w="10"/><text x="4.9814%" y="351.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.80%)</title><rect x="4.7314%" y="325" width="0.8019%" height="15" fill="rgb(224,176,27)" fg:x="59" fg:w="10"/><text x="4.9814%" y="335.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.80%)</title><rect x="4.7314%" y="309" width="0.8019%" height="15" fill="rgb(249,214,19)" fg:x="59" fg:w="10"/><text x="4.9814%" y="319.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="4.8115%" y="293" width="0.7217%" height="15" fill="rgb(240,0,4)" fg:x="60" fg:w="9"/><text x="5.0615%" y="303.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="5.4531%" y="277" width="0.0802%" height="15" fill="rgb(233,28,41)" fg:x="68" fg:w="1"/><text x="5.7031%" y="287.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (18 samples, 1.44%)</title><rect x="4.2502%" y="389" width="1.4435%" height="15" fill="rgb(220,90,51)" fg:x="53" fg:w="18"/><text x="4.5002%" y="399.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (2 samples, 0.16%)</title><rect x="5.5333%" y="373" width="0.1604%" height="15" fill="rgb(250,52,22)" fg:x="69" fg:w="2"/><text x="5.7833%" y="383.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.16%)</title><rect x="5.5333%" y="357" width="0.1604%" height="15" fill="rgb(231,152,36)" fg:x="69" fg:w="2"/><text x="5.7833%" y="367.50"></text></g><g><title>core::str::lossy::Utf8Chunk::valid (1 samples, 0.08%)</title><rect x="5.6135%" y="341" width="0.0802%" height="15" fill="rgb(250,218,4)" fg:x="70" fg:w="1"/><text x="5.8635%" y="351.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (23 samples, 1.84%)</title><rect x="4.1700%" y="405" width="1.8444%" height="15" fill="rgb(210,38,21)" fg:x="52" fg:w="23"/><text x="4.4200%" y="415.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.32%)</title><rect x="5.6937%" y="389" width="0.3208%" height="15" fill="rgb(230,75,13)" fg:x="71" fg:w="4"/><text x="5.9437%" y="399.50"></text></g><g><title>clock_gettime (3 samples, 0.24%)</title><rect x="5.7739%" y="373" width="0.2406%" height="15" fill="rgb(250,68,53)" fg:x="72" fg:w="3"/><text x="6.0239%" y="383.50"></text></g><g><title>engine::session::Session::initialize (27 samples, 2.17%)</title><rect x="4.1700%" y="421" width="2.1652%" height="15" fill="rgb(250,210,16)" fg:x="52" fg:w="27"/><text x="4.4200%" y="431.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="6.0144%" y="405" width="0.3208%" height="15" fill="rgb(240,132,5)" fg:x="75" fg:w="4"/><text x="6.2644%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="6.0144%" y="389" width="0.3208%" height="15" fill="rgb(222,148,48)" fg:x="75" fg:w="4"/><text x="6.2644%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="6.0144%" y="373" width="0.3208%" height="15" fill="rgb(247,181,24)" fg:x="75" fg:w="4"/><text x="6.2644%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="6.0946%" y="357" width="0.2406%" height="15" fill="rgb(239,5,31)" fg:x="76" fg:w="3"/><text x="6.3446%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="6.0946%" y="341" width="0.2406%" height="15" fill="rgb(241,152,38)" fg:x="76" fg:w="3"/><text x="6.3446%" y="351.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="6.0946%" y="325" width="0.2406%" height="15" fill="rgb(246,200,37)" fg:x="76" fg:w="3"/><text x="6.3446%" y="335.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="6.3352%" y="373" width="0.0802%" height="15" fill="rgb(243,210,26)" fg:x="79" fg:w="1"/><text x="6.5852%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.3352%" y="357" width="0.0802%" height="15" fill="rgb(222,22,22)" fg:x="79" fg:w="1"/><text x="6.5852%" y="367.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (31 samples, 2.49%)</title><rect x="4.1700%" y="469" width="2.4860%" height="15" fill="rgb(208,129,28)" fg:x="52" fg:w="31"/><text x="4.4200%" y="479.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (31 samples, 2.49%)</title><rect x="4.1700%" y="453" width="2.4860%" height="15" fill="rgb(254,169,28)" fg:x="52" fg:w="31"/><text x="4.4200%" y="463.50">en..</text></g><g><title>engine::session::Session::new (31 samples, 2.49%)</title><rect x="4.1700%" y="437" width="2.4860%" height="15" fill="rgb(225,45,17)" fg:x="52" fg:w="31"/><text x="4.4200%" y="447.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (4 samples, 0.32%)</title><rect x="6.3352%" y="421" width="0.3208%" height="15" fill="rgb(232,199,2)" fg:x="79" fg:w="4"/><text x="6.5852%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="6.3352%" y="405" width="0.3208%" height="15" fill="rgb(235,33,40)" fg:x="79" fg:w="4"/><text x="6.5852%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="6.3352%" y="389" width="0.3208%" height="15" fill="rgb(237,89,50)" fg:x="79" fg:w="4"/><text x="6.5852%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="6.4154%" y="373" width="0.2406%" height="15" fill="rgb(238,126,5)" fg:x="80" fg:w="3"/><text x="6.6654%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="6.4154%" y="357" width="0.2406%" height="15" fill="rgb(247,214,42)" fg:x="80" fg:w="3"/><text x="6.6654%" y="367.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="6.4154%" y="341" width="0.2406%" height="15" fill="rgb(238,60,45)" fg:x="80" fg:w="3"/><text x="6.6654%" y="351.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.6560%" y="453" width="0.0802%" height="15" fill="rgb(225,69,44)" fg:x="83" fg:w="1"/><text x="6.9060%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="6.7362%" y="453" width="0.0802%" height="15" fill="rgb(241,13,44)" fg:x="84" fg:w="1"/><text x="6.9862%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="6.7362%" y="437" width="0.0802%" height="15" fill="rgb(227,121,22)" fg:x="84" fg:w="1"/><text x="6.9862%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="6.8164%" y="453" width="0.0802%" height="15" fill="rgb(231,160,23)" fg:x="85" fg:w="1"/><text x="7.0664%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="6.8966%" y="437" width="0.0802%" height="15" fill="rgb(250,179,43)" fg:x="86" fg:w="1"/><text x="7.1466%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.8966%" y="421" width="0.0802%" height="15" fill="rgb(233,54,46)" fg:x="86" fg:w="1"/><text x="7.1466%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.8966%" y="405" width="0.0802%" height="15" fill="rgb(247,120,42)" fg:x="86" fg:w="1"/><text x="7.1466%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.8966%" y="389" width="0.0802%" height="15" fill="rgb(221,219,12)" fg:x="86" fg:w="1"/><text x="7.1466%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.8966%" y="373" width="0.0802%" height="15" fill="rgb(211,126,8)" fg:x="86" fg:w="1"/><text x="7.1466%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.8966%" y="357" width="0.0802%" height="15" fill="rgb(218,154,33)" fg:x="86" fg:w="1"/><text x="7.1466%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.8966%" y="341" width="0.0802%" height="15" fill="rgb(212,199,16)" fg:x="86" fg:w="1"/><text x="7.1466%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.8966%" y="325" width="0.0802%" height="15" fill="rgb(236,215,46)" fg:x="86" fg:w="1"/><text x="7.1466%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="6.8966%" y="309" width="0.0802%" height="15" fill="rgb(232,32,22)" fg:x="86" fg:w="1"/><text x="7.1466%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="6.8966%" y="293" width="0.0802%" height="15" fill="rgb(234,79,15)" fg:x="86" fg:w="1"/><text x="7.1466%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="6.8966%" y="277" width="0.0802%" height="15" fill="rgb(235,187,47)" fg:x="86" fg:w="1"/><text x="7.1466%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="6.8966%" y="261" width="0.0802%" height="15" fill="rgb(244,69,37)" fg:x="86" fg:w="1"/><text x="7.1466%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8966%" y="245" width="0.0802%" height="15" fill="rgb(249,140,25)" fg:x="86" fg:w="1"/><text x="7.1466%" y="255.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="6.9767%" y="437" width="0.0802%" height="15" fill="rgb(213,69,8)" fg:x="87" fg:w="1"/><text x="7.2267%" y="447.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="6.9767%" y="421" width="0.0802%" height="15" fill="rgb(220,136,2)" fg:x="87" fg:w="1"/><text x="7.2267%" y="431.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="6.9767%" y="405" width="0.0802%" height="15" fill="rgb(237,50,36)" fg:x="87" fg:w="1"/><text x="7.2267%" y="415.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="6.9767%" y="389" width="0.0802%" height="15" fill="rgb(226,18,11)" fg:x="87" fg:w="1"/><text x="7.2267%" y="399.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="6.9767%" y="373" width="0.0802%" height="15" fill="rgb(243,156,2)" fg:x="87" fg:w="1"/><text x="7.2267%" y="383.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="6.9767%" y="357" width="0.0802%" height="15" fill="rgb(218,8,34)" fg:x="87" fg:w="1"/><text x="7.2267%" y="367.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="6.9767%" y="341" width="0.0802%" height="15" fill="rgb(250,94,35)" fg:x="87" fg:w="1"/><text x="7.2267%" y="351.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="6.9767%" y="325" width="0.0802%" height="15" fill="rgb(229,127,21)" fg:x="87" fg:w="1"/><text x="7.2267%" y="335.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="6.9767%" y="309" width="0.0802%" height="15" fill="rgb(234,49,5)" fg:x="87" fg:w="1"/><text x="7.2267%" y="319.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="7.0569%" y="373" width="0.0802%" height="15" fill="rgb(248,12,16)" fg:x="88" fg:w="1"/><text x="7.3069%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.0569%" y="405" width="0.1604%" height="15" fill="rgb(208,220,31)" fg:x="88" fg:w="2"/><text x="7.3069%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="7.0569%" y="389" width="0.1604%" height="15" fill="rgb(243,184,0)" fg:x="88" fg:w="2"/><text x="7.3069%" y="399.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="7.1371%" y="373" width="0.0802%" height="15" fill="rgb(217,38,21)" fg:x="89" fg:w="1"/><text x="7.3871%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="7.2975%" y="325" width="0.3208%" height="15" fill="rgb(239,120,45)" fg:x="91" fg:w="4"/><text x="7.5475%" y="335.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="7.2975%" y="309" width="0.3208%" height="15" fill="rgb(235,33,2)" fg:x="91" fg:w="4"/><text x="7.5475%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.4579%" y="293" width="0.1604%" height="15" fill="rgb(249,161,5)" fg:x="93" fg:w="2"/><text x="7.7079%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.4579%" y="277" width="0.1604%" height="15" fill="rgb(250,165,48)" fg:x="93" fg:w="2"/><text x="7.7079%" y="287.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="7.2173%" y="341" width="0.4812%" height="15" fill="rgb(221,23,45)" fg:x="90" fg:w="6"/><text x="7.4673%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.6183%" y="325" width="0.0802%" height="15" fill="rgb(217,108,46)" fg:x="95" fg:w="1"/><text x="7.8683%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.9391%" y="325" width="0.0802%" height="15" fill="rgb(254,26,35)" fg:x="99" fg:w="1"/><text x="8.1891%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.0192%" y="325" width="0.0802%" height="15" fill="rgb(218,223,28)" fg:x="100" fg:w="1"/><text x="8.2692%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.0994%" y="277" width="0.0802%" height="15" fill="rgb(242,27,47)" fg:x="101" fg:w="1"/><text x="8.3494%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="8.0994%" y="293" width="0.1604%" height="15" fill="rgb(218,39,35)" fg:x="101" fg:w="2"/><text x="8.3494%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.1796%" y="277" width="0.0802%" height="15" fill="rgb(232,127,16)" fg:x="102" fg:w="1"/><text x="8.4296%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.1796%" y="261" width="0.0802%" height="15" fill="rgb(231,219,51)" fg:x="102" fg:w="1"/><text x="8.4296%" y="271.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.1796%" y="245" width="0.0802%" height="15" fill="rgb(217,220,46)" fg:x="102" fg:w="1"/><text x="8.4296%" y="255.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.1796%" y="229" width="0.0802%" height="15" fill="rgb(230,75,1)" fg:x="102" fg:w="1"/><text x="8.4296%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.1796%" y="213" width="0.0802%" height="15" fill="rgb(218,2,8)" fg:x="102" fg:w="1"/><text x="8.4296%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="8.0994%" y="309" width="0.2406%" height="15" fill="rgb(206,111,30)" fg:x="101" fg:w="3"/><text x="8.3494%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.2598%" y="293" width="0.0802%" height="15" fill="rgb(209,135,6)" fg:x="103" fg:w="1"/><text x="8.5098%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="8.3400%" y="309" width="0.4010%" height="15" fill="rgb(205,169,10)" fg:x="104" fg:w="5"/><text x="8.5900%" y="319.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="8.3400%" y="293" width="0.4010%" height="15" fill="rgb(212,204,38)" fg:x="104" fg:w="5"/><text x="8.5900%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="8.3400%" y="277" width="0.4010%" height="15" fill="rgb(205,199,14)" fg:x="104" fg:w="5"/><text x="8.5900%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="8.4202%" y="261" width="0.3208%" height="15" fill="rgb(212,4,6)" fg:x="105" fg:w="4"/><text x="8.6702%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="8.5004%" y="245" width="0.2406%" height="15" fill="rgb(250,15,10)" fg:x="106" fg:w="3"/><text x="8.7504%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="8.5004%" y="229" width="0.2406%" height="15" fill="rgb(212,49,51)" fg:x="106" fg:w="3"/><text x="8.7504%" y="239.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="8.5004%" y="213" width="0.2406%" height="15" fill="rgb(235,21,9)" fg:x="106" fg:w="3"/><text x="8.7504%" y="223.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.8212%" y="293" width="0.2406%" height="15" fill="rgb(251,31,32)" fg:x="110" fg:w="3"/><text x="9.0712%" y="303.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.8212%" y="277" width="0.2406%" height="15" fill="rgb(246,23,9)" fg:x="110" fg:w="3"/><text x="9.0712%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="8.8212%" y="261" width="0.2406%" height="15" fill="rgb(225,216,14)" fg:x="110" fg:w="3"/><text x="9.0712%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.9816%" y="245" width="0.0802%" height="15" fill="rgb(215,200,26)" fg:x="112" fg:w="1"/><text x="9.2316%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="9.1419%" y="277" width="0.4010%" height="15" fill="rgb(237,130,47)" fg:x="114" fg:w="5"/><text x="9.3919%" y="287.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.2221%" y="261" width="0.3208%" height="15" fill="rgb(247,74,14)" fg:x="115" fg:w="4"/><text x="9.4721%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.3825%" y="245" width="0.1604%" height="15" fill="rgb(254,97,46)" fg:x="117" fg:w="2"/><text x="9.6325%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.3825%" y="229" width="0.1604%" height="15" fill="rgb(234,191,1)" fg:x="117" fg:w="2"/><text x="9.6325%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="9.5429%" y="277" width="0.1604%" height="15" fill="rgb(215,165,14)" fg:x="119" fg:w="2"/><text x="9.7929%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.6231%" y="261" width="0.0802%" height="15" fill="rgb(230,182,6)" fg:x="120" fg:w="1"/><text x="9.8731%" y="271.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.6231%" y="245" width="0.0802%" height="15" fill="rgb(210,127,39)" fg:x="120" fg:w="1"/><text x="9.8731%" y="255.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.6231%" y="229" width="0.0802%" height="15" fill="rgb(223,212,51)" fg:x="120" fg:w="1"/><text x="9.8731%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="9.0617%" y="293" width="0.7217%" height="15" fill="rgb(226,176,43)" fg:x="113" fg:w="9"/><text x="9.3117%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.7033%" y="277" width="0.0802%" height="15" fill="rgb(222,155,4)" fg:x="121" fg:w="1"/><text x="9.9533%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.7033%" y="261" width="0.0802%" height="15" fill="rgb(215,149,7)" fg:x="121" fg:w="1"/><text x="9.9533%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="8.0994%" y="325" width="1.8444%" height="15" fill="rgb(252,199,23)" fg:x="101" fg:w="23"/><text x="8.3494%" y="335.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="8.7410%" y="309" width="1.2029%" height="15" fill="rgb(245,52,29)" fg:x="109" fg:w="15"/><text x="8.9910%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.7835%" y="293" width="0.1604%" height="15" fill="rgb(221,228,19)" fg:x="122" fg:w="2"/><text x="10.0335%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.8637%" y="277" width="0.0802%" height="15" fill="rgb(253,101,6)" fg:x="123" fg:w="1"/><text x="10.1137%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.8637%" y="261" width="0.0802%" height="15" fill="rgb(211,130,8)" fg:x="123" fg:w="1"/><text x="10.1137%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.9439%" y="293" width="0.2406%" height="15" fill="rgb(238,37,53)" fg:x="124" fg:w="3"/><text x="10.1939%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.1043%" y="277" width="0.0802%" height="15" fill="rgb(235,145,5)" fg:x="126" fg:w="1"/><text x="10.3543%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.1043%" y="261" width="0.0802%" height="15" fill="rgb(244,12,43)" fg:x="126" fg:w="1"/><text x="10.3543%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.1043%" y="245" width="0.0802%" height="15" fill="rgb(246,195,24)" fg:x="126" fg:w="1"/><text x="10.3543%" y="255.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (38 samples, 3.05%)</title><rect x="7.2173%" y="357" width="3.0473%" height="15" fill="rgb(235,163,6)" fg:x="90" fg:w="38"/><text x="7.4673%" y="367.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.57%)</title><rect x="7.6985%" y="341" width="2.5662%" height="15" fill="rgb(236,218,17)" fg:x="96" fg:w="32"/><text x="7.9485%" y="351.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.9439%" y="325" width="0.3208%" height="15" fill="rgb(235,12,38)" fg:x="124" fg:w="4"/><text x="10.1939%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="9.9439%" y="309" width="0.3208%" height="15" fill="rgb(225,195,33)" fg:x="124" fg:w="4"/><text x="10.1939%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.1844%" y="293" width="0.0802%" height="15" fill="rgb(238,54,35)" fg:x="127" fg:w="1"/><text x="10.4344%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.3448%" y="325" width="0.0802%" height="15" fill="rgb(238,33,7)" fg:x="129" fg:w="1"/><text x="10.5948%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.4250%" y="325" width="0.0802%" height="15" fill="rgb(245,5,14)" fg:x="130" fg:w="1"/><text x="10.6750%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="10.5854%" y="309" width="0.1604%" height="15" fill="rgb(251,95,31)" fg:x="132" fg:w="2"/><text x="10.8354%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.7458%" y="277" width="0.0802%" height="15" fill="rgb(222,15,46)" fg:x="134" fg:w="1"/><text x="10.9958%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.8260%" y="277" width="0.0802%" height="15" fill="rgb(226,182,24)" fg:x="135" fg:w="1"/><text x="11.0760%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="10.9062%" y="277" width="0.0802%" height="15" fill="rgb(229,105,41)" fg:x="136" fg:w="1"/><text x="11.1562%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.9062%" y="261" width="0.0802%" height="15" fill="rgb(216,99,53)" fg:x="136" fg:w="1"/><text x="11.1562%" y="271.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="10.9864%" y="261" width="0.2406%" height="15" fill="rgb(253,26,20)" fg:x="137" fg:w="3"/><text x="11.2364%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="10.2646%" y="357" width="1.0425%" height="15" fill="rgb(249,155,28)" fg:x="128" fg:w="13"/><text x="10.5146%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="10.2646%" y="341" width="1.0425%" height="15" fill="rgb(241,221,2)" fg:x="128" fg:w="13"/><text x="10.5146%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="10.5052%" y="325" width="0.8019%" height="15" fill="rgb(219,124,6)" fg:x="131" fg:w="10"/><text x="10.7552%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="10.7458%" y="309" width="0.5613%" height="15" fill="rgb(233,37,6)" fg:x="134" fg:w="7"/><text x="10.9958%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="10.7458%" y="293" width="0.5613%" height="15" fill="rgb(238,20,14)" fg:x="134" fg:w="7"/><text x="10.9958%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="10.9864%" y="277" width="0.3208%" height="15" fill="rgb(232,106,27)" fg:x="137" fg:w="4"/><text x="11.2364%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.2269%" y="261" width="0.0802%" height="15" fill="rgb(246,157,24)" fg:x="140" fg:w="1"/><text x="11.4769%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2269%" y="245" width="0.0802%" height="15" fill="rgb(214,153,10)" fg:x="140" fg:w="1"/><text x="11.4769%" y="255.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="11.3071%" y="341" width="0.1604%" height="15" fill="rgb(212,94,6)" fg:x="141" fg:w="2"/><text x="11.5571%" y="351.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="11.3071%" y="325" width="0.1604%" height="15" fill="rgb(254,25,27)" fg:x="141" fg:w="2"/><text x="11.5571%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="11.3873%" y="309" width="0.0802%" height="15" fill="rgb(250,43,52)" fg:x="142" fg:w="1"/><text x="11.6373%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.3873%" y="293" width="0.0802%" height="15" fill="rgb(221,226,40)" fg:x="142" fg:w="1"/><text x="11.6373%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3873%" y="277" width="0.0802%" height="15" fill="rgb(235,162,34)" fg:x="142" fg:w="1"/><text x="11.6373%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.5477%" y="309" width="0.0802%" height="15" fill="rgb(239,24,26)" fg:x="144" fg:w="1"/><text x="11.7977%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="11.6279%" y="309" width="0.4812%" height="15" fill="rgb(244,226,11)" fg:x="145" fg:w="6"/><text x="11.8779%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.8685%" y="293" width="0.2406%" height="15" fill="rgb(225,23,10)" fg:x="148" fg:w="3"/><text x="12.1185%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="11.9487%" y="277" width="0.1604%" height="15" fill="rgb(249,125,6)" fg:x="149" fg:w="2"/><text x="12.1987%" y="287.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (4 samples, 0.32%)</title><rect x="12.1091%" y="309" width="0.3208%" height="15" fill="rgb(246,212,12)" fg:x="151" fg:w="4"/><text x="12.3591%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.3496%" y="293" width="0.0802%" height="15" fill="rgb(230,43,32)" fg:x="154" fg:w="1"/><text x="12.5996%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3496%" y="277" width="0.0802%" height="15" fill="rgb(210,95,23)" fg:x="154" fg:w="1"/><text x="12.5996%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.6704%" y="277" width="0.0802%" height="15" fill="rgb(229,103,33)" fg:x="158" fg:w="1"/><text x="12.9204%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="12.7506%" y="277" width="0.0802%" height="15" fill="rgb(222,104,27)" fg:x="159" fg:w="1"/><text x="13.0006%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="12.8308%" y="245" width="0.0802%" height="15" fill="rgb(239,221,23)" fg:x="160" fg:w="1"/><text x="13.0808%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="12.8308%" y="229" width="0.0802%" height="15" fill="rgb(222,98,21)" fg:x="160" fg:w="1"/><text x="13.0808%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="12.8308%" y="213" width="0.0802%" height="15" fill="rgb(231,101,20)" fg:x="160" fg:w="1"/><text x="13.0808%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="12.8308%" y="261" width="0.1604%" height="15" fill="rgb(215,150,22)" fg:x="160" fg:w="2"/><text x="13.0808%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.9110%" y="245" width="0.0802%" height="15" fill="rgb(248,3,34)" fg:x="161" fg:w="1"/><text x="13.1610%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.9110%" y="229" width="0.0802%" height="15" fill="rgb(220,141,21)" fg:x="161" fg:w="1"/><text x="13.1610%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="12.8308%" y="277" width="0.4812%" height="15" fill="rgb(223,41,48)" fg:x="160" fg:w="6"/><text x="13.0808%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="12.9912%" y="261" width="0.3208%" height="15" fill="rgb(247,12,5)" fg:x="162" fg:w="4"/><text x="13.2412%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="12.9912%" y="245" width="0.3208%" height="15" fill="rgb(206,173,10)" fg:x="162" fg:w="4"/><text x="13.2412%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="13.1516%" y="229" width="0.1604%" height="15" fill="rgb(233,214,37)" fg:x="164" fg:w="2"/><text x="13.4016%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="13.1516%" y="213" width="0.1604%" height="15" fill="rgb(238,86,43)" fg:x="164" fg:w="2"/><text x="13.4016%" y="223.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="13.2318%" y="197" width="0.0802%" height="15" fill="rgb(212,182,8)" fg:x="165" fg:w="1"/><text x="13.4818%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2318%" y="181" width="0.0802%" height="15" fill="rgb(240,91,47)" fg:x="165" fg:w="1"/><text x="13.4818%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="12.5902%" y="293" width="0.8019%" height="15" fill="rgb(209,138,26)" fg:x="157" fg:w="10"/><text x="12.8402%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="13.3119%" y="277" width="0.0802%" height="15" fill="rgb(231,163,20)" fg:x="166" fg:w="1"/><text x="13.5619%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.3119%" y="261" width="0.0802%" height="15" fill="rgb(214,91,54)" fg:x="166" fg:w="1"/><text x="13.5619%" y="271.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="13.3921%" y="293" width="0.2406%" height="15" fill="rgb(230,32,17)" fg:x="167" fg:w="3"/><text x="13.6421%" y="303.50"></text></g><g><title>engine::session::Session::flush (85 samples, 6.82%)</title><rect x="6.8966%" y="453" width="6.8164%" height="15" fill="rgb(231,34,34)" fg:x="86" fg:w="85"/><text x="7.1466%" y="463.50">engine::s..</text></g><g><title>engine::session::state::State::close (83 samples, 6.66%)</title><rect x="7.0569%" y="437" width="6.6560%" height="15" fill="rgb(224,228,27)" fg:x="88" fg:w="83"/><text x="7.3069%" y="447.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (83 samples, 6.66%)</title><rect x="7.0569%" y="421" width="6.6560%" height="15" fill="rgb(219,35,40)" fg:x="88" fg:w="83"/><text x="7.3069%" y="431.50">engine::s..</text></g><g><title>core::iter::adapters::try_process (81 samples, 6.50%)</title><rect x="7.2173%" y="405" width="6.4956%" height="15" fill="rgb(234,42,8)" fg:x="90" fg:w="81"/><text x="7.4673%" y="415.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (81 samples, 6.50%)</title><rect x="7.2173%" y="389" width="6.4956%" height="15" fill="rgb(226,75,22)" fg:x="90" fg:w="81"/><text x="7.4673%" y="399.50">&lt;alloc::v..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (81 samples, 6.50%)</title><rect x="7.2173%" y="373" width="6.4956%" height="15" fill="rgb(242,203,28)" fg:x="90" fg:w="81"/><text x="7.4673%" y="383.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (30 samples, 2.41%)</title><rect x="11.3071%" y="357" width="2.4058%" height="15" fill="rgb(221,3,9)" fg:x="141" fg:w="30"/><text x="11.5571%" y="367.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.25%)</title><rect x="11.4675%" y="341" width="2.2454%" height="15" fill="rgb(214,34,31)" fg:x="143" fg:w="28"/><text x="11.7175%" y="351.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.25%)</title><rect x="11.4675%" y="325" width="2.2454%" height="15" fill="rgb(252,119,15)" fg:x="143" fg:w="28"/><text x="11.7175%" y="335.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.28%)</title><rect x="12.4298%" y="309" width="1.2831%" height="15" fill="rgb(244,224,31)" fg:x="155" fg:w="16"/><text x="12.6798%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6327%" y="293" width="0.0802%" height="15" fill="rgb(215,8,51)" fg:x="170" fg:w="1"/><text x="13.8827%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6327%" y="277" width="0.0802%" height="15" fill="rgb(207,24,1)" fg:x="170" fg:w="1"/><text x="13.8827%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.7129%" y="405" width="0.0802%" height="15" fill="rgb(245,90,0)" fg:x="171" fg:w="1"/><text x="13.9629%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.7129%" y="389" width="0.0802%" height="15" fill="rgb(246,43,48)" fg:x="171" fg:w="1"/><text x="13.9629%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.7129%" y="373" width="0.0802%" height="15" fill="rgb(252,218,10)" fg:x="171" fg:w="1"/><text x="13.9629%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="13.7931%" y="405" width="0.0802%" height="15" fill="rgb(231,24,35)" fg:x="172" fg:w="1"/><text x="14.0431%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="13.7931%" y="389" width="0.0802%" height="15" fill="rgb(225,66,19)" fg:x="172" fg:w="1"/><text x="14.0431%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.7931%" y="373" width="0.0802%" height="15" fill="rgb(214,96,51)" fg:x="172" fg:w="1"/><text x="14.0431%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7931%" y="357" width="0.0802%" height="15" fill="rgb(251,151,47)" fg:x="172" fg:w="1"/><text x="14.0431%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.7931%" y="341" width="0.0802%" height="15" fill="rgb(236,79,14)" fg:x="172" fg:w="1"/><text x="14.0431%" y="351.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="13.8733%" y="357" width="0.1604%" height="15" fill="rgb(210,205,11)" fg:x="173" fg:w="2"/><text x="14.1233%" y="367.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.9535%" y="341" width="0.0802%" height="15" fill="rgb(233,142,53)" fg:x="174" fg:w="1"/><text x="14.2035%" y="351.50"></text></g><g><title>&lt;replies::Json as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="13.9535%" y="325" width="0.0802%" height="15" fill="rgb(212,116,48)" fg:x="174" fg:w="1"/><text x="14.2035%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0337%" y="341" width="0.0802%" height="15" fill="rgb(234,55,33)" fg:x="175" fg:w="1"/><text x="14.2837%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0337%" y="325" width="0.0802%" height="15" fill="rgb(253,92,27)" fg:x="175" fg:w="1"/><text x="14.2837%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="13.8733%" y="389" width="0.3208%" height="15" fill="rgb(220,7,35)" fg:x="173" fg:w="4"/><text x="14.1233%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="13.8733%" y="373" width="0.3208%" height="15" fill="rgb(246,124,6)" fg:x="173" fg:w="4"/><text x="14.1233%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.0337%" y="357" width="0.1604%" height="15" fill="rgb(212,111,51)" fg:x="175" fg:w="2"/><text x="14.2837%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1139%" y="341" width="0.0802%" height="15" fill="rgb(253,116,7)" fg:x="176" fg:w="1"/><text x="14.3639%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1139%" y="325" width="0.0802%" height="15" fill="rgb(213,145,18)" fg:x="176" fg:w="1"/><text x="14.3639%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.1139%" y="309" width="0.0802%" height="15" fill="rgb(219,149,7)" fg:x="176" fg:w="1"/><text x="14.3639%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1139%" y="293" width="0.0802%" height="15" fill="rgb(225,156,20)" fg:x="176" fg:w="1"/><text x="14.3639%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.1139%" y="277" width="0.0802%" height="15" fill="rgb(211,98,19)" fg:x="176" fg:w="1"/><text x="14.3639%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.1941%" y="357" width="0.0802%" height="15" fill="rgb(231,192,31)" fg:x="177" fg:w="1"/><text x="14.4441%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="13.8733%" y="405" width="0.5613%" height="15" fill="rgb(249,95,19)" fg:x="173" fg:w="7"/><text x="14.1233%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="14.1941%" y="389" width="0.2406%" height="15" fill="rgb(247,101,36)" fg:x="177" fg:w="3"/><text x="14.4441%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="14.1941%" y="373" width="0.2406%" height="15" fill="rgb(221,45,43)" fg:x="177" fg:w="3"/><text x="14.4441%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="14.2743%" y="357" width="0.1604%" height="15" fill="rgb(220,42,1)" fg:x="178" fg:w="2"/><text x="14.5243%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="14.2743%" y="341" width="0.1604%" height="15" fill="rgb(236,19,24)" fg:x="178" fg:w="2"/><text x="14.5243%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="14.2743%" y="325" width="0.1604%" height="15" fill="rgb(225,192,6)" fg:x="178" fg:w="2"/><text x="14.5243%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="14.2743%" y="309" width="0.1604%" height="15" fill="rgb(242,30,19)" fg:x="178" fg:w="2"/><text x="14.5243%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="14.2743%" y="293" width="0.1604%" height="15" fill="rgb(240,36,6)" fg:x="178" fg:w="2"/><text x="14.5243%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.2743%" y="277" width="0.1604%" height="15" fill="rgb(246,40,28)" fg:x="178" fg:w="2"/><text x="14.5243%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.2743%" y="261" width="0.1604%" height="15" fill="rgb(225,155,33)" fg:x="178" fg:w="2"/><text x="14.5243%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3545%" y="245" width="0.0802%" height="15" fill="rgb(240,65,18)" fg:x="179" fg:w="1"/><text x="14.6045%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.4346%" y="357" width="0.0802%" height="15" fill="rgb(217,0,48)" fg:x="180" fg:w="1"/><text x="14.6846%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="14.5148%" y="293" width="0.0802%" height="15" fill="rgb(217,80,15)" fg:x="181" fg:w="1"/><text x="14.7648%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.5148%" y="277" width="0.0802%" height="15" fill="rgb(253,43,51)" fg:x="181" fg:w="1"/><text x="14.7648%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5148%" y="261" width="0.0802%" height="15" fill="rgb(246,60,4)" fg:x="181" fg:w="1"/><text x="14.7648%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.5950%" y="261" width="0.0802%" height="15" fill="rgb(230,40,54)" fg:x="182" fg:w="1"/><text x="14.8450%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="14.4346%" y="389" width="0.3208%" height="15" fill="rgb(208,20,44)" fg:x="180" fg:w="4"/><text x="14.6846%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.4346%" y="373" width="0.3208%" height="15" fill="rgb(230,22,22)" fg:x="180" fg:w="4"/><text x="14.6846%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.5148%" y="357" width="0.2406%" height="15" fill="rgb(207,57,4)" fg:x="181" fg:w="3"/><text x="14.7648%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.5148%" y="341" width="0.2406%" height="15" fill="rgb(242,130,33)" fg:x="181" fg:w="3"/><text x="14.7648%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="14.5148%" y="325" width="0.2406%" height="15" fill="rgb(218,66,43)" fg:x="181" fg:w="3"/><text x="14.7648%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.5148%" y="309" width="0.2406%" height="15" fill="rgb(236,105,16)" fg:x="181" fg:w="3"/><text x="14.7648%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.5950%" y="293" width="0.1604%" height="15" fill="rgb(230,46,15)" fg:x="182" fg:w="2"/><text x="14.8450%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.5950%" y="277" width="0.1604%" height="15" fill="rgb(251,172,40)" fg:x="182" fg:w="2"/><text x="14.8450%" y="287.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="14.6752%" y="261" width="0.0802%" height="15" fill="rgb(225,217,32)" fg:x="183" fg:w="1"/><text x="14.9252%" y="271.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="14.4346%" y="405" width="0.4010%" height="15" fill="rgb(243,10,29)" fg:x="180" fg:w="5"/><text x="14.6846%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="14.7554%" y="389" width="0.0802%" height="15" fill="rgb(207,102,10)" fg:x="184" fg:w="1"/><text x="15.0054%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.7554%" y="373" width="0.0802%" height="15" fill="rgb(241,125,5)" fg:x="184" fg:w="1"/><text x="15.0054%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7554%" y="357" width="0.0802%" height="15" fill="rgb(230,125,29)" fg:x="184" fg:w="1"/><text x="15.0054%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7554%" y="341" width="0.0802%" height="15" fill="rgb(223,65,44)" fg:x="184" fg:w="1"/><text x="15.0054%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7554%" y="325" width="0.0802%" height="15" fill="rgb(224,188,28)" fg:x="184" fg:w="1"/><text x="15.0054%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7554%" y="309" width="0.0802%" height="15" fill="rgb(254,197,27)" fg:x="184" fg:w="1"/><text x="15.0054%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7554%" y="293" width="0.0802%" height="15" fill="rgb(220,200,25)" fg:x="184" fg:w="1"/><text x="15.0054%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.7554%" y="277" width="0.0802%" height="15" fill="rgb(239,225,54)" fg:x="184" fg:w="1"/><text x="15.0054%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.7554%" y="261" width="0.0802%" height="15" fill="rgb(211,59,40)" fg:x="184" fg:w="1"/><text x="15.0054%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.7554%" y="245" width="0.0802%" height="15" fill="rgb(213,176,46)" fg:x="184" fg:w="1"/><text x="15.0054%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7554%" y="229" width="0.0802%" height="15" fill="rgb(226,99,4)" fg:x="184" fg:w="1"/><text x="15.0054%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7554%" y="213" width="0.0802%" height="15" fill="rgb(239,203,43)" fg:x="184" fg:w="1"/><text x="15.0054%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.7554%" y="197" width="0.0802%" height="15" fill="rgb(246,1,45)" fg:x="184" fg:w="1"/><text x="15.0054%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.7554%" y="181" width="0.0802%" height="15" fill="rgb(231,42,52)" fg:x="184" fg:w="1"/><text x="15.0054%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.7554%" y="165" width="0.0802%" height="15" fill="rgb(240,13,50)" fg:x="184" fg:w="1"/><text x="15.0054%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.7554%" y="149" width="0.0802%" height="15" fill="rgb(225,81,14)" fg:x="184" fg:w="1"/><text x="15.0054%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7554%" y="133" width="0.0802%" height="15" fill="rgb(216,182,23)" fg:x="184" fg:w="1"/><text x="15.0054%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.8356%" y="357" width="0.0802%" height="15" fill="rgb(233,137,19)" fg:x="185" fg:w="1"/><text x="15.0856%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.8356%" y="373" width="0.1604%" height="15" fill="rgb(242,61,46)" fg:x="185" fg:w="2"/><text x="15.0856%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.9158%" y="357" width="0.0802%" height="15" fill="rgb(221,168,51)" fg:x="186" fg:w="1"/><text x="15.1658%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9158%" y="341" width="0.0802%" height="15" fill="rgb(238,48,15)" fg:x="186" fg:w="1"/><text x="15.1658%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.9158%" y="325" width="0.0802%" height="15" fill="rgb(216,13,16)" fg:x="186" fg:w="1"/><text x="15.1658%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9158%" y="309" width="0.0802%" height="15" fill="rgb(223,185,34)" fg:x="186" fg:w="1"/><text x="15.1658%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9158%" y="293" width="0.0802%" height="15" fill="rgb(228,94,42)" fg:x="186" fg:w="1"/><text x="15.1658%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="14.9960%" y="373" width="0.0802%" height="15" fill="rgb(218,166,43)" fg:x="187" fg:w="1"/><text x="15.2460%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.9960%" y="357" width="0.0802%" height="15" fill="rgb(232,30,50)" fg:x="187" fg:w="1"/><text x="15.2460%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.44%)</title><rect x="13.7129%" y="421" width="1.4435%" height="15" fill="rgb(245,206,45)" fg:x="171" fg:w="18"/><text x="13.9629%" y="431.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="14.8356%" y="405" width="0.3208%" height="15" fill="rgb(220,56,22)" fg:x="185" fg:w="4"/><text x="15.0856%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="14.8356%" y="389" width="0.3208%" height="15" fill="rgb(239,129,38)" fg:x="185" fg:w="4"/><text x="15.0856%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.0762%" y="373" width="0.0802%" height="15" fill="rgb(207,68,41)" fg:x="188" fg:w="1"/><text x="15.3262%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.0762%" y="357" width="0.0802%" height="15" fill="rgb(221,21,7)" fg:x="188" fg:w="1"/><text x="15.3262%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.0762%" y="341" width="0.0802%" height="15" fill="rgb(240,33,25)" fg:x="188" fg:w="1"/><text x="15.3262%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.0762%" y="325" width="0.0802%" height="15" fill="rgb(242,119,10)" fg:x="188" fg:w="1"/><text x="15.3262%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.0762%" y="309" width="0.0802%" height="15" fill="rgb(214,149,40)" fg:x="188" fg:w="1"/><text x="15.3262%" y="319.50"></text></g><g><title>plugins_core::build::Build::into_entry (20 samples, 1.60%)</title><rect x="13.7129%" y="437" width="1.6038%" height="15" fill="rgb(228,25,36)" fg:x="171" fg:w="20"/><text x="13.9629%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="15.1564%" y="421" width="0.1604%" height="15" fill="rgb(222,59,15)" fg:x="189" fg:w="2"/><text x="15.4064%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.1564%" y="405" width="0.1604%" height="15" fill="rgb(218,170,0)" fg:x="189" fg:w="2"/><text x="15.4064%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1564%" y="389" width="0.1604%" height="15" fill="rgb(232,173,23)" fg:x="189" fg:w="2"/><text x="15.4064%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1564%" y="373" width="0.1604%" height="15" fill="rgb(218,116,1)" fg:x="189" fg:w="2"/><text x="15.4064%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.1564%" y="357" width="0.1604%" height="15" fill="rgb(207,34,4)" fg:x="189" fg:w="2"/><text x="15.4064%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1564%" y="341" width="0.1604%" height="15" fill="rgb(229,54,52)" fg:x="189" fg:w="2"/><text x="15.4064%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1564%" y="325" width="0.1604%" height="15" fill="rgb(211,86,23)" fg:x="189" fg:w="2"/><text x="15.4064%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2366%" y="309" width="0.0802%" height="15" fill="rgb(254,153,34)" fg:x="190" fg:w="1"/><text x="15.4866%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.2366%" y="293" width="0.0802%" height="15" fill="rgb(219,220,14)" fg:x="190" fg:w="1"/><text x="15.4866%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.2366%" y="277" width="0.0802%" height="15" fill="rgb(247,8,26)" fg:x="190" fg:w="1"/><text x="15.4866%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="15.3168%" y="421" width="0.0802%" height="15" fill="rgb(213,129,42)" fg:x="191" fg:w="1"/><text x="15.5668%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.3168%" y="405" width="0.0802%" height="15" fill="rgb(225,95,41)" fg:x="191" fg:w="1"/><text x="15.5668%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.3168%" y="389" width="0.0802%" height="15" fill="rgb(215,134,24)" fg:x="191" fg:w="1"/><text x="15.5668%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3970%" y="357" width="0.0802%" height="15" fill="rgb(235,23,54)" fg:x="192" fg:w="1"/><text x="15.6470%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3970%" y="341" width="0.0802%" height="15" fill="rgb(229,96,31)" fg:x="192" fg:w="1"/><text x="15.6470%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3970%" y="325" width="0.0802%" height="15" fill="rgb(206,111,12)" fg:x="192" fg:w="1"/><text x="15.6470%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3970%" y="309" width="0.0802%" height="15" fill="rgb(222,177,8)" fg:x="192" fg:w="1"/><text x="15.6470%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.3970%" y="293" width="0.0802%" height="15" fill="rgb(251,36,52)" fg:x="192" fg:w="1"/><text x="15.6470%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.3970%" y="277" width="0.0802%" height="15" fill="rgb(216,182,29)" fg:x="192" fg:w="1"/><text x="15.6470%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.3970%" y="261" width="0.0802%" height="15" fill="rgb(241,145,50)" fg:x="192" fg:w="1"/><text x="15.6470%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3970%" y="245" width="0.0802%" height="15" fill="rgb(231,71,35)" fg:x="192" fg:w="1"/><text x="15.6470%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3970%" y="229" width="0.0802%" height="15" fill="rgb(218,22,17)" fg:x="192" fg:w="1"/><text x="15.6470%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.3970%" y="213" width="0.0802%" height="15" fill="rgb(225,227,6)" fg:x="192" fg:w="1"/><text x="15.6470%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.3970%" y="197" width="0.0802%" height="15" fill="rgb(224,204,17)" fg:x="192" fg:w="1"/><text x="15.6470%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.3970%" y="181" width="0.0802%" height="15" fill="rgb(227,61,28)" fg:x="192" fg:w="1"/><text x="15.6470%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.3970%" y="165" width="0.0802%" height="15" fill="rgb(242,148,23)" fg:x="192" fg:w="1"/><text x="15.6470%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3970%" y="149" width="0.0802%" height="15" fill="rgb(237,105,33)" fg:x="192" fg:w="1"/><text x="15.6470%" y="159.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="15.3970%" y="421" width="0.2406%" height="15" fill="rgb(238,218,40)" fg:x="192" fg:w="3"/><text x="15.6470%" y="431.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="15.3970%" y="405" width="0.2406%" height="15" fill="rgb(209,126,11)" fg:x="192" fg:w="3"/><text x="15.6470%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.3970%" y="389" width="0.2406%" height="15" fill="rgb(245,90,11)" fg:x="192" fg:w="3"/><text x="15.6470%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.3970%" y="373" width="0.2406%" height="15" fill="rgb(211,195,10)" fg:x="192" fg:w="3"/><text x="15.6470%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.4771%" y="357" width="0.1604%" height="15" fill="rgb(231,45,45)" fg:x="193" fg:w="2"/><text x="15.7271%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.4771%" y="341" width="0.1604%" height="15" fill="rgb(246,100,43)" fg:x="193" fg:w="2"/><text x="15.7271%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.4771%" y="325" width="0.1604%" height="15" fill="rgb(241,193,8)" fg:x="193" fg:w="2"/><text x="15.7271%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.4771%" y="309" width="0.1604%" height="15" fill="rgb(208,76,19)" fg:x="193" fg:w="2"/><text x="15.7271%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.4771%" y="293" width="0.1604%" height="15" fill="rgb(223,69,40)" fg:x="193" fg:w="2"/><text x="15.7271%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.4771%" y="277" width="0.1604%" height="15" fill="rgb(207,120,39)" fg:x="193" fg:w="2"/><text x="15.7271%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.6375%" y="405" width="0.0802%" height="15" fill="rgb(212,209,28)" fg:x="195" fg:w="1"/><text x="15.8875%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.6375%" y="421" width="0.1604%" height="15" fill="rgb(246,82,29)" fg:x="195" fg:w="2"/><text x="15.8875%" y="431.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7177%" y="405" width="0.0802%" height="15" fill="rgb(239,6,40)" fg:x="196" fg:w="1"/><text x="15.9677%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7177%" y="389" width="0.0802%" height="15" fill="rgb(228,181,35)" fg:x="196" fg:w="1"/><text x="15.9677%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.7177%" y="373" width="0.0802%" height="15" fill="rgb(238,151,2)" fg:x="196" fg:w="1"/><text x="15.9677%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="15.7177%" y="357" width="0.0802%" height="15" fill="rgb(236,94,18)" fg:x="196" fg:w="1"/><text x="15.9677%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.7177%" y="341" width="0.0802%" height="15" fill="rgb(208,38,14)" fg:x="196" fg:w="1"/><text x="15.9677%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.8781%" y="341" width="0.1604%" height="15" fill="rgb(234,215,27)" fg:x="198" fg:w="2"/><text x="16.1281%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.8781%" y="325" width="0.1604%" height="15" fill="rgb(254,211,53)" fg:x="198" fg:w="2"/><text x="16.1281%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9583%" y="309" width="0.0802%" height="15" fill="rgb(216,175,11)" fg:x="199" fg:w="1"/><text x="16.2083%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9583%" y="293" width="0.0802%" height="15" fill="rgb(246,179,26)" fg:x="199" fg:w="1"/><text x="16.2083%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.8781%" y="373" width="0.2406%" height="15" fill="rgb(249,19,52)" fg:x="198" fg:w="3"/><text x="16.1281%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.8781%" y="357" width="0.2406%" height="15" fill="rgb(230,42,52)" fg:x="198" fg:w="3"/><text x="16.1281%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.0385%" y="341" width="0.0802%" height="15" fill="rgb(221,171,0)" fg:x="200" fg:w="1"/><text x="16.2885%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="16.1989%" y="357" width="0.0802%" height="15" fill="rgb(222,177,40)" fg:x="202" fg:w="1"/><text x="16.4489%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.1989%" y="341" width="0.0802%" height="15" fill="rgb(247,34,16)" fg:x="202" fg:w="1"/><text x="16.4489%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.1989%" y="325" width="0.0802%" height="15" fill="rgb(213,217,37)" fg:x="202" fg:w="1"/><text x="16.4489%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2791%" y="309" width="0.0802%" height="15" fill="rgb(231,189,24)" fg:x="203" fg:w="1"/><text x="16.5291%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2791%" y="293" width="0.0802%" height="15" fill="rgb(214,22,9)" fg:x="203" fg:w="1"/><text x="16.5291%" y="303.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="15.7979%" y="421" width="0.6415%" height="15" fill="rgb(212,70,22)" fg:x="197" fg:w="8"/><text x="16.0479%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="15.8781%" y="405" width="0.5613%" height="15" fill="rgb(249,64,51)" fg:x="198" fg:w="7"/><text x="16.1281%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="15.8781%" y="389" width="0.5613%" height="15" fill="rgb(249,148,20)" fg:x="198" fg:w="7"/><text x="16.1281%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="16.1187%" y="373" width="0.3208%" height="15" fill="rgb(246,46,48)" fg:x="201" fg:w="4"/><text x="16.3687%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.2791%" y="357" width="0.1604%" height="15" fill="rgb(217,34,48)" fg:x="203" fg:w="2"/><text x="16.5291%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.2791%" y="341" width="0.1604%" height="15" fill="rgb(222,45,26)" fg:x="203" fg:w="2"/><text x="16.5291%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.2791%" y="325" width="0.1604%" height="15" fill="rgb(230,201,36)" fg:x="203" fg:w="2"/><text x="16.5291%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3593%" y="309" width="0.0802%" height="15" fill="rgb(217,30,43)" fg:x="204" fg:w="1"/><text x="16.6093%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3593%" y="293" width="0.0802%" height="15" fill="rgb(230,197,40)" fg:x="204" fg:w="1"/><text x="16.6093%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.3593%" y="277" width="0.0802%" height="15" fill="rgb(239,181,18)" fg:x="204" fg:w="1"/><text x="16.6093%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.3593%" y="261" width="0.0802%" height="15" fill="rgb(222,60,39)" fg:x="204" fg:w="1"/><text x="16.6093%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.3593%" y="245" width="0.0802%" height="15" fill="rgb(210,60,22)" fg:x="204" fg:w="1"/><text x="16.6093%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3593%" y="229" width="0.0802%" height="15" fill="rgb(239,213,48)" fg:x="204" fg:w="1"/><text x="16.6093%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3593%" y="213" width="0.0802%" height="15" fill="rgb(253,214,23)" fg:x="204" fg:w="1"/><text x="16.6093%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.3593%" y="197" width="0.0802%" height="15" fill="rgb(211,98,45)" fg:x="204" fg:w="1"/><text x="16.6093%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.3593%" y="181" width="0.0802%" height="15" fill="rgb(239,130,44)" fg:x="204" fg:w="1"/><text x="16.6093%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.3593%" y="165" width="0.0802%" height="15" fill="rgb(222,181,35)" fg:x="204" fg:w="1"/><text x="16.6093%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.3593%" y="149" width="0.0802%" height="15" fill="rgb(219,219,49)" fg:x="204" fg:w="1"/><text x="16.6093%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3593%" y="133" width="0.0802%" height="15" fill="rgb(227,161,51)" fg:x="204" fg:w="1"/><text x="16.6093%" y="143.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="16.4395%" y="405" width="0.1604%" height="15" fill="rgb(239,112,27)" fg:x="205" fg:w="2"/><text x="16.6895%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.5196%" y="389" width="0.0802%" height="15" fill="rgb(248,122,18)" fg:x="206" fg:w="1"/><text x="16.7696%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.5196%" y="373" width="0.0802%" height="15" fill="rgb(245,130,23)" fg:x="206" fg:w="1"/><text x="16.7696%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.5196%" y="357" width="0.0802%" height="15" fill="rgb(211,225,28)" fg:x="206" fg:w="1"/><text x="16.7696%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (39 samples, 3.13%)</title><rect x="13.7129%" y="453" width="3.1275%" height="15" fill="rgb(242,105,44)" fg:x="171" fg:w="39"/><text x="13.9629%" y="463.50">plu..</text></g><g><title>plugins_core::tools::set_container (19 samples, 1.52%)</title><rect x="15.3168%" y="437" width="1.5237%" height="15" fill="rgb(216,183,46)" fg:x="191" fg:w="19"/><text x="15.5668%" y="447.50"></text></g><g><title>plugins_core::location::Location::set (5 samples, 0.40%)</title><rect x="16.4395%" y="421" width="0.4010%" height="15" fill="rgb(227,112,9)" fg:x="205" fg:w="5"/><text x="16.6895%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="16.5998%" y="405" width="0.2406%" height="15" fill="rgb(244,21,0)" fg:x="207" fg:w="3"/><text x="16.8498%" y="415.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="16.5998%" y="389" width="0.2406%" height="15" fill="rgb(236,185,14)" fg:x="207" fg:w="3"/><text x="16.8498%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="16.5998%" y="373" width="0.2406%" height="15" fill="rgb(236,170,30)" fg:x="207" fg:w="3"/><text x="16.8498%" y="383.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="16.5998%" y="357" width="0.2406%" height="15" fill="rgb(209,198,51)" fg:x="207" fg:w="3"/><text x="16.8498%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="16.5998%" y="341" width="0.2406%" height="15" fill="rgb(205,171,26)" fg:x="207" fg:w="3"/><text x="16.8498%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="16.5998%" y="325" width="0.2406%" height="15" fill="rgb(246,41,49)" fg:x="207" fg:w="3"/><text x="16.8498%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="16.5998%" y="309" width="0.2406%" height="15" fill="rgb(240,229,12)" fg:x="207" fg:w="3"/><text x="16.8498%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.6800%" y="293" width="0.1604%" height="15" fill="rgb(212,8,54)" fg:x="208" fg:w="2"/><text x="16.9300%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.8404%" y="421" width="0.0802%" height="15" fill="rgb(230,114,13)" fg:x="210" fg:w="1"/><text x="17.0904%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.8404%" y="405" width="0.0802%" height="15" fill="rgb(229,130,28)" fg:x="210" fg:w="1"/><text x="17.0904%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.8404%" y="389" width="0.0802%" height="15" fill="rgb(206,139,15)" fg:x="210" fg:w="1"/><text x="17.0904%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.8404%" y="373" width="0.0802%" height="15" fill="rgb(241,188,35)" fg:x="210" fg:w="1"/><text x="17.0904%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.8404%" y="357" width="0.0802%" height="15" fill="rgb(208,224,26)" fg:x="210" fg:w="1"/><text x="17.0904%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.8404%" y="341" width="0.0802%" height="15" fill="rgb(251,131,28)" fg:x="210" fg:w="1"/><text x="17.0904%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.8404%" y="325" width="0.0802%" height="15" fill="rgb(208,153,1)" fg:x="210" fg:w="1"/><text x="17.0904%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.8404%" y="309" width="0.0802%" height="15" fill="rgb(234,33,36)" fg:x="210" fg:w="1"/><text x="17.0904%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.8404%" y="293" width="0.0802%" height="15" fill="rgb(246,42,29)" fg:x="210" fg:w="1"/><text x="17.0904%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8404%" y="277" width="0.0802%" height="15" fill="rgb(251,114,16)" fg:x="210" fg:w="1"/><text x="17.0904%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.9206%" y="421" width="0.0802%" height="15" fill="rgb(233,13,38)" fg:x="211" fg:w="1"/><text x="17.1706%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.0810%" y="373" width="0.0802%" height="15" fill="rgb(247,120,19)" fg:x="213" fg:w="1"/><text x="17.3310%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="17.0008%" y="405" width="0.3208%" height="15" fill="rgb(205,11,16)" fg:x="212" fg:w="4"/><text x="17.2508%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.0810%" y="389" width="0.2406%" height="15" fill="rgb(228,185,19)" fg:x="213" fg:w="3"/><text x="17.3310%" y="399.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.1612%" y="373" width="0.1604%" height="15" fill="rgb(239,88,52)" fg:x="214" fg:w="2"/><text x="17.4112%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.1612%" y="357" width="0.1604%" height="15" fill="rgb(219,23,1)" fg:x="214" fg:w="2"/><text x="17.4112%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.1612%" y="341" width="0.1604%" height="15" fill="rgb(253,177,16)" fg:x="214" fg:w="2"/><text x="17.4112%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.1612%" y="325" width="0.1604%" height="15" fill="rgb(225,150,40)" fg:x="214" fg:w="2"/><text x="17.4112%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.2414%" y="309" width="0.0802%" height="15" fill="rgb(208,108,30)" fg:x="215" fg:w="1"/><text x="17.4914%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2414%" y="293" width="0.0802%" height="15" fill="rgb(214,122,4)" fg:x="215" fg:w="1"/><text x="17.4914%" y="303.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.48%)</title><rect x="17.0008%" y="421" width="0.4812%" height="15" fill="rgb(229,74,37)" fg:x="212" fg:w="6"/><text x="17.2508%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.3216%" y="405" width="0.1604%" height="15" fill="rgb(233,61,41)" fg:x="216" fg:w="2"/><text x="17.5716%" y="415.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="17.3216%" y="389" width="0.1604%" height="15" fill="rgb(238,191,5)" fg:x="216" fg:w="2"/><text x="17.5716%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.3216%" y="373" width="0.1604%" height="15" fill="rgb(233,78,24)" fg:x="216" fg:w="2"/><text x="17.5716%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4018%" y="357" width="0.0802%" height="15" fill="rgb(211,142,8)" fg:x="217" fg:w="1"/><text x="17.6518%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4018%" y="341" width="0.0802%" height="15" fill="rgb(253,38,53)" fg:x="217" fg:w="1"/><text x="17.6518%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="17.4820%" y="405" width="0.0802%" height="15" fill="rgb(234,63,51)" fg:x="218" fg:w="1"/><text x="17.7320%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="17.4820%" y="389" width="0.0802%" height="15" fill="rgb(205,23,31)" fg:x="218" fg:w="1"/><text x="17.7320%" y="399.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.4820%" y="373" width="0.0802%" height="15" fill="rgb(210,184,50)" fg:x="218" fg:w="1"/><text x="17.7320%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.4820%" y="357" width="0.0802%" height="15" fill="rgb(222,112,26)" fg:x="218" fg:w="1"/><text x="17.7320%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4820%" y="341" width="0.0802%" height="15" fill="rgb(250,98,18)" fg:x="218" fg:w="1"/><text x="17.7320%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4820%" y="325" width="0.0802%" height="15" fill="rgb(250,34,12)" fg:x="218" fg:w="1"/><text x="17.7320%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.4820%" y="309" width="0.0802%" height="15" fill="rgb(236,141,30)" fg:x="218" fg:w="1"/><text x="17.7320%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5621%" y="373" width="0.0802%" height="15" fill="rgb(246,134,38)" fg:x="219" fg:w="1"/><text x="17.8121%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="17.4820%" y="421" width="0.2406%" height="15" fill="rgb(240,114,4)" fg:x="218" fg:w="3"/><text x="17.7320%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="17.5621%" y="405" width="0.1604%" height="15" fill="rgb(243,113,39)" fg:x="219" fg:w="2"/><text x="17.8121%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.5621%" y="389" width="0.1604%" height="15" fill="rgb(239,215,4)" fg:x="219" fg:w="2"/><text x="17.8121%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.6423%" y="373" width="0.0802%" height="15" fill="rgb(236,229,45)" fg:x="220" fg:w="1"/><text x="17.8923%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="17.6423%" y="357" width="0.0802%" height="15" fill="rgb(242,2,6)" fg:x="220" fg:w="1"/><text x="17.8923%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="17.6423%" y="341" width="0.0802%" height="15" fill="rgb(239,108,21)" fg:x="220" fg:w="1"/><text x="17.8923%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6423%" y="325" width="0.0802%" height="15" fill="rgb(215,168,34)" fg:x="220" fg:w="1"/><text x="17.8923%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="17.6423%" y="309" width="0.0802%" height="15" fill="rgb(238,31,17)" fg:x="220" fg:w="1"/><text x="17.8923%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6423%" y="293" width="0.0802%" height="15" fill="rgb(220,133,11)" fg:x="220" fg:w="1"/><text x="17.8923%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="17.6423%" y="277" width="0.0802%" height="15" fill="rgb(212,158,23)" fg:x="220" fg:w="1"/><text x="17.8923%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6423%" y="261" width="0.0802%" height="15" fill="rgb(223,172,7)" fg:x="220" fg:w="1"/><text x="17.8923%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6423%" y="245" width="0.0802%" height="15" fill="rgb(244,3,52)" fg:x="220" fg:w="1"/><text x="17.8923%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="17.7225%" y="405" width="0.1604%" height="15" fill="rgb(207,69,27)" fg:x="221" fg:w="2"/><text x="17.9725%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.7225%" y="389" width="0.1604%" height="15" fill="rgb(213,136,45)" fg:x="221" fg:w="2"/><text x="17.9725%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.7225%" y="373" width="0.1604%" height="15" fill="rgb(218,79,17)" fg:x="221" fg:w="2"/><text x="17.9725%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.7225%" y="357" width="0.1604%" height="15" fill="rgb(216,106,36)" fg:x="221" fg:w="2"/><text x="17.9725%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.7225%" y="341" width="0.1604%" height="15" fill="rgb(251,27,45)" fg:x="221" fg:w="2"/><text x="17.9725%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8027%" y="325" width="0.0802%" height="15" fill="rgb(232,21,34)" fg:x="222" fg:w="1"/><text x="18.0527%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8027%" y="309" width="0.0802%" height="15" fill="rgb(249,191,16)" fg:x="222" fg:w="1"/><text x="18.0527%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8027%" y="293" width="0.0802%" height="15" fill="rgb(224,88,20)" fg:x="222" fg:w="1"/><text x="18.0527%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8027%" y="277" width="0.0802%" height="15" fill="rgb(237,93,27)" fg:x="222" fg:w="1"/><text x="18.0527%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8027%" y="261" width="0.0802%" height="15" fill="rgb(226,198,48)" fg:x="222" fg:w="1"/><text x="18.0527%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8027%" y="245" width="0.0802%" height="15" fill="rgb(207,162,53)" fg:x="222" fg:w="1"/><text x="18.0527%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8027%" y="229" width="0.0802%" height="15" fill="rgb(207,169,9)" fg:x="222" fg:w="1"/><text x="18.0527%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.8027%" y="213" width="0.0802%" height="15" fill="rgb(224,166,46)" fg:x="222" fg:w="1"/><text x="18.0527%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.8027%" y="197" width="0.0802%" height="15" fill="rgb(233,26,6)" fg:x="222" fg:w="1"/><text x="18.0527%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.8027%" y="181" width="0.0802%" height="15" fill="rgb(218,106,45)" fg:x="222" fg:w="1"/><text x="18.0527%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.8027%" y="165" width="0.0802%" height="15" fill="rgb(240,217,4)" fg:x="222" fg:w="1"/><text x="18.0527%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8027%" y="149" width="0.0802%" height="15" fill="rgb(246,171,10)" fg:x="222" fg:w="1"/><text x="18.0527%" y="159.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="17.8829%" y="389" width="0.0802%" height="15" fill="rgb(223,197,30)" fg:x="223" fg:w="1"/><text x="18.1329%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.0433%" y="341" width="0.0802%" height="15" fill="rgb(207,92,16)" fg:x="225" fg:w="1"/><text x="18.2933%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.0433%" y="325" width="0.0802%" height="15" fill="rgb(211,6,44)" fg:x="225" fg:w="1"/><text x="18.2933%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="17.8829%" y="405" width="0.3208%" height="15" fill="rgb(219,139,2)" fg:x="223" fg:w="4"/><text x="18.1329%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.9631%" y="389" width="0.2406%" height="15" fill="rgb(224,103,21)" fg:x="224" fg:w="3"/><text x="18.2131%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.0433%" y="373" width="0.1604%" height="15" fill="rgb(254,110,48)" fg:x="225" fg:w="2"/><text x="18.2933%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0433%" y="357" width="0.1604%" height="15" fill="rgb(212,88,19)" fg:x="225" fg:w="2"/><text x="18.2933%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.1235%" y="341" width="0.0802%" height="15" fill="rgb(248,103,6)" fg:x="226" fg:w="1"/><text x="18.3735%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1235%" y="325" width="0.0802%" height="15" fill="rgb(214,53,46)" fg:x="226" fg:w="1"/><text x="18.3735%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.1235%" y="309" width="0.0802%" height="15" fill="rgb(236,190,24)" fg:x="226" fg:w="1"/><text x="18.3735%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.1235%" y="293" width="0.0802%" height="15" fill="rgb(254,58,28)" fg:x="226" fg:w="1"/><text x="18.3735%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.1235%" y="277" width="0.0802%" height="15" fill="rgb(243,63,27)" fg:x="226" fg:w="1"/><text x="18.3735%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="17.7225%" y="421" width="0.5613%" height="15" fill="rgb(206,81,20)" fg:x="221" fg:w="7"/><text x="17.9725%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.2037%" y="405" width="0.0802%" height="15" fill="rgb(252,69,51)" fg:x="227" fg:w="1"/><text x="18.4537%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.2037%" y="389" width="0.0802%" height="15" fill="rgb(222,213,4)" fg:x="227" fg:w="1"/><text x="18.4537%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.2037%" y="373" width="0.0802%" height="15" fill="rgb(226,198,12)" fg:x="227" fg:w="1"/><text x="18.4537%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2839%" y="357" width="0.0802%" height="15" fill="rgb(248,115,11)" fg:x="228" fg:w="1"/><text x="18.5339%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2839%" y="341" width="0.0802%" height="15" fill="rgb(221,148,54)" fg:x="228" fg:w="1"/><text x="18.5339%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2839%" y="325" width="0.0802%" height="15" fill="rgb(214,209,51)" fg:x="228" fg:w="1"/><text x="18.5339%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="18.2839%" y="309" width="0.0802%" height="15" fill="rgb(249,116,53)" fg:x="228" fg:w="1"/><text x="18.5339%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="18.2839%" y="293" width="0.0802%" height="15" fill="rgb(248,170,1)" fg:x="228" fg:w="1"/><text x="18.5339%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.2839%" y="389" width="0.1604%" height="15" fill="rgb(244,105,10)" fg:x="228" fg:w="2"/><text x="18.5339%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.2839%" y="373" width="0.1604%" height="15" fill="rgb(229,100,5)" fg:x="228" fg:w="2"/><text x="18.5339%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3641%" y="357" width="0.0802%" height="15" fill="rgb(233,221,39)" fg:x="229" fg:w="1"/><text x="18.6141%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3641%" y="341" width="0.0802%" height="15" fill="rgb(233,88,21)" fg:x="229" fg:w="1"/><text x="18.6141%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.3641%" y="325" width="0.0802%" height="15" fill="rgb(206,13,0)" fg:x="229" fg:w="1"/><text x="18.6141%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3641%" y="309" width="0.0802%" height="15" fill="rgb(242,15,35)" fg:x="229" fg:w="1"/><text x="18.6141%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3641%" y="293" width="0.0802%" height="15" fill="rgb(247,142,41)" fg:x="229" fg:w="1"/><text x="18.6141%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3641%" y="277" width="0.0802%" height="15" fill="rgb(245,51,29)" fg:x="229" fg:w="1"/><text x="18.6141%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (21 samples, 1.68%)</title><rect x="16.8404%" y="437" width="1.6840%" height="15" fill="rgb(228,209,43)" fg:x="210" fg:w="21"/><text x="17.0904%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="18.2839%" y="421" width="0.2406%" height="15" fill="rgb(233,185,9)" fg:x="228" fg:w="3"/><text x="18.5339%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="18.2839%" y="405" width="0.2406%" height="15" fill="rgb(226,93,0)" fg:x="228" fg:w="3"/><text x="18.5339%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="18.4443%" y="389" width="0.0802%" height="15" fill="rgb(245,194,43)" fg:x="230" fg:w="1"/><text x="18.6943%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.4443%" y="373" width="0.0802%" height="15" fill="rgb(211,145,34)" fg:x="230" fg:w="1"/><text x="18.6943%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.4443%" y="357" width="0.0802%" height="15" fill="rgb(231,228,28)" fg:x="230" fg:w="1"/><text x="18.6943%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.4443%" y="341" width="0.0802%" height="15" fill="rgb(236,149,4)" fg:x="230" fg:w="1"/><text x="18.6943%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.4443%" y="325" width="0.0802%" height="15" fill="rgb(234,114,38)" fg:x="230" fg:w="1"/><text x="18.6943%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.4443%" y="309" width="0.0802%" height="15" fill="rgb(246,132,51)" fg:x="230" fg:w="1"/><text x="18.6943%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.4443%" y="293" width="0.0802%" height="15" fill="rgb(251,137,22)" fg:x="230" fg:w="1"/><text x="18.6943%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.4443%" y="277" width="0.0802%" height="15" fill="rgb(243,59,52)" fg:x="230" fg:w="1"/><text x="18.6943%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (23 samples, 1.84%)</title><rect x="16.8404%" y="453" width="1.8444%" height="15" fill="rgb(239,56,28)" fg:x="210" fg:w="23"/><text x="17.0904%" y="463.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.5245%" y="437" width="0.1604%" height="15" fill="rgb(218,168,27)" fg:x="231" fg:w="2"/><text x="18.7745%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.5245%" y="421" width="0.1604%" height="15" fill="rgb(232,165,11)" fg:x="231" fg:w="2"/><text x="18.7745%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.5245%" y="405" width="0.1604%" height="15" fill="rgb(253,55,41)" fg:x="231" fg:w="2"/><text x="18.7745%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6047%" y="389" width="0.0802%" height="15" fill="rgb(233,206,24)" fg:x="232" fg:w="1"/><text x="18.8547%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.6047%" y="373" width="0.0802%" height="15" fill="rgb(220,199,8)" fg:x="232" fg:w="1"/><text x="18.8547%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6047%" y="357" width="0.0802%" height="15" fill="rgb(254,65,26)" fg:x="232" fg:w="1"/><text x="18.8547%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="18.6047%" y="341" width="0.0802%" height="15" fill="rgb(253,102,23)" fg:x="232" fg:w="1"/><text x="18.8547%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.6848%" y="357" width="0.0802%" height="15" fill="rgb(231,103,35)" fg:x="233" fg:w="1"/><text x="18.9348%" y="367.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="18.6848%" y="421" width="0.1604%" height="15" fill="rgb(238,26,10)" fg:x="233" fg:w="2"/><text x="18.9348%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="18.6848%" y="405" width="0.1604%" height="15" fill="rgb(234,191,34)" fg:x="233" fg:w="2"/><text x="18.9348%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="18.6848%" y="389" width="0.1604%" height="15" fill="rgb(206,210,9)" fg:x="233" fg:w="2"/><text x="18.9348%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.6848%" y="373" width="0.1604%" height="15" fill="rgb(219,155,3)" fg:x="233" fg:w="2"/><text x="18.9348%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="18.7650%" y="357" width="0.0802%" height="15" fill="rgb(221,62,52)" fg:x="234" fg:w="1"/><text x="19.0150%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="18.7650%" y="341" width="0.0802%" height="15" fill="rgb(215,197,36)" fg:x="234" fg:w="1"/><text x="19.0150%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.7650%" y="325" width="0.0802%" height="15" fill="rgb(226,222,6)" fg:x="234" fg:w="1"/><text x="19.0150%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.7650%" y="309" width="0.0802%" height="15" fill="rgb(215,58,28)" fg:x="234" fg:w="1"/><text x="19.0150%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.0056%" y="405" width="0.0802%" height="15" fill="rgb(212,148,2)" fg:x="237" fg:w="1"/><text x="19.2556%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0056%" y="389" width="0.0802%" height="15" fill="rgb(208,21,42)" fg:x="237" fg:w="1"/><text x="19.2556%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0056%" y="373" width="0.0802%" height="15" fill="rgb(209,107,26)" fg:x="237" fg:w="1"/><text x="19.2556%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.0056%" y="357" width="0.0802%" height="15" fill="rgb(254,60,47)" fg:x="237" fg:w="1"/><text x="19.2556%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.0056%" y="341" width="0.0802%" height="15" fill="rgb(207,226,45)" fg:x="237" fg:w="1"/><text x="19.2556%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.0056%" y="325" width="0.0802%" height="15" fill="rgb(223,124,22)" fg:x="237" fg:w="1"/><text x="19.2556%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0056%" y="309" width="0.0802%" height="15" fill="rgb(240,162,13)" fg:x="237" fg:w="1"/><text x="19.2556%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0056%" y="293" width="0.0802%" height="15" fill="rgb(244,199,31)" fg:x="237" fg:w="1"/><text x="19.2556%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.0056%" y="277" width="0.0802%" height="15" fill="rgb(207,92,16)" fg:x="237" fg:w="1"/><text x="19.2556%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.0056%" y="261" width="0.0802%" height="15" fill="rgb(215,31,19)" fg:x="237" fg:w="1"/><text x="19.2556%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.0056%" y="245" width="0.0802%" height="15" fill="rgb(245,118,14)" fg:x="237" fg:w="1"/><text x="19.2556%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.0056%" y="229" width="0.0802%" height="15" fill="rgb(248,12,46)" fg:x="237" fg:w="1"/><text x="19.2556%" y="239.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.48%)</title><rect x="18.6848%" y="453" width="0.4812%" height="15" fill="rgb(209,119,0)" fg:x="233" fg:w="6"/><text x="18.9348%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (6 samples, 0.48%)</title><rect x="18.6848%" y="437" width="0.4812%" height="15" fill="rgb(254,51,44)" fg:x="233" fg:w="6"/><text x="18.9348%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="18.8452%" y="421" width="0.3208%" height="15" fill="rgb(253,182,35)" fg:x="235" fg:w="4"/><text x="19.0952%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.0858%" y="405" width="0.0802%" height="15" fill="rgb(205,198,39)" fg:x="238" fg:w="1"/><text x="19.3358%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0858%" y="389" width="0.0802%" height="15" fill="rgb(251,175,48)" fg:x="238" fg:w="1"/><text x="19.3358%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.0858%" y="373" width="0.0802%" height="15" fill="rgb(239,38,17)" fg:x="238" fg:w="1"/><text x="19.3358%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0858%" y="357" width="0.0802%" height="15" fill="rgb(212,101,8)" fg:x="238" fg:w="1"/><text x="19.3358%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="19.2462%" y="437" width="0.0802%" height="15" fill="rgb(228,35,17)" fg:x="240" fg:w="1"/><text x="19.4962%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="19.2462%" y="421" width="0.0802%" height="15" fill="rgb(214,95,8)" fg:x="240" fg:w="1"/><text x="19.4962%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.2462%" y="405" width="0.0802%" height="15" fill="rgb(210,176,35)" fg:x="240" fg:w="1"/><text x="19.4962%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.2462%" y="389" width="0.0802%" height="15" fill="rgb(226,4,3)" fg:x="240" fg:w="1"/><text x="19.4962%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.2462%" y="373" width="0.0802%" height="15" fill="rgb(232,133,14)" fg:x="240" fg:w="1"/><text x="19.4962%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.2462%" y="357" width="0.0802%" height="15" fill="rgb(250,191,8)" fg:x="240" fg:w="1"/><text x="19.4962%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="19.2462%" y="341" width="0.0802%" height="15" fill="rgb(213,12,45)" fg:x="240" fg:w="1"/><text x="19.4962%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.2462%" y="325" width="0.0802%" height="15" fill="rgb(233,78,26)" fg:x="240" fg:w="1"/><text x="19.4962%" y="335.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="19.3264%" y="437" width="0.0802%" height="15" fill="rgb(245,222,11)" fg:x="241" fg:w="1"/><text x="19.5764%" y="447.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="19.3264%" y="421" width="0.0802%" height="15" fill="rgb(216,174,12)" fg:x="241" fg:w="1"/><text x="19.5764%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.3264%" y="405" width="0.0802%" height="15" fill="rgb(213,15,9)" fg:x="241" fg:w="1"/><text x="19.5764%" y="415.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="19.3264%" y="389" width="0.0802%" height="15" fill="rgb(238,103,32)" fg:x="241" fg:w="1"/><text x="19.5764%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.3264%" y="373" width="0.0802%" height="15" fill="rgb(245,85,15)" fg:x="241" fg:w="1"/><text x="19.5764%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.3264%" y="357" width="0.0802%" height="15" fill="rgb(254,204,5)" fg:x="241" fg:w="1"/><text x="19.5764%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3264%" y="341" width="0.0802%" height="15" fill="rgb(231,178,15)" fg:x="241" fg:w="1"/><text x="19.5764%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="19.4066%" y="437" width="0.0802%" height="15" fill="rgb(248,151,3)" fg:x="242" fg:w="1"/><text x="19.6566%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4066%" y="421" width="0.0802%" height="15" fill="rgb(250,139,13)" fg:x="242" fg:w="1"/><text x="19.6566%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="19.4868%" y="389" width="0.0802%" height="15" fill="rgb(243,107,53)" fg:x="243" fg:w="1"/><text x="19.7368%" y="399.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="19.4868%" y="373" width="0.0802%" height="15" fill="rgb(232,81,15)" fg:x="243" fg:w="1"/><text x="19.7368%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.4868%" y="357" width="0.0802%" height="15" fill="rgb(225,187,48)" fg:x="243" fg:w="1"/><text x="19.7368%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.4868%" y="341" width="0.0802%" height="15" fill="rgb(205,116,12)" fg:x="243" fg:w="1"/><text x="19.7368%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.4868%" y="325" width="0.0802%" height="15" fill="rgb(220,222,31)" fg:x="243" fg:w="1"/><text x="19.7368%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.4868%" y="309" width="0.0802%" height="15" fill="rgb(233,187,49)" fg:x="243" fg:w="1"/><text x="19.7368%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4868%" y="293" width="0.0802%" height="15" fill="rgb(211,168,53)" fg:x="243" fg:w="1"/><text x="19.7368%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4868%" y="277" width="0.0802%" height="15" fill="rgb(206,160,16)" fg:x="243" fg:w="1"/><text x="19.7368%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4868%" y="261" width="0.0802%" height="15" fill="rgb(254,164,13)" fg:x="243" fg:w="1"/><text x="19.7368%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5670%" y="325" width="0.0802%" height="15" fill="rgb(229,45,30)" fg:x="244" fg:w="1"/><text x="19.8170%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6472%" y="309" width="0.0802%" height="15" fill="rgb(237,32,10)" fg:x="245" fg:w="1"/><text x="19.8972%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="19.5670%" y="341" width="0.2406%" height="15" fill="rgb(251,20,47)" fg:x="244" fg:w="3"/><text x="19.8170%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.6472%" y="325" width="0.1604%" height="15" fill="rgb(251,116,12)" fg:x="245" fg:w="2"/><text x="19.8972%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7273%" y="309" width="0.0802%" height="15" fill="rgb(214,227,27)" fg:x="246" fg:w="1"/><text x="19.9773%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7273%" y="293" width="0.0802%" height="15" fill="rgb(248,10,53)" fg:x="246" fg:w="1"/><text x="19.9773%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.7273%" y="277" width="0.0802%" height="15" fill="rgb(221,176,25)" fg:x="246" fg:w="1"/><text x="19.9773%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7273%" y="261" width="0.0802%" height="15" fill="rgb(205,70,46)" fg:x="246" fg:w="1"/><text x="19.9773%" y="271.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="19.8075%" y="325" width="0.1604%" height="15" fill="rgb(217,45,38)" fg:x="247" fg:w="2"/><text x="20.0575%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.8075%" y="309" width="0.1604%" height="15" fill="rgb(243,6,54)" fg:x="247" fg:w="2"/><text x="20.0575%" y="319.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.8075%" y="293" width="0.1604%" height="15" fill="rgb(242,76,23)" fg:x="247" fg:w="2"/><text x="20.0575%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.8075%" y="277" width="0.1604%" height="15" fill="rgb(239,166,0)" fg:x="247" fg:w="2"/><text x="20.0575%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.8075%" y="261" width="0.1604%" height="15" fill="rgb(238,174,32)" fg:x="247" fg:w="2"/><text x="20.0575%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.9679%" y="309" width="0.1604%" height="15" fill="rgb(238,124,44)" fg:x="249" fg:w="2"/><text x="20.2179%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.9679%" y="293" width="0.1604%" height="15" fill="rgb(206,185,9)" fg:x="249" fg:w="2"/><text x="20.2179%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0481%" y="277" width="0.0802%" height="15" fill="rgb(215,157,17)" fg:x="250" fg:w="1"/><text x="20.2981%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0481%" y="261" width="0.0802%" height="15" fill="rgb(251,17,29)" fg:x="250" fg:w="1"/><text x="20.2981%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.0481%" y="245" width="0.0802%" height="15" fill="rgb(227,113,27)" fg:x="250" fg:w="1"/><text x="20.2981%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.0481%" y="229" width="0.0802%" height="15" fill="rgb(217,226,24)" fg:x="250" fg:w="1"/><text x="20.2981%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.0481%" y="213" width="0.0802%" height="15" fill="rgb(251,99,38)" fg:x="250" fg:w="1"/><text x="20.2981%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="20.0481%" y="197" width="0.0802%" height="15" fill="rgb(231,147,19)" fg:x="250" fg:w="1"/><text x="20.2981%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="20.0481%" y="181" width="0.0802%" height="15" fill="rgb(230,86,8)" fg:x="250" fg:w="1"/><text x="20.2981%" y="191.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1283%" y="309" width="0.0802%" height="15" fill="rgb(237,159,39)" fg:x="251" fg:w="1"/><text x="20.3783%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.1283%" y="293" width="0.0802%" height="15" fill="rgb(247,179,47)" fg:x="251" fg:w="1"/><text x="20.3783%" y="303.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="20.1283%" y="277" width="0.0802%" height="15" fill="rgb(253,152,26)" fg:x="251" fg:w="1"/><text x="20.3783%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="20.1283%" y="261" width="0.0802%" height="15" fill="rgb(222,211,15)" fg:x="251" fg:w="1"/><text x="20.3783%" y="271.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.48%)</title><rect x="19.8075%" y="341" width="0.4812%" height="15" fill="rgb(236,193,6)" fg:x="247" fg:w="6"/><text x="20.0575%" y="351.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="19.9679%" y="325" width="0.3208%" height="15" fill="rgb(226,206,10)" fg:x="249" fg:w="4"/><text x="20.2179%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="20.2085%" y="309" width="0.0802%" height="15" fill="rgb(213,125,22)" fg:x="252" fg:w="1"/><text x="20.4585%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="20.2887%" y="325" width="0.0802%" height="15" fill="rgb(221,66,28)" fg:x="253" fg:w="1"/><text x="20.5387%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="20.2887%" y="309" width="0.0802%" height="15" fill="rgb(222,84,53)" fg:x="253" fg:w="1"/><text x="20.5387%" y="319.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="20.2887%" y="293" width="0.0802%" height="15" fill="rgb(243,50,15)" fg:x="253" fg:w="1"/><text x="20.5387%" y="303.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.2887%" y="277" width="0.0802%" height="15" fill="rgb(208,184,23)" fg:x="253" fg:w="1"/><text x="20.5387%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="20.2887%" y="261" width="0.0802%" height="15" fill="rgb(221,83,2)" fg:x="253" fg:w="1"/><text x="20.5387%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.2887%" y="245" width="0.0802%" height="15" fill="rgb(236,53,24)" fg:x="253" fg:w="1"/><text x="20.5387%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.2887%" y="229" width="0.0802%" height="15" fill="rgb(244,171,29)" fg:x="253" fg:w="1"/><text x="20.5387%" y="239.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.2887%" y="213" width="0.0802%" height="15" fill="rgb(205,19,11)" fg:x="253" fg:w="1"/><text x="20.5387%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="20.2887%" y="197" width="0.0802%" height="15" fill="rgb(207,108,29)" fg:x="253" fg:w="1"/><text x="20.5387%" y="207.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="20.2887%" y="341" width="0.1604%" height="15" fill="rgb(236,215,43)" fg:x="253" fg:w="2"/><text x="20.5387%" y="351.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3689%" y="325" width="0.0802%" height="15" fill="rgb(213,58,35)" fg:x="254" fg:w="1"/><text x="20.6189%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.3689%" y="309" width="0.0802%" height="15" fill="rgb(220,211,46)" fg:x="254" fg:w="1"/><text x="20.6189%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.3689%" y="293" width="0.0802%" height="15" fill="rgb(212,134,16)" fg:x="254" fg:w="1"/><text x="20.6189%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="20.3689%" y="277" width="0.0802%" height="15" fill="rgb(232,90,44)" fg:x="254" fg:w="1"/><text x="20.6189%" y="287.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="20.3689%" y="261" width="0.0802%" height="15" fill="rgb(212,18,36)" fg:x="254" fg:w="1"/><text x="20.6189%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3689%" y="245" width="0.0802%" height="15" fill="rgb(206,112,24)" fg:x="254" fg:w="1"/><text x="20.6189%" y="255.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="20.3689%" y="229" width="0.0802%" height="15" fill="rgb(238,223,40)" fg:x="254" fg:w="1"/><text x="20.6189%" y="239.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3689%" y="213" width="0.0802%" height="15" fill="rgb(226,169,20)" fg:x="254" fg:w="1"/><text x="20.6189%" y="223.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="20.3689%" y="197" width="0.0802%" height="15" fill="rgb(241,64,52)" fg:x="254" fg:w="1"/><text x="20.6189%" y="207.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3689%" y="181" width="0.0802%" height="15" fill="rgb(228,120,25)" fg:x="254" fg:w="1"/><text x="20.6189%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4491%" y="293" width="0.0802%" height="15" fill="rgb(234,108,19)" fg:x="255" fg:w="1"/><text x="20.6991%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4491%" y="277" width="0.0802%" height="15" fill="rgb(236,133,29)" fg:x="255" fg:w="1"/><text x="20.6991%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.4491%" y="261" width="0.0802%" height="15" fill="rgb(246,174,53)" fg:x="255" fg:w="1"/><text x="20.6991%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.4491%" y="245" width="0.0802%" height="15" fill="rgb(210,105,35)" fg:x="255" fg:w="1"/><text x="20.6991%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.4491%" y="229" width="0.0802%" height="15" fill="rgb(225,27,26)" fg:x="255" fg:w="1"/><text x="20.6991%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.4491%" y="213" width="0.0802%" height="15" fill="rgb(233,2,39)" fg:x="255" fg:w="1"/><text x="20.6991%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.4491%" y="197" width="0.0802%" height="15" fill="rgb(219,164,26)" fg:x="255" fg:w="1"/><text x="20.6991%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4491%" y="181" width="0.0802%" height="15" fill="rgb(236,211,5)" fg:x="255" fg:w="1"/><text x="20.6991%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4491%" y="165" width="0.0802%" height="15" fill="rgb(244,227,23)" fg:x="255" fg:w="1"/><text x="20.6991%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.4491%" y="149" width="0.0802%" height="15" fill="rgb(230,184,8)" fg:x="255" fg:w="1"/><text x="20.6991%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.4491%" y="133" width="0.0802%" height="15" fill="rgb(217,125,48)" fg:x="255" fg:w="1"/><text x="20.6991%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.4491%" y="117" width="0.0802%" height="15" fill="rgb(223,192,47)" fg:x="255" fg:w="1"/><text x="20.6991%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.4491%" y="101" width="0.0802%" height="15" fill="rgb(226,119,10)" fg:x="255" fg:w="1"/><text x="20.6991%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.4491%" y="85" width="0.0802%" height="15" fill="rgb(221,49,29)" fg:x="255" fg:w="1"/><text x="20.6991%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="20.4491%" y="325" width="0.1604%" height="15" fill="rgb(217,205,19)" fg:x="255" fg:w="2"/><text x="20.6991%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.4491%" y="309" width="0.1604%" height="15" fill="rgb(242,104,7)" fg:x="255" fg:w="2"/><text x="20.6991%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.5293%" y="293" width="0.0802%" height="15" fill="rgb(209,154,48)" fg:x="256" fg:w="1"/><text x="20.7793%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5293%" y="277" width="0.0802%" height="15" fill="rgb(219,213,46)" fg:x="256" fg:w="1"/><text x="20.7793%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.5293%" y="261" width="0.0802%" height="15" fill="rgb(229,105,38)" fg:x="256" fg:w="1"/><text x="20.7793%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5293%" y="245" width="0.0802%" height="15" fill="rgb(205,151,5)" fg:x="256" fg:w="1"/><text x="20.7793%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5293%" y="229" width="0.0802%" height="15" fill="rgb(248,115,40)" fg:x="256" fg:w="1"/><text x="20.7793%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5293%" y="213" width="0.0802%" height="15" fill="rgb(206,179,2)" fg:x="256" fg:w="1"/><text x="20.7793%" y="223.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="20.4491%" y="341" width="0.4010%" height="15" fill="rgb(230,103,24)" fg:x="255" fg:w="5"/><text x="20.6991%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="20.6095%" y="325" width="0.2406%" height="15" fill="rgb(218,152,4)" fg:x="257" fg:w="3"/><text x="20.8595%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="20.6095%" y="309" width="0.2406%" height="15" fill="rgb(236,161,54)" fg:x="257" fg:w="3"/><text x="20.8595%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.6095%" y="293" width="0.2406%" height="15" fill="rgb(226,65,17)" fg:x="257" fg:w="3"/><text x="20.8595%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.6095%" y="277" width="0.2406%" height="15" fill="rgb(221,134,44)" fg:x="257" fg:w="3"/><text x="20.8595%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="20.6095%" y="261" width="0.2406%" height="15" fill="rgb(251,129,4)" fg:x="257" fg:w="3"/><text x="20.8595%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.6095%" y="245" width="0.2406%" height="15" fill="rgb(244,32,34)" fg:x="257" fg:w="3"/><text x="20.8595%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="20.8500%" y="309" width="0.0802%" height="15" fill="rgb(251,224,37)" fg:x="260" fg:w="1"/><text x="21.1000%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.8500%" y="293" width="0.0802%" height="15" fill="rgb(248,117,31)" fg:x="260" fg:w="1"/><text x="21.1000%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8500%" y="277" width="0.0802%" height="15" fill="rgb(222,208,37)" fg:x="260" fg:w="1"/><text x="21.1000%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8500%" y="261" width="0.0802%" height="15" fill="rgb(234,211,25)" fg:x="260" fg:w="1"/><text x="21.1000%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.44%)</title><rect x="19.5670%" y="357" width="1.4435%" height="15" fill="rgb(211,72,6)" fg:x="244" fg:w="18"/><text x="19.8170%" y="367.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="20.8500%" y="341" width="0.1604%" height="15" fill="rgb(249,198,38)" fg:x="260" fg:w="2"/><text x="21.1000%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="20.8500%" y="325" width="0.1604%" height="15" fill="rgb(221,86,51)" fg:x="260" fg:w="2"/><text x="21.1000%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="20.9302%" y="309" width="0.0802%" height="15" fill="rgb(226,178,43)" fg:x="261" fg:w="1"/><text x="21.1802%" y="319.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="20.9302%" y="293" width="0.0802%" height="15" fill="rgb(215,145,7)" fg:x="261" fg:w="1"/><text x="21.1802%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.9302%" y="277" width="0.0802%" height="15" fill="rgb(250,202,36)" fg:x="261" fg:w="1"/><text x="21.1802%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.9302%" y="261" width="0.0802%" height="15" fill="rgb(215,86,13)" fg:x="261" fg:w="1"/><text x="21.1802%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="21.0104%" y="341" width="0.0802%" height="15" fill="rgb(221,134,12)" fg:x="262" fg:w="1"/><text x="21.2604%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0104%" y="325" width="0.0802%" height="15" fill="rgb(213,82,10)" fg:x="262" fg:w="1"/><text x="21.2604%" y="335.50"></text></g><g><title>plugins_core::build::Build::into_entry (22 samples, 1.76%)</title><rect x="19.5670%" y="373" width="1.7642%" height="15" fill="rgb(214,142,0)" fg:x="244" fg:w="22"/><text x="19.8170%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="21.0104%" y="357" width="0.3208%" height="15" fill="rgb(205,145,9)" fg:x="262" fg:w="4"/><text x="21.2604%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="21.0906%" y="341" width="0.2406%" height="15" fill="rgb(244,214,8)" fg:x="263" fg:w="3"/><text x="21.3406%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.1708%" y="325" width="0.1604%" height="15" fill="rgb(224,72,51)" fg:x="264" fg:w="2"/><text x="21.4208%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2510%" y="309" width="0.0802%" height="15" fill="rgb(233,137,37)" fg:x="265" fg:w="1"/><text x="21.5010%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.2510%" y="293" width="0.0802%" height="15" fill="rgb(208,71,28)" fg:x="265" fg:w="1"/><text x="21.5010%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2510%" y="277" width="0.0802%" height="15" fill="rgb(226,31,7)" fg:x="265" fg:w="1"/><text x="21.5010%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.2510%" y="261" width="0.0802%" height="15" fill="rgb(229,62,18)" fg:x="265" fg:w="1"/><text x="21.5010%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.2510%" y="245" width="0.0802%" height="15" fill="rgb(226,74,28)" fg:x="265" fg:w="1"/><text x="21.5010%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="21.3312%" y="325" width="0.0802%" height="15" fill="rgb(214,170,18)" fg:x="266" fg:w="1"/><text x="21.5812%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.3312%" y="309" width="0.0802%" height="15" fill="rgb(227,229,35)" fg:x="266" fg:w="1"/><text x="21.5812%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3312%" y="293" width="0.0802%" height="15" fill="rgb(225,181,39)" fg:x="266" fg:w="1"/><text x="21.5812%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3312%" y="277" width="0.0802%" height="15" fill="rgb(253,124,44)" fg:x="266" fg:w="1"/><text x="21.5812%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3312%" y="261" width="0.0802%" height="15" fill="rgb(220,75,18)" fg:x="266" fg:w="1"/><text x="21.5812%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.4114%" y="245" width="0.0802%" height="15" fill="rgb(239,175,43)" fg:x="267" fg:w="1"/><text x="21.6614%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4114%" y="229" width="0.0802%" height="15" fill="rgb(228,112,50)" fg:x="267" fg:w="1"/><text x="21.6614%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.4114%" y="293" width="0.1604%" height="15" fill="rgb(232,105,36)" fg:x="267" fg:w="2"/><text x="21.6614%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="21.4114%" y="277" width="0.1604%" height="15" fill="rgb(227,137,47)" fg:x="267" fg:w="2"/><text x="21.6614%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.4114%" y="261" width="0.1604%" height="15" fill="rgb(217,51,9)" fg:x="267" fg:w="2"/><text x="21.6614%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4916%" y="245" width="0.0802%" height="15" fill="rgb(245,117,0)" fg:x="268" fg:w="1"/><text x="21.7416%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4916%" y="229" width="0.0802%" height="15" fill="rgb(252,52,30)" fg:x="268" fg:w="1"/><text x="21.7416%" y="239.50"></text></g><g><title>plugins_core::build::Build::leads_to (26 samples, 2.09%)</title><rect x="19.5670%" y="389" width="2.0850%" height="15" fill="rgb(227,85,33)" fg:x="244" fg:w="26"/><text x="19.8170%" y="399.50">p..</text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="21.3312%" y="373" width="0.3208%" height="15" fill="rgb(220,157,20)" fg:x="266" fg:w="4"/><text x="21.5812%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="21.3312%" y="357" width="0.3208%" height="15" fill="rgb(254,14,34)" fg:x="266" fg:w="4"/><text x="21.5812%" y="367.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="21.3312%" y="341" width="0.3208%" height="15" fill="rgb(216,103,41)" fg:x="266" fg:w="4"/><text x="21.5812%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="21.4114%" y="325" width="0.2406%" height="15" fill="rgb(245,221,9)" fg:x="267" fg:w="3"/><text x="21.6614%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="21.4114%" y="309" width="0.2406%" height="15" fill="rgb(254,136,47)" fg:x="267" fg:w="3"/><text x="21.6614%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.5718%" y="293" width="0.0802%" height="15" fill="rgb(235,71,46)" fg:x="269" fg:w="1"/><text x="21.8218%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.5718%" y="277" width="0.0802%" height="15" fill="rgb(242,154,29)" fg:x="269" fg:w="1"/><text x="21.8218%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.5718%" y="261" width="0.0802%" height="15" fill="rgb(210,65,31)" fg:x="269" fg:w="1"/><text x="21.8218%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.5718%" y="245" width="0.0802%" height="15" fill="rgb(244,9,50)" fg:x="269" fg:w="1"/><text x="21.8218%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.5718%" y="229" width="0.0802%" height="15" fill="rgb(215,141,38)" fg:x="269" fg:w="1"/><text x="21.8218%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.5718%" y="213" width="0.0802%" height="15" fill="rgb(241,129,6)" fg:x="269" fg:w="1"/><text x="21.8218%" y="223.50"></text></g><g><title>core::iter::adapters::try_process (28 samples, 2.25%)</title><rect x="19.4868%" y="437" width="2.2454%" height="15" fill="rgb(253,169,4)" fg:x="243" fg:w="28"/><text x="19.7368%" y="447.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 2.25%)</title><rect x="19.4868%" y="421" width="2.2454%" height="15" fill="rgb(237,82,36)" fg:x="243" fg:w="28"/><text x="19.7368%" y="431.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (28 samples, 2.25%)</title><rect x="19.4868%" y="405" width="2.2454%" height="15" fill="rgb(209,171,11)" fg:x="243" fg:w="28"/><text x="19.7368%" y="415.50">p..</text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="21.6520%" y="389" width="0.0802%" height="15" fill="rgb(242,19,22)" fg:x="270" fg:w="1"/><text x="21.9020%" y="399.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="21.6520%" y="373" width="0.0802%" height="15" fill="rgb(251,122,24)" fg:x="270" fg:w="1"/><text x="21.9020%" y="383.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="21.6520%" y="357" width="0.0802%" height="15" fill="rgb(226,166,42)" fg:x="270" fg:w="1"/><text x="21.9020%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="21.6520%" y="341" width="0.0802%" height="15" fill="rgb(244,101,48)" fg:x="270" fg:w="1"/><text x="21.9020%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.6520%" y="325" width="0.0802%" height="15" fill="rgb(227,125,1)" fg:x="270" fg:w="1"/><text x="21.9020%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.6520%" y="309" width="0.0802%" height="15" fill="rgb(206,79,43)" fg:x="270" fg:w="1"/><text x="21.9020%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.8123%" y="389" width="0.0802%" height="15" fill="rgb(241,109,41)" fg:x="272" fg:w="1"/><text x="22.0623%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.8123%" y="373" width="0.0802%" height="15" fill="rgb(219,73,4)" fg:x="272" fg:w="1"/><text x="22.0623%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.7322%" y="405" width="0.2406%" height="15" fill="rgb(239,25,41)" fg:x="271" fg:w="3"/><text x="21.9822%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.8925%" y="389" width="0.0802%" height="15" fill="rgb(208,88,46)" fg:x="273" fg:w="1"/><text x="22.1425%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="21.8925%" y="373" width="0.0802%" height="15" fill="rgb(239,184,9)" fg:x="273" fg:w="1"/><text x="22.1425%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.8925%" y="357" width="0.0802%" height="15" fill="rgb(223,114,13)" fg:x="273" fg:w="1"/><text x="22.1425%" y="367.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="21.7322%" y="421" width="0.3208%" height="15" fill="rgb(214,28,42)" fg:x="271" fg:w="4"/><text x="21.9822%" y="431.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="21.9727%" y="405" width="0.0802%" height="15" fill="rgb(252,32,44)" fg:x="274" fg:w="1"/><text x="22.2227%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="22.0529%" y="325" width="0.1604%" height="15" fill="rgb(231,159,4)" fg:x="275" fg:w="2"/><text x="22.3029%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.1331%" y="309" width="0.0802%" height="15" fill="rgb(210,35,26)" fg:x="276" fg:w="1"/><text x="22.3831%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.1331%" y="293" width="0.0802%" height="15" fill="rgb(208,190,37)" fg:x="276" fg:w="1"/><text x="22.3831%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.1331%" y="277" width="0.0802%" height="15" fill="rgb(226,148,22)" fg:x="276" fg:w="1"/><text x="22.3831%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.1331%" y="261" width="0.0802%" height="15" fill="rgb(242,153,24)" fg:x="276" fg:w="1"/><text x="22.3831%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.1331%" y="245" width="0.0802%" height="15" fill="rgb(213,133,7)" fg:x="276" fg:w="1"/><text x="22.3831%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.2935%" y="309" width="0.0802%" height="15" fill="rgb(248,206,18)" fg:x="278" fg:w="1"/><text x="22.5435%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="22.3737%" y="293" width="0.3208%" height="15" fill="rgb(233,157,4)" fg:x="279" fg:w="4"/><text x="22.6237%" y="303.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="22.4539%" y="277" width="0.2406%" height="15" fill="rgb(249,179,32)" fg:x="280" fg:w="3"/><text x="22.7039%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="22.4539%" y="261" width="0.2406%" height="15" fill="rgb(248,69,35)" fg:x="280" fg:w="3"/><text x="22.7039%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="22.5341%" y="245" width="0.1604%" height="15" fill="rgb(249,158,38)" fg:x="281" fg:w="2"/><text x="22.7841%" y="255.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="22.3737%" y="309" width="0.4812%" height="15" fill="rgb(223,18,43)" fg:x="279" fg:w="6"/><text x="22.6237%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.6945%" y="293" width="0.1604%" height="15" fill="rgb(238,42,45)" fg:x="283" fg:w="2"/><text x="22.9445%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.6945%" y="277" width="0.1604%" height="15" fill="rgb(219,65,47)" fg:x="283" fg:w="2"/><text x="22.9445%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="22.6945%" y="261" width="0.1604%" height="15" fill="rgb(248,153,12)" fg:x="283" fg:w="2"/><text x="22.9445%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="22.9350%" y="293" width="0.2406%" height="15" fill="rgb(240,118,4)" fg:x="286" fg:w="3"/><text x="23.1850%" y="303.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.0152%" y="277" width="0.1604%" height="15" fill="rgb(250,96,34)" fg:x="287" fg:w="2"/><text x="23.2652%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.0954%" y="261" width="0.0802%" height="15" fill="rgb(221,15,4)" fg:x="288" fg:w="1"/><text x="23.3454%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.0954%" y="245" width="0.0802%" height="15" fill="rgb(217,149,33)" fg:x="288" fg:w="1"/><text x="23.3454%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="23.4162%" y="245" width="0.0802%" height="15" fill="rgb(213,58,29)" fg:x="292" fg:w="1"/><text x="23.6662%" y="255.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.4162%" y="229" width="0.0802%" height="15" fill="rgb(236,218,9)" fg:x="292" fg:w="1"/><text x="23.6662%" y="239.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.4162%" y="213" width="0.0802%" height="15" fill="rgb(248,40,19)" fg:x="292" fg:w="1"/><text x="23.6662%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.4162%" y="197" width="0.0802%" height="15" fill="rgb(212,17,6)" fg:x="292" fg:w="1"/><text x="23.6662%" y="207.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="23.4964%" y="229" width="0.1604%" height="15" fill="rgb(206,212,20)" fg:x="293" fg:w="2"/><text x="23.7464%" y="239.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.4964%" y="213" width="0.1604%" height="15" fill="rgb(229,80,37)" fg:x="293" fg:w="2"/><text x="23.7464%" y="223.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.5766%" y="197" width="0.0802%" height="15" fill="rgb(253,8,37)" fg:x="294" fg:w="1"/><text x="23.8266%" y="207.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="23.4162%" y="277" width="0.3208%" height="15" fill="rgb(215,16,43)" fg:x="292" fg:w="4"/><text x="23.6662%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="23.4162%" y="261" width="0.3208%" height="15" fill="rgb(236,219,16)" fg:x="292" fg:w="4"/><text x="23.6662%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="23.4964%" y="245" width="0.2406%" height="15" fill="rgb(251,0,3)" fg:x="293" fg:w="3"/><text x="23.7464%" y="255.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.6568%" y="229" width="0.0802%" height="15" fill="rgb(207,133,37)" fg:x="295" fg:w="1"/><text x="23.9068%" y="239.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.6568%" y="213" width="0.0802%" height="15" fill="rgb(250,143,20)" fg:x="295" fg:w="1"/><text x="23.9068%" y="223.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="23.6568%" y="197" width="0.0802%" height="15" fill="rgb(242,19,50)" fg:x="295" fg:w="1"/><text x="23.9068%" y="207.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="23.7370%" y="277" width="0.4010%" height="15" fill="rgb(206,124,43)" fg:x="296" fg:w="5"/><text x="23.9870%" y="287.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="23.8172%" y="261" width="0.3208%" height="15" fill="rgb(229,4,38)" fg:x="297" fg:w="4"/><text x="24.0672%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.9775%" y="245" width="0.1604%" height="15" fill="rgb(247,220,45)" fg:x="299" fg:w="2"/><text x="24.2275%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="23.9775%" y="229" width="0.1604%" height="15" fill="rgb(247,195,0)" fg:x="299" fg:w="2"/><text x="24.2275%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="23.9775%" y="213" width="0.1604%" height="15" fill="rgb(252,12,19)" fg:x="299" fg:w="2"/><text x="24.2275%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="23.9775%" y="197" width="0.1604%" height="15" fill="rgb(222,49,50)" fg:x="299" fg:w="2"/><text x="24.2275%" y="207.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="23.9775%" y="181" width="0.1604%" height="15" fill="rgb(209,157,28)" fg:x="299" fg:w="2"/><text x="24.2275%" y="191.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="24.3785%" y="261" width="0.0802%" height="15" fill="rgb(238,174,24)" fg:x="304" fg:w="1"/><text x="24.6285%" y="271.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.3785%" y="245" width="0.0802%" height="15" fill="rgb(224,17,28)" fg:x="304" fg:w="1"/><text x="24.6285%" y="255.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.3785%" y="229" width="0.0802%" height="15" fill="rgb(249,7,29)" fg:x="304" fg:w="1"/><text x="24.6285%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.3785%" y="213" width="0.0802%" height="15" fill="rgb(243,178,4)" fg:x="304" fg:w="1"/><text x="24.6285%" y="223.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="24.6191%" y="245" width="0.0802%" height="15" fill="rgb(246,138,35)" fg:x="307" fg:w="1"/><text x="24.8691%" y="255.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.6191%" y="229" width="0.0802%" height="15" fill="rgb(251,85,18)" fg:x="307" fg:w="1"/><text x="24.8691%" y="239.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.6191%" y="213" width="0.0802%" height="15" fill="rgb(254,55,9)" fg:x="307" fg:w="1"/><text x="24.8691%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.6191%" y="197" width="0.0802%" height="15" fill="rgb(248,4,50)" fg:x="307" fg:w="1"/><text x="24.8691%" y="207.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="24.6993%" y="245" width="0.0802%" height="15" fill="rgb(215,208,14)" fg:x="308" fg:w="1"/><text x="24.9493%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="24.4587%" y="261" width="0.4812%" height="15" fill="rgb(218,37,18)" fg:x="305" fg:w="6"/><text x="24.7087%" y="271.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.7795%" y="245" width="0.1604%" height="15" fill="rgb(206,104,13)" fg:x="309" fg:w="2"/><text x="25.0295%" y="255.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.7795%" y="229" width="0.1604%" height="15" fill="rgb(248,94,22)" fg:x="309" fg:w="2"/><text x="25.0295%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="24.7795%" y="213" width="0.1604%" height="15" fill="rgb(235,42,46)" fg:x="309" fg:w="2"/><text x="25.0295%" y="223.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="24.1379%" y="277" width="0.9623%" height="15" fill="rgb(220,228,48)" fg:x="301" fg:w="12"/><text x="24.3879%" y="287.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.9399%" y="261" width="0.1604%" height="15" fill="rgb(216,58,12)" fg:x="311" fg:w="2"/><text x="25.1899%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.9399%" y="245" width="0.1604%" height="15" fill="rgb(223,97,52)" fg:x="311" fg:w="2"/><text x="25.1899%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="24.9399%" y="229" width="0.1604%" height="15" fill="rgb(208,159,17)" fg:x="311" fg:w="2"/><text x="25.1899%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1804%" y="245" width="0.0802%" height="15" fill="rgb(215,172,9)" fg:x="314" fg:w="1"/><text x="25.4304%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.17%)</title><rect x="23.1756%" y="293" width="2.1652%" height="15" fill="rgb(252,175,30)" fg:x="289" fg:w="27"/><text x="23.4256%" y="303.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="25.1002%" y="277" width="0.2406%" height="15" fill="rgb(209,159,10)" fg:x="313" fg:w="3"/><text x="25.3502%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="25.1804%" y="261" width="0.1604%" height="15" fill="rgb(229,73,51)" fg:x="314" fg:w="2"/><text x="25.4304%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="25.2606%" y="245" width="0.0802%" height="15" fill="rgb(208,212,43)" fg:x="315" fg:w="1"/><text x="25.5106%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="25.5012%" y="261" width="0.3208%" height="15" fill="rgb(254,123,53)" fg:x="318" fg:w="4"/><text x="25.7512%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="25.6616%" y="245" width="0.1604%" height="15" fill="rgb(254,128,49)" fg:x="320" fg:w="2"/><text x="25.9116%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="25.6616%" y="229" width="0.1604%" height="15" fill="rgb(246,16,16)" fg:x="320" fg:w="2"/><text x="25.9116%" y="239.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="25.6616%" y="213" width="0.1604%" height="15" fill="rgb(209,200,1)" fg:x="320" fg:w="2"/><text x="25.9116%" y="223.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.69%)</title><rect x="22.2133%" y="325" width="3.6889%" height="15" fill="rgb(235,9,3)" fg:x="277" fg:w="46"/><text x="22.4633%" y="335.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.05%)</title><rect x="22.8549%" y="309" width="3.0473%" height="15" fill="rgb(233,121,54)" fg:x="285" fg:w="38"/><text x="23.1049%" y="319.50">ser..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="25.3408%" y="293" width="0.5613%" height="15" fill="rgb(236,80,25)" fg:x="316" fg:w="7"/><text x="25.5908%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="25.5012%" y="277" width="0.4010%" height="15" fill="rgb(220,44,24)" fg:x="318" fg:w="5"/><text x="25.7512%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="25.8220%" y="261" width="0.0802%" height="15" fill="rgb(236,225,16)" fg:x="322" fg:w="1"/><text x="26.0720%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0626%" y="277" width="0.0802%" height="15" fill="rgb(237,140,0)" fg:x="325" fg:w="1"/><text x="26.3126%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="26.1427%" y="277" width="0.1604%" height="15" fill="rgb(243,225,53)" fg:x="326" fg:w="2"/><text x="26.3927%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2229%" y="261" width="0.0802%" height="15" fill="rgb(240,140,30)" fg:x="327" fg:w="1"/><text x="26.4729%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="26.3833%" y="261" width="0.3208%" height="15" fill="rgb(217,51,16)" fg:x="329" fg:w="4"/><text x="26.6333%" y="271.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="26.4635%" y="245" width="0.2406%" height="15" fill="rgb(245,75,50)" fg:x="330" fg:w="3"/><text x="26.7135%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="26.7041%" y="245" width="0.0802%" height="15" fill="rgb(208,174,22)" fg:x="333" fg:w="1"/><text x="26.9541%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.7041%" y="229" width="0.0802%" height="15" fill="rgb(219,98,50)" fg:x="333" fg:w="1"/><text x="26.9541%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7041%" y="213" width="0.0802%" height="15" fill="rgb(243,138,3)" fg:x="333" fg:w="1"/><text x="26.9541%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="25.9022%" y="325" width="0.9623%" height="15" fill="rgb(243,132,26)" fg:x="323" fg:w="12"/><text x="26.1522%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="25.9022%" y="309" width="0.9623%" height="15" fill="rgb(250,201,8)" fg:x="323" fg:w="12"/><text x="26.1522%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="25.9022%" y="293" width="0.9623%" height="15" fill="rgb(213,91,26)" fg:x="323" fg:w="12"/><text x="26.1522%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="26.3031%" y="277" width="0.5613%" height="15" fill="rgb(229,117,1)" fg:x="328" fg:w="7"/><text x="26.5531%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.7041%" y="261" width="0.1604%" height="15" fill="rgb(229,24,6)" fg:x="333" fg:w="2"/><text x="26.9541%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.7843%" y="245" width="0.0802%" height="15" fill="rgb(206,69,11)" fg:x="334" fg:w="1"/><text x="27.0343%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.7843%" y="229" width="0.0802%" height="15" fill="rgb(234,111,34)" fg:x="334" fg:w="1"/><text x="27.0343%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.8645%" y="277" width="0.1604%" height="15" fill="rgb(213,187,51)" fg:x="335" fg:w="2"/><text x="27.1145%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.9447%" y="261" width="0.0802%" height="15" fill="rgb(207,45,11)" fg:x="336" fg:w="1"/><text x="27.1947%" y="271.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="27.0249%" y="277" width="0.1604%" height="15" fill="rgb(225,151,47)" fg:x="337" fg:w="2"/><text x="27.2749%" y="287.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="27.1852%" y="277" width="0.1604%" height="15" fill="rgb(211,226,5)" fg:x="339" fg:w="2"/><text x="27.4352%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.1852%" y="261" width="0.1604%" height="15" fill="rgb(214,83,52)" fg:x="339" fg:w="2"/><text x="27.4352%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2654%" y="245" width="0.0802%" height="15" fill="rgb(229,49,53)" fg:x="340" fg:w="1"/><text x="27.5154%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2654%" y="229" width="0.0802%" height="15" fill="rgb(246,8,28)" fg:x="340" fg:w="1"/><text x="27.5154%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.2654%" y="213" width="0.0802%" height="15" fill="rgb(207,28,41)" fg:x="340" fg:w="1"/><text x="27.5154%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4258%" y="245" width="0.0802%" height="15" fill="rgb(254,22,25)" fg:x="342" fg:w="1"/><text x="27.6758%" y="255.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="27.3456%" y="277" width="0.3208%" height="15" fill="rgb(209,120,42)" fg:x="341" fg:w="4"/><text x="27.5956%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="27.4258%" y="261" width="0.2406%" height="15" fill="rgb(216,194,18)" fg:x="342" fg:w="3"/><text x="27.6758%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.5060%" y="245" width="0.1604%" height="15" fill="rgb(213,70,17)" fg:x="343" fg:w="2"/><text x="27.7560%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.5862%" y="229" width="0.0802%" height="15" fill="rgb(228,66,19)" fg:x="344" fg:w="1"/><text x="27.8362%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="27.5862%" y="213" width="0.0802%" height="15" fill="rgb(236,221,54)" fg:x="344" fg:w="1"/><text x="27.8362%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.7466%" y="245" width="0.0802%" height="15" fill="rgb(207,175,15)" fg:x="346" fg:w="1"/><text x="27.9966%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="27.8268%" y="245" width="0.0802%" height="15" fill="rgb(234,76,8)" fg:x="347" fg:w="1"/><text x="28.0768%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.9872%" y="229" width="0.1604%" height="15" fill="rgb(243,106,0)" fg:x="349" fg:w="2"/><text x="28.2372%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.9872%" y="213" width="0.1604%" height="15" fill="rgb(208,48,19)" fg:x="349" fg:w="2"/><text x="28.2372%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="28.0674%" y="197" width="0.0802%" height="15" fill="rgb(251,50,29)" fg:x="350" fg:w="1"/><text x="28.3174%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.2277%" y="181" width="0.1604%" height="15" fill="rgb(222,31,49)" fg:x="352" fg:w="2"/><text x="28.4777%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.2277%" y="165" width="0.1604%" height="15" fill="rgb(232,33,18)" fg:x="352" fg:w="2"/><text x="28.4777%" y="175.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="28.2277%" y="149" width="0.1604%" height="15" fill="rgb(209,1,44)" fg:x="352" fg:w="2"/><text x="28.4777%" y="159.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="28.2277%" y="197" width="0.2406%" height="15" fill="rgb(211,7,1)" fg:x="352" fg:w="3"/><text x="28.4777%" y="207.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="28.3881%" y="181" width="0.0802%" height="15" fill="rgb(224,111,27)" fg:x="354" fg:w="1"/><text x="28.6381%" y="191.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="28.1476%" y="229" width="0.4010%" height="15" fill="rgb(252,195,39)" fg:x="351" fg:w="5"/><text x="28.3976%" y="239.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="28.1476%" y="213" width="0.4010%" height="15" fill="rgb(237,198,5)" fg:x="351" fg:w="5"/><text x="28.3976%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4683%" y="197" width="0.0802%" height="15" fill="rgb(232,148,1)" fg:x="355" fg:w="1"/><text x="28.7183%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="28.5485%" y="213" width="0.0802%" height="15" fill="rgb(249,41,3)" fg:x="356" fg:w="1"/><text x="28.7985%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.7089%" y="181" width="0.0802%" height="15" fill="rgb(215,14,33)" fg:x="358" fg:w="1"/><text x="28.9589%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="28.7891%" y="181" width="0.0802%" height="15" fill="rgb(209,146,24)" fg:x="359" fg:w="1"/><text x="29.0391%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="28.6287%" y="213" width="0.4010%" height="15" fill="rgb(219,51,47)" fg:x="357" fg:w="5"/><text x="28.8787%" y="223.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="28.6287%" y="197" width="0.4010%" height="15" fill="rgb(234,217,40)" fg:x="357" fg:w="5"/><text x="28.8787%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.8693%" y="181" width="0.1604%" height="15" fill="rgb(228,34,26)" fg:x="360" fg:w="2"/><text x="29.1193%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.36%)</title><rect x="27.7466%" y="261" width="1.3633%" height="15" fill="rgb(224,50,29)" fg:x="346" fg:w="17"/><text x="27.9966%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="27.9070%" y="245" width="1.2029%" height="15" fill="rgb(205,79,51)" fg:x="348" fg:w="15"/><text x="28.1570%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="28.5485%" y="229" width="0.5613%" height="15" fill="rgb(218,136,28)" fg:x="356" fg:w="7"/><text x="28.7985%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.0297%" y="213" width="0.0802%" height="15" fill="rgb(220,150,10)" fg:x="362" fg:w="1"/><text x="29.2797%" y="223.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="29.1099%" y="261" width="0.3208%" height="15" fill="rgb(242,158,47)" fg:x="363" fg:w="4"/><text x="29.3599%" y="271.50"></text></g><g><title>engine::session::Session::flush (97 samples, 7.78%)</title><rect x="21.7322%" y="437" width="7.7787%" height="15" fill="rgb(209,68,0)" fg:x="271" fg:w="97"/><text x="21.9822%" y="447.50">engine::ses..</text></g><g><title>engine::session::Session::save_changes (93 samples, 7.46%)</title><rect x="22.0529%" y="421" width="7.4579%" height="15" fill="rgb(208,13,41)" fg:x="275" fg:w="93"/><text x="22.3029%" y="431.50">engine::se..</text></g><g><title>engine::session::state::State::close (93 samples, 7.46%)</title><rect x="22.0529%" y="405" width="7.4579%" height="15" fill="rgb(226,201,7)" fg:x="275" fg:w="93"/><text x="22.3029%" y="415.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (93 samples, 7.46%)</title><rect x="22.0529%" y="389" width="7.4579%" height="15" fill="rgb(236,103,26)" fg:x="275" fg:w="93"/><text x="22.3029%" y="399.50">engine::se..</text></g><g><title>core::iter::adapters::try_process (93 samples, 7.46%)</title><rect x="22.0529%" y="373" width="7.4579%" height="15" fill="rgb(243,162,8)" fg:x="275" fg:w="93"/><text x="22.3029%" y="383.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (93 samples, 7.46%)</title><rect x="22.0529%" y="357" width="7.4579%" height="15" fill="rgb(237,225,11)" fg:x="275" fg:w="93"/><text x="22.3029%" y="367.50">&lt;alloc::ve..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (93 samples, 7.46%)</title><rect x="22.0529%" y="341" width="7.4579%" height="15" fill="rgb(247,186,32)" fg:x="275" fg:w="93"/><text x="22.3029%" y="351.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (33 samples, 2.65%)</title><rect x="26.8645%" y="325" width="2.6464%" height="15" fill="rgb(215,26,28)" fg:x="335" fg:w="33"/><text x="27.1145%" y="335.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (33 samples, 2.65%)</title><rect x="26.8645%" y="309" width="2.6464%" height="15" fill="rgb(208,121,6)" fg:x="335" fg:w="33"/><text x="27.1145%" y="319.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.65%)</title><rect x="26.8645%" y="293" width="2.6464%" height="15" fill="rgb(225,91,3)" fg:x="335" fg:w="33"/><text x="27.1145%" y="303.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.84%)</title><rect x="27.6664%" y="277" width="1.8444%" height="15" fill="rgb(246,119,36)" fg:x="345" fg:w="23"/><text x="27.9164%" y="287.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.4306%" y="261" width="0.0802%" height="15" fill="rgb(254,173,2)" fg:x="367" fg:w="1"/><text x="29.6806%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.4306%" y="245" width="0.0802%" height="15" fill="rgb(209,87,54)" fg:x="367" fg:w="1"/><text x="29.6806%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5910%" y="341" width="0.0802%" height="15" fill="rgb(223,216,20)" fg:x="369" fg:w="1"/><text x="29.8410%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5910%" y="325" width="0.0802%" height="15" fill="rgb(220,31,8)" fg:x="369" fg:w="1"/><text x="29.8410%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5910%" y="309" width="0.0802%" height="15" fill="rgb(220,185,15)" fg:x="369" fg:w="1"/><text x="29.8410%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5910%" y="293" width="0.0802%" height="15" fill="rgb(247,190,50)" fg:x="369" fg:w="1"/><text x="29.8410%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5910%" y="277" width="0.0802%" height="15" fill="rgb(239,173,47)" fg:x="369" fg:w="1"/><text x="29.8410%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.5910%" y="261" width="0.0802%" height="15" fill="rgb(218,190,42)" fg:x="369" fg:w="1"/><text x="29.8410%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.5910%" y="245" width="0.0802%" height="15" fill="rgb(251,207,16)" fg:x="369" fg:w="1"/><text x="29.8410%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.5910%" y="229" width="0.0802%" height="15" fill="rgb(222,199,47)" fg:x="369" fg:w="1"/><text x="29.8410%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.5910%" y="213" width="0.0802%" height="15" fill="rgb(245,190,7)" fg:x="369" fg:w="1"/><text x="29.8410%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.5910%" y="197" width="0.0802%" height="15" fill="rgb(239,85,38)" fg:x="369" fg:w="1"/><text x="29.8410%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.5910%" y="181" width="0.0802%" height="15" fill="rgb(229,69,51)" fg:x="369" fg:w="1"/><text x="29.8410%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.5910%" y="165" width="0.0802%" height="15" fill="rgb(231,104,51)" fg:x="369" fg:w="1"/><text x="29.8410%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.5910%" y="149" width="0.0802%" height="15" fill="rgb(235,49,4)" fg:x="369" fg:w="1"/><text x="29.8410%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.5910%" y="133" width="0.0802%" height="15" fill="rgb(246,166,20)" fg:x="369" fg:w="1"/><text x="29.8410%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.5910%" y="117" width="0.0802%" height="15" fill="rgb(230,119,37)" fg:x="369" fg:w="1"/><text x="29.8410%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.6712%" y="341" width="0.0802%" height="15" fill="rgb(234,77,34)" fg:x="370" fg:w="1"/><text x="29.9212%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="29.5108%" y="373" width="0.3208%" height="15" fill="rgb(211,222,33)" fg:x="368" fg:w="4"/><text x="29.7608%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="29.5108%" y="357" width="0.3208%" height="15" fill="rgb(226,45,42)" fg:x="368" fg:w="4"/><text x="29.7608%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.7514%" y="341" width="0.0802%" height="15" fill="rgb(215,174,28)" fg:x="371" fg:w="1"/><text x="30.0014%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.7514%" y="325" width="0.0802%" height="15" fill="rgb(254,173,49)" fg:x="371" fg:w="1"/><text x="30.0014%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.7514%" y="309" width="0.0802%" height="15" fill="rgb(229,191,6)" fg:x="371" fg:w="1"/><text x="30.0014%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.7514%" y="293" width="0.0802%" height="15" fill="rgb(212,145,22)" fg:x="371" fg:w="1"/><text x="30.0014%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.7514%" y="277" width="0.0802%" height="15" fill="rgb(226,6,51)" fg:x="371" fg:w="1"/><text x="30.0014%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.7514%" y="261" width="0.0802%" height="15" fill="rgb(227,128,8)" fg:x="371" fg:w="1"/><text x="30.0014%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0722%" y="277" width="0.0802%" height="15" fill="rgb(205,24,10)" fg:x="375" fg:w="1"/><text x="30.3222%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0722%" y="261" width="0.0802%" height="15" fill="rgb(217,147,27)" fg:x="375" fg:w="1"/><text x="30.3222%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="29.5108%" y="405" width="0.8019%" height="15" fill="rgb(250,82,42)" fg:x="368" fg:w="10"/><text x="29.7608%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="29.5108%" y="389" width="0.8019%" height="15" fill="rgb(248,93,17)" fg:x="368" fg:w="10"/><text x="29.7608%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="29.8316%" y="373" width="0.4812%" height="15" fill="rgb(254,212,40)" fg:x="372" fg:w="6"/><text x="30.0816%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="29.8316%" y="357" width="0.4812%" height="15" fill="rgb(229,209,2)" fg:x="372" fg:w="6"/><text x="30.0816%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="29.8316%" y="341" width="0.4812%" height="15" fill="rgb(211,50,43)" fg:x="372" fg:w="6"/><text x="30.0816%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="29.8316%" y="325" width="0.4812%" height="15" fill="rgb(245,196,29)" fg:x="372" fg:w="6"/><text x="30.0816%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="29.9118%" y="309" width="0.4010%" height="15" fill="rgb(216,132,13)" fg:x="373" fg:w="5"/><text x="30.1618%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="29.9920%" y="293" width="0.3208%" height="15" fill="rgb(251,108,21)" fg:x="374" fg:w="4"/><text x="30.2420%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.1524%" y="277" width="0.1604%" height="15" fill="rgb(229,174,54)" fg:x="376" fg:w="2"/><text x="30.4024%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2326%" y="261" width="0.0802%" height="15" fill="rgb(211,175,47)" fg:x="377" fg:w="1"/><text x="30.4826%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="30.3128%" y="389" width="0.0802%" height="15" fill="rgb(234,5,37)" fg:x="378" fg:w="1"/><text x="30.5628%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.3128%" y="373" width="0.0802%" height="15" fill="rgb(244,150,43)" fg:x="378" fg:w="1"/><text x="30.5628%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3128%" y="357" width="0.0802%" height="15" fill="rgb(242,172,38)" fg:x="378" fg:w="1"/><text x="30.5628%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="30.3929%" y="341" width="0.0802%" height="15" fill="rgb(205,27,8)" fg:x="379" fg:w="1"/><text x="30.6429%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.3929%" y="325" width="0.0802%" height="15" fill="rgb(217,57,3)" fg:x="379" fg:w="1"/><text x="30.6429%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4731%" y="325" width="0.0802%" height="15" fill="rgb(242,21,38)" fg:x="380" fg:w="1"/><text x="30.7231%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.5533%" y="261" width="0.0802%" height="15" fill="rgb(209,64,43)" fg:x="381" fg:w="1"/><text x="30.8033%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6335%" y="261" width="0.0802%" height="15" fill="rgb(222,2,46)" fg:x="382" fg:w="1"/><text x="30.8835%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.6335%" y="245" width="0.0802%" height="15" fill="rgb(218,19,44)" fg:x="382" fg:w="1"/><text x="30.8835%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="30.3929%" y="357" width="0.4010%" height="15" fill="rgb(240,203,42)" fg:x="379" fg:w="5"/><text x="30.6429%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="30.4731%" y="341" width="0.3208%" height="15" fill="rgb(229,23,45)" fg:x="380" fg:w="4"/><text x="30.7231%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="30.5533%" y="325" width="0.2406%" height="15" fill="rgb(205,228,51)" fg:x="381" fg:w="3"/><text x="30.8033%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="30.5533%" y="309" width="0.2406%" height="15" fill="rgb(239,36,20)" fg:x="381" fg:w="3"/><text x="30.8033%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="30.5533%" y="293" width="0.2406%" height="15" fill="rgb(248,172,27)" fg:x="381" fg:w="3"/><text x="30.8033%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="30.5533%" y="277" width="0.2406%" height="15" fill="rgb(244,55,32)" fg:x="381" fg:w="3"/><text x="30.8033%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.7137%" y="261" width="0.0802%" height="15" fill="rgb(215,97,16)" fg:x="383" fg:w="1"/><text x="30.9637%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7137%" y="245" width="0.0802%" height="15" fill="rgb(224,80,29)" fg:x="383" fg:w="1"/><text x="30.9637%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="30.7939%" y="341" width="0.0802%" height="15" fill="rgb(216,93,47)" fg:x="384" fg:w="1"/><text x="31.0439%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.8741%" y="325" width="0.0802%" height="15" fill="rgb(238,159,10)" fg:x="385" fg:w="1"/><text x="31.1241%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.8741%" y="309" width="0.0802%" height="15" fill="rgb(223,98,29)" fg:x="385" fg:w="1"/><text x="31.1241%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.8741%" y="293" width="0.0802%" height="15" fill="rgb(210,176,23)" fg:x="385" fg:w="1"/><text x="31.1241%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8741%" y="277" width="0.0802%" height="15" fill="rgb(242,162,27)" fg:x="385" fg:w="1"/><text x="31.1241%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8741%" y="261" width="0.0802%" height="15" fill="rgb(245,109,32)" fg:x="385" fg:w="1"/><text x="31.1241%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.8741%" y="245" width="0.0802%" height="15" fill="rgb(248,87,8)" fg:x="385" fg:w="1"/><text x="31.1241%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.8741%" y="229" width="0.0802%" height="15" fill="rgb(250,160,50)" fg:x="385" fg:w="1"/><text x="31.1241%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.8741%" y="213" width="0.0802%" height="15" fill="rgb(246,165,25)" fg:x="385" fg:w="1"/><text x="31.1241%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8741%" y="197" width="0.0802%" height="15" fill="rgb(249,219,3)" fg:x="385" fg:w="1"/><text x="31.1241%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8741%" y="181" width="0.0802%" height="15" fill="rgb(226,66,5)" fg:x="385" fg:w="1"/><text x="31.1241%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.8741%" y="165" width="0.0802%" height="15" fill="rgb(250,220,43)" fg:x="385" fg:w="1"/><text x="31.1241%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.8741%" y="149" width="0.0802%" height="15" fill="rgb(225,111,31)" fg:x="385" fg:w="1"/><text x="31.1241%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.8741%" y="133" width="0.0802%" height="15" fill="rgb(248,106,18)" fg:x="385" fg:w="1"/><text x="31.1241%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.8741%" y="117" width="0.0802%" height="15" fill="rgb(220,226,45)" fg:x="385" fg:w="1"/><text x="31.1241%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8741%" y="101" width="0.0802%" height="15" fill="rgb(208,58,53)" fg:x="385" fg:w="1"/><text x="31.1241%" y="111.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="30.3929%" y="389" width="0.7217%" height="15" fill="rgb(209,133,1)" fg:x="379" fg:w="9"/><text x="30.6429%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="30.3929%" y="373" width="0.7217%" height="15" fill="rgb(228,216,27)" fg:x="379" fg:w="9"/><text x="30.6429%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="30.7939%" y="357" width="0.3208%" height="15" fill="rgb(238,155,2)" fg:x="384" fg:w="4"/><text x="31.0439%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.8741%" y="341" width="0.2406%" height="15" fill="rgb(244,99,37)" fg:x="385" fg:w="3"/><text x="31.1241%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.9543%" y="325" width="0.1604%" height="15" fill="rgb(254,32,3)" fg:x="386" fg:w="2"/><text x="31.2043%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.9543%" y="309" width="0.1604%" height="15" fill="rgb(234,46,50)" fg:x="386" fg:w="2"/><text x="31.2043%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="30.9543%" y="293" width="0.1604%" height="15" fill="rgb(232,118,51)" fg:x="386" fg:w="2"/><text x="31.2043%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.9543%" y="277" width="0.1604%" height="15" fill="rgb(207,24,32)" fg:x="386" fg:w="2"/><text x="31.2043%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.0345%" y="261" width="0.0802%" height="15" fill="rgb(208,107,43)" fg:x="387" fg:w="1"/><text x="31.2845%" y="271.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="30.3128%" y="405" width="0.8821%" height="15" fill="rgb(231,28,9)" fg:x="378" fg:w="11"/><text x="30.5628%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="31.1147%" y="389" width="0.0802%" height="15" fill="rgb(241,204,15)" fg:x="388" fg:w="1"/><text x="31.3647%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.1147%" y="373" width="0.0802%" height="15" fill="rgb(214,54,15)" fg:x="388" fg:w="1"/><text x="31.3647%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="31.1949%" y="389" width="0.0802%" height="15" fill="rgb(230,12,28)" fg:x="389" fg:w="1"/><text x="31.4449%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="31.1949%" y="373" width="0.0802%" height="15" fill="rgb(221,171,5)" fg:x="389" fg:w="1"/><text x="31.4449%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (23 samples, 1.84%)</title><rect x="29.5108%" y="437" width="1.8444%" height="15" fill="rgb(207,72,25)" fg:x="368" fg:w="23"/><text x="29.7608%" y="447.50">p..</text></g><g><title>plugins_core::tools::set_container (23 samples, 1.84%)</title><rect x="29.5108%" y="421" width="1.8444%" height="15" fill="rgb(249,79,37)" fg:x="368" fg:w="23"/><text x="29.7608%" y="431.50">p..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="31.1949%" y="405" width="0.1604%" height="15" fill="rgb(209,98,49)" fg:x="389" fg:w="2"/><text x="31.4449%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.2751%" y="389" width="0.0802%" height="15" fill="rgb(221,62,13)" fg:x="390" fg:w="1"/><text x="31.5251%" y="399.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2751%" y="373" width="0.0802%" height="15" fill="rgb(223,39,6)" fg:x="390" fg:w="1"/><text x="31.5251%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.2751%" y="357" width="0.0802%" height="15" fill="rgb(246,163,20)" fg:x="390" fg:w="1"/><text x="31.5251%" y="367.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2751%" y="341" width="0.0802%" height="15" fill="rgb(211,111,29)" fg:x="390" fg:w="1"/><text x="31.5251%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.2751%" y="325" width="0.0802%" height="15" fill="rgb(243,118,5)" fg:x="390" fg:w="1"/><text x="31.5251%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2751%" y="309" width="0.0802%" height="15" fill="rgb(240,144,52)" fg:x="390" fg:w="1"/><text x="31.5251%" y="319.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="31.3553%" y="405" width="0.0802%" height="15" fill="rgb(244,158,36)" fg:x="391" fg:w="1"/><text x="31.6053%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.3553%" y="389" width="0.0802%" height="15" fill="rgb(241,109,37)" fg:x="391" fg:w="1"/><text x="31.6053%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.3553%" y="373" width="0.0802%" height="15" fill="rgb(213,95,32)" fg:x="391" fg:w="1"/><text x="31.6053%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.3553%" y="357" width="0.0802%" height="15" fill="rgb(252,193,9)" fg:x="391" fg:w="1"/><text x="31.6053%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="31.3553%" y="437" width="0.1604%" height="15" fill="rgb(225,213,21)" fg:x="391" fg:w="2"/><text x="31.6053%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="31.3553%" y="421" width="0.1604%" height="15" fill="rgb(220,172,46)" fg:x="391" fg:w="2"/><text x="31.6053%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.4354%" y="405" width="0.0802%" height="15" fill="rgb(235,75,41)" fg:x="392" fg:w="1"/><text x="31.6854%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5156%" y="421" width="0.0802%" height="15" fill="rgb(213,86,9)" fg:x="393" fg:w="1"/><text x="31.7656%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.5958%" y="389" width="0.0802%" height="15" fill="rgb(238,127,51)" fg:x="394" fg:w="1"/><text x="31.8458%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.5958%" y="373" width="0.0802%" height="15" fill="rgb(215,2,54)" fg:x="394" fg:w="1"/><text x="31.8458%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5958%" y="357" width="0.0802%" height="15" fill="rgb(245,80,6)" fg:x="394" fg:w="1"/><text x="31.8458%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5958%" y="341" width="0.0802%" height="15" fill="rgb(233,106,42)" fg:x="394" fg:w="1"/><text x="31.8458%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5958%" y="325" width="0.0802%" height="15" fill="rgb(244,86,38)" fg:x="394" fg:w="1"/><text x="31.8458%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="31.6760%" y="373" width="0.0802%" height="15" fill="rgb(242,167,7)" fg:x="395" fg:w="1"/><text x="31.9260%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.6760%" y="357" width="0.0802%" height="15" fill="rgb(218,216,3)" fg:x="395" fg:w="1"/><text x="31.9260%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="31.6760%" y="341" width="0.0802%" height="15" fill="rgb(206,136,36)" fg:x="395" fg:w="1"/><text x="31.9260%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.6760%" y="325" width="0.0802%" height="15" fill="rgb(206,206,15)" fg:x="395" fg:w="1"/><text x="31.9260%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.6760%" y="309" width="0.0802%" height="15" fill="rgb(207,163,34)" fg:x="395" fg:w="1"/><text x="31.9260%" y="319.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="31.6760%" y="389" width="0.1604%" height="15" fill="rgb(240,127,22)" fg:x="395" fg:w="2"/><text x="31.9260%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.7562%" y="373" width="0.0802%" height="15" fill="rgb(227,49,5)" fg:x="396" fg:w="1"/><text x="32.0062%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="31.7562%" y="357" width="0.0802%" height="15" fill="rgb(231,8,6)" fg:x="396" fg:w="1"/><text x="32.0062%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.7562%" y="341" width="0.0802%" height="15" fill="rgb(223,21,24)" fg:x="396" fg:w="1"/><text x="32.0062%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.7562%" y="325" width="0.0802%" height="15" fill="rgb(244,44,52)" fg:x="396" fg:w="1"/><text x="32.0062%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="31.8364%" y="325" width="0.0802%" height="15" fill="rgb(207,73,28)" fg:x="397" fg:w="1"/><text x="32.0864%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="31.8364%" y="373" width="0.1604%" height="15" fill="rgb(234,215,10)" fg:x="397" fg:w="2"/><text x="32.0864%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="31.8364%" y="357" width="0.1604%" height="15" fill="rgb(236,85,3)" fg:x="397" fg:w="2"/><text x="32.0864%" y="367.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="31.8364%" y="341" width="0.1604%" height="15" fill="rgb(236,102,39)" fg:x="397" fg:w="2"/><text x="32.0864%" y="351.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.9166%" y="325" width="0.0802%" height="15" fill="rgb(243,50,8)" fg:x="398" fg:w="1"/><text x="32.1666%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="31.9166%" y="309" width="0.0802%" height="15" fill="rgb(207,111,4)" fg:x="398" fg:w="1"/><text x="32.1666%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.9166%" y="293" width="0.0802%" height="15" fill="rgb(230,52,42)" fg:x="398" fg:w="1"/><text x="32.1666%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.9166%" y="277" width="0.0802%" height="15" fill="rgb(252,178,50)" fg:x="398" fg:w="1"/><text x="32.1666%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.9166%" y="261" width="0.0802%" height="15" fill="rgb(234,46,35)" fg:x="398" fg:w="1"/><text x="32.1666%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.9166%" y="245" width="0.0802%" height="15" fill="rgb(228,69,37)" fg:x="398" fg:w="1"/><text x="32.1666%" y="255.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="31.9968%" y="373" width="0.0802%" height="15" fill="rgb(221,21,11)" fg:x="399" fg:w="1"/><text x="32.2468%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9968%" y="357" width="0.0802%" height="15" fill="rgb(223,56,9)" fg:x="399" fg:w="1"/><text x="32.2468%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.9968%" y="341" width="0.0802%" height="15" fill="rgb(234,30,19)" fg:x="399" fg:w="1"/><text x="32.2468%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="31.8364%" y="389" width="0.4812%" height="15" fill="rgb(211,64,54)" fg:x="397" fg:w="6"/><text x="32.0864%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="32.0770%" y="373" width="0.2406%" height="15" fill="rgb(250,189,5)" fg:x="400" fg:w="3"/><text x="32.3270%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.1572%" y="357" width="0.1604%" height="15" fill="rgb(214,180,13)" fg:x="401" fg:w="2"/><text x="32.4072%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="32.1572%" y="341" width="0.1604%" height="15" fill="rgb(238,40,40)" fg:x="401" fg:w="2"/><text x="32.4072%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="32.1572%" y="325" width="0.1604%" height="15" fill="rgb(214,101,38)" fg:x="401" fg:w="2"/><text x="32.4072%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="32.1572%" y="309" width="0.1604%" height="15" fill="rgb(242,65,53)" fg:x="401" fg:w="2"/><text x="32.4072%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.1572%" y="293" width="0.1604%" height="15" fill="rgb(230,22,45)" fg:x="401" fg:w="2"/><text x="32.4072%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="32.1572%" y="277" width="0.1604%" height="15" fill="rgb(223,77,1)" fg:x="401" fg:w="2"/><text x="32.4072%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.1572%" y="261" width="0.1604%" height="15" fill="rgb(227,33,37)" fg:x="401" fg:w="2"/><text x="32.4072%" y="271.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="32.2374%" y="245" width="0.0802%" height="15" fill="rgb(224,148,39)" fg:x="402" fg:w="1"/><text x="32.4874%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2374%" y="229" width="0.0802%" height="15" fill="rgb(232,212,39)" fg:x="402" fg:w="1"/><text x="32.4874%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2374%" y="213" width="0.0802%" height="15" fill="rgb(251,172,7)" fg:x="402" fg:w="1"/><text x="32.4874%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2374%" y="197" width="0.0802%" height="15" fill="rgb(219,39,9)" fg:x="402" fg:w="1"/><text x="32.4874%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="32.3176%" y="357" width="0.0802%" height="15" fill="rgb(228,118,14)" fg:x="403" fg:w="1"/><text x="32.5676%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3176%" y="341" width="0.0802%" height="15" fill="rgb(207,140,10)" fg:x="403" fg:w="1"/><text x="32.5676%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.3978%" y="341" width="0.0802%" height="15" fill="rgb(227,111,53)" fg:x="404" fg:w="1"/><text x="32.6478%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.3978%" y="325" width="0.0802%" height="15" fill="rgb(216,165,16)" fg:x="404" fg:w="1"/><text x="32.6478%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.3978%" y="309" width="0.0802%" height="15" fill="rgb(226,111,18)" fg:x="404" fg:w="1"/><text x="32.6478%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.3978%" y="293" width="0.0802%" height="15" fill="rgb(251,27,17)" fg:x="404" fg:w="1"/><text x="32.6478%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3978%" y="277" width="0.0802%" height="15" fill="rgb(254,69,9)" fg:x="404" fg:w="1"/><text x="32.6478%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="32.3176%" y="373" width="0.2406%" height="15" fill="rgb(234,140,37)" fg:x="403" fg:w="3"/><text x="32.5676%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.3978%" y="357" width="0.1604%" height="15" fill="rgb(220,93,8)" fg:x="404" fg:w="2"/><text x="32.6478%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.4779%" y="341" width="0.0802%" height="15" fill="rgb(236,113,3)" fg:x="405" fg:w="1"/><text x="32.7279%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.4779%" y="325" width="0.0802%" height="15" fill="rgb(234,108,23)" fg:x="405" fg:w="1"/><text x="32.7279%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.4779%" y="309" width="0.0802%" height="15" fill="rgb(205,114,34)" fg:x="405" fg:w="1"/><text x="32.7279%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.4779%" y="293" width="0.0802%" height="15" fill="rgb(236,200,45)" fg:x="405" fg:w="1"/><text x="32.7279%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.4779%" y="277" width="0.0802%" height="15" fill="rgb(227,194,29)" fg:x="405" fg:w="1"/><text x="32.7279%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.4779%" y="261" width="0.0802%" height="15" fill="rgb(250,76,42)" fg:x="405" fg:w="1"/><text x="32.7279%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.5581%" y="309" width="0.0802%" height="15" fill="rgb(208,128,8)" fg:x="406" fg:w="1"/><text x="32.8081%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.5581%" y="293" width="0.0802%" height="15" fill="rgb(229,209,35)" fg:x="406" fg:w="1"/><text x="32.8081%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.5581%" y="277" width="0.0802%" height="15" fill="rgb(215,39,53)" fg:x="406" fg:w="1"/><text x="32.8081%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.5581%" y="261" width="0.0802%" height="15" fill="rgb(219,123,41)" fg:x="406" fg:w="1"/><text x="32.8081%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.5581%" y="245" width="0.0802%" height="15" fill="rgb(212,158,18)" fg:x="406" fg:w="1"/><text x="32.8081%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.5581%" y="229" width="0.0802%" height="15" fill="rgb(234,196,53)" fg:x="406" fg:w="1"/><text x="32.8081%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.5581%" y="213" width="0.0802%" height="15" fill="rgb(210,139,12)" fg:x="406" fg:w="1"/><text x="32.8081%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.5581%" y="197" width="0.0802%" height="15" fill="rgb(220,116,54)" fg:x="406" fg:w="1"/><text x="32.8081%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5581%" y="341" width="0.1604%" height="15" fill="rgb(247,103,28)" fg:x="406" fg:w="2"/><text x="32.8081%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5581%" y="325" width="0.1604%" height="15" fill="rgb(253,156,45)" fg:x="406" fg:w="2"/><text x="32.8081%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.6383%" y="309" width="0.0802%" height="15" fill="rgb(237,157,52)" fg:x="407" fg:w="1"/><text x="32.8883%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="32.3176%" y="389" width="0.4812%" height="15" fill="rgb(253,112,16)" fg:x="403" fg:w="6"/><text x="32.5676%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="32.5581%" y="373" width="0.2406%" height="15" fill="rgb(234,70,18)" fg:x="406" fg:w="3"/><text x="32.8081%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.5581%" y="357" width="0.2406%" height="15" fill="rgb(247,138,19)" fg:x="406" fg:w="3"/><text x="32.8081%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.7185%" y="341" width="0.0802%" height="15" fill="rgb(207,171,1)" fg:x="408" fg:w="1"/><text x="32.9685%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.8789%" y="357" width="0.0802%" height="15" fill="rgb(239,213,3)" fg:x="410" fg:w="1"/><text x="33.1289%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.8789%" y="341" width="0.0802%" height="15" fill="rgb(226,112,4)" fg:x="410" fg:w="1"/><text x="33.1289%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.8789%" y="325" width="0.0802%" height="15" fill="rgb(252,170,12)" fg:x="410" fg:w="1"/><text x="33.1289%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.8789%" y="309" width="0.0802%" height="15" fill="rgb(241,106,13)" fg:x="410" fg:w="1"/><text x="33.1289%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.8789%" y="293" width="0.0802%" height="15" fill="rgb(225,73,23)" fg:x="410" fg:w="1"/><text x="33.1289%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.8789%" y="277" width="0.0802%" height="15" fill="rgb(251,227,29)" fg:x="410" fg:w="1"/><text x="33.1289%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.8789%" y="261" width="0.0802%" height="15" fill="rgb(237,144,13)" fg:x="410" fg:w="1"/><text x="33.1289%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.52%)</title><rect x="31.5958%" y="405" width="1.5237%" height="15" fill="rgb(232,106,46)" fg:x="394" fg:w="19"/><text x="31.8458%" y="415.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="32.7987%" y="389" width="0.3208%" height="15" fill="rgb(245,154,53)" fg:x="409" fg:w="4"/><text x="33.0487%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="32.8789%" y="373" width="0.2406%" height="15" fill="rgb(212,119,47)" fg:x="410" fg:w="3"/><text x="33.1289%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="32.9591%" y="357" width="0.1604%" height="15" fill="rgb(253,135,25)" fg:x="411" fg:w="2"/><text x="33.2091%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.9591%" y="341" width="0.1604%" height="15" fill="rgb(253,208,39)" fg:x="411" fg:w="2"/><text x="33.2091%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.9591%" y="325" width="0.1604%" height="15" fill="rgb(226,64,12)" fg:x="411" fg:w="2"/><text x="33.2091%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.0393%" y="309" width="0.0802%" height="15" fill="rgb(214,162,37)" fg:x="412" fg:w="1"/><text x="33.2893%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.0393%" y="293" width="0.0802%" height="15" fill="rgb(250,104,5)" fg:x="412" fg:w="1"/><text x="33.2893%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0393%" y="277" width="0.0802%" height="15" fill="rgb(220,202,50)" fg:x="412" fg:w="1"/><text x="33.2893%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0393%" y="261" width="0.0802%" height="15" fill="rgb(248,67,38)" fg:x="412" fg:w="1"/><text x="33.2893%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.0393%" y="245" width="0.0802%" height="15" fill="rgb(242,94,35)" fg:x="412" fg:w="1"/><text x="33.2893%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.0393%" y="229" width="0.0802%" height="15" fill="rgb(209,78,37)" fg:x="412" fg:w="1"/><text x="33.2893%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.0393%" y="213" width="0.0802%" height="15" fill="rgb(230,126,47)" fg:x="412" fg:w="1"/><text x="33.2893%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.0393%" y="197" width="0.0802%" height="15" fill="rgb(222,110,35)" fg:x="412" fg:w="1"/><text x="33.2893%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.0393%" y="181" width="0.0802%" height="15" fill="rgb(233,154,20)" fg:x="412" fg:w="1"/><text x="33.2893%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.0393%" y="165" width="0.0802%" height="15" fill="rgb(223,53,50)" fg:x="412" fg:w="1"/><text x="33.2893%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.0393%" y="149" width="0.0802%" height="15" fill="rgb(251,27,26)" fg:x="412" fg:w="1"/><text x="33.2893%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.0393%" y="133" width="0.0802%" height="15" fill="rgb(223,189,16)" fg:x="412" fg:w="1"/><text x="33.2893%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.0393%" y="117" width="0.0802%" height="15" fill="rgb(207,5,54)" fg:x="412" fg:w="1"/><text x="33.2893%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0393%" y="101" width="0.0802%" height="15" fill="rgb(254,124,50)" fg:x="412" fg:w="1"/><text x="33.2893%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1195%" y="373" width="0.0802%" height="15" fill="rgb(253,193,24)" fg:x="413" fg:w="1"/><text x="33.3695%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.1997%" y="309" width="0.0802%" height="15" fill="rgb(235,170,24)" fg:x="414" fg:w="1"/><text x="33.4497%" y="319.50"></text></g><g><title>plugins_core::build::Build::into_entry (22 samples, 1.76%)</title><rect x="31.5958%" y="421" width="1.7642%" height="15" fill="rgb(222,212,52)" fg:x="394" fg:w="22"/><text x="31.8458%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="33.1195%" y="405" width="0.2406%" height="15" fill="rgb(223,17,45)" fg:x="413" fg:w="3"/><text x="33.3695%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="33.1195%" y="389" width="0.2406%" height="15" fill="rgb(227,103,26)" fg:x="413" fg:w="3"/><text x="33.3695%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.1997%" y="373" width="0.1604%" height="15" fill="rgb(251,151,25)" fg:x="414" fg:w="2"/><text x="33.4497%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.1997%" y="357" width="0.1604%" height="15" fill="rgb(248,144,29)" fg:x="414" fg:w="2"/><text x="33.4497%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="33.1997%" y="341" width="0.1604%" height="15" fill="rgb(245,97,16)" fg:x="414" fg:w="2"/><text x="33.4497%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.1997%" y="325" width="0.1604%" height="15" fill="rgb(220,200,29)" fg:x="414" fg:w="2"/><text x="33.4497%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.2799%" y="309" width="0.0802%" height="15" fill="rgb(206,38,29)" fg:x="415" fg:w="1"/><text x="33.5299%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.2799%" y="293" width="0.0802%" height="15" fill="rgb(245,19,52)" fg:x="415" fg:w="1"/><text x="33.5299%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="33.3601%" y="405" width="0.0802%" height="15" fill="rgb(205,67,43)" fg:x="416" fg:w="1"/><text x="33.6101%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.4403%" y="405" width="0.0802%" height="15" fill="rgb(217,128,23)" fg:x="417" fg:w="1"/><text x="33.6903%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.4403%" y="389" width="0.0802%" height="15" fill="rgb(210,109,28)" fg:x="417" fg:w="1"/><text x="33.6903%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.5204%" y="341" width="0.1604%" height="15" fill="rgb(233,181,7)" fg:x="418" fg:w="2"/><text x="33.7704%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6006%" y="325" width="0.0802%" height="15" fill="rgb(244,11,22)" fg:x="419" fg:w="1"/><text x="33.8506%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6006%" y="309" width="0.0802%" height="15" fill="rgb(205,124,54)" fg:x="419" fg:w="1"/><text x="33.8506%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6006%" y="293" width="0.0802%" height="15" fill="rgb(218,21,27)" fg:x="419" fg:w="1"/><text x="33.8506%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6006%" y="277" width="0.0802%" height="15" fill="rgb(224,153,33)" fg:x="419" fg:w="1"/><text x="33.8506%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.6006%" y="261" width="0.0802%" height="15" fill="rgb(240,219,28)" fg:x="419" fg:w="1"/><text x="33.8506%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.6006%" y="245" width="0.0802%" height="15" fill="rgb(214,80,29)" fg:x="419" fg:w="1"/><text x="33.8506%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.6006%" y="229" width="0.0802%" height="15" fill="rgb(247,148,44)" fg:x="419" fg:w="1"/><text x="33.8506%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6006%" y="213" width="0.0802%" height="15" fill="rgb(243,110,30)" fg:x="419" fg:w="1"/><text x="33.8506%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6006%" y="197" width="0.0802%" height="15" fill="rgb(243,173,41)" fg:x="419" fg:w="1"/><text x="33.8506%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.6006%" y="181" width="0.0802%" height="15" fill="rgb(225,160,47)" fg:x="419" fg:w="1"/><text x="33.8506%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.6006%" y="165" width="0.0802%" height="15" fill="rgb(215,44,21)" fg:x="419" fg:w="1"/><text x="33.8506%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.6006%" y="149" width="0.0802%" height="15" fill="rgb(248,90,3)" fg:x="419" fg:w="1"/><text x="33.8506%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.6006%" y="133" width="0.0802%" height="15" fill="rgb(220,196,49)" fg:x="419" fg:w="1"/><text x="33.8506%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6006%" y="117" width="0.0802%" height="15" fill="rgb(217,138,14)" fg:x="419" fg:w="1"/><text x="33.8506%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.6808%" y="309" width="0.0802%" height="15" fill="rgb(219,111,20)" fg:x="420" fg:w="1"/><text x="33.9308%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.6808%" y="293" width="0.0802%" height="15" fill="rgb(218,114,4)" fg:x="420" fg:w="1"/><text x="33.9308%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="33.5204%" y="373" width="0.3208%" height="15" fill="rgb(238,133,3)" fg:x="418" fg:w="4"/><text x="33.7704%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="33.5204%" y="357" width="0.3208%" height="15" fill="rgb(224,95,0)" fg:x="418" fg:w="4"/><text x="33.7704%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.6808%" y="341" width="0.1604%" height="15" fill="rgb(220,169,35)" fg:x="420" fg:w="2"/><text x="33.9308%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.6808%" y="325" width="0.1604%" height="15" fill="rgb(242,116,47)" fg:x="420" fg:w="2"/><text x="33.9308%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.7610%" y="309" width="0.0802%" height="15" fill="rgb(251,42,20)" fg:x="421" fg:w="1"/><text x="34.0110%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7610%" y="293" width="0.0802%" height="15" fill="rgb(234,7,34)" fg:x="421" fg:w="1"/><text x="34.0110%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7610%" y="277" width="0.0802%" height="15" fill="rgb(243,208,13)" fg:x="421" fg:w="1"/><text x="34.0110%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7610%" y="261" width="0.0802%" height="15" fill="rgb(227,33,28)" fg:x="421" fg:w="1"/><text x="34.0110%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="33.5204%" y="405" width="0.4010%" height="15" fill="rgb(250,47,37)" fg:x="418" fg:w="5"/><text x="33.7704%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="33.5204%" y="389" width="0.4010%" height="15" fill="rgb(235,111,52)" fg:x="418" fg:w="5"/><text x="33.7704%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="33.8412%" y="373" width="0.0802%" height="15" fill="rgb(223,64,28)" fg:x="422" fg:w="1"/><text x="34.0912%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.8412%" y="357" width="0.0802%" height="15" fill="rgb(236,67,22)" fg:x="422" fg:w="1"/><text x="34.0912%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.8412%" y="341" width="0.0802%" height="15" fill="rgb(243,79,24)" fg:x="422" fg:w="1"/><text x="34.0912%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.8412%" y="325" width="0.0802%" height="15" fill="rgb(241,225,22)" fg:x="422" fg:w="1"/><text x="34.0912%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.8412%" y="309" width="0.0802%" height="15" fill="rgb(228,214,26)" fg:x="422" fg:w="1"/><text x="34.0912%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.8412%" y="293" width="0.0802%" height="15" fill="rgb(219,84,52)" fg:x="422" fg:w="1"/><text x="34.0912%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.8412%" y="277" width="0.0802%" height="15" fill="rgb(220,12,22)" fg:x="422" fg:w="1"/><text x="34.0912%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="33.9214%" y="405" width="0.0802%" height="15" fill="rgb(219,9,49)" fg:x="423" fg:w="1"/><text x="34.1714%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.9214%" y="389" width="0.0802%" height="15" fill="rgb(237,40,43)" fg:x="423" fg:w="1"/><text x="34.1714%" y="399.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="34.0818%" y="389" width="0.0802%" height="15" fill="rgb(212,189,32)" fg:x="425" fg:w="1"/><text x="34.3318%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.0818%" y="373" width="0.0802%" height="15" fill="rgb(247,48,9)" fg:x="425" fg:w="1"/><text x="34.3318%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="34.0818%" y="357" width="0.0802%" height="15" fill="rgb(247,112,3)" fg:x="425" fg:w="1"/><text x="34.3318%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.0818%" y="341" width="0.0802%" height="15" fill="rgb(243,110,18)" fg:x="425" fg:w="1"/><text x="34.3318%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0818%" y="325" width="0.0802%" height="15" fill="rgb(233,223,44)" fg:x="425" fg:w="1"/><text x="34.3318%" y="335.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="34.0016%" y="405" width="0.3208%" height="15" fill="rgb(245,160,20)" fg:x="424" fg:w="4"/><text x="34.2516%" y="415.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="34.1620%" y="389" width="0.1604%" height="15" fill="rgb(225,37,1)" fg:x="426" fg:w="2"/><text x="34.4120%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.1620%" y="373" width="0.1604%" height="15" fill="rgb(253,227,39)" fg:x="426" fg:w="2"/><text x="34.4120%" y="383.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="34.2422%" y="357" width="0.0802%" height="15" fill="rgb(240,179,26)" fg:x="427" fg:w="1"/><text x="34.4922%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.2422%" y="341" width="0.0802%" height="15" fill="rgb(237,212,23)" fg:x="427" fg:w="1"/><text x="34.4922%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2422%" y="325" width="0.0802%" height="15" fill="rgb(221,38,11)" fg:x="427" fg:w="1"/><text x="34.4922%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2422%" y="309" width="0.0802%" height="15" fill="rgb(215,85,6)" fg:x="427" fg:w="1"/><text x="34.4922%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.2422%" y="293" width="0.0802%" height="15" fill="rgb(239,64,14)" fg:x="427" fg:w="1"/><text x="34.4922%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="34.3224%" y="357" width="0.0802%" height="15" fill="rgb(215,150,32)" fg:x="428" fg:w="1"/><text x="34.5724%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.3224%" y="341" width="0.0802%" height="15" fill="rgb(238,15,13)" fg:x="428" fg:w="1"/><text x="34.5724%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.3224%" y="325" width="0.0802%" height="15" fill="rgb(251,87,8)" fg:x="428" fg:w="1"/><text x="34.5724%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.3224%" y="309" width="0.0802%" height="15" fill="rgb(206,86,1)" fg:x="428" fg:w="1"/><text x="34.5724%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.3224%" y="293" width="0.0802%" height="15" fill="rgb(208,151,45)" fg:x="428" fg:w="1"/><text x="34.5724%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.3224%" y="277" width="0.0802%" height="15" fill="rgb(231,181,24)" fg:x="428" fg:w="1"/><text x="34.5724%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.3224%" y="261" width="0.0802%" height="15" fill="rgb(240,106,29)" fg:x="428" fg:w="1"/><text x="34.5724%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.3224%" y="245" width="0.0802%" height="15" fill="rgb(227,166,11)" fg:x="428" fg:w="1"/><text x="34.5724%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.3224%" y="229" width="0.0802%" height="15" fill="rgb(254,14,34)" fg:x="428" fg:w="1"/><text x="34.5724%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.4026%" y="325" width="0.0802%" height="15" fill="rgb(223,222,6)" fg:x="429" fg:w="1"/><text x="34.6526%" y="335.50"></text></g><g><title>plugins_core::build::Build::occupying (38 samples, 3.05%)</title><rect x="31.5156%" y="437" width="3.0473%" height="15" fill="rgb(245,69,24)" fg:x="393" fg:w="38"/><text x="31.7656%" y="447.50">plu..</text></g><g><title>plugins_core::tools::set_occupying (15 samples, 1.20%)</title><rect x="33.3601%" y="421" width="1.2029%" height="15" fill="rgb(213,193,7)" fg:x="416" fg:w="15"/><text x="33.6101%" y="431.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="34.3224%" y="405" width="0.2406%" height="15" fill="rgb(237,92,51)" fg:x="428" fg:w="3"/><text x="34.5724%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="34.3224%" y="389" width="0.2406%" height="15" fill="rgb(225,194,6)" fg:x="428" fg:w="3"/><text x="34.5724%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="34.3224%" y="373" width="0.2406%" height="15" fill="rgb(205,159,49)" fg:x="428" fg:w="3"/><text x="34.5724%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="34.4026%" y="357" width="0.1604%" height="15" fill="rgb(219,69,2)" fg:x="429" fg:w="2"/><text x="34.6526%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="34.4026%" y="341" width="0.1604%" height="15" fill="rgb(215,107,24)" fg:x="429" fg:w="2"/><text x="34.6526%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.4828%" y="325" width="0.0802%" height="15" fill="rgb(249,208,29)" fg:x="430" fg:w="1"/><text x="34.7328%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.4828%" y="309" width="0.0802%" height="15" fill="rgb(213,147,10)" fg:x="430" fg:w="1"/><text x="34.7328%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.4828%" y="293" width="0.0802%" height="15" fill="rgb(254,140,42)" fg:x="430" fg:w="1"/><text x="34.7328%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.4828%" y="277" width="0.0802%" height="15" fill="rgb(249,9,15)" fg:x="430" fg:w="1"/><text x="34.7328%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.5630%" y="421" width="0.0802%" height="15" fill="rgb(210,19,33)" fg:x="431" fg:w="1"/><text x="34.8130%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.6431%" y="405" width="0.0802%" height="15" fill="rgb(241,121,22)" fg:x="432" fg:w="1"/><text x="34.8931%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.6431%" y="389" width="0.0802%" height="15" fill="rgb(244,69,52)" fg:x="432" fg:w="1"/><text x="34.8931%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.6431%" y="373" width="0.0802%" height="15" fill="rgb(244,191,54)" fg:x="432" fg:w="1"/><text x="34.8931%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.6431%" y="357" width="0.0802%" height="15" fill="rgb(250,3,53)" fg:x="432" fg:w="1"/><text x="34.8931%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.6431%" y="341" width="0.0802%" height="15" fill="rgb(205,77,3)" fg:x="432" fg:w="1"/><text x="34.8931%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.6431%" y="325" width="0.0802%" height="15" fill="rgb(207,155,3)" fg:x="432" fg:w="1"/><text x="34.8931%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.6431%" y="309" width="0.0802%" height="15" fill="rgb(224,79,2)" fg:x="432" fg:w="1"/><text x="34.8931%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.6431%" y="293" width="0.0802%" height="15" fill="rgb(243,172,5)" fg:x="432" fg:w="1"/><text x="34.8931%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.6431%" y="277" width="0.0802%" height="15" fill="rgb(217,23,43)" fg:x="432" fg:w="1"/><text x="34.8931%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.6431%" y="261" width="0.0802%" height="15" fill="rgb(223,109,20)" fg:x="432" fg:w="1"/><text x="34.8931%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.6431%" y="245" width="0.0802%" height="15" fill="rgb(232,159,21)" fg:x="432" fg:w="1"/><text x="34.8931%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6431%" y="229" width="0.0802%" height="15" fill="rgb(219,58,2)" fg:x="432" fg:w="1"/><text x="34.8931%" y="239.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="34.8035%" y="373" width="0.0802%" height="15" fill="rgb(241,56,8)" fg:x="434" fg:w="1"/><text x="35.0535%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.8035%" y="357" width="0.0802%" height="15" fill="rgb(249,10,27)" fg:x="434" fg:w="1"/><text x="35.0535%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.8035%" y="341" width="0.0802%" height="15" fill="rgb(248,177,5)" fg:x="434" fg:w="1"/><text x="35.0535%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="34.8035%" y="389" width="0.1604%" height="15" fill="rgb(239,12,30)" fg:x="434" fg:w="2"/><text x="35.0535%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.8837%" y="373" width="0.0802%" height="15" fill="rgb(229,164,25)" fg:x="435" fg:w="1"/><text x="35.1337%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.8837%" y="357" width="0.0802%" height="15" fill="rgb(231,217,50)" fg:x="435" fg:w="1"/><text x="35.1337%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.8837%" y="341" width="0.0802%" height="15" fill="rgb(247,99,32)" fg:x="435" fg:w="1"/><text x="35.1337%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.8837%" y="325" width="0.0802%" height="15" fill="rgb(240,74,50)" fg:x="435" fg:w="1"/><text x="35.1337%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.8837%" y="309" width="0.0802%" height="15" fill="rgb(218,54,8)" fg:x="435" fg:w="1"/><text x="35.1337%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.8837%" y="293" width="0.0802%" height="15" fill="rgb(227,132,20)" fg:x="435" fg:w="1"/><text x="35.1337%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.8837%" y="277" width="0.0802%" height="15" fill="rgb(232,134,12)" fg:x="435" fg:w="1"/><text x="35.1337%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="34.9639%" y="373" width="0.0802%" height="15" fill="rgb(250,129,18)" fg:x="436" fg:w="1"/><text x="35.2139%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.9639%" y="357" width="0.0802%" height="15" fill="rgb(232,129,47)" fg:x="436" fg:w="1"/><text x="35.2139%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9639%" y="341" width="0.0802%" height="15" fill="rgb(230,31,40)" fg:x="436" fg:w="1"/><text x="35.2139%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.9639%" y="325" width="0.0802%" height="15" fill="rgb(232,126,10)" fg:x="436" fg:w="1"/><text x="35.2139%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.0441%" y="357" width="0.0802%" height="15" fill="rgb(205,46,31)" fg:x="437" fg:w="1"/><text x="35.2941%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.0441%" y="341" width="0.0802%" height="15" fill="rgb(232,37,37)" fg:x="437" fg:w="1"/><text x="35.2941%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0441%" y="325" width="0.0802%" height="15" fill="rgb(240,91,16)" fg:x="437" fg:w="1"/><text x="35.2941%" y="335.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="34.9639%" y="389" width="0.2406%" height="15" fill="rgb(224,160,9)" fg:x="436" fg:w="3"/><text x="35.2139%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="35.0441%" y="373" width="0.1604%" height="15" fill="rgb(215,116,14)" fg:x="437" fg:w="2"/><text x="35.2941%" y="383.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="35.1243%" y="357" width="0.0802%" height="15" fill="rgb(235,46,36)" fg:x="438" fg:w="1"/><text x="35.3743%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.1243%" y="341" width="0.0802%" height="15" fill="rgb(238,39,28)" fg:x="438" fg:w="1"/><text x="35.3743%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.1243%" y="325" width="0.0802%" height="15" fill="rgb(242,125,29)" fg:x="438" fg:w="1"/><text x="35.3743%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.1243%" y="309" width="0.0802%" height="15" fill="rgb(238,211,30)" fg:x="438" fg:w="1"/><text x="35.3743%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="35.2045%" y="389" width="0.0802%" height="15" fill="rgb(227,201,28)" fg:x="439" fg:w="1"/><text x="35.4545%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="35.2045%" y="373" width="0.0802%" height="15" fill="rgb(238,77,29)" fg:x="439" fg:w="1"/><text x="35.4545%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.2045%" y="357" width="0.0802%" height="15" fill="rgb(213,221,40)" fg:x="439" fg:w="1"/><text x="35.4545%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.2847%" y="309" width="0.0802%" height="15" fill="rgb(226,220,44)" fg:x="440" fg:w="1"/><text x="35.5347%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.2847%" y="293" width="0.0802%" height="15" fill="rgb(228,90,23)" fg:x="440" fg:w="1"/><text x="35.5347%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="35.3649%" y="245" width="0.0802%" height="15" fill="rgb(235,72,29)" fg:x="441" fg:w="1"/><text x="35.6149%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.3649%" y="229" width="0.0802%" height="15" fill="rgb(248,117,39)" fg:x="441" fg:w="1"/><text x="35.6149%" y="239.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="35.2847%" y="389" width="0.3208%" height="15" fill="rgb(225,43,28)" fg:x="440" fg:w="4"/><text x="35.5347%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="35.2847%" y="373" width="0.3208%" height="15" fill="rgb(240,93,4)" fg:x="440" fg:w="4"/><text x="35.5347%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="35.2847%" y="357" width="0.3208%" height="15" fill="rgb(234,178,27)" fg:x="440" fg:w="4"/><text x="35.5347%" y="367.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="35.2847%" y="341" width="0.3208%" height="15" fill="rgb(254,88,22)" fg:x="440" fg:w="4"/><text x="35.5347%" y="351.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="35.2847%" y="325" width="0.3208%" height="15" fill="rgb(240,206,50)" fg:x="440" fg:w="4"/><text x="35.5347%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="35.3649%" y="309" width="0.2406%" height="15" fill="rgb(249,103,8)" fg:x="441" fg:w="3"/><text x="35.6149%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="35.3649%" y="293" width="0.2406%" height="15" fill="rgb(241,178,36)" fg:x="441" fg:w="3"/><text x="35.6149%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="35.3649%" y="277" width="0.2406%" height="15" fill="rgb(246,110,15)" fg:x="441" fg:w="3"/><text x="35.6149%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="35.3649%" y="261" width="0.2406%" height="15" fill="rgb(207,14,43)" fg:x="441" fg:w="3"/><text x="35.6149%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.4451%" y="245" width="0.1604%" height="15" fill="rgb(253,219,19)" fg:x="442" fg:w="2"/><text x="35.6951%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.4451%" y="229" width="0.1604%" height="15" fill="rgb(216,126,5)" fg:x="442" fg:w="2"/><text x="35.6951%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.5253%" y="213" width="0.0802%" height="15" fill="rgb(218,78,42)" fg:x="443" fg:w="1"/><text x="35.7753%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.5253%" y="197" width="0.0802%" height="15" fill="rgb(215,154,40)" fg:x="443" fg:w="1"/><text x="35.7753%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.6856%" y="341" width="0.1604%" height="15" fill="rgb(235,129,32)" fg:x="445" fg:w="2"/><text x="35.9356%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.6856%" y="325" width="0.1604%" height="15" fill="rgb(218,51,8)" fg:x="445" fg:w="2"/><text x="35.9356%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9262%" y="277" width="0.0802%" height="15" fill="rgb(245,48,4)" fg:x="448" fg:w="1"/><text x="36.1762%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9262%" y="261" width="0.0802%" height="15" fill="rgb(250,175,12)" fg:x="448" fg:w="1"/><text x="36.1762%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="35.6055%" y="373" width="0.4812%" height="15" fill="rgb(237,95,40)" fg:x="444" fg:w="6"/><text x="35.8555%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="35.6055%" y="357" width="0.4812%" height="15" fill="rgb(244,120,0)" fg:x="444" fg:w="6"/><text x="35.8555%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="35.8460%" y="341" width="0.2406%" height="15" fill="rgb(241,19,42)" fg:x="447" fg:w="3"/><text x="36.0960%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.8460%" y="325" width="0.2406%" height="15" fill="rgb(217,174,48)" fg:x="447" fg:w="3"/><text x="36.0960%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="35.8460%" y="309" width="0.2406%" height="15" fill="rgb(239,36,38)" fg:x="447" fg:w="3"/><text x="36.0960%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.8460%" y="293" width="0.2406%" height="15" fill="rgb(220,63,49)" fg:x="447" fg:w="3"/><text x="36.0960%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.0064%" y="277" width="0.0802%" height="15" fill="rgb(240,101,13)" fg:x="449" fg:w="1"/><text x="36.2564%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.0064%" y="261" width="0.0802%" height="15" fill="rgb(209,184,51)" fg:x="449" fg:w="1"/><text x="36.2564%" y="271.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="35.6055%" y="389" width="0.6415%" height="15" fill="rgb(206,136,39)" fg:x="444" fg:w="8"/><text x="35.8555%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="36.0866%" y="373" width="0.1604%" height="15" fill="rgb(254,47,45)" fg:x="450" fg:w="2"/><text x="36.3366%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="36.0866%" y="357" width="0.1604%" height="15" fill="rgb(252,103,20)" fg:x="450" fg:w="2"/><text x="36.3366%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.1668%" y="341" width="0.0802%" height="15" fill="rgb(230,69,12)" fg:x="451" fg:w="1"/><text x="36.4168%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1668%" y="325" width="0.0802%" height="15" fill="rgb(219,2,28)" fg:x="451" fg:w="1"/><text x="36.4168%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.1668%" y="309" width="0.0802%" height="15" fill="rgb(210,9,12)" fg:x="451" fg:w="1"/><text x="36.4168%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1668%" y="293" width="0.0802%" height="15" fill="rgb(235,99,33)" fg:x="451" fg:w="1"/><text x="36.4168%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.2470%" y="357" width="0.0802%" height="15" fill="rgb(230,11,38)" fg:x="452" fg:w="1"/><text x="36.4970%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.2470%" y="341" width="0.0802%" height="15" fill="rgb(217,129,0)" fg:x="452" fg:w="1"/><text x="36.4970%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2470%" y="325" width="0.0802%" height="15" fill="rgb(222,198,4)" fg:x="452" fg:w="1"/><text x="36.4970%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2470%" y="309" width="0.0802%" height="15" fill="rgb(246,170,27)" fg:x="452" fg:w="1"/><text x="36.4970%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.2470%" y="293" width="0.0802%" height="15" fill="rgb(229,17,28)" fg:x="452" fg:w="1"/><text x="36.4970%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2470%" y="277" width="0.0802%" height="15" fill="rgb(233,198,48)" fg:x="452" fg:w="1"/><text x="36.4970%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2470%" y="261" width="0.0802%" height="15" fill="rgb(238,103,23)" fg:x="452" fg:w="1"/><text x="36.4970%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2470%" y="245" width="0.0802%" height="15" fill="rgb(206,91,41)" fg:x="452" fg:w="1"/><text x="36.4970%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.2470%" y="229" width="0.0802%" height="15" fill="rgb(227,34,25)" fg:x="452" fg:w="1"/><text x="36.4970%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (21 samples, 1.68%)</title><rect x="34.7233%" y="405" width="1.6840%" height="15" fill="rgb(210,110,44)" fg:x="433" fg:w="21"/><text x="34.9733%" y="415.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="36.2470%" y="389" width="0.1604%" height="15" fill="rgb(216,189,8)" fg:x="452" fg:w="2"/><text x="36.4970%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="36.2470%" y="373" width="0.1604%" height="15" fill="rgb(234,9,46)" fg:x="452" fg:w="2"/><text x="36.4970%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="36.3272%" y="357" width="0.0802%" height="15" fill="rgb(251,200,5)" fg:x="453" fg:w="1"/><text x="36.5772%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.3272%" y="341" width="0.0802%" height="15" fill="rgb(238,165,37)" fg:x="453" fg:w="1"/><text x="36.5772%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3272%" y="325" width="0.0802%" height="15" fill="rgb(232,77,38)" fg:x="453" fg:w="1"/><text x="36.5772%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3272%" y="309" width="0.0802%" height="15" fill="rgb(253,179,33)" fg:x="453" fg:w="1"/><text x="36.5772%" y="319.50"></text></g><g><title>plugins_core::build::Build::into_entry (24 samples, 1.92%)</title><rect x="34.6431%" y="421" width="1.9246%" height="15" fill="rgb(240,13,35)" fg:x="432" fg:w="24"/><text x="34.8931%" y="431.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="36.4074%" y="405" width="0.1604%" height="15" fill="rgb(242,150,49)" fg:x="454" fg:w="2"/><text x="36.6574%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="36.4074%" y="389" width="0.1604%" height="15" fill="rgb(237,176,28)" fg:x="454" fg:w="2"/><text x="36.6574%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (220 samples, 17.64%)</title><rect x="19.1660%" y="453" width="17.6423%" height="15" fill="rgb(214,176,33)" fg:x="239" fg:w="220"/><text x="19.4160%" y="463.50">plugins_core::build::BuildS..</text></g><g><title>plugins_core::build::Build::wearing (28 samples, 2.25%)</title><rect x="34.5630%" y="437" width="2.2454%" height="15" fill="rgb(214,25,12)" fg:x="431" fg:w="28"/><text x="34.8130%" y="447.50">p..</text></g><g><title>plugins_core::tools::set_wearing (3 samples, 0.24%)</title><rect x="36.5678%" y="421" width="0.2406%" height="15" fill="rgb(238,190,20)" fg:x="456" fg:w="3"/><text x="36.8178%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="36.5678%" y="405" width="0.2406%" height="15" fill="rgb(208,11,19)" fg:x="456" fg:w="3"/><text x="36.8178%" y="415.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (3 samples, 0.24%)</title><rect x="36.5678%" y="389" width="0.2406%" height="15" fill="rgb(239,90,4)" fg:x="456" fg:w="3"/><text x="36.8178%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.7281%" y="373" width="0.0802%" height="15" fill="rgb(248,110,3)" fg:x="458" fg:w="1"/><text x="36.9781%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (4 samples, 0.32%)</title><rect x="36.8083%" y="453" width="0.3208%" height="15" fill="rgb(210,41,30)" fg:x="459" fg:w="4"/><text x="37.0583%" y="463.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="36.8885%" y="437" width="0.2406%" height="15" fill="rgb(239,36,8)" fg:x="460" fg:w="3"/><text x="37.1385%" y="447.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="36.9687%" y="421" width="0.1604%" height="15" fill="rgb(237,201,47)" fg:x="461" fg:w="2"/><text x="37.2187%" y="431.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="36.9687%" y="405" width="0.1604%" height="15" fill="rgb(224,140,29)" fg:x="461" fg:w="2"/><text x="37.2187%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="36.9687%" y="389" width="0.1604%" height="15" fill="rgb(231,209,17)" fg:x="461" fg:w="2"/><text x="37.2187%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="37.0489%" y="373" width="0.0802%" height="15" fill="rgb(249,196,1)" fg:x="462" fg:w="1"/><text x="37.2989%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="37.1291%" y="421" width="0.3208%" height="15" fill="rgb(223,207,51)" fg:x="463" fg:w="4"/><text x="37.3791%" y="431.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="37.1291%" y="405" width="0.3208%" height="15" fill="rgb(210,14,40)" fg:x="463" fg:w="4"/><text x="37.3791%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="37.1291%" y="389" width="0.3208%" height="15" fill="rgb(250,20,52)" fg:x="463" fg:w="4"/><text x="37.3791%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="37.1291%" y="373" width="0.3208%" height="15" fill="rgb(241,46,11)" fg:x="463" fg:w="4"/><text x="37.3791%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="37.2093%" y="357" width="0.2406%" height="15" fill="rgb(219,105,5)" fg:x="464" fg:w="3"/><text x="37.4593%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="37.3697%" y="341" width="0.0802%" height="15" fill="rgb(252,77,35)" fg:x="466" fg:w="1"/><text x="37.6197%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="37.3697%" y="325" width="0.0802%" height="15" fill="rgb(243,119,2)" fg:x="466" fg:w="1"/><text x="37.6197%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.3697%" y="309" width="0.0802%" height="15" fill="rgb(206,82,28)" fg:x="466" fg:w="1"/><text x="37.6197%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="37.4499%" y="421" width="0.0802%" height="15" fill="rgb(227,120,12)" fg:x="467" fg:w="1"/><text x="37.6999%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.4499%" y="405" width="0.0802%" height="15" fill="rgb(229,134,41)" fg:x="467" fg:w="1"/><text x="37.6999%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="37.6103%" y="373" width="0.0802%" height="15" fill="rgb(239,96,32)" fg:x="469" fg:w="1"/><text x="37.8603%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6905%" y="229" width="0.0802%" height="15" fill="rgb(225,46,27)" fg:x="470" fg:w="1"/><text x="37.9405%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6905%" y="213" width="0.0802%" height="15" fill="rgb(215,168,2)" fg:x="470" fg:w="1"/><text x="37.9405%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6905%" y="197" width="0.0802%" height="15" fill="rgb(207,170,52)" fg:x="470" fg:w="1"/><text x="37.9405%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.6905%" y="181" width="0.0802%" height="15" fill="rgb(237,198,36)" fg:x="470" fg:w="1"/><text x="37.9405%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.6905%" y="165" width="0.0802%" height="15" fill="rgb(213,27,14)" fg:x="470" fg:w="1"/><text x="37.9405%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.6905%" y="149" width="0.0802%" height="15" fill="rgb(218,77,5)" fg:x="470" fg:w="1"/><text x="37.9405%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6905%" y="133" width="0.0802%" height="15" fill="rgb(230,219,39)" fg:x="470" fg:w="1"/><text x="37.9405%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.6905%" y="357" width="0.1604%" height="15" fill="rgb(245,177,7)" fg:x="470" fg:w="2"/><text x="37.9405%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.6905%" y="341" width="0.1604%" height="15" fill="rgb(246,44,46)" fg:x="470" fg:w="2"/><text x="37.9405%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.6905%" y="325" width="0.1604%" height="15" fill="rgb(207,173,15)" fg:x="470" fg:w="2"/><text x="37.9405%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.6905%" y="309" width="0.1604%" height="15" fill="rgb(245,170,50)" fg:x="470" fg:w="2"/><text x="37.9405%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.6905%" y="293" width="0.1604%" height="15" fill="rgb(233,156,21)" fg:x="470" fg:w="2"/><text x="37.9405%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="37.6905%" y="277" width="0.1604%" height="15" fill="rgb(253,146,27)" fg:x="470" fg:w="2"/><text x="37.9405%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="37.6905%" y="261" width="0.1604%" height="15" fill="rgb(247,66,29)" fg:x="470" fg:w="2"/><text x="37.9405%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="37.6905%" y="245" width="0.1604%" height="15" fill="rgb(218,207,26)" fg:x="470" fg:w="2"/><text x="37.9405%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.7706%" y="229" width="0.0802%" height="15" fill="rgb(234,93,26)" fg:x="471" fg:w="1"/><text x="38.0206%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.7706%" y="213" width="0.0802%" height="15" fill="rgb(214,75,48)" fg:x="471" fg:w="1"/><text x="38.0206%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="37.6103%" y="389" width="0.3208%" height="15" fill="rgb(229,119,22)" fg:x="469" fg:w="4"/><text x="37.8603%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="37.6905%" y="373" width="0.2406%" height="15" fill="rgb(226,153,19)" fg:x="470" fg:w="3"/><text x="37.9405%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.8508%" y="357" width="0.0802%" height="15" fill="rgb(220,204,36)" fg:x="472" fg:w="1"/><text x="38.1008%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.8508%" y="341" width="0.0802%" height="15" fill="rgb(253,181,43)" fg:x="472" fg:w="1"/><text x="38.1008%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.8508%" y="325" width="0.0802%" height="15" fill="rgb(211,41,51)" fg:x="472" fg:w="1"/><text x="38.1008%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.8508%" y="309" width="0.0802%" height="15" fill="rgb(207,215,0)" fg:x="472" fg:w="1"/><text x="38.1008%" y="319.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="37.9310%" y="389" width="0.0802%" height="15" fill="rgb(212,153,10)" fg:x="473" fg:w="1"/><text x="38.1810%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="37.9310%" y="373" width="0.0802%" height="15" fill="rgb(251,171,36)" fg:x="473" fg:w="1"/><text x="38.1810%" y="383.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="37.9310%" y="357" width="0.0802%" height="15" fill="rgb(225,219,41)" fg:x="473" fg:w="1"/><text x="38.1810%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.9310%" y="341" width="0.0802%" height="15" fill="rgb(208,200,1)" fg:x="473" fg:w="1"/><text x="38.1810%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.9310%" y="325" width="0.0802%" height="15" fill="rgb(206,75,47)" fg:x="473" fg:w="1"/><text x="38.1810%" y="335.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="38.0112%" y="341" width="0.1604%" height="15" fill="rgb(248,3,16)" fg:x="474" fg:w="2"/><text x="38.2612%" y="351.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="38.0112%" y="325" width="0.1604%" height="15" fill="rgb(242,157,36)" fg:x="474" fg:w="2"/><text x="38.2612%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="38.0112%" y="309" width="0.1604%" height="15" fill="rgb(215,175,11)" fg:x="474" fg:w="2"/><text x="38.2612%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="38.0112%" y="293" width="0.1604%" height="15" fill="rgb(252,222,22)" fg:x="474" fg:w="2"/><text x="38.2612%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="38.0112%" y="277" width="0.1604%" height="15" fill="rgb(250,121,35)" fg:x="474" fg:w="2"/><text x="38.2612%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="38.0914%" y="261" width="0.0802%" height="15" fill="rgb(233,120,49)" fg:x="475" fg:w="1"/><text x="38.3414%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0914%" y="245" width="0.0802%" height="15" fill="rgb(205,201,14)" fg:x="475" fg:w="1"/><text x="38.3414%" y="255.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="38.0112%" y="373" width="0.2406%" height="15" fill="rgb(219,58,45)" fg:x="474" fg:w="3"/><text x="38.2612%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="38.0112%" y="357" width="0.2406%" height="15" fill="rgb(251,65,12)" fg:x="474" fg:w="3"/><text x="38.2612%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.1716%" y="341" width="0.0802%" height="15" fill="rgb(224,47,31)" fg:x="476" fg:w="1"/><text x="38.4216%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3320%" y="341" width="0.0802%" height="15" fill="rgb(233,74,26)" fg:x="478" fg:w="1"/><text x="38.5820%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3320%" y="325" width="0.0802%" height="15" fill="rgb(231,211,31)" fg:x="478" fg:w="1"/><text x="38.5820%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="38.3320%" y="309" width="0.0802%" height="15" fill="rgb(239,167,5)" fg:x="478" fg:w="1"/><text x="38.5820%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="38.4924%" y="245" width="0.0802%" height="15" fill="rgb(241,85,0)" fg:x="480" fg:w="1"/><text x="38.7424%" y="255.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="38.0112%" y="389" width="0.6415%" height="15" fill="rgb(229,130,21)" fg:x="474" fg:w="8"/><text x="38.2612%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="38.2518%" y="373" width="0.4010%" height="15" fill="rgb(254,84,49)" fg:x="477" fg:w="5"/><text x="38.5018%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="38.2518%" y="357" width="0.4010%" height="15" fill="rgb(235,85,21)" fg:x="477" fg:w="5"/><text x="38.5018%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="38.4122%" y="341" width="0.2406%" height="15" fill="rgb(246,128,52)" fg:x="479" fg:w="3"/><text x="38.6622%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="38.4122%" y="325" width="0.2406%" height="15" fill="rgb(243,114,49)" fg:x="479" fg:w="3"/><text x="38.6622%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="38.4924%" y="309" width="0.1604%" height="15" fill="rgb(240,224,22)" fg:x="480" fg:w="2"/><text x="38.7424%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="38.4924%" y="293" width="0.1604%" height="15" fill="rgb(247,201,52)" fg:x="480" fg:w="2"/><text x="38.7424%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="38.4924%" y="277" width="0.1604%" height="15" fill="rgb(231,70,45)" fg:x="480" fg:w="2"/><text x="38.7424%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="38.4924%" y="261" width="0.1604%" height="15" fill="rgb(217,215,20)" fg:x="480" fg:w="2"/><text x="38.7424%" y="271.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="38.5726%" y="245" width="0.0802%" height="15" fill="rgb(226,170,30)" fg:x="481" fg:w="1"/><text x="38.8226%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.5726%" y="229" width="0.0802%" height="15" fill="rgb(220,190,43)" fg:x="481" fg:w="1"/><text x="38.8226%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="38.6528%" y="373" width="0.0802%" height="15" fill="rgb(218,20,18)" fg:x="482" fg:w="1"/><text x="38.9028%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.6528%" y="357" width="0.0802%" height="15" fill="rgb(245,37,26)" fg:x="482" fg:w="1"/><text x="38.9028%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.6528%" y="341" width="0.0802%" height="15" fill="rgb(241,127,29)" fg:x="482" fg:w="1"/><text x="38.9028%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.6528%" y="325" width="0.0802%" height="15" fill="rgb(241,33,26)" fg:x="482" fg:w="1"/><text x="38.9028%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.6528%" y="309" width="0.0802%" height="15" fill="rgb(220,106,21)" fg:x="482" fg:w="1"/><text x="38.9028%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.6528%" y="293" width="0.0802%" height="15" fill="rgb(225,125,35)" fg:x="482" fg:w="1"/><text x="38.9028%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.6528%" y="277" width="0.0802%" height="15" fill="rgb(248,80,22)" fg:x="482" fg:w="1"/><text x="38.9028%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.7330%" y="357" width="0.0802%" height="15" fill="rgb(231,117,39)" fg:x="483" fg:w="1"/><text x="38.9830%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8132%" y="341" width="0.0802%" height="15" fill="rgb(239,183,16)" fg:x="484" fg:w="1"/><text x="39.0632%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8132%" y="325" width="0.0802%" height="15" fill="rgb(221,61,19)" fg:x="484" fg:w="1"/><text x="39.0632%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8132%" y="309" width="0.0802%" height="15" fill="rgb(239,196,44)" fg:x="484" fg:w="1"/><text x="39.0632%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8132%" y="293" width="0.0802%" height="15" fill="rgb(206,113,19)" fg:x="484" fg:w="1"/><text x="39.0632%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="38.6528%" y="389" width="0.3208%" height="15" fill="rgb(245,114,12)" fg:x="482" fg:w="4"/><text x="38.9028%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="38.7330%" y="373" width="0.2406%" height="15" fill="rgb(247,89,39)" fg:x="483" fg:w="3"/><text x="38.9830%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.8132%" y="357" width="0.1604%" height="15" fill="rgb(213,85,14)" fg:x="484" fg:w="2"/><text x="39.0632%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.8933%" y="341" width="0.0802%" height="15" fill="rgb(249,206,33)" fg:x="485" fg:w="1"/><text x="39.1433%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.8933%" y="325" width="0.0802%" height="15" fill="rgb(235,167,47)" fg:x="485" fg:w="1"/><text x="39.1433%" y="335.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="38.8933%" y="309" width="0.0802%" height="15" fill="rgb(217,177,16)" fg:x="485" fg:w="1"/><text x="39.1433%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.9735%" y="357" width="0.1604%" height="15" fill="rgb(250,228,29)" fg:x="486" fg:w="2"/><text x="39.2235%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.9735%" y="341" width="0.1604%" height="15" fill="rgb(216,195,42)" fg:x="486" fg:w="2"/><text x="39.2235%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.0537%" y="325" width="0.0802%" height="15" fill="rgb(232,192,32)" fg:x="487" fg:w="1"/><text x="39.3037%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0537%" y="309" width="0.0802%" height="15" fill="rgb(211,8,47)" fg:x="487" fg:w="1"/><text x="39.3037%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.0537%" y="293" width="0.0802%" height="15" fill="rgb(251,201,9)" fg:x="487" fg:w="1"/><text x="39.3037%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0537%" y="277" width="0.0802%" height="15" fill="rgb(206,185,47)" fg:x="487" fg:w="1"/><text x="39.3037%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.0537%" y="261" width="0.0802%" height="15" fill="rgb(245,54,32)" fg:x="487" fg:w="1"/><text x="39.3037%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1339%" y="325" width="0.0802%" height="15" fill="rgb(208,1,8)" fg:x="488" fg:w="1"/><text x="39.3839%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1339%" y="309" width="0.0802%" height="15" fill="rgb(228,57,24)" fg:x="488" fg:w="1"/><text x="39.3839%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1339%" y="293" width="0.0802%" height="15" fill="rgb(251,24,8)" fg:x="488" fg:w="1"/><text x="39.3839%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2141%" y="293" width="0.0802%" height="15" fill="rgb(236,196,50)" fg:x="489" fg:w="1"/><text x="39.4641%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (22 samples, 1.76%)</title><rect x="37.6103%" y="405" width="1.7642%" height="15" fill="rgb(246,222,29)" fg:x="469" fg:w="22"/><text x="37.8603%" y="415.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="38.9735%" y="389" width="0.4010%" height="15" fill="rgb(211,34,40)" fg:x="486" fg:w="5"/><text x="39.2235%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="38.9735%" y="373" width="0.4010%" height="15" fill="rgb(210,66,51)" fg:x="486" fg:w="5"/><text x="39.2235%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="39.1339%" y="357" width="0.2406%" height="15" fill="rgb(250,56,43)" fg:x="488" fg:w="3"/><text x="39.3839%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="39.1339%" y="341" width="0.2406%" height="15" fill="rgb(240,111,50)" fg:x="488" fg:w="3"/><text x="39.3839%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.2141%" y="325" width="0.1604%" height="15" fill="rgb(209,117,13)" fg:x="489" fg:w="2"/><text x="39.4641%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="39.2141%" y="309" width="0.1604%" height="15" fill="rgb(232,164,45)" fg:x="489" fg:w="2"/><text x="39.4641%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.2943%" y="293" width="0.0802%" height="15" fill="rgb(205,69,32)" fg:x="490" fg:w="1"/><text x="39.5443%" y="303.50"></text></g><g><title>plugins_core::build::Build::into_entry (25 samples, 2.00%)</title><rect x="37.5301%" y="421" width="2.0048%" height="15" fill="rgb(240,147,45)" fg:x="468" fg:w="25"/><text x="37.7801%" y="431.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="39.3745%" y="405" width="0.1604%" height="15" fill="rgb(221,94,48)" fg:x="491" fg:w="2"/><text x="39.6245%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.3745%" y="389" width="0.1604%" height="15" fill="rgb(249,209,17)" fg:x="491" fg:w="2"/><text x="39.6245%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.3745%" y="373" width="0.1604%" height="15" fill="rgb(228,57,28)" fg:x="491" fg:w="2"/><text x="39.6245%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.3745%" y="357" width="0.1604%" height="15" fill="rgb(250,133,26)" fg:x="491" fg:w="2"/><text x="39.6245%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.3745%" y="341" width="0.1604%" height="15" fill="rgb(254,15,16)" fg:x="491" fg:w="2"/><text x="39.6245%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.3745%" y="325" width="0.1604%" height="15" fill="rgb(209,147,42)" fg:x="491" fg:w="2"/><text x="39.6245%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.4547%" y="309" width="0.0802%" height="15" fill="rgb(208,5,29)" fg:x="492" fg:w="1"/><text x="39.7047%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4547%" y="293" width="0.0802%" height="15" fill="rgb(250,73,31)" fg:x="492" fg:w="1"/><text x="39.7047%" y="303.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="39.4547%" y="277" width="0.0802%" height="15" fill="rgb(238,45,10)" fg:x="492" fg:w="1"/><text x="39.7047%" y="287.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (32 samples, 2.57%)</title><rect x="37.1291%" y="453" width="2.5662%" height="15" fill="rgb(214,104,5)" fg:x="463" fg:w="32"/><text x="37.3791%" y="463.50">pl..</text></g><g><title>plugins_core::build::QuickThing::make (32 samples, 2.57%)</title><rect x="37.1291%" y="437" width="2.5662%" height="15" fill="rgb(242,217,19)" fg:x="463" fg:w="32"/><text x="37.3791%" y="447.50">pl..</text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="39.5349%" y="421" width="0.1604%" height="15" fill="rgb(246,113,27)" fg:x="493" fg:w="2"/><text x="39.7849%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="39.6953%" y="437" width="0.0802%" height="15" fill="rgb(221,34,27)" fg:x="495" fg:w="1"/><text x="39.9453%" y="447.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="39.6953%" y="421" width="0.0802%" height="15" fill="rgb(246,109,6)" fg:x="495" fg:w="1"/><text x="39.9453%" y="431.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="39.6953%" y="405" width="0.0802%" height="15" fill="rgb(217,12,25)" fg:x="495" fg:w="1"/><text x="39.9453%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="39.6953%" y="389" width="0.0802%" height="15" fill="rgb(250,195,5)" fg:x="495" fg:w="1"/><text x="39.9453%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.7755%" y="373" width="0.1604%" height="15" fill="rgb(244,140,45)" fg:x="496" fg:w="2"/><text x="40.0255%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.7755%" y="357" width="0.1604%" height="15" fill="rgb(230,64,14)" fg:x="496" fg:w="2"/><text x="40.0255%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.7755%" y="341" width="0.1604%" height="15" fill="rgb(206,27,27)" fg:x="496" fg:w="2"/><text x="40.0255%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8557%" y="325" width="0.0802%" height="15" fill="rgb(230,14,50)" fg:x="497" fg:w="1"/><text x="40.1057%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8557%" y="309" width="0.0802%" height="15" fill="rgb(237,172,14)" fg:x="497" fg:w="1"/><text x="40.1057%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.8557%" y="293" width="0.0802%" height="15" fill="rgb(209,25,21)" fg:x="497" fg:w="1"/><text x="40.1057%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.8557%" y="277" width="0.0802%" height="15" fill="rgb(248,148,22)" fg:x="497" fg:w="1"/><text x="40.1057%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.8557%" y="261" width="0.0802%" height="15" fill="rgb(234,100,22)" fg:x="497" fg:w="1"/><text x="40.1057%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.8557%" y="245" width="0.0802%" height="15" fill="rgb(210,20,30)" fg:x="497" fg:w="1"/><text x="40.1057%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.8557%" y="229" width="0.0802%" height="15" fill="rgb(232,58,0)" fg:x="497" fg:w="1"/><text x="40.1057%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.8557%" y="213" width="0.0802%" height="15" fill="rgb(221,68,13)" fg:x="497" fg:w="1"/><text x="40.1057%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.8557%" y="197" width="0.0802%" height="15" fill="rgb(231,194,11)" fg:x="497" fg:w="1"/><text x="40.1057%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.8557%" y="181" width="0.0802%" height="15" fill="rgb(235,51,41)" fg:x="497" fg:w="1"/><text x="40.1057%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.8557%" y="165" width="0.0802%" height="15" fill="rgb(240,50,32)" fg:x="497" fg:w="1"/><text x="40.1057%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="39.8557%" y="149" width="0.0802%" height="15" fill="rgb(240,185,36)" fg:x="497" fg:w="1"/><text x="40.1057%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="39.8557%" y="133" width="0.0802%" height="15" fill="rgb(211,168,15)" fg:x="497" fg:w="1"/><text x="40.1057%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.9358%" y="309" width="0.0802%" height="15" fill="rgb(221,70,0)" fg:x="498" fg:w="1"/><text x="40.1858%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.0160%" y="309" width="0.0802%" height="15" fill="rgb(205,21,33)" fg:x="499" fg:w="1"/><text x="40.2660%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.0160%" y="293" width="0.0802%" height="15" fill="rgb(225,106,10)" fg:x="499" fg:w="1"/><text x="40.2660%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.0160%" y="277" width="0.0802%" height="15" fill="rgb(236,200,50)" fg:x="499" fg:w="1"/><text x="40.2660%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="39.7755%" y="405" width="0.4010%" height="15" fill="rgb(249,93,23)" fg:x="496" fg:w="5"/><text x="40.0255%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="39.7755%" y="389" width="0.4010%" height="15" fill="rgb(244,115,35)" fg:x="496" fg:w="5"/><text x="40.0255%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="39.9358%" y="373" width="0.2406%" height="15" fill="rgb(231,129,47)" fg:x="498" fg:w="3"/><text x="40.1858%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.9358%" y="357" width="0.2406%" height="15" fill="rgb(225,160,50)" fg:x="498" fg:w="3"/><text x="40.1858%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="39.9358%" y="341" width="0.2406%" height="15" fill="rgb(218,135,23)" fg:x="498" fg:w="3"/><text x="40.1858%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.9358%" y="325" width="0.2406%" height="15" fill="rgb(227,119,14)" fg:x="498" fg:w="3"/><text x="40.1858%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0962%" y="309" width="0.0802%" height="15" fill="rgb(242,138,13)" fg:x="500" fg:w="1"/><text x="40.3462%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0962%" y="293" width="0.0802%" height="15" fill="rgb(215,11,16)" fg:x="500" fg:w="1"/><text x="40.3462%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.0962%" y="277" width="0.0802%" height="15" fill="rgb(234,170,50)" fg:x="500" fg:w="1"/><text x="40.3462%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0962%" y="261" width="0.0802%" height="15" fill="rgb(233,34,20)" fg:x="500" fg:w="1"/><text x="40.3462%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="40.2566%" y="389" width="0.2406%" height="15" fill="rgb(237,100,45)" fg:x="502" fg:w="3"/><text x="40.5066%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="40.2566%" y="373" width="0.2406%" height="15" fill="rgb(231,184,36)" fg:x="502" fg:w="3"/><text x="40.5066%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="40.2566%" y="357" width="0.2406%" height="15" fill="rgb(252,93,2)" fg:x="502" fg:w="3"/><text x="40.5066%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.3368%" y="341" width="0.1604%" height="15" fill="rgb(248,176,47)" fg:x="503" fg:w="2"/><text x="40.5868%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.3368%" y="325" width="0.1604%" height="15" fill="rgb(249,125,23)" fg:x="503" fg:w="2"/><text x="40.5868%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.4170%" y="309" width="0.0802%" height="15" fill="rgb(239,67,42)" fg:x="504" fg:w="1"/><text x="40.6670%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.4170%" y="293" width="0.0802%" height="15" fill="rgb(244,162,4)" fg:x="504" fg:w="1"/><text x="40.6670%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.4170%" y="277" width="0.0802%" height="15" fill="rgb(214,150,38)" fg:x="504" fg:w="1"/><text x="40.6670%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.4170%" y="261" width="0.0802%" height="15" fill="rgb(228,211,28)" fg:x="504" fg:w="1"/><text x="40.6670%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.4170%" y="245" width="0.0802%" height="15" fill="rgb(212,98,48)" fg:x="504" fg:w="1"/><text x="40.6670%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="40.6576%" y="357" width="0.0802%" height="15" fill="rgb(213,45,13)" fg:x="507" fg:w="1"/><text x="40.9076%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="40.7378%" y="341" width="0.0802%" height="15" fill="rgb(218,35,29)" fg:x="508" fg:w="1"/><text x="40.9878%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="40.1764%" y="405" width="0.7217%" height="15" fill="rgb(244,13,3)" fg:x="501" fg:w="9"/><text x="40.4264%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="40.4972%" y="389" width="0.4010%" height="15" fill="rgb(235,170,19)" fg:x="505" fg:w="5"/><text x="40.7472%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="40.4972%" y="373" width="0.4010%" height="15" fill="rgb(233,193,43)" fg:x="505" fg:w="5"/><text x="40.7472%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="40.7378%" y="357" width="0.1604%" height="15" fill="rgb(228,223,20)" fg:x="508" fg:w="2"/><text x="40.9878%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="40.8180%" y="341" width="0.0802%" height="15" fill="rgb(208,85,54)" fg:x="509" fg:w="1"/><text x="41.0680%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="40.8180%" y="325" width="0.0802%" height="15" fill="rgb(254,14,45)" fg:x="509" fg:w="1"/><text x="41.0680%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="40.8180%" y="309" width="0.0802%" height="15" fill="rgb(247,99,29)" fg:x="509" fg:w="1"/><text x="41.0680%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="40.8180%" y="293" width="0.0802%" height="15" fill="rgb(225,180,54)" fg:x="509" fg:w="1"/><text x="41.0680%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="40.8180%" y="277" width="0.0802%" height="15" fill="rgb(239,88,43)" fg:x="509" fg:w="1"/><text x="41.0680%" y="287.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="40.8180%" y="261" width="0.0802%" height="15" fill="rgb(209,47,11)" fg:x="509" fg:w="1"/><text x="41.0680%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.8180%" y="245" width="0.0802%" height="15" fill="rgb(219,179,23)" fg:x="509" fg:w="1"/><text x="41.0680%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.8180%" y="229" width="0.0802%" height="15" fill="rgb(213,183,19)" fg:x="509" fg:w="1"/><text x="41.0680%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="40.8982%" y="389" width="0.0802%" height="15" fill="rgb(210,11,9)" fg:x="510" fg:w="1"/><text x="41.1482%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="40.8982%" y="373" width="0.0802%" height="15" fill="rgb(239,194,16)" fg:x="510" fg:w="1"/><text x="41.1482%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8982%" y="357" width="0.0802%" height="15" fill="rgb(246,23,50)" fg:x="510" fg:w="1"/><text x="41.1482%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8982%" y="341" width="0.0802%" height="15" fill="rgb(245,10,41)" fg:x="510" fg:w="1"/><text x="41.1482%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8982%" y="325" width="0.0802%" height="15" fill="rgb(228,43,24)" fg:x="510" fg:w="1"/><text x="41.1482%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8982%" y="309" width="0.0802%" height="15" fill="rgb(220,151,0)" fg:x="510" fg:w="1"/><text x="41.1482%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8982%" y="293" width="0.0802%" height="15" fill="rgb(232,219,10)" fg:x="510" fg:w="1"/><text x="41.1482%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.8982%" y="277" width="0.0802%" height="15" fill="rgb(227,217,48)" fg:x="510" fg:w="1"/><text x="41.1482%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.8982%" y="261" width="0.0802%" height="15" fill="rgb(210,66,35)" fg:x="510" fg:w="1"/><text x="41.1482%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.8982%" y="245" width="0.0802%" height="15" fill="rgb(254,6,7)" fg:x="510" fg:w="1"/><text x="41.1482%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.8982%" y="229" width="0.0802%" height="15" fill="rgb(235,222,42)" fg:x="510" fg:w="1"/><text x="41.1482%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.8982%" y="213" width="0.0802%" height="15" fill="rgb(245,126,5)" fg:x="510" fg:w="1"/><text x="41.1482%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.8982%" y="197" width="0.0802%" height="15" fill="rgb(215,73,17)" fg:x="510" fg:w="1"/><text x="41.1482%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.8982%" y="181" width="0.0802%" height="15" fill="rgb(219,198,52)" fg:x="510" fg:w="1"/><text x="41.1482%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.8982%" y="165" width="0.0802%" height="15" fill="rgb(217,159,18)" fg:x="510" fg:w="1"/><text x="41.1482%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.8982%" y="149" width="0.0802%" height="15" fill="rgb(212,177,18)" fg:x="510" fg:w="1"/><text x="41.1482%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8982%" y="133" width="0.0802%" height="15" fill="rgb(241,10,11)" fg:x="510" fg:w="1"/><text x="41.1482%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.36%)</title><rect x="39.7755%" y="421" width="1.3633%" height="15" fill="rgb(232,114,35)" fg:x="496" fg:w="17"/><text x="40.0255%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="40.8982%" y="405" width="0.2406%" height="15" fill="rgb(238,222,8)" fg:x="510" fg:w="3"/><text x="41.1482%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="40.9783%" y="389" width="0.1604%" height="15" fill="rgb(251,153,44)" fg:x="511" fg:w="2"/><text x="41.2283%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.9783%" y="373" width="0.1604%" height="15" fill="rgb(210,140,51)" fg:x="511" fg:w="2"/><text x="41.2283%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.9783%" y="357" width="0.1604%" height="15" fill="rgb(222,63,0)" fg:x="511" fg:w="2"/><text x="41.2283%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.9783%" y="341" width="0.1604%" height="15" fill="rgb(240,18,40)" fg:x="511" fg:w="2"/><text x="41.2283%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.9783%" y="325" width="0.1604%" height="15" fill="rgb(237,88,16)" fg:x="511" fg:w="2"/><text x="41.2283%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0585%" y="309" width="0.0802%" height="15" fill="rgb(251,117,13)" fg:x="512" fg:w="1"/><text x="41.3085%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="41.2189%" y="405" width="0.0802%" height="15" fill="rgb(251,228,8)" fg:x="514" fg:w="1"/><text x="41.4689%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.2189%" y="389" width="0.0802%" height="15" fill="rgb(205,107,49)" fg:x="514" fg:w="1"/><text x="41.4689%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (20 samples, 1.60%)</title><rect x="39.7755%" y="437" width="1.6038%" height="15" fill="rgb(238,72,41)" fg:x="496" fg:w="20"/><text x="40.0255%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="41.1387%" y="421" width="0.2406%" height="15" fill="rgb(248,183,52)" fg:x="513" fg:w="3"/><text x="41.3887%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.2991%" y="405" width="0.0802%" height="15" fill="rgb(215,58,20)" fg:x="515" fg:w="1"/><text x="41.5491%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2991%" y="389" width="0.0802%" height="15" fill="rgb(209,49,13)" fg:x="515" fg:w="1"/><text x="41.5491%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2991%" y="373" width="0.0802%" height="15" fill="rgb(208,113,17)" fg:x="515" fg:w="1"/><text x="41.5491%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2991%" y="357" width="0.0802%" height="15" fill="rgb(208,14,22)" fg:x="515" fg:w="1"/><text x="41.5491%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.2991%" y="341" width="0.0802%" height="15" fill="rgb(222,95,2)" fg:x="515" fg:w="1"/><text x="41.5491%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.2991%" y="325" width="0.0802%" height="15" fill="rgb(253,180,37)" fg:x="515" fg:w="1"/><text x="41.5491%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.2991%" y="309" width="0.0802%" height="15" fill="rgb(250,81,33)" fg:x="515" fg:w="1"/><text x="41.5491%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.2991%" y="293" width="0.0802%" height="15" fill="rgb(251,151,41)" fg:x="515" fg:w="1"/><text x="41.5491%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.2991%" y="277" width="0.0802%" height="15" fill="rgb(210,135,17)" fg:x="515" fg:w="1"/><text x="41.5491%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2991%" y="261" width="0.0802%" height="15" fill="rgb(239,21,29)" fg:x="515" fg:w="1"/><text x="41.5491%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2991%" y="245" width="0.0802%" height="15" fill="rgb(231,215,16)" fg:x="515" fg:w="1"/><text x="41.5491%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.2991%" y="229" width="0.0802%" height="15" fill="rgb(239,151,54)" fg:x="515" fg:w="1"/><text x="41.5491%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.2991%" y="213" width="0.0802%" height="15" fill="rgb(222,122,38)" fg:x="515" fg:w="1"/><text x="41.5491%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.2991%" y="197" width="0.0802%" height="15" fill="rgb(243,128,1)" fg:x="515" fg:w="1"/><text x="41.5491%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.2991%" y="181" width="0.0802%" height="15" fill="rgb(225,74,21)" fg:x="515" fg:w="1"/><text x="41.5491%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.2991%" y="165" width="0.0802%" height="15" fill="rgb(216,210,10)" fg:x="515" fg:w="1"/><text x="41.5491%" y="175.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (434 samples, 34.80%)</title><rect x="6.6560%" y="469" width="34.8035%" height="15" fill="rgb(228,76,19)" fg:x="83" fg:w="434"/><text x="6.9060%" y="479.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prep..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (22 samples, 1.76%)</title><rect x="39.6953%" y="453" width="1.7642%" height="15" fill="rgb(236,80,34)" fg:x="495" fg:w="22"/><text x="39.9453%" y="463.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="41.3793%" y="437" width="0.0802%" height="15" fill="rgb(225,173,23)" fg:x="516" fg:w="1"/><text x="41.6293%" y="447.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="41.3793%" y="421" width="0.0802%" height="15" fill="rgb(253,38,1)" fg:x="516" fg:w="1"/><text x="41.6293%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4595%" y="469" width="0.0802%" height="15" fill="rgb(206,155,35)" fg:x="517" fg:w="1"/><text x="41.7095%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="41.5397%" y="469" width="0.0802%" height="15" fill="rgb(254,27,53)" fg:x="518" fg:w="1"/><text x="41.7897%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="41.5397%" y="453" width="0.0802%" height="15" fill="rgb(225,52,41)" fg:x="518" fg:w="1"/><text x="41.7897%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="41.5397%" y="437" width="0.0802%" height="15" fill="rgb(244,53,18)" fg:x="518" fg:w="1"/><text x="41.7897%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.5397%" y="421" width="0.0802%" height="15" fill="rgb(254,206,48)" fg:x="518" fg:w="1"/><text x="41.7897%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5397%" y="405" width="0.0802%" height="15" fill="rgb(236,182,23)" fg:x="518" fg:w="1"/><text x="41.7897%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="41.6199%" y="453" width="0.1604%" height="15" fill="rgb(236,191,37)" fg:x="519" fg:w="2"/><text x="41.8699%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.7001%" y="437" width="0.0802%" height="15" fill="rgb(245,53,8)" fg:x="520" fg:w="1"/><text x="41.9501%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.7001%" y="421" width="0.0802%" height="15" fill="rgb(245,147,9)" fg:x="520" fg:w="1"/><text x="41.9501%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.7803%" y="453" width="0.0802%" height="15" fill="rgb(218,24,48)" fg:x="521" fg:w="1"/><text x="42.0303%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.7803%" y="437" width="0.0802%" height="15" fill="rgb(254,23,9)" fg:x="521" fg:w="1"/><text x="42.0303%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.7803%" y="421" width="0.0802%" height="15" fill="rgb(244,105,9)" fg:x="521" fg:w="1"/><text x="42.0303%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.7803%" y="405" width="0.0802%" height="15" fill="rgb(212,142,22)" fg:x="521" fg:w="1"/><text x="42.0303%" y="415.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.7803%" y="389" width="0.0802%" height="15" fill="rgb(221,114,49)" fg:x="521" fg:w="1"/><text x="42.0303%" y="399.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="41.7803%" y="373" width="0.0802%" height="15" fill="rgb(223,210,25)" fg:x="521" fg:w="1"/><text x="42.0303%" y="383.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="41.7803%" y="357" width="0.0802%" height="15" fill="rgb(235,162,44)" fg:x="521" fg:w="1"/><text x="42.0303%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.7803%" y="341" width="0.0802%" height="15" fill="rgb(237,65,45)" fg:x="521" fg:w="1"/><text x="42.0303%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="41.8605%" y="421" width="0.0802%" height="15" fill="rgb(208,79,9)" fg:x="522" fg:w="1"/><text x="42.1105%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="41.8605%" y="405" width="0.0802%" height="15" fill="rgb(215,228,8)" fg:x="522" fg:w="1"/><text x="42.1105%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="41.8605%" y="389" width="0.0802%" height="15" fill="rgb(205,185,17)" fg:x="522" fg:w="1"/><text x="42.1105%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8605%" y="373" width="0.0802%" height="15" fill="rgb(213,62,36)" fg:x="522" fg:w="1"/><text x="42.1105%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8605%" y="357" width="0.0802%" height="15" fill="rgb(209,34,9)" fg:x="522" fg:w="1"/><text x="42.1105%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8605%" y="341" width="0.0802%" height="15" fill="rgb(246,151,27)" fg:x="522" fg:w="1"/><text x="42.1105%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8605%" y="325" width="0.0802%" height="15" fill="rgb(218,206,3)" fg:x="522" fg:w="1"/><text x="42.1105%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8605%" y="309" width="0.0802%" height="15" fill="rgb(242,202,1)" fg:x="522" fg:w="1"/><text x="42.1105%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.8605%" y="293" width="0.0802%" height="15" fill="rgb(227,185,16)" fg:x="522" fg:w="1"/><text x="42.1105%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.8605%" y="277" width="0.0802%" height="15" fill="rgb(241,1,14)" fg:x="522" fg:w="1"/><text x="42.1105%" y="287.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="41.9407%" y="373" width="0.0802%" height="15" fill="rgb(212,113,25)" fg:x="523" fg:w="1"/><text x="42.1907%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.9407%" y="357" width="0.0802%" height="15" fill="rgb(247,37,43)" fg:x="523" fg:w="1"/><text x="42.1907%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.9407%" y="341" width="0.0802%" height="15" fill="rgb(226,54,8)" fg:x="523" fg:w="1"/><text x="42.1907%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.9407%" y="325" width="0.0802%" height="15" fill="rgb(251,205,25)" fg:x="523" fg:w="1"/><text x="42.1907%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.9407%" y="309" width="0.0802%" height="15" fill="rgb(246,87,35)" fg:x="523" fg:w="1"/><text x="42.1907%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.9407%" y="293" width="0.0802%" height="15" fill="rgb(251,145,46)" fg:x="523" fg:w="1"/><text x="42.1907%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.0209%" y="357" width="0.0802%" height="15" fill="rgb(210,210,33)" fg:x="524" fg:w="1"/><text x="42.2709%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="42.1010%" y="357" width="0.1604%" height="15" fill="rgb(221,151,11)" fg:x="525" fg:w="2"/><text x="42.3510%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="42.1010%" y="341" width="0.1604%" height="15" fill="rgb(208,160,28)" fg:x="525" fg:w="2"/><text x="42.3510%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="42.1010%" y="325" width="0.1604%" height="15" fill="rgb(243,69,29)" fg:x="525" fg:w="2"/><text x="42.3510%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="42.1010%" y="309" width="0.1604%" height="15" fill="rgb(224,144,4)" fg:x="525" fg:w="2"/><text x="42.3510%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.3416%" y="341" width="0.0802%" height="15" fill="rgb(211,140,38)" fg:x="528" fg:w="1"/><text x="42.5916%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="42.3416%" y="325" width="0.0802%" height="15" fill="rgb(252,189,15)" fg:x="528" fg:w="1"/><text x="42.5916%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="42.3416%" y="309" width="0.0802%" height="15" fill="rgb(251,175,23)" fg:x="528" fg:w="1"/><text x="42.5916%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="42.4218%" y="341" width="0.3208%" height="15" fill="rgb(212,184,11)" fg:x="529" fg:w="4"/><text x="42.6718%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="42.5822%" y="325" width="0.1604%" height="15" fill="rgb(217,205,6)" fg:x="531" fg:w="2"/><text x="42.8322%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="42.6624%" y="309" width="0.0802%" height="15" fill="rgb(235,45,45)" fg:x="532" fg:w="1"/><text x="42.9124%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="42.6624%" y="293" width="0.0802%" height="15" fill="rgb(211,157,53)" fg:x="532" fg:w="1"/><text x="42.9124%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.7426%" y="325" width="0.0802%" height="15" fill="rgb(212,13,8)" fg:x="533" fg:w="1"/><text x="42.9926%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="42.8228%" y="293" width="0.2406%" height="15" fill="rgb(218,80,36)" fg:x="534" fg:w="3"/><text x="43.0728%" y="303.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="42.8228%" y="277" width="0.2406%" height="15" fill="rgb(211,123,43)" fg:x="534" fg:w="3"/><text x="43.0728%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="42.8228%" y="261" width="0.2406%" height="15" fill="rgb(206,165,2)" fg:x="534" fg:w="3"/><text x="43.0728%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="42.8228%" y="245" width="0.2406%" height="15" fill="rgb(248,63,35)" fg:x="534" fg:w="3"/><text x="43.0728%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.9832%" y="229" width="0.0802%" height="15" fill="rgb(219,133,41)" fg:x="536" fg:w="1"/><text x="43.2332%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="43.0634%" y="293" width="0.0802%" height="15" fill="rgb(206,175,46)" fg:x="537" fg:w="1"/><text x="43.3134%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="43.0634%" y="277" width="0.0802%" height="15" fill="rgb(224,41,35)" fg:x="537" fg:w="1"/><text x="43.3134%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="42.8228%" y="325" width="0.4010%" height="15" fill="rgb(226,113,24)" fg:x="534" fg:w="5"/><text x="43.0728%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="42.8228%" y="309" width="0.4010%" height="15" fill="rgb(219,51,41)" fg:x="534" fg:w="5"/><text x="43.0728%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.1435%" y="293" width="0.0802%" height="15" fill="rgb(220,145,47)" fg:x="538" fg:w="1"/><text x="43.3935%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.1435%" y="277" width="0.0802%" height="15" fill="rgb(239,121,47)" fg:x="538" fg:w="1"/><text x="43.3935%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="43.1435%" y="261" width="0.0802%" height="15" fill="rgb(207,60,40)" fg:x="538" fg:w="1"/><text x="43.3935%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="43.2237%" y="325" width="0.4010%" height="15" fill="rgb(224,229,11)" fg:x="539" fg:w="5"/><text x="43.4737%" y="335.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="43.3039%" y="309" width="0.3208%" height="15" fill="rgb(252,28,32)" fg:x="540" fg:w="4"/><text x="43.5539%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="43.3841%" y="293" width="0.2406%" height="15" fill="rgb(207,52,49)" fg:x="541" fg:w="3"/><text x="43.6341%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.4643%" y="277" width="0.1604%" height="15" fill="rgb(243,51,50)" fg:x="542" fg:w="2"/><text x="43.7143%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.5445%" y="261" width="0.0802%" height="15" fill="rgb(212,92,21)" fg:x="543" fg:w="1"/><text x="43.7945%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.5445%" y="245" width="0.0802%" height="15" fill="rgb(230,183,50)" fg:x="543" fg:w="1"/><text x="43.7945%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="43.5445%" y="229" width="0.0802%" height="15" fill="rgb(225,48,9)" fg:x="543" fg:w="1"/><text x="43.7945%" y="239.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="43.6247%" y="309" width="0.2406%" height="15" fill="rgb(254,44,4)" fg:x="544" fg:w="3"/><text x="43.8747%" y="319.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="43.6247%" y="293" width="0.2406%" height="15" fill="rgb(252,128,37)" fg:x="544" fg:w="3"/><text x="43.8747%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="43.7049%" y="277" width="0.1604%" height="15" fill="rgb(227,178,8)" fg:x="545" fg:w="2"/><text x="43.9549%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.7851%" y="261" width="0.0802%" height="15" fill="rgb(205,206,32)" fg:x="546" fg:w="1"/><text x="44.0351%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="43.8653%" y="293" width="0.0802%" height="15" fill="rgb(220,218,22)" fg:x="547" fg:w="1"/><text x="44.1153%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.8653%" y="277" width="0.0802%" height="15" fill="rgb(236,41,28)" fg:x="547" fg:w="1"/><text x="44.1153%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.8653%" y="261" width="0.0802%" height="15" fill="rgb(219,37,7)" fg:x="547" fg:w="1"/><text x="44.1153%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="43.9455%" y="293" width="0.1604%" height="15" fill="rgb(206,160,15)" fg:x="548" fg:w="2"/><text x="44.1955%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="44.0257%" y="277" width="0.0802%" height="15" fill="rgb(208,82,21)" fg:x="549" fg:w="1"/><text x="44.2757%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.0257%" y="261" width="0.0802%" height="15" fill="rgb(226,130,25)" fg:x="549" fg:w="1"/><text x="44.2757%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.0257%" y="245" width="0.0802%" height="15" fill="rgb(212,72,24)" fg:x="549" fg:w="1"/><text x="44.2757%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="43.8653%" y="309" width="0.4010%" height="15" fill="rgb(206,28,16)" fg:x="547" fg:w="5"/><text x="44.1153%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="44.1059%" y="293" width="0.1604%" height="15" fill="rgb(249,41,5)" fg:x="550" fg:w="2"/><text x="44.3559%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="44.1059%" y="277" width="0.1604%" height="15" fill="rgb(233,96,48)" fg:x="550" fg:w="2"/><text x="44.3559%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.1860%" y="261" width="0.0802%" height="15" fill="rgb(240,198,11)" fg:x="551" fg:w="1"/><text x="44.4360%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="43.6247%" y="325" width="0.8019%" height="15" fill="rgb(209,175,35)" fg:x="544" fg:w="10"/><text x="43.8747%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="44.2662%" y="309" width="0.1604%" height="15" fill="rgb(214,40,51)" fg:x="552" fg:w="2"/><text x="44.5162%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.3464%" y="293" width="0.0802%" height="15" fill="rgb(252,56,4)" fg:x="553" fg:w="1"/><text x="44.5964%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="44.3464%" y="277" width="0.0802%" height="15" fill="rgb(219,131,5)" fg:x="553" fg:w="1"/><text x="44.5964%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.00%)</title><rect x="42.7426%" y="341" width="2.0048%" height="15" fill="rgb(223,67,53)" fg:x="533" fg:w="25"/><text x="42.9926%" y="351.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="44.4266%" y="325" width="0.3208%" height="15" fill="rgb(227,154,8)" fg:x="554" fg:w="4"/><text x="44.6766%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.6672%" y="309" width="0.0802%" height="15" fill="rgb(216,174,51)" fg:x="557" fg:w="1"/><text x="44.9172%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.6672%" y="293" width="0.0802%" height="15" fill="rgb(239,60,34)" fg:x="557" fg:w="1"/><text x="44.9172%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.89%)</title><rect x="42.2614%" y="357" width="2.8869%" height="15" fill="rgb(236,165,48)" fg:x="527" fg:w="36"/><text x="42.5114%" y="367.50">se..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="44.7474%" y="341" width="0.4010%" height="15" fill="rgb(210,37,26)" fg:x="558" fg:w="5"/><text x="44.9974%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="44.9078%" y="325" width="0.2406%" height="15" fill="rgb(211,3,17)" fg:x="560" fg:w="3"/><text x="45.1578%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.0682%" y="309" width="0.0802%" height="15" fill="rgb(234,88,49)" fg:x="562" fg:w="1"/><text x="45.3182%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.0682%" y="293" width="0.0802%" height="15" fill="rgb(233,40,17)" fg:x="562" fg:w="1"/><text x="45.3182%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.0682%" y="277" width="0.0802%" height="15" fill="rgb(235,127,31)" fg:x="562" fg:w="1"/><text x="45.3182%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="45.0682%" y="261" width="0.0802%" height="15" fill="rgb(248,167,17)" fg:x="562" fg:w="1"/><text x="45.3182%" y="271.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (40 samples, 3.21%)</title><rect x="42.0209%" y="373" width="3.2077%" height="15" fill="rgb(218,179,8)" fg:x="524" fg:w="40"/><text x="42.2709%" y="383.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.1484%" y="357" width="0.0802%" height="15" fill="rgb(216,92,14)" fg:x="563" fg:w="1"/><text x="45.3984%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.1484%" y="341" width="0.0802%" height="15" fill="rgb(221,198,46)" fg:x="563" fg:w="1"/><text x="45.3984%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="45.1484%" y="325" width="0.0802%" height="15" fill="rgb(244,7,25)" fg:x="563" fg:w="1"/><text x="45.3984%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.2285%" y="341" width="0.1604%" height="15" fill="rgb(233,75,6)" fg:x="564" fg:w="2"/><text x="45.4785%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="45.3889%" y="341" width="0.1604%" height="15" fill="rgb(240,189,41)" fg:x="566" fg:w="2"/><text x="45.6389%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="45.5493%" y="325" width="0.2406%" height="15" fill="rgb(237,157,21)" fg:x="568" fg:w="3"/><text x="45.7993%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.7097%" y="309" width="0.0802%" height="15" fill="rgb(210,136,49)" fg:x="570" fg:w="1"/><text x="45.9597%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.9503%" y="309" width="0.1604%" height="15" fill="rgb(210,68,29)" fg:x="573" fg:w="2"/><text x="46.2003%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.1107%" y="309" width="0.0802%" height="15" fill="rgb(247,207,20)" fg:x="575" fg:w="1"/><text x="46.3607%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2711%" y="293" width="0.0802%" height="15" fill="rgb(224,73,48)" fg:x="577" fg:w="1"/><text x="46.5211%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.5116%" y="277" width="0.0802%" height="15" fill="rgb(215,136,47)" fg:x="580" fg:w="1"/><text x="46.7616%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.44%)</title><rect x="45.2285%" y="373" width="1.4435%" height="15" fill="rgb(232,222,16)" fg:x="564" fg:w="18"/><text x="45.4785%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.44%)</title><rect x="45.2285%" y="357" width="1.4435%" height="15" fill="rgb(249,202,47)" fg:x="564" fg:w="18"/><text x="45.4785%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="45.5493%" y="341" width="1.1227%" height="15" fill="rgb(236,56,8)" fg:x="568" fg:w="14"/><text x="45.7993%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="45.7899%" y="325" width="0.8821%" height="15" fill="rgb(222,6,3)" fg:x="571" fg:w="11"/><text x="46.0399%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="46.1909%" y="309" width="0.4812%" height="15" fill="rgb(254,222,28)" fg:x="576" fg:w="6"/><text x="46.4409%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="46.3512%" y="293" width="0.3208%" height="15" fill="rgb(219,57,23)" fg:x="578" fg:w="4"/><text x="46.6012%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.5918%" y="277" width="0.0802%" height="15" fill="rgb(251,106,48)" fg:x="581" fg:w="1"/><text x="46.8418%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.5918%" y="261" width="0.0802%" height="15" fill="rgb(242,2,23)" fg:x="581" fg:w="1"/><text x="46.8418%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.6720%" y="341" width="0.0802%" height="15" fill="rgb(212,109,31)" fg:x="582" fg:w="1"/><text x="46.9220%" y="351.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="46.7522%" y="309" width="0.2406%" height="15" fill="rgb(241,9,22)" fg:x="583" fg:w="3"/><text x="47.0022%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.9928%" y="309" width="0.0802%" height="15" fill="rgb(209,64,27)" fg:x="586" fg:w="1"/><text x="47.2428%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9928%" y="293" width="0.0802%" height="15" fill="rgb(248,13,44)" fg:x="586" fg:w="1"/><text x="47.2428%" y="303.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="47.0730%" y="293" width="0.2406%" height="15" fill="rgb(213,86,6)" fg:x="587" fg:w="3"/><text x="47.3230%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.3136%" y="293" width="0.0802%" height="15" fill="rgb(247,11,18)" fg:x="590" fg:w="1"/><text x="47.5636%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.4739%" y="277" width="0.0802%" height="15" fill="rgb(252,31,11)" fg:x="592" fg:w="1"/><text x="47.7239%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="47.5541%" y="277" width="0.2406%" height="15" fill="rgb(215,63,51)" fg:x="593" fg:w="3"/><text x="47.8041%" y="287.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.7947%" y="261" width="0.1604%" height="15" fill="rgb(222,180,4)" fg:x="596" fg:w="2"/><text x="48.0447%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="47.9551%" y="261" width="0.0802%" height="15" fill="rgb(233,4,23)" fg:x="598" fg:w="1"/><text x="48.2051%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="47.9551%" y="245" width="0.0802%" height="15" fill="rgb(230,116,22)" fg:x="598" fg:w="1"/><text x="48.2051%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.0353%" y="245" width="0.0802%" height="15" fill="rgb(222,20,14)" fg:x="599" fg:w="1"/><text x="48.2853%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.52%)</title><rect x="46.7522%" y="341" width="1.5237%" height="15" fill="rgb(210,176,43)" fg:x="583" fg:w="19"/><text x="47.0022%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.52%)</title><rect x="46.7522%" y="325" width="1.5237%" height="15" fill="rgb(219,67,32)" fg:x="583" fg:w="19"/><text x="47.0022%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="47.0730%" y="309" width="1.2029%" height="15" fill="rgb(228,91,39)" fg:x="587" fg:w="15"/><text x="47.3230%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="47.3937%" y="293" width="0.8821%" height="15" fill="rgb(254,63,14)" fg:x="591" fg:w="11"/><text x="47.6437%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="47.7947%" y="277" width="0.4812%" height="15" fill="rgb(216,171,39)" fg:x="596" fg:w="6"/><text x="48.0447%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="48.0353%" y="261" width="0.2406%" height="15" fill="rgb(248,68,25)" fg:x="599" fg:w="3"/><text x="48.2853%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="48.1155%" y="245" width="0.1604%" height="15" fill="rgb(239,63,16)" fg:x="600" fg:w="2"/><text x="48.3655%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.1957%" y="229" width="0.0802%" height="15" fill="rgb(225,111,43)" fg:x="601" fg:w="1"/><text x="48.4457%" y="239.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="48.5164%" y="277" width="0.0802%" height="15" fill="rgb(246,165,17)" fg:x="605" fg:w="1"/><text x="48.7664%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="48.5164%" y="261" width="0.0802%" height="15" fill="rgb(208,124,1)" fg:x="605" fg:w="1"/><text x="48.7664%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.5164%" y="245" width="0.0802%" height="15" fill="rgb(234,147,33)" fg:x="605" fg:w="1"/><text x="48.7664%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="48.5966%" y="277" width="0.0802%" height="15" fill="rgb(240,86,30)" fg:x="606" fg:w="1"/><text x="48.8466%" y="287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="48.5966%" y="261" width="0.0802%" height="15" fill="rgb(237,34,51)" fg:x="606" fg:w="1"/><text x="48.8466%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="48.3561%" y="293" width="0.4812%" height="15" fill="rgb(232,131,41)" fg:x="603" fg:w="6"/><text x="48.6061%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="48.6768%" y="277" width="0.1604%" height="15" fill="rgb(227,129,53)" fg:x="607" fg:w="2"/><text x="48.9268%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="48.2759%" y="325" width="0.6415%" height="15" fill="rgb(230,90,35)" fg:x="602" fg:w="8"/><text x="48.5259%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="48.3561%" y="309" width="0.5613%" height="15" fill="rgb(248,88,27)" fg:x="603" fg:w="7"/><text x="48.6061%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.8372%" y="293" width="0.0802%" height="15" fill="rgb(223,18,17)" fg:x="609" fg:w="1"/><text x="49.0872%" y="303.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (29 samples, 2.33%)</title><rect x="46.6720%" y="357" width="2.3256%" height="15" fill="rgb(241,11,10)" fg:x="582" fg:w="29"/><text x="46.9220%" y="367.50">&lt;..</text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="48.2759%" y="341" width="0.7217%" height="15" fill="rgb(232,111,52)" fg:x="602" fg:w="9"/><text x="48.5259%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="48.9174%" y="325" width="0.0802%" height="15" fill="rgb(228,67,8)" fg:x="610" fg:w="1"/><text x="49.1674%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="48.9976%" y="325" width="0.4010%" height="15" fill="rgb(251,168,31)" fg:x="611" fg:w="5"/><text x="49.2476%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="49.1580%" y="309" width="0.2406%" height="15" fill="rgb(249,164,11)" fg:x="613" fg:w="3"/><text x="49.4080%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.3184%" y="293" width="0.0802%" height="15" fill="rgb(239,81,9)" fg:x="615" fg:w="1"/><text x="49.5684%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="49.4787%" y="309" width="0.0802%" height="15" fill="rgb(222,145,38)" fg:x="617" fg:w="1"/><text x="49.7287%" y="319.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="49.3986%" y="325" width="0.3208%" height="15" fill="rgb(238,80,54)" fg:x="616" fg:w="4"/><text x="49.6486%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="49.5589%" y="309" width="0.1604%" height="15" fill="rgb(237,116,16)" fg:x="618" fg:w="2"/><text x="49.8089%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (2 samples, 0.16%)</title><rect x="49.5589%" y="293" width="0.1604%" height="15" fill="rgb(218,135,19)" fg:x="618" fg:w="2"/><text x="49.8089%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.7193%" y="293" width="0.0802%" height="15" fill="rgb(216,207,44)" fg:x="620" fg:w="1"/><text x="49.9693%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="49.7193%" y="325" width="0.3208%" height="15" fill="rgb(226,152,40)" fg:x="620" fg:w="4"/><text x="49.9693%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="49.7193%" y="309" width="0.3208%" height="15" fill="rgb(219,98,35)" fg:x="620" fg:w="4"/><text x="49.9693%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="49.7995%" y="293" width="0.2406%" height="15" fill="rgb(222,136,46)" fg:x="621" fg:w="3"/><text x="50.0495%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="50.6014%" y="293" width="0.0802%" height="15" fill="rgb(222,71,8)" fg:x="631" fg:w="1"/><text x="50.8514%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.6816%" y="277" width="0.0802%" height="15" fill="rgb(209,89,53)" fg:x="632" fg:w="1"/><text x="50.9316%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.6816%" y="261" width="0.0802%" height="15" fill="rgb(210,97,51)" fg:x="632" fg:w="1"/><text x="50.9316%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="50.7618%" y="277" width="0.0802%" height="15" fill="rgb(248,65,21)" fg:x="633" fg:w="1"/><text x="51.0118%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="50.7618%" y="261" width="0.0802%" height="15" fill="rgb(222,5,31)" fg:x="633" fg:w="1"/><text x="51.0118%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="50.7618%" y="245" width="0.0802%" height="15" fill="rgb(241,16,30)" fg:x="633" fg:w="1"/><text x="51.0118%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="51.0024%" y="261" width="0.0802%" height="15" fill="rgb(215,86,30)" fg:x="636" fg:w="1"/><text x="51.2524%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.1628%" y="245" width="0.1604%" height="15" fill="rgb(235,26,44)" fg:x="638" fg:w="2"/><text x="51.4128%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.1628%" y="229" width="0.1604%" height="15" fill="rgb(228,147,14)" fg:x="638" fg:w="2"/><text x="51.4128%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.9647%" y="181" width="0.1604%" height="15" fill="rgb(253,38,50)" fg:x="648" fg:w="2"/><text x="52.2147%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="51.7241%" y="213" width="0.4812%" height="15" fill="rgb(251,151,16)" fg:x="645" fg:w="6"/><text x="51.9741%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="51.8043%" y="197" width="0.4010%" height="15" fill="rgb(224,64,19)" fg:x="646" fg:w="5"/><text x="52.0543%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.1251%" y="181" width="0.0802%" height="15" fill="rgb(235,214,47)" fg:x="650" fg:w="1"/><text x="52.3751%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="51.0826%" y="261" width="1.2831%" height="15" fill="rgb(218,15,19)" fg:x="637" fg:w="16"/><text x="51.3326%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="51.3232%" y="245" width="1.0425%" height="15" fill="rgb(247,209,3)" fg:x="640" fg:w="13"/><text x="51.5732%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="51.5638%" y="229" width="0.8019%" height="15" fill="rgb(217,29,2)" fg:x="643" fg:w="10"/><text x="51.8138%" y="239.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="52.2053%" y="213" width="0.1604%" height="15" fill="rgb(234,9,9)" fg:x="651" fg:w="2"/><text x="52.4553%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2855%" y="197" width="0.0802%" height="15" fill="rgb(207,43,14)" fg:x="652" fg:w="1"/><text x="52.5355%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 1.76%)</title><rect x="50.6816%" y="293" width="1.7642%" height="15" fill="rgb(216,219,36)" fg:x="632" fg:w="22"/><text x="50.9316%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.60%)</title><rect x="50.8420%" y="277" width="1.6038%" height="15" fill="rgb(238,12,26)" fg:x="634" fg:w="20"/><text x="51.0920%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3657%" y="261" width="0.0802%" height="15" fill="rgb(226,67,30)" fg:x="653" fg:w="1"/><text x="52.6157%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.41%)</title><rect x="50.2005%" y="309" width="2.4058%" height="15" fill="rgb(229,154,7)" fg:x="626" fg:w="30"/><text x="50.4505%" y="319.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="52.4459%" y="293" width="0.1604%" height="15" fill="rgb(249,90,18)" fg:x="654" fg:w="2"/><text x="52.6959%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5261%" y="277" width="0.0802%" height="15" fill="rgb(223,53,15)" fg:x="655" fg:w="1"/><text x="52.7761%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.6063%" y="309" width="0.1604%" height="15" fill="rgb(253,86,38)" fg:x="656" fg:w="2"/><text x="52.8563%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7666%" y="277" width="0.0802%" height="15" fill="rgb(222,198,9)" fg:x="658" fg:w="1"/><text x="53.0166%" y="287.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (49 samples, 3.93%)</title><rect x="48.9976%" y="357" width="3.9294%" height="15" fill="rgb(240,146,25)" fg:x="611" fg:w="49"/><text x="49.2476%" y="367.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (49 samples, 3.93%)</title><rect x="48.9976%" y="341" width="3.9294%" height="15" fill="rgb(225,38,10)" fg:x="611" fg:w="49"/><text x="49.2476%" y="351.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.89%)</title><rect x="50.0401%" y="325" width="2.8869%" height="15" fill="rgb(246,93,4)" fg:x="624" fg:w="36"/><text x="50.2901%" y="335.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.7666%" y="309" width="0.1604%" height="15" fill="rgb(222,55,18)" fg:x="658" fg:w="2"/><text x="53.0166%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.7666%" y="293" width="0.1604%" height="15" fill="rgb(233,137,48)" fg:x="658" fg:w="2"/><text x="53.0166%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.8468%" y="277" width="0.0802%" height="15" fill="rgb(214,8,54)" fg:x="659" fg:w="1"/><text x="53.0968%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.2478%" y="277" width="0.0802%" height="15" fill="rgb(206,75,4)" fg:x="664" fg:w="1"/><text x="53.4978%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.6488%" y="181" width="0.0802%" height="15" fill="rgb(238,171,14)" fg:x="669" fg:w="1"/><text x="53.8988%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6488%" y="165" width="0.0802%" height="15" fill="rgb(233,70,41)" fg:x="669" fg:w="1"/><text x="53.8988%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="53.6488%" y="213" width="0.2406%" height="15" fill="rgb(214,68,36)" fg:x="669" fg:w="3"/><text x="53.8988%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="53.6488%" y="197" width="0.2406%" height="15" fill="rgb(223,29,5)" fg:x="669" fg:w="3"/><text x="53.8988%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="53.7289%" y="181" width="0.1604%" height="15" fill="rgb(251,22,40)" fg:x="670" fg:w="2"/><text x="53.9789%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.8091%" y="165" width="0.0802%" height="15" fill="rgb(210,67,41)" fg:x="671" fg:w="1"/><text x="54.0591%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.2101%" y="181" width="0.0802%" height="15" fill="rgb(225,177,31)" fg:x="676" fg:w="1"/><text x="54.4601%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.3705%" y="165" width="0.0802%" height="15" fill="rgb(221,229,11)" fg:x="678" fg:w="1"/><text x="54.6205%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.4507%" y="165" width="0.0802%" height="15" fill="rgb(247,172,52)" fg:x="679" fg:w="1"/><text x="54.7007%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="54.2903%" y="181" width="0.4010%" height="15" fill="rgb(212,73,19)" fg:x="677" fg:w="5"/><text x="54.5403%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.5309%" y="165" width="0.1604%" height="15" fill="rgb(244,7,46)" fg:x="680" fg:w="2"/><text x="54.7809%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="54.1299%" y="197" width="0.6415%" height="15" fill="rgb(230,113,20)" fg:x="675" fg:w="8"/><text x="54.3799%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.6913%" y="181" width="0.0802%" height="15" fill="rgb(209,97,30)" fg:x="682" fg:w="1"/><text x="54.9413%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.28%)</title><rect x="53.5686%" y="229" width="1.2831%" height="15" fill="rgb(243,89,12)" fg:x="668" fg:w="16"/><text x="53.8186%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="53.8893%" y="213" width="0.9623%" height="15" fill="rgb(228,32,19)" fg:x="672" fg:w="12"/><text x="54.1393%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.7715%" y="197" width="0.0802%" height="15" fill="rgb(248,25,17)" fg:x="683" fg:w="1"/><text x="55.0215%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.9318%" y="213" width="0.0802%" height="15" fill="rgb(232,161,29)" fg:x="685" fg:w="1"/><text x="55.1818%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="54.8516%" y="229" width="0.2406%" height="15" fill="rgb(251,192,11)" fg:x="684" fg:w="3"/><text x="55.1016%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0120%" y="213" width="0.0802%" height="15" fill="rgb(240,47,32)" fg:x="686" fg:w="1"/><text x="55.2620%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.60%)</title><rect x="53.5686%" y="245" width="1.6038%" height="15" fill="rgb(250,16,45)" fg:x="668" fg:w="20"/><text x="53.8186%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0922%" y="229" width="0.0802%" height="15" fill="rgb(227,217,42)" fg:x="687" fg:w="1"/><text x="55.3422%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0922%" y="213" width="0.0802%" height="15" fill="rgb(206,82,54)" fg:x="687" fg:w="1"/><text x="55.3422%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0922%" y="197" width="0.0802%" height="15" fill="rgb(243,145,25)" fg:x="687" fg:w="1"/><text x="55.3422%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.84%)</title><rect x="53.4884%" y="261" width="1.8444%" height="15" fill="rgb(207,166,24)" fg:x="667" fg:w="23"/><text x="53.7384%" y="271.50">&lt;..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.1724%" y="245" width="0.1604%" height="15" fill="rgb(215,191,44)" fg:x="688" fg:w="2"/><text x="55.4224%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="55.4130%" y="245" width="0.1604%" height="15" fill="rgb(234,218,51)" fg:x="691" fg:w="2"/><text x="55.6630%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="55.3328%" y="261" width="0.3208%" height="15" fill="rgb(245,133,21)" fg:x="690" fg:w="4"/><text x="55.5828%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5734%" y="245" width="0.0802%" height="15" fill="rgb(230,136,45)" fg:x="693" fg:w="1"/><text x="55.8234%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (33 samples, 2.65%)</title><rect x="53.2478%" y="293" width="2.6464%" height="15" fill="rgb(247,63,43)" fg:x="664" fg:w="33"/><text x="53.4978%" y="303.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.57%)</title><rect x="53.3280%" y="277" width="2.5662%" height="15" fill="rgb(254,223,31)" fg:x="665" fg:w="32"/><text x="53.5780%" y="287.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.6536%" y="261" width="0.2406%" height="15" fill="rgb(236,185,0)" fg:x="694" fg:w="3"/><text x="55.9036%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.7338%" y="245" width="0.1604%" height="15" fill="rgb(231,139,46)" fg:x="695" fg:w="2"/><text x="55.9838%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.7338%" y="229" width="0.1604%" height="15" fill="rgb(236,147,31)" fg:x="695" fg:w="2"/><text x="55.9838%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="55.8941%" y="293" width="0.2406%" height="15" fill="rgb(225,222,22)" fg:x="697" fg:w="3"/><text x="56.1441%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.9743%" y="277" width="0.1604%" height="15" fill="rgb(225,193,14)" fg:x="698" fg:w="2"/><text x="56.2243%" y="287.50"></text></g><g><title>engine::session::Session::close (185 samples, 14.84%)</title><rect x="41.6199%" y="469" width="14.8356%" height="15" fill="rgb(253,193,46)" fg:x="519" fg:w="185"/><text x="41.8699%" y="479.50">engine::session::Sessio..</text></g><g><title>engine::session::state::State::close (182 samples, 14.60%)</title><rect x="41.8605%" y="453" width="14.5950%" height="15" fill="rgb(218,187,39)" fg:x="522" fg:w="182"/><text x="42.1105%" y="463.50">engine::session::state..</text></g><g><title>engine::session::state::State::flush_entities (182 samples, 14.60%)</title><rect x="41.8605%" y="437" width="14.5950%" height="15" fill="rgb(227,162,48)" fg:x="522" fg:w="182"/><text x="42.1105%" y="447.50">engine::session::state..</text></g><g><title>core::iter::adapters::try_process (181 samples, 14.51%)</title><rect x="41.9407%" y="421" width="14.5148%" height="15" fill="rgb(222,25,5)" fg:x="523" fg:w="181"/><text x="42.1907%" y="431.50">core::iter::adapters::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (181 samples, 14.51%)</title><rect x="41.9407%" y="405" width="14.5148%" height="15" fill="rgb(211,205,16)" fg:x="523" fg:w="181"/><text x="42.1907%" y="415.50">&lt;alloc::vec::Vec&lt;T&gt; as..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (181 samples, 14.51%)</title><rect x="41.9407%" y="389" width="14.5148%" height="15" fill="rgb(244,191,2)" fg:x="523" fg:w="181"/><text x="42.1907%" y="399.50">engine::session::state..</text></g><g><title>kernel::model::any_entity_changes (122 samples, 9.78%)</title><rect x="46.6720%" y="373" width="9.7835%" height="15" fill="rgb(248,159,12)" fg:x="582" fg:w="122"/><text x="46.9220%" y="383.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (44 samples, 3.53%)</title><rect x="52.9270%" y="357" width="3.5285%" height="15" fill="rgb(235,204,17)" fg:x="660" fg:w="44"/><text x="53.1770%" y="367.50">ser..</text></g><g><title>serde_json::de::from_trait (44 samples, 3.53%)</title><rect x="52.9270%" y="341" width="3.5285%" height="15" fill="rgb(240,21,27)" fg:x="660" fg:w="44"/><text x="53.1770%" y="351.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (43 samples, 3.45%)</title><rect x="53.0072%" y="325" width="3.4483%" height="15" fill="rgb(224,170,31)" fg:x="661" fg:w="43"/><text x="53.2572%" y="335.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (42 samples, 3.37%)</title><rect x="53.0874%" y="309" width="3.3681%" height="15" fill="rgb(223,145,32)" fg:x="662" fg:w="42"/><text x="53.3374%" y="319.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="56.1347%" y="293" width="0.3208%" height="15" fill="rgb(243,100,5)" fg:x="700" fg:w="4"/><text x="56.3847%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3753%" y="277" width="0.0802%" height="15" fill="rgb(242,131,51)" fg:x="703" fg:w="1"/><text x="56.6253%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.3753%" y="261" width="0.0802%" height="15" fill="rgb(223,156,46)" fg:x="703" fg:w="1"/><text x="56.6253%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4555%" y="405" width="0.0802%" height="15" fill="rgb(215,10,40)" fg:x="704" fg:w="1"/><text x="56.7055%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5357%" y="373" width="0.0802%" height="15" fill="rgb(233,155,0)" fg:x="705" fg:w="1"/><text x="56.7857%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5357%" y="357" width="0.0802%" height="15" fill="rgb(247,78,6)" fg:x="705" fg:w="1"/><text x="56.7857%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.5357%" y="341" width="0.0802%" height="15" fill="rgb(237,217,21)" fg:x="705" fg:w="1"/><text x="56.7857%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.5357%" y="325" width="0.0802%" height="15" fill="rgb(212,1,21)" fg:x="705" fg:w="1"/><text x="56.7857%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.5357%" y="309" width="0.0802%" height="15" fill="rgb(213,7,14)" fg:x="705" fg:w="1"/><text x="56.7857%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5357%" y="293" width="0.0802%" height="15" fill="rgb(225,84,14)" fg:x="705" fg:w="1"/><text x="56.7857%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5357%" y="277" width="0.0802%" height="15" fill="rgb(239,216,39)" fg:x="705" fg:w="1"/><text x="56.7857%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.5357%" y="261" width="0.0802%" height="15" fill="rgb(253,29,23)" fg:x="705" fg:w="1"/><text x="56.7857%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.5357%" y="245" width="0.0802%" height="15" fill="rgb(220,167,50)" fg:x="705" fg:w="1"/><text x="56.7857%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.5357%" y="229" width="0.0802%" height="15" fill="rgb(232,141,1)" fg:x="705" fg:w="1"/><text x="56.7857%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.5357%" y="213" width="0.0802%" height="15" fill="rgb(222,210,1)" fg:x="705" fg:w="1"/><text x="56.7857%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5357%" y="197" width="0.0802%" height="15" fill="rgb(219,84,10)" fg:x="705" fg:w="1"/><text x="56.7857%" y="207.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="56.6961%" y="309" width="0.0802%" height="15" fill="rgb(245,188,6)" fg:x="707" fg:w="1"/><text x="56.9461%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="56.7763%" y="277" width="0.1604%" height="15" fill="rgb(252,139,39)" fg:x="708" fg:w="2"/><text x="57.0263%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.9366%" y="261" width="0.0802%" height="15" fill="rgb(218,42,26)" fg:x="710" fg:w="1"/><text x="57.1866%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.9366%" y="245" width="0.0802%" height="15" fill="rgb(237,226,51)" fg:x="710" fg:w="1"/><text x="57.1866%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.9366%" y="229" width="0.0802%" height="15" fill="rgb(246,15,17)" fg:x="710" fg:w="1"/><text x="57.1866%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="56.7763%" y="293" width="0.4010%" height="15" fill="rgb(228,170,42)" fg:x="708" fg:w="5"/><text x="57.0263%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="56.9366%" y="277" width="0.2406%" height="15" fill="rgb(248,118,53)" fg:x="710" fg:w="3"/><text x="57.1866%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.0168%" y="261" width="0.1604%" height="15" fill="rgb(207,30,10)" fg:x="711" fg:w="2"/><text x="57.2668%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.0168%" y="245" width="0.1604%" height="15" fill="rgb(217,104,38)" fg:x="711" fg:w="2"/><text x="57.2668%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="57.0168%" y="229" width="0.1604%" height="15" fill="rgb(211,165,26)" fg:x="711" fg:w="2"/><text x="57.2668%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.0168%" y="213" width="0.1604%" height="15" fill="rgb(247,38,9)" fg:x="711" fg:w="2"/><text x="57.2668%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.0970%" y="197" width="0.0802%" height="15" fill="rgb(218,187,8)" fg:x="712" fg:w="1"/><text x="57.3470%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.0970%" y="181" width="0.0802%" height="15" fill="rgb(247,94,28)" fg:x="712" fg:w="1"/><text x="57.3470%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.0970%" y="165" width="0.0802%" height="15" fill="rgb(218,173,30)" fg:x="712" fg:w="1"/><text x="57.3470%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.1772%" y="229" width="0.1604%" height="15" fill="rgb(245,45,36)" fg:x="713" fg:w="2"/><text x="57.4272%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2574%" y="213" width="0.0802%" height="15" fill="rgb(221,172,44)" fg:x="714" fg:w="1"/><text x="57.5074%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2574%" y="197" width="0.0802%" height="15" fill="rgb(222,45,12)" fg:x="714" fg:w="1"/><text x="57.5074%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.2574%" y="181" width="0.0802%" height="15" fill="rgb(250,10,22)" fg:x="714" fg:w="1"/><text x="57.5074%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.2574%" y="165" width="0.0802%" height="15" fill="rgb(239,27,0)" fg:x="714" fg:w="1"/><text x="57.5074%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.2574%" y="149" width="0.0802%" height="15" fill="rgb(223,118,22)" fg:x="714" fg:w="1"/><text x="57.5074%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2574%" y="133" width="0.0802%" height="15" fill="rgb(251,81,25)" fg:x="714" fg:w="1"/><text x="57.5074%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2574%" y="117" width="0.0802%" height="15" fill="rgb(237,225,53)" fg:x="714" fg:w="1"/><text x="57.5074%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.2574%" y="101" width="0.0802%" height="15" fill="rgb(237,186,51)" fg:x="714" fg:w="1"/><text x="57.5074%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.2574%" y="85" width="0.0802%" height="15" fill="rgb(247,209,11)" fg:x="714" fg:w="1"/><text x="57.5074%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.2574%" y="69" width="0.0802%" height="15" fill="rgb(223,109,27)" fg:x="714" fg:w="1"/><text x="57.5074%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.2574%" y="53" width="0.0802%" height="15" fill="rgb(246,181,13)" fg:x="714" fg:w="1"/><text x="57.5074%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2574%" y="37" width="0.0802%" height="15" fill="rgb(234,57,44)" fg:x="714" fg:w="1"/><text x="57.5074%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.1772%" y="261" width="0.2406%" height="15" fill="rgb(211,227,50)" fg:x="713" fg:w="3"/><text x="57.4272%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.1772%" y="245" width="0.2406%" height="15" fill="rgb(254,57,34)" fg:x="713" fg:w="3"/><text x="57.4272%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3376%" y="229" width="0.0802%" height="15" fill="rgb(227,212,26)" fg:x="715" fg:w="1"/><text x="57.5876%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3376%" y="213" width="0.0802%" height="15" fill="rgb(244,169,44)" fg:x="715" fg:w="1"/><text x="57.5876%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.3376%" y="197" width="0.0802%" height="15" fill="rgb(236,135,50)" fg:x="715" fg:w="1"/><text x="57.5876%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.3376%" y="181" width="0.0802%" height="15" fill="rgb(241,89,30)" fg:x="715" fg:w="1"/><text x="57.5876%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.3376%" y="165" width="0.0802%" height="15" fill="rgb(206,113,34)" fg:x="715" fg:w="1"/><text x="57.5876%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3376%" y="149" width="0.0802%" height="15" fill="rgb(218,104,52)" fg:x="715" fg:w="1"/><text x="57.5876%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3376%" y="133" width="0.0802%" height="15" fill="rgb(223,82,32)" fg:x="715" fg:w="1"/><text x="57.5876%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.4178%" y="229" width="0.0802%" height="15" fill="rgb(249,219,30)" fg:x="716" fg:w="1"/><text x="57.6678%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.4980%" y="229" width="0.0802%" height="15" fill="rgb(233,141,21)" fg:x="717" fg:w="1"/><text x="57.7480%" y="239.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (14 samples, 1.12%)</title><rect x="56.6961%" y="341" width="1.1227%" height="15" fill="rgb(252,87,44)" fg:x="707" fg:w="14"/><text x="56.9461%" y="351.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (14 samples, 1.12%)</title><rect x="56.6961%" y="325" width="1.1227%" height="15" fill="rgb(229,48,33)" fg:x="707" fg:w="14"/><text x="56.9461%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (13 samples, 1.04%)</title><rect x="56.7763%" y="309" width="1.0425%" height="15" fill="rgb(229,23,22)" fg:x="708" fg:w="13"/><text x="57.0263%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="57.1772%" y="293" width="0.6415%" height="15" fill="rgb(244,116,16)" fg:x="713" fg:w="8"/><text x="57.4272%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="57.1772%" y="277" width="0.6415%" height="15" fill="rgb(247,45,10)" fg:x="713" fg:w="8"/><text x="57.4272%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="57.4178%" y="261" width="0.4010%" height="15" fill="rgb(228,60,29)" fg:x="716" fg:w="5"/><text x="57.6678%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="57.4178%" y="245" width="0.4010%" height="15" fill="rgb(205,129,15)" fg:x="716" fg:w="5"/><text x="57.6678%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="57.5782%" y="229" width="0.2406%" height="15" fill="rgb(206,229,4)" fg:x="718" fg:w="3"/><text x="57.8282%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.5782%" y="213" width="0.2406%" height="15" fill="rgb(249,191,30)" fg:x="718" fg:w="3"/><text x="57.8282%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.5782%" y="197" width="0.2406%" height="15" fill="rgb(250,84,54)" fg:x="718" fg:w="3"/><text x="57.8282%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.6584%" y="181" width="0.1604%" height="15" fill="rgb(207,25,53)" fg:x="719" fg:w="2"/><text x="57.9084%" y="191.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (15 samples, 1.20%)</title><rect x="56.6961%" y="357" width="1.2029%" height="15" fill="rgb(235,40,8)" fg:x="707" fg:w="15"/><text x="56.9461%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="57.8188%" y="341" width="0.0802%" height="15" fill="rgb(226,169,33)" fg:x="721" fg:w="1"/><text x="58.0688%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="57.8188%" y="325" width="0.0802%" height="15" fill="rgb(238,110,8)" fg:x="721" fg:w="1"/><text x="58.0688%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.8188%" y="309" width="0.0802%" height="15" fill="rgb(251,206,12)" fg:x="721" fg:w="1"/><text x="58.0688%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.8188%" y="293" width="0.0802%" height="15" fill="rgb(248,171,18)" fg:x="721" fg:w="1"/><text x="58.0688%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.8188%" y="277" width="0.0802%" height="15" fill="rgb(213,65,46)" fg:x="721" fg:w="1"/><text x="58.0688%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.8188%" y="261" width="0.0802%" height="15" fill="rgb(211,154,15)" fg:x="721" fg:w="1"/><text x="58.0688%" y="271.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="57.9791%" y="325" width="0.0802%" height="15" fill="rgb(217,75,43)" fg:x="723" fg:w="1"/><text x="58.2291%" y="335.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="57.9791%" y="309" width="0.0802%" height="15" fill="rgb(230,32,33)" fg:x="723" fg:w="1"/><text x="58.2291%" y="319.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="58.0593%" y="325" width="0.0802%" height="15" fill="rgb(221,100,16)" fg:x="724" fg:w="1"/><text x="58.3093%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.0593%" y="309" width="0.0802%" height="15" fill="rgb(212,129,47)" fg:x="724" fg:w="1"/><text x="58.3093%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="58.1395%" y="309" width="0.0802%" height="15" fill="rgb(239,217,47)" fg:x="725" fg:w="1"/><text x="58.3895%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="58.1395%" y="293" width="0.0802%" height="15" fill="rgb(230,84,24)" fg:x="725" fg:w="1"/><text x="58.3895%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1395%" y="277" width="0.0802%" height="15" fill="rgb(214,153,51)" fg:x="725" fg:w="1"/><text x="58.3895%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="58.2197%" y="309" width="0.0802%" height="15" fill="rgb(231,6,35)" fg:x="726" fg:w="1"/><text x="58.4697%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="58.2197%" y="293" width="0.0802%" height="15" fill="rgb(229,122,30)" fg:x="726" fg:w="1"/><text x="58.4697%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.2197%" y="277" width="0.0802%" height="15" fill="rgb(234,71,10)" fg:x="726" fg:w="1"/><text x="58.4697%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.2197%" y="261" width="0.0802%" height="15" fill="rgb(215,173,26)" fg:x="726" fg:w="1"/><text x="58.4697%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2197%" y="245" width="0.0802%" height="15" fill="rgb(248,118,52)" fg:x="726" fg:w="1"/><text x="58.4697%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2197%" y="229" width="0.0802%" height="15" fill="rgb(237,55,46)" fg:x="726" fg:w="1"/><text x="58.4697%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.2197%" y="213" width="0.0802%" height="15" fill="rgb(243,214,43)" fg:x="726" fg:w="1"/><text x="58.4697%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.2197%" y="197" width="0.0802%" height="15" fill="rgb(252,123,30)" fg:x="726" fg:w="1"/><text x="58.4697%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.2197%" y="181" width="0.0802%" height="15" fill="rgb(215,73,39)" fg:x="726" fg:w="1"/><text x="58.4697%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.2197%" y="165" width="0.0802%" height="15" fill="rgb(251,194,29)" fg:x="726" fg:w="1"/><text x="58.4697%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.2197%" y="149" width="0.0802%" height="15" fill="rgb(224,58,52)" fg:x="726" fg:w="1"/><text x="58.4697%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.2197%" y="133" width="0.0802%" height="15" fill="rgb(248,106,46)" fg:x="726" fg:w="1"/><text x="58.4697%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.2197%" y="117" width="0.0802%" height="15" fill="rgb(223,80,29)" fg:x="726" fg:w="1"/><text x="58.4697%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.2197%" y="101" width="0.0802%" height="15" fill="rgb(243,137,9)" fg:x="726" fg:w="1"/><text x="58.4697%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.2197%" y="85" width="0.0802%" height="15" fill="rgb(235,121,28)" fg:x="726" fg:w="1"/><text x="58.4697%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2197%" y="69" width="0.0802%" height="15" fill="rgb(219,121,41)" fg:x="726" fg:w="1"/><text x="58.4697%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="58.2999%" y="101" width="0.0802%" height="15" fill="rgb(251,60,6)" fg:x="727" fg:w="1"/><text x="58.5499%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="58.2999%" y="85" width="0.0802%" height="15" fill="rgb(208,12,30)" fg:x="727" fg:w="1"/><text x="58.5499%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="58.2999%" y="69" width="0.0802%" height="15" fill="rgb(207,176,36)" fg:x="727" fg:w="1"/><text x="58.5499%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="58.2999%" y="53" width="0.0802%" height="15" fill="rgb(211,188,29)" fg:x="727" fg:w="1"/><text x="58.5499%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="58.2999%" y="37" width="0.0802%" height="15" fill="rgb(220,184,37)" fg:x="727" fg:w="1"/><text x="58.5499%" y="47.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (23 samples, 1.84%)</title><rect x="56.6159%" y="373" width="1.8444%" height="15" fill="rgb(239,87,37)" fg:x="706" fg:w="23"/><text x="56.8659%" y="383.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (7 samples, 0.56%)</title><rect x="57.8990%" y="357" width="0.5613%" height="15" fill="rgb(232,113,44)" fg:x="722" fg:w="7"/><text x="58.1490%" y="367.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="57.9791%" y="341" width="0.4812%" height="15" fill="rgb(246,25,39)" fg:x="723" fg:w="6"/><text x="58.2291%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="58.1395%" y="325" width="0.3208%" height="15" fill="rgb(247,30,13)" fg:x="725" fg:w="4"/><text x="58.3895%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="58.2999%" y="309" width="0.1604%" height="15" fill="rgb(230,176,35)" fg:x="727" fg:w="2"/><text x="58.5499%" y="319.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="58.2999%" y="293" width="0.1604%" height="15" fill="rgb(222,23,18)" fg:x="727" fg:w="2"/><text x="58.5499%" y="303.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="58.2999%" y="277" width="0.1604%" height="15" fill="rgb(234,86,8)" fg:x="727" fg:w="2"/><text x="58.5499%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="58.2999%" y="261" width="0.1604%" height="15" fill="rgb(206,218,47)" fg:x="727" fg:w="2"/><text x="58.5499%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="58.2999%" y="245" width="0.1604%" height="15" fill="rgb(229,35,31)" fg:x="727" fg:w="2"/><text x="58.5499%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="58.2999%" y="229" width="0.1604%" height="15" fill="rgb(242,81,7)" fg:x="727" fg:w="2"/><text x="58.5499%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="58.2999%" y="213" width="0.1604%" height="15" fill="rgb(231,11,35)" fg:x="727" fg:w="2"/><text x="58.5499%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="58.2999%" y="197" width="0.1604%" height="15" fill="rgb(219,218,17)" fg:x="727" fg:w="2"/><text x="58.5499%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="58.2999%" y="181" width="0.1604%" height="15" fill="rgb(221,83,32)" fg:x="727" fg:w="2"/><text x="58.5499%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="58.2999%" y="165" width="0.1604%" height="15" fill="rgb(233,49,54)" fg:x="727" fg:w="2"/><text x="58.5499%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="58.2999%" y="149" width="0.1604%" height="15" fill="rgb(206,18,51)" fg:x="727" fg:w="2"/><text x="58.5499%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="58.2999%" y="133" width="0.1604%" height="15" fill="rgb(249,193,15)" fg:x="727" fg:w="2"/><text x="58.5499%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="58.2999%" y="117" width="0.1604%" height="15" fill="rgb(245,186,19)" fg:x="727" fg:w="2"/><text x="58.5499%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="58.3801%" y="101" width="0.0802%" height="15" fill="rgb(230,4,24)" fg:x="728" fg:w="1"/><text x="58.6301%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="58.3801%" y="85" width="0.0802%" height="15" fill="rgb(234,75,27)" fg:x="728" fg:w="1"/><text x="58.6301%" y="95.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (30 samples, 2.41%)</title><rect x="56.4555%" y="437" width="2.4058%" height="15" fill="rgb(244,187,35)" fg:x="704" fg:w="30"/><text x="56.7055%" y="447.50">&lt;e..</text></g><g><title>kernel::plugins::mw::apply_middleware (30 samples, 2.41%)</title><rect x="56.4555%" y="421" width="2.4058%" height="15" fill="rgb(241,97,43)" fg:x="704" fg:w="30"/><text x="56.7055%" y="431.50">ke..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (29 samples, 2.33%)</title><rect x="56.5357%" y="405" width="2.3256%" height="15" fill="rgb(236,94,2)" fg:x="705" fg:w="29"/><text x="56.7857%" y="415.50">k..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (29 samples, 2.33%)</title><rect x="56.5357%" y="389" width="2.3256%" height="15" fill="rgb(231,175,7)" fg:x="705" fg:w="29"/><text x="56.7857%" y="399.50">&lt;..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="58.4603%" y="373" width="0.4010%" height="15" fill="rgb(236,89,47)" fg:x="729" fg:w="5"/><text x="58.7103%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (5 samples, 0.40%)</title><rect x="58.4603%" y="357" width="0.4010%" height="15" fill="rgb(213,191,37)" fg:x="729" fg:w="5"/><text x="58.7103%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="58.5405%" y="341" width="0.3208%" height="15" fill="rgb(252,0,34)" fg:x="730" fg:w="4"/><text x="58.7905%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="58.5405%" y="325" width="0.3208%" height="15" fill="rgb(208,145,44)" fg:x="730" fg:w="4"/><text x="58.7905%" y="335.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="58.5405%" y="309" width="0.3208%" height="15" fill="rgb(227,95,50)" fg:x="730" fg:w="4"/><text x="58.7905%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="58.6207%" y="293" width="0.2406%" height="15" fill="rgb(222,136,24)" fg:x="731" fg:w="3"/><text x="58.8707%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="58.6207%" y="277" width="0.2406%" height="15" fill="rgb(218,105,10)" fg:x="731" fg:w="3"/><text x="58.8707%" y="287.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="58.6207%" y="261" width="0.2406%" height="15" fill="rgb(216,65,28)" fg:x="731" fg:w="3"/><text x="58.8707%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (3 samples, 0.24%)</title><rect x="58.6207%" y="245" width="0.2406%" height="15" fill="rgb(229,6,28)" fg:x="731" fg:w="3"/><text x="58.8707%" y="255.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.16%)</title><rect x="58.7009%" y="229" width="0.1604%" height="15" fill="rgb(222,160,42)" fg:x="732" fg:w="2"/><text x="58.9509%" y="239.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="58.7009%" y="213" width="0.1604%" height="15" fill="rgb(235,83,49)" fg:x="732" fg:w="2"/><text x="58.9509%" y="223.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::SimpleReply&gt;::serialize (2 samples, 0.16%)</title><rect x="58.7009%" y="197" width="0.1604%" height="15" fill="rgb(236,86,36)" fg:x="732" fg:w="2"/><text x="58.9509%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7811%" y="181" width="0.0802%" height="15" fill="rgb(236,19,41)" fg:x="733" fg:w="1"/><text x="59.0311%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.2622%" y="309" width="0.0802%" height="15" fill="rgb(217,71,31)" fg:x="739" fg:w="1"/><text x="59.5122%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.3424%" y="229" width="0.1604%" height="15" fill="rgb(236,209,25)" fg:x="740" fg:w="2"/><text x="59.5924%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.3424%" y="213" width="0.1604%" height="15" fill="rgb(247,104,21)" fg:x="740" fg:w="2"/><text x="59.5924%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.3424%" y="197" width="0.1604%" height="15" fill="rgb(243,80,38)" fg:x="740" fg:w="2"/><text x="59.5924%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="59.3424%" y="181" width="0.1604%" height="15" fill="rgb(232,109,38)" fg:x="740" fg:w="2"/><text x="59.5924%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="59.3424%" y="165" width="0.1604%" height="15" fill="rgb(212,177,53)" fg:x="740" fg:w="2"/><text x="59.5924%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="59.3424%" y="149" width="0.1604%" height="15" fill="rgb(227,30,34)" fg:x="740" fg:w="2"/><text x="59.5924%" y="159.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.3424%" y="133" width="0.1604%" height="15" fill="rgb(205,175,25)" fg:x="740" fg:w="2"/><text x="59.5924%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="59.2622%" y="341" width="0.3208%" height="15" fill="rgb(249,39,54)" fg:x="739" fg:w="4"/><text x="59.5122%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="59.2622%" y="325" width="0.3208%" height="15" fill="rgb(215,54,37)" fg:x="739" fg:w="4"/><text x="59.5122%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="59.3424%" y="309" width="0.2406%" height="15" fill="rgb(205,60,46)" fg:x="740" fg:w="3"/><text x="59.5924%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="59.3424%" y="293" width="0.2406%" height="15" fill="rgb(238,89,29)" fg:x="740" fg:w="3"/><text x="59.5924%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="59.3424%" y="277" width="0.2406%" height="15" fill="rgb(212,48,10)" fg:x="740" fg:w="3"/><text x="59.5924%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="59.3424%" y="261" width="0.2406%" height="15" fill="rgb(237,186,28)" fg:x="740" fg:w="3"/><text x="59.5924%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="59.3424%" y="245" width="0.2406%" height="15" fill="rgb(237,204,4)" fg:x="740" fg:w="3"/><text x="59.5924%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.5028%" y="229" width="0.0802%" height="15" fill="rgb(237,15,47)" fg:x="742" fg:w="1"/><text x="59.7528%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.5028%" y="213" width="0.0802%" height="15" fill="rgb(244,110,25)" fg:x="742" fg:w="1"/><text x="59.7528%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.5830%" y="341" width="0.1604%" height="15" fill="rgb(241,12,16)" fg:x="743" fg:w="2"/><text x="59.8330%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.5830%" y="325" width="0.1604%" height="15" fill="rgb(235,25,9)" fg:x="743" fg:w="2"/><text x="59.8330%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.5830%" y="309" width="0.1604%" height="15" fill="rgb(245,159,19)" fg:x="743" fg:w="2"/><text x="59.8330%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.5830%" y="293" width="0.1604%" height="15" fill="rgb(236,63,32)" fg:x="743" fg:w="2"/><text x="59.8330%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.5830%" y="277" width="0.1604%" height="15" fill="rgb(235,32,52)" fg:x="743" fg:w="2"/><text x="59.8330%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.5830%" y="261" width="0.1604%" height="15" fill="rgb(209,176,21)" fg:x="743" fg:w="2"/><text x="59.8330%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.5830%" y="245" width="0.1604%" height="15" fill="rgb(205,90,42)" fg:x="743" fg:w="2"/><text x="59.8330%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.5830%" y="229" width="0.1604%" height="15" fill="rgb(213,132,16)" fg:x="743" fg:w="2"/><text x="59.8330%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="59.5830%" y="213" width="0.1604%" height="15" fill="rgb(232,11,22)" fg:x="743" fg:w="2"/><text x="59.8330%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="59.5830%" y="197" width="0.1604%" height="15" fill="rgb(248,167,41)" fg:x="743" fg:w="2"/><text x="59.8330%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="59.5830%" y="181" width="0.1604%" height="15" fill="rgb(209,127,6)" fg:x="743" fg:w="2"/><text x="59.8330%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.5830%" y="165" width="0.1604%" height="15" fill="rgb(246,210,34)" fg:x="743" fg:w="2"/><text x="59.8330%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.80%)</title><rect x="59.1018%" y="357" width="0.8019%" height="15" fill="rgb(238,165,13)" fg:x="737" fg:w="10"/><text x="59.3518%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.7434%" y="341" width="0.1604%" height="15" fill="rgb(233,98,15)" fg:x="745" fg:w="2"/><text x="59.9934%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12 samples, 0.96%)</title><rect x="59.0217%" y="373" width="0.9623%" height="15" fill="rgb(215,215,51)" fg:x="736" fg:w="12"/><text x="59.2717%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.9038%" y="357" width="0.0802%" height="15" fill="rgb(217,161,25)" fg:x="747" fg:w="1"/><text x="60.1538%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="59.9840%" y="357" width="0.0802%" height="15" fill="rgb(217,167,48)" fg:x="748" fg:w="1"/><text x="60.2340%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="59.9840%" y="373" width="0.2406%" height="15" fill="rgb(205,163,34)" fg:x="748" fg:w="3"/><text x="60.2340%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.0642%" y="357" width="0.1604%" height="15" fill="rgb(241,197,31)" fg:x="749" fg:w="2"/><text x="60.3142%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.0642%" y="341" width="0.1604%" height="15" fill="rgb(225,123,11)" fg:x="749" fg:w="2"/><text x="60.3142%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1443%" y="325" width="0.0802%" height="15" fill="rgb(217,4,20)" fg:x="750" fg:w="1"/><text x="60.3943%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.1443%" y="309" width="0.0802%" height="15" fill="rgb(215,55,9)" fg:x="750" fg:w="1"/><text x="60.3943%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1443%" y="293" width="0.0802%" height="15" fill="rgb(218,165,5)" fg:x="750" fg:w="1"/><text x="60.3943%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.1443%" y="277" width="0.0802%" height="15" fill="rgb(222,175,15)" fg:x="750" fg:w="1"/><text x="60.3943%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1443%" y="261" width="0.0802%" height="15" fill="rgb(223,85,34)" fg:x="750" fg:w="1"/><text x="60.3943%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.1443%" y="245" width="0.0802%" height="15" fill="rgb(234,228,29)" fg:x="750" fg:w="1"/><text x="60.3943%" y="255.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="60.2245%" y="373" width="0.0802%" height="15" fill="rgb(239,7,28)" fg:x="751" fg:w="1"/><text x="60.4745%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.2245%" y="357" width="0.0802%" height="15" fill="rgb(252,222,53)" fg:x="751" fg:w="1"/><text x="60.4745%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.2245%" y="341" width="0.0802%" height="15" fill="rgb(232,146,44)" fg:x="751" fg:w="1"/><text x="60.4745%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="60.2245%" y="325" width="0.0802%" height="15" fill="rgb(243,223,53)" fg:x="751" fg:w="1"/><text x="60.4745%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.7057%" y="277" width="0.0802%" height="15" fill="rgb(219,128,25)" fg:x="757" fg:w="1"/><text x="60.9557%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.7057%" y="261" width="0.0802%" height="15" fill="rgb(223,56,32)" fg:x="757" fg:w="1"/><text x="60.9557%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.7057%" y="245" width="0.0802%" height="15" fill="rgb(237,41,3)" fg:x="757" fg:w="1"/><text x="60.9557%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.7057%" y="229" width="0.0802%" height="15" fill="rgb(235,138,9)" fg:x="757" fg:w="1"/><text x="60.9557%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="60.7057%" y="213" width="0.0802%" height="15" fill="rgb(214,131,10)" fg:x="757" fg:w="1"/><text x="60.9557%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.7859%" y="277" width="0.0802%" height="15" fill="rgb(229,89,7)" fg:x="758" fg:w="1"/><text x="61.0359%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.7859%" y="261" width="0.0802%" height="15" fill="rgb(240,24,42)" fg:x="758" fg:w="1"/><text x="61.0359%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.7859%" y="245" width="0.0802%" height="15" fill="rgb(243,188,54)" fg:x="758" fg:w="1"/><text x="61.0359%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.7859%" y="229" width="0.0802%" height="15" fill="rgb(246,92,22)" fg:x="758" fg:w="1"/><text x="61.0359%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.7859%" y="213" width="0.0802%" height="15" fill="rgb(211,176,51)" fg:x="758" fg:w="1"/><text x="61.0359%" y="223.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.72%)</title><rect x="60.3047%" y="373" width="0.7217%" height="15" fill="rgb(246,207,34)" fg:x="752" fg:w="9"/><text x="60.5547%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="60.3047%" y="357" width="0.7217%" height="15" fill="rgb(239,95,2)" fg:x="752" fg:w="9"/><text x="60.5547%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="60.3047%" y="341" width="0.7217%" height="15" fill="rgb(211,124,25)" fg:x="752" fg:w="9"/><text x="60.5547%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (7 samples, 0.56%)</title><rect x="60.4651%" y="325" width="0.5613%" height="15" fill="rgb(231,221,19)" fg:x="754" fg:w="7"/><text x="60.7151%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="60.5453%" y="309" width="0.4812%" height="15" fill="rgb(239,183,19)" fg:x="755" fg:w="6"/><text x="60.7953%" y="319.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="60.7057%" y="293" width="0.3208%" height="15" fill="rgb(221,130,29)" fg:x="757" fg:w="4"/><text x="60.9557%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.8661%" y="277" width="0.1604%" height="15" fill="rgb(206,130,36)" fg:x="759" fg:w="2"/><text x="61.1161%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.8661%" y="261" width="0.1604%" height="15" fill="rgb(215,70,19)" fg:x="759" fg:w="2"/><text x="61.1161%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.9463%" y="245" width="0.0802%" height="15" fill="rgb(244,16,43)" fg:x="760" fg:w="1"/><text x="61.1963%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.1868%" y="261" width="0.0802%" height="15" fill="rgb(222,115,32)" fg:x="763" fg:w="1"/><text x="61.4368%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.3472%" y="213" width="0.0802%" height="15" fill="rgb(247,48,25)" fg:x="765" fg:w="1"/><text x="61.5972%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.3472%" y="197" width="0.0802%" height="15" fill="rgb(226,180,51)" fg:x="765" fg:w="1"/><text x="61.5972%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.3472%" y="245" width="0.1604%" height="15" fill="rgb(217,142,42)" fg:x="765" fg:w="2"/><text x="61.5972%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.3472%" y="229" width="0.1604%" height="15" fill="rgb(220,178,3)" fg:x="765" fg:w="2"/><text x="61.5972%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4274%" y="213" width="0.0802%" height="15" fill="rgb(217,221,4)" fg:x="766" fg:w="1"/><text x="61.6774%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4274%" y="197" width="0.0802%" height="15" fill="rgb(237,63,43)" fg:x="766" fg:w="1"/><text x="61.6774%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="61.0265%" y="309" width="0.5613%" height="15" fill="rgb(220,57,8)" fg:x="761" fg:w="7"/><text x="61.2765%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="61.0265%" y="293" width="0.5613%" height="15" fill="rgb(254,186,27)" fg:x="761" fg:w="7"/><text x="61.2765%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="61.1067%" y="277" width="0.4812%" height="15" fill="rgb(251,57,28)" fg:x="762" fg:w="6"/><text x="61.3567%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="61.2670%" y="261" width="0.3208%" height="15" fill="rgb(215,228,0)" fg:x="764" fg:w="4"/><text x="61.5170%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.5076%" y="245" width="0.0802%" height="15" fill="rgb(237,218,39)" fg:x="767" fg:w="1"/><text x="61.7576%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.5076%" y="229" width="0.0802%" height="15" fill="rgb(207,2,54)" fg:x="767" fg:w="1"/><text x="61.7576%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5076%" y="213" width="0.0802%" height="15" fill="rgb(232,76,50)" fg:x="767" fg:w="1"/><text x="61.7576%" y="223.50"></text></g><g><title>engine::session::Session::load_entity (34 samples, 2.73%)</title><rect x="58.9415%" y="405" width="2.7265%" height="15" fill="rgb(211,85,31)" fg:x="735" fg:w="34"/><text x="59.1915%" y="415.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (33 samples, 2.65%)</title><rect x="59.0217%" y="389" width="2.6464%" height="15" fill="rgb(223,210,27)" fg:x="736" fg:w="33"/><text x="59.2717%" y="399.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="61.0265%" y="373" width="0.6415%" height="15" fill="rgb(254,36,8)" fg:x="761" fg:w="8"/><text x="61.2765%" y="383.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="61.0265%" y="357" width="0.6415%" height="15" fill="rgb(213,4,25)" fg:x="761" fg:w="8"/><text x="61.2765%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="61.0265%" y="341" width="0.6415%" height="15" fill="rgb(224,2,39)" fg:x="761" fg:w="8"/><text x="61.2765%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="61.0265%" y="325" width="0.6415%" height="15" fill="rgb(208,8,39)" fg:x="761" fg:w="8"/><text x="61.2765%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.5878%" y="309" width="0.0802%" height="15" fill="rgb(216,226,3)" fg:x="768" fg:w="1"/><text x="61.8378%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.7482%" y="309" width="0.1604%" height="15" fill="rgb(249,139,31)" fg:x="770" fg:w="2"/><text x="61.9982%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9086%" y="309" width="0.0802%" height="15" fill="rgb(242,170,35)" fg:x="772" fg:w="1"/><text x="62.1586%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9086%" y="293" width="0.0802%" height="15" fill="rgb(238,14,9)" fg:x="772" fg:w="1"/><text x="62.1586%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9086%" y="277" width="0.0802%" height="15" fill="rgb(251,81,46)" fg:x="772" fg:w="1"/><text x="62.1586%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9086%" y="261" width="0.0802%" height="15" fill="rgb(230,23,4)" fg:x="772" fg:w="1"/><text x="62.1586%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9086%" y="245" width="0.0802%" height="15" fill="rgb(211,85,25)" fg:x="772" fg:w="1"/><text x="62.1586%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9086%" y="229" width="0.0802%" height="15" fill="rgb(252,23,31)" fg:x="772" fg:w="1"/><text x="62.1586%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9086%" y="213" width="0.0802%" height="15" fill="rgb(234,163,38)" fg:x="772" fg:w="1"/><text x="62.1586%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.9086%" y="197" width="0.0802%" height="15" fill="rgb(210,190,50)" fg:x="772" fg:w="1"/><text x="62.1586%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.9086%" y="181" width="0.0802%" height="15" fill="rgb(228,158,3)" fg:x="772" fg:w="1"/><text x="62.1586%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.9086%" y="165" width="0.0802%" height="15" fill="rgb(216,130,0)" fg:x="772" fg:w="1"/><text x="62.1586%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.9086%" y="149" width="0.0802%" height="15" fill="rgb(224,184,10)" fg:x="772" fg:w="1"/><text x="62.1586%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9086%" y="133" width="0.0802%" height="15" fill="rgb(214,202,18)" fg:x="772" fg:w="1"/><text x="62.1586%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="61.6680%" y="341" width="0.4812%" height="15" fill="rgb(213,229,54)" fg:x="769" fg:w="6"/><text x="61.9180%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="61.7482%" y="325" width="0.4010%" height="15" fill="rgb(246,120,0)" fg:x="770" fg:w="5"/><text x="61.9982%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.9888%" y="309" width="0.1604%" height="15" fill="rgb(237,6,15)" fg:x="773" fg:w="2"/><text x="62.2388%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="61.6680%" y="373" width="0.5613%" height="15" fill="rgb(252,156,15)" fg:x="769" fg:w="7"/><text x="61.9180%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="61.6680%" y="357" width="0.5613%" height="15" fill="rgb(249,78,18)" fg:x="769" fg:w="7"/><text x="61.9180%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1492%" y="341" width="0.0802%" height="15" fill="rgb(230,223,44)" fg:x="775" fg:w="1"/><text x="62.3992%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1492%" y="325" width="0.0802%" height="15" fill="rgb(230,222,32)" fg:x="775" fg:w="1"/><text x="62.3992%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.1492%" y="309" width="0.0802%" height="15" fill="rgb(247,54,6)" fg:x="775" fg:w="1"/><text x="62.3992%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.1492%" y="293" width="0.0802%" height="15" fill="rgb(247,115,45)" fg:x="775" fg:w="1"/><text x="62.3992%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.1492%" y="277" width="0.0802%" height="15" fill="rgb(213,203,37)" fg:x="775" fg:w="1"/><text x="62.3992%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1492%" y="261" width="0.0802%" height="15" fill="rgb(248,188,18)" fg:x="775" fg:w="1"/><text x="62.3992%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1492%" y="245" width="0.0802%" height="15" fill="rgb(206,80,8)" fg:x="775" fg:w="1"/><text x="62.3992%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.1492%" y="229" width="0.0802%" height="15" fill="rgb(245,217,31)" fg:x="775" fg:w="1"/><text x="62.3992%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.1492%" y="213" width="0.0802%" height="15" fill="rgb(220,193,15)" fg:x="775" fg:w="1"/><text x="62.3992%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.1492%" y="197" width="0.0802%" height="15" fill="rgb(226,7,19)" fg:x="775" fg:w="1"/><text x="62.3992%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.1492%" y="181" width="0.0802%" height="15" fill="rgb(222,145,31)" fg:x="775" fg:w="1"/><text x="62.3992%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1492%" y="165" width="0.0802%" height="15" fill="rgb(241,193,36)" fg:x="775" fg:w="1"/><text x="62.3992%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3095%" y="293" width="0.0802%" height="15" fill="rgb(225,123,33)" fg:x="777" fg:w="1"/><text x="62.5595%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3095%" y="277" width="0.0802%" height="15" fill="rgb(246,136,38)" fg:x="777" fg:w="1"/><text x="62.5595%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3095%" y="261" width="0.0802%" height="15" fill="rgb(243,56,24)" fg:x="777" fg:w="1"/><text x="62.5595%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3095%" y="245" width="0.0802%" height="15" fill="rgb(215,147,2)" fg:x="777" fg:w="1"/><text x="62.5595%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3095%" y="229" width="0.0802%" height="15" fill="rgb(209,155,27)" fg:x="777" fg:w="1"/><text x="62.5595%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3095%" y="213" width="0.0802%" height="15" fill="rgb(222,177,11)" fg:x="777" fg:w="1"/><text x="62.5595%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3095%" y="197" width="0.0802%" height="15" fill="rgb(212,227,15)" fg:x="777" fg:w="1"/><text x="62.5595%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.3095%" y="181" width="0.0802%" height="15" fill="rgb(214,138,20)" fg:x="777" fg:w="1"/><text x="62.5595%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.3095%" y="165" width="0.0802%" height="15" fill="rgb(221,170,31)" fg:x="777" fg:w="1"/><text x="62.5595%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3095%" y="309" width="0.1604%" height="15" fill="rgb(253,207,5)" fg:x="777" fg:w="2"/><text x="62.5595%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3897%" y="293" width="0.0802%" height="15" fill="rgb(212,64,37)" fg:x="778" fg:w="1"/><text x="62.6397%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3897%" y="277" width="0.0802%" height="15" fill="rgb(208,113,51)" fg:x="778" fg:w="1"/><text x="62.6397%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3897%" y="261" width="0.0802%" height="15" fill="rgb(237,15,5)" fg:x="778" fg:w="1"/><text x="62.6397%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3897%" y="245" width="0.0802%" height="15" fill="rgb(238,33,18)" fg:x="778" fg:w="1"/><text x="62.6397%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3897%" y="229" width="0.0802%" height="15" fill="rgb(253,206,50)" fg:x="778" fg:w="1"/><text x="62.6397%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.3897%" y="213" width="0.0802%" height="15" fill="rgb(242,158,43)" fg:x="778" fg:w="1"/><text x="62.6397%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.3897%" y="197" width="0.0802%" height="15" fill="rgb(213,125,27)" fg:x="778" fg:w="1"/><text x="62.6397%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="62.2294%" y="325" width="0.4010%" height="15" fill="rgb(233,161,31)" fg:x="776" fg:w="5"/><text x="62.4794%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.4699%" y="309" width="0.1604%" height="15" fill="rgb(218,135,6)" fg:x="779" fg:w="2"/><text x="62.7199%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5501%" y="293" width="0.0802%" height="15" fill="rgb(222,73,53)" fg:x="780" fg:w="1"/><text x="62.8001%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.5501%" y="277" width="0.0802%" height="15" fill="rgb(229,66,53)" fg:x="780" fg:w="1"/><text x="62.8001%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.5501%" y="261" width="0.0802%" height="15" fill="rgb(208,128,19)" fg:x="780" fg:w="1"/><text x="62.8001%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.5501%" y="245" width="0.0802%" height="15" fill="rgb(235,70,27)" fg:x="780" fg:w="1"/><text x="62.8001%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.5501%" y="229" width="0.0802%" height="15" fill="rgb(241,130,30)" fg:x="780" fg:w="1"/><text x="62.8001%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.5501%" y="213" width="0.0802%" height="15" fill="rgb(222,57,48)" fg:x="780" fg:w="1"/><text x="62.8001%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.5501%" y="197" width="0.0802%" height="15" fill="rgb(225,204,29)" fg:x="780" fg:w="1"/><text x="62.8001%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.5501%" y="181" width="0.0802%" height="15" fill="rgb(240,196,35)" fg:x="780" fg:w="1"/><text x="62.8001%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.5501%" y="165" width="0.0802%" height="15" fill="rgb(215,150,16)" fg:x="780" fg:w="1"/><text x="62.8001%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.5501%" y="149" width="0.0802%" height="15" fill="rgb(209,170,13)" fg:x="780" fg:w="1"/><text x="62.8001%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.5501%" y="133" width="0.0802%" height="15" fill="rgb(235,75,31)" fg:x="780" fg:w="1"/><text x="62.8001%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7105%" y="261" width="0.0802%" height="15" fill="rgb(252,1,47)" fg:x="782" fg:w="1"/><text x="62.9605%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7105%" y="245" width="0.0802%" height="15" fill="rgb(241,2,36)" fg:x="782" fg:w="1"/><text x="62.9605%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.7105%" y="229" width="0.0802%" height="15" fill="rgb(236,191,4)" fg:x="782" fg:w="1"/><text x="62.9605%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.7105%" y="213" width="0.0802%" height="15" fill="rgb(212,65,35)" fg:x="782" fg:w="1"/><text x="62.9605%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.7105%" y="197" width="0.0802%" height="15" fill="rgb(209,49,33)" fg:x="782" fg:w="1"/><text x="62.9605%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.7105%" y="181" width="0.0802%" height="15" fill="rgb(208,36,46)" fg:x="782" fg:w="1"/><text x="62.9605%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.7105%" y="165" width="0.0802%" height="15" fill="rgb(210,125,2)" fg:x="782" fg:w="1"/><text x="62.9605%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.7105%" y="149" width="0.0802%" height="15" fill="rgb(225,62,6)" fg:x="782" fg:w="1"/><text x="62.9605%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.7105%" y="133" width="0.0802%" height="15" fill="rgb(210,54,27)" fg:x="782" fg:w="1"/><text x="62.9605%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.7105%" y="117" width="0.0802%" height="15" fill="rgb(249,189,52)" fg:x="782" fg:w="1"/><text x="62.9605%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.7105%" y="101" width="0.0802%" height="15" fill="rgb(225,134,40)" fg:x="782" fg:w="1"/><text x="62.9605%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7105%" y="85" width="0.0802%" height="15" fill="rgb(206,13,37)" fg:x="782" fg:w="1"/><text x="62.9605%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.7105%" y="277" width="0.1604%" height="15" fill="rgb(232,114,28)" fg:x="782" fg:w="2"/><text x="62.9605%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7907%" y="261" width="0.0802%" height="15" fill="rgb(253,215,8)" fg:x="783" fg:w="1"/><text x="63.0407%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.7907%" y="245" width="0.0802%" height="15" fill="rgb(254,64,19)" fg:x="783" fg:w="1"/><text x="63.0407%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7907%" y="229" width="0.0802%" height="15" fill="rgb(242,18,46)" fg:x="783" fg:w="1"/><text x="63.0407%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.8709%" y="213" width="0.1604%" height="15" fill="rgb(239,192,30)" fg:x="784" fg:w="2"/><text x="63.1209%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.9511%" y="197" width="0.0802%" height="15" fill="rgb(232,73,14)" fg:x="785" fg:w="1"/><text x="63.2011%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.8709%" y="229" width="0.2406%" height="15" fill="rgb(225,51,9)" fg:x="784" fg:w="3"/><text x="63.1209%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.0313%" y="213" width="0.0802%" height="15" fill="rgb(242,217,54)" fg:x="786" fg:w="1"/><text x="63.2813%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.1115%" y="181" width="0.0802%" height="15" fill="rgb(216,93,3)" fg:x="787" fg:w="1"/><text x="63.3615%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="63.1115%" y="229" width="0.4812%" height="15" fill="rgb(230,119,33)" fg:x="787" fg:w="6"/><text x="63.3615%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="63.1115%" y="213" width="0.4812%" height="15" fill="rgb(238,170,27)" fg:x="787" fg:w="6"/><text x="63.3615%" y="223.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="63.1115%" y="197" width="0.4812%" height="15" fill="rgb(229,8,2)" fg:x="787" fg:w="6"/><text x="63.3615%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="63.1917%" y="181" width="0.4010%" height="15" fill="rgb(205,214,42)" fg:x="788" fg:w="5"/><text x="63.4417%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="63.1917%" y="165" width="0.4010%" height="15" fill="rgb(245,113,1)" fg:x="788" fg:w="5"/><text x="63.4417%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="63.4322%" y="149" width="0.1604%" height="15" fill="rgb(252,50,2)" fg:x="791" fg:w="2"/><text x="63.6822%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.5124%" y="133" width="0.0802%" height="15" fill="rgb(225,122,24)" fg:x="792" fg:w="1"/><text x="63.7624%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.6728%" y="197" width="0.0802%" height="15" fill="rgb(234,129,31)" fg:x="794" fg:w="1"/><text x="63.9228%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.6728%" y="181" width="0.0802%" height="15" fill="rgb(219,177,4)" fg:x="794" fg:w="1"/><text x="63.9228%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="62.8709%" y="277" width="0.9623%" height="15" fill="rgb(225,142,27)" fg:x="784" fg:w="12"/><text x="63.1209%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.96%)</title><rect x="62.8709%" y="261" width="0.9623%" height="15" fill="rgb(205,107,51)" fg:x="784" fg:w="12"/><text x="63.1209%" y="271.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (12 samples, 0.96%)</title><rect x="62.8709%" y="245" width="0.9623%" height="15" fill="rgb(236,223,15)" fg:x="784" fg:w="12"/><text x="63.1209%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.5926%" y="229" width="0.2406%" height="15" fill="rgb(235,133,11)" fg:x="793" fg:w="3"/><text x="63.8426%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.5926%" y="213" width="0.2406%" height="15" fill="rgb(247,172,13)" fg:x="793" fg:w="3"/><text x="63.8426%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="63.7530%" y="197" width="0.0802%" height="15" fill="rgb(233,191,41)" fg:x="795" fg:w="1"/><text x="64.0030%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.84%)</title><rect x="62.2294%" y="357" width="1.8444%" height="15" fill="rgb(250,65,16)" fg:x="776" fg:w="23"/><text x="62.4794%" y="367.50">&lt;..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (23 samples, 1.84%)</title><rect x="62.2294%" y="341" width="1.8444%" height="15" fill="rgb(206,10,27)" fg:x="776" fg:w="23"/><text x="62.4794%" y="351.50">k..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.44%)</title><rect x="62.6303%" y="325" width="1.4435%" height="15" fill="rgb(212,96,22)" fg:x="781" fg:w="18"/><text x="62.8803%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.44%)</title><rect x="62.6303%" y="309" width="1.4435%" height="15" fill="rgb(206,50,0)" fg:x="781" fg:w="18"/><text x="62.8803%" y="319.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (17 samples, 1.36%)</title><rect x="62.7105%" y="293" width="1.3633%" height="15" fill="rgb(249,105,52)" fg:x="782" fg:w="17"/><text x="62.9605%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.8332%" y="277" width="0.2406%" height="15" fill="rgb(216,93,51)" fg:x="796" fg:w="3"/><text x="64.0832%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.8332%" y="261" width="0.2406%" height="15" fill="rgb(217,172,13)" fg:x="796" fg:w="3"/><text x="64.0832%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.9134%" y="245" width="0.1604%" height="15" fill="rgb(235,199,38)" fg:x="797" fg:w="2"/><text x="64.1634%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="63.9134%" y="229" width="0.1604%" height="15" fill="rgb(221,97,33)" fg:x="797" fg:w="2"/><text x="64.1634%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9936%" y="213" width="0.0802%" height="15" fill="rgb(205,156,50)" fg:x="798" fg:w="1"/><text x="64.2436%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.92%)</title><rect x="62.2294%" y="373" width="1.9246%" height="15" fill="rgb(215,142,19)" fg:x="776" fg:w="24"/><text x="62.4794%" y="383.50">&lt;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0738%" y="357" width="0.0802%" height="15" fill="rgb(232,170,7)" fg:x="799" fg:w="1"/><text x="64.3238%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.2342%" y="309" width="0.0802%" height="15" fill="rgb(223,50,17)" fg:x="801" fg:w="1"/><text x="64.4842%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="64.2342%" y="341" width="0.2406%" height="15" fill="rgb(230,103,46)" fg:x="801" fg:w="3"/><text x="64.4842%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="64.2342%" y="325" width="0.2406%" height="15" fill="rgb(254,30,34)" fg:x="801" fg:w="3"/><text x="64.4842%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.3144%" y="309" width="0.1604%" height="15" fill="rgb(235,198,1)" fg:x="802" fg:w="2"/><text x="64.5644%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.3144%" y="293" width="0.1604%" height="15" fill="rgb(217,105,47)" fg:x="802" fg:w="2"/><text x="64.5644%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="64.3144%" y="277" width="0.1604%" height="15" fill="rgb(231,18,12)" fg:x="802" fg:w="2"/><text x="64.5644%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="64.3144%" y="261" width="0.1604%" height="15" fill="rgb(218,196,1)" fg:x="802" fg:w="2"/><text x="64.5644%" y="271.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.3144%" y="245" width="0.1604%" height="15" fill="rgb(210,32,3)" fg:x="802" fg:w="2"/><text x="64.5644%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.4747%" y="341" width="0.0802%" height="15" fill="rgb(227,178,30)" fg:x="804" fg:w="1"/><text x="64.7247%" y="351.50"></text></g><g><title>engine::session::internal::Added::find_refs (38 samples, 3.05%)</title><rect x="61.6680%" y="405" width="3.0473%" height="15" fill="rgb(231,140,27)" fg:x="769" fg:w="38"/><text x="61.9180%" y="415.50">eng..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (38 samples, 3.05%)</title><rect x="61.6680%" y="389" width="3.0473%" height="15" fill="rgb(206,66,35)" fg:x="769" fg:w="38"/><text x="61.9180%" y="399.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="64.1540%" y="373" width="0.5613%" height="15" fill="rgb(212,34,2)" fg:x="800" fg:w="7"/><text x="64.4040%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="64.1540%" y="357" width="0.5613%" height="15" fill="rgb(207,201,33)" fg:x="800" fg:w="7"/><text x="64.4040%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.5549%" y="341" width="0.1604%" height="15" fill="rgb(221,135,32)" fg:x="805" fg:w="2"/><text x="64.8049%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="64.5549%" y="325" width="0.1604%" height="15" fill="rgb(206,77,31)" fg:x="805" fg:w="2"/><text x="64.8049%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.6351%" y="309" width="0.0802%" height="15" fill="rgb(252,198,50)" fg:x="806" fg:w="1"/><text x="64.8851%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.8757%" y="325" width="0.1604%" height="15" fill="rgb(206,79,27)" fg:x="809" fg:w="2"/><text x="65.1257%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9559%" y="309" width="0.0802%" height="15" fill="rgb(228,108,9)" fg:x="810" fg:w="1"/><text x="65.2059%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.8757%" y="341" width="0.2406%" height="15" fill="rgb(213,9,39)" fg:x="809" fg:w="3"/><text x="65.1257%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0361%" y="325" width="0.0802%" height="15" fill="rgb(252,51,13)" fg:x="811" fg:w="1"/><text x="65.2861%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="64.7955%" y="357" width="0.4812%" height="15" fill="rgb(218,202,39)" fg:x="808" fg:w="6"/><text x="65.0455%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.1163%" y="341" width="0.1604%" height="15" fill="rgb(214,122,21)" fg:x="812" fg:w="2"/><text x="65.3663%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.1163%" y="325" width="0.1604%" height="15" fill="rgb(217,205,48)" fg:x="812" fg:w="2"/><text x="65.3663%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1965%" y="309" width="0.0802%" height="15" fill="rgb(230,216,13)" fg:x="813" fg:w="1"/><text x="65.4465%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1965%" y="293" width="0.0802%" height="15" fill="rgb(249,118,4)" fg:x="813" fg:w="1"/><text x="65.4465%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.1965%" y="277" width="0.0802%" height="15" fill="rgb(212,207,40)" fg:x="813" fg:w="1"/><text x="65.4465%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.1965%" y="261" width="0.0802%" height="15" fill="rgb(217,156,26)" fg:x="813" fg:w="1"/><text x="65.4465%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.1965%" y="245" width="0.0802%" height="15" fill="rgb(226,86,34)" fg:x="813" fg:w="1"/><text x="65.4465%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.1965%" y="229" width="0.0802%" height="15" fill="rgb(217,111,30)" fg:x="813" fg:w="1"/><text x="65.4465%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.1965%" y="213" width="0.0802%" height="15" fill="rgb(228,64,18)" fg:x="813" fg:w="1"/><text x="65.4465%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="64.7955%" y="389" width="0.6415%" height="15" fill="rgb(254,217,48)" fg:x="808" fg:w="8"/><text x="65.0455%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="64.7955%" y="373" width="0.6415%" height="15" fill="rgb(226,156,48)" fg:x="808" fg:w="8"/><text x="65.0455%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.2767%" y="357" width="0.1604%" height="15" fill="rgb(236,168,20)" fg:x="814" fg:w="2"/><text x="65.5267%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.2767%" y="341" width="0.1604%" height="15" fill="rgb(239,210,33)" fg:x="814" fg:w="2"/><text x="65.5267%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="65.2767%" y="325" width="0.1604%" height="15" fill="rgb(242,85,17)" fg:x="814" fg:w="2"/><text x="65.5267%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="65.2767%" y="309" width="0.1604%" height="15" fill="rgb(221,196,15)" fg:x="814" fg:w="2"/><text x="65.5267%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="65.2767%" y="293" width="0.1604%" height="15" fill="rgb(249,76,21)" fg:x="814" fg:w="2"/><text x="65.5267%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="65.2767%" y="277" width="0.1604%" height="15" fill="rgb(243,67,29)" fg:x="814" fg:w="2"/><text x="65.5267%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="65.2767%" y="261" width="0.1604%" height="15" fill="rgb(240,159,2)" fg:x="814" fg:w="2"/><text x="65.5267%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4370%" y="357" width="0.0802%" height="15" fill="rgb(244,64,3)" fg:x="816" fg:w="1"/><text x="65.6870%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4370%" y="341" width="0.0802%" height="15" fill="rgb(220,86,40)" fg:x="816" fg:w="1"/><text x="65.6870%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5974%" y="261" width="0.0802%" height="15" fill="rgb(222,194,51)" fg:x="818" fg:w="1"/><text x="65.8474%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="65.4370%" y="389" width="0.3208%" height="15" fill="rgb(207,154,19)" fg:x="816" fg:w="4"/><text x="65.6870%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="65.4370%" y="373" width="0.3208%" height="15" fill="rgb(206,178,36)" fg:x="816" fg:w="4"/><text x="65.6870%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="65.5172%" y="357" width="0.2406%" height="15" fill="rgb(218,8,24)" fg:x="817" fg:w="3"/><text x="65.7672%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.5172%" y="341" width="0.2406%" height="15" fill="rgb(226,83,41)" fg:x="817" fg:w="3"/><text x="65.7672%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="65.5172%" y="325" width="0.2406%" height="15" fill="rgb(224,23,22)" fg:x="817" fg:w="3"/><text x="65.7672%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.5172%" y="309" width="0.2406%" height="15" fill="rgb(218,198,45)" fg:x="817" fg:w="3"/><text x="65.7672%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="65.5172%" y="293" width="0.2406%" height="15" fill="rgb(249,147,41)" fg:x="817" fg:w="3"/><text x="65.7672%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.5172%" y="277" width="0.2406%" height="15" fill="rgb(244,224,13)" fg:x="817" fg:w="3"/><text x="65.7672%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.6776%" y="261" width="0.0802%" height="15" fill="rgb(225,97,27)" fg:x="819" fg:w="1"/><text x="65.9276%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.6776%" y="245" width="0.0802%" height="15" fill="rgb(254,64,0)" fg:x="819" fg:w="1"/><text x="65.9276%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9182%" y="309" width="0.0802%" height="15" fill="rgb(208,130,43)" fg:x="822" fg:w="1"/><text x="66.1682%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.0786%" y="293" width="0.0802%" height="15" fill="rgb(247,91,25)" fg:x="824" fg:w="1"/><text x="66.3286%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.0786%" y="277" width="0.0802%" height="15" fill="rgb(215,218,42)" fg:x="824" fg:w="1"/><text x="66.3286%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="66.0786%" y="261" width="0.0802%" height="15" fill="rgb(233,9,24)" fg:x="824" fg:w="1"/><text x="66.3286%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.0786%" y="245" width="0.0802%" height="15" fill="rgb(252,105,38)" fg:x="824" fg:w="1"/><text x="66.3286%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.0786%" y="229" width="0.0802%" height="15" fill="rgb(225,40,49)" fg:x="824" fg:w="1"/><text x="66.3286%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.0786%" y="213" width="0.0802%" height="15" fill="rgb(232,196,19)" fg:x="824" fg:w="1"/><text x="66.3286%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.0786%" y="197" width="0.0802%" height="15" fill="rgb(207,35,15)" fg:x="824" fg:w="1"/><text x="66.3286%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.0786%" y="181" width="0.0802%" height="15" fill="rgb(238,68,36)" fg:x="824" fg:w="1"/><text x="66.3286%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1588%" y="261" width="0.0802%" height="15" fill="rgb(205,158,20)" fg:x="825" fg:w="1"/><text x="66.4088%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="66.1588%" y="293" width="0.2406%" height="15" fill="rgb(232,32,22)" fg:x="825" fg:w="3"/><text x="66.4088%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="66.1588%" y="277" width="0.2406%" height="15" fill="rgb(210,169,6)" fg:x="825" fg:w="3"/><text x="66.4088%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="66.2390%" y="261" width="0.1604%" height="15" fill="rgb(229,28,12)" fg:x="826" fg:w="2"/><text x="66.4890%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="66.2390%" y="245" width="0.1604%" height="15" fill="rgb(229,78,10)" fg:x="826" fg:w="2"/><text x="66.4890%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.3192%" y="229" width="0.0802%" height="15" fill="rgb(223,139,54)" fg:x="827" fg:w="1"/><text x="66.5692%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="66.3994%" y="229" width="0.0802%" height="15" fill="rgb(207,110,4)" fg:x="828" fg:w="1"/><text x="66.6494%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.3994%" y="213" width="0.0802%" height="15" fill="rgb(248,30,41)" fg:x="828" fg:w="1"/><text x="66.6494%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.3994%" y="197" width="0.0802%" height="15" fill="rgb(235,54,25)" fg:x="828" fg:w="1"/><text x="66.6494%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="66.3994%" y="245" width="0.1604%" height="15" fill="rgb(213,107,41)" fg:x="828" fg:w="2"/><text x="66.6494%" y="255.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="66.4796%" y="229" width="0.0802%" height="15" fill="rgb(237,102,9)" fg:x="829" fg:w="1"/><text x="66.7296%" y="239.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (10 samples, 0.80%)</title><rect x="65.9182%" y="341" width="0.8019%" height="15" fill="rgb(252,137,49)" fg:x="822" fg:w="10"/><text x="66.1682%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="65.9182%" y="325" width="0.8019%" height="15" fill="rgb(233,202,33)" fg:x="822" fg:w="10"/><text x="66.1682%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="65.9984%" y="309" width="0.7217%" height="15" fill="rgb(223,14,51)" fg:x="823" fg:w="9"/><text x="66.2484%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="66.3994%" y="293" width="0.3208%" height="15" fill="rgb(248,70,23)" fg:x="828" fg:w="4"/><text x="66.6494%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="66.3994%" y="277" width="0.3208%" height="15" fill="rgb(209,207,47)" fg:x="828" fg:w="4"/><text x="66.6494%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="66.3994%" y="261" width="0.3208%" height="15" fill="rgb(245,124,2)" fg:x="828" fg:w="4"/><text x="66.6494%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.5597%" y="245" width="0.1604%" height="15" fill="rgb(249,208,11)" fg:x="830" fg:w="2"/><text x="66.8097%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.5597%" y="229" width="0.1604%" height="15" fill="rgb(247,112,7)" fg:x="830" fg:w="2"/><text x="66.8097%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.6399%" y="213" width="0.0802%" height="15" fill="rgb(209,192,31)" fg:x="831" fg:w="1"/><text x="66.8899%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.7201%" y="309" width="0.0802%" height="15" fill="rgb(236,55,19)" fg:x="832" fg:w="1"/><text x="66.9701%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (14 samples, 1.12%)</title><rect x="65.7578%" y="389" width="1.1227%" height="15" fill="rgb(252,89,41)" fg:x="820" fg:w="14"/><text x="66.0078%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.04%)</title><rect x="65.8380%" y="373" width="1.0425%" height="15" fill="rgb(220,172,14)" fg:x="821" fg:w="13"/><text x="66.0880%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="65.8380%" y="357" width="1.0425%" height="15" fill="rgb(252,65,2)" fg:x="821" fg:w="13"/><text x="66.0880%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.7201%" y="341" width="0.1604%" height="15" fill="rgb(250,20,8)" fg:x="832" fg:w="2"/><text x="66.9701%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.7201%" y="325" width="0.1604%" height="15" fill="rgb(234,149,13)" fg:x="832" fg:w="2"/><text x="66.9701%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="66.8003%" y="309" width="0.0802%" height="15" fill="rgb(223,219,12)" fg:x="833" fg:w="1"/><text x="67.0503%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="67.2815%" y="277" width="0.0802%" height="15" fill="rgb(234,13,49)" fg:x="839" fg:w="1"/><text x="67.5315%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.3617%" y="213" width="0.0802%" height="15" fill="rgb(214,41,25)" fg:x="840" fg:w="1"/><text x="67.6117%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.3617%" y="245" width="0.1604%" height="15" fill="rgb(232,198,52)" fg:x="840" fg:w="2"/><text x="67.6117%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.3617%" y="229" width="0.1604%" height="15" fill="rgb(236,111,46)" fg:x="840" fg:w="2"/><text x="67.6117%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4419%" y="213" width="0.0802%" height="15" fill="rgb(253,30,20)" fg:x="841" fg:w="1"/><text x="67.6919%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4419%" y="197" width="0.0802%" height="15" fill="rgb(247,141,17)" fg:x="841" fg:w="1"/><text x="67.6919%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4419%" y="181" width="0.0802%" height="15" fill="rgb(214,195,21)" fg:x="841" fg:w="1"/><text x="67.6919%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.6022%" y="229" width="0.0802%" height="15" fill="rgb(214,98,12)" fg:x="843" fg:w="1"/><text x="67.8522%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.6022%" y="213" width="0.0802%" height="15" fill="rgb(239,4,26)" fg:x="843" fg:w="1"/><text x="67.8522%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="67.3617%" y="261" width="0.4010%" height="15" fill="rgb(234,210,35)" fg:x="840" fg:w="5"/><text x="67.6117%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="67.5221%" y="245" width="0.2406%" height="15" fill="rgb(252,178,27)" fg:x="842" fg:w="3"/><text x="67.7721%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.6824%" y="229" width="0.0802%" height="15" fill="rgb(217,50,1)" fg:x="844" fg:w="1"/><text x="67.9324%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.6824%" y="213" width="0.0802%" height="15" fill="rgb(233,137,5)" fg:x="844" fg:w="1"/><text x="67.9324%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="67.2013%" y="293" width="0.6415%" height="15" fill="rgb(217,227,25)" fg:x="838" fg:w="8"/><text x="67.4513%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="67.3617%" y="277" width="0.4812%" height="15" fill="rgb(242,89,38)" fg:x="840" fg:w="6"/><text x="67.6117%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.7626%" y="261" width="0.0802%" height="15" fill="rgb(212,190,30)" fg:x="845" fg:w="1"/><text x="68.0126%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="67.7626%" y="245" width="0.0802%" height="15" fill="rgb(222,120,8)" fg:x="845" fg:w="1"/><text x="68.0126%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.8428%" y="293" width="0.0802%" height="15" fill="rgb(227,181,9)" fg:x="846" fg:w="1"/><text x="68.0928%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8428%" y="277" width="0.0802%" height="15" fill="rgb(222,125,29)" fg:x="846" fg:w="1"/><text x="68.0928%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (41 samples, 3.29%)</title><rect x="64.7153%" y="405" width="3.2879%" height="15" fill="rgb(215,153,31)" fg:x="807" fg:w="41"/><text x="64.9653%" y="415.50">eng..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.12%)</title><rect x="66.8805%" y="389" width="1.1227%" height="15" fill="rgb(228,77,30)" fg:x="834" fg:w="14"/><text x="67.1305%" y="399.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.12%)</title><rect x="66.8805%" y="373" width="1.1227%" height="15" fill="rgb(226,110,9)" fg:x="834" fg:w="14"/><text x="67.1305%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.12%)</title><rect x="66.8805%" y="357" width="1.1227%" height="15" fill="rgb(219,111,7)" fg:x="834" fg:w="14"/><text x="67.1305%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="66.8805%" y="341" width="1.1227%" height="15" fill="rgb(229,167,25)" fg:x="834" fg:w="14"/><text x="67.1305%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="67.0409%" y="325" width="0.9623%" height="15" fill="rgb(209,77,43)" fg:x="836" fg:w="12"/><text x="67.2909%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="67.1211%" y="309" width="0.8821%" height="15" fill="rgb(233,70,39)" fg:x="837" fg:w="11"/><text x="67.3711%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.9230%" y="293" width="0.0802%" height="15" fill="rgb(207,171,44)" fg:x="847" fg:w="1"/><text x="68.1730%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.9230%" y="277" width="0.0802%" height="15" fill="rgb(244,91,6)" fg:x="847" fg:w="1"/><text x="68.1730%" y="287.50"></text></g><g><title>engine::session::Session::load_entity (115 samples, 9.22%)</title><rect x="58.8613%" y="421" width="9.2221%" height="15" fill="rgb(234,136,12)" fg:x="734" fg:w="115"/><text x="59.1113%" y="431.50">engine::sessi..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="68.0032%" y="405" width="0.0802%" height="15" fill="rgb(216,210,38)" fg:x="848" fg:w="1"/><text x="68.2532%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.0032%" y="389" width="0.0802%" height="15" fill="rgb(241,227,7)" fg:x="848" fg:w="1"/><text x="68.2532%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.0032%" y="373" width="0.0802%" height="15" fill="rgb(241,222,11)" fg:x="848" fg:w="1"/><text x="68.2532%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3240%" y="341" width="0.0802%" height="15" fill="rgb(246,86,18)" fg:x="852" fg:w="1"/><text x="68.5740%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3240%" y="325" width="0.0802%" height="15" fill="rgb(224,151,49)" fg:x="852" fg:w="1"/><text x="68.5740%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.3240%" y="309" width="0.0802%" height="15" fill="rgb(235,4,41)" fg:x="852" fg:w="1"/><text x="68.5740%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.3240%" y="293" width="0.0802%" height="15" fill="rgb(218,30,52)" fg:x="852" fg:w="1"/><text x="68.5740%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.3240%" y="277" width="0.0802%" height="15" fill="rgb(205,124,51)" fg:x="852" fg:w="1"/><text x="68.5740%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3240%" y="261" width="0.0802%" height="15" fill="rgb(237,126,51)" fg:x="852" fg:w="1"/><text x="68.5740%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3240%" y="245" width="0.0802%" height="15" fill="rgb(225,32,46)" fg:x="852" fg:w="1"/><text x="68.5740%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.3240%" y="229" width="0.0802%" height="15" fill="rgb(251,60,49)" fg:x="852" fg:w="1"/><text x="68.5740%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.3240%" y="213" width="0.0802%" height="15" fill="rgb(234,18,23)" fg:x="852" fg:w="1"/><text x="68.5740%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.3240%" y="197" width="0.0802%" height="15" fill="rgb(234,25,23)" fg:x="852" fg:w="1"/><text x="68.5740%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.3240%" y="181" width="0.0802%" height="15" fill="rgb(210,43,52)" fg:x="852" fg:w="1"/><text x="68.5740%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3240%" y="165" width="0.0802%" height="15" fill="rgb(237,198,21)" fg:x="852" fg:w="1"/><text x="68.5740%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.0834%" y="389" width="0.4010%" height="15" fill="rgb(211,20,34)" fg:x="849" fg:w="5"/><text x="68.3334%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.0834%" y="373" width="0.4010%" height="15" fill="rgb(221,155,50)" fg:x="849" fg:w="5"/><text x="68.3334%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.1636%" y="357" width="0.3208%" height="15" fill="rgb(213,214,53)" fg:x="850" fg:w="4"/><text x="68.4136%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4042%" y="341" width="0.0802%" height="15" fill="rgb(215,229,48)" fg:x="853" fg:w="1"/><text x="68.6542%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.4844%" y="309" width="0.1604%" height="15" fill="rgb(243,88,5)" fg:x="854" fg:w="2"/><text x="68.7344%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.4844%" y="293" width="0.1604%" height="15" fill="rgb(216,199,8)" fg:x="854" fg:w="2"/><text x="68.7344%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.4844%" y="277" width="0.1604%" height="15" fill="rgb(241,22,4)" fg:x="854" fg:w="2"/><text x="68.7344%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.6447%" y="309" width="0.0802%" height="15" fill="rgb(209,190,22)" fg:x="856" fg:w="1"/><text x="68.8947%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.6447%" y="293" width="0.0802%" height="15" fill="rgb(251,138,45)" fg:x="856" fg:w="1"/><text x="68.8947%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.6447%" y="277" width="0.0802%" height="15" fill="rgb(219,111,22)" fg:x="856" fg:w="1"/><text x="68.8947%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.6447%" y="261" width="0.0802%" height="15" fill="rgb(253,29,49)" fg:x="856" fg:w="1"/><text x="68.8947%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.6447%" y="245" width="0.0802%" height="15" fill="rgb(238,129,49)" fg:x="856" fg:w="1"/><text x="68.8947%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.6447%" y="229" width="0.0802%" height="15" fill="rgb(240,26,41)" fg:x="856" fg:w="1"/><text x="68.8947%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.6447%" y="213" width="0.0802%" height="15" fill="rgb(221,47,33)" fg:x="856" fg:w="1"/><text x="68.8947%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.6447%" y="197" width="0.0802%" height="15" fill="rgb(216,200,17)" fg:x="856" fg:w="1"/><text x="68.8947%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.6447%" y="181" width="0.0802%" height="15" fill="rgb(230,151,26)" fg:x="856" fg:w="1"/><text x="68.8947%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.6447%" y="165" width="0.0802%" height="15" fill="rgb(242,182,16)" fg:x="856" fg:w="1"/><text x="68.8947%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.6447%" y="149" width="0.0802%" height="15" fill="rgb(236,35,53)" fg:x="856" fg:w="1"/><text x="68.8947%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.6447%" y="133" width="0.0802%" height="15" fill="rgb(214,180,28)" fg:x="856" fg:w="1"/><text x="68.8947%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.6447%" y="117" width="0.0802%" height="15" fill="rgb(208,173,36)" fg:x="856" fg:w="1"/><text x="68.8947%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.4844%" y="325" width="0.3208%" height="15" fill="rgb(218,39,15)" fg:x="854" fg:w="4"/><text x="68.7344%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.7249%" y="309" width="0.0802%" height="15" fill="rgb(213,145,15)" fg:x="857" fg:w="1"/><text x="68.9749%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.4844%" y="341" width="0.4010%" height="15" fill="rgb(242,110,37)" fg:x="854" fg:w="5"/><text x="68.7344%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8051%" y="325" width="0.0802%" height="15" fill="rgb(247,146,22)" fg:x="858" fg:w="1"/><text x="69.0551%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8051%" y="309" width="0.0802%" height="15" fill="rgb(215,191,7)" fg:x="858" fg:w="1"/><text x="69.0551%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.8051%" y="293" width="0.0802%" height="15" fill="rgb(240,158,1)" fg:x="858" fg:w="1"/><text x="69.0551%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.8051%" y="277" width="0.0802%" height="15" fill="rgb(241,78,32)" fg:x="858" fg:w="1"/><text x="69.0551%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.8051%" y="261" width="0.0802%" height="15" fill="rgb(248,83,10)" fg:x="858" fg:w="1"/><text x="69.0551%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.8051%" y="245" width="0.0802%" height="15" fill="rgb(241,52,0)" fg:x="858" fg:w="1"/><text x="69.0551%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.8051%" y="229" width="0.0802%" height="15" fill="rgb(238,37,13)" fg:x="858" fg:w="1"/><text x="69.0551%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.2061%" y="293" width="0.1604%" height="15" fill="rgb(242,194,17)" fg:x="863" fg:w="2"/><text x="69.4561%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2863%" y="277" width="0.0802%" height="15" fill="rgb(236,96,3)" fg:x="864" fg:w="1"/><text x="69.5363%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.3665%" y="197" width="0.0802%" height="15" fill="rgb(235,148,34)" fg:x="865" fg:w="1"/><text x="69.6165%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.3665%" y="181" width="0.0802%" height="15" fill="rgb(254,12,11)" fg:x="865" fg:w="1"/><text x="69.6165%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="69.3665%" y="293" width="0.2406%" height="15" fill="rgb(207,31,54)" fg:x="865" fg:w="3"/><text x="69.6165%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="69.3665%" y="277" width="0.2406%" height="15" fill="rgb(252,14,28)" fg:x="865" fg:w="3"/><text x="69.6165%" y="287.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="69.3665%" y="261" width="0.2406%" height="15" fill="rgb(252,108,36)" fg:x="865" fg:w="3"/><text x="69.6165%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="69.3665%" y="245" width="0.2406%" height="15" fill="rgb(214,149,7)" fg:x="865" fg:w="3"/><text x="69.6165%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.3665%" y="229" width="0.2406%" height="15" fill="rgb(243,94,12)" fg:x="865" fg:w="3"/><text x="69.6165%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (3 samples, 0.24%)</title><rect x="69.3665%" y="213" width="0.2406%" height="15" fill="rgb(208,36,10)" fg:x="865" fg:w="3"/><text x="69.6165%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="69.4467%" y="197" width="0.1604%" height="15" fill="rgb(233,185,52)" fg:x="866" fg:w="2"/><text x="69.6967%" y="207.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="69.4467%" y="181" width="0.1604%" height="15" fill="rgb(234,50,45)" fg:x="866" fg:w="2"/><text x="69.6967%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="68.8853%" y="341" width="0.8019%" height="15" fill="rgb(228,92,54)" fg:x="859" fg:w="10"/><text x="69.1353%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="69.0457%" y="325" width="0.6415%" height="15" fill="rgb(224,85,25)" fg:x="861" fg:w="8"/><text x="69.2957%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="69.1259%" y="309" width="0.5613%" height="15" fill="rgb(246,1,45)" fg:x="862" fg:w="7"/><text x="69.3759%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.6071%" y="293" width="0.0802%" height="15" fill="rgb(240,66,23)" fg:x="868" fg:w="1"/><text x="69.8571%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.6071%" y="277" width="0.0802%" height="15" fill="rgb(222,96,27)" fg:x="868" fg:w="1"/><text x="69.8571%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6071%" y="261" width="0.0802%" height="15" fill="rgb(212,136,10)" fg:x="868" fg:w="1"/><text x="69.8571%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="68.4844%" y="389" width="1.2831%" height="15" fill="rgb(226,192,50)" fg:x="854" fg:w="16"/><text x="68.7344%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.28%)</title><rect x="68.4844%" y="373" width="1.2831%" height="15" fill="rgb(241,182,31)" fg:x="854" fg:w="16"/><text x="68.7344%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (16 samples, 1.28%)</title><rect x="68.4844%" y="357" width="1.2831%" height="15" fill="rgb(219,205,47)" fg:x="854" fg:w="16"/><text x="68.7344%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.6872%" y="341" width="0.0802%" height="15" fill="rgb(207,96,14)" fg:x="869" fg:w="1"/><text x="69.9372%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.6872%" y="325" width="0.0802%" height="15" fill="rgb(216,119,9)" fg:x="869" fg:w="1"/><text x="69.9372%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6872%" y="309" width="0.0802%" height="15" fill="rgb(235,62,36)" fg:x="869" fg:w="1"/><text x="69.9372%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.6872%" y="293" width="0.0802%" height="15" fill="rgb(214,41,27)" fg:x="869" fg:w="1"/><text x="69.9372%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6872%" y="277" width="0.0802%" height="15" fill="rgb(214,174,37)" fg:x="869" fg:w="1"/><text x="69.9372%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6872%" y="261" width="0.0802%" height="15" fill="rgb(212,11,25)" fg:x="869" fg:w="1"/><text x="69.9372%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8476%" y="325" width="0.0802%" height="15" fill="rgb(217,71,35)" fg:x="871" fg:w="1"/><text x="70.0976%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.8476%" y="357" width="0.1604%" height="15" fill="rgb(234,152,9)" fg:x="871" fg:w="2"/><text x="70.0976%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="69.8476%" y="341" width="0.1604%" height="15" fill="rgb(228,32,51)" fg:x="871" fg:w="2"/><text x="70.0976%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.9278%" y="325" width="0.0802%" height="15" fill="rgb(209,14,47)" fg:x="872" fg:w="1"/><text x="70.1778%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.0080%" y="341" width="0.0802%" height="15" fill="rgb(218,201,17)" fg:x="873" fg:w="1"/><text x="70.2580%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.0080%" y="325" width="0.0802%" height="15" fill="rgb(218,98,15)" fg:x="873" fg:w="1"/><text x="70.2580%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.0080%" y="309" width="0.0802%" height="15" fill="rgb(233,202,29)" fg:x="873" fg:w="1"/><text x="70.2580%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="70.0882%" y="293" width="0.0802%" height="15" fill="rgb(207,196,44)" fg:x="874" fg:w="1"/><text x="70.3382%" y="303.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="70.0882%" y="277" width="0.0802%" height="15" fill="rgb(218,63,34)" fg:x="874" fg:w="1"/><text x="70.3382%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.0882%" y="261" width="0.0802%" height="15" fill="rgb(209,10,5)" fg:x="874" fg:w="1"/><text x="70.3382%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.0882%" y="245" width="0.0802%" height="15" fill="rgb(224,36,28)" fg:x="874" fg:w="1"/><text x="70.3382%" y="255.50"></text></g><g><title>engine::session::internal::Added::find_refs (27 samples, 2.17%)</title><rect x="68.0834%" y="421" width="2.1652%" height="15" fill="rgb(249,178,7)" fg:x="849" fg:w="27"/><text x="68.3334%" y="431.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (27 samples, 2.17%)</title><rect x="68.0834%" y="405" width="2.1652%" height="15" fill="rgb(253,163,10)" fg:x="849" fg:w="27"/><text x="68.3334%" y="415.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="69.7674%" y="389" width="0.4812%" height="15" fill="rgb(245,67,46)" fg:x="870" fg:w="6"/><text x="70.0174%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="69.7674%" y="373" width="0.4812%" height="15" fill="rgb(225,14,18)" fg:x="870" fg:w="6"/><text x="70.0174%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (3 samples, 0.24%)</title><rect x="70.0080%" y="357" width="0.2406%" height="15" fill="rgb(217,41,54)" fg:x="873" fg:w="3"/><text x="70.2580%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="70.0882%" y="341" width="0.1604%" height="15" fill="rgb(222,111,11)" fg:x="874" fg:w="2"/><text x="70.3382%" y="351.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="70.0882%" y="325" width="0.1604%" height="15" fill="rgb(211,85,31)" fg:x="874" fg:w="2"/><text x="70.3382%" y="335.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="70.0882%" y="309" width="0.1604%" height="15" fill="rgb(223,29,26)" fg:x="874" fg:w="2"/><text x="70.3382%" y="319.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="70.1684%" y="293" width="0.0802%" height="15" fill="rgb(236,124,50)" fg:x="875" fg:w="1"/><text x="70.4184%" y="303.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.08%)</title><rect x="70.1684%" y="277" width="0.0802%" height="15" fill="rgb(219,148,15)" fg:x="875" fg:w="1"/><text x="70.4184%" y="287.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.08%)</title><rect x="70.1684%" y="261" width="0.0802%" height="15" fill="rgb(248,159,33)" fg:x="875" fg:w="1"/><text x="70.4184%" y="271.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.08%)</title><rect x="70.1684%" y="245" width="0.0802%" height="15" fill="rgb(252,65,8)" fg:x="875" fg:w="1"/><text x="70.4184%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.2486%" y="405" width="0.1604%" height="15" fill="rgb(236,45,7)" fg:x="876" fg:w="2"/><text x="70.4986%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.2486%" y="389" width="0.1604%" height="15" fill="rgb(244,3,48)" fg:x="876" fg:w="2"/><text x="70.4986%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.2486%" y="373" width="0.1604%" height="15" fill="rgb(224,123,53)" fg:x="876" fg:w="2"/><text x="70.4986%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.2486%" y="357" width="0.1604%" height="15" fill="rgb(223,173,15)" fg:x="876" fg:w="2"/><text x="70.4986%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3288%" y="341" width="0.0802%" height="15" fill="rgb(254,181,5)" fg:x="877" fg:w="1"/><text x="70.5788%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3288%" y="325" width="0.0802%" height="15" fill="rgb(243,124,33)" fg:x="877" fg:w="1"/><text x="70.5788%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3288%" y="309" width="0.0802%" height="15" fill="rgb(253,220,11)" fg:x="877" fg:w="1"/><text x="70.5788%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.3288%" y="293" width="0.0802%" height="15" fill="rgb(217,14,4)" fg:x="877" fg:w="1"/><text x="70.5788%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.3288%" y="277" width="0.0802%" height="15" fill="rgb(209,196,12)" fg:x="877" fg:w="1"/><text x="70.5788%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.3288%" y="261" width="0.0802%" height="15" fill="rgb(237,108,29)" fg:x="877" fg:w="1"/><text x="70.5788%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3288%" y="245" width="0.0802%" height="15" fill="rgb(216,173,20)" fg:x="877" fg:w="1"/><text x="70.5788%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3288%" y="229" width="0.0802%" height="15" fill="rgb(245,27,6)" fg:x="877" fg:w="1"/><text x="70.5788%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.3288%" y="213" width="0.0802%" height="15" fill="rgb(210,181,20)" fg:x="877" fg:w="1"/><text x="70.5788%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.3288%" y="197" width="0.0802%" height="15" fill="rgb(235,213,1)" fg:x="877" fg:w="1"/><text x="70.5788%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.3288%" y="181" width="0.0802%" height="15" fill="rgb(239,68,43)" fg:x="877" fg:w="1"/><text x="70.5788%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.3288%" y="165" width="0.0802%" height="15" fill="rgb(254,137,43)" fg:x="877" fg:w="1"/><text x="70.5788%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3288%" y="149" width="0.0802%" height="15" fill="rgb(252,170,38)" fg:x="877" fg:w="1"/><text x="70.5788%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.4090%" y="325" width="0.0802%" height="15" fill="rgb(234,21,42)" fg:x="878" fg:w="1"/><text x="70.6590%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.6496%" y="277" width="0.0802%" height="15" fill="rgb(216,145,40)" fg:x="881" fg:w="1"/><text x="70.8996%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.6496%" y="261" width="0.0802%" height="15" fill="rgb(251,73,9)" fg:x="881" fg:w="1"/><text x="70.8996%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="70.6496%" y="245" width="0.0802%" height="15" fill="rgb(242,54,6)" fg:x="881" fg:w="1"/><text x="70.8996%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.6496%" y="229" width="0.0802%" height="15" fill="rgb(239,70,7)" fg:x="881" fg:w="1"/><text x="70.8996%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="70.4892%" y="309" width="0.3208%" height="15" fill="rgb(216,159,35)" fg:x="879" fg:w="4"/><text x="70.7392%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="70.4892%" y="293" width="0.3208%" height="15" fill="rgb(224,50,39)" fg:x="879" fg:w="4"/><text x="70.7392%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7298%" y="277" width="0.0802%" height="15" fill="rgb(235,9,35)" fg:x="882" fg:w="1"/><text x="70.9798%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7298%" y="261" width="0.0802%" height="15" fill="rgb(239,34,21)" fg:x="882" fg:w="1"/><text x="70.9798%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8099%" y="309" width="0.0802%" height="15" fill="rgb(218,162,43)" fg:x="883" fg:w="1"/><text x="71.0599%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.8099%" y="293" width="0.0802%" height="15" fill="rgb(219,89,33)" fg:x="883" fg:w="1"/><text x="71.0599%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8099%" y="277" width="0.0802%" height="15" fill="rgb(226,125,37)" fg:x="883" fg:w="1"/><text x="71.0599%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8099%" y="261" width="0.0802%" height="15" fill="rgb(233,149,30)" fg:x="883" fg:w="1"/><text x="71.0599%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8099%" y="245" width="0.0802%" height="15" fill="rgb(236,8,18)" fg:x="883" fg:w="1"/><text x="71.0599%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="71.1307%" y="261" width="0.0802%" height="15" fill="rgb(205,176,9)" fg:x="887" fg:w="1"/><text x="71.3807%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="71.1307%" y="245" width="0.0802%" height="15" fill="rgb(252,103,44)" fg:x="887" fg:w="1"/><text x="71.3807%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.1307%" y="229" width="0.0802%" height="15" fill="rgb(207,68,53)" fg:x="887" fg:w="1"/><text x="71.3807%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.1307%" y="213" width="0.0802%" height="15" fill="rgb(218,193,48)" fg:x="887" fg:w="1"/><text x="71.3807%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.1307%" y="197" width="0.0802%" height="15" fill="rgb(234,121,52)" fg:x="887" fg:w="1"/><text x="71.3807%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (11 samples, 0.88%)</title><rect x="70.4090%" y="357" width="0.8821%" height="15" fill="rgb(227,218,49)" fg:x="878" fg:w="11"/><text x="70.6590%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="70.4090%" y="341" width="0.8821%" height="15" fill="rgb(221,8,7)" fg:x="878" fg:w="11"/><text x="70.6590%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.80%)</title><rect x="70.4892%" y="325" width="0.8019%" height="15" fill="rgb(217,151,36)" fg:x="879" fg:w="10"/><text x="70.7392%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="70.8901%" y="309" width="0.4010%" height="15" fill="rgb(213,71,5)" fg:x="884" fg:w="5"/><text x="71.1401%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="70.9703%" y="293" width="0.3208%" height="15" fill="rgb(225,145,43)" fg:x="885" fg:w="4"/><text x="71.2203%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="71.1307%" y="277" width="0.1604%" height="15" fill="rgb(235,118,19)" fg:x="887" fg:w="2"/><text x="71.3807%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.2109%" y="261" width="0.0802%" height="15" fill="rgb(214,102,36)" fg:x="888" fg:w="1"/><text x="71.4609%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.2109%" y="245" width="0.0802%" height="15" fill="rgb(220,56,43)" fg:x="888" fg:w="1"/><text x="71.4609%" y="255.50"></text></g><g><title>kernel::model::entity::Entity::from_value (12 samples, 0.96%)</title><rect x="70.4090%" y="405" width="0.9623%" height="15" fill="rgb(246,136,46)" fg:x="878" fg:w="12"/><text x="70.6590%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="70.4090%" y="389" width="0.9623%" height="15" fill="rgb(249,99,12)" fg:x="878" fg:w="12"/><text x="70.6590%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="70.4090%" y="373" width="0.9623%" height="15" fill="rgb(224,31,42)" fg:x="878" fg:w="12"/><text x="70.6590%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.2911%" y="357" width="0.0802%" height="15" fill="rgb(208,96,21)" fg:x="889" fg:w="1"/><text x="71.5411%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.2911%" y="341" width="0.0802%" height="15" fill="rgb(237,229,7)" fg:x="889" fg:w="1"/><text x="71.5411%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="71.2911%" y="325" width="0.0802%" height="15" fill="rgb(210,12,6)" fg:x="889" fg:w="1"/><text x="71.5411%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.3713%" y="261" width="0.0802%" height="15" fill="rgb(240,9,34)" fg:x="890" fg:w="1"/><text x="71.6213%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.3713%" y="245" width="0.0802%" height="15" fill="rgb(211,68,37)" fg:x="890" fg:w="1"/><text x="71.6213%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3713%" y="229" width="0.0802%" height="15" fill="rgb(249,138,50)" fg:x="890" fg:w="1"/><text x="71.6213%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3713%" y="213" width="0.0802%" height="15" fill="rgb(243,185,40)" fg:x="890" fg:w="1"/><text x="71.6213%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3713%" y="197" width="0.0802%" height="15" fill="rgb(242,92,35)" fg:x="890" fg:w="1"/><text x="71.6213%" y="207.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="70.2486%" y="421" width="1.2831%" height="15" fill="rgb(244,98,5)" fg:x="876" fg:w="16"/><text x="70.4986%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="71.3713%" y="405" width="0.1604%" height="15" fill="rgb(228,186,29)" fg:x="890" fg:w="2"/><text x="71.6213%" y="415.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="71.3713%" y="389" width="0.1604%" height="15" fill="rgb(253,7,44)" fg:x="890" fg:w="2"/><text x="71.6213%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="71.3713%" y="373" width="0.1604%" height="15" fill="rgb(216,11,45)" fg:x="890" fg:w="2"/><text x="71.6213%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.3713%" y="357" width="0.1604%" height="15" fill="rgb(205,67,3)" fg:x="890" fg:w="2"/><text x="71.6213%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="71.3713%" y="341" width="0.1604%" height="15" fill="rgb(250,18,3)" fg:x="890" fg:w="2"/><text x="71.6213%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.3713%" y="325" width="0.1604%" height="15" fill="rgb(241,222,43)" fg:x="890" fg:w="2"/><text x="71.6213%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="71.3713%" y="309" width="0.1604%" height="15" fill="rgb(233,115,3)" fg:x="890" fg:w="2"/><text x="71.6213%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.3713%" y="293" width="0.1604%" height="15" fill="rgb(215,165,25)" fg:x="890" fg:w="2"/><text x="71.6213%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="71.3713%" y="277" width="0.1604%" height="15" fill="rgb(234,179,6)" fg:x="890" fg:w="2"/><text x="71.6213%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.4515%" y="261" width="0.0802%" height="15" fill="rgb(215,82,23)" fg:x="891" fg:w="1"/><text x="71.7015%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.4515%" y="245" width="0.0802%" height="15" fill="rgb(211,47,18)" fg:x="891" fg:w="1"/><text x="71.7015%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4515%" y="229" width="0.0802%" height="15" fill="rgb(248,17,9)" fg:x="891" fg:w="1"/><text x="71.7015%" y="239.50"></text></g><g><title>engine::session::Session::load_entity (159 samples, 12.75%)</title><rect x="58.8613%" y="437" width="12.7506%" height="15" fill="rgb(210,212,12)" fg:x="734" fg:w="159"/><text x="59.1113%" y="447.50">engine::session::Se..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="71.5317%" y="421" width="0.0802%" height="15" fill="rgb(230,135,45)" fg:x="892" fg:w="1"/><text x="71.7817%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="71.6119%" y="421" width="0.1604%" height="15" fill="rgb(214,121,41)" fg:x="893" fg:w="2"/><text x="71.8619%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6921%" y="405" width="0.0802%" height="15" fill="rgb(239,165,45)" fg:x="894" fg:w="1"/><text x="71.9421%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7723%" y="389" width="0.0802%" height="15" fill="rgb(214,85,51)" fg:x="895" fg:w="1"/><text x="72.0223%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7723%" y="373" width="0.0802%" height="15" fill="rgb(223,90,27)" fg:x="895" fg:w="1"/><text x="72.0223%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7723%" y="357" width="0.0802%" height="15" fill="rgb(244,84,11)" fg:x="895" fg:w="1"/><text x="72.0223%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.8524%" y="389" width="0.0802%" height="15" fill="rgb(253,41,47)" fg:x="896" fg:w="1"/><text x="72.1024%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="71.8524%" y="373" width="0.0802%" height="15" fill="rgb(232,39,5)" fg:x="896" fg:w="1"/><text x="72.1024%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.0128%" y="357" width="0.0802%" height="15" fill="rgb(211,93,4)" fg:x="898" fg:w="1"/><text x="72.2628%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0128%" y="341" width="0.0802%" height="15" fill="rgb(219,50,49)" fg:x="898" fg:w="1"/><text x="72.2628%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.0930%" y="325" width="0.0802%" height="15" fill="rgb(232,80,19)" fg:x="899" fg:w="1"/><text x="72.3430%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.0930%" y="309" width="0.0802%" height="15" fill="rgb(215,227,39)" fg:x="899" fg:w="1"/><text x="72.3430%" y="319.50"></text></g><g><title>engine::users::model::username_to_key (8 samples, 0.64%)</title><rect x="71.6119%" y="437" width="0.6415%" height="15" fill="rgb(211,99,12)" fg:x="893" fg:w="8"/><text x="71.8619%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="71.7723%" y="421" width="0.4812%" height="15" fill="rgb(214,158,5)" fg:x="895" fg:w="6"/><text x="72.0223%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="71.7723%" y="405" width="0.4812%" height="15" fill="rgb(242,19,53)" fg:x="895" fg:w="6"/><text x="72.0223%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="71.9326%" y="389" width="0.3208%" height="15" fill="rgb(208,18,20)" fg:x="897" fg:w="4"/><text x="72.1826%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="71.9326%" y="373" width="0.3208%" height="15" fill="rgb(250,44,11)" fg:x="897" fg:w="4"/><text x="72.1826%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="72.0930%" y="357" width="0.1604%" height="15" fill="rgb(238,159,13)" fg:x="899" fg:w="2"/><text x="72.3430%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.0930%" y="341" width="0.1604%" height="15" fill="rgb(231,74,18)" fg:x="899" fg:w="2"/><text x="72.3430%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1732%" y="325" width="0.0802%" height="15" fill="rgb(229,219,45)" fg:x="900" fg:w="1"/><text x="72.4232%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="72.2534%" y="405" width="0.1604%" height="15" fill="rgb(210,221,1)" fg:x="901" fg:w="2"/><text x="72.5034%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.4138%" y="389" width="0.0802%" height="15" fill="rgb(209,60,51)" fg:x="903" fg:w="1"/><text x="72.6638%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.4940%" y="389" width="0.0802%" height="15" fill="rgb(252,97,34)" fg:x="904" fg:w="1"/><text x="72.7440%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.4940%" y="373" width="0.0802%" height="15" fill="rgb(243,211,37)" fg:x="904" fg:w="1"/><text x="72.7440%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="72.2534%" y="421" width="0.5613%" height="15" fill="rgb(210,229,37)" fg:x="901" fg:w="7"/><text x="72.5034%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="72.4138%" y="405" width="0.4010%" height="15" fill="rgb(220,208,43)" fg:x="903" fg:w="5"/><text x="72.6638%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="72.5742%" y="389" width="0.2406%" height="15" fill="rgb(218,118,50)" fg:x="905" fg:w="3"/><text x="72.8242%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.5742%" y="373" width="0.2406%" height="15" fill="rgb(254,169,52)" fg:x="905" fg:w="3"/><text x="72.8242%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="72.5742%" y="357" width="0.2406%" height="15" fill="rgb(221,214,37)" fg:x="905" fg:w="3"/><text x="72.8242%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.5742%" y="341" width="0.2406%" height="15" fill="rgb(254,186,32)" fg:x="905" fg:w="3"/><text x="72.8242%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="72.5742%" y="325" width="0.2406%" height="15" fill="rgb(215,144,43)" fg:x="905" fg:w="3"/><text x="72.8242%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.6544%" y="309" width="0.1604%" height="15" fill="rgb(252,21,46)" fg:x="906" fg:w="2"/><text x="72.9044%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.7346%" y="293" width="0.0802%" height="15" fill="rgb(207,166,46)" fg:x="907" fg:w="1"/><text x="72.9846%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.7346%" y="277" width="0.0802%" height="15" fill="rgb(253,37,49)" fg:x="907" fg:w="1"/><text x="72.9846%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.8148%" y="389" width="0.1604%" height="15" fill="rgb(222,97,20)" fg:x="908" fg:w="2"/><text x="73.0648%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.8148%" y="373" width="0.1604%" height="15" fill="rgb(244,181,26)" fg:x="908" fg:w="2"/><text x="73.0648%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8949%" y="357" width="0.0802%" height="15" fill="rgb(241,22,29)" fg:x="909" fg:w="1"/><text x="73.1449%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8949%" y="341" width="0.0802%" height="15" fill="rgb(206,200,43)" fg:x="909" fg:w="1"/><text x="73.1449%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8949%" y="325" width="0.0802%" height="15" fill="rgb(226,224,43)" fg:x="909" fg:w="1"/><text x="73.1449%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.8949%" y="309" width="0.0802%" height="15" fill="rgb(253,129,28)" fg:x="909" fg:w="1"/><text x="73.1449%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.8949%" y="293" width="0.0802%" height="15" fill="rgb(252,99,33)" fg:x="909" fg:w="1"/><text x="73.1449%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.8949%" y="277" width="0.0802%" height="15" fill="rgb(208,123,45)" fg:x="909" fg:w="1"/><text x="73.1449%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.8949%" y="261" width="0.0802%" height="15" fill="rgb(251,106,12)" fg:x="909" fg:w="1"/><text x="73.1449%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.8949%" y="245" width="0.0802%" height="15" fill="rgb(240,209,35)" fg:x="909" fg:w="1"/><text x="73.1449%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.8949%" y="229" width="0.0802%" height="15" fill="rgb(214,52,50)" fg:x="909" fg:w="1"/><text x="73.1449%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.8949%" y="213" width="0.0802%" height="15" fill="rgb(234,119,4)" fg:x="909" fg:w="1"/><text x="73.1449%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.8949%" y="197" width="0.0802%" height="15" fill="rgb(228,181,36)" fg:x="909" fg:w="1"/><text x="73.1449%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.8949%" y="181" width="0.0802%" height="15" fill="rgb(213,171,42)" fg:x="909" fg:w="1"/><text x="73.1449%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8949%" y="165" width="0.0802%" height="15" fill="rgb(239,14,41)" fg:x="909" fg:w="1"/><text x="73.1449%" y="175.50"></text></g><g><title>kernel::model::entry::Entry::new (10 samples, 0.80%)</title><rect x="72.2534%" y="437" width="0.8019%" height="15" fill="rgb(239,111,46)" fg:x="901" fg:w="10"/><text x="72.5034%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="72.8148%" y="421" width="0.2406%" height="15" fill="rgb(214,72,7)" fg:x="908" fg:w="3"/><text x="73.0648%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="72.8148%" y="405" width="0.2406%" height="15" fill="rgb(221,114,1)" fg:x="908" fg:w="3"/><text x="73.0648%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.9751%" y="389" width="0.0802%" height="15" fill="rgb(213,143,14)" fg:x="910" fg:w="1"/><text x="73.2251%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9751%" y="373" width="0.0802%" height="15" fill="rgb(220,221,53)" fg:x="910" fg:w="1"/><text x="73.2251%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.9751%" y="357" width="0.0802%" height="15" fill="rgb(236,189,27)" fg:x="910" fg:w="1"/><text x="73.2251%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9751%" y="341" width="0.0802%" height="15" fill="rgb(252,139,49)" fg:x="910" fg:w="1"/><text x="73.2251%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.9751%" y="325" width="0.0802%" height="15" fill="rgb(231,158,33)" fg:x="910" fg:w="1"/><text x="73.2251%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9751%" y="309" width="0.0802%" height="15" fill="rgb(207,201,15)" fg:x="910" fg:w="1"/><text x="73.2251%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2157%" y="341" width="0.0802%" height="15" fill="rgb(218,43,48)" fg:x="913" fg:w="1"/><text x="73.4657%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2157%" y="325" width="0.0802%" height="15" fill="rgb(244,63,52)" fg:x="913" fg:w="1"/><text x="73.4657%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2157%" y="309" width="0.0802%" height="15" fill="rgb(236,60,17)" fg:x="913" fg:w="1"/><text x="73.4657%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2157%" y="293" width="0.0802%" height="15" fill="rgb(205,206,29)" fg:x="913" fg:w="1"/><text x="73.4657%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.2157%" y="277" width="0.0802%" height="15" fill="rgb(205,209,35)" fg:x="913" fg:w="1"/><text x="73.4657%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.2157%" y="261" width="0.0802%" height="15" fill="rgb(227,112,14)" fg:x="913" fg:w="1"/><text x="73.4657%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.2157%" y="245" width="0.0802%" height="15" fill="rgb(248,151,9)" fg:x="913" fg:w="1"/><text x="73.4657%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2157%" y="229" width="0.0802%" height="15" fill="rgb(247,45,40)" fg:x="913" fg:w="1"/><text x="73.4657%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2157%" y="213" width="0.0802%" height="15" fill="rgb(232,185,16)" fg:x="913" fg:w="1"/><text x="73.4657%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.2157%" y="197" width="0.0802%" height="15" fill="rgb(215,45,44)" fg:x="913" fg:w="1"/><text x="73.4657%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.2157%" y="181" width="0.0802%" height="15" fill="rgb(206,69,32)" fg:x="913" fg:w="1"/><text x="73.4657%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.2157%" y="165" width="0.0802%" height="15" fill="rgb(233,98,50)" fg:x="913" fg:w="1"/><text x="73.4657%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.2157%" y="149" width="0.0802%" height="15" fill="rgb(232,217,52)" fg:x="913" fg:w="1"/><text x="73.4657%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.2157%" y="133" width="0.0802%" height="15" fill="rgb(250,42,51)" fg:x="913" fg:w="1"/><text x="73.4657%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.2157%" y="389" width="0.1604%" height="15" fill="rgb(241,200,26)" fg:x="913" fg:w="2"/><text x="73.4657%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.2157%" y="373" width="0.1604%" height="15" fill="rgb(207,10,32)" fg:x="913" fg:w="2"/><text x="73.4657%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.2157%" y="357" width="0.1604%" height="15" fill="rgb(214,63,15)" fg:x="913" fg:w="2"/><text x="73.4657%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2959%" y="341" width="0.0802%" height="15" fill="rgb(234,176,14)" fg:x="914" fg:w="1"/><text x="73.5459%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2959%" y="325" width="0.0802%" height="15" fill="rgb(226,104,52)" fg:x="914" fg:w="1"/><text x="73.5459%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.2959%" y="309" width="0.0802%" height="15" fill="rgb(211,222,1)" fg:x="914" fg:w="1"/><text x="73.5459%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.2959%" y="293" width="0.0802%" height="15" fill="rgb(237,7,3)" fg:x="914" fg:w="1"/><text x="73.5459%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.2959%" y="277" width="0.0802%" height="15" fill="rgb(218,143,7)" fg:x="914" fg:w="1"/><text x="73.5459%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2959%" y="261" width="0.0802%" height="15" fill="rgb(208,25,22)" fg:x="914" fg:w="1"/><text x="73.5459%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2959%" y="245" width="0.0802%" height="15" fill="rgb(228,127,16)" fg:x="914" fg:w="1"/><text x="73.5459%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.2959%" y="229" width="0.0802%" height="15" fill="rgb(237,86,27)" fg:x="914" fg:w="1"/><text x="73.5459%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.2959%" y="213" width="0.0802%" height="15" fill="rgb(207,125,19)" fg:x="914" fg:w="1"/><text x="73.5459%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.2959%" y="197" width="0.0802%" height="15" fill="rgb(243,195,0)" fg:x="914" fg:w="1"/><text x="73.5459%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.2959%" y="181" width="0.0802%" height="15" fill="rgb(230,95,18)" fg:x="914" fg:w="1"/><text x="73.5459%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.2959%" y="165" width="0.0802%" height="15" fill="rgb(232,157,21)" fg:x="914" fg:w="1"/><text x="73.5459%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3761%" y="373" width="0.0802%" height="15" fill="rgb(212,120,50)" fg:x="915" fg:w="1"/><text x="73.6261%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="73.4563%" y="373" width="0.0802%" height="15" fill="rgb(222,204,44)" fg:x="916" fg:w="1"/><text x="73.7063%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4563%" y="357" width="0.0802%" height="15" fill="rgb(236,6,33)" fg:x="916" fg:w="1"/><text x="73.7063%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5365%" y="357" width="0.0802%" height="15" fill="rgb(247,11,38)" fg:x="917" fg:w="1"/><text x="73.7865%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="73.3761%" y="389" width="0.3208%" height="15" fill="rgb(215,111,0)" fg:x="915" fg:w="4"/><text x="73.6261%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="73.5365%" y="373" width="0.1604%" height="15" fill="rgb(211,65,46)" fg:x="917" fg:w="2"/><text x="73.7865%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.6167%" y="357" width="0.0802%" height="15" fill="rgb(216,5,12)" fg:x="918" fg:w="1"/><text x="73.8667%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.6167%" y="341" width="0.0802%" height="15" fill="rgb(226,7,2)" fg:x="918" fg:w="1"/><text x="73.8667%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.6167%" y="325" width="0.0802%" height="15" fill="rgb(242,116,12)" fg:x="918" fg:w="1"/><text x="73.8667%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6167%" y="309" width="0.0802%" height="15" fill="rgb(249,209,7)" fg:x="918" fg:w="1"/><text x="73.8667%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.9374%" y="293" width="0.0802%" height="15" fill="rgb(232,73,17)" fg:x="922" fg:w="1"/><text x="74.1874%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.9374%" y="277" width="0.0802%" height="15" fill="rgb(214,13,32)" fg:x="922" fg:w="1"/><text x="74.1874%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.9374%" y="261" width="0.0802%" height="15" fill="rgb(221,125,10)" fg:x="922" fg:w="1"/><text x="74.1874%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.9374%" y="245" width="0.0802%" height="15" fill="rgb(246,7,44)" fg:x="922" fg:w="1"/><text x="74.1874%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="74.0176%" y="293" width="0.1604%" height="15" fill="rgb(239,18,35)" fg:x="923" fg:w="2"/><text x="74.2676%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.0176%" y="277" width="0.1604%" height="15" fill="rgb(250,222,16)" fg:x="923" fg:w="2"/><text x="74.2676%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.0978%" y="261" width="0.0802%" height="15" fill="rgb(219,100,8)" fg:x="924" fg:w="1"/><text x="74.3478%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.0978%" y="245" width="0.0802%" height="15" fill="rgb(240,62,13)" fg:x="924" fg:w="1"/><text x="74.3478%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.1780%" y="261" width="0.0802%" height="15" fill="rgb(253,194,2)" fg:x="925" fg:w="1"/><text x="74.4280%" y="271.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="74.1780%" y="245" width="0.0802%" height="15" fill="rgb(235,58,31)" fg:x="925" fg:w="1"/><text x="74.4280%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="74.2582%" y="261" width="0.1604%" height="15" fill="rgb(231,37,11)" fg:x="926" fg:w="2"/><text x="74.5082%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.2582%" y="245" width="0.1604%" height="15" fill="rgb(235,133,0)" fg:x="926" fg:w="2"/><text x="74.5082%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.2582%" y="229" width="0.1604%" height="15" fill="rgb(212,185,40)" fg:x="926" fg:w="2"/><text x="74.5082%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="74.3384%" y="213" width="0.0802%" height="15" fill="rgb(216,68,42)" fg:x="927" fg:w="1"/><text x="74.5884%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3384%" y="197" width="0.0802%" height="15" fill="rgb(239,81,4)" fg:x="927" fg:w="1"/><text x="74.5884%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.3384%" y="181" width="0.0802%" height="15" fill="rgb(206,86,6)" fg:x="927" fg:w="1"/><text x="74.5884%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.3384%" y="165" width="0.0802%" height="15" fill="rgb(249,95,27)" fg:x="927" fg:w="1"/><text x="74.5884%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (8 samples, 0.64%)</title><rect x="73.8573%" y="341" width="0.6415%" height="15" fill="rgb(205,155,45)" fg:x="921" fg:w="8"/><text x="74.1073%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="73.8573%" y="325" width="0.6415%" height="15" fill="rgb(213,55,42)" fg:x="921" fg:w="8"/><text x="74.1073%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="73.9374%" y="309" width="0.5613%" height="15" fill="rgb(249,197,4)" fg:x="922" fg:w="7"/><text x="74.1874%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="74.1780%" y="293" width="0.3208%" height="15" fill="rgb(212,128,32)" fg:x="925" fg:w="4"/><text x="74.4280%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="74.1780%" y="277" width="0.3208%" height="15" fill="rgb(252,47,30)" fg:x="925" fg:w="4"/><text x="74.4280%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4186%" y="261" width="0.0802%" height="15" fill="rgb(209,79,18)" fg:x="928" fg:w="1"/><text x="74.6686%" y="271.50"></text></g><g><title>kernel::model::entity::Entity::from_value (11 samples, 0.88%)</title><rect x="73.6969%" y="389" width="0.8821%" height="15" fill="rgb(225,81,38)" fg:x="919" fg:w="11"/><text x="73.9469%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="73.6969%" y="373" width="0.8821%" height="15" fill="rgb(205,95,16)" fg:x="919" fg:w="11"/><text x="73.9469%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="73.6969%" y="357" width="0.8821%" height="15" fill="rgb(214,30,4)" fg:x="919" fg:w="11"/><text x="73.9469%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4988%" y="341" width="0.0802%" height="15" fill="rgb(232,137,22)" fg:x="929" fg:w="1"/><text x="74.7488%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4988%" y="325" width="0.0802%" height="15" fill="rgb(232,156,19)" fg:x="929" fg:w="1"/><text x="74.7488%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="74.5790%" y="293" width="0.4812%" height="15" fill="rgb(248,157,26)" fg:x="930" fg:w="6"/><text x="74.8290%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="74.6592%" y="277" width="0.4010%" height="15" fill="rgb(242,24,3)" fg:x="931" fg:w="5"/><text x="74.9092%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="74.7394%" y="261" width="0.3208%" height="15" fill="rgb(218,195,48)" fg:x="932" fg:w="4"/><text x="74.9894%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="74.7394%" y="245" width="0.3208%" height="15" fill="rgb(214,193,36)" fg:x="932" fg:w="4"/><text x="74.9894%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.8998%" y="229" width="0.1604%" height="15" fill="rgb(242,110,40)" fg:x="934" fg:w="2"/><text x="75.1498%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.8998%" y="213" width="0.1604%" height="15" fill="rgb(233,150,26)" fg:x="934" fg:w="2"/><text x="75.1498%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.9800%" y="197" width="0.0802%" height="15" fill="rgb(239,200,30)" fg:x="935" fg:w="1"/><text x="75.2300%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.9800%" y="181" width="0.0802%" height="15" fill="rgb(226,28,11)" fg:x="935" fg:w="1"/><text x="75.2300%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="74.5790%" y="325" width="0.5613%" height="15" fill="rgb(220,26,48)" fg:x="930" fg:w="7"/><text x="74.8290%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="74.5790%" y="309" width="0.5613%" height="15" fill="rgb(232,10,11)" fg:x="930" fg:w="7"/><text x="74.8290%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0601%" y="293" width="0.0802%" height="15" fill="rgb(252,143,50)" fg:x="936" fg:w="1"/><text x="75.3101%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.1403%" y="325" width="0.0802%" height="15" fill="rgb(206,58,22)" fg:x="937" fg:w="1"/><text x="75.3903%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1403%" y="309" width="0.0802%" height="15" fill="rgb(250,9,45)" fg:x="937" fg:w="1"/><text x="75.3903%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (27 samples, 2.17%)</title><rect x="73.1355%" y="421" width="2.1652%" height="15" fill="rgb(225,148,14)" fg:x="912" fg:w="27"/><text x="73.3855%" y="431.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.17%)</title><rect x="73.1355%" y="405" width="2.1652%" height="15" fill="rgb(205,178,40)" fg:x="912" fg:w="27"/><text x="73.3855%" y="415.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="74.5790%" y="389" width="0.7217%" height="15" fill="rgb(215,201,4)" fg:x="930" fg:w="9"/><text x="74.8290%" y="399.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="74.5790%" y="373" width="0.7217%" height="15" fill="rgb(219,223,24)" fg:x="930" fg:w="9"/><text x="74.8290%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="74.5790%" y="357" width="0.7217%" height="15" fill="rgb(217,19,31)" fg:x="930" fg:w="9"/><text x="74.8290%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="74.5790%" y="341" width="0.7217%" height="15" fill="rgb(235,33,3)" fg:x="930" fg:w="9"/><text x="74.8290%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2205%" y="325" width="0.0802%" height="15" fill="rgb(221,39,18)" fg:x="938" fg:w="1"/><text x="75.4705%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2205%" y="309" width="0.0802%" height="15" fill="rgb(242,162,33)" fg:x="938" fg:w="1"/><text x="75.4705%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.2205%" y="293" width="0.0802%" height="15" fill="rgb(233,215,28)" fg:x="938" fg:w="1"/><text x="75.4705%" y="303.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="75.3007%" y="421" width="0.0802%" height="15" fill="rgb(212,117,9)" fg:x="939" fg:w="1"/><text x="75.5507%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="75.3809%" y="389" width="0.0802%" height="15" fill="rgb(237,70,47)" fg:x="940" fg:w="1"/><text x="75.6309%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.3809%" y="373" width="0.0802%" height="15" fill="rgb(206,177,13)" fg:x="940" fg:w="1"/><text x="75.6309%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.5413%" y="373" width="0.0802%" height="15" fill="rgb(209,174,33)" fg:x="942" fg:w="1"/><text x="75.7913%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.6215%" y="373" width="0.0802%" height="15" fill="rgb(226,6,11)" fg:x="943" fg:w="1"/><text x="75.8715%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.6215%" y="357" width="0.0802%" height="15" fill="rgb(240,214,6)" fg:x="943" fg:w="1"/><text x="75.8715%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.6215%" y="341" width="0.0802%" height="15" fill="rgb(254,214,40)" fg:x="943" fg:w="1"/><text x="75.8715%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="75.3809%" y="405" width="0.4010%" height="15" fill="rgb(230,187,15)" fg:x="940" fg:w="5"/><text x="75.6309%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="75.4611%" y="389" width="0.3208%" height="15" fill="rgb(250,11,27)" fg:x="941" fg:w="4"/><text x="75.7111%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.7017%" y="373" width="0.0802%" height="15" fill="rgb(243,107,19)" fg:x="944" fg:w="1"/><text x="75.9517%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.7017%" y="357" width="0.0802%" height="15" fill="rgb(253,66,26)" fg:x="944" fg:w="1"/><text x="75.9517%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.7017%" y="341" width="0.0802%" height="15" fill="rgb(228,43,8)" fg:x="944" fg:w="1"/><text x="75.9517%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.7017%" y="325" width="0.0802%" height="15" fill="rgb(232,197,36)" fg:x="944" fg:w="1"/><text x="75.9517%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.7017%" y="309" width="0.0802%" height="15" fill="rgb(221,182,31)" fg:x="944" fg:w="1"/><text x="75.9517%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7819%" y="373" width="0.0802%" height="15" fill="rgb(244,25,36)" fg:x="945" fg:w="1"/><text x="76.0319%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="75.7819%" y="357" width="0.0802%" height="15" fill="rgb(247,101,19)" fg:x="945" fg:w="1"/><text x="76.0319%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="75.7819%" y="341" width="0.0802%" height="15" fill="rgb(223,117,19)" fg:x="945" fg:w="1"/><text x="76.0319%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8621%" y="373" width="0.0802%" height="15" fill="rgb(249,63,38)" fg:x="946" fg:w="1"/><text x="76.1121%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9423%" y="309" width="0.0802%" height="15" fill="rgb(220,143,23)" fg:x="947" fg:w="1"/><text x="76.1923%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9423%" y="293" width="0.0802%" height="15" fill="rgb(252,183,22)" fg:x="947" fg:w="1"/><text x="76.1923%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="75.7819%" y="405" width="0.4010%" height="15" fill="rgb(243,176,15)" fg:x="945" fg:w="5"/><text x="76.0319%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="75.7819%" y="389" width="0.4010%" height="15" fill="rgb(244,204,46)" fg:x="945" fg:w="5"/><text x="76.0319%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="75.9423%" y="373" width="0.2406%" height="15" fill="rgb(227,28,54)" fg:x="947" fg:w="3"/><text x="76.1923%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.9423%" y="357" width="0.2406%" height="15" fill="rgb(231,10,15)" fg:x="947" fg:w="3"/><text x="76.1923%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="75.9423%" y="341" width="0.2406%" height="15" fill="rgb(210,200,17)" fg:x="947" fg:w="3"/><text x="76.1923%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.9423%" y="325" width="0.2406%" height="15" fill="rgb(251,106,46)" fg:x="947" fg:w="3"/><text x="76.1923%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.0225%" y="309" width="0.1604%" height="15" fill="rgb(218,211,15)" fg:x="948" fg:w="2"/><text x="76.2725%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.0225%" y="293" width="0.1604%" height="15" fill="rgb(239,62,10)" fg:x="948" fg:w="2"/><text x="76.2725%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1026%" y="277" width="0.0802%" height="15" fill="rgb(225,53,53)" fg:x="949" fg:w="1"/><text x="76.3526%" y="287.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (247 samples, 19.81%)</title><rect x="56.4555%" y="469" width="19.8075%" height="15" fill="rgb(207,16,24)" fg:x="704" fg:w="247"/><text x="56.7055%" y="479.50">engine::session::Session::evalu..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (247 samples, 19.81%)</title><rect x="56.4555%" y="453" width="19.8075%" height="15" fill="rgb(217,52,28)" fg:x="704" fg:w="247"/><text x="56.7055%" y="463.50">engine::session::Session::evalu..</text></g><g><title>kernel::model::entry::EntryResolver::world (40 samples, 3.21%)</title><rect x="73.0553%" y="437" width="3.2077%" height="15" fill="rgb(246,1,5)" fg:x="911" fg:w="40"/><text x="73.3053%" y="447.50">ker..</text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="75.3809%" y="421" width="0.8821%" height="15" fill="rgb(221,29,26)" fg:x="940" fg:w="11"/><text x="75.6309%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="76.1828%" y="405" width="0.0802%" height="15" fill="rgb(250,133,32)" fg:x="950" fg:w="1"/><text x="76.4328%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.1828%" y="389" width="0.0802%" height="15" fill="rgb(236,63,16)" fg:x="950" fg:w="1"/><text x="76.4328%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.1828%" y="373" width="0.0802%" height="15" fill="rgb(231,159,14)" fg:x="950" fg:w="1"/><text x="76.4328%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.1828%" y="357" width="0.0802%" height="15" fill="rgb(207,102,36)" fg:x="950" fg:w="1"/><text x="76.4328%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="76.1828%" y="341" width="0.0802%" height="15" fill="rgb(230,224,31)" fg:x="950" fg:w="1"/><text x="76.4328%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="76.1828%" y="325" width="0.0802%" height="15" fill="rgb(215,182,16)" fg:x="950" fg:w="1"/><text x="76.4328%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.1828%" y="309" width="0.0802%" height="15" fill="rgb(226,113,2)" fg:x="950" fg:w="1"/><text x="76.4328%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.1828%" y="293" width="0.0802%" height="15" fill="rgb(241,18,35)" fg:x="950" fg:w="1"/><text x="76.4328%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="76.1828%" y="277" width="0.0802%" height="15" fill="rgb(240,165,44)" fg:x="950" fg:w="1"/><text x="76.4328%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="76.1828%" y="261" width="0.0802%" height="15" fill="rgb(229,130,47)" fg:x="950" fg:w="1"/><text x="76.4328%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (952 samples, 76.34%)</title><rect x="0.0000%" y="517" width="76.3432%" height="15" fill="rgb(223,93,7)" fg:x="0" fg:w="952"/><text x="0.2500%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (952 samples, 76.34%)</title><rect x="0.0000%" y="501" width="76.3432%" height="15" fill="rgb(205,180,36)" fg:x="0" fg:w="952"/><text x="0.2500%" y="511.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (952 samples, 76.34%)</title><rect x="0.0000%" y="485" width="76.3432%" height="15" fill="rgb(221,103,28)" fg:x="0" fg:w="952"/><text x="0.2500%" y="495.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="76.2630%" y="469" width="0.0802%" height="15" fill="rgb(212,4,3)" fg:x="951" fg:w="1"/><text x="76.5130%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="76.2630%" y="453" width="0.0802%" height="15" fill="rgb(209,221,53)" fg:x="951" fg:w="1"/><text x="76.5130%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.2630%" y="437" width="0.0802%" height="15" fill="rgb(233,229,52)" fg:x="951" fg:w="1"/><text x="76.5130%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.2630%" y="421" width="0.0802%" height="15" fill="rgb(254,127,37)" fg:x="951" fg:w="1"/><text x="76.5130%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3432%" y="421" width="0.0802%" height="15" fill="rgb(207,161,26)" fg:x="952" fg:w="1"/><text x="76.5932%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="76.5036%" y="373" width="0.1604%" height="15" fill="rgb(223,75,5)" fg:x="954" fg:w="2"/><text x="76.7536%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6640%" y="325" width="0.0802%" height="15" fill="rgb(235,115,52)" fg:x="956" fg:w="1"/><text x="76.9140%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="76.4234%" y="389" width="0.4010%" height="15" fill="rgb(240,91,46)" fg:x="953" fg:w="5"/><text x="76.6734%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.6640%" y="373" width="0.1604%" height="15" fill="rgb(251,144,21)" fg:x="956" fg:w="2"/><text x="76.9140%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.6640%" y="357" width="0.1604%" height="15" fill="rgb(247,220,47)" fg:x="956" fg:w="2"/><text x="76.9140%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.6640%" y="341" width="0.1604%" height="15" fill="rgb(253,122,1)" fg:x="956" fg:w="2"/><text x="76.9140%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.7442%" y="325" width="0.0802%" height="15" fill="rgb(221,0,24)" fg:x="957" fg:w="1"/><text x="76.9942%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7442%" y="309" width="0.0802%" height="15" fill="rgb(220,204,54)" fg:x="957" fg:w="1"/><text x="76.9942%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.8244%" y="357" width="0.0802%" height="15" fill="rgb(205,96,25)" fg:x="958" fg:w="1"/><text x="77.0744%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8244%" y="341" width="0.0802%" height="15" fill="rgb(247,77,20)" fg:x="958" fg:w="1"/><text x="77.0744%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9046%" y="341" width="0.0802%" height="15" fill="rgb(245,151,8)" fg:x="959" fg:w="1"/><text x="77.1546%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.9848%" y="341" width="0.0802%" height="15" fill="rgb(242,158,39)" fg:x="960" fg:w="1"/><text x="77.2348%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.1451%" y="325" width="0.0802%" height="15" fill="rgb(222,214,50)" fg:x="962" fg:w="1"/><text x="77.3951%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="76.3432%" y="469" width="1.0425%" height="15" fill="rgb(229,60,39)" fg:x="952" fg:w="13"/><text x="76.5932%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (13 samples, 1.04%)</title><rect x="76.3432%" y="453" width="1.0425%" height="15" fill="rgb(240,148,18)" fg:x="952" fg:w="13"/><text x="76.5932%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="76.3432%" y="437" width="1.0425%" height="15" fill="rgb(215,96,11)" fg:x="952" fg:w="13"/><text x="76.5932%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (12 samples, 0.96%)</title><rect x="76.4234%" y="421" width="0.9623%" height="15" fill="rgb(238,162,53)" fg:x="953" fg:w="12"/><text x="76.6734%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="76.4234%" y="405" width="0.9623%" height="15" fill="rgb(214,83,18)" fg:x="953" fg:w="12"/><text x="76.6734%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="76.8244%" y="389" width="0.5613%" height="15" fill="rgb(248,117,24)" fg:x="958" fg:w="7"/><text x="77.0744%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="76.8244%" y="373" width="0.5613%" height="15" fill="rgb(238,190,6)" fg:x="958" fg:w="7"/><text x="77.0744%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="76.9046%" y="357" width="0.4812%" height="15" fill="rgb(213,51,6)" fg:x="959" fg:w="6"/><text x="77.1546%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="77.0650%" y="341" width="0.3208%" height="15" fill="rgb(212,136,1)" fg:x="961" fg:w="4"/><text x="77.3150%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="77.2253%" y="325" width="0.1604%" height="15" fill="rgb(221,192,14)" fg:x="963" fg:w="2"/><text x="77.4753%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.3857%" y="421" width="0.0802%" height="15" fill="rgb(244,38,54)" fg:x="965" fg:w="1"/><text x="77.6357%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="77.3857%" y="405" width="0.0802%" height="15" fill="rgb(240,45,28)" fg:x="965" fg:w="1"/><text x="77.6357%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.3857%" y="389" width="0.0802%" height="15" fill="rgb(240,123,12)" fg:x="965" fg:w="1"/><text x="77.6357%" y="399.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="77.4659%" y="421" width="0.0802%" height="15" fill="rgb(216,14,30)" fg:x="966" fg:w="1"/><text x="77.7159%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="77.5461%" y="405" width="0.1604%" height="15" fill="rgb(212,50,24)" fg:x="967" fg:w="2"/><text x="77.7961%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="77.5461%" y="389" width="0.1604%" height="15" fill="rgb(253,229,47)" fg:x="967" fg:w="2"/><text x="77.7961%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.6263%" y="373" width="0.0802%" height="15" fill="rgb(214,26,17)" fg:x="968" fg:w="1"/><text x="77.8763%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.7065%" y="373" width="0.0802%" height="15" fill="rgb(252,60,11)" fg:x="969" fg:w="1"/><text x="77.9565%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.7065%" y="357" width="0.0802%" height="15" fill="rgb(209,59,37)" fg:x="969" fg:w="1"/><text x="77.9565%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.7065%" y="341" width="0.0802%" height="15" fill="rgb(228,126,53)" fg:x="969" fg:w="1"/><text x="77.9565%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.7065%" y="325" width="0.0802%" height="15" fill="rgb(233,99,2)" fg:x="969" fg:w="1"/><text x="77.9565%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.7065%" y="309" width="0.0802%" height="15" fill="rgb(217,106,34)" fg:x="969" fg:w="1"/><text x="77.9565%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.7065%" y="293" width="0.0802%" height="15" fill="rgb(222,46,19)" fg:x="969" fg:w="1"/><text x="77.9565%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.7065%" y="277" width="0.0802%" height="15" fill="rgb(251,87,31)" fg:x="969" fg:w="1"/><text x="77.9565%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.7065%" y="261" width="0.0802%" height="15" fill="rgb(213,70,51)" fg:x="969" fg:w="1"/><text x="77.9565%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.7065%" y="245" width="0.0802%" height="15" fill="rgb(229,144,18)" fg:x="969" fg:w="1"/><text x="77.9565%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.7065%" y="229" width="0.0802%" height="15" fill="rgb(254,60,26)" fg:x="969" fg:w="1"/><text x="77.9565%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.7065%" y="213" width="0.0802%" height="15" fill="rgb(243,127,51)" fg:x="969" fg:w="1"/><text x="77.9565%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.7065%" y="197" width="0.0802%" height="15" fill="rgb(221,51,25)" fg:x="969" fg:w="1"/><text x="77.9565%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.7065%" y="181" width="0.0802%" height="15" fill="rgb(205,42,7)" fg:x="969" fg:w="1"/><text x="77.9565%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.7065%" y="165" width="0.0802%" height="15" fill="rgb(236,177,48)" fg:x="969" fg:w="1"/><text x="77.9565%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="77.7065%" y="149" width="0.0802%" height="15" fill="rgb(226,79,31)" fg:x="969" fg:w="1"/><text x="77.9565%" y="159.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.56%)</title><rect x="77.7065%" y="389" width="0.5613%" height="15" fill="rgb(216,170,12)" fg:x="969" fg:w="7"/><text x="77.9565%" y="399.50"></text></g><g><title>libloading::safe::Library::new (6 samples, 0.48%)</title><rect x="77.7867%" y="373" width="0.4812%" height="15" fill="rgb(208,62,51)" fg:x="970" fg:w="6"/><text x="78.0367%" y="383.50"></text></g><g><title>dlopen (5 samples, 0.40%)</title><rect x="77.8669%" y="357" width="0.4010%" height="15" fill="rgb(254,129,9)" fg:x="971" fg:w="5"/><text x="78.1169%" y="367.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="77.9471%" y="341" width="0.3208%" height="15" fill="rgb(243,209,31)" fg:x="972" fg:w="4"/><text x="78.1971%" y="351.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="77.9471%" y="325" width="0.3208%" height="15" fill="rgb(213,159,23)" fg:x="972" fg:w="4"/><text x="78.1971%" y="335.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="78.0273%" y="309" width="0.2406%" height="15" fill="rgb(249,77,39)" fg:x="973" fg:w="3"/><text x="78.2773%" y="319.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="78.0273%" y="293" width="0.2406%" height="15" fill="rgb(230,13,33)" fg:x="973" fg:w="3"/><text x="78.2773%" y="303.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (8 samples, 0.64%)</title><rect x="77.7065%" y="405" width="0.6415%" height="15" fill="rgb(215,215,7)" fg:x="969" fg:w="8"/><text x="77.9565%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="78.2678%" y="389" width="0.0802%" height="15" fill="rgb(222,92,25)" fg:x="976" fg:w="1"/><text x="78.5178%" y="399.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="78.2678%" y="373" width="0.0802%" height="15" fill="rgb(215,173,22)" fg:x="976" fg:w="1"/><text x="78.5178%" y="383.50"></text></g><g><title>engine::session::Session::initialize (11 samples, 0.88%)</title><rect x="77.5461%" y="421" width="0.8821%" height="15" fill="rgb(247,205,52)" fg:x="967" fg:w="11"/><text x="77.7961%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="78.3480%" y="405" width="0.0802%" height="15" fill="rgb(240,210,37)" fg:x="977" fg:w="1"/><text x="78.5980%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="78.3480%" y="389" width="0.0802%" height="15" fill="rgb(224,13,10)" fg:x="977" fg:w="1"/><text x="78.5980%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.3480%" y="373" width="0.0802%" height="15" fill="rgb(209,48,33)" fg:x="977" fg:w="1"/><text x="78.5980%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.3480%" y="357" width="0.0802%" height="15" fill="rgb(228,219,23)" fg:x="977" fg:w="1"/><text x="78.5980%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.3480%" y="341" width="0.0802%" height="15" fill="rgb(239,46,49)" fg:x="977" fg:w="1"/><text x="78.5980%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.3480%" y="325" width="0.0802%" height="15" fill="rgb(206,172,51)" fg:x="977" fg:w="1"/><text x="78.5980%" y="335.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (14 samples, 1.12%)</title><rect x="77.3857%" y="469" width="1.1227%" height="15" fill="rgb(213,212,35)" fg:x="965" fg:w="14"/><text x="77.6357%" y="479.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (14 samples, 1.12%)</title><rect x="77.3857%" y="453" width="1.1227%" height="15" fill="rgb(252,40,27)" fg:x="965" fg:w="14"/><text x="77.6357%" y="463.50"></text></g><g><title>engine::session::Session::new (14 samples, 1.12%)</title><rect x="77.3857%" y="437" width="1.1227%" height="15" fill="rgb(212,33,41)" fg:x="965" fg:w="14"/><text x="77.6357%" y="447.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="78.4282%" y="421" width="0.0802%" height="15" fill="rgb(232,160,27)" fg:x="978" fg:w="1"/><text x="78.6782%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="78.4282%" y="405" width="0.0802%" height="15" fill="rgb(244,160,20)" fg:x="978" fg:w="1"/><text x="78.6782%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.4282%" y="389" width="0.0802%" height="15" fill="rgb(205,66,20)" fg:x="978" fg:w="1"/><text x="78.6782%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.4282%" y="373" width="0.0802%" height="15" fill="rgb(236,158,6)" fg:x="978" fg:w="1"/><text x="78.6782%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.4282%" y="357" width="0.0802%" height="15" fill="rgb(232,25,36)" fg:x="978" fg:w="1"/><text x="78.6782%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.4282%" y="341" width="0.0802%" height="15" fill="rgb(220,153,35)" fg:x="978" fg:w="1"/><text x="78.6782%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="78.5886%" y="437" width="0.0802%" height="15" fill="rgb(216,5,8)" fg:x="980" fg:w="1"/><text x="78.8386%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="78.6688%" y="437" width="0.0802%" height="15" fill="rgb(240,97,3)" fg:x="981" fg:w="1"/><text x="78.9188%" y="447.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="78.6688%" y="421" width="0.0802%" height="15" fill="rgb(220,99,26)" fg:x="981" fg:w="1"/><text x="78.9188%" y="431.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="78.6688%" y="405" width="0.0802%" height="15" fill="rgb(237,96,2)" fg:x="981" fg:w="1"/><text x="78.9188%" y="415.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="78.6688%" y="389" width="0.0802%" height="15" fill="rgb(217,197,47)" fg:x="981" fg:w="1"/><text x="78.9188%" y="399.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="78.6688%" y="373" width="0.0802%" height="15" fill="rgb(252,133,54)" fg:x="981" fg:w="1"/><text x="78.9188%" y="383.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="78.6688%" y="357" width="0.0802%" height="15" fill="rgb(233,37,30)" fg:x="981" fg:w="1"/><text x="78.9188%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.6688%" y="341" width="0.0802%" height="15" fill="rgb(239,182,12)" fg:x="981" fg:w="1"/><text x="78.9188%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.7490%" y="405" width="0.0802%" height="15" fill="rgb(245,83,39)" fg:x="982" fg:w="1"/><text x="78.9990%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.7490%" y="389" width="0.0802%" height="15" fill="rgb(222,109,36)" fg:x="982" fg:w="1"/><text x="78.9990%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="78.7490%" y="373" width="0.0802%" height="15" fill="rgb(237,95,44)" fg:x="982" fg:w="1"/><text x="78.9990%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7490%" y="357" width="0.0802%" height="15" fill="rgb(216,36,54)" fg:x="982" fg:w="1"/><text x="78.9990%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7490%" y="341" width="0.0802%" height="15" fill="rgb(236,164,3)" fg:x="982" fg:w="1"/><text x="78.9990%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.7490%" y="325" width="0.0802%" height="15" fill="rgb(223,15,21)" fg:x="982" fg:w="1"/><text x="78.9990%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.7490%" y="309" width="0.0802%" height="15" fill="rgb(239,191,12)" fg:x="982" fg:w="1"/><text x="78.9990%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.7490%" y="293" width="0.0802%" height="15" fill="rgb(231,191,37)" fg:x="982" fg:w="1"/><text x="78.9990%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="78.7490%" y="277" width="0.0802%" height="15" fill="rgb(209,155,36)" fg:x="982" fg:w="1"/><text x="78.9990%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.7490%" y="261" width="0.0802%" height="15" fill="rgb(216,222,49)" fg:x="982" fg:w="1"/><text x="78.9990%" y="271.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="78.9094%" y="341" width="0.3208%" height="15" fill="rgb(218,181,2)" fg:x="984" fg:w="4"/><text x="79.1594%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="78.9094%" y="325" width="0.3208%" height="15" fill="rgb(239,125,9)" fg:x="984" fg:w="4"/><text x="79.1594%" y="335.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="78.9896%" y="309" width="0.2406%" height="15" fill="rgb(233,103,7)" fg:x="985" fg:w="3"/><text x="79.2396%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.0698%" y="293" width="0.1604%" height="15" fill="rgb(209,223,5)" fg:x="986" fg:w="2"/><text x="79.3198%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.2302%" y="325" width="0.0802%" height="15" fill="rgb(234,71,27)" fg:x="988" fg:w="1"/><text x="79.4802%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2302%" y="309" width="0.0802%" height="15" fill="rgb(251,202,16)" fg:x="988" fg:w="1"/><text x="79.4802%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="79.3103%" y="325" width="0.2406%" height="15" fill="rgb(231,180,0)" fg:x="989" fg:w="3"/><text x="79.5603%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.3905%" y="309" width="0.1604%" height="15" fill="rgb(223,58,28)" fg:x="990" fg:w="2"/><text x="79.6405%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.4707%" y="293" width="0.0802%" height="15" fill="rgb(250,34,24)" fg:x="991" fg:w="1"/><text x="79.7207%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.4707%" y="277" width="0.0802%" height="15" fill="rgb(235,24,16)" fg:x="991" fg:w="1"/><text x="79.7207%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="79.6311%" y="309" width="0.1604%" height="15" fill="rgb(219,28,33)" fg:x="993" fg:w="2"/><text x="79.8811%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.6311%" y="293" width="0.1604%" height="15" fill="rgb(228,150,43)" fg:x="993" fg:w="2"/><text x="79.8811%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.6311%" y="277" width="0.1604%" height="15" fill="rgb(221,228,36)" fg:x="993" fg:w="2"/><text x="79.8811%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.6311%" y="261" width="0.1604%" height="15" fill="rgb(232,116,17)" fg:x="993" fg:w="2"/><text x="79.8811%" y="271.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.6311%" y="245" width="0.1604%" height="15" fill="rgb(220,110,51)" fg:x="993" fg:w="2"/><text x="79.8811%" y="255.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.7113%" y="229" width="0.0802%" height="15" fill="rgb(207,26,25)" fg:x="994" fg:w="1"/><text x="79.9613%" y="239.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="79.7915%" y="309" width="0.2406%" height="15" fill="rgb(223,58,19)" fg:x="995" fg:w="3"/><text x="80.0415%" y="319.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.7915%" y="293" width="0.2406%" height="15" fill="rgb(234,125,39)" fg:x="995" fg:w="3"/><text x="80.0415%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="79.7915%" y="277" width="0.2406%" height="15" fill="rgb(241,48,36)" fg:x="995" fg:w="3"/><text x="80.0415%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="79.8717%" y="261" width="0.1604%" height="15" fill="rgb(217,148,51)" fg:x="996" fg:w="2"/><text x="80.1217%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.9519%" y="245" width="0.0802%" height="15" fill="rgb(247,17,25)" fg:x="997" fg:w="1"/><text x="80.2019%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.9519%" y="229" width="0.0802%" height="15" fill="rgb(219,89,38)" fg:x="997" fg:w="1"/><text x="80.2019%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.9519%" y="213" width="0.0802%" height="15" fill="rgb(220,145,2)" fg:x="997" fg:w="1"/><text x="80.2019%" y="223.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.0321%" y="277" width="0.0802%" height="15" fill="rgb(244,66,47)" fg:x="998" fg:w="1"/><text x="80.2821%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.0321%" y="261" width="0.0802%" height="15" fill="rgb(226,182,5)" fg:x="998" fg:w="1"/><text x="80.2821%" y="271.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.36%)</title><rect x="78.8292%" y="357" width="1.3633%" height="15" fill="rgb(211,98,20)" fg:x="983" fg:w="17"/><text x="79.0792%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="79.2302%" y="341" width="0.9623%" height="15" fill="rgb(217,103,52)" fg:x="988" fg:w="12"/><text x="79.4802%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="79.5509%" y="325" width="0.6415%" height="15" fill="rgb(208,125,52)" fg:x="992" fg:w="8"/><text x="79.8009%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.0321%" y="309" width="0.1604%" height="15" fill="rgb(244,70,13)" fg:x="998" fg:w="2"/><text x="80.2821%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.0321%" y="293" width="0.1604%" height="15" fill="rgb(253,124,3)" fg:x="998" fg:w="2"/><text x="80.2821%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.1123%" y="277" width="0.0802%" height="15" fill="rgb(222,145,32)" fg:x="999" fg:w="1"/><text x="80.3623%" y="287.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="80.1925%" y="325" width="0.1604%" height="15" fill="rgb(232,183,47)" fg:x="1000" fg:w="2"/><text x="80.4425%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="80.3528%" y="309" width="0.1604%" height="15" fill="rgb(246,226,4)" fg:x="1002" fg:w="2"/><text x="80.6028%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="80.1925%" y="357" width="0.4010%" height="15" fill="rgb(228,185,46)" fg:x="1000" fg:w="5"/><text x="80.4425%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="80.1925%" y="341" width="0.4010%" height="15" fill="rgb(213,196,4)" fg:x="1000" fg:w="5"/><text x="80.4425%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.3528%" y="325" width="0.2406%" height="15" fill="rgb(212,2,45)" fg:x="1002" fg:w="3"/><text x="80.6028%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.5132%" y="309" width="0.0802%" height="15" fill="rgb(217,145,50)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.5132%" y="293" width="0.0802%" height="15" fill="rgb(242,10,46)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="80.5132%" y="277" width="0.0802%" height="15" fill="rgb(252,91,48)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.5132%" y="261" width="0.0802%" height="15" fill="rgb(216,72,13)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="271.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="80.5934%" y="341" width="0.0802%" height="15" fill="rgb(219,6,37)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5934%" y="325" width="0.0802%" height="15" fill="rgb(236,185,40)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.6736%" y="261" width="0.0802%" height="15" fill="rgb(208,81,48)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.6736%" y="245" width="0.0802%" height="15" fill="rgb(211,42,33)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7538%" y="229" width="0.0802%" height="15" fill="rgb(211,90,39)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7538%" y="213" width="0.0802%" height="15" fill="rgb(218,136,12)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.7538%" y="197" width="0.0802%" height="15" fill="rgb(234,12,32)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="80.6736%" y="277" width="0.3208%" height="15" fill="rgb(221,164,18)" fg:x="1006" fg:w="4"/><text x="80.9236%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="80.7538%" y="261" width="0.2406%" height="15" fill="rgb(239,135,14)" fg:x="1007" fg:w="3"/><text x="81.0038%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="80.7538%" y="245" width="0.2406%" height="15" fill="rgb(226,198,47)" fg:x="1007" fg:w="3"/><text x="81.0038%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="80.8340%" y="229" width="0.1604%" height="15" fill="rgb(244,121,47)" fg:x="1008" fg:w="2"/><text x="81.0840%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.8340%" y="213" width="0.1604%" height="15" fill="rgb(226,21,48)" fg:x="1008" fg:w="2"/><text x="81.0840%" y="223.50"></text></g><g><title>engine::session::Session::flush (31 samples, 2.49%)</title><rect x="78.5886%" y="453" width="2.4860%" height="15" fill="rgb(215,178,47)" fg:x="980" fg:w="31"/><text x="78.8386%" y="463.50">en..</text></g><g><title>engine::session::state::State::close (29 samples, 2.33%)</title><rect x="78.7490%" y="437" width="2.3256%" height="15" fill="rgb(206,212,19)" fg:x="982" fg:w="29"/><text x="78.9990%" y="447.50">e..</text></g><g><title>engine::session::state::State::flush_entities (29 samples, 2.33%)</title><rect x="78.7490%" y="421" width="2.3256%" height="15" fill="rgb(230,104,34)" fg:x="982" fg:w="29"/><text x="78.9990%" y="431.50">e..</text></g><g><title>core::iter::adapters::try_process (28 samples, 2.25%)</title><rect x="78.8292%" y="405" width="2.2454%" height="15" fill="rgb(210,96,51)" fg:x="983" fg:w="28"/><text x="79.0792%" y="415.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 2.25%)</title><rect x="78.8292%" y="389" width="2.2454%" height="15" fill="rgb(229,111,47)" fg:x="983" fg:w="28"/><text x="79.0792%" y="399.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (28 samples, 2.25%)</title><rect x="78.8292%" y="373" width="2.2454%" height="15" fill="rgb(218,174,45)" fg:x="983" fg:w="28"/><text x="79.0792%" y="383.50">e..</text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.48%)</title><rect x="80.5934%" y="357" width="0.4812%" height="15" fill="rgb(215,21,32)" fg:x="1005" fg:w="6"/><text x="80.8434%" y="367.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="80.6736%" y="341" width="0.4010%" height="15" fill="rgb(235,72,21)" fg:x="1006" fg:w="5"/><text x="80.9236%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="80.6736%" y="325" width="0.4010%" height="15" fill="rgb(250,113,30)" fg:x="1006" fg:w="5"/><text x="80.9236%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="80.6736%" y="309" width="0.4010%" height="15" fill="rgb(244,136,34)" fg:x="1006" fg:w="5"/><text x="80.9236%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="80.6736%" y="293" width="0.4010%" height="15" fill="rgb(213,226,47)" fg:x="1006" fg:w="5"/><text x="80.9236%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.9944%" y="277" width="0.0802%" height="15" fill="rgb(224,136,40)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.0746%" y="405" width="0.0802%" height="15" fill="rgb(253,124,12)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0746%" y="389" width="0.0802%" height="15" fill="rgb(210,67,8)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0746%" y="373" width="0.0802%" height="15" fill="rgb(210,204,0)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0746%" y="357" width="0.0802%" height="15" fill="rgb(217,179,22)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0746%" y="341" width="0.0802%" height="15" fill="rgb(237,192,33)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1548%" y="357" width="0.0802%" height="15" fill="rgb(211,104,28)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1548%" y="341" width="0.0802%" height="15" fill="rgb(214,75,30)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1548%" y="325" width="0.0802%" height="15" fill="rgb(220,227,12)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1548%" y="309" width="0.0802%" height="15" fill="rgb(233,134,28)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.1548%" y="293" width="0.0802%" height="15" fill="rgb(215,146,24)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.1548%" y="277" width="0.0802%" height="15" fill="rgb(248,227,20)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.1548%" y="261" width="0.0802%" height="15" fill="rgb(250,44,42)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1548%" y="245" width="0.0802%" height="15" fill="rgb(219,5,35)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1548%" y="229" width="0.0802%" height="15" fill="rgb(241,132,32)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.1548%" y="213" width="0.0802%" height="15" fill="rgb(234,212,51)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.1548%" y="197" width="0.0802%" height="15" fill="rgb(242,173,29)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.1548%" y="181" width="0.0802%" height="15" fill="rgb(212,159,2)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.1548%" y="165" width="0.0802%" height="15" fill="rgb(238,165,31)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.1548%" y="389" width="0.1604%" height="15" fill="rgb(241,57,36)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.1548%" y="373" width="0.1604%" height="15" fill="rgb(249,7,4)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2350%" y="357" width="0.0802%" height="15" fill="rgb(250,137,44)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2350%" y="341" width="0.0802%" height="15" fill="rgb(244,185,1)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.2350%" y="325" width="0.0802%" height="15" fill="rgb(216,5,53)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.2350%" y="309" width="0.0802%" height="15" fill="rgb(234,89,21)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="81.1548%" y="405" width="0.2406%" height="15" fill="rgb(250,81,43)" fg:x="1012" fg:w="3"/><text x="81.4048%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.3152%" y="389" width="0.0802%" height="15" fill="rgb(243,132,11)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="81.3152%" y="373" width="0.0802%" height="15" fill="rgb(253,159,28)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="81.0746%" y="421" width="0.4010%" height="15" fill="rgb(237,167,34)" fg:x="1011" fg:w="5"/><text x="81.3246%" y="431.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="81.3953%" y="405" width="0.0802%" height="15" fill="rgb(237,16,50)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.3953%" y="389" width="0.0802%" height="15" fill="rgb(247,125,2)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.3953%" y="373" width="0.0802%" height="15" fill="rgb(254,35,3)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.3953%" y="357" width="0.0802%" height="15" fill="rgb(237,209,21)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.3953%" y="341" width="0.0802%" height="15" fill="rgb(224,122,20)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3953%" y="325" width="0.0802%" height="15" fill="rgb(224,11,46)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.3953%" y="309" width="0.0802%" height="15" fill="rgb(248,21,33)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3953%" y="293" width="0.0802%" height="15" fill="rgb(222,144,7)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.3953%" y="277" width="0.0802%" height="15" fill="rgb(205,141,37)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="81.0746%" y="437" width="0.4812%" height="15" fill="rgb(237,130,8)" fg:x="1011" fg:w="6"/><text x="81.3246%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.4755%" y="421" width="0.0802%" height="15" fill="rgb(209,179,39)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.4755%" y="405" width="0.0802%" height="15" fill="rgb(207,52,17)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.4755%" y="389" width="0.0802%" height="15" fill="rgb(253,158,17)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.4755%" y="373" width="0.0802%" height="15" fill="rgb(208,19,53)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.4755%" y="357" width="0.0802%" height="15" fill="rgb(233,152,13)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.4755%" y="341" width="0.0802%" height="15" fill="rgb(231,84,1)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.5557%" y="373" width="0.0802%" height="15" fill="rgb(229,142,48)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.5557%" y="357" width="0.0802%" height="15" fill="rgb(248,70,29)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5557%" y="341" width="0.0802%" height="15" fill="rgb(250,85,7)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.6359%" y="341" width="0.0802%" height="15" fill="rgb(235,140,43)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="81.6359%" y="325" width="0.0802%" height="15" fill="rgb(216,0,5)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="335.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.72%)</title><rect x="81.0746%" y="453" width="0.7217%" height="15" fill="rgb(223,167,29)" fg:x="1011" fg:w="9"/><text x="81.3246%" y="463.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="81.5557%" y="437" width="0.2406%" height="15" fill="rgb(229,150,33)" fg:x="1017" fg:w="3"/><text x="81.8057%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="81.5557%" y="421" width="0.2406%" height="15" fill="rgb(227,26,52)" fg:x="1017" fg:w="3"/><text x="81.8057%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="81.5557%" y="405" width="0.2406%" height="15" fill="rgb(250,60,52)" fg:x="1017" fg:w="3"/><text x="81.8057%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="81.5557%" y="389" width="0.2406%" height="15" fill="rgb(228,81,46)" fg:x="1017" fg:w="3"/><text x="81.8057%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="81.6359%" y="373" width="0.1604%" height="15" fill="rgb(225,218,31)" fg:x="1018" fg:w="2"/><text x="81.8859%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.6359%" y="357" width="0.1604%" height="15" fill="rgb(230,35,16)" fg:x="1018" fg:w="2"/><text x="81.8859%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7161%" y="341" width="0.0802%" height="15" fill="rgb(247,100,0)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7161%" y="325" width="0.0802%" height="15" fill="rgb(223,135,11)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.7161%" y="309" width="0.0802%" height="15" fill="rgb(207,136,0)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7161%" y="293" width="0.0802%" height="15" fill="rgb(246,131,25)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7161%" y="277" width="0.0802%" height="15" fill="rgb(209,47,12)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7161%" y="261" width="0.0802%" height="15" fill="rgb(221,25,16)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="271.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.8765%" y="421" width="0.0802%" height="15" fill="rgb(223,164,33)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8765%" y="405" width="0.0802%" height="15" fill="rgb(220,26,23)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.8765%" y="389" width="0.0802%" height="15" fill="rgb(231,224,1)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.8765%" y="373" width="0.0802%" height="15" fill="rgb(229,221,24)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="81.8765%" y="357" width="0.0802%" height="15" fill="rgb(213,34,10)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="81.8765%" y="341" width="0.0802%" height="15" fill="rgb(215,33,11)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8765%" y="325" width="0.0802%" height="15" fill="rgb(216,20,41)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="81.8765%" y="309" width="0.0802%" height="15" fill="rgb(228,43,31)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.9567%" y="421" width="0.0802%" height="15" fill="rgb(227,83,26)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.9567%" y="405" width="0.0802%" height="15" fill="rgb(217,168,19)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.9567%" y="389" width="0.0802%" height="15" fill="rgb(231,34,33)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9567%" y="373" width="0.0802%" height="15" fill="rgb(230,120,51)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9567%" y="357" width="0.0802%" height="15" fill="rgb(215,138,27)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9567%" y="341" width="0.0802%" height="15" fill="rgb(246,80,47)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9567%" y="325" width="0.0802%" height="15" fill="rgb(215,57,53)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="81.8765%" y="437" width="0.2406%" height="15" fill="rgb(229,137,5)" fg:x="1021" fg:w="3"/><text x="82.1265%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="82.0369%" y="421" width="0.0802%" height="15" fill="rgb(210,86,2)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.0369%" y="405" width="0.0802%" height="15" fill="rgb(231,226,51)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.0369%" y="389" width="0.0802%" height="15" fill="rgb(216,62,29)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.0369%" y="373" width="0.0802%" height="15" fill="rgb(248,202,3)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0369%" y="357" width="0.0802%" height="15" fill="rgb(225,181,7)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0369%" y="341" width="0.0802%" height="15" fill="rgb(247,170,54)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0369%" y="325" width="0.0802%" height="15" fill="rgb(236,204,33)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0369%" y="309" width="0.0802%" height="15" fill="rgb(216,45,30)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0369%" y="293" width="0.0802%" height="15" fill="rgb(213,203,16)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.0369%" y="277" width="0.0802%" height="15" fill="rgb(215,46,16)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.0369%" y="261" width="0.0802%" height="15" fill="rgb(217,162,46)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.0369%" y="245" width="0.0802%" height="15" fill="rgb(224,189,20)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0369%" y="229" width="0.0802%" height="15" fill="rgb(232,35,51)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0369%" y="213" width="0.0802%" height="15" fill="rgb(243,221,46)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.0369%" y="197" width="0.0802%" height="15" fill="rgb(248,16,16)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.0369%" y="181" width="0.0802%" height="15" fill="rgb(220,168,13)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.0369%" y="165" width="0.0802%" height="15" fill="rgb(243,102,39)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.0369%" y="149" width="0.0802%" height="15" fill="rgb(245,82,32)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.0369%" y="133" width="0.0802%" height="15" fill="rgb(230,164,19)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="143.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="81.7963%" y="453" width="0.4010%" height="15" fill="rgb(221,9,41)" fg:x="1020" fg:w="5"/><text x="82.0463%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.1171%" y="437" width="0.0802%" height="15" fill="rgb(216,93,0)" fg:x="1024" fg:w="1"/><text x="82.3671%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.1171%" y="421" width="0.0802%" height="15" fill="rgb(235,113,9)" fg:x="1024" fg:w="1"/><text x="82.3671%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1171%" y="405" width="0.0802%" height="15" fill="rgb(209,224,10)" fg:x="1024" fg:w="1"/><text x="82.3671%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1171%" y="389" width="0.0802%" height="15" fill="rgb(226,54,34)" fg:x="1024" fg:w="1"/><text x="82.3671%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.1171%" y="373" width="0.0802%" height="15" fill="rgb(222,60,8)" fg:x="1024" fg:w="1"/><text x="82.3671%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1171%" y="357" width="0.0802%" height="15" fill="rgb(248,228,41)" fg:x="1024" fg:w="1"/><text x="82.3671%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1171%" y="341" width="0.0802%" height="15" fill="rgb(226,31,32)" fg:x="1024" fg:w="1"/><text x="82.3671%" y="351.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="82.1973%" y="453" width="0.0802%" height="15" fill="rgb(242,132,49)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="82.1973%" y="437" width="0.0802%" height="15" fill="rgb(224,194,19)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.1973%" y="421" width="0.0802%" height="15" fill="rgb(232,200,51)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.1973%" y="405" width="0.0802%" height="15" fill="rgb(235,60,46)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1973%" y="389" width="0.0802%" height="15" fill="rgb(240,109,52)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1973%" y="373" width="0.0802%" height="15" fill="rgb(215,78,37)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.1973%" y="357" width="0.0802%" height="15" fill="rgb(225,141,7)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1973%" y="341" width="0.0802%" height="15" fill="rgb(216,102,54)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.2775%" y="341" width="0.0802%" height="15" fill="rgb(238,143,13)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.2775%" y="325" width="0.0802%" height="15" fill="rgb(219,45,51)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2775%" y="309" width="0.0802%" height="15" fill="rgb(242,105,46)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="319.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="82.3577%" y="341" width="0.0802%" height="15" fill="rgb(206,154,49)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="351.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.3577%" y="325" width="0.0802%" height="15" fill="rgb(239,215,4)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="335.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3577%" y="309" width="0.0802%" height="15" fill="rgb(238,82,17)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.3577%" y="293" width="0.0802%" height="15" fill="rgb(242,49,30)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="303.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.4379%" y="325" width="0.0802%" height="15" fill="rgb(248,5,16)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.4379%" y="309" width="0.0802%" height="15" fill="rgb(237,138,32)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4379%" y="293" width="0.0802%" height="15" fill="rgb(235,79,45)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4379%" y="277" width="0.0802%" height="15" fill="rgb(213,105,25)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4379%" y="261" width="0.0802%" height="15" fill="rgb(251,131,7)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.4379%" y="245" width="0.0802%" height="15" fill="rgb(211,155,7)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4379%" y="229" width="0.0802%" height="15" fill="rgb(243,70,15)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.4379%" y="213" width="0.0802%" height="15" fill="rgb(215,171,2)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="223.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.4379%" y="341" width="0.1604%" height="15" fill="rgb(244,121,35)" fg:x="1028" fg:w="2"/><text x="82.6879%" y="351.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="82.5180%" y="325" width="0.0802%" height="15" fill="rgb(249,147,17)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="82.5180%" y="309" width="0.0802%" height="15" fill="rgb(241,193,52)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5982%" y="277" width="0.0802%" height="15" fill="rgb(217,159,39)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.5982%" y="261" width="0.0802%" height="15" fill="rgb(248,110,0)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.5982%" y="245" width="0.0802%" height="15" fill="rgb(233,227,0)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5982%" y="229" width="0.0802%" height="15" fill="rgb(252,55,2)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="239.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="82.2775%" y="437" width="0.4812%" height="15" fill="rgb(224,194,24)" fg:x="1026" fg:w="6"/><text x="82.5275%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="82.2775%" y="421" width="0.4812%" height="15" fill="rgb(247,5,33)" fg:x="1026" fg:w="6"/><text x="82.5275%" y="431.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="82.2775%" y="405" width="0.4812%" height="15" fill="rgb(242,66,47)" fg:x="1026" fg:w="6"/><text x="82.5275%" y="415.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="82.2775%" y="389" width="0.4812%" height="15" fill="rgb(213,107,12)" fg:x="1026" fg:w="6"/><text x="82.5275%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="82.2775%" y="373" width="0.4812%" height="15" fill="rgb(206,131,1)" fg:x="1026" fg:w="6"/><text x="82.5275%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="82.2775%" y="357" width="0.4812%" height="15" fill="rgb(214,9,36)" fg:x="1026" fg:w="6"/><text x="82.5275%" y="367.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="82.5982%" y="341" width="0.1604%" height="15" fill="rgb(251,215,18)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="82.5982%" y="325" width="0.1604%" height="15" fill="rgb(251,64,9)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.5982%" y="309" width="0.1604%" height="15" fill="rgb(235,68,21)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.5982%" y="293" width="0.1604%" height="15" fill="rgb(240,69,38)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.6784%" y="277" width="0.0802%" height="15" fill="rgb(231,18,27)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6784%" y="261" width="0.0802%" height="15" fill="rgb(215,154,25)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.6784%" y="245" width="0.0802%" height="15" fill="rgb(224,33,46)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6784%" y="229" width="0.0802%" height="15" fill="rgb(248,191,53)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6784%" y="213" width="0.0802%" height="15" fill="rgb(231,3,37)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6784%" y="197" width="0.0802%" height="15" fill="rgb(209,152,2)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="207.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="82.7586%" y="421" width="0.0802%" height="15" fill="rgb(212,208,43)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7586%" y="405" width="0.0802%" height="15" fill="rgb(208,60,49)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.7586%" y="389" width="0.0802%" height="15" fill="rgb(245,135,6)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.8388%" y="373" width="0.0802%" height="15" fill="rgb(243,86,23)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.9190%" y="293" width="0.0802%" height="15" fill="rgb(223,7,20)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.9190%" y="277" width="0.0802%" height="15" fill="rgb(212,182,17)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.9190%" y="261" width="0.0802%" height="15" fill="rgb(237,94,50)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9190%" y="245" width="0.0802%" height="15" fill="rgb(232,185,44)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.9992%" y="277" width="0.0802%" height="15" fill="rgb(205,50,36)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9992%" y="261" width="0.0802%" height="15" fill="rgb(252,32,32)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9992%" y="245" width="0.0802%" height="15" fill="rgb(241,123,33)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="83.0794%" y="277" width="0.2406%" height="15" fill="rgb(212,140,16)" fg:x="1036" fg:w="3"/><text x="83.3294%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.2398%" y="261" width="0.0802%" height="15" fill="rgb(247,132,5)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.2398%" y="245" width="0.0802%" height="15" fill="rgb(209,137,38)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.2398%" y="229" width="0.0802%" height="15" fill="rgb(248,32,42)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="239.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.3200%" y="261" width="0.0802%" height="15" fill="rgb(216,188,40)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="271.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.3200%" y="245" width="0.0802%" height="15" fill="rgb(209,127,53)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.3200%" y="277" width="0.4010%" height="15" fill="rgb(254,162,9)" fg:x="1039" fg:w="5"/><text x="83.5700%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="83.4002%" y="261" width="0.3208%" height="15" fill="rgb(219,183,10)" fg:x="1040" fg:w="4"/><text x="83.6502%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="83.4002%" y="245" width="0.3208%" height="15" fill="rgb(217,192,21)" fg:x="1040" fg:w="4"/><text x="83.6502%" y="255.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="83.4804%" y="229" width="0.2406%" height="15" fill="rgb(251,89,27)" fg:x="1041" fg:w="3"/><text x="83.7304%" y="239.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="82.9190%" y="325" width="0.9623%" height="15" fill="rgb(253,55,28)" fg:x="1034" fg:w="12"/><text x="83.1690%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="82.9190%" y="309" width="0.9623%" height="15" fill="rgb(216,159,8)" fg:x="1034" fg:w="12"/><text x="83.1690%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="82.9992%" y="293" width="0.8821%" height="15" fill="rgb(231,228,44)" fg:x="1035" fg:w="11"/><text x="83.2492%" y="303.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.7209%" y="277" width="0.1604%" height="15" fill="rgb(247,34,48)" fg:x="1044" fg:w="2"/><text x="83.9709%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.8011%" y="261" width="0.0802%" height="15" fill="rgb(247,222,18)" fg:x="1045" fg:w="1"/><text x="84.0511%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.8011%" y="245" width="0.0802%" height="15" fill="rgb(227,49,4)" fg:x="1045" fg:w="1"/><text x="84.0511%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.9615%" y="277" width="0.0802%" height="15" fill="rgb(219,189,53)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.8813%" y="325" width="0.2406%" height="15" fill="rgb(241,160,53)" fg:x="1046" fg:w="3"/><text x="84.1313%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="83.8813%" y="309" width="0.2406%" height="15" fill="rgb(227,115,4)" fg:x="1046" fg:w="3"/><text x="84.1313%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.8813%" y="293" width="0.2406%" height="15" fill="rgb(215,28,28)" fg:x="1046" fg:w="3"/><text x="84.1313%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0417%" y="277" width="0.0802%" height="15" fill="rgb(237,143,40)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.0417%" y="261" width="0.0802%" height="15" fill="rgb(205,107,24)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1219%" y="277" width="0.0802%" height="15" fill="rgb(209,112,35)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1219%" y="261" width="0.0802%" height="15" fill="rgb(206,135,5)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2021%" y="261" width="0.0802%" height="15" fill="rgb(227,217,38)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="271.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="84.2021%" y="277" width="0.1604%" height="15" fill="rgb(205,0,41)" fg:x="1050" fg:w="2"/><text x="84.4521%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.2823%" y="261" width="0.0802%" height="15" fill="rgb(220,20,40)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.3625%" y="229" width="0.0802%" height="15" fill="rgb(216,145,3)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="239.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3625%" y="213" width="0.0802%" height="15" fill="rgb(207,130,51)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.3625%" y="197" width="0.0802%" height="15" fill="rgb(252,93,13)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5229%" y="165" width="0.0802%" height="15" fill="rgb(210,105,15)" fg:x="1054" fg:w="1"/><text x="84.7729%" y="175.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="84.3625%" y="245" width="0.3208%" height="15" fill="rgb(212,126,31)" fg:x="1052" fg:w="4"/><text x="84.6125%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="84.4427%" y="229" width="0.2406%" height="15" fill="rgb(241,167,46)" fg:x="1053" fg:w="3"/><text x="84.6927%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="84.4427%" y="213" width="0.2406%" height="15" fill="rgb(217,143,19)" fg:x="1053" fg:w="3"/><text x="84.6927%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.5229%" y="197" width="0.1604%" height="15" fill="rgb(235,117,33)" fg:x="1054" fg:w="2"/><text x="84.7729%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.5229%" y="181" width="0.1604%" height="15" fill="rgb(247,95,6)" fg:x="1054" fg:w="2"/><text x="84.7729%" y="191.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.6030%" y="165" width="0.0802%" height="15" fill="rgb(243,206,43)" fg:x="1055" fg:w="1"/><text x="84.8530%" y="175.50"></text></g><g><title>engine::session::Session::flush (25 samples, 2.00%)</title><rect x="82.7586%" y="437" width="2.0048%" height="15" fill="rgb(229,65,54)" fg:x="1032" fg:w="25"/><text x="83.0086%" y="447.50">e..</text></g><g><title>engine::session::Session::save_changes (24 samples, 1.92%)</title><rect x="82.8388%" y="421" width="1.9246%" height="15" fill="rgb(247,137,34)" fg:x="1033" fg:w="24"/><text x="83.0888%" y="431.50">e..</text></g><g><title>engine::session::state::State::close (24 samples, 1.92%)</title><rect x="82.8388%" y="405" width="1.9246%" height="15" fill="rgb(245,174,44)" fg:x="1033" fg:w="24"/><text x="83.0888%" y="415.50">e..</text></g><g><title>engine::session::state::State::flush_entities (24 samples, 1.92%)</title><rect x="82.8388%" y="389" width="1.9246%" height="15" fill="rgb(223,64,15)" fg:x="1033" fg:w="24"/><text x="83.0888%" y="399.50">e..</text></g><g><title>core::iter::adapters::try_process (23 samples, 1.84%)</title><rect x="82.9190%" y="373" width="1.8444%" height="15" fill="rgb(243,153,36)" fg:x="1034" fg:w="23"/><text x="83.1690%" y="383.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.84%)</title><rect x="82.9190%" y="357" width="1.8444%" height="15" fill="rgb(252,23,4)" fg:x="1034" fg:w="23"/><text x="83.1690%" y="367.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (23 samples, 1.84%)</title><rect x="82.9190%" y="341" width="1.8444%" height="15" fill="rgb(209,132,13)" fg:x="1034" fg:w="23"/><text x="83.1690%" y="351.50">e..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="84.1219%" y="325" width="0.6415%" height="15" fill="rgb(209,196,21)" fg:x="1049" fg:w="8"/><text x="84.3719%" y="335.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="84.1219%" y="309" width="0.6415%" height="15" fill="rgb(252,197,1)" fg:x="1049" fg:w="8"/><text x="84.3719%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="84.1219%" y="293" width="0.6415%" height="15" fill="rgb(229,42,46)" fg:x="1049" fg:w="8"/><text x="84.3719%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="84.3625%" y="277" width="0.4010%" height="15" fill="rgb(219,85,8)" fg:x="1052" fg:w="5"/><text x="84.6125%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="84.3625%" y="261" width="0.4010%" height="15" fill="rgb(223,185,14)" fg:x="1052" fg:w="5"/><text x="84.6125%" y="271.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.6832%" y="245" width="0.0802%" height="15" fill="rgb(217,196,18)" fg:x="1056" fg:w="1"/><text x="84.9332%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6832%" y="229" width="0.0802%" height="15" fill="rgb(220,122,37)" fg:x="1056" fg:w="1"/><text x="84.9332%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.7634%" y="341" width="0.1604%" height="15" fill="rgb(236,135,33)" fg:x="1057" fg:w="2"/><text x="85.0134%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8436%" y="325" width="0.0802%" height="15" fill="rgb(222,86,54)" fg:x="1058" fg:w="1"/><text x="85.0936%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8436%" y="309" width="0.0802%" height="15" fill="rgb(227,42,22)" fg:x="1058" fg:w="1"/><text x="85.0936%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="84.7634%" y="405" width="0.3208%" height="15" fill="rgb(243,101,27)" fg:x="1057" fg:w="4"/><text x="85.0134%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="84.7634%" y="389" width="0.3208%" height="15" fill="rgb(229,100,8)" fg:x="1057" fg:w="4"/><text x="85.0134%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="84.7634%" y="373" width="0.3208%" height="15" fill="rgb(252,68,10)" fg:x="1057" fg:w="4"/><text x="85.0134%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="84.7634%" y="357" width="0.3208%" height="15" fill="rgb(219,19,31)" fg:x="1057" fg:w="4"/><text x="85.0134%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.9238%" y="341" width="0.1604%" height="15" fill="rgb(246,150,44)" fg:x="1059" fg:w="2"/><text x="85.1738%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.9238%" y="325" width="0.1604%" height="15" fill="rgb(211,14,39)" fg:x="1059" fg:w="2"/><text x="85.1738%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="84.9238%" y="309" width="0.1604%" height="15" fill="rgb(221,98,29)" fg:x="1059" fg:w="2"/><text x="85.1738%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.9238%" y="293" width="0.1604%" height="15" fill="rgb(221,70,26)" fg:x="1059" fg:w="2"/><text x="85.1738%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.9238%" y="277" width="0.1604%" height="15" fill="rgb(236,146,30)" fg:x="1059" fg:w="2"/><text x="85.1738%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0040%" y="261" width="0.0802%" height="15" fill="rgb(226,94,34)" fg:x="1060" fg:w="1"/><text x="85.2540%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0040%" y="245" width="0.0802%" height="15" fill="rgb(248,132,21)" fg:x="1060" fg:w="1"/><text x="85.2540%" y="255.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.0842%" y="405" width="0.0802%" height="15" fill="rgb(245,43,50)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="415.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0842%" y="389" width="0.0802%" height="15" fill="rgb(245,132,31)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.0842%" y="373" width="0.0802%" height="15" fill="rgb(230,171,4)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.0842%" y="357" width="0.0802%" height="15" fill="rgb(235,6,45)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="367.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0842%" y="341" width="0.0802%" height="15" fill="rgb(220,80,28)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.0842%" y="325" width="0.0802%" height="15" fill="rgb(242,171,9)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0842%" y="309" width="0.0802%" height="15" fill="rgb(214,135,29)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0842%" y="293" width="0.0802%" height="15" fill="rgb(221,229,16)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.0842%" y="277" width="0.0802%" height="15" fill="rgb(253,59,46)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.1644%" y="389" width="0.0802%" height="15" fill="rgb(250,147,20)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.1644%" y="373" width="0.0802%" height="15" fill="rgb(236,64,48)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.1644%" y="357" width="0.0802%" height="15" fill="rgb(240,37,42)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.1644%" y="341" width="0.0802%" height="15" fill="rgb(220,41,50)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.1644%" y="325" width="0.0802%" height="15" fill="rgb(216,51,14)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="335.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.64%)</title><rect x="84.7634%" y="437" width="0.6415%" height="15" fill="rgb(215,83,10)" fg:x="1057" fg:w="8"/><text x="85.0134%" y="447.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.64%)</title><rect x="84.7634%" y="421" width="0.6415%" height="15" fill="rgb(206,144,17)" fg:x="1057" fg:w="8"/><text x="85.0134%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="85.1644%" y="405" width="0.2406%" height="15" fill="rgb(219,196,37)" fg:x="1062" fg:w="3"/><text x="85.4144%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="85.2446%" y="389" width="0.1604%" height="15" fill="rgb(226,135,26)" fg:x="1063" fg:w="2"/><text x="85.4946%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.2446%" y="373" width="0.1604%" height="15" fill="rgb(237,195,40)" fg:x="1063" fg:w="2"/><text x="85.4946%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="85.3248%" y="357" width="0.0802%" height="15" fill="rgb(228,182,42)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="85.3248%" y="341" width="0.0802%" height="15" fill="rgb(224,135,50)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="351.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.3248%" y="325" width="0.0802%" height="15" fill="rgb(236,215,34)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.3248%" y="309" width="0.0802%" height="15" fill="rgb(244,213,27)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="319.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="85.3248%" y="293" width="0.0802%" height="15" fill="rgb(233,37,53)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="85.3248%" y="277" width="0.0802%" height="15" fill="rgb(222,132,14)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.3248%" y="261" width="0.0802%" height="15" fill="rgb(219,202,29)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.3248%" y="245" width="0.0802%" height="15" fill="rgb(226,157,39)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.3248%" y="229" width="0.0802%" height="15" fill="rgb(235,213,2)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.3248%" y="213" width="0.0802%" height="15" fill="rgb(250,121,2)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.3248%" y="197" width="0.0802%" height="15" fill="rgb(206,192,33)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.3248%" y="181" width="0.0802%" height="15" fill="rgb(240,161,6)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3248%" y="165" width="0.0802%" height="15" fill="rgb(246,53,30)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.4050%" y="389" width="0.0802%" height="15" fill="rgb(219,123,43)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.4050%" y="373" width="0.0802%" height="15" fill="rgb(236,53,49)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.4050%" y="357" width="0.0802%" height="15" fill="rgb(241,156,1)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.4050%" y="341" width="0.0802%" height="15" fill="rgb(209,73,26)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.4050%" y="325" width="0.0802%" height="15" fill="rgb(206,114,3)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.4050%" y="309" width="0.0802%" height="15" fill="rgb(230,214,9)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="85.4852%" y="341" width="0.1604%" height="15" fill="rgb(240,184,46)" fg:x="1066" fg:w="2"/><text x="85.7352%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="85.4852%" y="325" width="0.1604%" height="15" fill="rgb(242,169,54)" fg:x="1066" fg:w="2"/><text x="85.7352%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="85.4852%" y="309" width="0.1604%" height="15" fill="rgb(207,168,50)" fg:x="1066" fg:w="2"/><text x="85.7352%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="85.4852%" y="293" width="0.1604%" height="15" fill="rgb(240,114,2)" fg:x="1066" fg:w="2"/><text x="85.7352%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="85.4852%" y="277" width="0.1604%" height="15" fill="rgb(211,17,40)" fg:x="1066" fg:w="2"/><text x="85.7352%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="85.4852%" y="261" width="0.1604%" height="15" fill="rgb(235,97,36)" fg:x="1066" fg:w="2"/><text x="85.7352%" y="271.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.5654%" y="245" width="0.0802%" height="15" fill="rgb(208,164,11)" fg:x="1067" fg:w="1"/><text x="85.8154%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5654%" y="229" width="0.0802%" height="15" fill="rgb(242,11,17)" fg:x="1067" fg:w="1"/><text x="85.8154%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5654%" y="213" width="0.0802%" height="15" fill="rgb(215,86,33)" fg:x="1067" fg:w="1"/><text x="85.8154%" y="223.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="85.4852%" y="389" width="0.2406%" height="15" fill="rgb(245,185,28)" fg:x="1066" fg:w="3"/><text x="85.7352%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="85.4852%" y="373" width="0.2406%" height="15" fill="rgb(231,89,42)" fg:x="1066" fg:w="3"/><text x="85.7352%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="85.4852%" y="357" width="0.2406%" height="15" fill="rgb(210,18,47)" fg:x="1066" fg:w="3"/><text x="85.7352%" y="367.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="85.6455%" y="341" width="0.0802%" height="15" fill="rgb(214,84,8)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.7257%" y="373" width="0.0802%" height="15" fill="rgb(214,222,23)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.7257%" y="357" width="0.0802%" height="15" fill="rgb(213,104,21)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7257%" y="341" width="0.0802%" height="15" fill="rgb(238,138,6)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7257%" y="325" width="0.0802%" height="15" fill="rgb(205,167,50)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="335.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="85.4050%" y="421" width="0.4812%" height="15" fill="rgb(230,105,27)" fg:x="1065" fg:w="6"/><text x="85.6550%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="85.4050%" y="405" width="0.4812%" height="15" fill="rgb(222,97,48)" fg:x="1065" fg:w="6"/><text x="85.6550%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="85.7257%" y="389" width="0.1604%" height="15" fill="rgb(222,197,14)" fg:x="1069" fg:w="2"/><text x="85.9757%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.8059%" y="373" width="0.0802%" height="15" fill="rgb(210,105,47)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.8059%" y="357" width="0.0802%" height="15" fill="rgb(238,158,19)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8059%" y="341" width="0.0802%" height="15" fill="rgb(226,176,23)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8059%" y="325" width="0.0802%" height="15" fill="rgb(208,79,31)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.8059%" y="309" width="0.0802%" height="15" fill="rgb(221,154,21)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.8059%" y="293" width="0.0802%" height="15" fill="rgb(213,61,41)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.8059%" y="277" width="0.0802%" height="15" fill="rgb(215,28,33)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.8059%" y="261" width="0.0802%" height="15" fill="rgb(231,139,26)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.8059%" y="245" width="0.0802%" height="15" fill="rgb(232,159,16)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.8059%" y="229" width="0.0802%" height="15" fill="rgb(233,80,10)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.8059%" y="213" width="0.0802%" height="15" fill="rgb(208,147,29)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="223.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.8861%" y="405" width="0.0802%" height="15" fill="rgb(213,10,12)" fg:x="1071" fg:w="1"/><text x="86.1361%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.8861%" y="389" width="0.0802%" height="15" fill="rgb(231,218,13)" fg:x="1071" fg:w="1"/><text x="86.1361%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.8861%" y="373" width="0.0802%" height="15" fill="rgb(244,199,44)" fg:x="1071" fg:w="1"/><text x="86.1361%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.8861%" y="357" width="0.0802%" height="15" fill="rgb(240,144,53)" fg:x="1071" fg:w="1"/><text x="86.1361%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8861%" y="341" width="0.0802%" height="15" fill="rgb(223,57,28)" fg:x="1071" fg:w="1"/><text x="86.1361%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8861%" y="325" width="0.0802%" height="15" fill="rgb(213,134,38)" fg:x="1071" fg:w="1"/><text x="86.1361%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.8861%" y="309" width="0.0802%" height="15" fill="rgb(251,182,42)" fg:x="1071" fg:w="1"/><text x="86.1361%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="85.9663%" y="341" width="0.0802%" height="15" fill="rgb(229,93,13)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9663%" y="325" width="0.0802%" height="15" fill="rgb(234,171,3)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="335.50"></text></g><g><title>plugins_core::build::Build::occupying (9 samples, 0.72%)</title><rect x="85.4050%" y="437" width="0.7217%" height="15" fill="rgb(241,105,32)" fg:x="1065" fg:w="9"/><text x="85.6550%" y="447.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="85.8861%" y="421" width="0.2406%" height="15" fill="rgb(221,66,3)" fg:x="1071" fg:w="3"/><text x="86.1361%" y="431.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="85.9663%" y="405" width="0.1604%" height="15" fill="rgb(248,155,29)" fg:x="1072" fg:w="2"/><text x="86.2163%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="85.9663%" y="389" width="0.1604%" height="15" fill="rgb(231,31,5)" fg:x="1072" fg:w="2"/><text x="86.2163%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="85.9663%" y="373" width="0.1604%" height="15" fill="rgb(213,188,31)" fg:x="1072" fg:w="2"/><text x="86.2163%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.9663%" y="357" width="0.1604%" height="15" fill="rgb(212,104,33)" fg:x="1072" fg:w="2"/><text x="86.2163%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.0465%" y="341" width="0.0802%" height="15" fill="rgb(254,77,51)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0465%" y="325" width="0.0802%" height="15" fill="rgb(234,39,26)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0465%" y="309" width="0.0802%" height="15" fill="rgb(208,88,36)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0465%" y="293" width="0.0802%" height="15" fill="rgb(243,222,10)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0465%" y="277" width="0.0802%" height="15" fill="rgb(218,133,52)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0465%" y="261" width="0.0802%" height="15" fill="rgb(222,25,26)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.0465%" y="245" width="0.0802%" height="15" fill="rgb(243,174,24)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.0465%" y="229" width="0.0802%" height="15" fill="rgb(233,188,52)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.0465%" y="213" width="0.0802%" height="15" fill="rgb(208,89,14)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0465%" y="197" width="0.0802%" height="15" fill="rgb(205,204,21)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0465%" y="181" width="0.0802%" height="15" fill="rgb(246,39,28)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.0465%" y="165" width="0.0802%" height="15" fill="rgb(235,71,19)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.0465%" y="149" width="0.0802%" height="15" fill="rgb(211,62,39)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.0465%" y="133" width="0.0802%" height="15" fill="rgb(246,118,20)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.0465%" y="117" width="0.0802%" height="15" fill="rgb(230,82,12)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0465%" y="101" width="0.0802%" height="15" fill="rgb(205,212,34)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1267%" y="389" width="0.0802%" height="15" fill="rgb(239,90,1)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="86.1267%" y="421" width="0.1604%" height="15" fill="rgb(225,198,50)" fg:x="1074" fg:w="2"/><text x="86.3767%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="86.1267%" y="405" width="0.1604%" height="15" fill="rgb(227,208,48)" fg:x="1074" fg:w="2"/><text x="86.3767%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.2069%" y="389" width="0.0802%" height="15" fill="rgb(238,134,41)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.2069%" y="373" width="0.0802%" height="15" fill="rgb(241,58,39)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.2069%" y="357" width="0.0802%" height="15" fill="rgb(214,126,4)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2069%" y="341" width="0.0802%" height="15" fill="rgb(235,149,4)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2069%" y="325" width="0.0802%" height="15" fill="rgb(236,59,29)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.2069%" y="309" width="0.0802%" height="15" fill="rgb(246,11,33)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2069%" y="293" width="0.0802%" height="15" fill="rgb(232,180,35)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2069%" y="277" width="0.0802%" height="15" fill="rgb(220,35,37)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="287.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (52 samples, 4.17%)</title><rect x="82.2775%" y="453" width="4.1700%" height="15" fill="rgb(238,107,48)" fg:x="1026" fg:w="52"/><text x="82.5275%" y="463.50">plugi..</text></g><g><title>plugins_core::build::Build::wearing (4 samples, 0.32%)</title><rect x="86.1267%" y="437" width="0.3208%" height="15" fill="rgb(205,65,21)" fg:x="1074" fg:w="4"/><text x="86.3767%" y="447.50"></text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="86.2871%" y="421" width="0.1604%" height="15" fill="rgb(246,138,48)" fg:x="1076" fg:w="2"/><text x="86.5371%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::fashion::model::Wearing&gt;&gt; (1 samples, 0.08%)</title><rect x="86.3673%" y="405" width="0.0802%" height="15" fill="rgb(209,220,47)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="86.4475%" y="405" width="0.0802%" height="15" fill="rgb(222,162,49)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="415.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="86.4475%" y="389" width="0.0802%" height="15" fill="rgb(243,123,11)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.4475%" y="373" width="0.0802%" height="15" fill="rgb(221,229,41)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.4475%" y="357" width="0.0802%" height="15" fill="rgb(216,68,4)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="86.4475%" y="453" width="0.1604%" height="15" fill="rgb(207,88,35)" fg:x="1078" fg:w="2"/><text x="86.6975%" y="463.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="86.4475%" y="437" width="0.1604%" height="15" fill="rgb(252,2,5)" fg:x="1078" fg:w="2"/><text x="86.6975%" y="447.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="86.4475%" y="421" width="0.1604%" height="15" fill="rgb(209,173,7)" fg:x="1078" fg:w="2"/><text x="86.6975%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="86.5277%" y="405" width="0.0802%" height="15" fill="rgb(210,198,52)" fg:x="1079" fg:w="1"/><text x="86.7777%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="86.5277%" y="389" width="0.0802%" height="15" fill="rgb(228,152,32)" fg:x="1079" fg:w="1"/><text x="86.7777%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.6881%" y="357" width="0.0802%" height="15" fill="rgb(249,98,29)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.6881%" y="341" width="0.0802%" height="15" fill="rgb(205,148,48)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.6881%" y="325" width="0.0802%" height="15" fill="rgb(236,69,34)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6881%" y="309" width="0.0802%" height="15" fill="rgb(220,151,41)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="86.6079%" y="389" width="0.2406%" height="15" fill="rgb(254,106,24)" fg:x="1080" fg:w="3"/><text x="86.8579%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="86.6079%" y="373" width="0.2406%" height="15" fill="rgb(210,37,48)" fg:x="1080" fg:w="3"/><text x="86.8579%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7682%" y="357" width="0.0802%" height="15" fill="rgb(254,131,5)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7682%" y="341" width="0.0802%" height="15" fill="rgb(216,55,41)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.7682%" y="325" width="0.0802%" height="15" fill="rgb(250,35,31)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7682%" y="309" width="0.0802%" height="15" fill="rgb(207,124,33)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.7682%" y="293" width="0.0802%" height="15" fill="rgb(249,175,17)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.7682%" y="277" width="0.0802%" height="15" fill="rgb(224,175,39)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7682%" y="261" width="0.0802%" height="15" fill="rgb(208,67,49)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="271.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="86.8484%" y="389" width="0.1604%" height="15" fill="rgb(222,188,41)" fg:x="1083" fg:w="2"/><text x="87.0984%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.8484%" y="373" width="0.1604%" height="15" fill="rgb(243,213,30)" fg:x="1083" fg:w="2"/><text x="87.0984%" y="383.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="86.8484%" y="357" width="0.1604%" height="15" fill="rgb(253,100,45)" fg:x="1083" fg:w="2"/><text x="87.0984%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.8484%" y="341" width="0.1604%" height="15" fill="rgb(226,24,44)" fg:x="1083" fg:w="2"/><text x="87.0984%" y="351.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="86.9286%" y="325" width="0.0802%" height="15" fill="rgb(215,41,24)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9286%" y="309" width="0.0802%" height="15" fill="rgb(254,53,33)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="87.0088%" y="389" width="0.0802%" height="15" fill="rgb(242,103,10)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="87.0088%" y="373" width="0.0802%" height="15" fill="rgb(246,29,21)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.0088%" y="357" width="0.0802%" height="15" fill="rgb(251,154,1)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.0088%" y="341" width="0.0802%" height="15" fill="rgb(254,212,26)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0088%" y="325" width="0.0802%" height="15" fill="rgb(251,187,46)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="86.6079%" y="405" width="0.6415%" height="15" fill="rgb(224,208,14)" fg:x="1080" fg:w="8"/><text x="86.8579%" y="415.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="87.0890%" y="389" width="0.1604%" height="15" fill="rgb(222,176,26)" fg:x="1086" fg:w="2"/><text x="87.3390%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="87.0890%" y="373" width="0.1604%" height="15" fill="rgb(241,219,52)" fg:x="1086" fg:w="2"/><text x="87.3390%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.0890%" y="357" width="0.1604%" height="15" fill="rgb(252,198,21)" fg:x="1086" fg:w="2"/><text x="87.3390%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.0890%" y="341" width="0.1604%" height="15" fill="rgb(244,196,23)" fg:x="1086" fg:w="2"/><text x="87.3390%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1692%" y="325" width="0.0802%" height="15" fill="rgb(239,121,44)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1692%" y="309" width="0.0802%" height="15" fill="rgb(249,203,23)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.1692%" y="293" width="0.0802%" height="15" fill="rgb(238,219,10)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1692%" y="277" width="0.0802%" height="15" fill="rgb(241,35,46)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1692%" y="261" width="0.0802%" height="15" fill="rgb(218,28,6)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="271.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="86.6079%" y="421" width="0.7217%" height="15" fill="rgb(233,151,50)" fg:x="1080" fg:w="9"/><text x="86.8579%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.2494%" y="405" width="0.0802%" height="15" fill="rgb(208,57,8)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.2494%" y="389" width="0.0802%" height="15" fill="rgb(253,99,10)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2494%" y="373" width="0.0802%" height="15" fill="rgb(237,196,49)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2494%" y="357" width="0.0802%" height="15" fill="rgb(209,51,3)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.2494%" y="341" width="0.0802%" height="15" fill="rgb(238,129,10)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2494%" y="325" width="0.0802%" height="15" fill="rgb(246,201,16)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2494%" y="309" width="0.0802%" height="15" fill="rgb(250,160,20)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2494%" y="293" width="0.0802%" height="15" fill="rgb(251,107,25)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.2494%" y="277" width="0.0802%" height="15" fill="rgb(212,103,39)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2494%" y="261" width="0.0802%" height="15" fill="rgb(207,9,29)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="271.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (10 samples, 0.80%)</title><rect x="86.6079%" y="453" width="0.8019%" height="15" fill="rgb(227,84,3)" fg:x="1080" fg:w="10"/><text x="86.8579%" y="463.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="86.6079%" y="437" width="0.8019%" height="15" fill="rgb(242,194,7)" fg:x="1080" fg:w="10"/><text x="86.8579%" y="447.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="87.3296%" y="421" width="0.0802%" height="15" fill="rgb(230,40,4)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="87.3296%" y="405" width="0.0802%" height="15" fill="rgb(243,229,33)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="415.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.3296%" y="389" width="0.0802%" height="15" fill="rgb(240,65,24)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="399.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="87.3296%" y="373" width="0.0802%" height="15" fill="rgb(212,28,20)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3296%" y="357" width="0.0802%" height="15" fill="rgb(209,72,3)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="87.4098%" y="437" width="0.0802%" height="15" fill="rgb(238,170,36)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.4098%" y="421" width="0.0802%" height="15" fill="rgb(236,19,38)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4098%" y="405" width="0.0802%" height="15" fill="rgb(230,67,43)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4098%" y="389" width="0.0802%" height="15" fill="rgb(227,14,36)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4098%" y="373" width="0.0802%" height="15" fill="rgb(247,171,49)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.4900%" y="405" width="0.0802%" height="15" fill="rgb(235,164,51)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.4900%" y="389" width="0.0802%" height="15" fill="rgb(246,107,20)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4900%" y="373" width="0.0802%" height="15" fill="rgb(226,88,18)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4900%" y="357" width="0.0802%" height="15" fill="rgb(235,136,9)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.4900%" y="341" width="0.0802%" height="15" fill="rgb(209,3,34)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4900%" y="325" width="0.0802%" height="15" fill="rgb(213,38,19)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4900%" y="309" width="0.0802%" height="15" fill="rgb(254,24,24)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4900%" y="293" width="0.0802%" height="15" fill="rgb(219,122,42)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5702%" y="405" width="0.0802%" height="15" fill="rgb(205,128,31)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6504%" y="357" width="0.0802%" height="15" fill="rgb(212,142,0)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6504%" y="341" width="0.0802%" height="15" fill="rgb(211,25,35)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6504%" y="325" width="0.0802%" height="15" fill="rgb(220,150,53)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6504%" y="309" width="0.0802%" height="15" fill="rgb(220,30,24)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.7306%" y="293" width="0.0802%" height="15" fill="rgb(218,86,23)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="87.4900%" y="421" width="0.4010%" height="15" fill="rgb(206,62,27)" fg:x="1091" fg:w="5"/><text x="87.7400%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="87.6504%" y="405" width="0.2406%" height="15" fill="rgb(249,174,0)" fg:x="1093" fg:w="3"/><text x="87.9004%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="87.6504%" y="389" width="0.2406%" height="15" fill="rgb(246,67,27)" fg:x="1093" fg:w="3"/><text x="87.9004%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="87.6504%" y="373" width="0.2406%" height="15" fill="rgb(250,195,30)" fg:x="1093" fg:w="3"/><text x="87.9004%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.7306%" y="357" width="0.1604%" height="15" fill="rgb(251,171,50)" fg:x="1094" fg:w="2"/><text x="87.9806%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.7306%" y="341" width="0.1604%" height="15" fill="rgb(236,196,10)" fg:x="1094" fg:w="2"/><text x="87.9806%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="87.7306%" y="325" width="0.1604%" height="15" fill="rgb(249,228,52)" fg:x="1094" fg:w="2"/><text x="87.9806%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.7306%" y="309" width="0.1604%" height="15" fill="rgb(219,60,51)" fg:x="1094" fg:w="2"/><text x="87.9806%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.8107%" y="293" width="0.0802%" height="15" fill="rgb(240,198,24)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="303.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="87.4900%" y="437" width="0.4812%" height="15" fill="rgb(240,192,40)" fg:x="1091" fg:w="6"/><text x="87.7400%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.8909%" y="421" width="0.0802%" height="15" fill="rgb(219,118,5)" fg:x="1096" fg:w="1"/><text x="88.1409%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="87.8909%" y="405" width="0.0802%" height="15" fill="rgb(205,202,34)" fg:x="1096" fg:w="1"/><text x="88.1409%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.64%)</title><rect x="87.4098%" y="453" width="0.6415%" height="15" fill="rgb(234,153,26)" fg:x="1090" fg:w="8"/><text x="87.6598%" y="463.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="87.9711%" y="437" width="0.0802%" height="15" fill="rgb(229,26,29)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="447.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="87.9711%" y="421" width="0.0802%" height="15" fill="rgb(237,115,21)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="431.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.9711%" y="405" width="0.0802%" height="15" fill="rgb(252,144,15)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.9711%" y="389" width="0.0802%" height="15" fill="rgb(232,26,13)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.9711%" y="373" width="0.0802%" height="15" fill="rgb(206,44,19)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9711%" y="357" width="0.0802%" height="15" fill="rgb(249,159,2)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9711%" y="341" width="0.0802%" height="15" fill="rgb(231,5,32)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.9711%" y="325" width="0.0802%" height="15" fill="rgb(249,210,18)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="335.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (121 samples, 9.70%)</title><rect x="78.5084%" y="469" width="9.7033%" height="15" fill="rgb(215,223,36)" fg:x="979" fg:w="121"/><text x="78.7584%" y="479.50">&lt;tests::Holdin..</text></g><g><title>plugins_core::build::BuildSurroundings::route (2 samples, 0.16%)</title><rect x="88.0513%" y="453" width="0.1604%" height="15" fill="rgb(245,185,20)" fg:x="1098" fg:w="2"/><text x="88.3013%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1315%" y="437" width="0.0802%" height="15" fill="rgb(206,224,11)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="88.2117%" y="453" width="0.0802%" height="15" fill="rgb(248,73,42)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2117%" y="437" width="0.0802%" height="15" fill="rgb(219,149,31)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="88.2919%" y="421" width="0.1604%" height="15" fill="rgb(243,104,17)" fg:x="1101" fg:w="2"/><text x="88.5419%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3721%" y="405" width="0.0802%" height="15" fill="rgb(244,117,33)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="88.4523%" y="357" width="0.1604%" height="15" fill="rgb(251,25,47)" fg:x="1103" fg:w="2"/><text x="88.7023%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="88.4523%" y="341" width="0.1604%" height="15" fill="rgb(249,70,13)" fg:x="1103" fg:w="2"/><text x="88.7023%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.5325%" y="325" width="0.0802%" height="15" fill="rgb(217,133,18)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.6929%" y="341" width="0.0802%" height="15" fill="rgb(248,97,28)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.6929%" y="325" width="0.0802%" height="15" fill="rgb(237,193,4)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.6929%" y="309" width="0.0802%" height="15" fill="rgb(247,198,45)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.6929%" y="293" width="0.0802%" height="15" fill="rgb(245,2,20)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.8532%" y="325" width="0.0802%" height="15" fill="rgb(210,71,36)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.8532%" y="309" width="0.0802%" height="15" fill="rgb(238,114,30)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.8532%" y="293" width="0.0802%" height="15" fill="rgb(241,200,2)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="88.8532%" y="277" width="0.0802%" height="15" fill="rgb(232,106,18)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.0136%" y="309" width="0.1604%" height="15" fill="rgb(211,141,18)" fg:x="1110" fg:w="2"/><text x="89.2636%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.0136%" y="293" width="0.1604%" height="15" fill="rgb(224,9,9)" fg:x="1110" fg:w="2"/><text x="89.2636%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="89.0136%" y="277" width="0.1604%" height="15" fill="rgb(249,137,46)" fg:x="1110" fg:w="2"/><text x="89.2636%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.0938%" y="261" width="0.0802%" height="15" fill="rgb(236,44,45)" fg:x="1111" fg:w="1"/><text x="89.3438%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.1740%" y="293" width="0.1604%" height="15" fill="rgb(205,68,40)" fg:x="1112" fg:w="2"/><text x="89.4240%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.2542%" y="277" width="0.0802%" height="15" fill="rgb(214,198,49)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.2542%" y="261" width="0.0802%" height="15" fill="rgb(226,140,45)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="88.9334%" y="325" width="0.5613%" height="15" fill="rgb(209,109,20)" fg:x="1109" fg:w="7"/><text x="89.1834%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="89.1740%" y="309" width="0.3208%" height="15" fill="rgb(217,33,46)" fg:x="1112" fg:w="4"/><text x="89.4240%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="89.3344%" y="293" width="0.1604%" height="15" fill="rgb(232,150,33)" fg:x="1114" fg:w="2"/><text x="89.5844%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.4146%" y="277" width="0.0802%" height="15" fill="rgb(233,76,25)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="88.7731%" y="341" width="0.8821%" height="15" fill="rgb(254,219,23)" fg:x="1107" fg:w="11"/><text x="89.0231%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.4948%" y="325" width="0.1604%" height="15" fill="rgb(233,108,4)" fg:x="1116" fg:w="2"/><text x="89.7448%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="89.4948%" y="309" width="0.1604%" height="15" fill="rgb(229,98,6)" fg:x="1116" fg:w="2"/><text x="89.7448%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="89.5750%" y="293" width="0.0802%" height="15" fill="rgb(217,40,27)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="303.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="89.7354%" y="261" width="0.0802%" height="15" fill="rgb(221,35,43)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="88.6127%" y="357" width="1.3633%" height="15" fill="rgb(212,107,11)" fg:x="1105" fg:w="17"/><text x="88.8627%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="89.6552%" y="341" width="0.3208%" height="15" fill="rgb(245,42,44)" fg:x="1118" fg:w="4"/><text x="89.9052%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="89.6552%" y="325" width="0.3208%" height="15" fill="rgb(209,31,12)" fg:x="1118" fg:w="4"/><text x="89.9052%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="89.6552%" y="309" width="0.3208%" height="15" fill="rgb(210,228,54)" fg:x="1118" fg:w="4"/><text x="89.9052%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="89.7354%" y="293" width="0.2406%" height="15" fill="rgb(241,19,33)" fg:x="1119" fg:w="3"/><text x="89.9854%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="89.7354%" y="277" width="0.2406%" height="15" fill="rgb(229,51,27)" fg:x="1119" fg:w="3"/><text x="89.9854%" y="287.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="89.8156%" y="261" width="0.1604%" height="15" fill="rgb(214,167,49)" fg:x="1120" fg:w="2"/><text x="90.0656%" y="271.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.60%)</title><rect x="88.4523%" y="373" width="1.6038%" height="15" fill="rgb(248,140,47)" fg:x="1103" fg:w="20"/><text x="88.7023%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.9759%" y="357" width="0.0802%" height="15" fill="rgb(228,6,51)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.9759%" y="341" width="0.0802%" height="15" fill="rgb(242,44,53)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.9759%" y="325" width="0.0802%" height="15" fill="rgb(249,90,50)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.9759%" y="309" width="0.0802%" height="15" fill="rgb(222,84,19)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.9759%" y="293" width="0.0802%" height="15" fill="rgb(214,140,12)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9759%" y="277" width="0.0802%" height="15" fill="rgb(210,20,43)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0561%" y="325" width="0.0802%" height="15" fill="rgb(243,1,40)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1363%" y="309" width="0.0802%" height="15" fill="rgb(224,102,26)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.0561%" y="373" width="0.2406%" height="15" fill="rgb(221,179,1)" fg:x="1123" fg:w="3"/><text x="90.3061%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="90.0561%" y="357" width="0.2406%" height="15" fill="rgb(216,209,47)" fg:x="1123" fg:w="3"/><text x="90.3061%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.0561%" y="341" width="0.2406%" height="15" fill="rgb(251,135,9)" fg:x="1123" fg:w="3"/><text x="90.3061%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.1363%" y="325" width="0.1604%" height="15" fill="rgb(242,9,36)" fg:x="1124" fg:w="2"/><text x="90.3863%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.2165%" y="309" width="0.0802%" height="15" fill="rgb(249,60,37)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2165%" y="293" width="0.0802%" height="15" fill="rgb(230,66,45)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.2967%" y="309" width="0.0802%" height="15" fill="rgb(216,1,47)" fg:x="1126" fg:w="1"/><text x="90.5467%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2967%" y="293" width="0.0802%" height="15" fill="rgb(235,8,23)" fg:x="1126" fg:w="1"/><text x="90.5467%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.3769%" y="293" width="0.1604%" height="15" fill="rgb(225,136,11)" fg:x="1127" fg:w="2"/><text x="90.6269%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="90.2967%" y="341" width="0.4010%" height="15" fill="rgb(228,63,44)" fg:x="1126" fg:w="5"/><text x="90.5467%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="90.2967%" y="325" width="0.4010%" height="15" fill="rgb(240,43,52)" fg:x="1126" fg:w="5"/><text x="90.5467%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="90.3769%" y="309" width="0.3208%" height="15" fill="rgb(217,167,36)" fg:x="1127" fg:w="4"/><text x="90.6269%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.5373%" y="293" width="0.1604%" height="15" fill="rgb(250,19,6)" fg:x="1129" fg:w="2"/><text x="90.7873%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="90.5373%" y="277" width="0.1604%" height="15" fill="rgb(236,60,51)" fg:x="1129" fg:w="2"/><text x="90.7873%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6175%" y="261" width="0.0802%" height="15" fill="rgb(222,217,20)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.7779%" y="325" width="0.0802%" height="15" fill="rgb(242,65,52)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.7779%" y="309" width="0.0802%" height="15" fill="rgb(217,5,41)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.7779%" y="293" width="0.0802%" height="15" fill="rgb(223,208,53)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.7779%" y="277" width="0.0802%" height="15" fill="rgb(221,104,30)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8581%" y="325" width="0.0802%" height="15" fill="rgb(230,210,42)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="90.2967%" y="357" width="0.7217%" height="15" fill="rgb(206,205,27)" fg:x="1126" fg:w="9"/><text x="90.5467%" y="367.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="90.6977%" y="341" width="0.3208%" height="15" fill="rgb(233,114,38)" fg:x="1131" fg:w="4"/><text x="90.9477%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="90.9383%" y="325" width="0.0802%" height="15" fill="rgb(216,174,36)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.9383%" y="309" width="0.0802%" height="15" fill="rgb(211,30,9)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="90.9383%" y="293" width="0.0802%" height="15" fill="rgb(216,8,21)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="90.9383%" y="277" width="0.0802%" height="15" fill="rgb(237,209,39)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.0986%" y="325" width="0.1604%" height="15" fill="rgb(235,111,47)" fg:x="1136" fg:w="2"/><text x="91.3486%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1788%" y="309" width="0.0802%" height="15" fill="rgb(216,139,9)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.1788%" y="293" width="0.0802%" height="15" fill="rgb(248,185,4)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="91.2590%" y="325" width="0.1604%" height="15" fill="rgb(239,185,25)" fg:x="1138" fg:w="2"/><text x="91.5090%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.3392%" y="309" width="0.0802%" height="15" fill="rgb(233,207,8)" fg:x="1139" fg:w="1"/><text x="91.5892%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="91.3392%" y="293" width="0.0802%" height="15" fill="rgb(249,220,24)" fg:x="1139" fg:w="1"/><text x="91.5892%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="91.4194%" y="325" width="0.0802%" height="15" fill="rgb(221,50,14)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.4194%" y="309" width="0.0802%" height="15" fill="rgb(227,79,42)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4194%" y="293" width="0.0802%" height="15" fill="rgb(228,218,49)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="91.4996%" y="325" width="0.0802%" height="15" fill="rgb(249,18,15)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.4996%" y="309" width="0.0802%" height="15" fill="rgb(212,84,27)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4996%" y="293" width="0.0802%" height="15" fill="rgb(207,83,24)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4996%" y="277" width="0.0802%" height="15" fill="rgb(219,61,7)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.7402%" y="245" width="0.1604%" height="15" fill="rgb(211,43,29)" fg:x="1144" fg:w="2"/><text x="91.9902%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8204%" y="229" width="0.0802%" height="15" fill="rgb(243,15,23)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="239.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="91.6600%" y="277" width="0.3208%" height="15" fill="rgb(217,52,28)" fg:x="1143" fg:w="4"/><text x="91.9100%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="91.6600%" y="261" width="0.3208%" height="15" fill="rgb(210,35,6)" fg:x="1143" fg:w="4"/><text x="91.9100%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9006%" y="245" width="0.0802%" height="15" fill="rgb(237,187,28)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="92.3817%" y="229" width="0.1604%" height="15" fill="rgb(231,136,24)" fg:x="1152" fg:w="2"/><text x="92.6317%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.3817%" y="213" width="0.1604%" height="15" fill="rgb(205,176,52)" fg:x="1152" fg:w="2"/><text x="92.6317%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.3817%" y="197" width="0.1604%" height="15" fill="rgb(218,65,12)" fg:x="1152" fg:w="2"/><text x="92.6317%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.3817%" y="181" width="0.1604%" height="15" fill="rgb(234,101,21)" fg:x="1152" fg:w="2"/><text x="92.6317%" y="191.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.60%)</title><rect x="91.0184%" y="357" width="1.6038%" height="15" fill="rgb(206,13,20)" fg:x="1135" fg:w="20"/><text x="91.2684%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.60%)</title><rect x="91.0184%" y="341" width="1.6038%" height="15" fill="rgb(236,89,44)" fg:x="1135" fg:w="20"/><text x="91.2684%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="91.5798%" y="325" width="1.0425%" height="15" fill="rgb(225,52,17)" fg:x="1142" fg:w="13"/><text x="91.8298%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.04%)</title><rect x="91.5798%" y="309" width="1.0425%" height="15" fill="rgb(214,27,25)" fg:x="1142" fg:w="13"/><text x="91.8298%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="91.6600%" y="293" width="0.9623%" height="15" fill="rgb(240,141,35)" fg:x="1143" fg:w="12"/><text x="91.9100%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="91.9808%" y="277" width="0.6415%" height="15" fill="rgb(216,126,3)" fg:x="1147" fg:w="8"/><text x="92.2308%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="92.3817%" y="261" width="0.2406%" height="15" fill="rgb(249,196,23)" fg:x="1152" fg:w="3"/><text x="92.6317%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="92.3817%" y="245" width="0.2406%" height="15" fill="rgb(215,185,43)" fg:x="1152" fg:w="3"/><text x="92.6317%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5421%" y="229" width="0.0802%" height="15" fill="rgb(208,194,36)" fg:x="1154" fg:w="1"/><text x="92.7921%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.9431%" y="181" width="0.0802%" height="15" fill="rgb(245,182,12)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.9431%" y="165" width="0.0802%" height="15" fill="rgb(244,222,52)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="92.8629%" y="213" width="0.2406%" height="15" fill="rgb(236,222,51)" fg:x="1158" fg:w="3"/><text x="93.1129%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.8629%" y="197" width="0.2406%" height="15" fill="rgb(254,71,22)" fg:x="1158" fg:w="3"/><text x="93.1129%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0233%" y="181" width="0.0802%" height="15" fill="rgb(250,104,15)" fg:x="1160" fg:w="1"/><text x="93.2733%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.1836%" y="197" width="0.0802%" height="15" fill="rgb(229,223,46)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1836%" y="181" width="0.0802%" height="15" fill="rgb(209,129,18)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.2638%" y="197" width="0.0802%" height="15" fill="rgb(224,160,1)" fg:x="1163" fg:w="1"/><text x="93.5138%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2638%" y="181" width="0.0802%" height="15" fill="rgb(237,112,21)" fg:x="1163" fg:w="1"/><text x="93.5138%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="92.8629%" y="229" width="0.5613%" height="15" fill="rgb(215,198,53)" fg:x="1158" fg:w="7"/><text x="93.1129%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="93.1034%" y="213" width="0.3208%" height="15" fill="rgb(218,227,35)" fg:x="1161" fg:w="4"/><text x="93.3534%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3440%" y="197" width="0.0802%" height="15" fill="rgb(232,121,22)" fg:x="1164" fg:w="1"/><text x="93.5940%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3440%" y="181" width="0.0802%" height="15" fill="rgb(235,52,54)" fg:x="1164" fg:w="1"/><text x="93.5940%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="92.8629%" y="261" width="0.6415%" height="15" fill="rgb(219,21,44)" fg:x="1158" fg:w="8"/><text x="93.1129%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="92.8629%" y="245" width="0.6415%" height="15" fill="rgb(221,51,43)" fg:x="1158" fg:w="8"/><text x="93.1129%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.4242%" y="229" width="0.0802%" height="15" fill="rgb(225,77,42)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.4242%" y="213" width="0.0802%" height="15" fill="rgb(214,117,53)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4242%" y="197" width="0.0802%" height="15" fill="rgb(218,227,27)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.5044%" y="261" width="0.0802%" height="15" fill="rgb(223,214,36)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5044%" y="245" width="0.0802%" height="15" fill="rgb(235,21,7)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="92.7827%" y="293" width="0.8821%" height="15" fill="rgb(244,216,4)" fg:x="1157" fg:w="11"/><text x="93.0327%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="92.8629%" y="277" width="0.8019%" height="15" fill="rgb(249,197,24)" fg:x="1158" fg:w="10"/><text x="93.1129%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5846%" y="261" width="0.0802%" height="15" fill="rgb(222,169,49)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5846%" y="245" width="0.0802%" height="15" fill="rgb(207,137,33)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="255.50"></text></g><g><title>engine::session::Session::close (69 samples, 5.53%)</title><rect x="88.2117%" y="469" width="5.5333%" height="15" fill="rgb(219,180,40)" fg:x="1100" fg:w="69"/><text x="88.4617%" y="479.50">engine:..</text></g><g><title>engine::session::state::State::close (68 samples, 5.45%)</title><rect x="88.2919%" y="453" width="5.4531%" height="15" fill="rgb(250,163,42)" fg:x="1101" fg:w="68"/><text x="88.5419%" y="463.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (68 samples, 5.45%)</title><rect x="88.2919%" y="437" width="5.4531%" height="15" fill="rgb(239,163,0)" fg:x="1101" fg:w="68"/><text x="88.5419%" y="447.50">engine:..</text></g><g><title>core::iter::adapters::try_process (66 samples, 5.29%)</title><rect x="88.4523%" y="421" width="5.2927%" height="15" fill="rgb(252,38,28)" fg:x="1103" fg:w="66"/><text x="88.7023%" y="431.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (66 samples, 5.29%)</title><rect x="88.4523%" y="405" width="5.2927%" height="15" fill="rgb(254,203,26)" fg:x="1103" fg:w="66"/><text x="88.7023%" y="415.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (66 samples, 5.29%)</title><rect x="88.4523%" y="389" width="5.2927%" height="15" fill="rgb(209,129,32)" fg:x="1103" fg:w="66"/><text x="88.7023%" y="399.50">engine..</text></g><g><title>kernel::model::any_entity_changes (43 samples, 3.45%)</title><rect x="90.2967%" y="373" width="3.4483%" height="15" fill="rgb(207,177,52)" fg:x="1126" fg:w="43"/><text x="90.5467%" y="383.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.12%)</title><rect x="92.6223%" y="357" width="1.1227%" height="15" fill="rgb(230,209,36)" fg:x="1155" fg:w="14"/><text x="92.8723%" y="367.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.12%)</title><rect x="92.6223%" y="341" width="1.1227%" height="15" fill="rgb(238,131,0)" fg:x="1155" fg:w="14"/><text x="92.8723%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.12%)</title><rect x="92.6223%" y="325" width="1.1227%" height="15" fill="rgb(218,61,31)" fg:x="1155" fg:w="14"/><text x="92.8723%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="92.6223%" y="309" width="1.1227%" height="15" fill="rgb(232,6,53)" fg:x="1155" fg:w="14"/><text x="92.8723%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6648%" y="293" width="0.0802%" height="15" fill="rgb(254,100,32)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="303.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="93.8252%" y="309" width="0.0802%" height="15" fill="rgb(229,194,49)" fg:x="1170" fg:w="1"/><text x="94.0752%" y="319.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.8252%" y="293" width="0.0802%" height="15" fill="rgb(206,208,39)" fg:x="1170" fg:w="1"/><text x="94.0752%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="93.9054%" y="293" width="0.1604%" height="15" fill="rgb(246,226,14)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.9054%" y="277" width="0.1604%" height="15" fill="rgb(226,48,32)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.9054%" y="261" width="0.1604%" height="15" fill="rgb(252,43,54)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.9054%" y="245" width="0.1604%" height="15" fill="rgb(207,124,0)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.9856%" y="229" width="0.0802%" height="15" fill="rgb(248,188,30)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9856%" y="213" width="0.0802%" height="15" fill="rgb(232,14,43)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9856%" y="197" width="0.0802%" height="15" fill="rgb(218,52,29)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9856%" y="181" width="0.0802%" height="15" fill="rgb(218,176,50)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.9856%" y="165" width="0.0802%" height="15" fill="rgb(213,112,0)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="175.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.40%)</title><rect x="93.8252%" y="341" width="0.4010%" height="15" fill="rgb(244,216,8)" fg:x="1170" fg:w="5"/><text x="94.0752%" y="351.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (5 samples, 0.40%)</title><rect x="93.8252%" y="325" width="0.4010%" height="15" fill="rgb(224,148,53)" fg:x="1170" fg:w="5"/><text x="94.0752%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="93.9054%" y="309" width="0.3208%" height="15" fill="rgb(241,133,40)" fg:x="1171" fg:w="4"/><text x="94.1554%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="94.0658%" y="293" width="0.1604%" height="15" fill="rgb(232,17,44)" fg:x="1173" fg:w="2"/><text x="94.3158%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.0658%" y="277" width="0.1604%" height="15" fill="rgb(213,32,25)" fg:x="1173" fg:w="2"/><text x="94.3158%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.1460%" y="261" width="0.0802%" height="15" fill="rgb(249,115,27)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1460%" y="245" width="0.0802%" height="15" fill="rgb(241,50,1)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.1460%" y="229" width="0.0802%" height="15" fill="rgb(244,175,40)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1460%" y="213" width="0.0802%" height="15" fill="rgb(230,94,34)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1460%" y="197" width="0.0802%" height="15" fill="rgb(223,185,29)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.1460%" y="181" width="0.0802%" height="15" fill="rgb(225,193,15)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.1460%" y="165" width="0.0802%" height="15" fill="rgb(252,121,38)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="175.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (7 samples, 0.56%)</title><rect x="93.8252%" y="357" width="0.5613%" height="15" fill="rgb(232,44,12)" fg:x="1170" fg:w="7"/><text x="94.0752%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="94.2261%" y="341" width="0.1604%" height="15" fill="rgb(226,45,54)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.2261%" y="325" width="0.1604%" height="15" fill="rgb(209,67,17)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.2261%" y="309" width="0.1604%" height="15" fill="rgb(219,108,52)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.2261%" y="293" width="0.1604%" height="15" fill="rgb(216,118,19)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.3063%" y="277" width="0.0802%" height="15" fill="rgb(228,120,40)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3063%" y="261" width="0.0802%" height="15" fill="rgb(221,218,34)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="94.3063%" y="245" width="0.0802%" height="15" fill="rgb(235,89,14)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="255.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (8 samples, 0.64%)</title><rect x="93.8252%" y="373" width="0.6415%" height="15" fill="rgb(248,89,7)" fg:x="1170" fg:w="8"/><text x="94.0752%" y="383.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="94.3865%" y="357" width="0.0802%" height="15" fill="rgb(212,114,34)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="367.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="94.3865%" y="341" width="0.0802%" height="15" fill="rgb(246,88,32)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="94.3865%" y="325" width="0.0802%" height="15" fill="rgb(237,135,0)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.3865%" y="309" width="0.0802%" height="15" fill="rgb(220,201,54)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.3865%" y="293" width="0.0802%" height="15" fill="rgb(210,142,36)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.3865%" y="277" width="0.0802%" height="15" fill="rgb(247,189,26)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3865%" y="261" width="0.0802%" height="15" fill="rgb(223,89,24)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.3865%" y="245" width="0.0802%" height="15" fill="rgb(205,90,19)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3865%" y="229" width="0.0802%" height="15" fill="rgb(234,57,40)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.3865%" y="213" width="0.0802%" height="15" fill="rgb(213,109,10)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3865%" y="197" width="0.0802%" height="15" fill="rgb(214,189,23)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (10 samples, 0.80%)</title><rect x="93.7450%" y="437" width="0.8019%" height="15" fill="rgb(234,200,10)" fg:x="1169" fg:w="10"/><text x="93.9950%" y="447.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (9 samples, 0.72%)</title><rect x="93.8252%" y="421" width="0.7217%" height="15" fill="rgb(221,148,16)" fg:x="1170" fg:w="9"/><text x="94.0752%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (9 samples, 0.72%)</title><rect x="93.8252%" y="405" width="0.7217%" height="15" fill="rgb(230,115,10)" fg:x="1170" fg:w="9"/><text x="94.0752%" y="415.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (9 samples, 0.72%)</title><rect x="93.8252%" y="389" width="0.7217%" height="15" fill="rgb(220,106,42)" fg:x="1170" fg:w="9"/><text x="94.0752%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.4667%" y="373" width="0.0802%" height="15" fill="rgb(225,105,39)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="94.4667%" y="357" width="0.0802%" height="15" fill="rgb(211,161,38)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.4667%" y="341" width="0.0802%" height="15" fill="rgb(213,23,19)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="94.4667%" y="325" width="0.0802%" height="15" fill="rgb(240,2,33)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="335.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.4667%" y="309" width="0.0802%" height="15" fill="rgb(221,29,45)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="94.4667%" y="293" width="0.0802%" height="15" fill="rgb(242,10,19)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="94.4667%" y="277" width="0.0802%" height="15" fill="rgb(250,84,37)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="287.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="94.4667%" y="261" width="0.0802%" height="15" fill="rgb(214,136,7)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.6271%" y="341" width="0.0802%" height="15" fill="rgb(231,189,12)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.6271%" y="325" width="0.0802%" height="15" fill="rgb(244,40,16)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.6271%" y="309" width="0.0802%" height="15" fill="rgb(217,29,15)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6271%" y="293" width="0.0802%" height="15" fill="rgb(235,172,33)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.6271%" y="373" width="0.1604%" height="15" fill="rgb(206,148,28)" fg:x="1180" fg:w="2"/><text x="94.8771%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.6271%" y="357" width="0.1604%" height="15" fill="rgb(251,167,37)" fg:x="1180" fg:w="2"/><text x="94.8771%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7073%" y="341" width="0.0802%" height="15" fill="rgb(229,94,52)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.7875%" y="181" width="0.0802%" height="15" fill="rgb(216,132,9)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7875%" y="165" width="0.0802%" height="15" fill="rgb(208,110,29)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.7875%" y="277" width="0.1604%" height="15" fill="rgb(241,23,8)" fg:x="1182" fg:w="2"/><text x="95.0375%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.7875%" y="261" width="0.1604%" height="15" fill="rgb(208,26,35)" fg:x="1182" fg:w="2"/><text x="95.0375%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.7875%" y="245" width="0.1604%" height="15" fill="rgb(242,165,34)" fg:x="1182" fg:w="2"/><text x="95.0375%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.7875%" y="229" width="0.1604%" height="15" fill="rgb(222,222,33)" fg:x="1182" fg:w="2"/><text x="95.0375%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="94.7875%" y="213" width="0.1604%" height="15" fill="rgb(227,16,52)" fg:x="1182" fg:w="2"/><text x="95.0375%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.7875%" y="197" width="0.1604%" height="15" fill="rgb(213,93,12)" fg:x="1182" fg:w="2"/><text x="95.0375%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8677%" y="181" width="0.0802%" height="15" fill="rgb(238,41,5)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="191.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="94.7875%" y="373" width="0.2406%" height="15" fill="rgb(211,60,15)" fg:x="1182" fg:w="3"/><text x="95.0375%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.7875%" y="357" width="0.2406%" height="15" fill="rgb(209,11,34)" fg:x="1182" fg:w="3"/><text x="95.0375%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.7875%" y="341" width="0.2406%" height="15" fill="rgb(254,155,53)" fg:x="1182" fg:w="3"/><text x="95.0375%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.7875%" y="325" width="0.2406%" height="15" fill="rgb(236,174,8)" fg:x="1182" fg:w="3"/><text x="95.0375%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.7875%" y="309" width="0.2406%" height="15" fill="rgb(229,31,27)" fg:x="1182" fg:w="3"/><text x="95.0375%" y="319.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.7875%" y="293" width="0.2406%" height="15" fill="rgb(242,226,26)" fg:x="1182" fg:w="3"/><text x="95.0375%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9479%" y="277" width="0.0802%" height="15" fill="rgb(234,32,40)" fg:x="1184" fg:w="1"/><text x="95.1979%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.9479%" y="261" width="0.0802%" height="15" fill="rgb(249,226,47)" fg:x="1184" fg:w="1"/><text x="95.1979%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.0281%" y="197" width="0.0802%" height="15" fill="rgb(212,6,26)" fg:x="1185" fg:w="1"/><text x="95.2781%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.0281%" y="277" width="0.1604%" height="15" fill="rgb(249,202,29)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.0281%" y="261" width="0.1604%" height="15" fill="rgb(226,106,4)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.0281%" y="245" width="0.1604%" height="15" fill="rgb(251,2,27)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.0281%" y="229" width="0.1604%" height="15" fill="rgb(236,208,0)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.0281%" y="213" width="0.1604%" height="15" fill="rgb(211,66,17)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.1083%" y="197" width="0.0802%" height="15" fill="rgb(216,129,9)" fg:x="1186" fg:w="1"/><text x="95.3583%" y="207.50"></text></g><g><title>engine::session::Session::load_entity (8 samples, 0.64%)</title><rect x="94.6271%" y="405" width="0.6415%" height="15" fill="rgb(215,130,23)" fg:x="1180" fg:w="8"/><text x="94.8771%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="94.6271%" y="389" width="0.6415%" height="15" fill="rgb(253,157,11)" fg:x="1180" fg:w="8"/><text x="94.8771%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="95.0281%" y="373" width="0.2406%" height="15" fill="rgb(224,25,14)" fg:x="1185" fg:w="3"/><text x="95.2781%" y="383.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="95.0281%" y="357" width="0.2406%" height="15" fill="rgb(238,16,7)" fg:x="1185" fg:w="3"/><text x="95.2781%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.0281%" y="341" width="0.2406%" height="15" fill="rgb(228,74,11)" fg:x="1185" fg:w="3"/><text x="95.2781%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.0281%" y="325" width="0.2406%" height="15" fill="rgb(239,221,27)" fg:x="1185" fg:w="3"/><text x="95.2781%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.0281%" y="309" width="0.2406%" height="15" fill="rgb(229,166,18)" fg:x="1185" fg:w="3"/><text x="95.2781%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.0281%" y="293" width="0.2406%" height="15" fill="rgb(254,94,46)" fg:x="1185" fg:w="3"/><text x="95.2781%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.1885%" y="277" width="0.0802%" height="15" fill="rgb(241,79,19)" fg:x="1187" fg:w="1"/><text x="95.4385%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1885%" y="261" width="0.0802%" height="15" fill="rgb(228,99,51)" fg:x="1187" fg:w="1"/><text x="95.4385%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2686%" y="325" width="0.0802%" height="15" fill="rgb(211,15,6)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2686%" y="309" width="0.0802%" height="15" fill="rgb(245,107,54)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2686%" y="293" width="0.0802%" height="15" fill="rgb(243,3,2)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2686%" y="277" width="0.0802%" height="15" fill="rgb(206,122,10)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.2686%" y="261" width="0.0802%" height="15" fill="rgb(224,88,4)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.2686%" y="245" width="0.0802%" height="15" fill="rgb(230,1,41)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.2686%" y="229" width="0.0802%" height="15" fill="rgb(230,1,31)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2686%" y="213" width="0.0802%" height="15" fill="rgb(232,67,19)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2686%" y="197" width="0.0802%" height="15" fill="rgb(222,206,20)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.2686%" y="181" width="0.0802%" height="15" fill="rgb(217,225,19)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.2686%" y="165" width="0.0802%" height="15" fill="rgb(234,13,33)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.2686%" y="149" width="0.0802%" height="15" fill="rgb(254,5,1)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.2686%" y="133" width="0.0802%" height="15" fill="rgb(211,121,41)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2686%" y="117" width="0.0802%" height="15" fill="rgb(213,199,35)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2686%" y="357" width="0.1604%" height="15" fill="rgb(240,118,22)" fg:x="1188" fg:w="2"/><text x="95.5186%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2686%" y="341" width="0.1604%" height="15" fill="rgb(238,184,25)" fg:x="1188" fg:w="2"/><text x="95.5186%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3488%" y="325" width="0.0802%" height="15" fill="rgb(210,165,6)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="95.2686%" y="373" width="0.2406%" height="15" fill="rgb(235,149,5)" fg:x="1188" fg:w="3"/><text x="95.5186%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4290%" y="357" width="0.0802%" height="15" fill="rgb(221,63,5)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4290%" y="341" width="0.0802%" height="15" fill="rgb(250,44,41)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.4290%" y="325" width="0.0802%" height="15" fill="rgb(235,112,47)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.4290%" y="309" width="0.0802%" height="15" fill="rgb(252,176,34)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.4290%" y="293" width="0.0802%" height="15" fill="rgb(234,50,19)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4290%" y="277" width="0.0802%" height="15" fill="rgb(241,195,31)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4290%" y="261" width="0.0802%" height="15" fill="rgb(212,93,11)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.4290%" y="245" width="0.0802%" height="15" fill="rgb(254,98,51)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.4290%" y="229" width="0.0802%" height="15" fill="rgb(246,18,45)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.4290%" y="213" width="0.0802%" height="15" fill="rgb(215,148,23)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.4290%" y="197" width="0.0802%" height="15" fill="rgb(227,22,7)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4290%" y="181" width="0.0802%" height="15" fill="rgb(207,210,37)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5092%" y="293" width="0.0802%" height="15" fill="rgb(247,147,42)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.5092%" y="325" width="0.1604%" height="15" fill="rgb(226,213,14)" fg:x="1191" fg:w="2"/><text x="95.7592%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.5092%" y="309" width="0.1604%" height="15" fill="rgb(223,18,10)" fg:x="1191" fg:w="2"/><text x="95.7592%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5894%" y="293" width="0.0802%" height="15" fill="rgb(253,34,22)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5894%" y="277" width="0.0802%" height="15" fill="rgb(222,90,31)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5894%" y="261" width="0.0802%" height="15" fill="rgb(220,182,30)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5894%" y="245" width="0.0802%" height="15" fill="rgb(229,170,12)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5894%" y="229" width="0.0802%" height="15" fill="rgb(210,101,21)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5894%" y="213" width="0.0802%" height="15" fill="rgb(237,177,31)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5894%" y="197" width="0.0802%" height="15" fill="rgb(215,91,34)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5894%" y="181" width="0.0802%" height="15" fill="rgb(229,206,16)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5894%" y="165" width="0.0802%" height="15" fill="rgb(235,207,10)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.5894%" y="149" width="0.0802%" height="15" fill="rgb(247,18,10)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.5894%" y="133" width="0.0802%" height="15" fill="rgb(232,4,6)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.5894%" y="117" width="0.0802%" height="15" fill="rgb(247,93,45)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.5894%" y="101" width="0.0802%" height="15" fill="rgb(240,181,18)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5894%" y="85" width="0.0802%" height="15" fill="rgb(208,224,0)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9102%" y="229" width="0.0802%" height="15" fill="rgb(224,207,54)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9102%" y="213" width="0.0802%" height="15" fill="rgb(217,152,29)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.7498%" y="277" width="0.3208%" height="15" fill="rgb(243,78,27)" fg:x="1194" fg:w="4"/><text x="95.9998%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="95.8300%" y="261" width="0.2406%" height="15" fill="rgb(228,111,9)" fg:x="1195" fg:w="3"/><text x="96.0800%" y="271.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="95.9102%" y="245" width="0.1604%" height="15" fill="rgb(230,213,21)" fg:x="1196" fg:w="2"/><text x="96.1602%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.9904%" y="229" width="0.0802%" height="15" fill="rgb(248,50,36)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9904%" y="213" width="0.0802%" height="15" fill="rgb(226,19,31)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="95.9904%" y="197" width="0.0802%" height="15" fill="rgb(205,132,21)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="95.9904%" y="181" width="0.0802%" height="15" fill="rgb(207,42,19)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="191.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="95.9904%" y="165" width="0.0802%" height="15" fill="rgb(229,69,35)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="175.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="95.9904%" y="149" width="0.0802%" height="15" fill="rgb(226,96,11)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="159.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="95.9904%" y="133" width="0.0802%" height="15" fill="rgb(236,133,54)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="95.9904%" y="117" width="0.0802%" height="15" fill="rgb(247,166,21)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="95.9904%" y="101" width="0.0802%" height="15" fill="rgb(220,132,12)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.1508%" y="229" width="0.0802%" height="15" fill="rgb(233,27,30)" fg:x="1199" fg:w="1"/><text x="96.4008%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.1508%" y="213" width="0.0802%" height="15" fill="rgb(246,161,27)" fg:x="1199" fg:w="1"/><text x="96.4008%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="95.5092%" y="373" width="0.8019%" height="15" fill="rgb(240,56,3)" fg:x="1191" fg:w="10"/><text x="95.7592%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.80%)</title><rect x="95.5092%" y="357" width="0.8019%" height="15" fill="rgb(242,190,9)" fg:x="1191" fg:w="10"/><text x="95.7592%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.80%)</title><rect x="95.5092%" y="341" width="0.8019%" height="15" fill="rgb(234,3,52)" fg:x="1191" fg:w="10"/><text x="95.7592%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="95.6696%" y="325" width="0.6415%" height="15" fill="rgb(220,221,19)" fg:x="1193" fg:w="8"/><text x="95.9196%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.56%)</title><rect x="95.7498%" y="309" width="0.5613%" height="15" fill="rgb(247,178,30)" fg:x="1194" fg:w="7"/><text x="95.9998%" y="319.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="95.7498%" y="293" width="0.5613%" height="15" fill="rgb(234,212,27)" fg:x="1194" fg:w="7"/><text x="95.9998%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.0706%" y="277" width="0.2406%" height="15" fill="rgb(226,199,38)" fg:x="1198" fg:w="3"/><text x="96.3206%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.0706%" y="261" width="0.2406%" height="15" fill="rgb(248,114,22)" fg:x="1198" fg:w="3"/><text x="96.3206%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.1508%" y="245" width="0.1604%" height="15" fill="rgb(221,180,4)" fg:x="1199" fg:w="2"/><text x="96.4008%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2310%" y="229" width="0.0802%" height="15" fill="rgb(220,229,24)" fg:x="1200" fg:w="1"/><text x="96.4810%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2310%" y="213" width="0.0802%" height="15" fill="rgb(226,184,27)" fg:x="1200" fg:w="1"/><text x="96.4810%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2310%" y="197" width="0.0802%" height="15" fill="rgb(232,99,15)" fg:x="1200" fg:w="1"/><text x="96.4810%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.3111%" y="341" width="0.0802%" height="15" fill="rgb(250,167,16)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.3111%" y="325" width="0.0802%" height="15" fill="rgb(243,113,6)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.3111%" y="309" width="0.0802%" height="15" fill="rgb(244,147,52)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.3111%" y="293" width="0.0802%" height="15" fill="rgb(235,59,50)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.3111%" y="277" width="0.0802%" height="15" fill="rgb(250,188,6)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.3111%" y="261" width="0.0802%" height="15" fill="rgb(236,173,11)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3111%" y="245" width="0.0802%" height="15" fill="rgb(233,64,3)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3913%" y="341" width="0.0802%" height="15" fill="rgb(207,92,7)" fg:x="1202" fg:w="1"/><text x="96.6413%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.4715%" y="341" width="0.0802%" height="15" fill="rgb(221,30,19)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="351.50"></text></g><g><title>engine::session::internal::Added::find_refs (17 samples, 1.36%)</title><rect x="95.2686%" y="405" width="1.3633%" height="15" fill="rgb(245,22,49)" fg:x="1188" fg:w="17"/><text x="95.5186%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (17 samples, 1.36%)</title><rect x="95.2686%" y="389" width="1.3633%" height="15" fill="rgb(218,39,20)" fg:x="1188" fg:w="17"/><text x="95.5186%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="96.3111%" y="373" width="0.3208%" height="15" fill="rgb(222,144,21)" fg:x="1201" fg:w="4"/><text x="96.5611%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.3111%" y="357" width="0.3208%" height="15" fill="rgb(222,78,51)" fg:x="1201" fg:w="4"/><text x="96.5611%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="96.5517%" y="341" width="0.0802%" height="15" fill="rgb(248,213,53)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.5517%" y="325" width="0.0802%" height="15" fill="rgb(245,28,34)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.5517%" y="309" width="0.0802%" height="15" fill="rgb(229,186,26)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.5517%" y="293" width="0.0802%" height="15" fill="rgb(224,0,41)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.6319%" y="389" width="0.0802%" height="15" fill="rgb(223,136,51)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.6319%" y="373" width="0.0802%" height="15" fill="rgb(234,50,9)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6319%" y="357" width="0.0802%" height="15" fill="rgb(242,164,20)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6319%" y="341" width="0.0802%" height="15" fill="rgb(230,169,22)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.6319%" y="325" width="0.0802%" height="15" fill="rgb(228,82,26)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6319%" y="309" width="0.0802%" height="15" fill="rgb(244,220,31)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6319%" y="293" width="0.0802%" height="15" fill="rgb(214,35,25)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6319%" y="277" width="0.0802%" height="15" fill="rgb(245,162,54)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.7121%" y="309" width="0.0802%" height="15" fill="rgb(210,43,24)" fg:x="1206" fg:w="1"/><text x="96.9621%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.7121%" y="293" width="0.0802%" height="15" fill="rgb(226,145,51)" fg:x="1206" fg:w="1"/><text x="96.9621%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.7121%" y="277" width="0.0802%" height="15" fill="rgb(237,52,53)" fg:x="1206" fg:w="1"/><text x="96.9621%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7923%" y="293" width="0.0802%" height="15" fill="rgb(216,226,7)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7923%" y="277" width="0.0802%" height="15" fill="rgb(206,223,18)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7923%" y="261" width="0.0802%" height="15" fill="rgb(221,1,10)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.8725%" y="261" width="0.0802%" height="15" fill="rgb(221,151,42)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="96.7121%" y="341" width="0.3208%" height="15" fill="rgb(205,183,46)" fg:x="1206" fg:w="4"/><text x="96.9621%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.7121%" y="325" width="0.3208%" height="15" fill="rgb(239,229,1)" fg:x="1206" fg:w="4"/><text x="96.9621%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="96.7923%" y="309" width="0.2406%" height="15" fill="rgb(236,192,23)" fg:x="1207" fg:w="3"/><text x="97.0423%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.8725%" y="293" width="0.1604%" height="15" fill="rgb(215,146,3)" fg:x="1208" fg:w="2"/><text x="97.1225%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.8725%" y="277" width="0.1604%" height="15" fill="rgb(235,52,27)" fg:x="1208" fg:w="2"/><text x="97.1225%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.9527%" y="261" width="0.0802%" height="15" fill="rgb(236,45,20)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9527%" y="245" width="0.0802%" height="15" fill="rgb(235,86,41)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9527%" y="229" width="0.0802%" height="15" fill="rgb(235,27,27)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.9527%" y="213" width="0.0802%" height="15" fill="rgb(232,4,34)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="223.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.48%)</title><rect x="96.7121%" y="389" width="0.4812%" height="15" fill="rgb(215,22,10)" fg:x="1206" fg:w="6"/><text x="96.9621%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="96.7121%" y="373" width="0.4812%" height="15" fill="rgb(230,228,27)" fg:x="1206" fg:w="6"/><text x="96.9621%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="96.7121%" y="357" width="0.4812%" height="15" fill="rgb(216,26,51)" fg:x="1206" fg:w="6"/><text x="96.9621%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.0329%" y="341" width="0.1604%" height="15" fill="rgb(225,180,50)" fg:x="1210" fg:w="2"/><text x="97.2829%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.0329%" y="325" width="0.1604%" height="15" fill="rgb(236,211,2)" fg:x="1210" fg:w="2"/><text x="97.2829%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1131%" y="309" width="0.0802%" height="15" fill="rgb(250,51,20)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.3536%" y="245" width="0.0802%" height="15" fill="rgb(232,70,37)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.3536%" y="229" width="0.0802%" height="15" fill="rgb(226,183,39)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.3536%" y="213" width="0.0802%" height="15" fill="rgb(232,228,21)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3536%" y="197" width="0.0802%" height="15" fill="rgb(251,118,32)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3536%" y="261" width="0.1604%" height="15" fill="rgb(235,172,38)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.4338%" y="245" width="0.0802%" height="15" fill="rgb(235,63,18)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.4338%" y="229" width="0.0802%" height="15" fill="rgb(225,4,7)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.4338%" y="213" width="0.0802%" height="15" fill="rgb(231,61,1)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="223.50"></text></g><g><title>engine::session::Session::load_entity (37 samples, 2.97%)</title><rect x="94.6271%" y="421" width="2.9671%" height="15" fill="rgb(241,155,22)" fg:x="1180" fg:w="37"/><text x="94.8771%" y="431.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.96%)</title><rect x="96.6319%" y="405" width="0.9623%" height="15" fill="rgb(209,100,26)" fg:x="1205" fg:w="12"/><text x="96.8819%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="97.1933%" y="389" width="0.4010%" height="15" fill="rgb(248,181,15)" fg:x="1212" fg:w="5"/><text x="97.4433%" y="399.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="97.1933%" y="373" width="0.4010%" height="15" fill="rgb(214,94,31)" fg:x="1212" fg:w="5"/><text x="97.4433%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="97.1933%" y="357" width="0.4010%" height="15" fill="rgb(207,16,42)" fg:x="1212" fg:w="5"/><text x="97.4433%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="97.1933%" y="341" width="0.4010%" height="15" fill="rgb(208,127,13)" fg:x="1212" fg:w="5"/><text x="97.4433%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="97.1933%" y="325" width="0.4010%" height="15" fill="rgb(220,211,18)" fg:x="1212" fg:w="5"/><text x="97.4433%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="97.1933%" y="309" width="0.4010%" height="15" fill="rgb(221,55,38)" fg:x="1212" fg:w="5"/><text x="97.4433%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="97.1933%" y="293" width="0.4010%" height="15" fill="rgb(252,219,45)" fg:x="1212" fg:w="5"/><text x="97.4433%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.2735%" y="277" width="0.3208%" height="15" fill="rgb(248,53,35)" fg:x="1213" fg:w="4"/><text x="97.5235%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5140%" y="261" width="0.0802%" height="15" fill="rgb(210,87,2)" fg:x="1216" fg:w="1"/><text x="97.7640%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5140%" y="245" width="0.0802%" height="15" fill="rgb(239,133,9)" fg:x="1216" fg:w="1"/><text x="97.7640%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5942%" y="389" width="0.0802%" height="15" fill="rgb(214,114,5)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5942%" y="373" width="0.0802%" height="15" fill="rgb(206,124,24)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5942%" y="357" width="0.0802%" height="15" fill="rgb(212,57,33)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5942%" y="341" width="0.0802%" height="15" fill="rgb(246,21,20)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5942%" y="325" width="0.0802%" height="15" fill="rgb(253,210,39)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.5942%" y="309" width="0.0802%" height="15" fill="rgb(209,187,24)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.5942%" y="293" width="0.0802%" height="15" fill="rgb(246,136,17)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.5942%" y="277" width="0.0802%" height="15" fill="rgb(211,0,30)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.5942%" y="261" width="0.0802%" height="15" fill="rgb(216,199,7)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.5942%" y="245" width="0.0802%" height="15" fill="rgb(207,210,19)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6744%" y="261" width="0.0802%" height="15" fill="rgb(237,187,39)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6744%" y="245" width="0.0802%" height="15" fill="rgb(243,194,42)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.6744%" y="341" width="0.1604%" height="15" fill="rgb(225,194,19)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.6744%" y="325" width="0.1604%" height="15" fill="rgb(224,192,14)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.6744%" y="309" width="0.1604%" height="15" fill="rgb(252,21,18)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.6744%" y="293" width="0.1604%" height="15" fill="rgb(229,69,19)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.6744%" y="277" width="0.1604%" height="15" fill="rgb(251,31,53)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7546%" y="261" width="0.0802%" height="15" fill="rgb(218,39,50)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7546%" y="245" width="0.0802%" height="15" fill="rgb(231,50,17)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.7546%" y="229" width="0.0802%" height="15" fill="rgb(223,217,31)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.7546%" y="213" width="0.0802%" height="15" fill="rgb(225,91,12)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.7546%" y="197" width="0.0802%" height="15" fill="rgb(242,58,43)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7546%" y="181" width="0.0802%" height="15" fill="rgb(242,32,21)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7546%" y="165" width="0.0802%" height="15" fill="rgb(211,127,1)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.7546%" y="149" width="0.0802%" height="15" fill="rgb(231,93,13)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.7546%" y="133" width="0.0802%" height="15" fill="rgb(218,83,4)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.7546%" y="117" width="0.0802%" height="15" fill="rgb(230,218,10)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.7546%" y="101" width="0.0802%" height="15" fill="rgb(235,127,18)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7546%" y="85" width="0.0802%" height="15" fill="rgb(213,137,46)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="95.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.8348%" y="309" width="0.0802%" height="15" fill="rgb(235,179,24)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="97.6744%" y="389" width="0.3208%" height="15" fill="rgb(247,58,49)" fg:x="1218" fg:w="4"/><text x="97.9244%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="97.6744%" y="373" width="0.3208%" height="15" fill="rgb(242,222,5)" fg:x="1218" fg:w="4"/><text x="97.9244%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="97.6744%" y="357" width="0.3208%" height="15" fill="rgb(230,16,48)" fg:x="1218" fg:w="4"/><text x="97.9244%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.8348%" y="341" width="0.1604%" height="15" fill="rgb(241,192,16)" fg:x="1220" fg:w="2"/><text x="98.0848%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.8348%" y="325" width="0.1604%" height="15" fill="rgb(209,25,37)" fg:x="1220" fg:w="2"/><text x="98.0848%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9150%" y="309" width="0.0802%" height="15" fill="rgb(229,215,13)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.9150%" y="293" width="0.0802%" height="15" fill="rgb(213,199,8)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9150%" y="277" width="0.0802%" height="15" fill="rgb(226,151,19)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9150%" y="261" width="0.0802%" height="15" fill="rgb(254,183,12)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.9150%" y="245" width="0.0802%" height="15" fill="rgb(245,8,3)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="255.50"></text></g><g><title>engine::session::internal::Added::find_refs (6 samples, 0.48%)</title><rect x="97.5942%" y="421" width="0.4812%" height="15" fill="rgb(229,159,35)" fg:x="1217" fg:w="6"/><text x="97.8442%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="97.5942%" y="405" width="0.4812%" height="15" fill="rgb(209,145,1)" fg:x="1217" fg:w="6"/><text x="97.8442%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9952%" y="389" width="0.0802%" height="15" fill="rgb(228,183,16)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9952%" y="373" width="0.0802%" height="15" fill="rgb(222,68,0)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.9952%" y="357" width="0.0802%" height="15" fill="rgb(209,130,50)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9952%" y="341" width="0.0802%" height="15" fill="rgb(228,176,44)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9952%" y="325" width="0.0802%" height="15" fill="rgb(221,164,2)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9952%" y="309" width="0.0802%" height="15" fill="rgb(249,199,49)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="97.9952%" y="293" width="0.0802%" height="15" fill="rgb(228,205,53)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.9952%" y="277" width="0.0802%" height="15" fill="rgb(235,77,20)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.9952%" y="261" width="0.0802%" height="15" fill="rgb(227,147,34)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.9952%" y="245" width="0.0802%" height="15" fill="rgb(226,203,52)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0754%" y="389" width="0.1604%" height="15" fill="rgb(226,186,23)" fg:x="1223" fg:w="2"/><text x="98.3254%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0754%" y="373" width="0.1604%" height="15" fill="rgb(236,13,30)" fg:x="1223" fg:w="2"/><text x="98.3254%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1556%" y="357" width="0.0802%" height="15" fill="rgb(228,121,22)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1556%" y="341" width="0.0802%" height="15" fill="rgb(248,222,26)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1556%" y="325" width="0.0802%" height="15" fill="rgb(251,72,25)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.1556%" y="309" width="0.0802%" height="15" fill="rgb(223,114,24)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.1556%" y="293" width="0.0802%" height="15" fill="rgb(232,190,43)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.1556%" y="277" width="0.0802%" height="15" fill="rgb(208,90,0)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1556%" y="261" width="0.0802%" height="15" fill="rgb(234,149,31)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1556%" y="245" width="0.0802%" height="15" fill="rgb(235,188,36)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.1556%" y="229" width="0.0802%" height="15" fill="rgb(219,59,51)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.1556%" y="213" width="0.0802%" height="15" fill="rgb(236,101,40)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.1556%" y="197" width="0.0802%" height="15" fill="rgb(235,33,7)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.1556%" y="181" width="0.0802%" height="15" fill="rgb(213,169,26)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1556%" y="165" width="0.0802%" height="15" fill="rgb(218,99,34)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="98.0754%" y="405" width="0.2406%" height="15" fill="rgb(210,57,24)" fg:x="1223" fg:w="3"/><text x="98.3254%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2358%" y="389" width="0.0802%" height="15" fill="rgb(231,181,54)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2358%" y="373" width="0.0802%" height="15" fill="rgb(251,188,48)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.2358%" y="357" width="0.0802%" height="15" fill="rgb(243,12,45)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.2358%" y="341" width="0.0802%" height="15" fill="rgb(250,197,9)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.2358%" y="325" width="0.0802%" height="15" fill="rgb(235,149,35)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2358%" y="309" width="0.0802%" height="15" fill="rgb(219,27,19)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2358%" y="293" width="0.0802%" height="15" fill="rgb(244,78,31)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.2358%" y="277" width="0.0802%" height="15" fill="rgb(241,13,4)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.2358%" y="261" width="0.0802%" height="15" fill="rgb(212,194,26)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.2358%" y="245" width="0.0802%" height="15" fill="rgb(236,80,11)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.2358%" y="229" width="0.0802%" height="15" fill="rgb(206,1,24)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2358%" y="213" width="0.0802%" height="15" fill="rgb(238,215,50)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="223.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="98.3160%" y="405" width="0.1604%" height="15" fill="rgb(254,126,32)" fg:x="1226" fg:w="2"/><text x="98.5660%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.3160%" y="389" width="0.1604%" height="15" fill="rgb(206,111,53)" fg:x="1226" fg:w="2"/><text x="98.5660%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.3160%" y="373" width="0.1604%" height="15" fill="rgb(218,72,44)" fg:x="1226" fg:w="2"/><text x="98.5660%" y="383.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3962%" y="357" width="0.0802%" height="15" fill="rgb(238,25,3)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3962%" y="341" width="0.0802%" height="15" fill="rgb(250,191,7)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3962%" y="325" width="0.0802%" height="15" fill="rgb(238,56,30)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3962%" y="309" width="0.0802%" height="15" fill="rgb(210,27,45)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3962%" y="293" width="0.0802%" height="15" fill="rgb(207,10,50)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.3962%" y="277" width="0.0802%" height="15" fill="rgb(249,30,23)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3962%" y="261" width="0.0802%" height="15" fill="rgb(250,80,12)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3962%" y="245" width="0.0802%" height="15" fill="rgb(210,221,37)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3962%" y="229" width="0.0802%" height="15" fill="rgb(205,96,24)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3962%" y="213" width="0.0802%" height="15" fill="rgb(247,104,22)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3962%" y="197" width="0.0802%" height="15" fill="rgb(222,61,53)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.3962%" y="181" width="0.0802%" height="15" fill="rgb(241,11,53)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="191.50"></text></g><g><title>engine::session::Session::load_entity (50 samples, 4.01%)</title><rect x="94.5469%" y="437" width="4.0096%" height="15" fill="rgb(230,111,47)" fg:x="1179" fg:w="50"/><text x="94.7969%" y="447.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="98.0754%" y="421" width="0.4812%" height="15" fill="rgb(218,187,29)" fg:x="1223" fg:w="6"/><text x="98.3254%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="98.4763%" y="405" width="0.0802%" height="15" fill="rgb(210,121,46)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="415.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="98.4763%" y="389" width="0.0802%" height="15" fill="rgb(250,43,19)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4763%" y="373" width="0.0802%" height="15" fill="rgb(238,61,12)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4763%" y="357" width="0.0802%" height="15" fill="rgb(251,198,9)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4763%" y="341" width="0.0802%" height="15" fill="rgb(214,192,38)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4763%" y="325" width="0.0802%" height="15" fill="rgb(214,73,19)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.4763%" y="309" width="0.0802%" height="15" fill="rgb(249,222,49)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4763%" y="293" width="0.0802%" height="15" fill="rgb(231,181,54)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="303.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="98.5565%" y="437" width="0.0802%" height="15" fill="rgb(240,1,13)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="98.5565%" y="421" width="0.0802%" height="15" fill="rgb(225,21,16)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.5565%" y="405" width="0.0802%" height="15" fill="rgb(246,176,50)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="98.6367%" y="405" width="0.0802%" height="15" fill="rgb(208,96,50)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.6367%" y="389" width="0.0802%" height="15" fill="rgb(240,219,19)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7169%" y="389" width="0.0802%" height="15" fill="rgb(234,73,5)" fg:x="1231" fg:w="1"/><text x="98.9669%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7169%" y="373" width="0.0802%" height="15" fill="rgb(225,52,53)" fg:x="1231" fg:w="1"/><text x="98.9669%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.7971%" y="389" width="0.0802%" height="15" fill="rgb(250,12,14)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.7971%" y="373" width="0.0802%" height="15" fill="rgb(242,185,54)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="98.6367%" y="421" width="0.3208%" height="15" fill="rgb(211,206,31)" fg:x="1230" fg:w="4"/><text x="98.8867%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.7169%" y="405" width="0.2406%" height="15" fill="rgb(252,10,33)" fg:x="1231" fg:w="3"/><text x="98.9669%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8773%" y="389" width="0.0802%" height="15" fill="rgb(216,26,7)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8773%" y="373" width="0.0802%" height="15" fill="rgb(228,112,40)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.8773%" y="357" width="0.0802%" height="15" fill="rgb(212,21,16)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8773%" y="341" width="0.0802%" height="15" fill="rgb(249,3,29)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="98.6367%" y="437" width="0.4010%" height="15" fill="rgb(221,42,51)" fg:x="1230" fg:w="5"/><text x="98.8867%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.9575%" y="421" width="0.0802%" height="15" fill="rgb(225,90,21)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.9575%" y="405" width="0.0802%" height="15" fill="rgb(242,131,5)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.9575%" y="389" width="0.0802%" height="15" fill="rgb(220,187,28)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.9575%" y="373" width="0.0802%" height="15" fill="rgb(210,75,48)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.9575%" y="357" width="0.0802%" height="15" fill="rgb(211,91,40)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.9575%" y="341" width="0.0802%" height="15" fill="rgb(205,43,18)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="98.9575%" y="325" width="0.0802%" height="15" fill="rgb(207,123,11)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="98.9575%" y="309" width="0.0802%" height="15" fill="rgb(235,89,39)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="98.9575%" y="293" width="0.0802%" height="15" fill="rgb(245,217,27)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="98.9575%" y="277" width="0.0802%" height="15" fill="rgb(216,55,17)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="98.9575%" y="261" width="0.0802%" height="15" fill="rgb(252,116,44)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="98.9575%" y="245" width="0.0802%" height="15" fill="rgb(229,153,4)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="98.9575%" y="229" width="0.0802%" height="15" fill="rgb(222,24,35)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="98.9575%" y="213" width="0.0802%" height="15" fill="rgb(214,26,20)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="98.9575%" y="197" width="0.0802%" height="15" fill="rgb(215,14,45)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="98.9575%" y="181" width="0.0802%" height="15" fill="rgb(217,212,50)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="98.9575%" y="165" width="0.0802%" height="15" fill="rgb(230,172,52)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="98.9575%" y="149" width="0.0802%" height="15" fill="rgb(210,48,36)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="98.9575%" y="133" width="0.0802%" height="15" fill="rgb(216,213,32)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0377%" y="389" width="0.0802%" height="15" fill="rgb(237,202,41)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0377%" y="373" width="0.0802%" height="15" fill="rgb(209,14,29)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0377%" y="357" width="0.0802%" height="15" fill="rgb(219,29,3)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0377%" y="341" width="0.0802%" height="15" fill="rgb(229,13,49)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0377%" y="325" width="0.0802%" height="15" fill="rgb(210,206,2)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.1179%" y="389" width="0.1604%" height="15" fill="rgb(216,154,46)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.1179%" y="373" width="0.1604%" height="15" fill="rgb(211,170,52)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1179%" y="357" width="0.1604%" height="15" fill="rgb(233,109,47)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1179%" y="341" width="0.1604%" height="15" fill="rgb(208,212,30)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.1179%" y="325" width="0.1604%" height="15" fill="rgb(215,190,19)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1179%" y="309" width="0.1604%" height="15" fill="rgb(207,164,53)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1981%" y="293" width="0.0802%" height="15" fill="rgb(213,87,49)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1981%" y="277" width="0.0802%" height="15" fill="rgb(241,216,24)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.2783%" y="293" width="0.1604%" height="15" fill="rgb(241,123,45)" fg:x="1238" fg:w="2"/><text x="99.5283%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="99.2783%" y="277" width="0.1604%" height="15" fill="rgb(220,36,15)" fg:x="1238" fg:w="2"/><text x="99.5283%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3585%" y="261" width="0.0802%" height="15" fill="rgb(215,202,9)" fg:x="1239" fg:w="1"/><text x="99.6085%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.3585%" y="245" width="0.0802%" height="15" fill="rgb(252,71,26)" fg:x="1239" fg:w="1"/><text x="99.6085%" y="255.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2783%" y="341" width="0.2406%" height="15" fill="rgb(243,195,19)" fg:x="1238" fg:w="3"/><text x="99.5283%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.2783%" y="325" width="0.2406%" height="15" fill="rgb(207,167,27)" fg:x="1238" fg:w="3"/><text x="99.5283%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2783%" y="309" width="0.2406%" height="15" fill="rgb(250,146,54)" fg:x="1238" fg:w="3"/><text x="99.5283%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4387%" y="293" width="0.0802%" height="15" fill="rgb(245,79,9)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4387%" y="277" width="0.0802%" height="15" fill="rgb(234,197,22)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4387%" y="261" width="0.0802%" height="15" fill="rgb(221,52,48)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="271.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="99.2783%" y="389" width="0.3208%" height="15" fill="rgb(235,80,0)" fg:x="1238" fg:w="4"/><text x="99.5283%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="99.2783%" y="373" width="0.3208%" height="15" fill="rgb(221,117,53)" fg:x="1238" fg:w="4"/><text x="99.5283%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.2783%" y="357" width="0.3208%" height="15" fill="rgb(239,48,47)" fg:x="1238" fg:w="4"/><text x="99.5283%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5188%" y="341" width="0.0802%" height="15" fill="rgb(227,191,52)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5188%" y="325" width="0.0802%" height="15" fill="rgb(241,118,1)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (8 samples, 0.64%)</title><rect x="99.0377%" y="421" width="0.6415%" height="15" fill="rgb(240,85,3)" fg:x="1235" fg:w="8"/><text x="99.2877%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="99.0377%" y="405" width="0.6415%" height="15" fill="rgb(237,68,37)" fg:x="1235" fg:w="8"/><text x="99.2877%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="99.5990%" y="389" width="0.0802%" height="15" fill="rgb(212,9,20)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="399.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.5990%" y="373" width="0.0802%" height="15" fill="rgb(218,84,17)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5990%" y="357" width="0.0802%" height="15" fill="rgb(235,147,20)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5990%" y="341" width="0.0802%" height="15" fill="rgb(208,224,1)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5990%" y="325" width="0.0802%" height="15" fill="rgb(232,97,50)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5990%" y="309" width="0.0802%" height="15" fill="rgb(238,15,45)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5990%" y="293" width="0.0802%" height="15" fill="rgb(231,46,18)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5990%" y="277" width="0.0802%" height="15" fill="rgb(254,169,10)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5990%" y="261" width="0.0802%" height="15" fill="rgb(243,169,30)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5990%" y="245" width="0.0802%" height="15" fill="rgb(236,90,49)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5990%" y="229" width="0.0802%" height="15" fill="rgb(218,80,15)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5990%" y="213" width="0.0802%" height="15" fill="rgb(222,115,37)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5990%" y="197" width="0.0802%" height="15" fill="rgb(227,0,6)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6792%" y="373" width="0.0802%" height="15" fill="rgb(217,189,13)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6792%" y="357" width="0.0802%" height="15" fill="rgb(220,74,19)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6792%" y="341" width="0.0802%" height="15" fill="rgb(224,81,18)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.6792%" y="405" width="0.1604%" height="15" fill="rgb(245,178,48)" fg:x="1243" fg:w="2"/><text x="99.9292%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.6792%" y="389" width="0.1604%" height="15" fill="rgb(207,78,24)" fg:x="1243" fg:w="2"/><text x="99.9292%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7594%" y="373" width="0.0802%" height="15" fill="rgb(223,222,30)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="99.8396%" y="405" width="0.0802%" height="15" fill="rgb(234,101,12)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.8396%" y="389" width="0.0802%" height="15" fill="rgb(209,80,46)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="399.50"></text></g><g><title>all (1,247 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(228,79,14)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="831.50"></text></g><g><title>simple-f9bc7d3f (1,247 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(220,219,34)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="815.50">simple-f9bc7d3f</text></g><g><title>_start (1,247 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(207,80,21)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="799.50">_start</text></g><g><title>__libc_start_main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(210,154,44)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="783.50">__libc_start_main</text></g><g><title>main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(246,44,39)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (1,247 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(252,175,13)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="751.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(211,50,39)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(231,204,27)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(253,26,34)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="703.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(207,139,38)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="687.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(248,54,27)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="671.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(234,25,33)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(249,107,47)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="639.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,247 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(230,190,31)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="623.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(238,173,45)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="607.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,247 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(222,16,50)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="591.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(251,204,47)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="575.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,247 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(225,12,3)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="559.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,247 samples, 100.00%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(214,208,22)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="543.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (295 samples, 23.66%)</title><rect x="76.3432%" y="517" width="23.6568%" height="15" fill="rgb(240,57,32)" fg:x="952" fg:w="295"/><text x="76.5932%" y="527.50">&lt;criterion::routine::Function&lt;M,F,T&gt; a..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (295 samples, 23.66%)</title><rect x="76.3432%" y="501" width="23.6568%" height="15" fill="rgb(243,113,48)" fg:x="952" fg:w="295"/><text x="76.5932%" y="511.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (295 samples, 23.66%)</title><rect x="76.3432%" y="485" width="23.6568%" height="15" fill="rgb(225,135,30)" fg:x="952" fg:w="295"/><text x="76.5932%" y="495.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (78 samples, 6.26%)</title><rect x="93.7450%" y="469" width="6.2550%" height="15" fill="rgb(222,3,53)" fg:x="1169" fg:w="78"/><text x="93.9950%" y="479.50">engine::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (78 samples, 6.26%)</title><rect x="93.7450%" y="453" width="6.2550%" height="15" fill="rgb(243,142,2)" fg:x="1169" fg:w="78"/><text x="93.9950%" y="463.50">engine::..</text></g><g><title>kernel::model::entry::EntryResolver::world (12 samples, 0.96%)</title><rect x="99.0377%" y="437" width="0.9623%" height="15" fill="rgb(233,67,14)" fg:x="1235" fg:w="12"/><text x="99.2877%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="99.6792%" y="421" width="0.3208%" height="15" fill="rgb(245,125,36)" fg:x="1243" fg:w="4"/><text x="99.9292%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.9198%" y="405" width="0.0802%" height="15" fill="rgb(225,199,6)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.9198%" y="389" width="0.0802%" height="15" fill="rgb(244,71,6)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9198%" y="373" width="0.0802%" height="15" fill="rgb(225,62,9)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.9198%" y="357" width="0.0802%" height="15" fill="rgb(246,139,53)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.9198%" y="341" width="0.0802%" height="15" fill="rgb(243,161,46)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.9198%" y="325" width="0.0802%" height="15" fill="rgb(236,153,7)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.9198%" y="309" width="0.0802%" height="15" fill="rgb(248,42,35)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.9198%" y="293" width="0.0802%" height="15" fill="rgb(250,17,31)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.9198%" y="277" width="0.0802%" height="15" fill="rgb(248,138,14)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.9198%" y="261" width="0.0802%" height="15" fill="rgb(228,161,3)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.9198%" y="245" width="0.0802%" height="15" fill="rgb(248,116,17)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.9198%" y="229" width="0.0802%" height="15" fill="rgb(207,78,24)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.9198%" y="213" width="0.0802%" height="15" fill="rgb(234,99,48)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9198%" y="197" width="0.0802%" height="15" fill="rgb(242,22,26)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.9198%" y="181" width="0.0802%" height="15" fill="rgb(227,78,32)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.9198%" y="165" width="0.0802%" height="15" fill="rgb(226,189,43)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.9198%" y="149" width="0.0802%" height="15" fill="rgb(227,218,35)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="159.50"></text></g></svg></svg>