<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="933.00"> </text><svg id="frames" x="10" width="1180" total_samples="1241"><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.4835%" y="469" width="0.3223%" height="15" fill="rgb(249,171,43)" fg:x="6" fg:w="4"/><text x="0.7335%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.64%)</title><rect x="0.4029%" y="501" width="0.6446%" height="15" fill="rgb(239,87,2)" fg:x="5" fg:w="8"/><text x="0.6529%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (8 samples, 0.64%)</title><rect x="0.4029%" y="485" width="0.6446%" height="15" fill="rgb(248,141,5)" fg:x="5" fg:w="8"/><text x="0.6529%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.24%)</title><rect x="0.8058%" y="469" width="0.2417%" height="15" fill="rgb(238,33,42)" fg:x="10" fg:w="3"/><text x="1.0558%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.8058%" y="453" width="0.2417%" height="15" fill="rgb(231,57,19)" fg:x="10" fg:w="3"/><text x="1.0558%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.81%)</title><rect x="0.3223%" y="533" width="0.8058%" height="15" fill="rgb(214,78,53)" fg:x="4" fg:w="10"/><text x="0.5723%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="0.3223%" y="517" width="0.8058%" height="15" fill="rgb(206,132,29)" fg:x="4" fg:w="10"/><text x="0.5723%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="1.0475%" y="501" width="0.0806%" height="15" fill="rgb(248,174,31)" fg:x="13" fg:w="1"/><text x="1.2975%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0475%" y="485" width="0.0806%" height="15" fill="rgb(221,87,13)" fg:x="13" fg:w="1"/><text x="1.2975%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3699%" y="453" width="0.0806%" height="15" fill="rgb(223,197,17)" fg:x="17" fg:w="1"/><text x="1.6199%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6116%" y="421" width="0.0806%" height="15" fill="rgb(220,144,50)" fg:x="20" fg:w="1"/><text x="1.8616%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.6922%" y="421" width="0.1612%" height="15" fill="rgb(244,201,11)" fg:x="21" fg:w="2"/><text x="1.9422%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7728%" y="405" width="0.0806%" height="15" fill="rgb(249,81,34)" fg:x="22" fg:w="1"/><text x="2.0228%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.9339%" y="405" width="0.1612%" height="15" fill="rgb(205,161,12)" fg:x="24" fg:w="2"/><text x="2.1839%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.0951%" y="405" width="0.2417%" height="15" fill="rgb(252,139,50)" fg:x="26" fg:w="3"/><text x="2.3451%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.1757%" y="389" width="0.1612%" height="15" fill="rgb(205,169,14)" fg:x="27" fg:w="2"/><text x="2.4257%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.4980%" y="389" width="0.1612%" height="15" fill="rgb(248,198,33)" fg:x="31" fg:w="2"/><text x="2.7480%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.6591%" y="389" width="0.0806%" height="15" fill="rgb(236,23,21)" fg:x="33" fg:w="1"/><text x="2.9091%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6591%" y="373" width="0.0806%" height="15" fill="rgb(231,13,38)" fg:x="33" fg:w="1"/><text x="2.9091%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.69%)</title><rect x="1.1281%" y="469" width="1.6922%" height="15" fill="rgb(239,139,21)" fg:x="14" fg:w="21"/><text x="1.3781%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (17 samples, 1.37%)</title><rect x="1.4504%" y="453" width="1.3699%" height="15" fill="rgb(222,164,45)" fg:x="18" fg:w="17"/><text x="1.7004%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.37%)</title><rect x="1.4504%" y="437" width="1.3699%" height="15" fill="rgb(230,52,27)" fg:x="18" fg:w="17"/><text x="1.7004%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="1.8533%" y="421" width="0.9670%" height="15" fill="rgb(227,143,42)" fg:x="23" fg:w="12"/><text x="2.1033%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="2.3368%" y="405" width="0.4835%" height="15" fill="rgb(249,127,1)" fg:x="29" fg:w="6"/><text x="2.5868%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="2.7397%" y="389" width="0.0806%" height="15" fill="rgb(243,107,26)" fg:x="34" fg:w="1"/><text x="2.9897%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.7397%" y="373" width="0.0806%" height="15" fill="rgb(225,7,45)" fg:x="34" fg:w="1"/><text x="2.9897%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8203%" y="469" width="0.0806%" height="15" fill="rgb(241,88,38)" fg:x="35" fg:w="1"/><text x="3.0703%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.9815%" y="437" width="0.1612%" height="15" fill="rgb(226,121,9)" fg:x="37" fg:w="2"/><text x="3.2315%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.1426%" y="437" width="0.0806%" height="15" fill="rgb(253,60,29)" fg:x="39" fg:w="1"/><text x="3.3926%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2232%" y="389" width="0.0806%" height="15" fill="rgb(244,181,39)" fg:x="40" fg:w="1"/><text x="3.4732%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.3038%" y="389" width="0.1612%" height="15" fill="rgb(252,203,31)" fg:x="41" fg:w="2"/><text x="3.5538%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="3.4649%" y="389" width="0.0806%" height="15" fill="rgb(224,120,8)" fg:x="43" fg:w="1"/><text x="3.7149%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.4649%" y="373" width="0.0806%" height="15" fill="rgb(205,171,54)" fg:x="43" fg:w="1"/><text x="3.7149%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.4649%" y="357" width="0.0806%" height="15" fill="rgb(235,89,11)" fg:x="43" fg:w="1"/><text x="3.7149%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.50%)</title><rect x="1.1281%" y="517" width="2.4980%" height="15" fill="rgb(212,180,28)" fg:x="14" fg:w="31"/><text x="1.3781%" y="527.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (31 samples, 2.50%)</title><rect x="1.1281%" y="501" width="2.4980%" height="15" fill="rgb(247,84,49)" fg:x="14" fg:w="31"/><text x="1.3781%" y="511.50">co..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.50%)</title><rect x="1.1281%" y="485" width="2.4980%" height="15" fill="rgb(236,187,52)" fg:x="14" fg:w="31"/><text x="1.3781%" y="495.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="2.9009%" y="469" width="0.7252%" height="15" fill="rgb(227,24,15)" fg:x="36" fg:w="9"/><text x="3.1509%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="2.9815%" y="453" width="0.6446%" height="15" fill="rgb(227,211,13)" fg:x="37" fg:w="8"/><text x="3.2315%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="3.2232%" y="437" width="0.4029%" height="15" fill="rgb(245,52,14)" fg:x="40" fg:w="5"/><text x="3.4732%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="3.2232%" y="421" width="0.4029%" height="15" fill="rgb(225,185,13)" fg:x="40" fg:w="5"/><text x="3.4732%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="3.2232%" y="405" width="0.4029%" height="15" fill="rgb(217,160,29)" fg:x="40" fg:w="5"/><text x="3.4732%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="3.5455%" y="389" width="0.0806%" height="15" fill="rgb(216,115,53)" fg:x="44" fg:w="1"/><text x="3.7955%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (32 samples, 2.58%)</title><rect x="1.1281%" y="533" width="2.5786%" height="15" fill="rgb(236,99,5)" fg:x="14" fg:w="32"/><text x="1.3781%" y="543.50">co..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6261%" y="517" width="0.0806%" height="15" fill="rgb(222,60,38)" fg:x="45" fg:w="1"/><text x="3.8761%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 3.63%)</title><rect x="0.1612%" y="549" width="3.6261%" height="15" fill="rgb(212,82,22)" fg:x="2" fg:w="45"/><text x="0.4112%" y="559.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::Captured&gt; (1 samples, 0.08%)</title><rect x="3.7067%" y="533" width="0.0806%" height="15" fill="rgb(214,48,28)" fg:x="46" fg:w="1"/><text x="3.9567%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.7873%" y="501" width="0.0806%" height="15" fill="rgb(245,196,50)" fg:x="47" fg:w="1"/><text x="4.0373%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="3.7873%" y="485" width="0.0806%" height="15" fill="rgb(225,159,46)" fg:x="47" fg:w="1"/><text x="4.0373%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.7873%" y="469" width="0.0806%" height="15" fill="rgb(207,195,48)" fg:x="47" fg:w="1"/><text x="4.0373%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (5 samples, 0.40%)</title><rect x="4.4319%" y="421" width="0.4029%" height="15" fill="rgb(240,73,3)" fg:x="55" fg:w="5"/><text x="4.6819%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.32%)</title><rect x="4.5125%" y="405" width="0.3223%" height="15" fill="rgb(245,57,23)" fg:x="56" fg:w="4"/><text x="4.7625%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="4.5125%" y="389" width="0.3223%" height="15" fill="rgb(240,75,18)" fg:x="56" fg:w="4"/><text x="4.7625%" y="399.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="4.5125%" y="373" width="0.3223%" height="15" fill="rgb(238,168,12)" fg:x="56" fg:w="4"/><text x="4.7625%" y="383.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="4.8348%" y="421" width="0.0806%" height="15" fill="rgb(226,20,40)" fg:x="60" fg:w="1"/><text x="5.0848%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.8348%" y="405" width="0.0806%" height="15" fill="rgb(224,130,35)" fg:x="60" fg:w="1"/><text x="5.0848%" y="415.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="4.9154%" y="373" width="0.0806%" height="15" fill="rgb(225,63,41)" fg:x="61" fg:w="1"/><text x="5.1654%" y="383.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (9 samples, 0.73%)</title><rect x="4.3513%" y="453" width="0.7252%" height="15" fill="rgb(219,3,3)" fg:x="54" fg:w="9"/><text x="4.6013%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (9 samples, 0.73%)</title><rect x="4.3513%" y="437" width="0.7252%" height="15" fill="rgb(218,157,4)" fg:x="54" fg:w="9"/><text x="4.6013%" y="447.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="4.9154%" y="421" width="0.1612%" height="15" fill="rgb(232,76,36)" fg:x="61" fg:w="2"/><text x="5.1654%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.9154%" y="405" width="0.1612%" height="15" fill="rgb(247,36,0)" fg:x="61" fg:w="2"/><text x="5.1654%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.9154%" y="389" width="0.1612%" height="15" fill="rgb(205,2,34)" fg:x="61" fg:w="2"/><text x="5.1654%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.9960%" y="373" width="0.0806%" height="15" fill="rgb(239,136,13)" fg:x="62" fg:w="1"/><text x="5.2460%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::actions::PutInsideAction as kernel::plugins::HasActionSchema&gt;::action_schema (3 samples, 0.24%)</title><rect x="5.1571%" y="421" width="0.2417%" height="15" fill="rgb(253,122,12)" fg:x="64" fg:w="3"/><text x="5.4071%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="5.2377%" y="405" width="0.1612%" height="15" fill="rgb(222,174,7)" fg:x="65" fg:w="2"/><text x="5.4877%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="5.3989%" y="421" width="0.1612%" height="15" fill="rgb(208,191,42)" fg:x="67" fg:w="2"/><text x="5.6489%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.3989%" y="405" width="0.1612%" height="15" fill="rgb(237,212,15)" fg:x="67" fg:w="2"/><text x="5.6489%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.4795%" y="389" width="0.0806%" height="15" fill="rgb(215,65,20)" fg:x="68" fg:w="1"/><text x="5.7295%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (7 samples, 0.56%)</title><rect x="5.0766%" y="453" width="0.5641%" height="15" fill="rgb(232,103,11)" fg:x="63" fg:w="7"/><text x="5.3266%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (7 samples, 0.56%)</title><rect x="5.0766%" y="437" width="0.5641%" height="15" fill="rgb(235,148,18)" fg:x="63" fg:w="7"/><text x="5.3266%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="5.5600%" y="421" width="0.0806%" height="15" fill="rgb(240,173,7)" fg:x="69" fg:w="1"/><text x="5.8100%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.5600%" y="405" width="0.0806%" height="15" fill="rgb(228,182,25)" fg:x="69" fg:w="1"/><text x="5.8100%" y="415.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (3 samples, 0.24%)</title><rect x="5.6406%" y="421" width="0.2417%" height="15" fill="rgb(247,3,52)" fg:x="70" fg:w="3"/><text x="5.8906%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (3 samples, 0.24%)</title><rect x="5.6406%" y="405" width="0.2417%" height="15" fill="rgb(226,155,8)" fg:x="70" fg:w="3"/><text x="5.8906%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="5.6406%" y="389" width="0.2417%" height="15" fill="rgb(243,195,38)" fg:x="70" fg:w="3"/><text x="5.8906%" y="399.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.32%)</title><rect x="5.6406%" y="453" width="0.3223%" height="15" fill="rgb(254,181,33)" fg:x="70" fg:w="4"/><text x="5.8906%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.32%)</title><rect x="5.6406%" y="437" width="0.3223%" height="15" fill="rgb(232,98,23)" fg:x="70" fg:w="4"/><text x="5.8906%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="5.8824%" y="421" width="0.0806%" height="15" fill="rgb(205,23,10)" fg:x="73" fg:w="1"/><text x="6.1324%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.9629%" y="421" width="0.0806%" height="15" fill="rgb(212,124,38)" fg:x="74" fg:w="1"/><text x="6.2129%" y="431.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="5.9629%" y="453" width="0.1612%" height="15" fill="rgb(228,207,2)" fg:x="74" fg:w="2"/><text x="6.2129%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="5.9629%" y="437" width="0.1612%" height="15" fill="rgb(215,120,22)" fg:x="74" fg:w="2"/><text x="6.2129%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="6.0435%" y="421" width="0.0806%" height="15" fill="rgb(251,172,33)" fg:x="75" fg:w="1"/><text x="6.2935%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="6.1241%" y="421" width="0.0806%" height="15" fill="rgb(250,83,2)" fg:x="76" fg:w="1"/><text x="6.3741%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.1241%" y="405" width="0.0806%" height="15" fill="rgb(210,132,53)" fg:x="76" fg:w="1"/><text x="6.3741%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.1241%" y="389" width="0.0806%" height="15" fill="rgb(221,208,36)" fg:x="76" fg:w="1"/><text x="6.3741%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.1241%" y="373" width="0.0806%" height="15" fill="rgb(205,192,46)" fg:x="76" fg:w="1"/><text x="6.3741%" y="383.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="6.1241%" y="453" width="0.2417%" height="15" fill="rgb(223,163,14)" fg:x="76" fg:w="3"/><text x="6.3741%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="6.1241%" y="437" width="0.2417%" height="15" fill="rgb(218,41,28)" fg:x="76" fg:w="3"/><text x="6.3741%" y="447.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="6.2047%" y="421" width="0.1612%" height="15" fill="rgb(235,104,10)" fg:x="77" fg:w="2"/><text x="6.4547%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.2853%" y="405" width="0.0806%" height="15" fill="rgb(246,17,4)" fg:x="78" fg:w="1"/><text x="6.5353%" y="415.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.2853%" y="389" width="0.0806%" height="15" fill="rgb(240,7,16)" fg:x="78" fg:w="1"/><text x="6.5353%" y="399.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.2853%" y="373" width="0.0806%" height="15" fill="rgb(213,160,23)" fg:x="78" fg:w="1"/><text x="6.5353%" y="383.50"></text></g><g><title>kernel::plugins::ActionSchema::new (2 samples, 0.16%)</title><rect x="6.3658%" y="421" width="0.1612%" height="15" fill="rgb(251,179,49)" fg:x="79" fg:w="2"/><text x="6.6158%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="6.3658%" y="405" width="0.1612%" height="15" fill="rgb(247,198,10)" fg:x="79" fg:w="2"/><text x="6.6158%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (34 samples, 2.74%)</title><rect x="3.9484%" y="469" width="2.7397%" height="15" fill="rgb(220,65,29)" fg:x="49" fg:w="34"/><text x="4.1984%" y="479.50">&lt;h..</text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.32%)</title><rect x="6.3658%" y="453" width="0.3223%" height="15" fill="rgb(237,171,28)" fg:x="79" fg:w="4"/><text x="6.6158%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.32%)</title><rect x="6.3658%" y="437" width="0.3223%" height="15" fill="rgb(228,44,26)" fg:x="79" fg:w="4"/><text x="6.6158%" y="447.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="6.5270%" y="421" width="0.1612%" height="15" fill="rgb(216,210,27)" fg:x="81" fg:w="2"/><text x="6.7770%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.6076%" y="405" width="0.0806%" height="15" fill="rgb(252,10,17)" fg:x="82" fg:w="1"/><text x="6.8576%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.6076%" y="389" width="0.0806%" height="15" fill="rgb(214,172,30)" fg:x="82" fg:w="1"/><text x="6.8576%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="6.6882%" y="453" width="0.1612%" height="15" fill="rgb(253,130,48)" fg:x="83" fg:w="2"/><text x="6.9382%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="6.6882%" y="437" width="0.1612%" height="15" fill="rgb(226,99,43)" fg:x="83" fg:w="2"/><text x="6.9382%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="6.6882%" y="421" width="0.1612%" height="15" fill="rgb(239,111,26)" fg:x="83" fg:w="2"/><text x="6.9382%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="6.6882%" y="405" width="0.1612%" height="15" fill="rgb(240,27,53)" fg:x="83" fg:w="2"/><text x="6.9382%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.16%)</title><rect x="6.6882%" y="389" width="0.1612%" height="15" fill="rgb(254,163,12)" fg:x="83" fg:w="2"/><text x="6.9382%" y="399.50"></text></g><g><title>anyhow::__private::format_err (1 samples, 0.08%)</title><rect x="6.8493%" y="453" width="0.0806%" height="15" fill="rgb(225,51,48)" fg:x="85" fg:w="1"/><text x="7.0993%" y="463.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="6.9299%" y="453" width="0.0806%" height="15" fill="rgb(205,19,32)" fg:x="86" fg:w="1"/><text x="7.1799%" y="463.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="7.0105%" y="453" width="0.0806%" height="15" fill="rgb(218,119,26)" fg:x="87" fg:w="1"/><text x="7.2605%" y="463.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="7.0105%" y="437" width="0.0806%" height="15" fill="rgb(231,173,33)" fg:x="87" fg:w="1"/><text x="7.2605%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="7.0105%" y="421" width="0.0806%" height="15" fill="rgb(241,100,29)" fg:x="87" fg:w="1"/><text x="7.2605%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="7.0105%" y="405" width="0.0806%" height="15" fill="rgb(250,194,34)" fg:x="87" fg:w="1"/><text x="7.2605%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="7.0105%" y="389" width="0.0806%" height="15" fill="rgb(215,23,50)" fg:x="87" fg:w="1"/><text x="7.2605%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="7.0105%" y="373" width="0.0806%" height="15" fill="rgb(206,49,37)" fg:x="87" fg:w="1"/><text x="7.2605%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.97%)</title><rect x="6.6882%" y="469" width="0.9670%" height="15" fill="rgb(247,39,21)" fg:x="83" fg:w="12"/><text x="6.9382%" y="479.50"></text></g><g><title>std::sys::unix::fs::stat (7 samples, 0.56%)</title><rect x="7.0911%" y="453" width="0.5641%" height="15" fill="rgb(209,220,15)" fg:x="88" fg:w="7"/><text x="7.3411%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (7 samples, 0.56%)</title><rect x="7.0911%" y="437" width="0.5641%" height="15" fill="rgb(206,41,33)" fg:x="88" fg:w="7"/><text x="7.3411%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (7 samples, 0.56%)</title><rect x="7.0911%" y="421" width="0.5641%" height="15" fill="rgb(221,225,45)" fg:x="88" fg:w="7"/><text x="7.3411%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (7 samples, 0.56%)</title><rect x="7.0911%" y="405" width="0.5641%" height="15" fill="rgb(216,27,18)" fg:x="88" fg:w="7"/><text x="7.3411%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx (7 samples, 0.56%)</title><rect x="7.0911%" y="389" width="0.5641%" height="15" fill="rgb(250,193,34)" fg:x="88" fg:w="7"/><text x="7.3411%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (7 samples, 0.56%)</title><rect x="7.0911%" y="373" width="0.5641%" height="15" fill="rgb(227,215,20)" fg:x="88" fg:w="7"/><text x="7.3411%" y="383.50"></text></g><g><title>statx (7 samples, 0.56%)</title><rect x="7.0911%" y="357" width="0.5641%" height="15" fill="rgb(242,211,27)" fg:x="88" fg:w="7"/><text x="7.3411%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.7357%" y="405" width="0.0806%" height="15" fill="rgb(229,190,30)" fg:x="96" fg:w="1"/><text x="7.9857%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.7357%" y="389" width="0.0806%" height="15" fill="rgb(253,31,29)" fg:x="96" fg:w="1"/><text x="7.9857%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.7357%" y="373" width="0.0806%" height="15" fill="rgb(229,177,52)" fg:x="96" fg:w="1"/><text x="7.9857%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.7357%" y="357" width="0.0806%" height="15" fill="rgb(226,88,8)" fg:x="96" fg:w="1"/><text x="7.9857%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.7357%" y="341" width="0.0806%" height="15" fill="rgb(214,55,27)" fg:x="96" fg:w="1"/><text x="7.9857%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.7357%" y="325" width="0.0806%" height="15" fill="rgb(233,202,5)" fg:x="96" fg:w="1"/><text x="7.9857%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.7357%" y="309" width="0.0806%" height="15" fill="rgb(251,49,30)" fg:x="96" fg:w="1"/><text x="7.9857%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.7357%" y="293" width="0.0806%" height="15" fill="rgb(235,18,52)" fg:x="96" fg:w="1"/><text x="7.9857%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.7357%" y="277" width="0.0806%" height="15" fill="rgb(250,111,51)" fg:x="96" fg:w="1"/><text x="7.9857%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.7357%" y="261" width="0.0806%" height="15" fill="rgb(218,13,25)" fg:x="96" fg:w="1"/><text x="7.9857%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.7357%" y="245" width="0.0806%" height="15" fill="rgb(248,96,7)" fg:x="96" fg:w="1"/><text x="7.9857%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.7357%" y="229" width="0.0806%" height="15" fill="rgb(217,31,15)" fg:x="96" fg:w="1"/><text x="7.9857%" y="239.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (6 samples, 0.48%)</title><rect x="7.6551%" y="453" width="0.4835%" height="15" fill="rgb(228,59,49)" fg:x="95" fg:w="6"/><text x="7.9051%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="7.6551%" y="437" width="0.4835%" height="15" fill="rgb(210,152,38)" fg:x="95" fg:w="6"/><text x="7.9051%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="7.7357%" y="421" width="0.4029%" height="15" fill="rgb(206,71,11)" fg:x="96" fg:w="5"/><text x="7.9857%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="7.8163%" y="405" width="0.3223%" height="15" fill="rgb(244,199,5)" fg:x="97" fg:w="4"/><text x="8.0663%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.1386%" y="421" width="0.0806%" height="15" fill="rgb(253,49,1)" fg:x="101" fg:w="1"/><text x="8.3886%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.2192%" y="341" width="0.0806%" height="15" fill="rgb(225,206,40)" fg:x="102" fg:w="1"/><text x="8.4692%" y="351.50"></text></g><g><title>glob::is_dir (8 samples, 0.64%)</title><rect x="8.2192%" y="405" width="0.6446%" height="15" fill="rgb(243,116,47)" fg:x="102" fg:w="8"/><text x="8.4692%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat (8 samples, 0.64%)</title><rect x="8.2192%" y="389" width="0.6446%" height="15" fill="rgb(219,225,16)" fg:x="102" fg:w="8"/><text x="8.4692%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (8 samples, 0.64%)</title><rect x="8.2192%" y="373" width="0.6446%" height="15" fill="rgb(233,29,47)" fg:x="102" fg:w="8"/><text x="8.4692%" y="383.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (8 samples, 0.64%)</title><rect x="8.2192%" y="357" width="0.6446%" height="15" fill="rgb(250,179,18)" fg:x="102" fg:w="8"/><text x="8.4692%" y="367.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (7 samples, 0.56%)</title><rect x="8.2998%" y="341" width="0.5641%" height="15" fill="rgb(215,176,6)" fg:x="103" fg:w="7"/><text x="8.5498%" y="351.50"></text></g><g><title>std::sys::unix::fs::try_statx (7 samples, 0.56%)</title><rect x="8.2998%" y="325" width="0.5641%" height="15" fill="rgb(214,117,39)" fg:x="103" fg:w="7"/><text x="8.5498%" y="335.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (7 samples, 0.56%)</title><rect x="8.2998%" y="309" width="0.5641%" height="15" fill="rgb(247,183,36)" fg:x="103" fg:w="7"/><text x="8.5498%" y="319.50"></text></g><g><title>statx (6 samples, 0.48%)</title><rect x="8.3803%" y="293" width="0.4835%" height="15" fill="rgb(237,200,3)" fg:x="104" fg:w="6"/><text x="8.6303%" y="303.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.97%)</title><rect x="8.1386%" y="437" width="0.9670%" height="15" fill="rgb(212,220,24)" fg:x="101" fg:w="12"/><text x="8.3886%" y="447.50"></text></g><g><title>glob::fill_todo (11 samples, 0.89%)</title><rect x="8.2192%" y="421" width="0.8864%" height="15" fill="rgb(245,216,20)" fg:x="102" fg:w="11"/><text x="8.4692%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.24%)</title><rect x="8.8638%" y="405" width="0.2417%" height="15" fill="rgb(219,124,7)" fg:x="110" fg:w="3"/><text x="9.1138%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.24%)</title><rect x="8.8638%" y="389" width="0.2417%" height="15" fill="rgb(227,167,8)" fg:x="110" fg:w="3"/><text x="9.1138%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="8.8638%" y="373" width="0.2417%" height="15" fill="rgb(241,37,2)" fg:x="110" fg:w="3"/><text x="9.1138%" y="383.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.24%)</title><rect x="8.8638%" y="357" width="0.2417%" height="15" fill="rgb(238,134,33)" fg:x="110" fg:w="3"/><text x="9.1138%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.24%)</title><rect x="8.8638%" y="341" width="0.2417%" height="15" fill="rgb(248,48,27)" fg:x="110" fg:w="3"/><text x="9.1138%" y="351.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.24%)</title><rect x="8.8638%" y="325" width="0.2417%" height="15" fill="rgb(212,14,16)" fg:x="110" fg:w="3"/><text x="9.1138%" y="335.50"></text></g><g><title>statx (3 samples, 0.24%)</title><rect x="8.8638%" y="309" width="0.2417%" height="15" fill="rgb(217,205,37)" fg:x="110" fg:w="3"/><text x="9.1138%" y="319.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="9.1056%" y="405" width="0.1612%" height="15" fill="rgb(233,185,47)" fg:x="113" fg:w="2"/><text x="9.3556%" y="415.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="9.1861%" y="389" width="0.0806%" height="15" fill="rgb(244,88,8)" fg:x="114" fg:w="1"/><text x="9.4361%" y="399.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="9.1861%" y="373" width="0.0806%" height="15" fill="rgb(213,0,20)" fg:x="114" fg:w="1"/><text x="9.4361%" y="383.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="9.1861%" y="357" width="0.0806%" height="15" fill="rgb(238,159,36)" fg:x="114" fg:w="1"/><text x="9.4361%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="9.1861%" y="341" width="0.0806%" height="15" fill="rgb(253,173,17)" fg:x="114" fg:w="1"/><text x="9.4361%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="9.1861%" y="325" width="0.0806%" height="15" fill="rgb(221,23,28)" fg:x="114" fg:w="1"/><text x="9.4361%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="9.1861%" y="309" width="0.0806%" height="15" fill="rgb(218,113,15)" fg:x="114" fg:w="1"/><text x="9.4361%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="9.1861%" y="293" width="0.0806%" height="15" fill="rgb(233,58,3)" fg:x="114" fg:w="1"/><text x="9.4361%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.3473%" y="389" width="0.0806%" height="15" fill="rgb(250,46,35)" fg:x="116" fg:w="1"/><text x="9.5973%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.3473%" y="373" width="0.0806%" height="15" fill="rgb(210,169,11)" fg:x="116" fg:w="1"/><text x="9.5973%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.3473%" y="357" width="0.0806%" height="15" fill="rgb(246,88,19)" fg:x="116" fg:w="1"/><text x="9.5973%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.3473%" y="341" width="0.0806%" height="15" fill="rgb(206,81,49)" fg:x="116" fg:w="1"/><text x="9.5973%" y="351.50"></text></g><g><title>glob::Pattern::new (4 samples, 0.32%)</title><rect x="9.2667%" y="405" width="0.3223%" height="15" fill="rgb(232,144,18)" fg:x="115" fg:w="4"/><text x="9.5167%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="9.4279%" y="389" width="0.1612%" height="15" fill="rgb(235,2,27)" fg:x="117" fg:w="2"/><text x="9.6779%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.4279%" y="373" width="0.1612%" height="15" fill="rgb(239,157,39)" fg:x="117" fg:w="2"/><text x="9.6779%" y="383.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.4279%" y="357" width="0.1612%" height="15" fill="rgb(220,11,17)" fg:x="117" fg:w="2"/><text x="9.6779%" y="367.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (25 samples, 2.01%)</title><rect x="7.6551%" y="469" width="2.0145%" height="15" fill="rgb(243,94,50)" fg:x="95" fg:w="25"/><text x="7.9051%" y="479.50">&lt;..</text></g><g><title>plugins_rune::sources::load_directory_sources (19 samples, 1.53%)</title><rect x="8.1386%" y="453" width="1.5310%" height="15" fill="rgb(218,22,0)" fg:x="101" fg:w="19"/><text x="8.3886%" y="463.50"></text></g><g><title>glob::glob (7 samples, 0.56%)</title><rect x="9.1056%" y="437" width="0.5641%" height="15" fill="rgb(249,70,21)" fg:x="113" fg:w="7"/><text x="9.3556%" y="447.50"></text></g><g><title>glob::glob_with (7 samples, 0.56%)</title><rect x="9.1056%" y="421" width="0.5641%" height="15" fill="rgb(245,111,46)" fg:x="113" fg:w="7"/><text x="9.3556%" y="431.50"></text></g><g><title>std::path::Path::components (1 samples, 0.08%)</title><rect x="9.5890%" y="405" width="0.0806%" height="15" fill="rgb(244,183,12)" fg:x="119" fg:w="1"/><text x="9.8390%" y="415.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="9.6696%" y="469" width="0.0806%" height="15" fill="rgb(207,117,0)" fg:x="120" fg:w="1"/><text x="9.9196%" y="479.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="9.6696%" y="453" width="0.0806%" height="15" fill="rgb(206,20,43)" fg:x="120" fg:w="1"/><text x="9.9196%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.7502%" y="469" width="0.0806%" height="15" fill="rgb(221,104,11)" fg:x="121" fg:w="1"/><text x="10.0002%" y="479.50"></text></g><g><title>__libc_free (7 samples, 0.56%)</title><rect x="9.8308%" y="453" width="0.5641%" height="15" fill="rgb(254,36,50)" fg:x="122" fg:w="7"/><text x="10.0808%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (11 samples, 0.89%)</title><rect x="9.8308%" y="469" width="0.8864%" height="15" fill="rgb(252,17,15)" fg:x="122" fg:w="11"/><text x="10.0808%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (4 samples, 0.32%)</title><rect x="10.3948%" y="453" width="0.3223%" height="15" fill="rgb(219,129,43)" fg:x="129" fg:w="4"/><text x="10.6448%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.5560%" y="437" width="0.1612%" height="15" fill="rgb(205,34,45)" fg:x="131" fg:w="2"/><text x="10.8060%" y="447.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (88 samples, 7.09%)</title><rect x="3.8678%" y="485" width="7.0911%" height="15" fill="rgb(251,201,32)" fg:x="48" fg:w="88"/><text x="4.1178%" y="495.50">kernel::pl..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.24%)</title><rect x="10.7172%" y="469" width="0.2417%" height="15" fill="rgb(205,56,0)" fg:x="133" fg:w="3"/><text x="10.9672%" y="479.50"></text></g><g><title>clock_gettime (3 samples, 0.24%)</title><rect x="10.7172%" y="453" width="0.2417%" height="15" fill="rgb(211,193,27)" fg:x="133" fg:w="3"/><text x="10.9672%" y="463.50"></text></g><g><title>engine::session::Session::initialize (89 samples, 7.17%)</title><rect x="3.8678%" y="501" width="7.1716%" height="15" fill="rgb(231,100,42)" fg:x="48" fg:w="89"/><text x="4.1178%" y="511.50">engine::se..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="10.9589%" y="485" width="0.0806%" height="15" fill="rgb(245,85,27)" fg:x="136" fg:w="1"/><text x="11.2089%" y="495.50"></text></g><g><title>&lt;plugins_core::emote::EmotePluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="11.1201%" y="469" width="0.0806%" height="15" fill="rgb(241,76,24)" fg:x="138" fg:w="1"/><text x="11.3701%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (93 samples, 7.49%)</title><rect x="3.7873%" y="549" width="7.4940%" height="15" fill="rgb(249,157,15)" fg:x="47" fg:w="93"/><text x="4.0373%" y="559.50">&lt;engine::d..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (93 samples, 7.49%)</title><rect x="3.7873%" y="533" width="7.4940%" height="15" fill="rgb(222,218,25)" fg:x="47" fg:w="93"/><text x="4.0373%" y="543.50">engine::do..</text></g><g><title>engine::session::Session::new (93 samples, 7.49%)</title><rect x="3.7873%" y="517" width="7.4940%" height="15" fill="rgb(252,156,52)" fg:x="47" fg:w="93"/><text x="4.0373%" y="527.50">engine::se..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="11.0395%" y="501" width="0.2417%" height="15" fill="rgb(211,185,7)" fg:x="137" fg:w="3"/><text x="11.2895%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="11.0395%" y="485" width="0.2417%" height="15" fill="rgb(234,108,24)" fg:x="137" fg:w="3"/><text x="11.2895%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="11.2006%" y="469" width="0.0806%" height="15" fill="rgb(227,218,2)" fg:x="139" fg:w="1"/><text x="11.4506%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.2006%" y="453" width="0.0806%" height="15" fill="rgb(224,0,36)" fg:x="139" fg:w="1"/><text x="11.4506%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="11.4424%" y="533" width="0.0806%" height="15" fill="rgb(233,201,10)" fg:x="142" fg:w="1"/><text x="11.6924%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="11.4424%" y="517" width="0.0806%" height="15" fill="rgb(252,209,14)" fg:x="142" fg:w="1"/><text x="11.6924%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.4424%" y="501" width="0.0806%" height="15" fill="rgb(205,93,49)" fg:x="142" fg:w="1"/><text x="11.6924%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.4424%" y="485" width="0.0806%" height="15" fill="rgb(234,116,45)" fg:x="142" fg:w="1"/><text x="11.6924%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="11.5230%" y="533" width="0.0806%" height="15" fill="rgb(248,89,35)" fg:x="143" fg:w="1"/><text x="11.7730%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="11.6035%" y="517" width="0.0806%" height="15" fill="rgb(233,167,45)" fg:x="144" fg:w="1"/><text x="11.8535%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6035%" y="501" width="0.0806%" height="15" fill="rgb(248,228,14)" fg:x="144" fg:w="1"/><text x="11.8535%" y="511.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="11.6841%" y="517" width="0.0806%" height="15" fill="rgb(246,91,14)" fg:x="145" fg:w="1"/><text x="11.9341%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="11.7647%" y="453" width="0.1612%" height="15" fill="rgb(227,142,5)" fg:x="146" fg:w="2"/><text x="12.0147%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.8453%" y="437" width="0.0806%" height="15" fill="rgb(221,63,33)" fg:x="147" fg:w="1"/><text x="12.0953%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.8453%" y="421" width="0.0806%" height="15" fill="rgb(233,49,0)" fg:x="147" fg:w="1"/><text x="12.0953%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.8453%" y="405" width="0.0806%" height="15" fill="rgb(251,115,38)" fg:x="147" fg:w="1"/><text x="12.0953%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.8453%" y="389" width="0.0806%" height="15" fill="rgb(231,214,32)" fg:x="147" fg:w="1"/><text x="12.0953%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.8453%" y="373" width="0.0806%" height="15" fill="rgb(248,73,46)" fg:x="147" fg:w="1"/><text x="12.0953%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.8453%" y="357" width="0.0806%" height="15" fill="rgb(237,156,4)" fg:x="147" fg:w="1"/><text x="12.0953%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.8453%" y="341" width="0.0806%" height="15" fill="rgb(227,132,2)" fg:x="147" fg:w="1"/><text x="12.0953%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.8453%" y="325" width="0.0806%" height="15" fill="rgb(248,161,9)" fg:x="147" fg:w="1"/><text x="12.0953%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.8453%" y="309" width="0.0806%" height="15" fill="rgb(238,77,38)" fg:x="147" fg:w="1"/><text x="12.0953%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.8453%" y="293" width="0.0806%" height="15" fill="rgb(222,166,40)" fg:x="147" fg:w="1"/><text x="12.0953%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.8453%" y="277" width="0.0806%" height="15" fill="rgb(214,168,45)" fg:x="147" fg:w="1"/><text x="12.0953%" y="287.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="11.7647%" y="485" width="0.2417%" height="15" fill="rgb(226,64,37)" fg:x="146" fg:w="3"/><text x="12.0147%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="11.7647%" y="469" width="0.2417%" height="15" fill="rgb(232,210,43)" fg:x="146" fg:w="3"/><text x="12.0147%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.9259%" y="453" width="0.0806%" height="15" fill="rgb(214,76,33)" fg:x="148" fg:w="1"/><text x="12.1759%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="12.0870%" y="437" width="0.0806%" height="15" fill="rgb(210,78,5)" fg:x="150" fg:w="1"/><text x="12.3370%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.0870%" y="421" width="0.0806%" height="15" fill="rgb(211,107,37)" fg:x="150" fg:w="1"/><text x="12.3370%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.0870%" y="405" width="0.0806%" height="15" fill="rgb(249,67,16)" fg:x="150" fg:w="1"/><text x="12.3370%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.0870%" y="389" width="0.0806%" height="15" fill="rgb(222,114,31)" fg:x="150" fg:w="1"/><text x="12.3370%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.0870%" y="373" width="0.0806%" height="15" fill="rgb(242,118,19)" fg:x="150" fg:w="1"/><text x="12.3370%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.0870%" y="357" width="0.0806%" height="15" fill="rgb(223,115,1)" fg:x="150" fg:w="1"/><text x="12.3370%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.0870%" y="341" width="0.0806%" height="15" fill="rgb(241,182,54)" fg:x="150" fg:w="1"/><text x="12.3370%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0870%" y="325" width="0.0806%" height="15" fill="rgb(244,166,36)" fg:x="150" fg:w="1"/><text x="12.3370%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="12.2482%" y="421" width="0.2417%" height="15" fill="rgb(241,52,43)" fg:x="152" fg:w="3"/><text x="12.4982%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="12.2482%" y="405" width="0.2417%" height="15" fill="rgb(236,82,9)" fg:x="152" fg:w="3"/><text x="12.4982%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.3288%" y="389" width="0.1612%" height="15" fill="rgb(241,119,0)" fg:x="153" fg:w="2"/><text x="12.5788%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.4093%" y="373" width="0.0806%" height="15" fill="rgb(221,19,22)" fg:x="154" fg:w="1"/><text x="12.6593%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.4093%" y="357" width="0.0806%" height="15" fill="rgb(254,144,35)" fg:x="154" fg:w="1"/><text x="12.6593%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.5705%" y="405" width="0.0806%" height="15" fill="rgb(246,132,30)" fg:x="156" fg:w="1"/><text x="12.8205%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="12.6511%" y="405" width="0.4029%" height="15" fill="rgb(234,69,28)" fg:x="157" fg:w="5"/><text x="12.9011%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="12.8122%" y="389" width="0.2417%" height="15" fill="rgb(219,106,47)" fg:x="159" fg:w="3"/><text x="13.0622%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="12.8928%" y="373" width="0.1612%" height="15" fill="rgb(218,79,24)" fg:x="160" fg:w="2"/><text x="13.1428%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="12.8928%" y="357" width="0.1612%" height="15" fill="rgb(225,26,21)" fg:x="160" fg:w="2"/><text x="13.1428%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.2151%" y="357" width="0.0806%" height="15" fill="rgb(217,68,49)" fg:x="164" fg:w="1"/><text x="13.4651%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.2957%" y="341" width="0.0806%" height="15" fill="rgb(220,204,28)" fg:x="165" fg:w="1"/><text x="13.5457%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.2957%" y="325" width="0.0806%" height="15" fill="rgb(237,208,43)" fg:x="165" fg:w="1"/><text x="13.5457%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="13.2957%" y="357" width="0.1612%" height="15" fill="rgb(213,97,42)" fg:x="165" fg:w="2"/><text x="13.5457%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="13.3763%" y="341" width="0.0806%" height="15" fill="rgb(238,96,52)" fg:x="166" fg:w="1"/><text x="13.6263%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.3763%" y="325" width="0.0806%" height="15" fill="rgb(228,14,13)" fg:x="166" fg:w="1"/><text x="13.6263%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="13.1346%" y="389" width="0.4835%" height="15" fill="rgb(219,123,13)" fg:x="163" fg:w="6"/><text x="13.3846%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="13.1346%" y="373" width="0.4835%" height="15" fill="rgb(216,144,17)" fg:x="163" fg:w="6"/><text x="13.3846%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.4569%" y="357" width="0.1612%" height="15" fill="rgb(230,228,29)" fg:x="167" fg:w="2"/><text x="13.7069%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.5375%" y="341" width="0.0806%" height="15" fill="rgb(233,18,5)" fg:x="168" fg:w="1"/><text x="13.7875%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="13.6180%" y="389" width="0.3223%" height="15" fill="rgb(233,197,12)" fg:x="169" fg:w="4"/><text x="13.8680%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.7792%" y="373" width="0.1612%" height="15" fill="rgb(234,140,29)" fg:x="171" fg:w="2"/><text x="14.0292%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.8598%" y="357" width="0.0806%" height="15" fill="rgb(233,113,19)" fg:x="172" fg:w="1"/><text x="14.1098%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.8598%" y="341" width="0.0806%" height="15" fill="rgb(246,209,13)" fg:x="172" fg:w="1"/><text x="14.1098%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="14.0210%" y="373" width="0.3223%" height="15" fill="rgb(242,79,54)" fg:x="174" fg:w="4"/><text x="14.2710%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="14.0210%" y="357" width="0.3223%" height="15" fill="rgb(219,73,16)" fg:x="174" fg:w="4"/><text x="14.2710%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="14.0210%" y="341" width="0.3223%" height="15" fill="rgb(224,52,10)" fg:x="174" fg:w="4"/><text x="14.2710%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="14.1821%" y="325" width="0.1612%" height="15" fill="rgb(237,179,5)" fg:x="176" fg:w="2"/><text x="14.4321%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.2627%" y="309" width="0.0806%" height="15" fill="rgb(231,20,6)" fg:x="177" fg:w="1"/><text x="14.5127%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.2627%" y="293" width="0.0806%" height="15" fill="rgb(253,171,45)" fg:x="177" fg:w="1"/><text x="14.5127%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.2627%" y="277" width="0.0806%" height="15" fill="rgb(230,75,49)" fg:x="177" fg:w="1"/><text x="14.5127%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="14.3433%" y="357" width="0.5641%" height="15" fill="rgb(216,83,46)" fg:x="178" fg:w="7"/><text x="14.5933%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.6656%" y="341" width="0.2417%" height="15" fill="rgb(236,56,9)" fg:x="182" fg:w="3"/><text x="14.9156%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9073%" y="357" width="0.0806%" height="15" fill="rgb(215,28,34)" fg:x="185" fg:w="1"/><text x="15.1573%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.9073%" y="341" width="0.0806%" height="15" fill="rgb(230,222,20)" fg:x="185" fg:w="1"/><text x="15.1573%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.9073%" y="325" width="0.0806%" height="15" fill="rgb(235,209,51)" fg:x="185" fg:w="1"/><text x="15.1573%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.9073%" y="309" width="0.0806%" height="15" fill="rgb(235,167,1)" fg:x="185" fg:w="1"/><text x="15.1573%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.9073%" y="293" width="0.0806%" height="15" fill="rgb(248,220,0)" fg:x="185" fg:w="1"/><text x="15.1573%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="14.3433%" y="373" width="0.7252%" height="15" fill="rgb(239,0,18)" fg:x="178" fg:w="9"/><text x="14.5933%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.9879%" y="357" width="0.0806%" height="15" fill="rgb(229,179,11)" fg:x="186" fg:w="1"/><text x="15.2379%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.0685%" y="341" width="0.0806%" height="15" fill="rgb(226,116,53)" fg:x="187" fg:w="1"/><text x="15.3185%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.18%)</title><rect x="13.0540%" y="405" width="2.1757%" height="15" fill="rgb(218,1,49)" fg:x="162" fg:w="27"/><text x="13.3040%" y="415.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="13.9404%" y="389" width="1.2893%" height="15" fill="rgb(208,184,47)" fg:x="173" fg:w="16"/><text x="14.1904%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.0685%" y="373" width="0.1612%" height="15" fill="rgb(238,174,3)" fg:x="187" fg:w="2"/><text x="15.3185%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.0685%" y="357" width="0.1612%" height="15" fill="rgb(247,188,6)" fg:x="187" fg:w="2"/><text x="15.3185%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.1491%" y="341" width="0.0806%" height="15" fill="rgb(211,165,46)" fg:x="188" fg:w="1"/><text x="15.3991%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.3102%" y="373" width="0.1612%" height="15" fill="rgb(222,190,10)" fg:x="190" fg:w="2"/><text x="15.5602%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (42 samples, 3.38%)</title><rect x="12.1676%" y="437" width="3.3844%" height="15" fill="rgb(206,185,3)" fg:x="151" fg:w="42"/><text x="12.4176%" y="447.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.06%)</title><rect x="12.4899%" y="421" width="3.0620%" height="15" fill="rgb(244,125,37)" fg:x="155" fg:w="38"/><text x="12.7399%" y="431.50">ser..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.2297%" y="405" width="0.3223%" height="15" fill="rgb(211,43,7)" fg:x="189" fg:w="4"/><text x="15.4797%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="15.3102%" y="389" width="0.2417%" height="15" fill="rgb(250,41,42)" fg:x="190" fg:w="3"/><text x="15.5602%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.4714%" y="373" width="0.0806%" height="15" fill="rgb(254,54,42)" fg:x="192" fg:w="1"/><text x="15.7214%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6326%" y="405" width="0.0806%" height="15" fill="rgb(213,71,43)" fg:x="194" fg:w="1"/><text x="15.8826%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.7131%" y="405" width="0.0806%" height="15" fill="rgb(249,3,44)" fg:x="195" fg:w="1"/><text x="15.9631%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7937%" y="389" width="0.0806%" height="15" fill="rgb(229,80,41)" fg:x="196" fg:w="1"/><text x="16.0437%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.8743%" y="389" width="0.0806%" height="15" fill="rgb(231,25,28)" fg:x="197" fg:w="1"/><text x="16.1243%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.8743%" y="373" width="0.0806%" height="15" fill="rgb(208,79,48)" fg:x="197" fg:w="1"/><text x="16.1243%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="15.9549%" y="373" width="0.1612%" height="15" fill="rgb(207,196,38)" fg:x="198" fg:w="2"/><text x="16.2049%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.0355%" y="357" width="0.0806%" height="15" fill="rgb(228,105,49)" fg:x="199" fg:w="1"/><text x="16.2855%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.1966%" y="325" width="0.0806%" height="15" fill="rgb(237,99,15)" fg:x="201" fg:w="1"/><text x="16.4466%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="16.1966%" y="357" width="0.1612%" height="15" fill="rgb(224,207,46)" fg:x="201" fg:w="2"/><text x="16.4466%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="16.1966%" y="341" width="0.1612%" height="15" fill="rgb(249,117,50)" fg:x="201" fg:w="2"/><text x="16.4466%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2772%" y="325" width="0.0806%" height="15" fill="rgb(248,17,13)" fg:x="202" fg:w="1"/><text x="16.5272%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2772%" y="309" width="0.0806%" height="15" fill="rgb(228,187,36)" fg:x="202" fg:w="1"/><text x="16.5272%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.2772%" y="293" width="0.0806%" height="15" fill="rgb(234,132,20)" fg:x="202" fg:w="1"/><text x="16.5272%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.2772%" y="277" width="0.0806%" height="15" fill="rgb(209,170,46)" fg:x="202" fg:w="1"/><text x="16.5272%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="15.5520%" y="437" width="0.9670%" height="15" fill="rgb(237,23,19)" fg:x="193" fg:w="12"/><text x="15.8020%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="15.5520%" y="421" width="0.9670%" height="15" fill="rgb(227,21,26)" fg:x="193" fg:w="12"/><text x="15.8020%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="15.7937%" y="405" width="0.7252%" height="15" fill="rgb(222,220,48)" fg:x="196" fg:w="9"/><text x="16.0437%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="15.9549%" y="389" width="0.5641%" height="15" fill="rgb(214,9,16)" fg:x="198" fg:w="7"/><text x="16.2049%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="16.1160%" y="373" width="0.4029%" height="15" fill="rgb(209,73,30)" fg:x="200" fg:w="5"/><text x="16.3660%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.3578%" y="357" width="0.1612%" height="15" fill="rgb(207,20,33)" fg:x="203" fg:w="2"/><text x="16.6078%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4384%" y="341" width="0.0806%" height="15" fill="rgb(219,153,12)" fg:x="204" fg:w="1"/><text x="16.6884%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5189%" y="405" width="0.0806%" height="15" fill="rgb(235,97,25)" fg:x="205" fg:w="1"/><text x="16.7689%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5189%" y="389" width="0.0806%" height="15" fill="rgb(244,30,34)" fg:x="205" fg:w="1"/><text x="16.7689%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="16.5995%" y="405" width="0.0806%" height="15" fill="rgb(214,106,45)" fg:x="206" fg:w="1"/><text x="16.8495%" y="415.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="16.6801%" y="405" width="0.0806%" height="15" fill="rgb(226,41,9)" fg:x="207" fg:w="1"/><text x="16.9301%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="16.6801%" y="389" width="0.0806%" height="15" fill="rgb(253,139,29)" fg:x="207" fg:w="1"/><text x="16.9301%" y="399.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="16.6801%" y="373" width="0.0806%" height="15" fill="rgb(213,205,39)" fg:x="207" fg:w="1"/><text x="16.9301%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="16.6801%" y="357" width="0.0806%" height="15" fill="rgb(209,27,10)" fg:x="207" fg:w="1"/><text x="16.9301%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="16.5189%" y="421" width="0.3223%" height="15" fill="rgb(249,142,16)" fg:x="205" fg:w="4"/><text x="16.7689%" y="431.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="16.7607%" y="405" width="0.0806%" height="15" fill="rgb(242,65,12)" fg:x="208" fg:w="1"/><text x="17.0107%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9218%" y="389" width="0.0806%" height="15" fill="rgb(232,48,10)" fg:x="210" fg:w="1"/><text x="17.1718%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0024%" y="389" width="0.0806%" height="15" fill="rgb(253,67,19)" fg:x="211" fg:w="1"/><text x="17.2524%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0830%" y="389" width="0.0806%" height="15" fill="rgb(227,93,29)" fg:x="212" fg:w="1"/><text x="17.3330%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="17.1636%" y="389" width="0.0806%" height="15" fill="rgb(226,189,53)" fg:x="213" fg:w="1"/><text x="17.4136%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.1636%" y="373" width="0.0806%" height="15" fill="rgb(223,224,1)" fg:x="213" fg:w="1"/><text x="17.4136%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1636%" y="357" width="0.0806%" height="15" fill="rgb(221,84,32)" fg:x="213" fg:w="1"/><text x="17.4136%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.5665%" y="325" width="0.0806%" height="15" fill="rgb(214,189,28)" fg:x="218" fg:w="1"/><text x="17.8165%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.5665%" y="341" width="0.1612%" height="15" fill="rgb(234,7,52)" fg:x="218" fg:w="2"/><text x="17.8165%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.6471%" y="325" width="0.0806%" height="15" fill="rgb(249,73,31)" fg:x="219" fg:w="1"/><text x="17.8971%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.7276%" y="293" width="0.0806%" height="15" fill="rgb(253,153,41)" fg:x="220" fg:w="1"/><text x="17.9776%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7276%" y="277" width="0.0806%" height="15" fill="rgb(249,52,34)" fg:x="220" fg:w="1"/><text x="17.9776%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8082%" y="261" width="0.0806%" height="15" fill="rgb(236,177,47)" fg:x="221" fg:w="1"/><text x="18.0582%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8082%" y="245" width="0.0806%" height="15" fill="rgb(252,185,45)" fg:x="221" fg:w="1"/><text x="18.0582%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="17.7276%" y="309" width="0.3223%" height="15" fill="rgb(251,15,30)" fg:x="220" fg:w="4"/><text x="17.9776%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="17.8082%" y="293" width="0.2417%" height="15" fill="rgb(233,31,4)" fg:x="221" fg:w="3"/><text x="18.0582%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="17.8082%" y="277" width="0.2417%" height="15" fill="rgb(254,44,24)" fg:x="221" fg:w="3"/><text x="18.0582%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="17.8888%" y="261" width="0.1612%" height="15" fill="rgb(218,54,1)" fg:x="222" fg:w="2"/><text x="18.1388%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="17.8888%" y="245" width="0.1612%" height="15" fill="rgb(243,209,39)" fg:x="222" fg:w="2"/><text x="18.1388%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.9694%" y="229" width="0.0806%" height="15" fill="rgb(206,75,33)" fg:x="223" fg:w="1"/><text x="18.2194%" y="239.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="17.7276%" y="341" width="0.4029%" height="15" fill="rgb(223,108,18)" fg:x="220" fg:w="5"/><text x="17.9776%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="17.7276%" y="325" width="0.4029%" height="15" fill="rgb(244,89,31)" fg:x="220" fg:w="5"/><text x="17.9776%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0500%" y="309" width="0.0806%" height="15" fill="rgb(222,167,27)" fg:x="224" fg:w="1"/><text x="18.3000%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.3723%" y="309" width="0.1612%" height="15" fill="rgb(247,41,16)" fg:x="228" fg:w="2"/><text x="18.6223%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.3723%" y="293" width="0.1612%" height="15" fill="rgb(233,168,40)" fg:x="228" fg:w="2"/><text x="18.6223%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.45%)</title><rect x="17.4859%" y="357" width="1.4504%" height="15" fill="rgb(205,211,8)" fg:x="217" fg:w="18"/><text x="17.7359%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="18.1305%" y="341" width="0.8058%" height="15" fill="rgb(238,105,11)" fg:x="225" fg:w="10"/><text x="18.3805%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="18.2111%" y="325" width="0.7252%" height="15" fill="rgb(223,142,52)" fg:x="226" fg:w="9"/><text x="18.4611%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="18.5334%" y="309" width="0.4029%" height="15" fill="rgb(238,51,33)" fg:x="230" fg:w="5"/><text x="18.7834%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="18.6946%" y="293" width="0.2417%" height="15" fill="rgb(231,188,43)" fg:x="232" fg:w="3"/><text x="18.9446%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8558%" y="277" width="0.0806%" height="15" fill="rgb(216,92,17)" fg:x="234" fg:w="1"/><text x="19.1058%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8558%" y="261" width="0.0806%" height="15" fill="rgb(228,2,40)" fg:x="234" fg:w="1"/><text x="19.1058%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.69%)</title><rect x="17.4859%" y="373" width="1.6922%" height="15" fill="rgb(226,73,15)" fg:x="217" fg:w="21"/><text x="17.7359%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="18.9363%" y="357" width="0.2417%" height="15" fill="rgb(227,66,46)" fg:x="235" fg:w="3"/><text x="19.1863%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.0169%" y="341" width="0.1612%" height="15" fill="rgb(209,71,6)" fg:x="236" fg:w="2"/><text x="19.2669%" y="351.50"></text></g><g><title>engine::session::Session::flush (97 samples, 7.82%)</title><rect x="11.6035%" y="533" width="7.8163%" height="15" fill="rgb(246,100,25)" fg:x="144" fg:w="97"/><text x="11.8535%" y="543.50">engine::ses..</text></g><g><title>engine::session::state::State::close (95 samples, 7.66%)</title><rect x="11.7647%" y="517" width="7.6551%" height="15" fill="rgb(248,185,27)" fg:x="146" fg:w="95"/><text x="12.0147%" y="527.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (95 samples, 7.66%)</title><rect x="11.7647%" y="501" width="7.6551%" height="15" fill="rgb(225,118,47)" fg:x="146" fg:w="95"/><text x="12.0147%" y="511.50">engine::se..</text></g><g><title>core::iter::adapters::try_process (92 samples, 7.41%)</title><rect x="12.0064%" y="485" width="7.4134%" height="15" fill="rgb(220,185,44)" fg:x="149" fg:w="92"/><text x="12.2564%" y="495.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (92 samples, 7.41%)</title><rect x="12.0064%" y="469" width="7.4134%" height="15" fill="rgb(227,95,24)" fg:x="149" fg:w="92"/><text x="12.2564%" y="479.50">&lt;alloc::ve..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (91 samples, 7.33%)</title><rect x="12.0870%" y="453" width="7.3328%" height="15" fill="rgb(252,84,24)" fg:x="150" fg:w="91"/><text x="12.3370%" y="463.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.90%)</title><rect x="16.5189%" y="437" width="2.9009%" height="15" fill="rgb(240,34,44)" fg:x="205" fg:w="36"/><text x="16.7689%" y="447.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (32 samples, 2.58%)</title><rect x="16.8413%" y="421" width="2.5786%" height="15" fill="rgb(209,72,54)" fg:x="209" fg:w="32"/><text x="17.0913%" y="431.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.58%)</title><rect x="16.8413%" y="405" width="2.5786%" height="15" fill="rgb(226,19,45)" fg:x="209" fg:w="32"/><text x="17.0913%" y="415.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (27 samples, 2.18%)</title><rect x="17.2442%" y="389" width="2.1757%" height="15" fill="rgb(246,7,45)" fg:x="214" fg:w="27"/><text x="17.4942%" y="399.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.1781%" y="373" width="0.2417%" height="15" fill="rgb(225,45,2)" fg:x="238" fg:w="3"/><text x="19.4281%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.3392%" y="357" width="0.0806%" height="15" fill="rgb(221,80,29)" fg:x="240" fg:w="1"/><text x="19.5892%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="19.4198%" y="533" width="0.0806%" height="15" fill="rgb(228,11,19)" fg:x="241" fg:w="1"/><text x="19.6698%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="19.4198%" y="517" width="0.0806%" height="15" fill="rgb(243,17,21)" fg:x="241" fg:w="1"/><text x="19.6698%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.4198%" y="501" width="0.0806%" height="15" fill="rgb(243,88,8)" fg:x="241" fg:w="1"/><text x="19.6698%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.4198%" y="485" width="0.0806%" height="15" fill="rgb(214,17,9)" fg:x="241" fg:w="1"/><text x="19.6698%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.4198%" y="469" width="0.0806%" height="15" fill="rgb(232,169,15)" fg:x="241" fg:w="1"/><text x="19.6698%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="19.4198%" y="453" width="0.0806%" height="15" fill="rgb(232,86,53)" fg:x="241" fg:w="1"/><text x="19.6698%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.5004%" y="485" width="0.1612%" height="15" fill="rgb(222,100,4)" fg:x="242" fg:w="2"/><text x="19.7504%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.5004%" y="469" width="0.1612%" height="15" fill="rgb(253,151,38)" fg:x="242" fg:w="2"/><text x="19.7504%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.5004%" y="453" width="0.1612%" height="15" fill="rgb(238,215,29)" fg:x="242" fg:w="2"/><text x="19.7504%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5810%" y="437" width="0.0806%" height="15" fill="rgb(205,128,53)" fg:x="243" fg:w="1"/><text x="19.8310%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5810%" y="421" width="0.0806%" height="15" fill="rgb(248,183,14)" fg:x="243" fg:w="1"/><text x="19.8310%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.5810%" y="405" width="0.0806%" height="15" fill="rgb(244,172,35)" fg:x="243" fg:w="1"/><text x="19.8310%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.5810%" y="389" width="0.0806%" height="15" fill="rgb(234,93,19)" fg:x="243" fg:w="1"/><text x="19.8310%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.5810%" y="373" width="0.0806%" height="15" fill="rgb(227,109,7)" fg:x="243" fg:w="1"/><text x="19.8310%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.5810%" y="357" width="0.0806%" height="15" fill="rgb(233,136,54)" fg:x="243" fg:w="1"/><text x="19.8310%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.5810%" y="341" width="0.0806%" height="15" fill="rgb(233,19,40)" fg:x="243" fg:w="1"/><text x="19.8310%" y="351.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="19.5004%" y="517" width="0.2417%" height="15" fill="rgb(247,41,18)" fg:x="242" fg:w="3"/><text x="19.7504%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="19.5004%" y="501" width="0.2417%" height="15" fill="rgb(220,34,34)" fg:x="242" fg:w="3"/><text x="19.7504%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.6616%" y="485" width="0.0806%" height="15" fill="rgb(222,135,32)" fg:x="244" fg:w="1"/><text x="19.9116%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6616%" y="469" width="0.0806%" height="15" fill="rgb(214,80,19)" fg:x="244" fg:w="1"/><text x="19.9116%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.6616%" y="453" width="0.0806%" height="15" fill="rgb(234,54,46)" fg:x="244" fg:w="1"/><text x="19.9116%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6616%" y="437" width="0.0806%" height="15" fill="rgb(251,48,23)" fg:x="244" fg:w="1"/><text x="19.9116%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.6616%" y="421" width="0.0806%" height="15" fill="rgb(254,109,52)" fg:x="244" fg:w="1"/><text x="19.9116%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6616%" y="405" width="0.0806%" height="15" fill="rgb(240,186,19)" fg:x="244" fg:w="1"/><text x="19.9116%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6616%" y="389" width="0.0806%" height="15" fill="rgb(246,187,17)" fg:x="244" fg:w="1"/><text x="19.9116%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.7421%" y="469" width="0.1612%" height="15" fill="rgb(212,21,5)" fg:x="245" fg:w="2"/><text x="19.9921%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.7421%" y="453" width="0.1612%" height="15" fill="rgb(225,185,18)" fg:x="245" fg:w="2"/><text x="19.9921%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8227%" y="437" width="0.0806%" height="15" fill="rgb(245,114,17)" fg:x="246" fg:w="1"/><text x="20.0727%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="19.7421%" y="485" width="0.2417%" height="15" fill="rgb(223,164,24)" fg:x="245" fg:w="3"/><text x="19.9921%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="19.9033%" y="469" width="0.0806%" height="15" fill="rgb(211,228,3)" fg:x="247" fg:w="1"/><text x="20.1533%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="19.7421%" y="501" width="0.3223%" height="15" fill="rgb(223,16,38)" fg:x="245" fg:w="4"/><text x="19.9921%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="19.9839%" y="485" width="0.0806%" height="15" fill="rgb(207,31,54)" fg:x="248" fg:w="1"/><text x="20.2339%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="19.9839%" y="469" width="0.0806%" height="15" fill="rgb(220,39,11)" fg:x="248" fg:w="1"/><text x="20.2339%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9839%" y="453" width="0.0806%" height="15" fill="rgb(235,185,0)" fg:x="248" fg:w="1"/><text x="20.2339%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9839%" y="437" width="0.0806%" height="15" fill="rgb(249,39,18)" fg:x="248" fg:w="1"/><text x="20.2339%" y="447.50"></text></g><g><title>kernel::model::scopes::OpenedScopeMut&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="20.0645%" y="437" width="0.0806%" height="15" fill="rgb(240,110,33)" fg:x="249" fg:w="1"/><text x="20.3145%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="20.0645%" y="485" width="0.3223%" height="15" fill="rgb(210,92,42)" fg:x="249" fg:w="4"/><text x="20.3145%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.32%)</title><rect x="20.0645%" y="469" width="0.3223%" height="15" fill="rgb(218,215,28)" fg:x="249" fg:w="4"/><text x="20.3145%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="20.0645%" y="453" width="0.3223%" height="15" fill="rgb(238,215,36)" fg:x="249" fg:w="4"/><text x="20.3145%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.1450%" y="437" width="0.2417%" height="15" fill="rgb(220,31,10)" fg:x="250" fg:w="3"/><text x="20.3950%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.1450%" y="421" width="0.2417%" height="15" fill="rgb(212,93,14)" fg:x="250" fg:w="3"/><text x="20.3950%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="20.1450%" y="405" width="0.2417%" height="15" fill="rgb(254,207,2)" fg:x="250" fg:w="3"/><text x="20.3950%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.1450%" y="389" width="0.2417%" height="15" fill="rgb(205,57,44)" fg:x="250" fg:w="3"/><text x="20.3950%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.2256%" y="373" width="0.1612%" height="15" fill="rgb(226,151,19)" fg:x="251" fg:w="2"/><text x="20.4756%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.3062%" y="357" width="0.0806%" height="15" fill="rgb(230,72,30)" fg:x="252" fg:w="1"/><text x="20.5562%" y="367.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="20.3868%" y="485" width="0.1612%" height="15" fill="rgb(244,0,8)" fg:x="253" fg:w="2"/><text x="20.6368%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.3868%" y="469" width="0.1612%" height="15" fill="rgb(230,192,6)" fg:x="253" fg:w="2"/><text x="20.6368%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="20.3868%" y="453" width="0.1612%" height="15" fill="rgb(233,207,13)" fg:x="253" fg:w="2"/><text x="20.6368%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.4674%" y="437" width="0.0806%" height="15" fill="rgb(206,227,7)" fg:x="254" fg:w="1"/><text x="20.7174%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.7091%" y="373" width="0.0806%" height="15" fill="rgb(213,217,25)" fg:x="257" fg:w="1"/><text x="20.9591%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.7091%" y="357" width="0.0806%" height="15" fill="rgb(249,75,4)" fg:x="257" fg:w="1"/><text x="20.9591%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.13%)</title><rect x="19.7421%" y="517" width="1.1281%" height="15" fill="rgb(225,114,18)" fg:x="245" fg:w="14"/><text x="19.9921%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.81%)</title><rect x="20.0645%" y="501" width="0.8058%" height="15" fill="rgb(211,162,40)" fg:x="249" fg:w="10"/><text x="20.3145%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="20.5479%" y="485" width="0.3223%" height="15" fill="rgb(206,49,29)" fg:x="255" fg:w="4"/><text x="20.7979%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="20.6285%" y="469" width="0.2417%" height="15" fill="rgb(244,8,6)" fg:x="256" fg:w="3"/><text x="20.8785%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="20.6285%" y="453" width="0.2417%" height="15" fill="rgb(231,194,28)" fg:x="256" fg:w="3"/><text x="20.8785%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="20.7091%" y="437" width="0.1612%" height="15" fill="rgb(210,69,5)" fg:x="257" fg:w="2"/><text x="20.9591%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="20.7091%" y="421" width="0.1612%" height="15" fill="rgb(216,186,12)" fg:x="257" fg:w="2"/><text x="20.9591%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="20.7091%" y="405" width="0.1612%" height="15" fill="rgb(238,61,15)" fg:x="257" fg:w="2"/><text x="20.9591%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="20.7091%" y="389" width="0.1612%" height="15" fill="rgb(226,104,1)" fg:x="257" fg:w="2"/><text x="20.9591%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.7897%" y="373" width="0.0806%" height="15" fill="rgb(229,128,15)" fg:x="258" fg:w="1"/><text x="21.0397%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.7897%" y="357" width="0.0806%" height="15" fill="rgb(247,110,15)" fg:x="258" fg:w="1"/><text x="21.0397%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.7897%" y="341" width="0.0806%" height="15" fill="rgb(210,74,48)" fg:x="258" fg:w="1"/><text x="21.0397%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.7897%" y="325" width="0.0806%" height="15" fill="rgb(246,121,10)" fg:x="258" fg:w="1"/><text x="21.0397%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="20.7897%" y="309" width="0.0806%" height="15" fill="rgb(214,156,37)" fg:x="258" fg:w="1"/><text x="21.0397%" y="319.50"></text></g><g><title>plugins_core::build::Build::save (18 samples, 1.45%)</title><rect x="19.5004%" y="533" width="1.4504%" height="15" fill="rgb(214,210,34)" fg:x="242" fg:w="18"/><text x="19.7504%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.8703%" y="517" width="0.0806%" height="15" fill="rgb(237,93,35)" fg:x="259" fg:w="1"/><text x="21.1203%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8703%" y="501" width="0.0806%" height="15" fill="rgb(206,36,8)" fg:x="259" fg:w="1"/><text x="21.1203%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8703%" y="485" width="0.0806%" height="15" fill="rgb(208,151,12)" fg:x="259" fg:w="1"/><text x="21.1203%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8703%" y="469" width="0.0806%" height="15" fill="rgb(225,133,52)" fg:x="259" fg:w="1"/><text x="21.1203%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.9508%" y="469" width="0.0806%" height="15" fill="rgb(231,71,53)" fg:x="260" fg:w="1"/><text x="21.2008%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.9508%" y="453" width="0.0806%" height="15" fill="rgb(243,76,21)" fg:x="260" fg:w="1"/><text x="21.2008%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="20.9508%" y="485" width="0.1612%" height="15" fill="rgb(252,144,3)" fg:x="260" fg:w="2"/><text x="21.2008%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0314%" y="469" width="0.0806%" height="15" fill="rgb(231,199,10)" fg:x="261" fg:w="1"/><text x="21.2814%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1120%" y="453" width="0.0806%" height="15" fill="rgb(215,18,11)" fg:x="262" fg:w="1"/><text x="21.3620%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1120%" y="437" width="0.0806%" height="15" fill="rgb(241,65,24)" fg:x="262" fg:w="1"/><text x="21.3620%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.1120%" y="421" width="0.0806%" height="15" fill="rgb(251,192,38)" fg:x="262" fg:w="1"/><text x="21.3620%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (4 samples, 0.32%)</title><rect x="20.9508%" y="533" width="0.3223%" height="15" fill="rgb(205,9,35)" fg:x="260" fg:w="4"/><text x="21.2008%" y="543.50"></text></g><g><title>plugins_core::tools::set_quantity (4 samples, 0.32%)</title><rect x="20.9508%" y="517" width="0.3223%" height="15" fill="rgb(229,225,49)" fg:x="260" fg:w="4"/><text x="21.2008%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="20.9508%" y="501" width="0.3223%" height="15" fill="rgb(207,125,39)" fg:x="260" fg:w="4"/><text x="21.2008%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (2 samples, 0.16%)</title><rect x="21.1120%" y="485" width="0.1612%" height="15" fill="rgb(222,78,19)" fg:x="262" fg:w="2"/><text x="21.3620%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.1120%" y="469" width="0.1612%" height="15" fill="rgb(248,207,20)" fg:x="262" fg:w="2"/><text x="21.3620%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="21.1926%" y="453" width="0.0806%" height="15" fill="rgb(205,103,49)" fg:x="263" fg:w="1"/><text x="21.4426%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.1926%" y="437" width="0.0806%" height="15" fill="rgb(216,42,28)" fg:x="263" fg:w="1"/><text x="21.4426%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="21.1926%" y="421" width="0.0806%" height="15" fill="rgb(213,205,53)" fg:x="263" fg:w="1"/><text x="21.4426%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.1926%" y="405" width="0.0806%" height="15" fill="rgb(239,140,53)" fg:x="263" fg:w="1"/><text x="21.4426%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1926%" y="389" width="0.0806%" height="15" fill="rgb(248,95,9)" fg:x="263" fg:w="1"/><text x="21.4426%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::OpenedScopeRefMut&lt;plugins_core::carrying::model::Containing,kernel::model::entity::Entity&gt;&gt; (1 samples, 0.08%)</title><rect x="21.2732%" y="501" width="0.0806%" height="15" fill="rgb(254,58,47)" fg:x="264" fg:w="1"/><text x="21.5232%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="21.2732%" y="485" width="0.0806%" height="15" fill="rgb(234,227,14)" fg:x="264" fg:w="1"/><text x="21.5232%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.2732%" y="469" width="0.0806%" height="15" fill="rgb(205,192,45)" fg:x="264" fg:w="1"/><text x="21.5232%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="21.3537%" y="469" width="0.0806%" height="15" fill="rgb(253,187,31)" fg:x="265" fg:w="1"/><text x="21.6037%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="21.3537%" y="453" width="0.0806%" height="15" fill="rgb(222,6,32)" fg:x="265" fg:w="1"/><text x="21.6037%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.3537%" y="437" width="0.0806%" height="15" fill="rgb(249,190,19)" fg:x="265" fg:w="1"/><text x="21.6037%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.3537%" y="421" width="0.0806%" height="15" fill="rgb(251,28,20)" fg:x="265" fg:w="1"/><text x="21.6037%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.3537%" y="405" width="0.0806%" height="15" fill="rgb(210,223,40)" fg:x="265" fg:w="1"/><text x="21.6037%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.3537%" y="389" width="0.0806%" height="15" fill="rgb(216,137,22)" fg:x="265" fg:w="1"/><text x="21.6037%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="21.3537%" y="501" width="0.2417%" height="15" fill="rgb(247,39,34)" fg:x="265" fg:w="3"/><text x="21.6037%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="21.3537%" y="485" width="0.2417%" height="15" fill="rgb(239,43,50)" fg:x="265" fg:w="3"/><text x="21.6037%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="21.4343%" y="469" width="0.1612%" height="15" fill="rgb(241,212,9)" fg:x="266" fg:w="2"/><text x="21.6843%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="21.4343%" y="453" width="0.1612%" height="15" fill="rgb(205,8,2)" fg:x="266" fg:w="2"/><text x="21.6843%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4343%" y="437" width="0.1612%" height="15" fill="rgb(217,173,54)" fg:x="266" fg:w="2"/><text x="21.6843%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4343%" y="421" width="0.1612%" height="15" fill="rgb(208,149,52)" fg:x="266" fg:w="2"/><text x="21.6843%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4343%" y="405" width="0.1612%" height="15" fill="rgb(239,99,40)" fg:x="266" fg:w="2"/><text x="21.6843%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.4343%" y="389" width="0.1612%" height="15" fill="rgb(233,214,26)" fg:x="266" fg:w="2"/><text x="21.6843%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.4343%" y="373" width="0.1612%" height="15" fill="rgb(231,225,37)" fg:x="266" fg:w="2"/><text x="21.6843%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="21.4343%" y="357" width="0.1612%" height="15" fill="rgb(252,55,35)" fg:x="266" fg:w="2"/><text x="21.6843%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="21.4343%" y="341" width="0.1612%" height="15" fill="rgb(239,43,18)" fg:x="266" fg:w="2"/><text x="21.6843%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="21.4343%" y="325" width="0.1612%" height="15" fill="rgb(251,125,49)" fg:x="266" fg:w="2"/><text x="21.6843%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="21.4343%" y="309" width="0.1612%" height="15" fill="rgb(212,83,54)" fg:x="266" fg:w="2"/><text x="21.6843%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="21.4343%" y="293" width="0.1612%" height="15" fill="rgb(250,75,6)" fg:x="266" fg:w="2"/><text x="21.6843%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="21.4343%" y="277" width="0.1612%" height="15" fill="rgb(252,36,40)" fg:x="266" fg:w="2"/><text x="21.6843%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="21.4343%" y="261" width="0.1612%" height="15" fill="rgb(230,91,51)" fg:x="266" fg:w="2"/><text x="21.6843%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="21.4343%" y="245" width="0.1612%" height="15" fill="rgb(212,92,28)" fg:x="266" fg:w="2"/><text x="21.6843%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="21.4343%" y="229" width="0.1612%" height="15" fill="rgb(227,13,22)" fg:x="266" fg:w="2"/><text x="21.6843%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.4343%" y="213" width="0.1612%" height="15" fill="rgb(239,204,32)" fg:x="266" fg:w="2"/><text x="21.6843%" y="223.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="21.5955%" y="501" width="0.1612%" height="15" fill="rgb(228,49,41)" fg:x="268" fg:w="2"/><text x="21.8455%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="21.5955%" y="485" width="0.1612%" height="15" fill="rgb(206,95,6)" fg:x="268" fg:w="2"/><text x="21.8455%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.6761%" y="469" width="0.0806%" height="15" fill="rgb(251,20,14)" fg:x="269" fg:w="1"/><text x="21.9261%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.6761%" y="453" width="0.0806%" height="15" fill="rgb(214,99,28)" fg:x="269" fg:w="1"/><text x="21.9261%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="21.6761%" y="437" width="0.0806%" height="15" fill="rgb(239,122,54)" fg:x="269" fg:w="1"/><text x="21.9261%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.6761%" y="421" width="0.0806%" height="15" fill="rgb(218,217,46)" fg:x="269" fg:w="1"/><text x="21.9261%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6761%" y="405" width="0.0806%" height="15" fill="rgb(249,106,28)" fg:x="269" fg:w="1"/><text x="21.9261%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.8372%" y="357" width="0.0806%" height="15" fill="rgb(250,158,18)" fg:x="271" fg:w="1"/><text x="22.0872%" y="367.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="21.8372%" y="453" width="0.1612%" height="15" fill="rgb(226,137,29)" fg:x="271" fg:w="2"/><text x="22.0872%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="21.8372%" y="437" width="0.1612%" height="15" fill="rgb(210,188,1)" fg:x="271" fg:w="2"/><text x="22.0872%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.8372%" y="421" width="0.1612%" height="15" fill="rgb(227,84,42)" fg:x="271" fg:w="2"/><text x="22.0872%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.8372%" y="405" width="0.1612%" height="15" fill="rgb(222,147,48)" fg:x="271" fg:w="2"/><text x="22.0872%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="21.8372%" y="389" width="0.1612%" height="15" fill="rgb(241,150,43)" fg:x="271" fg:w="2"/><text x="22.0872%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.8372%" y="373" width="0.1612%" height="15" fill="rgb(206,139,52)" fg:x="271" fg:w="2"/><text x="22.0872%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9178%" y="357" width="0.0806%" height="15" fill="rgb(230,63,14)" fg:x="272" fg:w="1"/><text x="22.1678%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.9178%" y="341" width="0.0806%" height="15" fill="rgb(247,8,20)" fg:x="272" fg:w="1"/><text x="22.1678%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9984%" y="421" width="0.0806%" height="15" fill="rgb(213,115,4)" fg:x="273" fg:w="1"/><text x="22.2484%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9984%" y="405" width="0.0806%" height="15" fill="rgb(241,79,49)" fg:x="273" fg:w="1"/><text x="22.2484%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9984%" y="389" width="0.0806%" height="15" fill="rgb(222,42,35)" fg:x="273" fg:w="1"/><text x="22.2484%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9984%" y="373" width="0.0806%" height="15" fill="rgb(247,59,23)" fg:x="273" fg:w="1"/><text x="22.2484%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.9984%" y="357" width="0.0806%" height="15" fill="rgb(247,93,18)" fg:x="273" fg:w="1"/><text x="22.2484%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.9984%" y="341" width="0.0806%" height="15" fill="rgb(249,107,47)" fg:x="273" fg:w="1"/><text x="22.2484%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.9984%" y="325" width="0.0806%" height="15" fill="rgb(219,27,1)" fg:x="273" fg:w="1"/><text x="22.2484%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="21.9984%" y="309" width="0.0806%" height="15" fill="rgb(217,82,32)" fg:x="273" fg:w="1"/><text x="22.2484%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.9984%" y="293" width="0.0806%" height="15" fill="rgb(250,129,47)" fg:x="273" fg:w="1"/><text x="22.2484%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.0790%" y="421" width="0.1612%" height="15" fill="rgb(253,88,35)" fg:x="274" fg:w="2"/><text x="22.3290%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.0790%" y="405" width="0.1612%" height="15" fill="rgb(245,221,14)" fg:x="274" fg:w="2"/><text x="22.3290%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.0790%" y="389" width="0.1612%" height="15" fill="rgb(217,119,54)" fg:x="274" fg:w="2"/><text x="22.3290%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="22.0790%" y="373" width="0.1612%" height="15" fill="rgb(247,128,31)" fg:x="274" fg:w="2"/><text x="22.3290%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="22.0790%" y="357" width="0.1612%" height="15" fill="rgb(211,99,22)" fg:x="274" fg:w="2"/><text x="22.3290%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="22.0790%" y="341" width="0.1612%" height="15" fill="rgb(212,20,17)" fg:x="274" fg:w="2"/><text x="22.3290%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="22.0790%" y="325" width="0.1612%" height="15" fill="rgb(209,159,29)" fg:x="274" fg:w="2"/><text x="22.3290%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="22.0790%" y="309" width="0.1612%" height="15" fill="rgb(222,177,53)" fg:x="274" fg:w="2"/><text x="22.3290%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="22.0790%" y="293" width="0.1612%" height="15" fill="rgb(234,46,43)" fg:x="274" fg:w="2"/><text x="22.3290%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="22.0790%" y="277" width="0.1612%" height="15" fill="rgb(208,108,14)" fg:x="274" fg:w="2"/><text x="22.3290%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="22.0790%" y="261" width="0.1612%" height="15" fill="rgb(226,78,53)" fg:x="274" fg:w="2"/><text x="22.3290%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="22.0790%" y="245" width="0.1612%" height="15" fill="rgb(230,20,41)" fg:x="274" fg:w="2"/><text x="22.3290%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.1595%" y="229" width="0.0806%" height="15" fill="rgb(213,195,35)" fg:x="275" fg:w="1"/><text x="22.4095%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.2401%" y="357" width="0.0806%" height="15" fill="rgb(242,62,36)" fg:x="276" fg:w="1"/><text x="22.4901%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="21.9984%" y="437" width="0.4029%" height="15" fill="rgb(222,210,37)" fg:x="273" fg:w="5"/><text x="22.2484%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.2401%" y="421" width="0.1612%" height="15" fill="rgb(232,107,19)" fg:x="276" fg:w="2"/><text x="22.4901%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.2401%" y="405" width="0.1612%" height="15" fill="rgb(235,85,17)" fg:x="276" fg:w="2"/><text x="22.4901%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="22.2401%" y="389" width="0.1612%" height="15" fill="rgb(219,195,31)" fg:x="276" fg:w="2"/><text x="22.4901%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.2401%" y="373" width="0.1612%" height="15" fill="rgb(231,183,30)" fg:x="276" fg:w="2"/><text x="22.4901%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.3207%" y="357" width="0.0806%" height="15" fill="rgb(212,0,11)" fg:x="277" fg:w="1"/><text x="22.5707%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3207%" y="341" width="0.0806%" height="15" fill="rgb(249,53,54)" fg:x="277" fg:w="1"/><text x="22.5707%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.3207%" y="325" width="0.0806%" height="15" fill="rgb(211,118,13)" fg:x="277" fg:w="1"/><text x="22.5707%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.3207%" y="309" width="0.0806%" height="15" fill="rgb(237,42,9)" fg:x="277" fg:w="1"/><text x="22.5707%" y="319.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (15 samples, 1.21%)</title><rect x="21.2732%" y="533" width="1.2087%" height="15" fill="rgb(227,68,32)" fg:x="264" fg:w="15"/><text x="21.5232%" y="543.50"></text></g><g><title>plugins_core::tools::set_container (15 samples, 1.21%)</title><rect x="21.2732%" y="517" width="1.2087%" height="15" fill="rgb(238,10,7)" fg:x="264" fg:w="15"/><text x="21.5232%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.73%)</title><rect x="21.7566%" y="501" width="0.7252%" height="15" fill="rgb(224,42,12)" fg:x="270" fg:w="9"/><text x="22.0066%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (8 samples, 0.64%)</title><rect x="21.8372%" y="485" width="0.6446%" height="15" fill="rgb(252,190,5)" fg:x="271" fg:w="8"/><text x="22.0872%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="21.8372%" y="469" width="0.6446%" height="15" fill="rgb(220,214,39)" fg:x="271" fg:w="8"/><text x="22.0872%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="21.9984%" y="453" width="0.4835%" height="15" fill="rgb(247,98,4)" fg:x="273" fg:w="6"/><text x="22.2484%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="22.4013%" y="437" width="0.0806%" height="15" fill="rgb(211,60,12)" fg:x="278" fg:w="1"/><text x="22.6513%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="22.4819%" y="485" width="0.0806%" height="15" fill="rgb(224,42,10)" fg:x="279" fg:w="1"/><text x="22.7319%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.4819%" y="469" width="0.0806%" height="15" fill="rgb(217,167,4)" fg:x="279" fg:w="1"/><text x="22.7319%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.4819%" y="453" width="0.0806%" height="15" fill="rgb(253,18,17)" fg:x="279" fg:w="1"/><text x="22.7319%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="22.4819%" y="501" width="0.1612%" height="15" fill="rgb(249,186,44)" fg:x="279" fg:w="2"/><text x="22.7319%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5624%" y="485" width="0.0806%" height="15" fill="rgb(254,124,54)" fg:x="280" fg:w="1"/><text x="22.8124%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5624%" y="469" width="0.0806%" height="15" fill="rgb(220,124,39)" fg:x="280" fg:w="1"/><text x="22.8124%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.5624%" y="453" width="0.0806%" height="15" fill="rgb(225,96,46)" fg:x="280" fg:w="1"/><text x="22.8124%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5624%" y="437" width="0.0806%" height="15" fill="rgb(221,106,12)" fg:x="280" fg:w="1"/><text x="22.8124%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="22.6430%" y="501" width="0.0806%" height="15" fill="rgb(227,133,23)" fg:x="281" fg:w="1"/><text x="22.8930%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.6430%" y="485" width="0.0806%" height="15" fill="rgb(216,44,52)" fg:x="281" fg:w="1"/><text x="22.8930%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (4 samples, 0.32%)</title><rect x="22.4819%" y="517" width="0.3223%" height="15" fill="rgb(239,149,7)" fg:x="279" fg:w="4"/><text x="22.7319%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.7236%" y="501" width="0.0806%" height="15" fill="rgb(211,157,31)" fg:x="282" fg:w="1"/><text x="22.9736%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.7236%" y="485" width="0.0806%" height="15" fill="rgb(206,215,22)" fg:x="282" fg:w="1"/><text x="22.9736%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.7236%" y="469" width="0.0806%" height="15" fill="rgb(208,113,15)" fg:x="282" fg:w="1"/><text x="22.9736%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="22.7236%" y="453" width="0.0806%" height="15" fill="rgb(207,189,15)" fg:x="282" fg:w="1"/><text x="22.9736%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.7236%" y="437" width="0.0806%" height="15" fill="rgb(231,115,4)" fg:x="282" fg:w="1"/><text x="22.9736%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7236%" y="421" width="0.0806%" height="15" fill="rgb(253,117,2)" fg:x="282" fg:w="1"/><text x="22.9736%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8042%" y="453" width="0.0806%" height="15" fill="rgb(248,48,24)" fg:x="283" fg:w="1"/><text x="23.0542%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="22.8042%" y="517" width="0.1612%" height="15" fill="rgb(241,28,46)" fg:x="283" fg:w="2"/><text x="23.0542%" y="527.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="22.8042%" y="501" width="0.1612%" height="15" fill="rgb(216,165,52)" fg:x="283" fg:w="2"/><text x="23.0542%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="22.8042%" y="485" width="0.1612%" height="15" fill="rgb(220,222,34)" fg:x="283" fg:w="2"/><text x="23.0542%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="22.8042%" y="469" width="0.1612%" height="15" fill="rgb(247,222,49)" fg:x="283" fg:w="2"/><text x="23.0542%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8848%" y="453" width="0.0806%" height="15" fill="rgb(240,10,31)" fg:x="284" fg:w="1"/><text x="23.1348%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.8848%" y="437" width="0.0806%" height="15" fill="rgb(221,199,35)" fg:x="284" fg:w="1"/><text x="23.1348%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.9654%" y="437" width="0.1612%" height="15" fill="rgb(230,223,11)" fg:x="285" fg:w="2"/><text x="23.2154%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="23.0459%" y="421" width="0.0806%" height="15" fill="rgb(218,82,45)" fg:x="286" fg:w="1"/><text x="23.2959%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.0459%" y="405" width="0.0806%" height="15" fill="rgb(233,213,33)" fg:x="286" fg:w="1"/><text x="23.2959%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1265%" y="405" width="0.0806%" height="15" fill="rgb(210,143,52)" fg:x="287" fg:w="1"/><text x="23.3765%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1265%" y="389" width="0.0806%" height="15" fill="rgb(206,95,4)" fg:x="287" fg:w="1"/><text x="23.3765%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1265%" y="373" width="0.0806%" height="15" fill="rgb(246,164,46)" fg:x="287" fg:w="1"/><text x="23.3765%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1265%" y="357" width="0.0806%" height="15" fill="rgb(213,210,47)" fg:x="287" fg:w="1"/><text x="23.3765%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1265%" y="341" width="0.0806%" height="15" fill="rgb(210,12,38)" fg:x="287" fg:w="1"/><text x="23.3765%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.1265%" y="325" width="0.0806%" height="15" fill="rgb(252,192,54)" fg:x="287" fg:w="1"/><text x="23.3765%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.1265%" y="309" width="0.0806%" height="15" fill="rgb(242,92,6)" fg:x="287" fg:w="1"/><text x="23.3765%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.1265%" y="293" width="0.0806%" height="15" fill="rgb(253,154,15)" fg:x="287" fg:w="1"/><text x="23.3765%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.1265%" y="277" width="0.0806%" height="15" fill="rgb(209,20,43)" fg:x="287" fg:w="1"/><text x="23.3765%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.1265%" y="261" width="0.0806%" height="15" fill="rgb(232,28,49)" fg:x="287" fg:w="1"/><text x="23.3765%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.1265%" y="245" width="0.0806%" height="15" fill="rgb(248,131,53)" fg:x="287" fg:w="1"/><text x="23.3765%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.1265%" y="229" width="0.0806%" height="15" fill="rgb(214,16,30)" fg:x="287" fg:w="1"/><text x="23.3765%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.1265%" y="213" width="0.0806%" height="15" fill="rgb(245,16,0)" fg:x="287" fg:w="1"/><text x="23.3765%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.1265%" y="197" width="0.0806%" height="15" fill="rgb(245,17,35)" fg:x="287" fg:w="1"/><text x="23.3765%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1265%" y="181" width="0.0806%" height="15" fill="rgb(249,27,53)" fg:x="287" fg:w="1"/><text x="23.3765%" y="191.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="22.9654%" y="517" width="0.3223%" height="15" fill="rgb(214,73,24)" fg:x="285" fg:w="4"/><text x="23.2154%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="22.9654%" y="501" width="0.3223%" height="15" fill="rgb(223,84,37)" fg:x="285" fg:w="4"/><text x="23.2154%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="22.9654%" y="485" width="0.3223%" height="15" fill="rgb(210,109,28)" fg:x="285" fg:w="4"/><text x="23.2154%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="22.9654%" y="469" width="0.3223%" height="15" fill="rgb(208,186,6)" fg:x="285" fg:w="4"/><text x="23.2154%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="22.9654%" y="453" width="0.3223%" height="15" fill="rgb(235,201,30)" fg:x="285" fg:w="4"/><text x="23.2154%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.1265%" y="437" width="0.1612%" height="15" fill="rgb(216,198,48)" fg:x="287" fg:w="2"/><text x="23.3765%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="23.1265%" y="421" width="0.1612%" height="15" fill="rgb(254,186,25)" fg:x="287" fg:w="2"/><text x="23.3765%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2071%" y="405" width="0.0806%" height="15" fill="rgb(227,87,5)" fg:x="288" fg:w="1"/><text x="23.4571%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="23.2877%" y="501" width="0.0806%" height="15" fill="rgb(236,205,25)" fg:x="289" fg:w="1"/><text x="23.5377%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2877%" y="485" width="0.0806%" height="15" fill="rgb(229,99,32)" fg:x="289" fg:w="1"/><text x="23.5377%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2877%" y="469" width="0.0806%" height="15" fill="rgb(231,177,31)" fg:x="289" fg:w="1"/><text x="23.5377%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.2877%" y="453" width="0.0806%" height="15" fill="rgb(246,15,2)" fg:x="289" fg:w="1"/><text x="23.5377%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.2877%" y="437" width="0.0806%" height="15" fill="rgb(207,39,15)" fg:x="289" fg:w="1"/><text x="23.5377%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.2877%" y="421" width="0.0806%" height="15" fill="rgb(207,44,9)" fg:x="289" fg:w="1"/><text x="23.5377%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.2877%" y="405" width="0.0806%" height="15" fill="rgb(225,224,33)" fg:x="289" fg:w="1"/><text x="23.5377%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.2877%" y="389" width="0.0806%" height="15" fill="rgb(252,151,3)" fg:x="289" fg:w="1"/><text x="23.5377%" y="399.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="23.3683%" y="485" width="0.0806%" height="15" fill="rgb(211,140,13)" fg:x="290" fg:w="1"/><text x="23.6183%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="23.5294%" y="421" width="0.1612%" height="15" fill="rgb(239,225,17)" fg:x="292" fg:w="2"/><text x="23.7794%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="23.4488%" y="453" width="0.4029%" height="15" fill="rgb(223,170,52)" fg:x="291" fg:w="5"/><text x="23.6988%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="23.5294%" y="437" width="0.3223%" height="15" fill="rgb(212,64,21)" fg:x="292" fg:w="4"/><text x="23.7794%" y="447.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="23.6906%" y="421" width="0.1612%" height="15" fill="rgb(236,126,48)" fg:x="294" fg:w="2"/><text x="23.9406%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7712%" y="405" width="0.0806%" height="15" fill="rgb(209,135,11)" fg:x="295" fg:w="1"/><text x="24.0212%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="23.9323%" y="405" width="0.1612%" height="15" fill="rgb(228,126,40)" fg:x="297" fg:w="2"/><text x="24.1823%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="23.9323%" y="389" width="0.1612%" height="15" fill="rgb(205,196,36)" fg:x="297" fg:w="2"/><text x="24.1823%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="23.9323%" y="373" width="0.1612%" height="15" fill="rgb(243,160,33)" fg:x="297" fg:w="2"/><text x="24.1823%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="24.2546%" y="373" width="0.5641%" height="15" fill="rgb(210,84,20)" fg:x="301" fg:w="7"/><text x="24.5046%" y="383.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="24.2546%" y="357" width="0.5641%" height="15" fill="rgb(228,213,30)" fg:x="301" fg:w="7"/><text x="24.5046%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="24.4964%" y="341" width="0.3223%" height="15" fill="rgb(252,33,45)" fg:x="304" fg:w="4"/><text x="24.7464%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="24.4964%" y="325" width="0.3223%" height="15" fill="rgb(254,227,20)" fg:x="304" fg:w="4"/><text x="24.7464%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.8187%" y="341" width="0.0806%" height="15" fill="rgb(228,192,2)" fg:x="308" fg:w="1"/><text x="25.0687%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.81%)</title><rect x="24.1741%" y="389" width="0.8058%" height="15" fill="rgb(233,32,8)" fg:x="300" fg:w="10"/><text x="24.4241%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.8187%" y="373" width="0.1612%" height="15" fill="rgb(220,146,47)" fg:x="308" fg:w="2"/><text x="25.0687%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.8187%" y="357" width="0.1612%" height="15" fill="rgb(246,194,1)" fg:x="308" fg:w="2"/><text x="25.0687%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="24.8993%" y="341" width="0.0806%" height="15" fill="rgb(218,203,9)" fg:x="309" fg:w="1"/><text x="25.1493%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.1410%" y="373" width="0.0806%" height="15" fill="rgb(237,97,14)" fg:x="312" fg:w="1"/><text x="25.3910%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="25.4633%" y="325" width="0.1612%" height="15" fill="rgb(239,76,15)" fg:x="316" fg:w="2"/><text x="25.7133%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.5439%" y="309" width="0.0806%" height="15" fill="rgb(222,53,45)" fg:x="317" fg:w="1"/><text x="25.7939%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.5439%" y="293" width="0.0806%" height="15" fill="rgb(237,88,5)" fg:x="317" fg:w="1"/><text x="25.7939%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.5439%" y="277" width="0.0806%" height="15" fill="rgb(218,223,35)" fg:x="317" fg:w="1"/><text x="25.7939%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="25.2216%" y="373" width="0.4835%" height="15" fill="rgb(243,229,38)" fg:x="313" fg:w="6"/><text x="25.4716%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="25.3828%" y="357" width="0.3223%" height="15" fill="rgb(240,75,41)" fg:x="315" fg:w="4"/><text x="25.6328%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="25.4633%" y="341" width="0.2417%" height="15" fill="rgb(209,110,37)" fg:x="316" fg:w="3"/><text x="25.7133%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="25.6245%" y="325" width="0.0806%" height="15" fill="rgb(221,130,46)" fg:x="318" fg:w="1"/><text x="25.8745%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.7857%" y="309" width="0.0806%" height="15" fill="rgb(237,160,20)" fg:x="320" fg:w="1"/><text x="26.0357%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.7857%" y="293" width="0.0806%" height="15" fill="rgb(234,126,24)" fg:x="320" fg:w="1"/><text x="26.0357%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.7857%" y="277" width="0.0806%" height="15" fill="rgb(207,177,9)" fg:x="320" fg:w="1"/><text x="26.0357%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.7857%" y="261" width="0.0806%" height="15" fill="rgb(231,191,33)" fg:x="320" fg:w="1"/><text x="26.0357%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="25.8662%" y="309" width="0.0806%" height="15" fill="rgb(207,42,1)" fg:x="321" fg:w="1"/><text x="26.1162%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="25.8662%" y="293" width="0.0806%" height="15" fill="rgb(218,34,50)" fg:x="321" fg:w="1"/><text x="26.1162%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.8662%" y="277" width="0.0806%" height="15" fill="rgb(254,126,39)" fg:x="321" fg:w="1"/><text x="26.1162%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.8662%" y="261" width="0.0806%" height="15" fill="rgb(251,17,26)" fg:x="321" fg:w="1"/><text x="26.1162%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="25.7857%" y="325" width="0.2417%" height="15" fill="rgb(252,215,34)" fg:x="320" fg:w="3"/><text x="26.0357%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.9468%" y="309" width="0.0806%" height="15" fill="rgb(217,120,44)" fg:x="322" fg:w="1"/><text x="26.1968%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.9468%" y="293" width="0.0806%" height="15" fill="rgb(211,31,11)" fg:x="322" fg:w="1"/><text x="26.1968%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="25.9468%" y="277" width="0.0806%" height="15" fill="rgb(222,69,51)" fg:x="322" fg:w="1"/><text x="26.1968%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="25.7857%" y="341" width="0.4029%" height="15" fill="rgb(215,229,42)" fg:x="320" fg:w="5"/><text x="26.0357%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.0274%" y="325" width="0.1612%" height="15" fill="rgb(212,102,15)" fg:x="323" fg:w="2"/><text x="26.2774%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="25.7857%" y="357" width="0.4835%" height="15" fill="rgb(205,179,41)" fg:x="320" fg:w="6"/><text x="26.0357%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.1886%" y="341" width="0.0806%" height="15" fill="rgb(219,148,46)" fg:x="325" fg:w="1"/><text x="26.4386%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.1886%" y="325" width="0.0806%" height="15" fill="rgb(243,40,19)" fg:x="325" fg:w="1"/><text x="26.4386%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.1886%" y="309" width="0.0806%" height="15" fill="rgb(208,206,34)" fg:x="325" fg:w="1"/><text x="26.4386%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="26.2691%" y="357" width="0.4835%" height="15" fill="rgb(244,184,38)" fg:x="326" fg:w="6"/><text x="26.5191%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.5109%" y="341" width="0.2417%" height="15" fill="rgb(244,151,47)" fg:x="329" fg:w="3"/><text x="26.7609%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.6720%" y="325" width="0.0806%" height="15" fill="rgb(236,134,42)" fg:x="331" fg:w="1"/><text x="26.9220%" y="335.50"></text></g><g><title>ryu::pretty::format64 (2 samples, 0.16%)</title><rect x="26.7526%" y="341" width="0.1612%" height="15" fill="rgb(233,93,22)" fg:x="332" fg:w="2"/><text x="27.0026%" y="351.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (1 samples, 0.08%)</title><rect x="26.8332%" y="325" width="0.0806%" height="15" fill="rgb(211,202,10)" fg:x="333" fg:w="1"/><text x="27.0832%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="26.9138%" y="341" width="0.2417%" height="15" fill="rgb(240,63,8)" fg:x="334" fg:w="3"/><text x="27.1638%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.9944%" y="325" width="0.1612%" height="15" fill="rgb(214,9,4)" fg:x="335" fg:w="2"/><text x="27.2444%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.9944%" y="309" width="0.1612%" height="15" fill="rgb(243,66,45)" fg:x="335" fg:w="2"/><text x="27.2444%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.9944%" y="293" width="0.1612%" height="15" fill="rgb(220,50,42)" fg:x="335" fg:w="2"/><text x="27.2444%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="26.9944%" y="277" width="0.1612%" height="15" fill="rgb(220,134,27)" fg:x="335" fg:w="2"/><text x="27.2444%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="26.9944%" y="261" width="0.1612%" height="15" fill="rgb(246,151,50)" fg:x="335" fg:w="2"/><text x="27.2444%" y="271.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="26.9944%" y="245" width="0.1612%" height="15" fill="rgb(238,216,27)" fg:x="335" fg:w="2"/><text x="27.2444%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="27.2361%" y="325" width="0.5641%" height="15" fill="rgb(250,92,11)" fg:x="338" fg:w="7"/><text x="27.4861%" y="335.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="27.3973%" y="309" width="0.4029%" height="15" fill="rgb(248,183,6)" fg:x="340" fg:w="5"/><text x="27.6473%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="27.4778%" y="293" width="0.3223%" height="15" fill="rgb(211,204,50)" fg:x="341" fg:w="4"/><text x="27.7278%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="27.4778%" y="277" width="0.3223%" height="15" fill="rgb(252,55,47)" fg:x="341" fg:w="4"/><text x="27.7278%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.7196%" y="261" width="0.0806%" height="15" fill="rgb(240,198,32)" fg:x="344" fg:w="1"/><text x="27.9696%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.7196%" y="245" width="0.0806%" height="15" fill="rgb(224,203,19)" fg:x="344" fg:w="1"/><text x="27.9696%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.7196%" y="229" width="0.0806%" height="15" fill="rgb(205,27,16)" fg:x="344" fg:w="1"/><text x="27.9696%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="27.8002%" y="325" width="0.0806%" height="15" fill="rgb(224,226,17)" fg:x="345" fg:w="1"/><text x="28.0502%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="27.1555%" y="341" width="0.8058%" height="15" fill="rgb(205,216,54)" fg:x="337" fg:w="10"/><text x="27.4055%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.8807%" y="325" width="0.0806%" height="15" fill="rgb(248,168,46)" fg:x="346" fg:w="1"/><text x="28.1307%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.8807%" y="309" width="0.0806%" height="15" fill="rgb(226,111,45)" fg:x="346" fg:w="1"/><text x="28.1307%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.8807%" y="293" width="0.0806%" height="15" fill="rgb(231,15,9)" fg:x="346" fg:w="1"/><text x="28.1307%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.37%)</title><rect x="26.7526%" y="357" width="1.3699%" height="15" fill="rgb(243,168,3)" fg:x="332" fg:w="17"/><text x="27.0026%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.9613%" y="341" width="0.1612%" height="15" fill="rgb(221,220,54)" fg:x="347" fg:w="2"/><text x="28.2113%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.9613%" y="325" width="0.1612%" height="15" fill="rgb(232,174,38)" fg:x="347" fg:w="2"/><text x="28.2113%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.0419%" y="309" width="0.0806%" height="15" fill="rgb(205,14,38)" fg:x="348" fg:w="1"/><text x="28.2919%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.2836%" y="325" width="0.0806%" height="15" fill="rgb(234,89,19)" fg:x="351" fg:w="1"/><text x="28.5336%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.74%)</title><rect x="25.7051%" y="373" width="2.7397%" height="15" fill="rgb(216,68,51)" fg:x="319" fg:w="34"/><text x="25.9551%" y="383.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="28.1225%" y="357" width="0.3223%" height="15" fill="rgb(213,49,2)" fg:x="349" fg:w="4"/><text x="28.3725%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="28.1225%" y="341" width="0.3223%" height="15" fill="rgb(242,146,30)" fg:x="349" fg:w="4"/><text x="28.3725%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.3642%" y="325" width="0.0806%" height="15" fill="rgb(224,188,11)" fg:x="352" fg:w="1"/><text x="28.6142%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.6865%" y="341" width="0.1612%" height="15" fill="rgb(213,159,11)" fg:x="356" fg:w="2"/><text x="28.9365%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.7671%" y="325" width="0.0806%" height="15" fill="rgb(229,13,31)" fg:x="357" fg:w="1"/><text x="29.0171%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.7671%" y="309" width="0.0806%" height="15" fill="rgb(209,103,11)" fg:x="357" fg:w="1"/><text x="29.0171%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.7671%" y="293" width="0.0806%" height="15" fill="rgb(206,3,4)" fg:x="357" fg:w="1"/><text x="29.0171%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (49 samples, 3.95%)</title><rect x="24.9799%" y="389" width="3.9484%" height="15" fill="rgb(252,10,49)" fg:x="310" fg:w="49"/><text x="25.2299%" y="399.50">serd..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="28.4448%" y="373" width="0.4835%" height="15" fill="rgb(217,160,32)" fg:x="353" fg:w="6"/><text x="28.6948%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.6865%" y="357" width="0.2417%" height="15" fill="rgb(249,196,0)" fg:x="356" fg:w="3"/><text x="28.9365%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.8477%" y="341" width="0.0806%" height="15" fill="rgb(213,17,48)" fg:x="358" fg:w="1"/><text x="29.0977%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (61 samples, 4.92%)</title><rect x="24.0935%" y="405" width="4.9154%" height="15" fill="rgb(206,42,46)" fg:x="299" fg:w="61"/><text x="24.3435%" y="415.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.9283%" y="389" width="0.0806%" height="15" fill="rgb(212,105,24)" fg:x="359" fg:w="1"/><text x="29.1783%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.9283%" y="373" width="0.0806%" height="15" fill="rgb(243,216,30)" fg:x="359" fg:w="1"/><text x="29.1783%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.9283%" y="357" width="0.0806%" height="15" fill="rgb(207,121,3)" fg:x="359" fg:w="1"/><text x="29.1783%" y="367.50"></text></g><g><title>burrow_bon::perms::find_acls (1 samples, 0.08%)</title><rect x="29.0089%" y="405" width="0.0806%" height="15" fill="rgb(249,78,0)" fg:x="360" fg:w="1"/><text x="29.2589%" y="415.50"></text></g><g><title>burrow_bon::scour::scour (1 samples, 0.08%)</title><rect x="29.0089%" y="389" width="0.0806%" height="15" fill="rgb(244,151,32)" fg:x="360" fg:w="1"/><text x="29.2589%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.0894%" y="373" width="0.1612%" height="15" fill="rgb(228,63,25)" fg:x="361" fg:w="2"/><text x="29.3394%" y="383.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="29.2506%" y="357" width="0.3223%" height="15" fill="rgb(231,158,23)" fg:x="363" fg:w="4"/><text x="29.5006%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.7341%" y="341" width="0.0806%" height="15" fill="rgb(248,107,23)" fg:x="369" fg:w="1"/><text x="29.9841%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="29.8147%" y="341" width="0.1612%" height="15" fill="rgb(215,168,21)" fg:x="370" fg:w="2"/><text x="30.0647%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.8952%" y="325" width="0.0806%" height="15" fill="rgb(227,83,22)" fg:x="371" fg:w="1"/><text x="30.1452%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="29.9758%" y="325" width="0.2417%" height="15" fill="rgb(217,118,43)" fg:x="372" fg:w="3"/><text x="30.2258%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.0564%" y="309" width="0.1612%" height="15" fill="rgb(229,220,41)" fg:x="373" fg:w="2"/><text x="30.3064%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2176%" y="293" width="0.0806%" height="15" fill="rgb(254,146,46)" fg:x="375" fg:w="1"/><text x="30.4676%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="30.2176%" y="325" width="0.2417%" height="15" fill="rgb(233,208,31)" fg:x="375" fg:w="3"/><text x="30.4676%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="30.2176%" y="309" width="0.2417%" height="15" fill="rgb(222,162,7)" fg:x="375" fg:w="3"/><text x="30.4676%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.2981%" y="293" width="0.1612%" height="15" fill="rgb(230,117,45)" fg:x="376" fg:w="2"/><text x="30.5481%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3787%" y="277" width="0.0806%" height="15" fill="rgb(239,163,6)" fg:x="377" fg:w="1"/><text x="30.6287%" y="287.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.4593%" y="309" width="0.1612%" height="15" fill="rgb(246,130,17)" fg:x="378" fg:w="2"/><text x="30.7093%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.61%)</title><rect x="29.0894%" y="405" width="1.6116%" height="15" fill="rgb(216,84,5)" fg:x="361" fg:w="20"/><text x="29.3394%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.61%)</title><rect x="29.0894%" y="389" width="1.6116%" height="15" fill="rgb(230,200,21)" fg:x="361" fg:w="20"/><text x="29.3394%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.45%)</title><rect x="29.2506%" y="373" width="1.4504%" height="15" fill="rgb(224,2,8)" fg:x="363" fg:w="18"/><text x="29.5006%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="29.5729%" y="357" width="1.1281%" height="15" fill="rgb(238,178,10)" fg:x="367" fg:w="14"/><text x="29.8229%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="29.9758%" y="341" width="0.7252%" height="15" fill="rgb(242,153,24)" fg:x="372" fg:w="9"/><text x="30.2258%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="30.4593%" y="325" width="0.2417%" height="15" fill="rgb(242,32,48)" fg:x="378" fg:w="3"/><text x="30.7093%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.6205%" y="309" width="0.0806%" height="15" fill="rgb(227,36,0)" fg:x="380" fg:w="1"/><text x="30.8705%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6205%" y="293" width="0.0806%" height="15" fill="rgb(251,33,35)" fg:x="380" fg:w="1"/><text x="30.8705%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.7816%" y="373" width="0.0806%" height="15" fill="rgb(232,168,51)" fg:x="382" fg:w="1"/><text x="31.0316%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7816%" y="357" width="0.0806%" height="15" fill="rgb(228,56,10)" fg:x="382" fg:w="1"/><text x="31.0316%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="30.7010%" y="389" width="0.2417%" height="15" fill="rgb(231,10,26)" fg:x="381" fg:w="3"/><text x="30.9510%" y="399.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="30.8622%" y="373" width="0.0806%" height="15" fill="rgb(226,202,12)" fg:x="383" fg:w="1"/><text x="31.1122%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.8622%" y="357" width="0.0806%" height="15" fill="rgb(251,49,21)" fg:x="383" fg:w="1"/><text x="31.1122%" y="367.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.8622%" y="341" width="0.0806%" height="15" fill="rgb(206,228,28)" fg:x="383" fg:w="1"/><text x="31.1122%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9428%" y="357" width="0.0806%" height="15" fill="rgb(205,198,31)" fg:x="384" fg:w="1"/><text x="31.1928%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.0234%" y="357" width="0.1612%" height="15" fill="rgb(213,69,1)" fg:x="385" fg:w="2"/><text x="31.2734%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.1039%" y="341" width="0.0806%" height="15" fill="rgb(209,177,9)" fg:x="386" fg:w="1"/><text x="31.3539%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.1845%" y="325" width="0.0806%" height="15" fill="rgb(227,119,30)" fg:x="387" fg:w="1"/><text x="31.4345%" y="335.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="31.1845%" y="357" width="0.1612%" height="15" fill="rgb(234,106,41)" fg:x="387" fg:w="2"/><text x="31.4345%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.1845%" y="341" width="0.1612%" height="15" fill="rgb(244,103,47)" fg:x="387" fg:w="2"/><text x="31.4345%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="31.2651%" y="325" width="0.0806%" height="15" fill="rgb(212,211,25)" fg:x="388" fg:w="1"/><text x="31.5151%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="31.3457%" y="357" width="0.0806%" height="15" fill="rgb(208,63,53)" fg:x="389" fg:w="1"/><text x="31.5957%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.3457%" y="341" width="0.0806%" height="15" fill="rgb(213,176,21)" fg:x="389" fg:w="1"/><text x="31.5957%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.3457%" y="325" width="0.0806%" height="15" fill="rgb(243,124,12)" fg:x="389" fg:w="1"/><text x="31.5957%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="31.8292%" y="309" width="0.2417%" height="15" fill="rgb(239,2,35)" fg:x="395" fg:w="3"/><text x="32.0792%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2321%" y="261" width="0.0806%" height="15" fill="rgb(253,169,22)" fg:x="400" fg:w="1"/><text x="32.4821%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="32.0709%" y="277" width="0.4835%" height="15" fill="rgb(254,51,12)" fg:x="398" fg:w="6"/><text x="32.3209%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="32.3127%" y="261" width="0.2417%" height="15" fill="rgb(244,17,47)" fg:x="401" fg:w="3"/><text x="32.5627%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="32.3932%" y="245" width="0.1612%" height="15" fill="rgb(251,45,46)" fg:x="402" fg:w="2"/><text x="32.6432%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.3932%" y="229" width="0.1612%" height="15" fill="rgb(223,87,43)" fg:x="402" fg:w="2"/><text x="32.6432%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="32.3932%" y="213" width="0.1612%" height="15" fill="rgb(230,132,31)" fg:x="402" fg:w="2"/><text x="32.6432%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="32.0709%" y="309" width="0.5641%" height="15" fill="rgb(206,99,1)" fg:x="398" fg:w="7"/><text x="32.3209%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="32.0709%" y="293" width="0.5641%" height="15" fill="rgb(227,110,25)" fg:x="398" fg:w="7"/><text x="32.3209%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5544%" y="277" width="0.0806%" height="15" fill="rgb(217,182,7)" fg:x="404" fg:w="1"/><text x="32.8044%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.0379%" y="293" width="0.0806%" height="15" fill="rgb(250,176,4)" fg:x="410" fg:w="1"/><text x="33.2879%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="33.1185%" y="293" width="0.0806%" height="15" fill="rgb(244,98,30)" fg:x="411" fg:w="1"/><text x="33.3685%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.3602%" y="277" width="0.2417%" height="15" fill="rgb(228,150,42)" fg:x="414" fg:w="3"/><text x="33.6102%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.4408%" y="261" width="0.1612%" height="15" fill="rgb(231,91,46)" fg:x="415" fg:w="2"/><text x="33.6908%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7631%" y="229" width="0.0806%" height="15" fill="rgb(252,161,32)" fg:x="419" fg:w="1"/><text x="34.0131%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="33.6825%" y="261" width="0.2417%" height="15" fill="rgb(236,69,41)" fg:x="418" fg:w="3"/><text x="33.9325%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.7631%" y="245" width="0.1612%" height="15" fill="rgb(212,160,3)" fg:x="419" fg:w="2"/><text x="34.0131%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.8437%" y="229" width="0.0806%" height="15" fill="rgb(216,5,50)" fg:x="420" fg:w="1"/><text x="34.0937%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (31 samples, 2.50%)</title><rect x="31.6680%" y="325" width="2.4980%" height="15" fill="rgb(241,138,25)" fg:x="393" fg:w="31"/><text x="31.9180%" y="335.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.53%)</title><rect x="32.6350%" y="309" width="1.5310%" height="15" fill="rgb(239,42,18)" fg:x="405" fg:w="19"/><text x="32.8850%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="33.1990%" y="293" width="0.9670%" height="15" fill="rgb(239,40,7)" fg:x="412" fg:w="12"/><text x="33.4490%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="33.6019%" y="277" width="0.5641%" height="15" fill="rgb(239,11,31)" fg:x="417" fg:w="7"/><text x="33.8519%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="33.9243%" y="261" width="0.2417%" height="15" fill="rgb(224,77,40)" fg:x="421" fg:w="3"/><text x="34.1743%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (37 samples, 2.98%)</title><rect x="31.5874%" y="341" width="2.9815%" height="15" fill="rgb(226,15,5)" fg:x="392" fg:w="37"/><text x="31.8374%" y="351.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="34.1660%" y="325" width="0.4029%" height="15" fill="rgb(254,188,5)" fg:x="424" fg:w="5"/><text x="34.4160%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="34.3272%" y="309" width="0.2417%" height="15" fill="rgb(241,148,52)" fg:x="426" fg:w="3"/><text x="34.5772%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (46 samples, 3.71%)</title><rect x="30.9428%" y="373" width="3.7067%" height="15" fill="rgb(251,48,36)" fg:x="384" fg:w="46"/><text x="31.1928%" y="383.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (40 samples, 3.22%)</title><rect x="31.4263%" y="357" width="3.2232%" height="15" fill="rgb(243,83,13)" fg:x="390" fg:w="40"/><text x="31.6763%" y="367.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5689%" y="341" width="0.0806%" height="15" fill="rgb(210,105,0)" fg:x="429" fg:w="1"/><text x="34.8189%" y="351.50"></text></g><g><title>engine::session::Session::flush (142 samples, 11.44%)</title><rect x="23.2877%" y="517" width="11.4424%" height="15" fill="rgb(239,60,36)" fg:x="289" fg:w="142"/><text x="23.5377%" y="527.50">engine::session::..</text></g><g><title>engine::session::Session::save_changes (141 samples, 11.36%)</title><rect x="23.3683%" y="501" width="11.3618%" height="15" fill="rgb(210,20,0)" fg:x="290" fg:w="141"/><text x="23.6183%" y="511.50">engine::session::..</text></g><g><title>engine::session::state::State::close (140 samples, 11.28%)</title><rect x="23.4488%" y="485" width="11.2812%" height="15" fill="rgb(244,26,53)" fg:x="291" fg:w="140"/><text x="23.6988%" y="495.50">engine::session::..</text></g><g><title>engine::session::state::State::flush_entities (140 samples, 11.28%)</title><rect x="23.4488%" y="469" width="11.2812%" height="15" fill="rgb(240,100,49)" fg:x="291" fg:w="140"/><text x="23.6988%" y="479.50">engine::session::..</text></g><g><title>core::iter::adapters::try_process (135 samples, 10.88%)</title><rect x="23.8517%" y="453" width="10.8783%" height="15" fill="rgb(250,46,45)" fg:x="296" fg:w="135"/><text x="24.1017%" y="463.50">core::iter::adap..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (135 samples, 10.88%)</title><rect x="23.8517%" y="437" width="10.8783%" height="15" fill="rgb(220,181,29)" fg:x="296" fg:w="135"/><text x="24.1017%" y="447.50">&lt;alloc::vec::Vec..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (135 samples, 10.88%)</title><rect x="23.8517%" y="421" width="10.8783%" height="15" fill="rgb(213,137,33)" fg:x="296" fg:w="135"/><text x="24.1017%" y="431.50">engine::session:..</text></g><g><title>kernel::model::any_entity_changes (50 samples, 4.03%)</title><rect x="30.7010%" y="405" width="4.0290%" height="15" fill="rgb(213,27,48)" fg:x="381" fg:w="50"/><text x="30.9510%" y="415.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (47 samples, 3.79%)</title><rect x="30.9428%" y="389" width="3.7873%" height="15" fill="rgb(245,180,39)" fg:x="384" fg:w="47"/><text x="31.1928%" y="399.50">kern..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="34.6495%" y="373" width="0.0806%" height="15" fill="rgb(212,158,42)" fg:x="430" fg:w="1"/><text x="34.8995%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="34.7301%" y="501" width="0.0806%" height="15" fill="rgb(228,193,18)" fg:x="431" fg:w="1"/><text x="34.9801%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="34.7301%" y="485" width="0.0806%" height="15" fill="rgb(245,172,29)" fg:x="431" fg:w="1"/><text x="34.9801%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.7301%" y="469" width="0.0806%" height="15" fill="rgb(207,98,24)" fg:x="431" fg:w="1"/><text x="34.9801%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.7301%" y="453" width="0.0806%" height="15" fill="rgb(249,92,26)" fg:x="431" fg:w="1"/><text x="34.9801%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.7301%" y="437" width="0.0806%" height="15" fill="rgb(217,176,26)" fg:x="431" fg:w="1"/><text x="34.9801%" y="447.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="34.7301%" y="517" width="0.1612%" height="15" fill="rgb(221,8,39)" fg:x="431" fg:w="2"/><text x="34.9801%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="34.8106%" y="501" width="0.0806%" height="15" fill="rgb(208,90,18)" fg:x="432" fg:w="1"/><text x="35.0606%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="34.8106%" y="485" width="0.0806%" height="15" fill="rgb(207,202,30)" fg:x="432" fg:w="1"/><text x="35.0606%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.9718%" y="453" width="0.2417%" height="15" fill="rgb(231,124,22)" fg:x="434" fg:w="3"/><text x="35.2218%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.9718%" y="437" width="0.2417%" height="15" fill="rgb(206,15,5)" fg:x="434" fg:w="3"/><text x="35.2218%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.0524%" y="421" width="0.1612%" height="15" fill="rgb(239,16,52)" fg:x="435" fg:w="2"/><text x="35.3024%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.0524%" y="405" width="0.1612%" height="15" fill="rgb(245,213,29)" fg:x="435" fg:w="2"/><text x="35.3024%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="35.0524%" y="389" width="0.1612%" height="15" fill="rgb(213,203,36)" fg:x="435" fg:w="2"/><text x="35.3024%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="35.0524%" y="373" width="0.1612%" height="15" fill="rgb(209,55,18)" fg:x="435" fg:w="2"/><text x="35.3024%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="35.0524%" y="357" width="0.1612%" height="15" fill="rgb(207,133,49)" fg:x="435" fg:w="2"/><text x="35.3024%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.0524%" y="341" width="0.1612%" height="15" fill="rgb(240,33,46)" fg:x="435" fg:w="2"/><text x="35.3024%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.0524%" y="325" width="0.1612%" height="15" fill="rgb(212,35,2)" fg:x="435" fg:w="2"/><text x="35.3024%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="35.0524%" y="309" width="0.1612%" height="15" fill="rgb(231,119,28)" fg:x="435" fg:w="2"/><text x="35.3024%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="35.0524%" y="293" width="0.1612%" height="15" fill="rgb(252,178,7)" fg:x="435" fg:w="2"/><text x="35.3024%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="35.0524%" y="277" width="0.1612%" height="15" fill="rgb(251,91,4)" fg:x="435" fg:w="2"/><text x="35.3024%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="35.0524%" y="261" width="0.1612%" height="15" fill="rgb(233,122,19)" fg:x="435" fg:w="2"/><text x="35.3024%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.0524%" y="245" width="0.1612%" height="15" fill="rgb(231,208,46)" fg:x="435" fg:w="2"/><text x="35.3024%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="34.9718%" y="469" width="0.4029%" height="15" fill="rgb(243,15,41)" fg:x="434" fg:w="5"/><text x="35.2218%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.2135%" y="453" width="0.1612%" height="15" fill="rgb(210,32,43)" fg:x="437" fg:w="2"/><text x="35.4635%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="34.8912%" y="501" width="0.6446%" height="15" fill="rgb(222,177,15)" fg:x="433" fg:w="8"/><text x="35.1412%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (8 samples, 0.64%)</title><rect x="34.8912%" y="485" width="0.6446%" height="15" fill="rgb(244,121,34)" fg:x="433" fg:w="8"/><text x="35.1412%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.3747%" y="469" width="0.1612%" height="15" fill="rgb(234,138,4)" fg:x="439" fg:w="2"/><text x="35.6247%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3747%" y="453" width="0.1612%" height="15" fill="rgb(240,97,48)" fg:x="439" fg:w="2"/><text x="35.6247%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.3747%" y="437" width="0.1612%" height="15" fill="rgb(237,65,54)" fg:x="439" fg:w="2"/><text x="35.6247%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3747%" y="421" width="0.1612%" height="15" fill="rgb(214,25,24)" fg:x="439" fg:w="2"/><text x="35.6247%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.4553%" y="405" width="0.0806%" height="15" fill="rgb(213,5,3)" fg:x="440" fg:w="1"/><text x="35.7053%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.4553%" y="389" width="0.0806%" height="15" fill="rgb(219,81,29)" fg:x="440" fg:w="1"/><text x="35.7053%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.4553%" y="373" width="0.0806%" height="15" fill="rgb(220,43,48)" fg:x="440" fg:w="1"/><text x="35.7053%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.5359%" y="469" width="0.1612%" height="15" fill="rgb(239,157,2)" fg:x="441" fg:w="2"/><text x="35.7859%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6164%" y="453" width="0.0806%" height="15" fill="rgb(213,104,43)" fg:x="442" fg:w="1"/><text x="35.8664%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6164%" y="437" width="0.0806%" height="15" fill="rgb(237,84,9)" fg:x="442" fg:w="1"/><text x="35.8664%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.6164%" y="421" width="0.0806%" height="15" fill="rgb(252,6,33)" fg:x="442" fg:w="1"/><text x="35.8664%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.6164%" y="405" width="0.0806%" height="15" fill="rgb(251,172,22)" fg:x="442" fg:w="1"/><text x="35.8664%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.6164%" y="389" width="0.0806%" height="15" fill="rgb(244,91,53)" fg:x="442" fg:w="1"/><text x="35.8664%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6164%" y="373" width="0.0806%" height="15" fill="rgb(219,29,30)" fg:x="442" fg:w="1"/><text x="35.8664%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6164%" y="357" width="0.0806%" height="15" fill="rgb(213,3,15)" fg:x="442" fg:w="1"/><text x="35.8664%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.6164%" y="341" width="0.0806%" height="15" fill="rgb(208,25,28)" fg:x="442" fg:w="1"/><text x="35.8664%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.6164%" y="325" width="0.0806%" height="15" fill="rgb(252,144,25)" fg:x="442" fg:w="1"/><text x="35.8664%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.6164%" y="309" width="0.0806%" height="15" fill="rgb(226,220,25)" fg:x="442" fg:w="1"/><text x="35.8664%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.6164%" y="293" width="0.0806%" height="15" fill="rgb(212,131,28)" fg:x="442" fg:w="1"/><text x="35.8664%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6164%" y="277" width="0.0806%" height="15" fill="rgb(219,143,52)" fg:x="442" fg:w="1"/><text x="35.8664%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="35.5359%" y="485" width="0.3223%" height="15" fill="rgb(215,56,7)" fg:x="441" fg:w="4"/><text x="35.7859%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.6970%" y="469" width="0.1612%" height="15" fill="rgb(239,59,51)" fg:x="443" fg:w="2"/><text x="35.9470%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.6970%" y="453" width="0.1612%" height="15" fill="rgb(209,215,4)" fg:x="443" fg:w="2"/><text x="35.9470%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.6970%" y="437" width="0.1612%" height="15" fill="rgb(221,118,39)" fg:x="443" fg:w="2"/><text x="35.9470%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7776%" y="421" width="0.0806%" height="15" fill="rgb(236,6,44)" fg:x="444" fg:w="1"/><text x="36.0276%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.7776%" y="405" width="0.0806%" height="15" fill="rgb(216,122,9)" fg:x="444" fg:w="1"/><text x="36.0276%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7776%" y="389" width="0.0806%" height="15" fill="rgb(244,134,42)" fg:x="444" fg:w="1"/><text x="36.0276%" y="399.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="35.8582%" y="469" width="0.1612%" height="15" fill="rgb(209,189,35)" fg:x="445" fg:w="2"/><text x="36.1082%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.8582%" y="453" width="0.1612%" height="15" fill="rgb(250,47,36)" fg:x="445" fg:w="2"/><text x="36.1082%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.9388%" y="437" width="0.0806%" height="15" fill="rgb(252,112,4)" fg:x="446" fg:w="1"/><text x="36.1888%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.0193%" y="405" width="0.0806%" height="15" fill="rgb(221,79,51)" fg:x="447" fg:w="1"/><text x="36.2693%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="35.8582%" y="485" width="0.3223%" height="15" fill="rgb(232,65,53)" fg:x="445" fg:w="4"/><text x="36.1082%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="36.0193%" y="469" width="0.1612%" height="15" fill="rgb(211,37,7)" fg:x="447" fg:w="2"/><text x="36.2693%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="36.0193%" y="453" width="0.1612%" height="15" fill="rgb(234,221,18)" fg:x="447" fg:w="2"/><text x="36.2693%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="36.0193%" y="437" width="0.1612%" height="15" fill="rgb(220,158,26)" fg:x="447" fg:w="2"/><text x="36.2693%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="36.0193%" y="421" width="0.1612%" height="15" fill="rgb(220,70,6)" fg:x="447" fg:w="2"/><text x="36.2693%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.0999%" y="405" width="0.0806%" height="15" fill="rgb(250,39,48)" fg:x="448" fg:w="1"/><text x="36.3499%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.0999%" y="389" width="0.0806%" height="15" fill="rgb(206,40,27)" fg:x="448" fg:w="1"/><text x="36.3499%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.3417%" y="357" width="0.1612%" height="15" fill="rgb(247,80,36)" fg:x="451" fg:w="2"/><text x="36.5917%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.4222%" y="341" width="0.0806%" height="15" fill="rgb(222,9,20)" fg:x="452" fg:w="1"/><text x="36.6722%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (5 samples, 0.40%)</title><rect x="36.1805%" y="437" width="0.4029%" height="15" fill="rgb(217,26,45)" fg:x="449" fg:w="5"/><text x="36.4305%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="36.1805%" y="421" width="0.4029%" height="15" fill="rgb(221,67,14)" fg:x="449" fg:w="5"/><text x="36.4305%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="36.1805%" y="405" width="0.4029%" height="15" fill="rgb(248,100,24)" fg:x="449" fg:w="5"/><text x="36.4305%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="36.1805%" y="389" width="0.4029%" height="15" fill="rgb(230,187,16)" fg:x="449" fg:w="5"/><text x="36.4305%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.2611%" y="373" width="0.3223%" height="15" fill="rgb(205,108,13)" fg:x="450" fg:w="4"/><text x="36.5111%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.5028%" y="357" width="0.0806%" height="15" fill="rgb(235,71,51)" fg:x="453" fg:w="1"/><text x="36.7528%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.5028%" y="341" width="0.0806%" height="15" fill="rgb(251,172,48)" fg:x="453" fg:w="1"/><text x="36.7528%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.5028%" y="325" width="0.0806%" height="15" fill="rgb(240,96,49)" fg:x="453" fg:w="1"/><text x="36.7528%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="36.5834%" y="437" width="0.0806%" height="15" fill="rgb(235,46,36)" fg:x="454" fg:w="1"/><text x="36.8334%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="36.5834%" y="421" width="0.0806%" height="15" fill="rgb(244,3,49)" fg:x="454" fg:w="1"/><text x="36.8334%" y="431.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="36.6640%" y="437" width="0.0806%" height="15" fill="rgb(206,78,54)" fg:x="455" fg:w="1"/><text x="36.9140%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6640%" y="421" width="0.0806%" height="15" fill="rgb(208,85,42)" fg:x="455" fg:w="1"/><text x="36.9140%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.6640%" y="405" width="0.0806%" height="15" fill="rgb(219,196,21)" fg:x="455" fg:w="1"/><text x="36.9140%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.7446%" y="437" width="0.0806%" height="15" fill="rgb(238,19,9)" fg:x="456" fg:w="1"/><text x="36.9946%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.73%)</title><rect x="36.1805%" y="469" width="0.7252%" height="15" fill="rgb(206,86,13)" fg:x="449" fg:w="9"/><text x="36.4305%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (9 samples, 0.73%)</title><rect x="36.1805%" y="453" width="0.7252%" height="15" fill="rgb(214,123,40)" fg:x="449" fg:w="9"/><text x="36.4305%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8251%" y="437" width="0.0806%" height="15" fill="rgb(243,53,5)" fg:x="457" fg:w="1"/><text x="37.0751%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8251%" y="421" width="0.0806%" height="15" fill="rgb(254,186,31)" fg:x="457" fg:w="1"/><text x="37.0751%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.8251%" y="405" width="0.0806%" height="15" fill="rgb(221,216,25)" fg:x="457" fg:w="1"/><text x="37.0751%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="36.9057%" y="469" width="0.1612%" height="15" fill="rgb(248,107,42)" fg:x="458" fg:w="2"/><text x="37.1557%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9863%" y="453" width="0.0806%" height="15" fill="rgb(221,85,43)" fg:x="459" fg:w="1"/><text x="37.2363%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.9863%" y="437" width="0.0806%" height="15" fill="rgb(225,34,24)" fg:x="459" fg:w="1"/><text x="37.2363%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2280%" y="437" width="0.0806%" height="15" fill="rgb(211,119,1)" fg:x="462" fg:w="1"/><text x="37.4780%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3086%" y="437" width="0.0806%" height="15" fill="rgb(254,216,46)" fg:x="463" fg:w="1"/><text x="37.5586%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3086%" y="421" width="0.0806%" height="15" fill="rgb(238,11,38)" fg:x="463" fg:w="1"/><text x="37.5586%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.3086%" y="405" width="0.0806%" height="15" fill="rgb(233,50,15)" fg:x="463" fg:w="1"/><text x="37.5586%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="37.3892%" y="437" width="0.0806%" height="15" fill="rgb(217,181,29)" fg:x="464" fg:w="1"/><text x="37.6392%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.3892%" y="421" width="0.0806%" height="15" fill="rgb(214,56,3)" fg:x="464" fg:w="1"/><text x="37.6392%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3892%" y="405" width="0.0806%" height="15" fill="rgb(230,69,45)" fg:x="464" fg:w="1"/><text x="37.6392%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3892%" y="389" width="0.0806%" height="15" fill="rgb(224,201,50)" fg:x="464" fg:w="1"/><text x="37.6392%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3892%" y="373" width="0.0806%" height="15" fill="rgb(217,228,18)" fg:x="464" fg:w="1"/><text x="37.6392%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.5504%" y="357" width="0.0806%" height="15" fill="rgb(239,33,44)" fg:x="466" fg:w="1"/><text x="37.8004%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (20 samples, 1.61%)</title><rect x="36.1805%" y="485" width="1.6116%" height="15" fill="rgb(248,210,23)" fg:x="449" fg:w="20"/><text x="36.4305%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.73%)</title><rect x="37.0669%" y="469" width="0.7252%" height="15" fill="rgb(253,135,8)" fg:x="460" fg:w="9"/><text x="37.3169%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="37.0669%" y="453" width="0.7252%" height="15" fill="rgb(217,98,21)" fg:x="460" fg:w="9"/><text x="37.3169%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="37.4698%" y="437" width="0.3223%" height="15" fill="rgb(253,130,21)" fg:x="465" fg:w="4"/><text x="37.7198%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="37.4698%" y="421" width="0.3223%" height="15" fill="rgb(207,81,54)" fg:x="465" fg:w="4"/><text x="37.7198%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="37.4698%" y="405" width="0.3223%" height="15" fill="rgb(232,48,33)" fg:x="465" fg:w="4"/><text x="37.7198%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="37.4698%" y="389" width="0.3223%" height="15" fill="rgb(211,9,35)" fg:x="465" fg:w="4"/><text x="37.7198%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="37.4698%" y="373" width="0.3223%" height="15" fill="rgb(205,152,21)" fg:x="465" fg:w="4"/><text x="37.7198%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="37.6309%" y="357" width="0.1612%" height="15" fill="rgb(249,21,27)" fg:x="467" fg:w="2"/><text x="37.8809%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="37.6309%" y="341" width="0.1612%" height="15" fill="rgb(252,29,24)" fg:x="467" fg:w="2"/><text x="37.8809%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.6309%" y="325" width="0.1612%" height="15" fill="rgb(230,130,50)" fg:x="467" fg:w="2"/><text x="37.8809%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.6309%" y="309" width="0.1612%" height="15" fill="rgb(239,144,14)" fg:x="467" fg:w="2"/><text x="37.8809%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7115%" y="293" width="0.0806%" height="15" fill="rgb(227,111,50)" fg:x="468" fg:w="1"/><text x="37.9615%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (29 samples, 2.34%)</title><rect x="35.5359%" y="501" width="2.3368%" height="15" fill="rgb(254,84,20)" fg:x="441" fg:w="29"/><text x="35.7859%" y="511.50">&lt;..</text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="37.7921%" y="485" width="0.0806%" height="15" fill="rgb(232,90,48)" fg:x="469" fg:w="1"/><text x="38.0421%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.7921%" y="469" width="0.0806%" height="15" fill="rgb(253,63,47)" fg:x="469" fg:w="1"/><text x="38.0421%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.7921%" y="453" width="0.0806%" height="15" fill="rgb(251,146,35)" fg:x="469" fg:w="1"/><text x="38.0421%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.8727%" y="469" width="0.0806%" height="15" fill="rgb(229,192,35)" fg:x="470" fg:w="1"/><text x="38.1227%" y="479.50"></text></g><g><title>plugins_core::build::Build::save (39 samples, 3.14%)</title><rect x="34.8912%" y="517" width="3.1426%" height="15" fill="rgb(225,68,9)" fg:x="433" fg:w="39"/><text x="35.1412%" y="527.50">plu..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.8727%" y="501" width="0.1612%" height="15" fill="rgb(214,97,34)" fg:x="470" fg:w="2"/><text x="38.1227%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.8727%" y="485" width="0.1612%" height="15" fill="rgb(253,31,26)" fg:x="470" fg:w="2"/><text x="38.1227%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9533%" y="469" width="0.0806%" height="15" fill="rgb(225,151,47)" fg:x="471" fg:w="1"/><text x="38.2033%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9533%" y="453" width="0.0806%" height="15" fill="rgb(206,185,9)" fg:x="471" fg:w="1"/><text x="38.2033%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.9533%" y="437" width="0.0806%" height="15" fill="rgb(249,65,17)" fg:x="471" fg:w="1"/><text x="38.2033%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.9533%" y="421" width="0.0806%" height="15" fill="rgb(220,110,10)" fg:x="471" fg:w="1"/><text x="38.2033%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.9533%" y="405" width="0.0806%" height="15" fill="rgb(222,198,49)" fg:x="471" fg:w="1"/><text x="38.2033%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.9533%" y="389" width="0.0806%" height="15" fill="rgb(239,81,13)" fg:x="471" fg:w="1"/><text x="38.2033%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.9533%" y="373" width="0.0806%" height="15" fill="rgb(216,128,11)" fg:x="471" fg:w="1"/><text x="38.2033%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.9533%" y="357" width="0.0806%" height="15" fill="rgb(247,156,8)" fg:x="471" fg:w="1"/><text x="38.2033%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="37.9533%" y="341" width="0.0806%" height="15" fill="rgb(219,173,1)" fg:x="471" fg:w="1"/><text x="38.2033%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="37.9533%" y="325" width="0.0806%" height="15" fill="rgb(227,42,24)" fg:x="471" fg:w="1"/><text x="38.2033%" y="335.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="38.0338%" y="517" width="0.0806%" height="15" fill="rgb(253,219,50)" fg:x="472" fg:w="1"/><text x="38.2838%" y="527.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="38.0338%" y="501" width="0.0806%" height="15" fill="rgb(215,191,54)" fg:x="472" fg:w="1"/><text x="38.2838%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="38.0338%" y="485" width="0.0806%" height="15" fill="rgb(238,83,12)" fg:x="472" fg:w="1"/><text x="38.2838%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="38.0338%" y="469" width="0.0806%" height="15" fill="rgb(205,124,9)" fg:x="472" fg:w="1"/><text x="38.2838%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.0338%" y="453" width="0.0806%" height="15" fill="rgb(253,174,7)" fg:x="472" fg:w="1"/><text x="38.2838%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1144%" y="421" width="0.0806%" height="15" fill="rgb(206,134,49)" fg:x="473" fg:w="1"/><text x="38.3644%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1144%" y="405" width="0.0806%" height="15" fill="rgb(221,89,20)" fg:x="473" fg:w="1"/><text x="38.3644%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1144%" y="389" width="0.0806%" height="15" fill="rgb(240,205,13)" fg:x="473" fg:w="1"/><text x="38.3644%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1144%" y="373" width="0.0806%" height="15" fill="rgb(237,174,32)" fg:x="473" fg:w="1"/><text x="38.3644%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.1144%" y="357" width="0.0806%" height="15" fill="rgb(226,12,15)" fg:x="473" fg:w="1"/><text x="38.3644%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.1144%" y="341" width="0.0806%" height="15" fill="rgb(245,160,52)" fg:x="473" fg:w="1"/><text x="38.3644%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.1144%" y="325" width="0.0806%" height="15" fill="rgb(253,80,21)" fg:x="473" fg:w="1"/><text x="38.3644%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.1144%" y="309" width="0.0806%" height="15" fill="rgb(231,225,22)" fg:x="473" fg:w="1"/><text x="38.3644%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.1144%" y="293" width="0.0806%" height="15" fill="rgb(253,185,12)" fg:x="473" fg:w="1"/><text x="38.3644%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.1144%" y="277" width="0.0806%" height="15" fill="rgb(234,197,21)" fg:x="473" fg:w="1"/><text x="38.3644%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.1144%" y="261" width="0.0806%" height="15" fill="rgb(210,47,30)" fg:x="473" fg:w="1"/><text x="38.3644%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.1144%" y="245" width="0.0806%" height="15" fill="rgb(246,139,27)" fg:x="473" fg:w="1"/><text x="38.3644%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.1144%" y="229" width="0.0806%" height="15" fill="rgb(226,130,16)" fg:x="473" fg:w="1"/><text x="38.3644%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1144%" y="213" width="0.0806%" height="15" fill="rgb(237,208,20)" fg:x="473" fg:w="1"/><text x="38.3644%" y="223.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.1144%" y="453" width="0.1612%" height="15" fill="rgb(245,186,28)" fg:x="473" fg:w="2"/><text x="38.3644%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="38.1144%" y="437" width="0.1612%" height="15" fill="rgb(238,105,39)" fg:x="473" fg:w="2"/><text x="38.3644%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.1950%" y="421" width="0.0806%" height="15" fill="rgb(253,228,11)" fg:x="474" fg:w="1"/><text x="38.4450%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.1950%" y="405" width="0.0806%" height="15" fill="rgb(224,136,38)" fg:x="474" fg:w="1"/><text x="38.4450%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.1950%" y="389" width="0.0806%" height="15" fill="rgb(211,3,25)" fg:x="474" fg:w="1"/><text x="38.4450%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.1950%" y="373" width="0.0806%" height="15" fill="rgb(238,66,34)" fg:x="474" fg:w="1"/><text x="38.4450%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2756%" y="421" width="0.0806%" height="15" fill="rgb(223,188,11)" fg:x="475" fg:w="1"/><text x="38.5256%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2756%" y="405" width="0.0806%" height="15" fill="rgb(221,10,35)" fg:x="475" fg:w="1"/><text x="38.5256%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2756%" y="389" width="0.0806%" height="15" fill="rgb(223,18,44)" fg:x="475" fg:w="1"/><text x="38.5256%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.2756%" y="373" width="0.0806%" height="15" fill="rgb(220,97,41)" fg:x="475" fg:w="1"/><text x="38.5256%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.2756%" y="357" width="0.0806%" height="15" fill="rgb(206,95,45)" fg:x="475" fg:w="1"/><text x="38.5256%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.2756%" y="341" width="0.0806%" height="15" fill="rgb(209,96,13)" fg:x="475" fg:w="1"/><text x="38.5256%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.2756%" y="325" width="0.0806%" height="15" fill="rgb(237,39,34)" fg:x="475" fg:w="1"/><text x="38.5256%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.2756%" y="309" width="0.0806%" height="15" fill="rgb(213,49,47)" fg:x="475" fg:w="1"/><text x="38.5256%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.2756%" y="293" width="0.0806%" height="15" fill="rgb(205,107,27)" fg:x="475" fg:w="1"/><text x="38.5256%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.2756%" y="277" width="0.0806%" height="15" fill="rgb(212,142,9)" fg:x="475" fg:w="1"/><text x="38.5256%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.2756%" y="261" width="0.0806%" height="15" fill="rgb(226,182,0)" fg:x="475" fg:w="1"/><text x="38.5256%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.2756%" y="245" width="0.0806%" height="15" fill="rgb(231,3,53)" fg:x="475" fg:w="1"/><text x="38.5256%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.2756%" y="229" width="0.0806%" height="15" fill="rgb(246,111,28)" fg:x="475" fg:w="1"/><text x="38.5256%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.2756%" y="213" width="0.0806%" height="15" fill="rgb(254,183,7)" fg:x="475" fg:w="1"/><text x="38.5256%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2756%" y="197" width="0.0806%" height="15" fill="rgb(247,177,28)" fg:x="475" fg:w="1"/><text x="38.5256%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3562%" y="421" width="0.0806%" height="15" fill="rgb(244,43,1)" fg:x="476" fg:w="1"/><text x="38.6062%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3562%" y="405" width="0.0806%" height="15" fill="rgb(207,2,35)" fg:x="476" fg:w="1"/><text x="38.6062%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3562%" y="389" width="0.0806%" height="15" fill="rgb(213,83,22)" fg:x="476" fg:w="1"/><text x="38.6062%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.3562%" y="373" width="0.0806%" height="15" fill="rgb(246,212,13)" fg:x="476" fg:w="1"/><text x="38.6062%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.3562%" y="357" width="0.0806%" height="15" fill="rgb(213,127,46)" fg:x="476" fg:w="1"/><text x="38.6062%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.3562%" y="341" width="0.0806%" height="15" fill="rgb(219,215,39)" fg:x="476" fg:w="1"/><text x="38.6062%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3562%" y="325" width="0.0806%" height="15" fill="rgb(227,99,17)" fg:x="476" fg:w="1"/><text x="38.6062%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3562%" y="309" width="0.0806%" height="15" fill="rgb(208,155,18)" fg:x="476" fg:w="1"/><text x="38.6062%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.3562%" y="293" width="0.0806%" height="15" fill="rgb(223,204,38)" fg:x="476" fg:w="1"/><text x="38.6062%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.3562%" y="277" width="0.0806%" height="15" fill="rgb(212,114,21)" fg:x="476" fg:w="1"/><text x="38.6062%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.3562%" y="261" width="0.0806%" height="15" fill="rgb(250,74,13)" fg:x="476" fg:w="1"/><text x="38.6062%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.3562%" y="245" width="0.0806%" height="15" fill="rgb(234,7,1)" fg:x="476" fg:w="1"/><text x="38.6062%" y="255.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="38.1144%" y="485" width="0.4835%" height="15" fill="rgb(207,138,31)" fg:x="473" fg:w="6"/><text x="38.3644%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="38.1144%" y="469" width="0.4835%" height="15" fill="rgb(215,186,42)" fg:x="473" fg:w="6"/><text x="38.3644%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="38.2756%" y="453" width="0.3223%" height="15" fill="rgb(229,205,49)" fg:x="475" fg:w="4"/><text x="38.5256%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="38.2756%" y="437" width="0.3223%" height="15" fill="rgb(216,156,32)" fg:x="475" fg:w="4"/><text x="38.5256%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.4367%" y="421" width="0.1612%" height="15" fill="rgb(238,7,21)" fg:x="477" fg:w="2"/><text x="38.6867%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.4367%" y="405" width="0.1612%" height="15" fill="rgb(249,190,22)" fg:x="477" fg:w="2"/><text x="38.6867%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="38.4367%" y="389" width="0.1612%" height="15" fill="rgb(253,51,31)" fg:x="477" fg:w="2"/><text x="38.6867%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.4367%" y="373" width="0.1612%" height="15" fill="rgb(237,90,54)" fg:x="477" fg:w="2"/><text x="38.6867%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.5173%" y="357" width="0.0806%" height="15" fill="rgb(250,214,33)" fg:x="478" fg:w="1"/><text x="38.7673%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.5173%" y="341" width="0.0806%" height="15" fill="rgb(237,10,49)" fg:x="478" fg:w="1"/><text x="38.7673%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.5979%" y="453" width="0.0806%" height="15" fill="rgb(241,56,36)" fg:x="479" fg:w="1"/><text x="38.8479%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="38.5979%" y="437" width="0.0806%" height="15" fill="rgb(227,164,12)" fg:x="479" fg:w="1"/><text x="38.8479%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="38.5979%" y="421" width="0.0806%" height="15" fill="rgb(249,149,35)" fg:x="479" fg:w="1"/><text x="38.8479%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (8 samples, 0.64%)</title><rect x="38.1144%" y="517" width="0.6446%" height="15" fill="rgb(238,227,50)" fg:x="473" fg:w="8"/><text x="38.3644%" y="527.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="38.1144%" y="501" width="0.6446%" height="15" fill="rgb(235,102,45)" fg:x="473" fg:w="8"/><text x="38.3644%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="38.5979%" y="485" width="0.1612%" height="15" fill="rgb(211,10,38)" fg:x="479" fg:w="2"/><text x="38.8479%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="38.5979%" y="469" width="0.1612%" height="15" fill="rgb(219,77,48)" fg:x="479" fg:w="2"/><text x="38.8479%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="38.6785%" y="453" width="0.0806%" height="15" fill="rgb(246,6,15)" fg:x="480" fg:w="1"/><text x="38.9285%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="38.9202%" y="485" width="0.0806%" height="15" fill="rgb(207,220,2)" fg:x="483" fg:w="1"/><text x="39.1702%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="39.0008%" y="485" width="0.0806%" height="15" fill="rgb(242,48,14)" fg:x="484" fg:w="1"/><text x="39.2508%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (7 samples, 0.56%)</title><rect x="38.7591%" y="501" width="0.5641%" height="15" fill="rgb(218,19,27)" fg:x="481" fg:w="7"/><text x="39.0091%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="39.0814%" y="485" width="0.2417%" height="15" fill="rgb(228,0,35)" fg:x="485" fg:w="3"/><text x="39.3314%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.1620%" y="469" width="0.1612%" height="15" fill="rgb(244,142,54)" fg:x="486" fg:w="2"/><text x="39.4120%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="39.2425%" y="453" width="0.0806%" height="15" fill="rgb(243,217,40)" fg:x="487" fg:w="1"/><text x="39.4925%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="39.2425%" y="437" width="0.0806%" height="15" fill="rgb(207,114,16)" fg:x="487" fg:w="1"/><text x="39.4925%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="39.2425%" y="421" width="0.0806%" height="15" fill="rgb(224,33,25)" fg:x="487" fg:w="1"/><text x="39.4925%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (8 samples, 0.64%)</title><rect x="38.7591%" y="517" width="0.6446%" height="15" fill="rgb(230,93,54)" fg:x="481" fg:w="8"/><text x="39.0091%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="39.3231%" y="501" width="0.0806%" height="15" fill="rgb(224,56,24)" fg:x="488" fg:w="1"/><text x="39.5731%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="39.3231%" y="485" width="0.0806%" height="15" fill="rgb(235,189,50)" fg:x="488" fg:w="1"/><text x="39.5731%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="39.3231%" y="469" width="0.0806%" height="15" fill="rgb(242,173,8)" fg:x="488" fg:w="1"/><text x="39.5731%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (1 samples, 0.08%)</title><rect x="39.3231%" y="453" width="0.0806%" height="15" fill="rgb(209,206,10)" fg:x="488" fg:w="1"/><text x="39.5731%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="39.3231%" y="437" width="0.0806%" height="15" fill="rgb(213,182,44)" fg:x="488" fg:w="1"/><text x="39.5731%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.3231%" y="421" width="0.0806%" height="15" fill="rgb(243,51,15)" fg:x="488" fg:w="1"/><text x="39.5731%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="39.3231%" y="405" width="0.0806%" height="15" fill="rgb(241,13,14)" fg:x="488" fg:w="1"/><text x="39.5731%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.4037%" y="437" width="0.0806%" height="15" fill="rgb(239,147,24)" fg:x="489" fg:w="1"/><text x="39.6537%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.4037%" y="421" width="0.0806%" height="15" fill="rgb(223,129,16)" fg:x="489" fg:w="1"/><text x="39.6537%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.4037%" y="405" width="0.0806%" height="15" fill="rgb(209,169,13)" fg:x="489" fg:w="1"/><text x="39.6537%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.4037%" y="389" width="0.0806%" height="15" fill="rgb(235,159,41)" fg:x="489" fg:w="1"/><text x="39.6537%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.4037%" y="373" width="0.0806%" height="15" fill="rgb(223,219,48)" fg:x="489" fg:w="1"/><text x="39.6537%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.4037%" y="357" width="0.0806%" height="15" fill="rgb(236,80,13)" fg:x="489" fg:w="1"/><text x="39.6537%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.4037%" y="341" width="0.0806%" height="15" fill="rgb(213,5,6)" fg:x="489" fg:w="1"/><text x="39.6537%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.4037%" y="325" width="0.0806%" height="15" fill="rgb(205,59,21)" fg:x="489" fg:w="1"/><text x="39.6537%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.4037%" y="309" width="0.0806%" height="15" fill="rgb(247,137,35)" fg:x="489" fg:w="1"/><text x="39.6537%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.4037%" y="293" width="0.0806%" height="15" fill="rgb(242,208,28)" fg:x="489" fg:w="1"/><text x="39.6537%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.4037%" y="277" width="0.0806%" height="15" fill="rgb(245,62,25)" fg:x="489" fg:w="1"/><text x="39.6537%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.4037%" y="261" width="0.0806%" height="15" fill="rgb(233,99,54)" fg:x="489" fg:w="1"/><text x="39.6537%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.4037%" y="245" width="0.0806%" height="15" fill="rgb(213,10,37)" fg:x="489" fg:w="1"/><text x="39.6537%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.4037%" y="229" width="0.0806%" height="15" fill="rgb(235,143,30)" fg:x="489" fg:w="1"/><text x="39.6537%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4037%" y="213" width="0.0806%" height="15" fill="rgb(250,146,33)" fg:x="489" fg:w="1"/><text x="39.6537%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.4843%" y="437" width="0.0806%" height="15" fill="rgb(226,198,42)" fg:x="490" fg:w="1"/><text x="39.7343%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.4843%" y="421" width="0.0806%" height="15" fill="rgb(222,55,6)" fg:x="490" fg:w="1"/><text x="39.7343%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="39.4037%" y="469" width="0.3223%" height="15" fill="rgb(213,224,31)" fg:x="489" fg:w="4"/><text x="39.6537%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="39.4037%" y="453" width="0.3223%" height="15" fill="rgb(226,103,35)" fg:x="489" fg:w="4"/><text x="39.6537%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.5649%" y="437" width="0.1612%" height="15" fill="rgb(205,66,45)" fg:x="491" fg:w="2"/><text x="39.8149%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.5649%" y="421" width="0.1612%" height="15" fill="rgb(226,51,42)" fg:x="491" fg:w="2"/><text x="39.8149%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.5649%" y="405" width="0.1612%" height="15" fill="rgb(206,69,1)" fg:x="491" fg:w="2"/><text x="39.8149%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.5649%" y="389" width="0.1612%" height="15" fill="rgb(213,228,47)" fg:x="491" fg:w="2"/><text x="39.8149%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.5649%" y="373" width="0.1612%" height="15" fill="rgb(224,204,18)" fg:x="491" fg:w="2"/><text x="39.8149%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.5649%" y="357" width="0.1612%" height="15" fill="rgb(253,187,47)" fg:x="491" fg:w="2"/><text x="39.8149%" y="367.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.40%)</title><rect x="39.4037%" y="501" width="0.4029%" height="15" fill="rgb(232,61,2)" fg:x="489" fg:w="5"/><text x="39.6537%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="39.4037%" y="485" width="0.4029%" height="15" fill="rgb(213,132,35)" fg:x="489" fg:w="5"/><text x="39.6537%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="39.7260%" y="469" width="0.0806%" height="15" fill="rgb(247,33,21)" fg:x="493" fg:w="1"/><text x="39.9760%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="39.7260%" y="453" width="0.0806%" height="15" fill="rgb(233,71,46)" fg:x="493" fg:w="1"/><text x="39.9760%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7260%" y="437" width="0.0806%" height="15" fill="rgb(222,173,43)" fg:x="493" fg:w="1"/><text x="39.9760%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7260%" y="421" width="0.0806%" height="15" fill="rgb(249,218,47)" fg:x="493" fg:w="1"/><text x="39.9760%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.7260%" y="405" width="0.0806%" height="15" fill="rgb(254,185,48)" fg:x="493" fg:w="1"/><text x="39.9760%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7260%" y="389" width="0.0806%" height="15" fill="rgb(252,165,50)" fg:x="493" fg:w="1"/><text x="39.9760%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.8066%" y="453" width="0.0806%" height="15" fill="rgb(206,219,6)" fg:x="494" fg:w="1"/><text x="40.0566%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="39.8066%" y="437" width="0.0806%" height="15" fill="rgb(212,212,45)" fg:x="494" fg:w="1"/><text x="40.0566%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8066%" y="421" width="0.0806%" height="15" fill="rgb(221,31,9)" fg:x="494" fg:w="1"/><text x="40.0566%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8066%" y="405" width="0.0806%" height="15" fill="rgb(234,198,39)" fg:x="494" fg:w="1"/><text x="40.0566%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8066%" y="389" width="0.0806%" height="15" fill="rgb(252,145,46)" fg:x="494" fg:w="1"/><text x="40.0566%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8066%" y="373" width="0.0806%" height="15" fill="rgb(237,149,0)" fg:x="494" fg:w="1"/><text x="40.0566%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8066%" y="357" width="0.0806%" height="15" fill="rgb(229,65,5)" fg:x="494" fg:w="1"/><text x="40.0566%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.8066%" y="341" width="0.0806%" height="15" fill="rgb(235,60,36)" fg:x="494" fg:w="1"/><text x="40.0566%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.8066%" y="325" width="0.0806%" height="15" fill="rgb(222,47,18)" fg:x="494" fg:w="1"/><text x="40.0566%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.8066%" y="309" width="0.0806%" height="15" fill="rgb(235,114,22)" fg:x="494" fg:w="1"/><text x="40.0566%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.8066%" y="293" width="0.0806%" height="15" fill="rgb(209,167,11)" fg:x="494" fg:w="1"/><text x="40.0566%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.8066%" y="277" width="0.0806%" height="15" fill="rgb(251,73,18)" fg:x="494" fg:w="1"/><text x="40.0566%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="39.8872%" y="437" width="0.1612%" height="15" fill="rgb(217,60,17)" fg:x="495" fg:w="2"/><text x="40.1372%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9678%" y="421" width="0.0806%" height="15" fill="rgb(224,36,37)" fg:x="496" fg:w="1"/><text x="40.2178%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="39.8066%" y="501" width="0.3223%" height="15" fill="rgb(211,21,32)" fg:x="494" fg:w="4"/><text x="40.0566%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="39.8066%" y="485" width="0.3223%" height="15" fill="rgb(231,55,48)" fg:x="494" fg:w="4"/><text x="40.0566%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="39.8066%" y="469" width="0.3223%" height="15" fill="rgb(227,42,18)" fg:x="494" fg:w="4"/><text x="40.0566%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="39.8872%" y="453" width="0.2417%" height="15" fill="rgb(217,2,27)" fg:x="495" fg:w="3"/><text x="40.1372%" y="463.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="40.0483%" y="437" width="0.0806%" height="15" fill="rgb(251,138,23)" fg:x="497" fg:w="1"/><text x="40.2983%" y="447.50"></text></g><g><title>plugins_core::tools::set_container (10 samples, 0.81%)</title><rect x="39.4037%" y="517" width="0.8058%" height="15" fill="rgb(226,184,11)" fg:x="489" fg:w="10"/><text x="39.6537%" y="527.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="40.1289%" y="501" width="0.0806%" height="15" fill="rgb(242,142,12)" fg:x="498" fg:w="1"/><text x="40.3789%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="40.1289%" y="485" width="0.0806%" height="15" fill="rgb(234,187,18)" fg:x="498" fg:w="1"/><text x="40.3789%" y="495.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="40.1289%" y="469" width="0.0806%" height="15" fill="rgb(237,44,42)" fg:x="498" fg:w="1"/><text x="40.3789%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.1289%" y="453" width="0.0806%" height="15" fill="rgb(211,90,23)" fg:x="498" fg:w="1"/><text x="40.3789%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="40.1289%" y="437" width="0.0806%" height="15" fill="rgb(207,81,18)" fg:x="498" fg:w="1"/><text x="40.3789%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.1289%" y="421" width="0.0806%" height="15" fill="rgb(222,107,28)" fg:x="498" fg:w="1"/><text x="40.3789%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1289%" y="405" width="0.0806%" height="15" fill="rgb(237,83,52)" fg:x="498" fg:w="1"/><text x="40.3789%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1289%" y="389" width="0.0806%" height="15" fill="rgb(208,67,11)" fg:x="498" fg:w="1"/><text x="40.3789%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (221 samples, 17.81%)</title><rect x="22.4819%" y="533" width="17.8082%" height="15" fill="rgb(249,157,49)" fg:x="279" fg:w="221"/><text x="22.7319%" y="543.50">plugins_core::build::BuildSu..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="40.2095%" y="517" width="0.0806%" height="15" fill="rgb(243,200,1)" fg:x="499" fg:w="1"/><text x="40.4595%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="40.2095%" y="501" width="0.0806%" height="15" fill="rgb(225,162,37)" fg:x="499" fg:w="1"/><text x="40.4595%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="40.2095%" y="485" width="0.0806%" height="15" fill="rgb(242,92,13)" fg:x="499" fg:w="1"/><text x="40.4595%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.2095%" y="469" width="0.0806%" height="15" fill="rgb(220,43,36)" fg:x="499" fg:w="1"/><text x="40.4595%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.3707%" y="469" width="0.0806%" height="15" fill="rgb(213,165,48)" fg:x="501" fg:w="1"/><text x="40.6207%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.3707%" y="453" width="0.0806%" height="15" fill="rgb(227,200,9)" fg:x="501" fg:w="1"/><text x="40.6207%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.3707%" y="437" width="0.0806%" height="15" fill="rgb(221,222,28)" fg:x="501" fg:w="1"/><text x="40.6207%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="40.2901%" y="533" width="0.2417%" height="15" fill="rgb(223,142,26)" fg:x="500" fg:w="3"/><text x="40.5401%" y="543.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="40.2901%" y="517" width="0.2417%" height="15" fill="rgb(243,46,9)" fg:x="500" fg:w="3"/><text x="40.5401%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="40.3707%" y="501" width="0.1612%" height="15" fill="rgb(250,56,11)" fg:x="501" fg:w="2"/><text x="40.6207%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="40.3707%" y="485" width="0.1612%" height="15" fill="rgb(229,113,5)" fg:x="501" fg:w="2"/><text x="40.6207%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="40.4512%" y="469" width="0.0806%" height="15" fill="rgb(244,108,28)" fg:x="502" fg:w="1"/><text x="40.7012%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="40.5318%" y="533" width="0.0806%" height="15" fill="rgb(242,119,50)" fg:x="503" fg:w="1"/><text x="40.7818%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="40.7736%" y="501" width="0.0806%" height="15" fill="rgb(224,164,23)" fg:x="506" fg:w="1"/><text x="41.0236%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="40.7736%" y="485" width="0.0806%" height="15" fill="rgb(214,227,44)" fg:x="506" fg:w="1"/><text x="41.0236%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.7736%" y="469" width="0.0806%" height="15" fill="rgb(238,202,4)" fg:x="506" fg:w="1"/><text x="41.0236%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="40.7736%" y="453" width="0.0806%" height="15" fill="rgb(213,190,30)" fg:x="506" fg:w="1"/><text x="41.0236%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="40.7736%" y="437" width="0.0806%" height="15" fill="rgb(239,15,2)" fg:x="506" fg:w="1"/><text x="41.0236%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.7736%" y="421" width="0.0806%" height="15" fill="rgb(249,229,4)" fg:x="506" fg:w="1"/><text x="41.0236%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="40.8541%" y="501" width="0.0806%" height="15" fill="rgb(239,75,44)" fg:x="507" fg:w="1"/><text x="41.1041%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8541%" y="485" width="0.0806%" height="15" fill="rgb(251,206,23)" fg:x="507" fg:w="1"/><text x="41.1041%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="41.0153%" y="485" width="0.0806%" height="15" fill="rgb(215,208,0)" fg:x="509" fg:w="1"/><text x="41.2653%" y="495.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="41.0153%" y="469" width="0.0806%" height="15" fill="rgb(230,75,50)" fg:x="509" fg:w="1"/><text x="41.2653%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.0153%" y="453" width="0.0806%" height="15" fill="rgb(246,180,39)" fg:x="509" fg:w="1"/><text x="41.2653%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.0153%" y="437" width="0.0806%" height="15" fill="rgb(249,175,24)" fg:x="509" fg:w="1"/><text x="41.2653%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.0153%" y="421" width="0.0806%" height="15" fill="rgb(247,176,22)" fg:x="509" fg:w="1"/><text x="41.2653%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.0153%" y="405" width="0.0806%" height="15" fill="rgb(241,100,24)" fg:x="509" fg:w="1"/><text x="41.2653%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.0153%" y="389" width="0.0806%" height="15" fill="rgb(233,4,35)" fg:x="509" fg:w="1"/><text x="41.2653%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.0153%" y="373" width="0.0806%" height="15" fill="rgb(211,164,46)" fg:x="509" fg:w="1"/><text x="41.2653%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.0153%" y="357" width="0.0806%" height="15" fill="rgb(242,99,53)" fg:x="509" fg:w="1"/><text x="41.2653%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.0153%" y="341" width="0.0806%" height="15" fill="rgb(243,45,33)" fg:x="509" fg:w="1"/><text x="41.2653%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.0153%" y="325" width="0.0806%" height="15" fill="rgb(217,55,21)" fg:x="509" fg:w="1"/><text x="41.2653%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.0153%" y="309" width="0.0806%" height="15" fill="rgb(245,145,46)" fg:x="509" fg:w="1"/><text x="41.2653%" y="319.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="40.9347%" y="501" width="0.2417%" height="15" fill="rgb(215,112,45)" fg:x="508" fg:w="3"/><text x="41.1847%" y="511.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="41.0959%" y="485" width="0.0806%" height="15" fill="rgb(228,104,16)" fg:x="510" fg:w="1"/><text x="41.3459%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="41.0959%" y="469" width="0.0806%" height="15" fill="rgb(239,186,38)" fg:x="510" fg:w="1"/><text x="41.3459%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="41.0959%" y="453" width="0.0806%" height="15" fill="rgb(228,38,35)" fg:x="510" fg:w="1"/><text x="41.3459%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="41.0959%" y="437" width="0.0806%" height="15" fill="rgb(251,42,40)" fg:x="510" fg:w="1"/><text x="41.3459%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="41.1765%" y="485" width="0.0806%" height="15" fill="rgb(210,51,19)" fg:x="511" fg:w="1"/><text x="41.4265%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="41.1765%" y="469" width="0.0806%" height="15" fill="rgb(236,94,42)" fg:x="511" fg:w="1"/><text x="41.4265%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.1765%" y="453" width="0.0806%" height="15" fill="rgb(239,167,16)" fg:x="511" fg:w="1"/><text x="41.4265%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.1765%" y="437" width="0.0806%" height="15" fill="rgb(252,175,31)" fg:x="511" fg:w="1"/><text x="41.4265%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1765%" y="421" width="0.0806%" height="15" fill="rgb(206,166,30)" fg:x="511" fg:w="1"/><text x="41.4265%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1765%" y="405" width="0.0806%" height="15" fill="rgb(206,209,37)" fg:x="511" fg:w="1"/><text x="41.4265%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.1765%" y="389" width="0.0806%" height="15" fill="rgb(226,91,4)" fg:x="511" fg:w="1"/><text x="41.4265%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.1765%" y="373" width="0.0806%" height="15" fill="rgb(222,167,0)" fg:x="511" fg:w="1"/><text x="41.4265%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.1765%" y="357" width="0.0806%" height="15" fill="rgb(211,70,14)" fg:x="511" fg:w="1"/><text x="41.4265%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1765%" y="341" width="0.0806%" height="15" fill="rgb(214,84,42)" fg:x="511" fg:w="1"/><text x="41.4265%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1765%" y="325" width="0.0806%" height="15" fill="rgb(235,157,37)" fg:x="511" fg:w="1"/><text x="41.4265%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.1765%" y="309" width="0.0806%" height="15" fill="rgb(225,13,6)" fg:x="511" fg:w="1"/><text x="41.4265%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.1765%" y="293" width="0.0806%" height="15" fill="rgb(205,202,1)" fg:x="511" fg:w="1"/><text x="41.4265%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.1765%" y="277" width="0.0806%" height="15" fill="rgb(232,195,26)" fg:x="511" fg:w="1"/><text x="41.4265%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.1765%" y="261" width="0.0806%" height="15" fill="rgb(208,102,26)" fg:x="511" fg:w="1"/><text x="41.4265%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1765%" y="245" width="0.0806%" height="15" fill="rgb(215,41,39)" fg:x="511" fg:w="1"/><text x="41.4265%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.2571%" y="469" width="0.0806%" height="15" fill="rgb(247,139,11)" fg:x="512" fg:w="1"/><text x="41.5071%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.2571%" y="453" width="0.0806%" height="15" fill="rgb(243,99,6)" fg:x="512" fg:w="1"/><text x="41.5071%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.2571%" y="437" width="0.0806%" height="15" fill="rgb(230,168,48)" fg:x="512" fg:w="1"/><text x="41.5071%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.2571%" y="421" width="0.0806%" height="15" fill="rgb(238,227,13)" fg:x="512" fg:w="1"/><text x="41.5071%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.2571%" y="405" width="0.0806%" height="15" fill="rgb(209,109,13)" fg:x="512" fg:w="1"/><text x="41.5071%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2571%" y="389" width="0.0806%" height="15" fill="rgb(228,195,1)" fg:x="512" fg:w="1"/><text x="41.5071%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2571%" y="373" width="0.0806%" height="15" fill="rgb(230,218,0)" fg:x="512" fg:w="1"/><text x="41.5071%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.2571%" y="357" width="0.0806%" height="15" fill="rgb(206,1,45)" fg:x="512" fg:w="1"/><text x="41.5071%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.2571%" y="341" width="0.0806%" height="15" fill="rgb(209,124,26)" fg:x="512" fg:w="1"/><text x="41.5071%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.2571%" y="325" width="0.0806%" height="15" fill="rgb(220,59,8)" fg:x="512" fg:w="1"/><text x="41.5071%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.2571%" y="309" width="0.0806%" height="15" fill="rgb(251,41,37)" fg:x="512" fg:w="1"/><text x="41.5071%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="41.3376%" y="469" width="0.0806%" height="15" fill="rgb(239,152,21)" fg:x="513" fg:w="1"/><text x="41.5876%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3376%" y="453" width="0.0806%" height="15" fill="rgb(226,32,1)" fg:x="513" fg:w="1"/><text x="41.5876%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3376%" y="437" width="0.0806%" height="15" fill="rgb(230,154,36)" fg:x="513" fg:w="1"/><text x="41.5876%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3376%" y="421" width="0.0806%" height="15" fill="rgb(208,228,43)" fg:x="513" fg:w="1"/><text x="41.5876%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3376%" y="405" width="0.0806%" height="15" fill="rgb(214,203,3)" fg:x="513" fg:w="1"/><text x="41.5876%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="41.4182%" y="437" width="0.0806%" height="15" fill="rgb(207,149,29)" fg:x="514" fg:w="1"/><text x="41.6682%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="41.4182%" y="421" width="0.0806%" height="15" fill="rgb(250,105,7)" fg:x="514" fg:w="1"/><text x="41.6682%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="41.4182%" y="469" width="0.1612%" height="15" fill="rgb(232,222,16)" fg:x="514" fg:w="2"/><text x="41.6682%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="41.4182%" y="453" width="0.1612%" height="15" fill="rgb(209,32,24)" fg:x="514" fg:w="2"/><text x="41.6682%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="41.4988%" y="437" width="0.0806%" height="15" fill="rgb(225,13,6)" fg:x="515" fg:w="1"/><text x="41.7488%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.4988%" y="421" width="0.0806%" height="15" fill="rgb(245,226,26)" fg:x="515" fg:w="1"/><text x="41.7488%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.4988%" y="405" width="0.0806%" height="15" fill="rgb(229,178,27)" fg:x="515" fg:w="1"/><text x="41.7488%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.5794%" y="405" width="0.0806%" height="15" fill="rgb(205,227,28)" fg:x="516" fg:w="1"/><text x="41.8294%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.5794%" y="389" width="0.0806%" height="15" fill="rgb(210,191,45)" fg:x="516" fg:w="1"/><text x="41.8294%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.5794%" y="373" width="0.0806%" height="15" fill="rgb(206,124,16)" fg:x="516" fg:w="1"/><text x="41.8294%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5794%" y="357" width="0.0806%" height="15" fill="rgb(210,162,0)" fg:x="516" fg:w="1"/><text x="41.8294%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5794%" y="341" width="0.0806%" height="15" fill="rgb(211,54,38)" fg:x="516" fg:w="1"/><text x="41.8294%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.5794%" y="325" width="0.0806%" height="15" fill="rgb(248,192,3)" fg:x="516" fg:w="1"/><text x="41.8294%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.5794%" y="309" width="0.0806%" height="15" fill="rgb(233,187,18)" fg:x="516" fg:w="1"/><text x="41.8294%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.5794%" y="293" width="0.0806%" height="15" fill="rgb(237,208,14)" fg:x="516" fg:w="1"/><text x="41.8294%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5794%" y="277" width="0.0806%" height="15" fill="rgb(212,77,1)" fg:x="516" fg:w="1"/><text x="41.8294%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5794%" y="261" width="0.0806%" height="15" fill="rgb(210,163,22)" fg:x="516" fg:w="1"/><text x="41.8294%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.5794%" y="245" width="0.0806%" height="15" fill="rgb(250,58,28)" fg:x="516" fg:w="1"/><text x="41.8294%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.5794%" y="229" width="0.0806%" height="15" fill="rgb(254,28,41)" fg:x="516" fg:w="1"/><text x="41.8294%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.5794%" y="213" width="0.0806%" height="15" fill="rgb(237,162,36)" fg:x="516" fg:w="1"/><text x="41.8294%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.5794%" y="197" width="0.0806%" height="15" fill="rgb(232,56,6)" fg:x="516" fg:w="1"/><text x="41.8294%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5794%" y="181" width="0.0806%" height="15" fill="rgb(216,127,42)" fg:x="516" fg:w="1"/><text x="41.8294%" y="191.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="41.5794%" y="421" width="0.1612%" height="15" fill="rgb(241,69,15)" fg:x="516" fg:w="2"/><text x="41.8294%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.6600%" y="405" width="0.0806%" height="15" fill="rgb(227,180,19)" fg:x="517" fg:w="1"/><text x="41.9100%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.6600%" y="389" width="0.0806%" height="15" fill="rgb(231,188,29)" fg:x="517" fg:w="1"/><text x="41.9100%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="41.5794%" y="453" width="0.2417%" height="15" fill="rgb(224,176,27)" fg:x="516" fg:w="3"/><text x="41.8294%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.24%)</title><rect x="41.5794%" y="437" width="0.2417%" height="15" fill="rgb(249,214,19)" fg:x="516" fg:w="3"/><text x="41.8294%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="41.7405%" y="421" width="0.0806%" height="15" fill="rgb(240,0,4)" fg:x="518" fg:w="1"/><text x="41.9905%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="41.7405%" y="405" width="0.0806%" height="15" fill="rgb(233,28,41)" fg:x="518" fg:w="1"/><text x="41.9905%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="41.7405%" y="389" width="0.0806%" height="15" fill="rgb(220,90,51)" fg:x="518" fg:w="1"/><text x="41.9905%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="41.7405%" y="373" width="0.0806%" height="15" fill="rgb(250,52,22)" fg:x="518" fg:w="1"/><text x="41.9905%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="41.7405%" y="357" width="0.0806%" height="15" fill="rgb(231,152,36)" fg:x="518" fg:w="1"/><text x="41.9905%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.8211%" y="421" width="0.1612%" height="15" fill="rgb(250,218,4)" fg:x="519" fg:w="2"/><text x="42.0711%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9017%" y="405" width="0.0806%" height="15" fill="rgb(210,38,21)" fg:x="520" fg:w="1"/><text x="42.1517%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="41.9823%" y="421" width="0.0806%" height="15" fill="rgb(230,75,13)" fg:x="521" fg:w="1"/><text x="42.2323%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.9823%" y="405" width="0.0806%" height="15" fill="rgb(250,68,53)" fg:x="521" fg:w="1"/><text x="42.2323%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9823%" y="389" width="0.0806%" height="15" fill="rgb(250,210,16)" fg:x="521" fg:w="1"/><text x="42.2323%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="42.0629%" y="421" width="0.0806%" height="15" fill="rgb(240,132,5)" fg:x="522" fg:w="1"/><text x="42.3129%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.0629%" y="405" width="0.0806%" height="15" fill="rgb(222,148,48)" fg:x="522" fg:w="1"/><text x="42.3129%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.0629%" y="389" width="0.0806%" height="15" fill="rgb(247,181,24)" fg:x="522" fg:w="1"/><text x="42.3129%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.0629%" y="373" width="0.0806%" height="15" fill="rgb(239,5,31)" fg:x="522" fg:w="1"/><text x="42.3129%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0629%" y="357" width="0.0806%" height="15" fill="rgb(241,152,38)" fg:x="522" fg:w="1"/><text x="42.3129%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="41.2571%" y="485" width="0.9670%" height="15" fill="rgb(246,200,37)" fg:x="512" fg:w="12"/><text x="41.5071%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="41.5794%" y="469" width="0.6446%" height="15" fill="rgb(243,210,26)" fg:x="516" fg:w="8"/><text x="41.8294%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="41.8211%" y="453" width="0.4029%" height="15" fill="rgb(222,22,22)" fg:x="519" fg:w="5"/><text x="42.0711%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="41.8211%" y="437" width="0.4029%" height="15" fill="rgb(208,129,28)" fg:x="519" fg:w="5"/><text x="42.0711%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.1434%" y="421" width="0.0806%" height="15" fill="rgb(254,169,28)" fg:x="523" fg:w="1"/><text x="42.3934%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="42.1434%" y="405" width="0.0806%" height="15" fill="rgb(225,45,17)" fg:x="523" fg:w="1"/><text x="42.3934%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.1434%" y="389" width="0.0806%" height="15" fill="rgb(232,199,2)" fg:x="523" fg:w="1"/><text x="42.3934%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="42.1434%" y="373" width="0.0806%" height="15" fill="rgb(235,33,40)" fg:x="523" fg:w="1"/><text x="42.3934%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.1434%" y="357" width="0.0806%" height="15" fill="rgb(237,89,50)" fg:x="523" fg:w="1"/><text x="42.3934%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="42.1434%" y="341" width="0.0806%" height="15" fill="rgb(238,126,5)" fg:x="523" fg:w="1"/><text x="42.3934%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.1434%" y="325" width="0.0806%" height="15" fill="rgb(247,214,42)" fg:x="523" fg:w="1"/><text x="42.3934%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1434%" y="309" width="0.0806%" height="15" fill="rgb(238,60,45)" fg:x="523" fg:w="1"/><text x="42.3934%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1434%" y="293" width="0.0806%" height="15" fill="rgb(225,69,44)" fg:x="523" fg:w="1"/><text x="42.3934%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1434%" y="277" width="0.0806%" height="15" fill="rgb(241,13,44)" fg:x="523" fg:w="1"/><text x="42.3934%" y="287.50"></text></g><g><title>plugins_core::build::Build::save (14 samples, 1.13%)</title><rect x="41.1765%" y="501" width="1.1281%" height="15" fill="rgb(227,121,22)" fg:x="511" fg:w="14"/><text x="41.4265%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.2240%" y="485" width="0.0806%" height="15" fill="rgb(231,160,23)" fg:x="524" fg:w="1"/><text x="42.4740%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.2240%" y="469" width="0.0806%" height="15" fill="rgb(250,179,43)" fg:x="524" fg:w="1"/><text x="42.4740%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2240%" y="453" width="0.0806%" height="15" fill="rgb(233,54,46)" fg:x="524" fg:w="1"/><text x="42.4740%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="42.3046%" y="469" width="0.0806%" height="15" fill="rgb(247,120,42)" fg:x="525" fg:w="1"/><text x="42.5546%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="42.3046%" y="485" width="0.1612%" height="15" fill="rgb(221,219,12)" fg:x="525" fg:w="2"/><text x="42.5546%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="42.3852%" y="469" width="0.0806%" height="15" fill="rgb(211,126,8)" fg:x="526" fg:w="1"/><text x="42.6352%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="42.4658%" y="485" width="0.0806%" height="15" fill="rgb(218,154,33)" fg:x="527" fg:w="1"/><text x="42.7158%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="42.5463%" y="469" width="0.0806%" height="15" fill="rgb(212,199,16)" fg:x="528" fg:w="1"/><text x="42.7963%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5463%" y="453" width="0.0806%" height="15" fill="rgb(236,215,46)" fg:x="528" fg:w="1"/><text x="42.7963%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (26 samples, 2.10%)</title><rect x="40.6124%" y="533" width="2.0951%" height="15" fill="rgb(232,32,22)" fg:x="504" fg:w="26"/><text x="40.8624%" y="543.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (26 samples, 2.10%)</title><rect x="40.6124%" y="517" width="2.0951%" height="15" fill="rgb(234,79,15)" fg:x="504" fg:w="26"/><text x="40.8624%" y="527.50">p..</text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (5 samples, 0.40%)</title><rect x="42.3046%" y="501" width="0.4029%" height="15" fill="rgb(235,187,47)" fg:x="525" fg:w="5"/><text x="42.5546%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="42.5463%" y="485" width="0.1612%" height="15" fill="rgb(244,69,37)" fg:x="528" fg:w="2"/><text x="42.7963%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="42.6269%" y="469" width="0.0806%" height="15" fill="rgb(249,140,25)" fg:x="529" fg:w="1"/><text x="42.8769%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.6269%" y="453" width="0.0806%" height="15" fill="rgb(213,69,8)" fg:x="529" fg:w="1"/><text x="42.8769%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="42.6269%" y="437" width="0.0806%" height="15" fill="rgb(220,136,2)" fg:x="529" fg:w="1"/><text x="42.8769%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="42.7075%" y="501" width="0.1612%" height="15" fill="rgb(237,50,36)" fg:x="530" fg:w="2"/><text x="42.9575%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="42.7075%" y="517" width="0.2417%" height="15" fill="rgb(226,18,11)" fg:x="530" fg:w="3"/><text x="42.9575%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="42.8687%" y="501" width="0.0806%" height="15" fill="rgb(243,156,2)" fg:x="532" fg:w="1"/><text x="43.1187%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.8687%" y="485" width="0.0806%" height="15" fill="rgb(218,8,34)" fg:x="532" fg:w="1"/><text x="43.1187%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.8687%" y="469" width="0.0806%" height="15" fill="rgb(250,94,35)" fg:x="532" fg:w="1"/><text x="43.1187%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.9492%" y="517" width="0.0806%" height="15" fill="rgb(229,127,21)" fg:x="533" fg:w="1"/><text x="43.1992%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="43.0298%" y="517" width="0.0806%" height="15" fill="rgb(234,49,5)" fg:x="534" fg:w="1"/><text x="43.2798%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="43.1104%" y="485" width="0.0806%" height="15" fill="rgb(248,12,16)" fg:x="535" fg:w="1"/><text x="43.3604%" y="495.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="43.1104%" y="469" width="0.0806%" height="15" fill="rgb(208,220,31)" fg:x="535" fg:w="1"/><text x="43.3604%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="43.1104%" y="453" width="0.0806%" height="15" fill="rgb(243,184,0)" fg:x="535" fg:w="1"/><text x="43.3604%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="43.1104%" y="437" width="0.0806%" height="15" fill="rgb(217,38,21)" fg:x="535" fg:w="1"/><text x="43.3604%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="43.1104%" y="421" width="0.0806%" height="15" fill="rgb(239,120,45)" fg:x="535" fg:w="1"/><text x="43.3604%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1104%" y="405" width="0.0806%" height="15" fill="rgb(235,33,2)" fg:x="535" fg:w="1"/><text x="43.3604%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1104%" y="389" width="0.0806%" height="15" fill="rgb(249,161,5)" fg:x="535" fg:w="1"/><text x="43.3604%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.1104%" y="373" width="0.0806%" height="15" fill="rgb(250,165,48)" fg:x="535" fg:w="1"/><text x="43.3604%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.1104%" y="357" width="0.0806%" height="15" fill="rgb(221,23,45)" fg:x="535" fg:w="1"/><text x="43.3604%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.1104%" y="341" width="0.0806%" height="15" fill="rgb(217,108,46)" fg:x="535" fg:w="1"/><text x="43.3604%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.1104%" y="325" width="0.0806%" height="15" fill="rgb(254,26,35)" fg:x="535" fg:w="1"/><text x="43.3604%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1104%" y="309" width="0.0806%" height="15" fill="rgb(218,223,28)" fg:x="535" fg:w="1"/><text x="43.3604%" y="319.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="43.1104%" y="517" width="0.1612%" height="15" fill="rgb(242,27,47)" fg:x="535" fg:w="2"/><text x="43.3604%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="43.1104%" y="501" width="0.1612%" height="15" fill="rgb(218,39,35)" fg:x="535" fg:w="2"/><text x="43.3604%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.1910%" y="485" width="0.0806%" height="15" fill="rgb(232,127,16)" fg:x="536" fg:w="1"/><text x="43.4410%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2716%" y="469" width="0.0806%" height="15" fill="rgb(231,219,51)" fg:x="537" fg:w="1"/><text x="43.5216%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2716%" y="453" width="0.0806%" height="15" fill="rgb(217,220,46)" fg:x="537" fg:w="1"/><text x="43.5216%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2716%" y="437" width="0.0806%" height="15" fill="rgb(230,75,1)" fg:x="537" fg:w="1"/><text x="43.5216%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="43.2716%" y="501" width="0.1612%" height="15" fill="rgb(218,2,8)" fg:x="537" fg:w="2"/><text x="43.5216%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="43.2716%" y="485" width="0.1612%" height="15" fill="rgb(206,111,30)" fg:x="537" fg:w="2"/><text x="43.5216%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.3521%" y="469" width="0.0806%" height="15" fill="rgb(209,135,6)" fg:x="538" fg:w="1"/><text x="43.6021%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3521%" y="453" width="0.0806%" height="15" fill="rgb(205,169,10)" fg:x="538" fg:w="1"/><text x="43.6021%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4327%" y="469" width="0.0806%" height="15" fill="rgb(212,204,38)" fg:x="539" fg:w="1"/><text x="43.6827%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4327%" y="453" width="0.0806%" height="15" fill="rgb(205,199,14)" fg:x="539" fg:w="1"/><text x="43.6827%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4327%" y="437" width="0.0806%" height="15" fill="rgb(212,4,6)" fg:x="539" fg:w="1"/><text x="43.6827%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="43.4327%" y="485" width="0.1612%" height="15" fill="rgb(250,15,10)" fg:x="539" fg:w="2"/><text x="43.6827%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.5133%" y="469" width="0.0806%" height="15" fill="rgb(212,49,51)" fg:x="540" fg:w="1"/><text x="43.7633%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.6745%" y="357" width="0.0806%" height="15" fill="rgb(235,21,9)" fg:x="542" fg:w="1"/><text x="43.9245%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="43.5939%" y="437" width="0.2417%" height="15" fill="rgb(251,31,32)" fg:x="541" fg:w="3"/><text x="43.8439%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.5939%" y="421" width="0.2417%" height="15" fill="rgb(246,23,9)" fg:x="541" fg:w="3"/><text x="43.8439%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.5939%" y="405" width="0.2417%" height="15" fill="rgb(225,216,14)" fg:x="541" fg:w="3"/><text x="43.8439%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="43.6745%" y="389" width="0.1612%" height="15" fill="rgb(215,200,26)" fg:x="542" fg:w="2"/><text x="43.9245%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.6745%" y="373" width="0.1612%" height="15" fill="rgb(237,130,47)" fg:x="542" fg:w="2"/><text x="43.9245%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.7550%" y="357" width="0.0806%" height="15" fill="rgb(247,74,14)" fg:x="543" fg:w="1"/><text x="44.0050%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.7550%" y="341" width="0.0806%" height="15" fill="rgb(254,97,46)" fg:x="543" fg:w="1"/><text x="44.0050%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="43.9162%" y="389" width="0.0806%" height="15" fill="rgb(234,191,1)" fg:x="545" fg:w="1"/><text x="44.1662%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="43.9162%" y="373" width="0.0806%" height="15" fill="rgb(215,165,14)" fg:x="545" fg:w="1"/><text x="44.1662%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="43.5939%" y="469" width="0.4835%" height="15" fill="rgb(230,182,6)" fg:x="541" fg:w="6"/><text x="43.8439%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (6 samples, 0.48%)</title><rect x="43.5939%" y="453" width="0.4835%" height="15" fill="rgb(210,127,39)" fg:x="541" fg:w="6"/><text x="43.8439%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="43.8356%" y="437" width="0.2417%" height="15" fill="rgb(223,212,51)" fg:x="544" fg:w="3"/><text x="44.0856%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="43.8356%" y="421" width="0.2417%" height="15" fill="rgb(226,176,43)" fg:x="544" fg:w="3"/><text x="44.0856%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="43.9162%" y="405" width="0.1612%" height="15" fill="rgb(222,155,4)" fg:x="545" fg:w="2"/><text x="44.1662%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9968%" y="389" width="0.0806%" height="15" fill="rgb(215,149,7)" fg:x="546" fg:w="1"/><text x="44.2468%" y="399.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="44.0774%" y="469" width="0.0806%" height="15" fill="rgb(252,199,23)" fg:x="547" fg:w="1"/><text x="44.3274%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1579%" y="437" width="0.0806%" height="15" fill="rgb(245,52,29)" fg:x="548" fg:w="1"/><text x="44.4079%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1579%" y="421" width="0.0806%" height="15" fill="rgb(221,228,19)" fg:x="548" fg:w="1"/><text x="44.4079%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="44.2385%" y="437" width="0.0806%" height="15" fill="rgb(253,101,6)" fg:x="549" fg:w="1"/><text x="44.4885%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.2385%" y="421" width="0.0806%" height="15" fill="rgb(211,130,8)" fg:x="549" fg:w="1"/><text x="44.4885%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="44.3191%" y="437" width="0.0806%" height="15" fill="rgb(238,37,53)" fg:x="550" fg:w="1"/><text x="44.5691%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.3191%" y="421" width="0.0806%" height="15" fill="rgb(235,145,5)" fg:x="550" fg:w="1"/><text x="44.5691%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="43.4327%" y="501" width="1.0475%" height="15" fill="rgb(244,12,43)" fg:x="539" fg:w="13"/><text x="43.6827%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.89%)</title><rect x="43.5939%" y="485" width="0.8864%" height="15" fill="rgb(246,195,24)" fg:x="541" fg:w="11"/><text x="43.8439%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="44.1579%" y="469" width="0.3223%" height="15" fill="rgb(235,163,6)" fg:x="548" fg:w="4"/><text x="44.4079%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="44.1579%" y="453" width="0.3223%" height="15" fill="rgb(236,218,17)" fg:x="548" fg:w="4"/><text x="44.4079%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="44.3997%" y="437" width="0.0806%" height="15" fill="rgb(235,12,38)" fg:x="551" fg:w="1"/><text x="44.6497%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="44.3997%" y="421" width="0.0806%" height="15" fill="rgb(225,195,33)" fg:x="551" fg:w="1"/><text x="44.6497%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="44.3997%" y="405" width="0.0806%" height="15" fill="rgb(238,54,35)" fg:x="551" fg:w="1"/><text x="44.6497%" y="415.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (413 samples, 33.28%)</title><rect x="11.2812%" y="549" width="33.2796%" height="15" fill="rgb(238,33,7)" fg:x="140" fg:w="413"/><text x="11.5312%" y="559.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::pr..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (23 samples, 1.85%)</title><rect x="42.7075%" y="533" width="1.8533%" height="15" fill="rgb(245,5,14)" fg:x="530" fg:w="23"/><text x="42.9575%" y="543.50">p..</text></g><g><title>plugins_core::build::Build::save (16 samples, 1.29%)</title><rect x="43.2716%" y="517" width="1.2893%" height="15" fill="rgb(251,95,31)" fg:x="537" fg:w="16"/><text x="43.5216%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.4803%" y="501" width="0.0806%" height="15" fill="rgb(222,15,46)" fg:x="552" fg:w="1"/><text x="44.7303%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4803%" y="485" width="0.0806%" height="15" fill="rgb(226,182,24)" fg:x="552" fg:w="1"/><text x="44.7303%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4803%" y="469" width="0.0806%" height="15" fill="rgb(229,105,41)" fg:x="552" fg:w="1"/><text x="44.7303%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4803%" y="453" width="0.0806%" height="15" fill="rgb(216,99,53)" fg:x="552" fg:w="1"/><text x="44.7303%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.4803%" y="437" width="0.0806%" height="15" fill="rgb(253,26,20)" fg:x="552" fg:w="1"/><text x="44.7303%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.4803%" y="421" width="0.0806%" height="15" fill="rgb(249,155,28)" fg:x="552" fg:w="1"/><text x="44.7303%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.4803%" y="405" width="0.0806%" height="15" fill="rgb(241,221,2)" fg:x="552" fg:w="1"/><text x="44.7303%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.4803%" y="389" width="0.0806%" height="15" fill="rgb(219,124,6)" fg:x="552" fg:w="1"/><text x="44.7303%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.4803%" y="373" width="0.0806%" height="15" fill="rgb(233,37,6)" fg:x="552" fg:w="1"/><text x="44.7303%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.4803%" y="357" width="0.0806%" height="15" fill="rgb(238,20,14)" fg:x="552" fg:w="1"/><text x="44.7303%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.4803%" y="341" width="0.0806%" height="15" fill="rgb(232,106,27)" fg:x="552" fg:w="1"/><text x="44.7303%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.4803%" y="325" width="0.0806%" height="15" fill="rgb(246,157,24)" fg:x="552" fg:w="1"/><text x="44.7303%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.4803%" y="309" width="0.0806%" height="15" fill="rgb(214,153,10)" fg:x="552" fg:w="1"/><text x="44.7303%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.4803%" y="293" width="0.0806%" height="15" fill="rgb(212,94,6)" fg:x="552" fg:w="1"/><text x="44.7303%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.4803%" y="277" width="0.0806%" height="15" fill="rgb(254,25,27)" fg:x="552" fg:w="1"/><text x="44.7303%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.4803%" y="261" width="0.0806%" height="15" fill="rgb(250,43,52)" fg:x="552" fg:w="1"/><text x="44.7303%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5608%" y="437" width="0.0806%" height="15" fill="rgb(221,226,40)" fg:x="553" fg:w="1"/><text x="44.8108%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5608%" y="421" width="0.0806%" height="15" fill="rgb(235,162,34)" fg:x="553" fg:w="1"/><text x="44.8108%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.5608%" y="405" width="0.0806%" height="15" fill="rgb(239,24,26)" fg:x="553" fg:w="1"/><text x="44.8108%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.5608%" y="389" width="0.0806%" height="15" fill="rgb(244,226,11)" fg:x="553" fg:w="1"/><text x="44.8108%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.5608%" y="373" width="0.0806%" height="15" fill="rgb(225,23,10)" fg:x="553" fg:w="1"/><text x="44.8108%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.5608%" y="357" width="0.0806%" height="15" fill="rgb(249,125,6)" fg:x="553" fg:w="1"/><text x="44.8108%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.5608%" y="341" width="0.0806%" height="15" fill="rgb(246,212,12)" fg:x="553" fg:w="1"/><text x="44.8108%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.5608%" y="517" width="0.1612%" height="15" fill="rgb(230,43,32)" fg:x="553" fg:w="2"/><text x="44.8108%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.5608%" y="501" width="0.1612%" height="15" fill="rgb(210,95,23)" fg:x="553" fg:w="2"/><text x="44.8108%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="44.5608%" y="485" width="0.1612%" height="15" fill="rgb(229,103,33)" fg:x="553" fg:w="2"/><text x="44.8108%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="44.5608%" y="469" width="0.1612%" height="15" fill="rgb(222,104,27)" fg:x="553" fg:w="2"/><text x="44.8108%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="44.5608%" y="453" width="0.1612%" height="15" fill="rgb(239,221,23)" fg:x="553" fg:w="2"/><text x="44.8108%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="44.6414%" y="437" width="0.0806%" height="15" fill="rgb(222,98,21)" fg:x="554" fg:w="1"/><text x="44.8914%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="44.6414%" y="421" width="0.0806%" height="15" fill="rgb(231,101,20)" fg:x="554" fg:w="1"/><text x="44.8914%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="44.5608%" y="533" width="0.3223%" height="15" fill="rgb(215,150,22)" fg:x="553" fg:w="4"/><text x="44.8108%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.7220%" y="517" width="0.1612%" height="15" fill="rgb(248,3,34)" fg:x="555" fg:w="2"/><text x="44.9720%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="44.8832%" y="533" width="0.0806%" height="15" fill="rgb(220,141,21)" fg:x="557" fg:w="1"/><text x="45.1332%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="44.8832%" y="517" width="0.0806%" height="15" fill="rgb(223,41,48)" fg:x="557" fg:w="1"/><text x="45.1332%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.8832%" y="501" width="0.0806%" height="15" fill="rgb(247,12,5)" fg:x="557" fg:w="1"/><text x="45.1332%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.8832%" y="485" width="0.0806%" height="15" fill="rgb(206,173,10)" fg:x="557" fg:w="1"/><text x="45.1332%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="44.8832%" y="469" width="0.0806%" height="15" fill="rgb(233,214,37)" fg:x="557" fg:w="1"/><text x="45.1332%" y="479.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="44.8832%" y="453" width="0.0806%" height="15" fill="rgb(238,86,43)" fg:x="557" fg:w="1"/><text x="45.1332%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="44.8832%" y="437" width="0.0806%" height="15" fill="rgb(212,182,8)" fg:x="557" fg:w="1"/><text x="45.1332%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.8832%" y="421" width="0.0806%" height="15" fill="rgb(240,91,47)" fg:x="557" fg:w="1"/><text x="45.1332%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9637%" y="501" width="0.0806%" height="15" fill="rgb(209,138,26)" fg:x="558" fg:w="1"/><text x="45.2137%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9637%" y="485" width="0.0806%" height="15" fill="rgb(231,163,20)" fg:x="558" fg:w="1"/><text x="45.2137%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9637%" y="469" width="0.0806%" height="15" fill="rgb(214,91,54)" fg:x="558" fg:w="1"/><text x="45.2137%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.9637%" y="453" width="0.0806%" height="15" fill="rgb(230,32,17)" fg:x="558" fg:w="1"/><text x="45.2137%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.9637%" y="437" width="0.0806%" height="15" fill="rgb(231,34,34)" fg:x="558" fg:w="1"/><text x="45.2137%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.9637%" y="421" width="0.0806%" height="15" fill="rgb(224,228,27)" fg:x="558" fg:w="1"/><text x="45.2137%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.9637%" y="405" width="0.0806%" height="15" fill="rgb(219,35,40)" fg:x="558" fg:w="1"/><text x="45.2137%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.9637%" y="389" width="0.0806%" height="15" fill="rgb(234,42,8)" fg:x="558" fg:w="1"/><text x="45.2137%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.9637%" y="373" width="0.0806%" height="15" fill="rgb(226,75,22)" fg:x="558" fg:w="1"/><text x="45.2137%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.9637%" y="357" width="0.0806%" height="15" fill="rgb(242,203,28)" fg:x="558" fg:w="1"/><text x="45.2137%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.9637%" y="341" width="0.0806%" height="15" fill="rgb(221,3,9)" fg:x="558" fg:w="1"/><text x="45.2137%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.9637%" y="325" width="0.0806%" height="15" fill="rgb(214,34,31)" fg:x="558" fg:w="1"/><text x="45.2137%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.9637%" y="309" width="0.0806%" height="15" fill="rgb(252,119,15)" fg:x="558" fg:w="1"/><text x="45.2137%" y="319.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="45.1249%" y="469" width="0.0806%" height="15" fill="rgb(244,224,31)" fg:x="560" fg:w="1"/><text x="45.3749%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.1249%" y="453" width="0.0806%" height="15" fill="rgb(215,8,51)" fg:x="560" fg:w="1"/><text x="45.3749%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.1249%" y="437" width="0.0806%" height="15" fill="rgb(207,24,1)" fg:x="560" fg:w="1"/><text x="45.3749%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.1249%" y="421" width="0.0806%" height="15" fill="rgb(245,90,0)" fg:x="560" fg:w="1"/><text x="45.3749%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.1249%" y="405" width="0.0806%" height="15" fill="rgb(246,43,48)" fg:x="560" fg:w="1"/><text x="45.3749%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.1249%" y="389" width="0.0806%" height="15" fill="rgb(252,218,10)" fg:x="560" fg:w="1"/><text x="45.3749%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="45.1249%" y="373" width="0.0806%" height="15" fill="rgb(231,24,35)" fg:x="560" fg:w="1"/><text x="45.3749%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.1249%" y="357" width="0.0806%" height="15" fill="rgb(225,66,19)" fg:x="560" fg:w="1"/><text x="45.3749%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="45.0443%" y="485" width="0.2417%" height="15" fill="rgb(214,96,51)" fg:x="559" fg:w="3"/><text x="45.2943%" y="495.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="45.2055%" y="469" width="0.0806%" height="15" fill="rgb(251,151,47)" fg:x="561" fg:w="1"/><text x="45.4555%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="45.0443%" y="501" width="0.3223%" height="15" fill="rgb(236,79,14)" fg:x="559" fg:w="4"/><text x="45.2943%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.2861%" y="485" width="0.0806%" height="15" fill="rgb(210,205,11)" fg:x="562" fg:w="1"/><text x="45.5361%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="45.5278%" y="437" width="0.4029%" height="15" fill="rgb(233,142,53)" fg:x="565" fg:w="5"/><text x="45.7778%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="45.5278%" y="421" width="0.4029%" height="15" fill="rgb(212,116,48)" fg:x="565" fg:w="5"/><text x="45.7778%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="45.6890%" y="405" width="0.2417%" height="15" fill="rgb(234,55,33)" fg:x="567" fg:w="3"/><text x="45.9390%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.0113%" y="373" width="0.0806%" height="15" fill="rgb(253,92,27)" fg:x="571" fg:w="1"/><text x="46.2613%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="45.9307%" y="421" width="0.2417%" height="15" fill="rgb(220,7,35)" fg:x="570" fg:w="3"/><text x="46.1807%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="45.9307%" y="405" width="0.2417%" height="15" fill="rgb(246,124,6)" fg:x="570" fg:w="3"/><text x="46.1807%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="45.9307%" y="389" width="0.2417%" height="15" fill="rgb(212,111,51)" fg:x="570" fg:w="3"/><text x="46.1807%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="46.0919%" y="373" width="0.0806%" height="15" fill="rgb(253,116,7)" fg:x="572" fg:w="1"/><text x="46.3419%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="46.2530%" y="373" width="0.1612%" height="15" fill="rgb(213,145,18)" fg:x="574" fg:w="2"/><text x="46.5030%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="46.2530%" y="357" width="0.1612%" height="15" fill="rgb(219,149,7)" fg:x="574" fg:w="2"/><text x="46.5030%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.3336%" y="341" width="0.0806%" height="15" fill="rgb(225,156,20)" fg:x="575" fg:w="1"/><text x="46.5836%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.3336%" y="325" width="0.0806%" height="15" fill="rgb(211,98,19)" fg:x="575" fg:w="1"/><text x="46.5836%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="46.4142%" y="357" width="0.0806%" height="15" fill="rgb(231,192,31)" fg:x="576" fg:w="1"/><text x="46.6642%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="46.4948%" y="341" width="0.0806%" height="15" fill="rgb(249,95,19)" fg:x="577" fg:w="1"/><text x="46.7448%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.4948%" y="325" width="0.0806%" height="15" fill="rgb(247,101,36)" fg:x="577" fg:w="1"/><text x="46.7448%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="46.2530%" y="405" width="0.4029%" height="15" fill="rgb(221,45,43)" fg:x="574" fg:w="5"/><text x="46.5030%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="46.2530%" y="389" width="0.4029%" height="15" fill="rgb(220,42,1)" fg:x="574" fg:w="5"/><text x="46.5030%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="46.4142%" y="373" width="0.2417%" height="15" fill="rgb(236,19,24)" fg:x="576" fg:w="3"/><text x="46.6642%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="46.4948%" y="357" width="0.1612%" height="15" fill="rgb(225,192,6)" fg:x="577" fg:w="2"/><text x="46.7448%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.5753%" y="341" width="0.0806%" height="15" fill="rgb(242,30,19)" fg:x="578" fg:w="1"/><text x="46.8253%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5753%" y="325" width="0.0806%" height="15" fill="rgb(240,36,6)" fg:x="578" fg:w="1"/><text x="46.8253%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="46.6559%" y="405" width="0.2417%" height="15" fill="rgb(246,40,28)" fg:x="579" fg:w="3"/><text x="46.9059%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="46.6559%" y="389" width="0.2417%" height="15" fill="rgb(225,155,33)" fg:x="579" fg:w="3"/><text x="46.9059%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.8977%" y="389" width="0.0806%" height="15" fill="rgb(240,65,18)" fg:x="582" fg:w="1"/><text x="47.1477%" y="399.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="46.9782%" y="389" width="0.0806%" height="15" fill="rgb(217,0,48)" fg:x="583" fg:w="1"/><text x="47.2282%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="47.0588%" y="389" width="0.0806%" height="15" fill="rgb(217,80,15)" fg:x="584" fg:w="1"/><text x="47.3088%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.0588%" y="373" width="0.0806%" height="15" fill="rgb(253,43,51)" fg:x="584" fg:w="1"/><text x="47.3088%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.0588%" y="357" width="0.0806%" height="15" fill="rgb(246,60,4)" fg:x="584" fg:w="1"/><text x="47.3088%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.0588%" y="341" width="0.0806%" height="15" fill="rgb(230,40,54)" fg:x="584" fg:w="1"/><text x="47.3088%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="47.1394%" y="389" width="0.2417%" height="15" fill="rgb(208,20,44)" fg:x="585" fg:w="3"/><text x="47.3894%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="47.1394%" y="373" width="0.2417%" height="15" fill="rgb(230,22,22)" fg:x="585" fg:w="3"/><text x="47.3894%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.2200%" y="357" width="0.1612%" height="15" fill="rgb(207,57,4)" fg:x="586" fg:w="2"/><text x="47.4700%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.3006%" y="341" width="0.0806%" height="15" fill="rgb(242,130,33)" fg:x="587" fg:w="1"/><text x="47.5506%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.3006%" y="325" width="0.0806%" height="15" fill="rgb(218,66,43)" fg:x="587" fg:w="1"/><text x="47.5506%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.3006%" y="309" width="0.0806%" height="15" fill="rgb(236,105,16)" fg:x="587" fg:w="1"/><text x="47.5506%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="47.3006%" y="293" width="0.0806%" height="15" fill="rgb(230,46,15)" fg:x="587" fg:w="1"/><text x="47.5506%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.7035%" y="325" width="0.0806%" height="15" fill="rgb(251,172,40)" fg:x="592" fg:w="1"/><text x="47.9535%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="47.3811%" y="373" width="0.4835%" height="15" fill="rgb(225,217,32)" fg:x="588" fg:w="6"/><text x="47.6311%" y="383.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="47.4617%" y="357" width="0.4029%" height="15" fill="rgb(243,10,29)" fg:x="589" fg:w="5"/><text x="47.7117%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.7035%" y="341" width="0.1612%" height="15" fill="rgb(207,102,10)" fg:x="592" fg:w="2"/><text x="47.9535%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="47.7840%" y="325" width="0.0806%" height="15" fill="rgb(241,125,5)" fg:x="593" fg:w="1"/><text x="48.0340%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.10%)</title><rect x="46.1724%" y="421" width="2.0951%" height="15" fill="rgb(230,125,29)" fg:x="573" fg:w="26"/><text x="46.4224%" y="431.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.37%)</title><rect x="46.8977%" y="405" width="1.3699%" height="15" fill="rgb(223,65,44)" fg:x="582" fg:w="17"/><text x="47.1477%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="47.3811%" y="389" width="0.8864%" height="15" fill="rgb(224,188,28)" fg:x="588" fg:w="11"/><text x="47.6311%" y="399.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="47.8646%" y="373" width="0.4029%" height="15" fill="rgb(254,197,27)" fg:x="594" fg:w="5"/><text x="48.1146%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.1869%" y="357" width="0.0806%" height="15" fill="rgb(220,200,25)" fg:x="598" fg:w="1"/><text x="48.4369%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.1869%" y="341" width="0.0806%" height="15" fill="rgb(239,225,54)" fg:x="598" fg:w="1"/><text x="48.4369%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.90%)</title><rect x="45.9307%" y="437" width="2.9009%" height="15" fill="rgb(211,59,40)" fg:x="570" fg:w="36"/><text x="46.1807%" y="447.50">se..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="48.2675%" y="421" width="0.5641%" height="15" fill="rgb(213,176,46)" fg:x="599" fg:w="7"/><text x="48.5175%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="48.5093%" y="405" width="0.3223%" height="15" fill="rgb(226,99,4)" fg:x="602" fg:w="4"/><text x="48.7593%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="48.5898%" y="389" width="0.2417%" height="15" fill="rgb(239,203,43)" fg:x="603" fg:w="3"/><text x="48.8398%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="48.6704%" y="373" width="0.1612%" height="15" fill="rgb(246,1,45)" fg:x="604" fg:w="2"/><text x="48.9204%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.7510%" y="357" width="0.0806%" height="15" fill="rgb(231,42,52)" fg:x="605" fg:w="1"/><text x="49.0010%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="48.7510%" y="341" width="0.0806%" height="15" fill="rgb(240,13,50)" fg:x="605" fg:w="1"/><text x="49.0010%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (43 samples, 3.46%)</title><rect x="45.5278%" y="453" width="3.4649%" height="15" fill="rgb(225,81,14)" fg:x="565" fg:w="43"/><text x="45.7778%" y="463.50">&lt;se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.8316%" y="437" width="0.1612%" height="15" fill="rgb(216,182,23)" fg:x="606" fg:w="2"/><text x="49.0816%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="48.8316%" y="421" width="0.1612%" height="15" fill="rgb(233,137,19)" fg:x="606" fg:w="2"/><text x="49.0816%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="48.8316%" y="405" width="0.1612%" height="15" fill="rgb(242,61,46)" fg:x="606" fg:w="2"/><text x="49.0816%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.9122%" y="389" width="0.0806%" height="15" fill="rgb(221,168,51)" fg:x="607" fg:w="1"/><text x="49.1622%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.9122%" y="373" width="0.0806%" height="15" fill="rgb(238,48,15)" fg:x="607" fg:w="1"/><text x="49.1622%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9122%" y="357" width="0.0806%" height="15" fill="rgb(216,13,16)" fg:x="607" fg:w="1"/><text x="49.1622%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.08%)</title><rect x="48.9927%" y="453" width="0.0806%" height="15" fill="rgb(223,185,34)" fg:x="608" fg:w="1"/><text x="49.2427%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9927%" y="437" width="0.0806%" height="15" fill="rgb(228,94,42)" fg:x="608" fg:w="1"/><text x="49.2427%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0733%" y="421" width="0.0806%" height="15" fill="rgb(218,166,43)" fg:x="609" fg:w="1"/><text x="49.3233%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.3956%" y="405" width="0.0806%" height="15" fill="rgb(232,30,50)" fg:x="613" fg:w="1"/><text x="49.6456%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4762%" y="389" width="0.0806%" height="15" fill="rgb(245,206,45)" fg:x="614" fg:w="1"/><text x="49.7262%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.7985%" y="373" width="0.0806%" height="15" fill="rgb(220,56,22)" fg:x="618" fg:w="1"/><text x="50.0485%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="49.9597%" y="357" width="0.1612%" height="15" fill="rgb(239,129,38)" fg:x="620" fg:w="2"/><text x="50.2097%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="49.0733%" y="453" width="1.1281%" height="15" fill="rgb(207,68,41)" fg:x="609" fg:w="14"/><text x="49.3233%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.13%)</title><rect x="49.0733%" y="437" width="1.1281%" height="15" fill="rgb(221,21,7)" fg:x="609" fg:w="14"/><text x="49.3233%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="49.1539%" y="421" width="1.0475%" height="15" fill="rgb(240,33,25)" fg:x="610" fg:w="13"/><text x="49.4039%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="49.4762%" y="405" width="0.7252%" height="15" fill="rgb(242,119,10)" fg:x="614" fg:w="9"/><text x="49.7262%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="49.5568%" y="389" width="0.6446%" height="15" fill="rgb(214,149,40)" fg:x="615" fg:w="8"/><text x="49.8068%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="49.8791%" y="373" width="0.3223%" height="15" fill="rgb(228,25,36)" fg:x="619" fg:w="4"/><text x="50.1291%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.1209%" y="357" width="0.0806%" height="15" fill="rgb(222,59,15)" fg:x="622" fg:w="1"/><text x="50.3709%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.1209%" y="341" width="0.0806%" height="15" fill="rgb(218,170,0)" fg:x="622" fg:w="1"/><text x="50.3709%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.2820%" y="389" width="0.1612%" height="15" fill="rgb(232,173,23)" fg:x="624" fg:w="2"/><text x="50.5320%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5238%" y="373" width="0.0806%" height="15" fill="rgb(218,116,1)" fg:x="627" fg:w="1"/><text x="50.7738%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.6044%" y="373" width="0.0806%" height="15" fill="rgb(207,34,4)" fg:x="628" fg:w="1"/><text x="50.8544%" y="383.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="50.7655%" y="357" width="0.4029%" height="15" fill="rgb(229,54,52)" fg:x="630" fg:w="5"/><text x="51.0155%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="51.1684%" y="357" width="0.2417%" height="15" fill="rgb(211,86,23)" fg:x="635" fg:w="3"/><text x="51.4184%" y="367.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="51.4907%" y="341" width="0.2417%" height="15" fill="rgb(254,153,34)" fg:x="639" fg:w="3"/><text x="51.7407%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="51.7325%" y="341" width="0.4029%" height="15" fill="rgb(219,220,14)" fg:x="642" fg:w="5"/><text x="51.9825%" y="351.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="51.8936%" y="325" width="0.2417%" height="15" fill="rgb(247,8,26)" fg:x="644" fg:w="3"/><text x="52.1436%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.1354%" y="309" width="0.0806%" height="15" fill="rgb(213,129,42)" fg:x="647" fg:w="1"/><text x="52.3854%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="52.1354%" y="341" width="0.1612%" height="15" fill="rgb(225,95,41)" fg:x="647" fg:w="2"/><text x="52.3854%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="52.1354%" y="325" width="0.1612%" height="15" fill="rgb(215,134,24)" fg:x="647" fg:w="2"/><text x="52.3854%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.2160%" y="309" width="0.0806%" height="15" fill="rgb(235,23,54)" fg:x="648" fg:w="1"/><text x="52.4660%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.2160%" y="293" width="0.0806%" height="15" fill="rgb(229,96,31)" fg:x="648" fg:w="1"/><text x="52.4660%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2160%" y="277" width="0.0806%" height="15" fill="rgb(206,111,12)" fg:x="648" fg:w="1"/><text x="52.4660%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2965%" y="325" width="0.0806%" height="15" fill="rgb(222,177,8)" fg:x="649" fg:w="1"/><text x="52.5465%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.18%)</title><rect x="50.2820%" y="421" width="2.1757%" height="15" fill="rgb(251,36,52)" fg:x="624" fg:w="27"/><text x="50.5320%" y="431.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (27 samples, 2.18%)</title><rect x="50.2820%" y="405" width="2.1757%" height="15" fill="rgb(216,182,29)" fg:x="624" fg:w="27"/><text x="50.5320%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (25 samples, 2.01%)</title><rect x="50.4432%" y="389" width="2.0145%" height="15" fill="rgb(241,145,50)" fg:x="626" fg:w="25"/><text x="50.6932%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 1.77%)</title><rect x="50.6849%" y="373" width="1.7728%" height="15" fill="rgb(231,71,35)" fg:x="629" fg:w="22"/><text x="50.9349%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="51.4102%" y="357" width="1.0475%" height="15" fill="rgb(218,22,17)" fg:x="638" fg:w="13"/><text x="51.6602%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="52.2965%" y="341" width="0.1612%" height="15" fill="rgb(225,227,6)" fg:x="649" fg:w="2"/><text x="52.5465%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.3771%" y="325" width="0.0806%" height="15" fill="rgb(224,204,17)" fg:x="650" fg:w="1"/><text x="52.6271%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.3771%" y="309" width="0.0806%" height="15" fill="rgb(227,61,28)" fg:x="650" fg:w="1"/><text x="52.6271%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4577%" y="421" width="0.0806%" height="15" fill="rgb(242,148,23)" fg:x="651" fg:w="1"/><text x="52.7077%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4577%" y="405" width="0.0806%" height="15" fill="rgb(237,105,33)" fg:x="651" fg:w="1"/><text x="52.7077%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="52.5383%" y="421" width="0.0806%" height="15" fill="rgb(238,218,40)" fg:x="652" fg:w="1"/><text x="52.7883%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.6189%" y="421" width="0.1612%" height="15" fill="rgb(209,126,11)" fg:x="653" fg:w="2"/><text x="52.8689%" y="431.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="52.7800%" y="421" width="0.0806%" height="15" fill="rgb(245,90,11)" fg:x="655" fg:w="1"/><text x="53.0300%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="52.7800%" y="405" width="0.0806%" height="15" fill="rgb(211,195,10)" fg:x="655" fg:w="1"/><text x="53.0300%" y="415.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="52.7800%" y="389" width="0.0806%" height="15" fill="rgb(231,45,45)" fg:x="655" fg:w="1"/><text x="53.0300%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="53.0218%" y="373" width="0.0806%" height="15" fill="rgb(246,100,43)" fg:x="658" fg:w="1"/><text x="53.2718%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="53.0218%" y="357" width="0.0806%" height="15" fill="rgb(241,193,8)" fg:x="658" fg:w="1"/><text x="53.2718%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="53.0218%" y="341" width="0.0806%" height="15" fill="rgb(208,76,19)" fg:x="658" fg:w="1"/><text x="53.2718%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="52.8606%" y="405" width="0.3223%" height="15" fill="rgb(223,69,40)" fg:x="656" fg:w="4"/><text x="53.1106%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="52.8606%" y="389" width="0.3223%" height="15" fill="rgb(207,120,39)" fg:x="656" fg:w="4"/><text x="53.1106%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.1023%" y="373" width="0.0806%" height="15" fill="rgb(212,209,28)" fg:x="659" fg:w="1"/><text x="53.3523%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.1829%" y="405" width="0.0806%" height="15" fill="rgb(246,82,29)" fg:x="660" fg:w="1"/><text x="53.4329%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (39 samples, 3.14%)</title><rect x="50.2015%" y="437" width="3.1426%" height="15" fill="rgb(239,6,40)" fg:x="623" fg:w="39"/><text x="50.4515%" y="447.50">&lt;ke..</text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="52.8606%" y="421" width="0.4835%" height="15" fill="rgb(228,181,35)" fg:x="656" fg:w="6"/><text x="53.1106%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="53.2635%" y="405" width="0.0806%" height="15" fill="rgb(238,151,2)" fg:x="661" fg:w="1"/><text x="53.5135%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.2635%" y="389" width="0.0806%" height="15" fill="rgb(236,94,18)" fg:x="661" fg:w="1"/><text x="53.5135%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2635%" y="373" width="0.0806%" height="15" fill="rgb(208,38,14)" fg:x="661" fg:w="1"/><text x="53.5135%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.5858%" y="405" width="0.0806%" height="15" fill="rgb(234,215,27)" fg:x="665" fg:w="1"/><text x="53.8358%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="53.6664%" y="405" width="0.3223%" height="15" fill="rgb(254,211,53)" fg:x="666" fg:w="4"/><text x="53.9164%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.9081%" y="389" width="0.0806%" height="15" fill="rgb(216,175,11)" fg:x="669" fg:w="1"/><text x="54.1581%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="53.9887%" y="405" width="0.1612%" height="15" fill="rgb(246,179,26)" fg:x="670" fg:w="2"/><text x="54.2387%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="54.0693%" y="389" width="0.0806%" height="15" fill="rgb(249,19,52)" fg:x="671" fg:w="1"/><text x="54.3193%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="54.1499%" y="405" width="0.0806%" height="15" fill="rgb(230,42,52)" fg:x="672" fg:w="1"/><text x="54.3999%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="54.1499%" y="389" width="0.0806%" height="15" fill="rgb(221,171,0)" fg:x="672" fg:w="1"/><text x="54.3999%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.4722%" y="357" width="0.0806%" height="15" fill="rgb(222,177,40)" fg:x="676" fg:w="1"/><text x="54.7222%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="54.2305%" y="405" width="0.4029%" height="15" fill="rgb(247,34,16)" fg:x="673" fg:w="5"/><text x="54.4805%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="54.3110%" y="389" width="0.3223%" height="15" fill="rgb(213,217,37)" fg:x="674" fg:w="4"/><text x="54.5610%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.4722%" y="373" width="0.1612%" height="15" fill="rgb(231,189,24)" fg:x="676" fg:w="2"/><text x="54.7222%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="54.5528%" y="357" width="0.0806%" height="15" fill="rgb(214,22,9)" fg:x="677" fg:w="1"/><text x="54.8028%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.8751%" y="373" width="0.0806%" height="15" fill="rgb(212,70,22)" fg:x="681" fg:w="1"/><text x="55.1251%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="54.9557%" y="373" width="0.0806%" height="15" fill="rgb(249,64,51)" fg:x="682" fg:w="1"/><text x="55.2057%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.0363%" y="357" width="0.2417%" height="15" fill="rgb(249,148,20)" fg:x="683" fg:w="3"/><text x="55.2863%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.1168%" y="341" width="0.1612%" height="15" fill="rgb(246,46,48)" fg:x="684" fg:w="2"/><text x="55.3668%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="55.4392%" y="325" width="0.0806%" height="15" fill="rgb(217,34,48)" fg:x="688" fg:w="1"/><text x="55.6892%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.6003%" y="309" width="0.2417%" height="15" fill="rgb(222,45,26)" fg:x="690" fg:w="3"/><text x="55.8503%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7615%" y="293" width="0.0806%" height="15" fill="rgb(230,201,36)" fg:x="692" fg:w="1"/><text x="56.0115%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="55.9226%" y="261" width="0.0806%" height="15" fill="rgb(217,30,43)" fg:x="694" fg:w="1"/><text x="56.1726%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.9226%" y="245" width="0.0806%" height="15" fill="rgb(230,197,40)" fg:x="694" fg:w="1"/><text x="56.1726%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (10 samples, 0.81%)</title><rect x="55.2780%" y="357" width="0.8058%" height="15" fill="rgb(239,181,18)" fg:x="686" fg:w="10"/><text x="55.5280%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="55.3586%" y="341" width="0.7252%" height="15" fill="rgb(222,60,39)" fg:x="687" fg:w="9"/><text x="55.6086%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="55.5197%" y="325" width="0.5641%" height="15" fill="rgb(210,60,22)" fg:x="689" fg:w="7"/><text x="55.7697%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="55.8421%" y="309" width="0.2417%" height="15" fill="rgb(239,213,48)" fg:x="693" fg:w="3"/><text x="56.0921%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="55.9226%" y="293" width="0.1612%" height="15" fill="rgb(253,214,23)" fg:x="694" fg:w="2"/><text x="56.1726%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="55.9226%" y="277" width="0.1612%" height="15" fill="rgb(211,98,45)" fg:x="694" fg:w="2"/><text x="56.1726%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.0032%" y="261" width="0.0806%" height="15" fill="rgb(239,130,44)" fg:x="695" fg:w="1"/><text x="56.2532%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="56.4867%" y="325" width="0.3223%" height="15" fill="rgb(222,181,35)" fg:x="701" fg:w="4"/><text x="56.7367%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.6479%" y="309" width="0.1612%" height="15" fill="rgb(219,219,49)" fg:x="703" fg:w="2"/><text x="56.8979%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8896%" y="293" width="0.0806%" height="15" fill="rgb(227,161,51)" fg:x="706" fg:w="1"/><text x="57.1396%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="56.8896%" y="309" width="0.1612%" height="15" fill="rgb(239,112,27)" fg:x="706" fg:w="2"/><text x="57.1396%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="56.9702%" y="293" width="0.0806%" height="15" fill="rgb(248,122,18)" fg:x="707" fg:w="1"/><text x="57.2202%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (28 samples, 2.26%)</title><rect x="55.0363%" y="373" width="2.2562%" height="15" fill="rgb(245,130,23)" fg:x="683" fg:w="28"/><text x="55.2863%" y="383.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.21%)</title><rect x="56.0838%" y="357" width="1.2087%" height="15" fill="rgb(211,225,28)" fg:x="696" fg:w="15"/><text x="56.3338%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="56.2450%" y="341" width="1.0475%" height="15" fill="rgb(242,105,44)" fg:x="698" fg:w="13"/><text x="56.4950%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="56.8090%" y="325" width="0.4835%" height="15" fill="rgb(216,183,46)" fg:x="705" fg:w="6"/><text x="57.0590%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="57.0508%" y="309" width="0.2417%" height="15" fill="rgb(227,112,9)" fg:x="708" fg:w="3"/><text x="57.3008%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (34 samples, 2.74%)</title><rect x="54.7945%" y="389" width="2.7397%" height="15" fill="rgb(244,21,0)" fg:x="680" fg:w="34"/><text x="55.0445%" y="399.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="57.2925%" y="373" width="0.2417%" height="15" fill="rgb(236,185,14)" fg:x="711" fg:w="3"/><text x="57.5425%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.3731%" y="357" width="0.1612%" height="15" fill="rgb(236,170,30)" fg:x="712" fg:w="2"/><text x="57.6231%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5342%" y="389" width="0.0806%" height="15" fill="rgb(209,198,51)" fg:x="714" fg:w="1"/><text x="57.7842%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (57 samples, 4.59%)</title><rect x="53.3441%" y="437" width="4.5931%" height="15" fill="rgb(205,171,26)" fg:x="662" fg:w="57"/><text x="53.5941%" y="447.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (57 samples, 4.59%)</title><rect x="53.3441%" y="421" width="4.5931%" height="15" fill="rgb(246,41,49)" fg:x="662" fg:w="57"/><text x="53.5941%" y="431.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (41 samples, 3.30%)</title><rect x="54.6334%" y="405" width="3.3038%" height="15" fill="rgb(240,229,12)" fg:x="678" fg:w="41"/><text x="54.8834%" y="415.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="57.6148%" y="389" width="0.3223%" height="15" fill="rgb(212,8,54)" fg:x="715" fg:w="4"/><text x="57.8648%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="57.7760%" y="373" width="0.1612%" height="15" fill="rgb(230,114,13)" fg:x="717" fg:w="2"/><text x="58.0260%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.9847%" y="229" width="0.0806%" height="15" fill="rgb(229,130,28)" fg:x="732" fg:w="1"/><text x="59.2347%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.9847%" y="213" width="0.0806%" height="15" fill="rgb(206,139,15)" fg:x="732" fg:w="1"/><text x="59.2347%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.9847%" y="197" width="0.0806%" height="15" fill="rgb(241,188,35)" fg:x="732" fg:w="1"/><text x="59.2347%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.9847%" y="181" width="0.0806%" height="15" fill="rgb(208,224,26)" fg:x="732" fg:w="1"/><text x="59.2347%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="58.9847%" y="261" width="0.1612%" height="15" fill="rgb(251,131,28)" fg:x="732" fg:w="2"/><text x="59.2347%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.9847%" y="245" width="0.1612%" height="15" fill="rgb(208,153,1)" fg:x="732" fg:w="2"/><text x="59.2347%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.0653%" y="229" width="0.0806%" height="15" fill="rgb(234,33,36)" fg:x="733" fg:w="1"/><text x="59.3153%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.1459%" y="261" width="0.0806%" height="15" fill="rgb(246,42,29)" fg:x="734" fg:w="1"/><text x="59.3959%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.1459%" y="245" width="0.0806%" height="15" fill="rgb(251,114,16)" fg:x="734" fg:w="1"/><text x="59.3959%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="58.7429%" y="293" width="0.5641%" height="15" fill="rgb(233,13,38)" fg:x="729" fg:w="7"/><text x="58.9929%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="58.8235%" y="277" width="0.4835%" height="15" fill="rgb(247,120,19)" fg:x="730" fg:w="6"/><text x="59.0735%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.2264%" y="261" width="0.0806%" height="15" fill="rgb(205,11,16)" fg:x="735" fg:w="1"/><text x="59.4764%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.3070%" y="245" width="0.0806%" height="15" fill="rgb(228,185,19)" fg:x="736" fg:w="1"/><text x="59.5570%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3070%" y="229" width="0.0806%" height="15" fill="rgb(239,88,52)" fg:x="736" fg:w="1"/><text x="59.5570%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="59.3876%" y="245" width="0.1612%" height="15" fill="rgb(219,23,1)" fg:x="737" fg:w="2"/><text x="59.6376%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="59.3876%" y="229" width="0.1612%" height="15" fill="rgb(253,177,16)" fg:x="737" fg:w="2"/><text x="59.6376%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="59.3070%" y="277" width="0.4029%" height="15" fill="rgb(225,150,40)" fg:x="736" fg:w="5"/><text x="59.5570%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="59.3070%" y="261" width="0.4029%" height="15" fill="rgb(208,108,30)" fg:x="736" fg:w="5"/><text x="59.5570%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.5488%" y="245" width="0.1612%" height="15" fill="rgb(214,122,4)" fg:x="739" fg:w="2"/><text x="59.7988%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.5488%" y="229" width="0.1612%" height="15" fill="rgb(229,74,37)" fg:x="739" fg:w="2"/><text x="59.7988%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6293%" y="213" width="0.0806%" height="15" fill="rgb(233,61,41)" fg:x="740" fg:w="1"/><text x="59.8793%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.7099%" y="277" width="0.0806%" height="15" fill="rgb(238,191,5)" fg:x="741" fg:w="1"/><text x="59.9599%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7099%" y="261" width="0.0806%" height="15" fill="rgb(233,78,24)" fg:x="741" fg:w="1"/><text x="59.9599%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.21%)</title><rect x="58.6624%" y="309" width="1.2087%" height="15" fill="rgb(211,142,8)" fg:x="728" fg:w="15"/><text x="58.9124%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="59.3070%" y="293" width="0.5641%" height="15" fill="rgb(253,38,53)" fg:x="736" fg:w="7"/><text x="59.5570%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7905%" y="277" width="0.0806%" height="15" fill="rgb(234,63,51)" fg:x="742" fg:w="1"/><text x="60.0405%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="59.8711%" y="309" width="0.2417%" height="15" fill="rgb(205,23,31)" fg:x="743" fg:w="3"/><text x="60.1211%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.0322%" y="293" width="0.0806%" height="15" fill="rgb(210,184,50)" fg:x="745" fg:w="1"/><text x="60.2822%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.77%)</title><rect x="58.5012%" y="341" width="1.7728%" height="15" fill="rgb(222,112,26)" fg:x="726" fg:w="22"/><text x="58.7512%" y="351.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.69%)</title><rect x="58.5818%" y="325" width="1.6922%" height="15" fill="rgb(250,98,18)" fg:x="727" fg:w="21"/><text x="58.8318%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.1128%" y="309" width="0.1612%" height="15" fill="rgb(250,34,12)" fg:x="746" fg:w="2"/><text x="60.3628%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.1934%" y="293" width="0.0806%" height="15" fill="rgb(236,141,30)" fg:x="747" fg:w="1"/><text x="60.4434%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.1934%" y="277" width="0.0806%" height="15" fill="rgb(246,134,38)" fg:x="747" fg:w="1"/><text x="60.4434%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.34%)</title><rect x="58.0983%" y="373" width="2.3368%" height="15" fill="rgb(240,114,4)" fg:x="721" fg:w="29"/><text x="58.3483%" y="383.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.34%)</title><rect x="58.0983%" y="357" width="2.3368%" height="15" fill="rgb(243,113,39)" fg:x="721" fg:w="29"/><text x="58.3483%" y="367.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="60.2740%" y="341" width="0.1612%" height="15" fill="rgb(239,215,4)" fg:x="748" fg:w="2"/><text x="60.5240%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.2740%" y="325" width="0.1612%" height="15" fill="rgb(236,229,45)" fg:x="748" fg:w="2"/><text x="60.5240%" y="335.50"></text></g><g><title>engine::session::state::State::close (193 samples, 15.55%)</title><rect x="44.9637%" y="533" width="15.5520%" height="15" fill="rgb(242,2,6)" fg:x="558" fg:w="193"/><text x="45.2137%" y="543.50">engine::session::state::..</text></g><g><title>engine::session::state::State::flush_entities (193 samples, 15.55%)</title><rect x="44.9637%" y="517" width="15.5520%" height="15" fill="rgb(239,108,21)" fg:x="558" fg:w="193"/><text x="45.2137%" y="527.50">engine::session::state::..</text></g><g><title>core::iter::adapters::try_process (188 samples, 15.15%)</title><rect x="45.3666%" y="501" width="15.1491%" height="15" fill="rgb(215,168,34)" fg:x="563" fg:w="188"/><text x="45.6166%" y="511.50">core::iter::adapters::t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (187 samples, 15.07%)</title><rect x="45.4472%" y="485" width="15.0685%" height="15" fill="rgb(238,31,17)" fg:x="564" fg:w="187"/><text x="45.6972%" y="495.50">&lt;alloc::vec::Vec&lt;T&gt; as ..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (187 samples, 15.07%)</title><rect x="45.4472%" y="469" width="15.0685%" height="15" fill="rgb(220,133,11)" fg:x="564" fg:w="187"/><text x="45.6972%" y="479.50">engine::session::state:..</text></g><g><title>kernel::model::any_entity_changes (128 samples, 10.31%)</title><rect x="50.2015%" y="453" width="10.3143%" height="15" fill="rgb(212,158,23)" fg:x="623" fg:w="128"/><text x="50.4515%" y="463.50">kernel::model::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (32 samples, 2.58%)</title><rect x="57.9371%" y="437" width="2.5786%" height="15" fill="rgb(223,172,7)" fg:x="719" fg:w="32"/><text x="58.1871%" y="447.50">se..</text></g><g><title>serde_json::de::from_trait (32 samples, 2.58%)</title><rect x="57.9371%" y="421" width="2.5786%" height="15" fill="rgb(244,3,52)" fg:x="719" fg:w="32"/><text x="58.1871%" y="431.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.58%)</title><rect x="57.9371%" y="405" width="2.5786%" height="15" fill="rgb(207,69,27)" fg:x="719" fg:w="32"/><text x="58.1871%" y="415.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.58%)</title><rect x="57.9371%" y="389" width="2.5786%" height="15" fill="rgb(213,136,45)" fg:x="719" fg:w="32"/><text x="58.1871%" y="399.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4351%" y="373" width="0.0806%" height="15" fill="rgb(218,79,17)" fg:x="750" fg:w="1"/><text x="60.6851%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4351%" y="357" width="0.0806%" height="15" fill="rgb(216,106,36)" fg:x="750" fg:w="1"/><text x="60.6851%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.4351%" y="341" width="0.0806%" height="15" fill="rgb(251,27,45)" fg:x="750" fg:w="1"/><text x="60.6851%" y="351.50"></text></g><g><title>engine::session::Session::close (199 samples, 16.04%)</title><rect x="44.5608%" y="549" width="16.0355%" height="15" fill="rgb(232,21,34)" fg:x="553" fg:w="199"/><text x="44.8108%" y="559.50">engine::session::Session:..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="60.5157%" y="533" width="0.0806%" height="15" fill="rgb(249,191,16)" fg:x="751" fg:w="1"/><text x="60.7657%" y="543.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="60.5157%" y="517" width="0.0806%" height="15" fill="rgb(224,88,20)" fg:x="751" fg:w="1"/><text x="60.7657%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="60.5157%" y="501" width="0.0806%" height="15" fill="rgb(237,93,27)" fg:x="751" fg:w="1"/><text x="60.7657%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="60.5157%" y="485" width="0.0806%" height="15" fill="rgb(226,198,48)" fg:x="751" fg:w="1"/><text x="60.7657%" y="495.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="60.5157%" y="469" width="0.0806%" height="15" fill="rgb(207,162,53)" fg:x="751" fg:w="1"/><text x="60.7657%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="60.6769%" y="485" width="0.0806%" height="15" fill="rgb(207,169,9)" fg:x="753" fg:w="1"/><text x="60.9269%" y="495.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="60.7575%" y="485" width="0.1612%" height="15" fill="rgb(224,166,46)" fg:x="754" fg:w="2"/><text x="61.0075%" y="495.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="60.7575%" y="469" width="0.1612%" height="15" fill="rgb(233,26,6)" fg:x="754" fg:w="2"/><text x="61.0075%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="60.7575%" y="453" width="0.1612%" height="15" fill="rgb(218,106,45)" fg:x="754" fg:w="2"/><text x="61.0075%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="60.8380%" y="437" width="0.0806%" height="15" fill="rgb(240,217,4)" fg:x="755" fg:w="1"/><text x="61.0880%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="60.9186%" y="485" width="0.0806%" height="15" fill="rgb(246,171,10)" fg:x="756" fg:w="1"/><text x="61.1686%" y="495.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (5 samples, 0.40%)</title><rect x="60.6769%" y="517" width="0.4029%" height="15" fill="rgb(223,197,30)" fg:x="753" fg:w="5"/><text x="60.9269%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="60.6769%" y="501" width="0.4029%" height="15" fill="rgb(207,92,16)" fg:x="753" fg:w="5"/><text x="60.9269%" y="511.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="60.9992%" y="485" width="0.0806%" height="15" fill="rgb(211,6,44)" fg:x="757" fg:w="1"/><text x="61.2492%" y="495.50"></text></g><g><title>&lt;plugins_rune::parser::EditActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="60.9992%" y="469" width="0.0806%" height="15" fill="rgb(219,139,2)" fg:x="757" fg:w="1"/><text x="61.2492%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="61.2409%" y="501" width="0.0806%" height="15" fill="rgb(224,103,21)" fg:x="760" fg:w="1"/><text x="61.4909%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.2409%" y="485" width="0.0806%" height="15" fill="rgb(254,110,48)" fg:x="760" fg:w="1"/><text x="61.4909%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.2409%" y="469" width="0.0806%" height="15" fill="rgb(212,88,19)" fg:x="760" fg:w="1"/><text x="61.4909%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.2409%" y="453" width="0.0806%" height="15" fill="rgb(248,103,6)" fg:x="760" fg:w="1"/><text x="61.4909%" y="463.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="61.2409%" y="437" width="0.0806%" height="15" fill="rgb(214,53,46)" fg:x="760" fg:w="1"/><text x="61.4909%" y="447.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (1 samples, 0.08%)</title><rect x="61.2409%" y="421" width="0.0806%" height="15" fill="rgb(236,190,24)" fg:x="760" fg:w="1"/><text x="61.4909%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="61.2409%" y="405" width="0.0806%" height="15" fill="rgb(254,58,28)" fg:x="760" fg:w="1"/><text x="61.4909%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="61.2409%" y="389" width="0.0806%" height="15" fill="rgb(243,63,27)" fg:x="760" fg:w="1"/><text x="61.4909%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="61.2409%" y="373" width="0.0806%" height="15" fill="rgb(206,81,20)" fg:x="760" fg:w="1"/><text x="61.4909%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="61.2409%" y="357" width="0.0806%" height="15" fill="rgb(252,69,51)" fg:x="760" fg:w="1"/><text x="61.4909%" y="367.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.08%)</title><rect x="61.2409%" y="341" width="0.0806%" height="15" fill="rgb(222,213,4)" fg:x="760" fg:w="1"/><text x="61.4909%" y="351.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="61.2409%" y="325" width="0.0806%" height="15" fill="rgb(226,198,12)" fg:x="760" fg:w="1"/><text x="61.4909%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="61.2409%" y="309" width="0.0806%" height="15" fill="rgb(248,115,11)" fg:x="760" fg:w="1"/><text x="61.4909%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.2409%" y="293" width="0.0806%" height="15" fill="rgb(221,148,54)" fg:x="760" fg:w="1"/><text x="61.4909%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.2409%" y="277" width="0.0806%" height="15" fill="rgb(214,209,51)" fg:x="760" fg:w="1"/><text x="61.4909%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.2409%" y="261" width="0.0806%" height="15" fill="rgb(249,116,53)" fg:x="760" fg:w="1"/><text x="61.4909%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.2409%" y="245" width="0.0806%" height="15" fill="rgb(248,170,1)" fg:x="760" fg:w="1"/><text x="61.4909%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.2409%" y="229" width="0.0806%" height="15" fill="rgb(244,105,10)" fg:x="760" fg:w="1"/><text x="61.4909%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.2409%" y="213" width="0.0806%" height="15" fill="rgb(229,100,5)" fg:x="760" fg:w="1"/><text x="61.4909%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.2409%" y="197" width="0.0806%" height="15" fill="rgb(233,221,39)" fg:x="760" fg:w="1"/><text x="61.4909%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.2409%" y="181" width="0.0806%" height="15" fill="rgb(233,88,21)" fg:x="760" fg:w="1"/><text x="61.4909%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="61.2409%" y="165" width="0.0806%" height="15" fill="rgb(206,13,0)" fg:x="760" fg:w="1"/><text x="61.4909%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="61.2409%" y="149" width="0.0806%" height="15" fill="rgb(242,15,35)" fg:x="760" fg:w="1"/><text x="61.4909%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="61.2409%" y="133" width="0.0806%" height="15" fill="rgb(247,142,41)" fg:x="760" fg:w="1"/><text x="61.4909%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="61.2409%" y="117" width="0.0806%" height="15" fill="rgb(245,51,29)" fg:x="760" fg:w="1"/><text x="61.4909%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="61.2409%" y="101" width="0.0806%" height="15" fill="rgb(228,209,43)" fg:x="760" fg:w="1"/><text x="61.4909%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="61.2409%" y="85" width="0.0806%" height="15" fill="rgb(233,185,9)" fg:x="760" fg:w="1"/><text x="61.4909%" y="95.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="61.2409%" y="69" width="0.0806%" height="15" fill="rgb(226,93,0)" fg:x="760" fg:w="1"/><text x="61.4909%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Perform&gt; (1 samples, 0.08%)</title><rect x="61.3215%" y="501" width="0.0806%" height="15" fill="rgb(245,194,43)" fg:x="761" fg:w="1"/><text x="61.5715%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.3215%" y="485" width="0.0806%" height="15" fill="rgb(211,145,34)" fg:x="761" fg:w="1"/><text x="61.5715%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.4827%" y="485" width="0.0806%" height="15" fill="rgb(231,228,28)" fg:x="763" fg:w="1"/><text x="61.7327%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5633%" y="485" width="0.0806%" height="15" fill="rgb(236,149,4)" fg:x="764" fg:w="1"/><text x="61.8133%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="61.6438%" y="485" width="0.0806%" height="15" fill="rgb(234,114,38)" fg:x="765" fg:w="1"/><text x="61.8938%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::logs::SessionSubscriber&gt; (1 samples, 0.08%)</title><rect x="61.6438%" y="469" width="0.0806%" height="15" fill="rgb(246,132,51)" fg:x="765" fg:w="1"/><text x="61.8938%" y="479.50"></text></g><g><title>chrono::offset::utc::Utc::now (2 samples, 0.16%)</title><rect x="61.7244%" y="485" width="0.1612%" height="15" fill="rgb(251,137,22)" fg:x="766" fg:w="2"/><text x="61.9744%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="61.8050%" y="469" width="0.0806%" height="15" fill="rgb(243,59,52)" fg:x="767" fg:w="1"/><text x="62.0550%" y="479.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="61.8050%" y="453" width="0.0806%" height="15" fill="rgb(239,56,28)" fg:x="767" fg:w="1"/><text x="62.0550%" y="463.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (7 samples, 0.56%)</title><rect x="61.8856%" y="485" width="0.5641%" height="15" fill="rgb(218,168,27)" fg:x="768" fg:w="7"/><text x="62.1356%" y="495.50"></text></g><g><title>tracing_core::callsite::register_dispatch (7 samples, 0.56%)</title><rect x="61.8856%" y="469" width="0.5641%" height="15" fill="rgb(232,165,11)" fg:x="768" fg:w="7"/><text x="62.1356%" y="479.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (7 samples, 0.56%)</title><rect x="61.8856%" y="453" width="0.5641%" height="15" fill="rgb(253,55,41)" fg:x="768" fg:w="7"/><text x="62.1356%" y="463.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (5 samples, 0.40%)</title><rect x="62.0467%" y="437" width="0.4029%" height="15" fill="rgb(233,206,24)" fg:x="770" fg:w="5"/><text x="62.2967%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.6914%" y="405" width="0.0806%" height="15" fill="rgb(220,199,8)" fg:x="778" fg:w="1"/><text x="62.9414%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7720%" y="357" width="0.0806%" height="15" fill="rgb(254,65,26)" fg:x="779" fg:w="1"/><text x="63.0220%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="62.7720%" y="373" width="0.2417%" height="15" fill="rgb(253,102,23)" fg:x="779" fg:w="3"/><text x="63.0220%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.8525%" y="357" width="0.1612%" height="15" fill="rgb(231,103,35)" fg:x="780" fg:w="2"/><text x="63.1025%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.8525%" y="341" width="0.1612%" height="15" fill="rgb(238,26,10)" fg:x="780" fg:w="2"/><text x="63.1025%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.9331%" y="325" width="0.0806%" height="15" fill="rgb(234,191,34)" fg:x="781" fg:w="1"/><text x="63.1831%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.0943%" y="277" width="0.0806%" height="15" fill="rgb(206,210,9)" fg:x="783" fg:w="1"/><text x="63.3443%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.0943%" y="261" width="0.0806%" height="15" fill="rgb(219,155,3)" fg:x="783" fg:w="1"/><text x="63.3443%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.0137%" y="309" width="0.2417%" height="15" fill="rgb(221,62,52)" fg:x="782" fg:w="3"/><text x="63.2637%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.0943%" y="293" width="0.1612%" height="15" fill="rgb(215,197,36)" fg:x="783" fg:w="2"/><text x="63.3443%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1749%" y="277" width="0.0806%" height="15" fill="rgb(226,222,6)" fg:x="784" fg:w="1"/><text x="63.4249%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1749%" y="261" width="0.0806%" height="15" fill="rgb(215,58,28)" fg:x="784" fg:w="1"/><text x="63.4249%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.1749%" y="245" width="0.0806%" height="15" fill="rgb(212,148,2)" fg:x="784" fg:w="1"/><text x="63.4249%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.1749%" y="229" width="0.0806%" height="15" fill="rgb(208,21,42)" fg:x="784" fg:w="1"/><text x="63.4249%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.1749%" y="213" width="0.0806%" height="15" fill="rgb(209,107,26)" fg:x="784" fg:w="1"/><text x="63.4249%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1749%" y="197" width="0.0806%" height="15" fill="rgb(254,60,47)" fg:x="784" fg:w="1"/><text x="63.4249%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1749%" y="181" width="0.0806%" height="15" fill="rgb(207,226,45)" fg:x="784" fg:w="1"/><text x="63.4249%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.1749%" y="165" width="0.0806%" height="15" fill="rgb(223,124,22)" fg:x="784" fg:w="1"/><text x="63.4249%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.1749%" y="149" width="0.0806%" height="15" fill="rgb(240,162,13)" fg:x="784" fg:w="1"/><text x="63.4249%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.1749%" y="133" width="0.0806%" height="15" fill="rgb(244,199,31)" fg:x="784" fg:w="1"/><text x="63.4249%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.1749%" y="117" width="0.0806%" height="15" fill="rgb(207,92,16)" fg:x="784" fg:w="1"/><text x="63.4249%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.1749%" y="101" width="0.0806%" height="15" fill="rgb(215,31,19)" fg:x="784" fg:w="1"/><text x="63.4249%" y="111.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.2554%" y="309" width="0.0806%" height="15" fill="rgb(245,118,14)" fg:x="785" fg:w="1"/><text x="63.5054%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2554%" y="293" width="0.0806%" height="15" fill="rgb(248,12,46)" fg:x="785" fg:w="1"/><text x="63.5054%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.3360%" y="293" width="0.1612%" height="15" fill="rgb(209,119,0)" fg:x="786" fg:w="2"/><text x="63.5860%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.4166%" y="277" width="0.0806%" height="15" fill="rgb(254,51,44)" fg:x="787" fg:w="1"/><text x="63.6666%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.4972%" y="229" width="0.0806%" height="15" fill="rgb(253,182,35)" fg:x="788" fg:w="1"/><text x="63.7472%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.4972%" y="213" width="0.0806%" height="15" fill="rgb(205,198,39)" fg:x="788" fg:w="1"/><text x="63.7472%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="63.3360%" y="309" width="0.4029%" height="15" fill="rgb(251,175,48)" fg:x="786" fg:w="5"/><text x="63.5860%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.4972%" y="293" width="0.2417%" height="15" fill="rgb(239,38,17)" fg:x="788" fg:w="3"/><text x="63.7472%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.4972%" y="277" width="0.2417%" height="15" fill="rgb(212,101,8)" fg:x="788" fg:w="3"/><text x="63.7472%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="63.4972%" y="261" width="0.2417%" height="15" fill="rgb(228,35,17)" fg:x="788" fg:w="3"/><text x="63.7472%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.4972%" y="245" width="0.2417%" height="15" fill="rgb(214,95,8)" fg:x="788" fg:w="3"/><text x="63.7472%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.5778%" y="229" width="0.1612%" height="15" fill="rgb(210,176,35)" fg:x="789" fg:w="2"/><text x="63.8278%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.5778%" y="213" width="0.1612%" height="15" fill="rgb(226,4,3)" fg:x="789" fg:w="2"/><text x="63.8278%" y="223.50"></text></g><g><title>kernel::model::EntityPtr::new_from_entity (1 samples, 0.08%)</title><rect x="63.7389%" y="309" width="0.0806%" height="15" fill="rgb(232,133,14)" fg:x="791" fg:w="1"/><text x="63.9889%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.9807%" y="181" width="0.0806%" height="15" fill="rgb(250,191,8)" fg:x="794" fg:w="1"/><text x="64.2307%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9807%" y="165" width="0.0806%" height="15" fill="rgb(213,12,45)" fg:x="794" fg:w="1"/><text x="64.2307%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.9807%" y="149" width="0.0806%" height="15" fill="rgb(233,78,26)" fg:x="794" fg:w="1"/><text x="64.2307%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.9807%" y="133" width="0.0806%" height="15" fill="rgb(245,222,11)" fg:x="794" fg:w="1"/><text x="64.2307%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9807%" y="117" width="0.0806%" height="15" fill="rgb(216,174,12)" fg:x="794" fg:w="1"/><text x="64.2307%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.9807%" y="101" width="0.0806%" height="15" fill="rgb(213,15,9)" fg:x="794" fg:w="1"/><text x="64.2307%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.9807%" y="85" width="0.0806%" height="15" fill="rgb(238,103,32)" fg:x="794" fg:w="1"/><text x="64.2307%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9807%" y="69" width="0.0806%" height="15" fill="rgb(245,85,15)" fg:x="794" fg:w="1"/><text x="64.2307%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="63.9807%" y="213" width="0.3223%" height="15" fill="rgb(254,204,5)" fg:x="794" fg:w="4"/><text x="64.2307%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="63.9807%" y="197" width="0.3223%" height="15" fill="rgb(231,178,15)" fg:x="794" fg:w="4"/><text x="64.2307%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="64.0612%" y="181" width="0.2417%" height="15" fill="rgb(248,151,3)" fg:x="795" fg:w="3"/><text x="64.3112%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.0612%" y="165" width="0.2417%" height="15" fill="rgb(250,139,13)" fg:x="795" fg:w="3"/><text x="64.3112%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.0612%" y="149" width="0.2417%" height="15" fill="rgb(243,107,53)" fg:x="795" fg:w="3"/><text x="64.3112%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.0612%" y="133" width="0.2417%" height="15" fill="rgb(232,81,15)" fg:x="795" fg:w="3"/><text x="64.3112%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.1418%" y="117" width="0.1612%" height="15" fill="rgb(225,187,48)" fg:x="796" fg:w="2"/><text x="64.3918%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1418%" y="101" width="0.1612%" height="15" fill="rgb(205,116,12)" fg:x="796" fg:w="2"/><text x="64.3918%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="64.1418%" y="85" width="0.1612%" height="15" fill="rgb(220,222,31)" fg:x="796" fg:w="2"/><text x="64.3918%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="64.1418%" y="69" width="0.1612%" height="15" fill="rgb(233,187,49)" fg:x="796" fg:w="2"/><text x="64.3918%" y="79.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.1418%" y="53" width="0.1612%" height="15" fill="rgb(211,168,53)" fg:x="796" fg:w="2"/><text x="64.3918%" y="63.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3030%" y="149" width="0.0806%" height="15" fill="rgb(206,160,16)" fg:x="798" fg:w="1"/><text x="64.5530%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="64.3030%" y="213" width="0.2417%" height="15" fill="rgb(254,164,13)" fg:x="798" fg:w="3"/><text x="64.5530%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="64.3030%" y="197" width="0.2417%" height="15" fill="rgb(229,45,30)" fg:x="798" fg:w="3"/><text x="64.5530%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="64.3030%" y="181" width="0.2417%" height="15" fill="rgb(237,32,10)" fg:x="798" fg:w="3"/><text x="64.5530%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="64.3030%" y="165" width="0.2417%" height="15" fill="rgb(251,20,47)" fg:x="798" fg:w="3"/><text x="64.5530%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="64.3836%" y="149" width="0.1612%" height="15" fill="rgb(251,116,12)" fg:x="799" fg:w="2"/><text x="64.6336%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="64.3836%" y="133" width="0.1612%" height="15" fill="rgb(214,227,27)" fg:x="799" fg:w="2"/><text x="64.6336%" y="143.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.3836%" y="117" width="0.1612%" height="15" fill="rgb(248,10,53)" fg:x="799" fg:w="2"/><text x="64.6336%" y="127.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="64.5447%" y="165" width="0.0806%" height="15" fill="rgb(221,176,25)" fg:x="801" fg:w="1"/><text x="64.7947%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="64.5447%" y="149" width="0.0806%" height="15" fill="rgb(205,70,46)" fg:x="801" fg:w="1"/><text x="64.7947%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.5447%" y="133" width="0.0806%" height="15" fill="rgb(217,45,38)" fg:x="801" fg:w="1"/><text x="64.7947%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5447%" y="117" width="0.0806%" height="15" fill="rgb(243,6,54)" fg:x="801" fg:w="1"/><text x="64.7947%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.5447%" y="101" width="0.0806%" height="15" fill="rgb(242,76,23)" fg:x="801" fg:w="1"/><text x="64.7947%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.5447%" y="85" width="0.0806%" height="15" fill="rgb(239,166,0)" fg:x="801" fg:w="1"/><text x="64.7947%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5447%" y="69" width="0.0806%" height="15" fill="rgb(238,174,32)" fg:x="801" fg:w="1"/><text x="64.7947%" y="79.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.5447%" y="53" width="0.0806%" height="15" fill="rgb(238,124,44)" fg:x="801" fg:w="1"/><text x="64.7947%" y="63.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.5447%" y="37" width="0.0806%" height="15" fill="rgb(206,185,9)" fg:x="801" fg:w="1"/><text x="64.7947%" y="47.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.89%)</title><rect x="63.9807%" y="261" width="0.8864%" height="15" fill="rgb(215,157,17)" fg:x="794" fg:w="11"/><text x="64.2307%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="63.9807%" y="245" width="0.8864%" height="15" fill="rgb(251,17,29)" fg:x="794" fg:w="11"/><text x="64.2307%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.89%)</title><rect x="63.9807%" y="229" width="0.8864%" height="15" fill="rgb(227,113,27)" fg:x="794" fg:w="11"/><text x="64.2307%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="64.5447%" y="213" width="0.3223%" height="15" fill="rgb(217,226,24)" fg:x="801" fg:w="4"/><text x="64.7947%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="64.5447%" y="197" width="0.3223%" height="15" fill="rgb(251,99,38)" fg:x="801" fg:w="4"/><text x="64.7947%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="64.5447%" y="181" width="0.3223%" height="15" fill="rgb(231,147,19)" fg:x="801" fg:w="4"/><text x="64.7947%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.6253%" y="165" width="0.2417%" height="15" fill="rgb(230,86,8)" fg:x="802" fg:w="3"/><text x="64.8753%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.6253%" y="149" width="0.2417%" height="15" fill="rgb(237,159,39)" fg:x="802" fg:w="3"/><text x="64.8753%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="64.7059%" y="133" width="0.1612%" height="15" fill="rgb(247,179,47)" fg:x="803" fg:w="2"/><text x="64.9559%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.7059%" y="117" width="0.1612%" height="15" fill="rgb(253,152,26)" fg:x="803" fg:w="2"/><text x="64.9559%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.7865%" y="101" width="0.0806%" height="15" fill="rgb(222,211,15)" fg:x="804" fg:w="1"/><text x="65.0365%" y="111.50"></text></g><g><title>kernel::model::entity::Entity::from_value (14 samples, 1.13%)</title><rect x="63.8195%" y="309" width="1.1281%" height="15" fill="rgb(236,193,6)" fg:x="792" fg:w="14"/><text x="64.0695%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.13%)</title><rect x="63.8195%" y="293" width="1.1281%" height="15" fill="rgb(226,206,10)" fg:x="792" fg:w="14"/><text x="64.0695%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.13%)</title><rect x="63.8195%" y="277" width="1.1281%" height="15" fill="rgb(213,125,22)" fg:x="792" fg:w="14"/><text x="64.0695%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.8670%" y="261" width="0.0806%" height="15" fill="rgb(221,66,28)" fg:x="805" fg:w="1"/><text x="65.1170%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.8670%" y="245" width="0.0806%" height="15" fill="rgb(222,84,53)" fg:x="805" fg:w="1"/><text x="65.1170%" y="255.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="64.9476%" y="309" width="0.0806%" height="15" fill="rgb(243,50,15)" fg:x="806" fg:w="1"/><text x="65.1976%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.9476%" y="293" width="0.0806%" height="15" fill="rgb(208,184,23)" fg:x="806" fg:w="1"/><text x="65.1976%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.9476%" y="277" width="0.0806%" height="15" fill="rgb(221,83,2)" fg:x="806" fg:w="1"/><text x="65.1976%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.3505%" y="165" width="0.0806%" height="15" fill="rgb(236,53,24)" fg:x="811" fg:w="1"/><text x="65.6005%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.3505%" y="149" width="0.0806%" height="15" fill="rgb(244,171,29)" fg:x="811" fg:w="1"/><text x="65.6005%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.3505%" y="133" width="0.0806%" height="15" fill="rgb(205,19,11)" fg:x="811" fg:w="1"/><text x="65.6005%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.3505%" y="117" width="0.0806%" height="15" fill="rgb(207,108,29)" fg:x="811" fg:w="1"/><text x="65.6005%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="65.3505%" y="181" width="0.2417%" height="15" fill="rgb(236,215,43)" fg:x="811" fg:w="3"/><text x="65.6005%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.4311%" y="165" width="0.1612%" height="15" fill="rgb(213,58,35)" fg:x="812" fg:w="2"/><text x="65.6811%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.5117%" y="149" width="0.0806%" height="15" fill="rgb(220,211,46)" fg:x="813" fg:w="1"/><text x="65.7617%" y="159.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (36 samples, 2.90%)</title><rect x="62.7720%" y="389" width="2.9009%" height="15" fill="rgb(212,134,16)" fg:x="779" fg:w="36"/><text x="63.0220%" y="399.50">&lt;p..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (33 samples, 2.66%)</title><rect x="63.0137%" y="373" width="2.6591%" height="15" fill="rgb(232,90,44)" fg:x="782" fg:w="33"/><text x="63.2637%" y="383.50">&lt;k..</text></g><g><title>kernel::model::EntityPtrResolver::entity (33 samples, 2.66%)</title><rect x="63.0137%" y="357" width="2.6591%" height="15" fill="rgb(212,18,36)" fg:x="782" fg:w="33"/><text x="63.2637%" y="367.50">ke..</text></g><g><title>engine::session::Session::load_entity (33 samples, 2.66%)</title><rect x="63.0137%" y="341" width="2.6591%" height="15" fill="rgb(206,112,24)" fg:x="782" fg:w="33"/><text x="63.2637%" y="351.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (33 samples, 2.66%)</title><rect x="63.0137%" y="325" width="2.6591%" height="15" fill="rgb(238,223,40)" fg:x="782" fg:w="33"/><text x="63.2637%" y="335.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="65.0282%" y="309" width="0.6446%" height="15" fill="rgb(226,169,20)" fg:x="807" fg:w="8"/><text x="65.2782%" y="319.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="65.0282%" y="293" width="0.6446%" height="15" fill="rgb(241,64,52)" fg:x="807" fg:w="8"/><text x="65.2782%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="65.0282%" y="277" width="0.6446%" height="15" fill="rgb(228,120,25)" fg:x="807" fg:w="8"/><text x="65.2782%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="65.0282%" y="261" width="0.6446%" height="15" fill="rgb(234,108,19)" fg:x="807" fg:w="8"/><text x="65.2782%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="65.1088%" y="245" width="0.5641%" height="15" fill="rgb(236,133,29)" fg:x="808" fg:w="7"/><text x="65.3588%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="65.1088%" y="229" width="0.5641%" height="15" fill="rgb(246,174,53)" fg:x="808" fg:w="7"/><text x="65.3588%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="65.1088%" y="213" width="0.5641%" height="15" fill="rgb(210,105,35)" fg:x="808" fg:w="7"/><text x="65.3588%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="65.1894%" y="197" width="0.4835%" height="15" fill="rgb(225,27,26)" fg:x="809" fg:w="6"/><text x="65.4394%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.5923%" y="181" width="0.0806%" height="15" fill="rgb(233,2,39)" fg:x="814" fg:w="1"/><text x="65.8423%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.5923%" y="165" width="0.0806%" height="15" fill="rgb(219,164,26)" fg:x="814" fg:w="1"/><text x="65.8423%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.5923%" y="149" width="0.0806%" height="15" fill="rgb(236,211,5)" fg:x="814" fg:w="1"/><text x="65.8423%" y="159.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (37 samples, 2.98%)</title><rect x="62.7720%" y="405" width="2.9815%" height="15" fill="rgb(244,227,23)" fg:x="779" fg:w="37"/><text x="63.0220%" y="415.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="65.6728%" y="389" width="0.0806%" height="15" fill="rgb(230,184,8)" fg:x="815" fg:w="1"/><text x="65.9228%" y="399.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="65.6728%" y="373" width="0.0806%" height="15" fill="rgb(217,125,48)" fg:x="815" fg:w="1"/><text x="65.9228%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.6728%" y="357" width="0.0806%" height="15" fill="rgb(223,192,47)" fg:x="815" fg:w="1"/><text x="65.9228%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.9146%" y="229" width="0.0806%" height="15" fill="rgb(226,119,10)" fg:x="818" fg:w="1"/><text x="66.1646%" y="239.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.16%)</title><rect x="65.9952%" y="229" width="0.1612%" height="15" fill="rgb(221,49,29)" fg:x="819" fg:w="2"/><text x="66.2452%" y="239.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="65.9952%" y="213" width="0.1612%" height="15" fill="rgb(217,205,19)" fg:x="819" fg:w="2"/><text x="66.2452%" y="223.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="65.9952%" y="197" width="0.1612%" height="15" fill="rgb(242,104,7)" fg:x="819" fg:w="2"/><text x="66.2452%" y="207.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.16%)</title><rect x="65.9952%" y="181" width="0.1612%" height="15" fill="rgb(209,154,48)" fg:x="819" fg:w="2"/><text x="66.2452%" y="191.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="65.8340%" y="373" width="0.4029%" height="15" fill="rgb(219,213,46)" fg:x="817" fg:w="5"/><text x="66.0840%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (5 samples, 0.40%)</title><rect x="65.8340%" y="357" width="0.4029%" height="15" fill="rgb(229,105,38)" fg:x="817" fg:w="5"/><text x="66.0840%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="65.8340%" y="341" width="0.4029%" height="15" fill="rgb(205,151,5)" fg:x="817" fg:w="5"/><text x="66.0840%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.40%)</title><rect x="65.8340%" y="325" width="0.4029%" height="15" fill="rgb(248,115,40)" fg:x="817" fg:w="5"/><text x="66.0840%" y="335.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="65.8340%" y="309" width="0.4029%" height="15" fill="rgb(206,179,2)" fg:x="817" fg:w="5"/><text x="66.0840%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="65.9146%" y="293" width="0.3223%" height="15" fill="rgb(230,103,24)" fg:x="818" fg:w="4"/><text x="66.1646%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.32%)</title><rect x="65.9146%" y="277" width="0.3223%" height="15" fill="rgb(218,152,4)" fg:x="818" fg:w="4"/><text x="66.1646%" y="287.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (4 samples, 0.32%)</title><rect x="65.9146%" y="261" width="0.3223%" height="15" fill="rgb(236,161,54)" fg:x="818" fg:w="4"/><text x="66.1646%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (4 samples, 0.32%)</title><rect x="65.9146%" y="245" width="0.3223%" height="15" fill="rgb(226,65,17)" fg:x="818" fg:w="4"/><text x="66.1646%" y="255.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="66.1563%" y="229" width="0.0806%" height="15" fill="rgb(221,134,44)" fg:x="821" fg:w="1"/><text x="66.4063%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.3175%" y="357" width="0.0806%" height="15" fill="rgb(251,129,4)" fg:x="823" fg:w="1"/><text x="66.5675%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.3981%" y="357" width="0.0806%" height="15" fill="rgb(244,32,34)" fg:x="824" fg:w="1"/><text x="66.6481%" y="367.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="66.4786%" y="357" width="0.0806%" height="15" fill="rgb(251,224,37)" fg:x="825" fg:w="1"/><text x="66.7286%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4786%" y="341" width="0.0806%" height="15" fill="rgb(248,117,31)" fg:x="825" fg:w="1"/><text x="66.7286%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4786%" y="325" width="0.0806%" height="15" fill="rgb(222,208,37)" fg:x="825" fg:w="1"/><text x="66.7286%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.4786%" y="309" width="0.0806%" height="15" fill="rgb(234,211,25)" fg:x="825" fg:w="1"/><text x="66.7286%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.4786%" y="293" width="0.0806%" height="15" fill="rgb(211,72,6)" fg:x="825" fg:w="1"/><text x="66.7286%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.4786%" y="277" width="0.0806%" height="15" fill="rgb(249,198,38)" fg:x="825" fg:w="1"/><text x="66.7286%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="66.4786%" y="261" width="0.0806%" height="15" fill="rgb(221,86,51)" fg:x="825" fg:w="1"/><text x="66.7286%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.4786%" y="245" width="0.0806%" height="15" fill="rgb(226,178,43)" fg:x="825" fg:w="1"/><text x="66.7286%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8010%" y="293" width="0.0806%" height="15" fill="rgb(215,145,7)" fg:x="829" fg:w="1"/><text x="67.0510%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.8010%" y="309" width="0.1612%" height="15" fill="rgb(250,202,36)" fg:x="829" fg:w="2"/><text x="67.0510%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8815%" y="293" width="0.0806%" height="15" fill="rgb(215,86,13)" fg:x="830" fg:w="1"/><text x="67.1315%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="66.9621%" y="309" width="0.0806%" height="15" fill="rgb(221,134,12)" fg:x="831" fg:w="1"/><text x="67.2121%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.9621%" y="293" width="0.0806%" height="15" fill="rgb(213,82,10)" fg:x="831" fg:w="1"/><text x="67.2121%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.9621%" y="277" width="0.0806%" height="15" fill="rgb(214,142,0)" fg:x="831" fg:w="1"/><text x="67.2121%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2039%" y="277" width="0.0806%" height="15" fill="rgb(205,145,9)" fg:x="834" fg:w="1"/><text x="67.4539%" y="287.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (8 samples, 0.64%)</title><rect x="66.7204%" y="325" width="0.6446%" height="15" fill="rgb(244,214,8)" fg:x="828" fg:w="8"/><text x="66.9704%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="67.0427%" y="309" width="0.3223%" height="15" fill="rgb(224,72,51)" fg:x="832" fg:w="4"/><text x="67.2927%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.1233%" y="293" width="0.2417%" height="15" fill="rgb(233,137,37)" fg:x="833" fg:w="3"/><text x="67.3733%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="67.2844%" y="277" width="0.0806%" height="15" fill="rgb(208,71,28)" fg:x="835" fg:w="1"/><text x="67.5344%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.2844%" y="261" width="0.0806%" height="15" fill="rgb(226,31,7)" fg:x="835" fg:w="1"/><text x="67.5344%" y="271.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="67.3650%" y="277" width="0.0806%" height="15" fill="rgb(229,62,18)" fg:x="836" fg:w="1"/><text x="67.6150%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3650%" y="261" width="0.0806%" height="15" fill="rgb(226,74,28)" fg:x="836" fg:w="1"/><text x="67.6150%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3650%" y="245" width="0.0806%" height="15" fill="rgb(214,170,18)" fg:x="836" fg:w="1"/><text x="67.6150%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.3650%" y="229" width="0.0806%" height="15" fill="rgb(227,229,35)" fg:x="836" fg:w="1"/><text x="67.6150%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.3650%" y="213" width="0.0806%" height="15" fill="rgb(225,181,39)" fg:x="836" fg:w="1"/><text x="67.6150%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.3650%" y="197" width="0.0806%" height="15" fill="rgb(253,124,44)" fg:x="836" fg:w="1"/><text x="67.6150%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3650%" y="181" width="0.0806%" height="15" fill="rgb(220,75,18)" fg:x="836" fg:w="1"/><text x="67.6150%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3650%" y="165" width="0.0806%" height="15" fill="rgb(239,175,43)" fg:x="836" fg:w="1"/><text x="67.6150%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.3650%" y="149" width="0.0806%" height="15" fill="rgb(228,112,50)" fg:x="836" fg:w="1"/><text x="67.6150%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.3650%" y="133" width="0.0806%" height="15" fill="rgb(232,105,36)" fg:x="836" fg:w="1"/><text x="67.6150%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.3650%" y="117" width="0.0806%" height="15" fill="rgb(227,137,47)" fg:x="836" fg:w="1"/><text x="67.6150%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.3650%" y="101" width="0.0806%" height="15" fill="rgb(217,51,9)" fg:x="836" fg:w="1"/><text x="67.6150%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3650%" y="85" width="0.0806%" height="15" fill="rgb(245,117,0)" fg:x="836" fg:w="1"/><text x="67.6150%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.5262%" y="229" width="0.1612%" height="15" fill="rgb(252,52,30)" fg:x="838" fg:w="2"/><text x="67.7762%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6068%" y="213" width="0.0806%" height="15" fill="rgb(227,85,33)" fg:x="839" fg:w="1"/><text x="67.8568%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6068%" y="197" width="0.0806%" height="15" fill="rgb(220,157,20)" fg:x="839" fg:w="1"/><text x="67.8568%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="67.4456%" y="245" width="0.3223%" height="15" fill="rgb(254,14,34)" fg:x="837" fg:w="4"/><text x="67.6956%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6873%" y="229" width="0.0806%" height="15" fill="rgb(216,103,41)" fg:x="840" fg:w="1"/><text x="67.9373%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6873%" y="213" width="0.0806%" height="15" fill="rgb(245,221,9)" fg:x="840" fg:w="1"/><text x="67.9373%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.6873%" y="197" width="0.0806%" height="15" fill="rgb(254,136,47)" fg:x="840" fg:w="1"/><text x="67.9373%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.6873%" y="181" width="0.0806%" height="15" fill="rgb(235,71,46)" fg:x="840" fg:w="1"/><text x="67.9373%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.6873%" y="165" width="0.0806%" height="15" fill="rgb(242,154,29)" fg:x="840" fg:w="1"/><text x="67.9373%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6873%" y="149" width="0.0806%" height="15" fill="rgb(210,65,31)" fg:x="840" fg:w="1"/><text x="67.9373%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6873%" y="133" width="0.0806%" height="15" fill="rgb(244,9,50)" fg:x="840" fg:w="1"/><text x="67.9373%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.6873%" y="117" width="0.0806%" height="15" fill="rgb(215,141,38)" fg:x="840" fg:w="1"/><text x="67.9373%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.6873%" y="101" width="0.0806%" height="15" fill="rgb(241,129,6)" fg:x="840" fg:w="1"/><text x="67.9373%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.6873%" y="85" width="0.0806%" height="15" fill="rgb(253,169,4)" fg:x="840" fg:w="1"/><text x="67.9373%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.6873%" y="69" width="0.0806%" height="15" fill="rgb(237,82,36)" fg:x="840" fg:w="1"/><text x="67.9373%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6873%" y="53" width="0.0806%" height="15" fill="rgb(209,171,11)" fg:x="840" fg:w="1"/><text x="67.9373%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="67.4456%" y="261" width="0.4029%" height="15" fill="rgb(242,19,22)" fg:x="837" fg:w="5"/><text x="67.6956%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7679%" y="245" width="0.0806%" height="15" fill="rgb(251,122,24)" fg:x="841" fg:w="1"/><text x="68.0179%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7679%" y="229" width="0.0806%" height="15" fill="rgb(226,166,42)" fg:x="841" fg:w="1"/><text x="68.0179%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.7679%" y="213" width="0.0806%" height="15" fill="rgb(244,101,48)" fg:x="841" fg:w="1"/><text x="68.0179%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.7679%" y="197" width="0.0806%" height="15" fill="rgb(227,125,1)" fg:x="841" fg:w="1"/><text x="68.0179%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.7679%" y="181" width="0.0806%" height="15" fill="rgb(206,79,43)" fg:x="841" fg:w="1"/><text x="68.0179%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.7679%" y="165" width="0.0806%" height="15" fill="rgb(241,109,41)" fg:x="841" fg:w="1"/><text x="68.0179%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.7679%" y="149" width="0.0806%" height="15" fill="rgb(219,73,4)" fg:x="841" fg:w="1"/><text x="68.0179%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.7679%" y="133" width="0.0806%" height="15" fill="rgb(239,25,41)" fg:x="841" fg:w="1"/><text x="68.0179%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.7679%" y="117" width="0.0806%" height="15" fill="rgb(208,88,46)" fg:x="841" fg:w="1"/><text x="68.0179%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.7679%" y="101" width="0.0806%" height="15" fill="rgb(239,184,9)" fg:x="841" fg:w="1"/><text x="68.0179%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.7679%" y="85" width="0.0806%" height="15" fill="rgb(223,114,13)" fg:x="841" fg:w="1"/><text x="68.0179%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.7679%" y="69" width="0.0806%" height="15" fill="rgb(214,28,42)" fg:x="841" fg:w="1"/><text x="68.0179%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8485%" y="245" width="0.0806%" height="15" fill="rgb(252,32,44)" fg:x="842" fg:w="1"/><text x="68.0985%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8485%" y="229" width="0.0806%" height="15" fill="rgb(231,159,4)" fg:x="842" fg:w="1"/><text x="68.0985%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8485%" y="213" width="0.0806%" height="15" fill="rgb(210,35,26)" fg:x="842" fg:w="1"/><text x="68.0985%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="67.8485%" y="261" width="0.1612%" height="15" fill="rgb(208,190,37)" fg:x="842" fg:w="2"/><text x="68.0985%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.9291%" y="245" width="0.0806%" height="15" fill="rgb(226,148,22)" fg:x="843" fg:w="1"/><text x="68.1791%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9291%" y="229" width="0.0806%" height="15" fill="rgb(242,153,24)" fg:x="843" fg:w="1"/><text x="68.1791%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.9291%" y="213" width="0.0806%" height="15" fill="rgb(213,133,7)" fg:x="843" fg:w="1"/><text x="68.1791%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9291%" y="197" width="0.0806%" height="15" fill="rgb(248,206,18)" fg:x="843" fg:w="1"/><text x="68.1791%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.9291%" y="181" width="0.0806%" height="15" fill="rgb(233,157,4)" fg:x="843" fg:w="1"/><text x="68.1791%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9291%" y="165" width="0.0806%" height="15" fill="rgb(249,179,32)" fg:x="843" fg:w="1"/><text x="68.1791%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.9291%" y="149" width="0.0806%" height="15" fill="rgb(248,69,35)" fg:x="843" fg:w="1"/><text x="68.1791%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.0902%" y="213" width="0.0806%" height="15" fill="rgb(249,158,38)" fg:x="845" fg:w="1"/><text x="68.3402%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.2514%" y="101" width="0.1612%" height="15" fill="rgb(223,18,43)" fg:x="847" fg:w="2"/><text x="68.5014%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.2514%" y="85" width="0.1612%" height="15" fill="rgb(238,42,45)" fg:x="847" fg:w="2"/><text x="68.5014%" y="95.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.2514%" y="69" width="0.1612%" height="15" fill="rgb(219,65,47)" fg:x="847" fg:w="2"/><text x="68.5014%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3320%" y="53" width="0.0806%" height="15" fill="rgb(248,153,12)" fg:x="848" fg:w="1"/><text x="68.5820%" y="63.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.4126%" y="101" width="0.0806%" height="15" fill="rgb(240,118,4)" fg:x="849" fg:w="1"/><text x="68.6626%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.4126%" y="85" width="0.0806%" height="15" fill="rgb(250,96,34)" fg:x="849" fg:w="1"/><text x="68.6626%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.4126%" y="69" width="0.0806%" height="15" fill="rgb(221,15,4)" fg:x="849" fg:w="1"/><text x="68.6626%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="68.4126%" y="53" width="0.0806%" height="15" fill="rgb(217,149,33)" fg:x="849" fg:w="1"/><text x="68.6626%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="68.2514%" y="133" width="0.3223%" height="15" fill="rgb(213,58,29)" fg:x="847" fg:w="4"/><text x="68.5014%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.2514%" y="117" width="0.3223%" height="15" fill="rgb(236,218,9)" fg:x="847" fg:w="4"/><text x="68.5014%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.4932%" y="101" width="0.0806%" height="15" fill="rgb(248,40,19)" fg:x="850" fg:w="1"/><text x="68.7432%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="68.5737%" y="133" width="0.1612%" height="15" fill="rgb(212,17,6)" fg:x="851" fg:w="2"/><text x="68.8237%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.6543%" y="117" width="0.0806%" height="15" fill="rgb(206,212,20)" fg:x="852" fg:w="1"/><text x="68.9043%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="68.1708%" y="165" width="0.8058%" height="15" fill="rgb(229,80,37)" fg:x="846" fg:w="10"/><text x="68.4208%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="68.1708%" y="149" width="0.8058%" height="15" fill="rgb(253,8,37)" fg:x="846" fg:w="10"/><text x="68.4208%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="68.7349%" y="133" width="0.2417%" height="15" fill="rgb(215,16,43)" fg:x="853" fg:w="3"/><text x="68.9849%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.9766%" y="133" width="0.0806%" height="15" fill="rgb(236,219,16)" fg:x="856" fg:w="1"/><text x="69.2266%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.9766%" y="117" width="0.0806%" height="15" fill="rgb(251,0,3)" fg:x="856" fg:w="1"/><text x="69.2266%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.97%)</title><rect x="68.1708%" y="213" width="0.9670%" height="15" fill="rgb(207,133,37)" fg:x="846" fg:w="12"/><text x="68.4208%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="68.1708%" y="197" width="0.9670%" height="15" fill="rgb(250,143,20)" fg:x="846" fg:w="12"/><text x="68.4208%" y="207.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.97%)</title><rect x="68.1708%" y="181" width="0.9670%" height="15" fill="rgb(242,19,50)" fg:x="846" fg:w="12"/><text x="68.4208%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.9766%" y="165" width="0.1612%" height="15" fill="rgb(206,124,43)" fg:x="856" fg:w="2"/><text x="69.2266%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.9766%" y="149" width="0.1612%" height="15" fill="rgb(229,4,38)" fg:x="856" fg:w="2"/><text x="69.2266%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="69.0572%" y="133" width="0.0806%" height="15" fill="rgb(247,220,45)" fg:x="857" fg:w="1"/><text x="69.3072%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0572%" y="117" width="0.0806%" height="15" fill="rgb(247,195,0)" fg:x="857" fg:w="1"/><text x="69.3072%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.0572%" y="101" width="0.0806%" height="15" fill="rgb(252,12,19)" fg:x="857" fg:w="1"/><text x="69.3072%" y="111.50"></text></g><g><title>kernel::model::entity::Entity::from_value (16 samples, 1.29%)</title><rect x="68.0097%" y="261" width="1.2893%" height="15" fill="rgb(222,49,50)" fg:x="844" fg:w="16"/><text x="68.2597%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (16 samples, 1.29%)</title><rect x="68.0097%" y="245" width="1.2893%" height="15" fill="rgb(209,157,28)" fg:x="844" fg:w="16"/><text x="68.2597%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (16 samples, 1.29%)</title><rect x="68.0097%" y="229" width="1.2893%" height="15" fill="rgb(238,174,24)" fg:x="844" fg:w="16"/><text x="68.2597%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.1378%" y="213" width="0.1612%" height="15" fill="rgb(224,17,28)" fg:x="858" fg:w="2"/><text x="69.3878%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.1378%" y="197" width="0.1612%" height="15" fill="rgb(249,7,29)" fg:x="858" fg:w="2"/><text x="69.3878%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="69.2184%" y="181" width="0.0806%" height="15" fill="rgb(243,178,4)" fg:x="859" fg:w="1"/><text x="69.4684%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.3795%" y="117" width="0.0806%" height="15" fill="rgb(246,138,35)" fg:x="861" fg:w="1"/><text x="69.6295%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.3795%" y="101" width="0.0806%" height="15" fill="rgb(251,85,18)" fg:x="861" fg:w="1"/><text x="69.6295%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.5407%" y="101" width="0.0806%" height="15" fill="rgb(254,55,9)" fg:x="863" fg:w="1"/><text x="69.7907%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.5407%" y="85" width="0.0806%" height="15" fill="rgb(248,4,50)" fg:x="863" fg:w="1"/><text x="69.7907%" y="95.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.5407%" y="69" width="0.0806%" height="15" fill="rgb(215,208,14)" fg:x="863" fg:w="1"/><text x="69.7907%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5407%" y="53" width="0.0806%" height="15" fill="rgb(218,37,18)" fg:x="863" fg:w="1"/><text x="69.7907%" y="63.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.6213%" y="101" width="0.0806%" height="15" fill="rgb(206,104,13)" fg:x="864" fg:w="1"/><text x="69.8713%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="69.2990%" y="165" width="0.4835%" height="15" fill="rgb(248,94,22)" fg:x="860" fg:w="6"/><text x="69.5490%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="69.3795%" y="149" width="0.4029%" height="15" fill="rgb(235,42,46)" fg:x="861" fg:w="5"/><text x="69.6295%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="69.3795%" y="133" width="0.4029%" height="15" fill="rgb(220,228,48)" fg:x="861" fg:w="5"/><text x="69.6295%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="69.4601%" y="117" width="0.3223%" height="15" fill="rgb(216,58,12)" fg:x="862" fg:w="4"/><text x="69.7101%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7019%" y="101" width="0.0806%" height="15" fill="rgb(223,97,52)" fg:x="865" fg:w="1"/><text x="69.9519%" y="111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.7824%" y="165" width="0.0806%" height="15" fill="rgb(208,159,17)" fg:x="866" fg:w="1"/><text x="70.0324%" y="175.50"></text></g><g><title>plugins_core::tools::contained_by (40 samples, 3.22%)</title><rect x="66.7204%" y="341" width="3.2232%" height="15" fill="rgb(215,172,9)" fg:x="828" fg:w="40"/><text x="66.9704%" y="351.50">plu..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (32 samples, 2.58%)</title><rect x="67.3650%" y="325" width="2.5786%" height="15" fill="rgb(252,175,30)" fg:x="836" fg:w="32"/><text x="67.6150%" y="335.50">&lt;k..</text></g><g><title>kernel::model::EntityPtrResolver::entity (32 samples, 2.58%)</title><rect x="67.3650%" y="309" width="2.5786%" height="15" fill="rgb(209,159,10)" fg:x="836" fg:w="32"/><text x="67.6150%" y="319.50">ke..</text></g><g><title>engine::session::Session::load_entity (32 samples, 2.58%)</title><rect x="67.3650%" y="293" width="2.5786%" height="15" fill="rgb(229,73,51)" fg:x="836" fg:w="32"/><text x="67.6150%" y="303.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (31 samples, 2.50%)</title><rect x="67.4456%" y="277" width="2.4980%" height="15" fill="rgb(208,212,43)" fg:x="837" fg:w="31"/><text x="67.6956%" y="287.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="69.2990%" y="261" width="0.6446%" height="15" fill="rgb(254,123,53)" fg:x="860" fg:w="8"/><text x="69.5490%" y="271.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="69.2990%" y="245" width="0.6446%" height="15" fill="rgb(254,128,49)" fg:x="860" fg:w="8"/><text x="69.5490%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="69.2990%" y="229" width="0.6446%" height="15" fill="rgb(246,16,16)" fg:x="860" fg:w="8"/><text x="69.5490%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="69.2990%" y="213" width="0.6446%" height="15" fill="rgb(209,200,1)" fg:x="860" fg:w="8"/><text x="69.5490%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="69.2990%" y="197" width="0.6446%" height="15" fill="rgb(235,9,3)" fg:x="860" fg:w="8"/><text x="69.5490%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="69.2990%" y="181" width="0.6446%" height="15" fill="rgb(233,121,54)" fg:x="860" fg:w="8"/><text x="69.5490%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8630%" y="165" width="0.0806%" height="15" fill="rgb(236,80,25)" fg:x="867" fg:w="1"/><text x="70.1130%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8630%" y="149" width="0.0806%" height="15" fill="rgb(220,44,24)" fg:x="867" fg:w="1"/><text x="70.1130%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.8630%" y="133" width="0.0806%" height="15" fill="rgb(236,225,16)" fg:x="867" fg:w="1"/><text x="70.1130%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.0242%" y="261" width="0.0806%" height="15" fill="rgb(237,140,0)" fg:x="869" fg:w="1"/><text x="70.2742%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.0242%" y="245" width="0.0806%" height="15" fill="rgb(243,225,53)" fg:x="869" fg:w="1"/><text x="70.2742%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.0242%" y="229" width="0.0806%" height="15" fill="rgb(240,140,30)" fg:x="869" fg:w="1"/><text x="70.2742%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.0242%" y="213" width="0.0806%" height="15" fill="rgb(217,51,16)" fg:x="869" fg:w="1"/><text x="70.2742%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.0242%" y="197" width="0.0806%" height="15" fill="rgb(245,75,50)" fg:x="869" fg:w="1"/><text x="70.2742%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.0242%" y="181" width="0.0806%" height="15" fill="rgb(208,174,22)" fg:x="869" fg:w="1"/><text x="70.2742%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.0242%" y="165" width="0.0806%" height="15" fill="rgb(219,98,50)" fg:x="869" fg:w="1"/><text x="70.2742%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.0242%" y="149" width="0.0806%" height="15" fill="rgb(243,138,3)" fg:x="869" fg:w="1"/><text x="70.2742%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.0242%" y="133" width="0.0806%" height="15" fill="rgb(243,132,26)" fg:x="869" fg:w="1"/><text x="70.2742%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.0242%" y="117" width="0.0806%" height="15" fill="rgb(250,201,8)" fg:x="869" fg:w="1"/><text x="70.2742%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.0242%" y="101" width="0.0806%" height="15" fill="rgb(213,91,26)" fg:x="869" fg:w="1"/><text x="70.2742%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.0242%" y="85" width="0.0806%" height="15" fill="rgb(229,117,1)" fg:x="869" fg:w="1"/><text x="70.2742%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.0242%" y="69" width="0.0806%" height="15" fill="rgb(229,24,6)" fg:x="869" fg:w="1"/><text x="70.2742%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.9436%" y="309" width="0.2417%" height="15" fill="rgb(206,69,11)" fg:x="868" fg:w="3"/><text x="70.1936%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="69.9436%" y="293" width="0.2417%" height="15" fill="rgb(234,111,34)" fg:x="868" fg:w="3"/><text x="70.1936%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.0242%" y="277" width="0.1612%" height="15" fill="rgb(213,187,51)" fg:x="869" fg:w="2"/><text x="70.2742%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.1048%" y="261" width="0.0806%" height="15" fill="rgb(207,45,11)" fg:x="870" fg:w="1"/><text x="70.3548%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.1048%" y="245" width="0.0806%" height="15" fill="rgb(225,151,47)" fg:x="870" fg:w="1"/><text x="70.3548%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.1048%" y="229" width="0.0806%" height="15" fill="rgb(211,226,5)" fg:x="870" fg:w="1"/><text x="70.3548%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.1048%" y="213" width="0.0806%" height="15" fill="rgb(214,83,52)" fg:x="870" fg:w="1"/><text x="70.3548%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.1048%" y="197" width="0.0806%" height="15" fill="rgb(229,49,53)" fg:x="870" fg:w="1"/><text x="70.3548%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.1048%" y="181" width="0.0806%" height="15" fill="rgb(246,8,28)" fg:x="870" fg:w="1"/><text x="70.3548%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.1048%" y="165" width="0.0806%" height="15" fill="rgb(207,28,41)" fg:x="870" fg:w="1"/><text x="70.3548%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.1048%" y="149" width="0.0806%" height="15" fill="rgb(254,22,25)" fg:x="870" fg:w="1"/><text x="70.3548%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.1048%" y="133" width="0.0806%" height="15" fill="rgb(209,120,42)" fg:x="870" fg:w="1"/><text x="70.3548%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.1048%" y="117" width="0.0806%" height="15" fill="rgb(216,194,18)" fg:x="870" fg:w="1"/><text x="70.3548%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.1048%" y="101" width="0.0806%" height="15" fill="rgb(213,70,17)" fg:x="870" fg:w="1"/><text x="70.3548%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.1048%" y="85" width="0.0806%" height="15" fill="rgb(228,66,19)" fg:x="870" fg:w="1"/><text x="70.3548%" y="95.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.2659%" y="277" width="0.1612%" height="15" fill="rgb(236,221,54)" fg:x="872" fg:w="2"/><text x="70.5159%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.4271%" y="277" width="0.0806%" height="15" fill="rgb(207,175,15)" fg:x="874" fg:w="1"/><text x="70.6771%" y="287.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.5882%" y="229" width="0.1612%" height="15" fill="rgb(234,76,8)" fg:x="876" fg:w="2"/><text x="70.8382%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.5882%" y="213" width="0.1612%" height="15" fill="rgb(243,106,0)" fg:x="876" fg:w="2"/><text x="70.8382%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.5882%" y="197" width="0.1612%" height="15" fill="rgb(208,48,19)" fg:x="876" fg:w="2"/><text x="70.8382%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.5882%" y="181" width="0.1612%" height="15" fill="rgb(251,50,29)" fg:x="876" fg:w="2"/><text x="70.8382%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.5882%" y="165" width="0.1612%" height="15" fill="rgb(222,31,49)" fg:x="876" fg:w="2"/><text x="70.8382%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="70.6688%" y="149" width="0.0806%" height="15" fill="rgb(232,33,18)" fg:x="877" fg:w="1"/><text x="70.9188%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.40%)</title><rect x="70.5077%" y="277" width="0.4029%" height="15" fill="rgb(209,1,44)" fg:x="875" fg:w="5"/><text x="70.7577%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.40%)</title><rect x="70.5077%" y="261" width="0.4029%" height="15" fill="rgb(211,7,1)" fg:x="875" fg:w="5"/><text x="70.7577%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="70.5882%" y="245" width="0.3223%" height="15" fill="rgb(224,111,27)" fg:x="876" fg:w="4"/><text x="70.8382%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.7494%" y="229" width="0.1612%" height="15" fill="rgb(252,195,39)" fg:x="878" fg:w="2"/><text x="70.9994%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.7494%" y="213" width="0.1612%" height="15" fill="rgb(237,198,5)" fg:x="878" fg:w="2"/><text x="70.9994%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="70.8300%" y="197" width="0.0806%" height="15" fill="rgb(232,148,1)" fg:x="879" fg:w="1"/><text x="71.0800%" y="207.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (14 samples, 1.13%)</title><rect x="69.9436%" y="325" width="1.1281%" height="15" fill="rgb(249,41,3)" fg:x="868" fg:w="14"/><text x="70.1936%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.89%)</title><rect x="70.1853%" y="309" width="0.8864%" height="15" fill="rgb(215,14,33)" fg:x="871" fg:w="11"/><text x="70.4353%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="70.1853%" y="293" width="0.8864%" height="15" fill="rgb(209,146,24)" fg:x="871" fg:w="11"/><text x="70.4353%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.9106%" y="277" width="0.1612%" height="15" fill="rgb(219,51,47)" fg:x="880" fg:w="2"/><text x="71.1606%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.9106%" y="261" width="0.1612%" height="15" fill="rgb(234,217,40)" fg:x="880" fg:w="2"/><text x="71.1606%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="70.9911%" y="245" width="0.0806%" height="15" fill="rgb(228,34,26)" fg:x="881" fg:w="1"/><text x="71.2411%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="70.9911%" y="229" width="0.0806%" height="15" fill="rgb(224,50,29)" fg:x="881" fg:w="1"/><text x="71.2411%" y="239.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="70.9911%" y="213" width="0.0806%" height="15" fill="rgb(205,79,51)" fg:x="881" fg:w="1"/><text x="71.2411%" y="223.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="71.0717%" y="325" width="0.0806%" height="15" fill="rgb(218,136,28)" fg:x="882" fg:w="1"/><text x="71.3217%" y="335.50"></text></g><g><title>plugins_core::tools::occupied_by (16 samples, 1.29%)</title><rect x="69.9436%" y="341" width="1.2893%" height="15" fill="rgb(220,150,10)" fg:x="868" fg:w="16"/><text x="70.1936%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="71.1523%" y="325" width="0.0806%" height="15" fill="rgb(242,158,47)" fg:x="883" fg:w="1"/><text x="71.4023%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="71.1523%" y="309" width="0.0806%" height="15" fill="rgb(209,68,0)" fg:x="883" fg:w="1"/><text x="71.4023%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1523%" y="293" width="0.0806%" height="15" fill="rgb(208,13,41)" fg:x="883" fg:w="1"/><text x="71.4023%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2329%" y="309" width="0.0806%" height="15" fill="rgb(226,201,7)" fg:x="884" fg:w="1"/><text x="71.4829%" y="319.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (60 samples, 4.83%)</title><rect x="66.5592%" y="357" width="4.8348%" height="15" fill="rgb(236,103,26)" fg:x="826" fg:w="60"/><text x="66.8092%" y="367.50">plugin..</text></g><g><title>plugins_core::tools::worn_by (2 samples, 0.16%)</title><rect x="71.2329%" y="341" width="0.1612%" height="15" fill="rgb(243,162,8)" fg:x="884" fg:w="2"/><text x="71.4829%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="71.2329%" y="325" width="0.1612%" height="15" fill="rgb(237,225,11)" fg:x="884" fg:w="2"/><text x="71.4829%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.3135%" y="309" width="0.0806%" height="15" fill="rgb(247,186,32)" fg:x="885" fg:w="1"/><text x="71.5635%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3135%" y="293" width="0.0806%" height="15" fill="rgb(215,26,28)" fg:x="885" fg:w="1"/><text x="71.5635%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="71.3135%" y="277" width="0.0806%" height="15" fill="rgb(208,121,6)" fg:x="885" fg:w="1"/><text x="71.5635%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="71.3135%" y="261" width="0.0806%" height="15" fill="rgb(225,91,3)" fg:x="885" fg:w="1"/><text x="71.5635%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="71.3135%" y="245" width="0.0806%" height="15" fill="rgb(246,119,36)" fg:x="885" fg:w="1"/><text x="71.5635%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (112 samples, 9.02%)</title><rect x="62.4496%" y="469" width="9.0250%" height="15" fill="rgb(254,173,2)" fg:x="775" fg:w="112"/><text x="62.6996%" y="479.50">&lt;engine::sess..</text></g><g><title>kernel::plugins::mw::apply_middleware (111 samples, 8.94%)</title><rect x="62.5302%" y="453" width="8.9444%" height="15" fill="rgb(209,87,54)" fg:x="776" fg:w="111"/><text x="62.7802%" y="463.50">kernel::plugi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (110 samples, 8.86%)</title><rect x="62.6108%" y="437" width="8.8638%" height="15" fill="rgb(223,216,20)" fg:x="777" fg:w="110"/><text x="62.8608%" y="447.50">kernel::plugi..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (110 samples, 8.86%)</title><rect x="62.6108%" y="421" width="8.8638%" height="15" fill="rgb(220,31,8)" fg:x="777" fg:w="110"/><text x="62.8608%" y="431.50">&lt;engine::sess..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (71 samples, 5.72%)</title><rect x="65.7534%" y="405" width="5.7212%" height="15" fill="rgb(220,185,15)" fg:x="816" fg:w="71"/><text x="66.0034%" y="415.50">kernel:..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (71 samples, 5.72%)</title><rect x="65.7534%" y="389" width="5.7212%" height="15" fill="rgb(247,190,50)" fg:x="816" fg:w="71"/><text x="66.0034%" y="399.50">&lt;plugin..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (65 samples, 5.24%)</title><rect x="66.2369%" y="373" width="5.2377%" height="15" fill="rgb(239,173,47)" fg:x="822" fg:w="65"/><text x="66.4869%" y="383.50">plugin..</text></g><g><title>plugins_rune::sources::load_sources_from_entity (1 samples, 0.08%)</title><rect x="71.3940%" y="357" width="0.0806%" height="15" fill="rgb(218,190,42)" fg:x="886" fg:w="1"/><text x="71.6440%" y="367.50"></text></g><g><title>engine::session::Session::captured (131 samples, 10.56%)</title><rect x="61.0798%" y="517" width="10.5560%" height="15" fill="rgb(251,207,16)" fg:x="758" fg:w="131"/><text x="61.3298%" y="527.50">engine::session..</text></g><g><title>engine::session::logs::capture (127 samples, 10.23%)</title><rect x="61.4021%" y="501" width="10.2337%" height="15" fill="rgb(222,199,47)" fg:x="762" fg:w="127"/><text x="61.6521%" y="511.50">engine::session..</text></g><g><title>tracing_core::dispatcher::with_default (114 samples, 9.19%)</title><rect x="62.4496%" y="485" width="9.1861%" height="15" fill="rgb(245,190,7)" fg:x="775" fg:w="114"/><text x="62.6996%" y="495.50">tracing_core:..</text></g><g><title>core::ptr::drop_in_place&lt;tracing_core::dispatcher::DefaultGuard&gt; (2 samples, 0.16%)</title><rect x="71.4746%" y="469" width="0.1612%" height="15" fill="rgb(239,85,38)" fg:x="887" fg:w="2"/><text x="71.7246%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.6358%" y="469" width="0.1612%" height="15" fill="rgb(229,69,51)" fg:x="889" fg:w="2"/><text x="71.8858%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7164%" y="453" width="0.0806%" height="15" fill="rgb(231,104,51)" fg:x="890" fg:w="1"/><text x="71.9664%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7164%" y="437" width="0.0806%" height="15" fill="rgb(235,49,4)" fg:x="890" fg:w="1"/><text x="71.9664%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7164%" y="421" width="0.0806%" height="15" fill="rgb(246,166,20)" fg:x="890" fg:w="1"/><text x="71.9664%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7164%" y="405" width="0.0806%" height="15" fill="rgb(230,119,37)" fg:x="890" fg:w="1"/><text x="71.9664%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7164%" y="389" width="0.0806%" height="15" fill="rgb(234,77,34)" fg:x="890" fg:w="1"/><text x="71.9664%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.7164%" y="373" width="0.0806%" height="15" fill="rgb(211,222,33)" fg:x="890" fg:w="1"/><text x="71.9664%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.7164%" y="357" width="0.0806%" height="15" fill="rgb(226,45,42)" fg:x="890" fg:w="1"/><text x="71.9664%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.7164%" y="341" width="0.0806%" height="15" fill="rgb(215,174,28)" fg:x="890" fg:w="1"/><text x="71.9664%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.7164%" y="325" width="0.0806%" height="15" fill="rgb(254,173,49)" fg:x="890" fg:w="1"/><text x="71.9664%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.7164%" y="309" width="0.0806%" height="15" fill="rgb(229,191,6)" fg:x="890" fg:w="1"/><text x="71.9664%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.7164%" y="293" width="0.0806%" height="15" fill="rgb(212,145,22)" fg:x="890" fg:w="1"/><text x="71.9664%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.7164%" y="277" width="0.0806%" height="15" fill="rgb(226,6,51)" fg:x="890" fg:w="1"/><text x="71.9664%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.7164%" y="261" width="0.0806%" height="15" fill="rgb(227,128,8)" fg:x="890" fg:w="1"/><text x="71.9664%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.7164%" y="245" width="0.0806%" height="15" fill="rgb(205,24,10)" fg:x="890" fg:w="1"/><text x="71.9664%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7164%" y="229" width="0.0806%" height="15" fill="rgb(217,147,27)" fg:x="890" fg:w="1"/><text x="71.9664%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.7969%" y="421" width="0.2417%" height="15" fill="rgb(250,82,42)" fg:x="891" fg:w="3"/><text x="72.0469%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.7969%" y="405" width="0.2417%" height="15" fill="rgb(248,93,17)" fg:x="891" fg:w="3"/><text x="72.0469%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.8775%" y="389" width="0.1612%" height="15" fill="rgb(254,212,40)" fg:x="892" fg:w="2"/><text x="72.1275%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9581%" y="373" width="0.0806%" height="15" fill="rgb(229,209,2)" fg:x="893" fg:w="1"/><text x="72.2081%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9581%" y="357" width="0.0806%" height="15" fill="rgb(211,50,43)" fg:x="893" fg:w="1"/><text x="72.2081%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.9581%" y="341" width="0.0806%" height="15" fill="rgb(245,196,29)" fg:x="893" fg:w="1"/><text x="72.2081%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.9581%" y="325" width="0.0806%" height="15" fill="rgb(216,132,13)" fg:x="893" fg:w="1"/><text x="72.2081%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.9581%" y="309" width="0.0806%" height="15" fill="rgb(251,108,21)" fg:x="893" fg:w="1"/><text x="72.2081%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.9581%" y="293" width="0.0806%" height="15" fill="rgb(229,174,54)" fg:x="893" fg:w="1"/><text x="72.2081%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.9581%" y="277" width="0.0806%" height="15" fill="rgb(211,175,47)" fg:x="893" fg:w="1"/><text x="72.2081%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.0387%" y="373" width="0.1612%" height="15" fill="rgb(234,5,37)" fg:x="894" fg:w="2"/><text x="72.2887%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.0387%" y="357" width="0.1612%" height="15" fill="rgb(244,150,43)" fg:x="894" fg:w="2"/><text x="72.2887%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.0387%" y="341" width="0.1612%" height="15" fill="rgb(242,172,38)" fg:x="894" fg:w="2"/><text x="72.2887%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.0387%" y="325" width="0.1612%" height="15" fill="rgb(205,27,8)" fg:x="894" fg:w="2"/><text x="72.2887%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1193%" y="309" width="0.0806%" height="15" fill="rgb(217,57,3)" fg:x="895" fg:w="1"/><text x="72.3693%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.1193%" y="293" width="0.0806%" height="15" fill="rgb(242,21,38)" fg:x="895" fg:w="1"/><text x="72.3693%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.1193%" y="277" width="0.0806%" height="15" fill="rgb(209,64,43)" fg:x="895" fg:w="1"/><text x="72.3693%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.1193%" y="261" width="0.0806%" height="15" fill="rgb(222,2,46)" fg:x="895" fg:w="1"/><text x="72.3693%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1193%" y="245" width="0.0806%" height="15" fill="rgb(218,19,44)" fg:x="895" fg:w="1"/><text x="72.3693%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1193%" y="229" width="0.0806%" height="15" fill="rgb(240,203,42)" fg:x="895" fg:w="1"/><text x="72.3693%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.1193%" y="213" width="0.0806%" height="15" fill="rgb(229,23,45)" fg:x="895" fg:w="1"/><text x="72.3693%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.1193%" y="197" width="0.0806%" height="15" fill="rgb(205,228,51)" fg:x="895" fg:w="1"/><text x="72.3693%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.1193%" y="181" width="0.0806%" height="15" fill="rgb(239,36,20)" fg:x="895" fg:w="1"/><text x="72.3693%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.1193%" y="165" width="0.0806%" height="15" fill="rgb(248,172,27)" fg:x="895" fg:w="1"/><text x="72.3693%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1193%" y="149" width="0.0806%" height="15" fill="rgb(244,55,32)" fg:x="895" fg:w="1"/><text x="72.3693%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1998%" y="325" width="0.0806%" height="15" fill="rgb(215,97,16)" fg:x="896" fg:w="1"/><text x="72.4498%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1998%" y="309" width="0.0806%" height="15" fill="rgb(224,80,29)" fg:x="896" fg:w="1"/><text x="72.4498%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1998%" y="293" width="0.0806%" height="15" fill="rgb(216,93,47)" fg:x="896" fg:w="1"/><text x="72.4498%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.1998%" y="277" width="0.0806%" height="15" fill="rgb(238,159,10)" fg:x="896" fg:w="1"/><text x="72.4498%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.1998%" y="261" width="0.0806%" height="15" fill="rgb(223,98,29)" fg:x="896" fg:w="1"/><text x="72.4498%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.1998%" y="245" width="0.0806%" height="15" fill="rgb(210,176,23)" fg:x="896" fg:w="1"/><text x="72.4498%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1998%" y="229" width="0.0806%" height="15" fill="rgb(242,162,27)" fg:x="896" fg:w="1"/><text x="72.4498%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1998%" y="213" width="0.0806%" height="15" fill="rgb(245,109,32)" fg:x="896" fg:w="1"/><text x="72.4498%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.1998%" y="197" width="0.0806%" height="15" fill="rgb(248,87,8)" fg:x="896" fg:w="1"/><text x="72.4498%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.1998%" y="181" width="0.0806%" height="15" fill="rgb(250,160,50)" fg:x="896" fg:w="1"/><text x="72.4498%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.1998%" y="165" width="0.0806%" height="15" fill="rgb(246,165,25)" fg:x="896" fg:w="1"/><text x="72.4498%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.1998%" y="149" width="0.0806%" height="15" fill="rgb(249,219,3)" fg:x="896" fg:w="1"/><text x="72.4498%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1998%" y="133" width="0.0806%" height="15" fill="rgb(226,66,5)" fg:x="896" fg:w="1"/><text x="72.4498%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="72.2804%" y="325" width="0.0806%" height="15" fill="rgb(250,220,43)" fg:x="897" fg:w="1"/><text x="72.5304%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.2804%" y="309" width="0.0806%" height="15" fill="rgb(225,111,31)" fg:x="897" fg:w="1"/><text x="72.5304%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="72.3610%" y="229" width="0.0806%" height="15" fill="rgb(248,106,18)" fg:x="898" fg:w="1"/><text x="72.6110%" y="239.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.3610%" y="213" width="0.0806%" height="15" fill="rgb(220,226,45)" fg:x="898" fg:w="1"/><text x="72.6110%" y="223.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.3610%" y="197" width="0.0806%" height="15" fill="rgb(208,58,53)" fg:x="898" fg:w="1"/><text x="72.6110%" y="207.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.3610%" y="181" width="0.0806%" height="15" fill="rgb(209,133,1)" fg:x="898" fg:w="1"/><text x="72.6110%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="72.1998%" y="357" width="0.4029%" height="15" fill="rgb(228,216,27)" fg:x="896" fg:w="5"/><text x="72.4498%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="72.1998%" y="341" width="0.4029%" height="15" fill="rgb(238,155,2)" fg:x="896" fg:w="5"/><text x="72.4498%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="72.3610%" y="325" width="0.2417%" height="15" fill="rgb(244,99,37)" fg:x="898" fg:w="3"/><text x="72.6110%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.3610%" y="309" width="0.2417%" height="15" fill="rgb(254,32,3)" fg:x="898" fg:w="3"/><text x="72.6110%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (3 samples, 0.24%)</title><rect x="72.3610%" y="293" width="0.2417%" height="15" fill="rgb(234,46,50)" fg:x="898" fg:w="3"/><text x="72.6110%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (3 samples, 0.24%)</title><rect x="72.3610%" y="277" width="0.2417%" height="15" fill="rgb(232,118,51)" fg:x="898" fg:w="3"/><text x="72.6110%" y="287.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (3 samples, 0.24%)</title><rect x="72.3610%" y="261" width="0.2417%" height="15" fill="rgb(207,24,32)" fg:x="898" fg:w="3"/><text x="72.6110%" y="271.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (3 samples, 0.24%)</title><rect x="72.3610%" y="245" width="0.2417%" height="15" fill="rgb(208,107,43)" fg:x="898" fg:w="3"/><text x="72.6110%" y="255.50"></text></g><g><title>serde_json::error::make_error (2 samples, 0.16%)</title><rect x="72.4416%" y="229" width="0.1612%" height="15" fill="rgb(231,28,9)" fg:x="899" fg:w="2"/><text x="72.6916%" y="239.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.08%)</title><rect x="72.5222%" y="213" width="0.0806%" height="15" fill="rgb(241,204,15)" fg:x="900" fg:w="1"/><text x="72.7722%" y="223.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.08%)</title><rect x="72.5222%" y="197" width="0.0806%" height="15" fill="rgb(214,54,15)" fg:x="900" fg:w="1"/><text x="72.7722%" y="207.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.08%)</title><rect x="72.5222%" y="181" width="0.0806%" height="15" fill="rgb(230,12,28)" fg:x="900" fg:w="1"/><text x="72.7722%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="72.1998%" y="373" width="0.4835%" height="15" fill="rgb(221,171,5)" fg:x="896" fg:w="6"/><text x="72.4498%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;serde_json::value::Value&gt;,core::option::Option&lt;alloc::vec::Vec&lt;kernel::model::entity_ref::EntityRef&gt;&gt;,kernel::model::entity_ref::find_entity_refs&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="72.6027%" y="357" width="0.0806%" height="15" fill="rgb(207,72,25)" fg:x="901" fg:w="1"/><text x="72.8527%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.6833%" y="309" width="0.0806%" height="15" fill="rgb(249,79,37)" fg:x="902" fg:w="1"/><text x="72.9333%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6833%" y="293" width="0.0806%" height="15" fill="rgb(209,98,49)" fg:x="902" fg:w="1"/><text x="72.9333%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="72.0387%" y="421" width="0.8058%" height="15" fill="rgb(221,62,13)" fg:x="894" fg:w="10"/><text x="72.2887%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.81%)</title><rect x="72.0387%" y="405" width="0.8058%" height="15" fill="rgb(223,39,6)" fg:x="894" fg:w="10"/><text x="72.2887%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.81%)</title><rect x="72.0387%" y="389" width="0.8058%" height="15" fill="rgb(246,163,20)" fg:x="894" fg:w="10"/><text x="72.2887%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.6833%" y="373" width="0.1612%" height="15" fill="rgb(211,111,29)" fg:x="902" fg:w="2"/><text x="72.9333%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.6833%" y="357" width="0.1612%" height="15" fill="rgb(243,118,5)" fg:x="902" fg:w="2"/><text x="72.9333%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="72.6833%" y="341" width="0.1612%" height="15" fill="rgb(240,144,52)" fg:x="902" fg:w="2"/><text x="72.9333%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="72.6833%" y="325" width="0.1612%" height="15" fill="rgb(244,158,36)" fg:x="902" fg:w="2"/><text x="72.9333%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.7639%" y="309" width="0.0806%" height="15" fill="rgb(241,109,37)" fg:x="903" fg:w="1"/><text x="73.0139%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.9251%" y="389" width="0.0806%" height="15" fill="rgb(213,95,32)" fg:x="905" fg:w="1"/><text x="73.1751%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.9251%" y="373" width="0.0806%" height="15" fill="rgb(252,193,9)" fg:x="905" fg:w="1"/><text x="73.1751%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.29%)</title><rect x="71.7969%" y="469" width="1.2893%" height="15" fill="rgb(225,213,21)" fg:x="891" fg:w="16"/><text x="72.0469%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.29%)</title><rect x="71.7969%" y="453" width="1.2893%" height="15" fill="rgb(220,172,46)" fg:x="891" fg:w="16"/><text x="72.0469%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (16 samples, 1.29%)</title><rect x="71.7969%" y="437" width="1.2893%" height="15" fill="rgb(235,75,41)" fg:x="891" fg:w="16"/><text x="72.0469%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="72.8445%" y="421" width="0.2417%" height="15" fill="rgb(213,86,9)" fg:x="904" fg:w="3"/><text x="73.0945%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.8445%" y="405" width="0.2417%" height="15" fill="rgb(238,127,51)" fg:x="904" fg:w="3"/><text x="73.0945%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.0056%" y="389" width="0.0806%" height="15" fill="rgb(215,2,54)" fg:x="906" fg:w="1"/><text x="73.2556%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.0862%" y="405" width="0.0806%" height="15" fill="rgb(245,80,6)" fg:x="907" fg:w="1"/><text x="73.3362%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.0862%" y="389" width="0.0806%" height="15" fill="rgb(233,106,42)" fg:x="907" fg:w="1"/><text x="73.3362%" y="399.50"></text></g><g><title>engine::session::internal::Added::find_refs (20 samples, 1.61%)</title><rect x="71.6358%" y="501" width="1.6116%" height="15" fill="rgb(244,86,38)" fg:x="889" fg:w="20"/><text x="71.8858%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (20 samples, 1.61%)</title><rect x="71.6358%" y="485" width="1.6116%" height="15" fill="rgb(242,167,7)" fg:x="889" fg:w="20"/><text x="71.8858%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.0862%" y="469" width="0.1612%" height="15" fill="rgb(218,216,3)" fg:x="907" fg:w="2"/><text x="73.3362%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.0862%" y="453" width="0.1612%" height="15" fill="rgb(206,136,36)" fg:x="907" fg:w="2"/><text x="73.3362%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="73.0862%" y="437" width="0.1612%" height="15" fill="rgb(206,206,15)" fg:x="907" fg:w="2"/><text x="73.3362%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="73.0862%" y="421" width="0.1612%" height="15" fill="rgb(207,163,34)" fg:x="907" fg:w="2"/><text x="73.3362%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.1668%" y="405" width="0.0806%" height="15" fill="rgb(240,127,22)" fg:x="908" fg:w="1"/><text x="73.4168%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.1668%" y="389" width="0.0806%" height="15" fill="rgb(227,49,5)" fg:x="908" fg:w="1"/><text x="73.4168%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.2474%" y="485" width="0.1612%" height="15" fill="rgb(231,8,6)" fg:x="909" fg:w="2"/><text x="73.4974%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.2474%" y="469" width="0.1612%" height="15" fill="rgb(223,21,24)" fg:x="909" fg:w="2"/><text x="73.4974%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.3280%" y="453" width="0.0806%" height="15" fill="rgb(244,44,52)" fg:x="910" fg:w="1"/><text x="73.5780%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.3280%" y="437" width="0.0806%" height="15" fill="rgb(207,73,28)" fg:x="910" fg:w="1"/><text x="73.5780%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.3280%" y="421" width="0.0806%" height="15" fill="rgb(234,215,10)" fg:x="910" fg:w="1"/><text x="73.5780%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3280%" y="405" width="0.0806%" height="15" fill="rgb(236,85,3)" fg:x="910" fg:w="1"/><text x="73.5780%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3280%" y="389" width="0.0806%" height="15" fill="rgb(236,102,39)" fg:x="910" fg:w="1"/><text x="73.5780%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.3280%" y="373" width="0.0806%" height="15" fill="rgb(243,50,8)" fg:x="910" fg:w="1"/><text x="73.5780%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.3280%" y="357" width="0.0806%" height="15" fill="rgb(207,111,4)" fg:x="910" fg:w="1"/><text x="73.5780%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.3280%" y="341" width="0.0806%" height="15" fill="rgb(230,52,42)" fg:x="910" fg:w="1"/><text x="73.5780%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.3280%" y="325" width="0.0806%" height="15" fill="rgb(252,178,50)" fg:x="910" fg:w="1"/><text x="73.5780%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.3280%" y="309" width="0.0806%" height="15" fill="rgb(234,46,35)" fg:x="910" fg:w="1"/><text x="73.5780%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.3280%" y="293" width="0.0806%" height="15" fill="rgb(228,69,37)" fg:x="910" fg:w="1"/><text x="73.5780%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.3280%" y="277" width="0.0806%" height="15" fill="rgb(221,21,11)" fg:x="910" fg:w="1"/><text x="73.5780%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.3280%" y="261" width="0.0806%" height="15" fill="rgb(223,56,9)" fg:x="910" fg:w="1"/><text x="73.5780%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.3280%" y="245" width="0.0806%" height="15" fill="rgb(234,30,19)" fg:x="910" fg:w="1"/><text x="73.5780%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.4085%" y="405" width="0.0806%" height="15" fill="rgb(211,64,54)" fg:x="911" fg:w="1"/><text x="73.6585%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.4085%" y="389" width="0.0806%" height="15" fill="rgb(250,189,5)" fg:x="911" fg:w="1"/><text x="73.6585%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="73.4085%" y="485" width="0.2417%" height="15" fill="rgb(214,180,13)" fg:x="911" fg:w="3"/><text x="73.6585%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="73.4085%" y="469" width="0.2417%" height="15" fill="rgb(238,40,40)" fg:x="911" fg:w="3"/><text x="73.6585%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="73.4085%" y="453" width="0.2417%" height="15" fill="rgb(214,101,38)" fg:x="911" fg:w="3"/><text x="73.6585%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="73.4085%" y="437" width="0.2417%" height="15" fill="rgb(242,65,53)" fg:x="911" fg:w="3"/><text x="73.6585%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="73.4085%" y="421" width="0.2417%" height="15" fill="rgb(230,22,45)" fg:x="911" fg:w="3"/><text x="73.6585%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.4891%" y="405" width="0.1612%" height="15" fill="rgb(223,77,1)" fg:x="912" fg:w="2"/><text x="73.7391%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.4891%" y="389" width="0.1612%" height="15" fill="rgb(227,33,37)" fg:x="912" fg:w="2"/><text x="73.7391%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5697%" y="373" width="0.0806%" height="15" fill="rgb(224,148,39)" fg:x="913" fg:w="1"/><text x="73.8197%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.0532%" y="325" width="0.0806%" height="15" fill="rgb(232,212,39)" fg:x="919" fg:w="1"/><text x="74.3032%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.0532%" y="309" width="0.0806%" height="15" fill="rgb(251,172,7)" fg:x="919" fg:w="1"/><text x="74.3032%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.0532%" y="357" width="0.1612%" height="15" fill="rgb(219,39,9)" fg:x="919" fg:w="2"/><text x="74.3032%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.0532%" y="341" width="0.1612%" height="15" fill="rgb(228,118,14)" fg:x="919" fg:w="2"/><text x="74.3032%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.1338%" y="325" width="0.0806%" height="15" fill="rgb(207,140,10)" fg:x="920" fg:w="1"/><text x="74.3838%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.1338%" y="309" width="0.0806%" height="15" fill="rgb(227,111,53)" fg:x="920" fg:w="1"/><text x="74.3838%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.1338%" y="293" width="0.0806%" height="15" fill="rgb(216,165,16)" fg:x="920" fg:w="1"/><text x="74.3838%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.1338%" y="277" width="0.0806%" height="15" fill="rgb(226,111,18)" fg:x="920" fg:w="1"/><text x="74.3838%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="73.8920%" y="389" width="0.4029%" height="15" fill="rgb(251,27,17)" fg:x="917" fg:w="5"/><text x="74.1420%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="73.8920%" y="373" width="0.4029%" height="15" fill="rgb(254,69,9)" fg:x="917" fg:w="5"/><text x="74.1420%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.2143%" y="357" width="0.0806%" height="15" fill="rgb(234,140,37)" fg:x="921" fg:w="1"/><text x="74.4643%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.3755%" y="357" width="0.0806%" height="15" fill="rgb(220,93,8)" fg:x="923" fg:w="1"/><text x="74.6255%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="74.4561%" y="341" width="0.0806%" height="15" fill="rgb(236,113,3)" fg:x="924" fg:w="1"/><text x="74.7061%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="74.4561%" y="325" width="0.0806%" height="15" fill="rgb(234,108,23)" fg:x="924" fg:w="1"/><text x="74.7061%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4561%" y="309" width="0.0806%" height="15" fill="rgb(205,114,34)" fg:x="924" fg:w="1"/><text x="74.7061%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.4561%" y="293" width="0.0806%" height="15" fill="rgb(236,200,45)" fg:x="924" fg:w="1"/><text x="74.7061%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.4561%" y="277" width="0.0806%" height="15" fill="rgb(227,194,29)" fg:x="924" fg:w="1"/><text x="74.7061%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.4561%" y="261" width="0.0806%" height="15" fill="rgb(250,76,42)" fg:x="924" fg:w="1"/><text x="74.7061%" y="271.50"></text></g><g><title>kernel::model::entity::Entity::from_value (12 samples, 0.97%)</title><rect x="73.6503%" y="485" width="0.9670%" height="15" fill="rgb(208,128,8)" fg:x="914" fg:w="12"/><text x="73.9003%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.97%)</title><rect x="73.6503%" y="469" width="0.9670%" height="15" fill="rgb(229,209,35)" fg:x="914" fg:w="12"/><text x="73.9003%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="73.6503%" y="453" width="0.9670%" height="15" fill="rgb(215,39,53)" fg:x="914" fg:w="12"/><text x="73.9003%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.73%)</title><rect x="73.8920%" y="437" width="0.7252%" height="15" fill="rgb(219,123,41)" fg:x="917" fg:w="9"/><text x="74.1420%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="73.8920%" y="421" width="0.7252%" height="15" fill="rgb(212,158,18)" fg:x="917" fg:w="9"/><text x="74.1420%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.73%)</title><rect x="73.8920%" y="405" width="0.7252%" height="15" fill="rgb(234,196,53)" fg:x="917" fg:w="9"/><text x="74.1420%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="74.2949%" y="389" width="0.3223%" height="15" fill="rgb(210,139,12)" fg:x="922" fg:w="4"/><text x="74.5449%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="74.2949%" y="373" width="0.3223%" height="15" fill="rgb(220,116,54)" fg:x="922" fg:w="4"/><text x="74.5449%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="74.4561%" y="357" width="0.1612%" height="15" fill="rgb(247,103,28)" fg:x="924" fg:w="2"/><text x="74.7061%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5367%" y="341" width="0.0806%" height="15" fill="rgb(253,156,45)" fg:x="925" fg:w="1"/><text x="74.7867%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.5367%" y="325" width="0.0806%" height="15" fill="rgb(237,157,52)" fg:x="925" fg:w="1"/><text x="74.7867%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="74.5367%" y="309" width="0.0806%" height="15" fill="rgb(253,112,16)" fg:x="925" fg:w="1"/><text x="74.7867%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5367%" y="293" width="0.0806%" height="15" fill="rgb(234,70,18)" fg:x="925" fg:w="1"/><text x="74.7867%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.5367%" y="277" width="0.0806%" height="15" fill="rgb(247,138,19)" fg:x="925" fg:w="1"/><text x="74.7867%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.6978%" y="309" width="0.0806%" height="15" fill="rgb(207,171,1)" fg:x="927" fg:w="1"/><text x="74.9478%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="74.6172%" y="389" width="0.2417%" height="15" fill="rgb(239,213,3)" fg:x="926" fg:w="3"/><text x="74.8672%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.6172%" y="373" width="0.2417%" height="15" fill="rgb(226,112,4)" fg:x="926" fg:w="3"/><text x="74.8672%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="74.6172%" y="357" width="0.2417%" height="15" fill="rgb(252,170,12)" fg:x="926" fg:w="3"/><text x="74.8672%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.6172%" y="341" width="0.2417%" height="15" fill="rgb(241,106,13)" fg:x="926" fg:w="3"/><text x="74.8672%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.6978%" y="325" width="0.1612%" height="15" fill="rgb(225,73,23)" fg:x="927" fg:w="2"/><text x="74.9478%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.7784%" y="309" width="0.0806%" height="15" fill="rgb(251,227,29)" fg:x="928" fg:w="1"/><text x="75.0284%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7784%" y="293" width="0.0806%" height="15" fill="rgb(237,144,13)" fg:x="928" fg:w="1"/><text x="75.0284%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7784%" y="277" width="0.0806%" height="15" fill="rgb(232,106,46)" fg:x="928" fg:w="1"/><text x="75.0284%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="74.6172%" y="405" width="0.3223%" height="15" fill="rgb(245,154,53)" fg:x="926" fg:w="4"/><text x="74.8672%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.8590%" y="389" width="0.0806%" height="15" fill="rgb(212,119,47)" fg:x="929" fg:w="1"/><text x="75.1090%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.8590%" y="373" width="0.0806%" height="15" fill="rgb(253,135,25)" fg:x="929" fg:w="1"/><text x="75.1090%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="74.6172%" y="421" width="0.4029%" height="15" fill="rgb(253,208,39)" fg:x="926" fg:w="5"/><text x="74.8672%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9396%" y="405" width="0.0806%" height="15" fill="rgb(226,64,12)" fg:x="930" fg:w="1"/><text x="75.1896%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (23 samples, 1.85%)</title><rect x="73.2474%" y="501" width="1.8533%" height="15" fill="rgb(214,162,37)" fg:x="909" fg:w="23"/><text x="73.4974%" y="511.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="74.6172%" y="485" width="0.4835%" height="15" fill="rgb(250,104,5)" fg:x="926" fg:w="6"/><text x="74.8672%" y="495.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="74.6172%" y="469" width="0.4835%" height="15" fill="rgb(220,202,50)" fg:x="926" fg:w="6"/><text x="74.8672%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="74.6172%" y="453" width="0.4835%" height="15" fill="rgb(248,67,38)" fg:x="926" fg:w="6"/><text x="74.8672%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="74.6172%" y="437" width="0.4835%" height="15" fill="rgb(242,94,35)" fg:x="926" fg:w="6"/><text x="74.8672%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.0201%" y="421" width="0.0806%" height="15" fill="rgb(209,78,37)" fg:x="931" fg:w="1"/><text x="75.2701%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (44 samples, 3.55%)</title><rect x="71.6358%" y="517" width="3.5455%" height="15" fill="rgb(230,126,47)" fg:x="889" fg:w="44"/><text x="71.8858%" y="527.50">engi..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="75.1007%" y="501" width="0.0806%" height="15" fill="rgb(222,110,35)" fg:x="932" fg:w="1"/><text x="75.3507%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2619%" y="485" width="0.0806%" height="15" fill="rgb(233,154,20)" fg:x="934" fg:w="1"/><text x="75.5119%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2619%" y="469" width="0.0806%" height="15" fill="rgb(223,53,50)" fg:x="934" fg:w="1"/><text x="75.5119%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.2619%" y="453" width="0.0806%" height="15" fill="rgb(251,27,26)" fg:x="934" fg:w="1"/><text x="75.5119%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.2619%" y="437" width="0.0806%" height="15" fill="rgb(223,189,16)" fg:x="934" fg:w="1"/><text x="75.5119%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.2619%" y="421" width="0.0806%" height="15" fill="rgb(207,5,54)" fg:x="934" fg:w="1"/><text x="75.5119%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.2619%" y="405" width="0.0806%" height="15" fill="rgb(254,124,50)" fg:x="934" fg:w="1"/><text x="75.5119%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.2619%" y="389" width="0.0806%" height="15" fill="rgb(253,193,24)" fg:x="934" fg:w="1"/><text x="75.5119%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.2619%" y="373" width="0.0806%" height="15" fill="rgb(235,170,24)" fg:x="934" fg:w="1"/><text x="75.5119%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.2619%" y="357" width="0.0806%" height="15" fill="rgb(222,212,52)" fg:x="934" fg:w="1"/><text x="75.5119%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.2619%" y="341" width="0.0806%" height="15" fill="rgb(223,17,45)" fg:x="934" fg:w="1"/><text x="75.5119%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.2619%" y="325" width="0.0806%" height="15" fill="rgb(227,103,26)" fg:x="934" fg:w="1"/><text x="75.5119%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.2619%" y="309" width="0.0806%" height="15" fill="rgb(251,151,25)" fg:x="934" fg:w="1"/><text x="75.5119%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.2619%" y="293" width="0.0806%" height="15" fill="rgb(248,144,29)" fg:x="934" fg:w="1"/><text x="75.5119%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2619%" y="277" width="0.0806%" height="15" fill="rgb(245,97,16)" fg:x="934" fg:w="1"/><text x="75.5119%" y="287.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="75.1813%" y="517" width="0.3223%" height="15" fill="rgb(220,200,29)" fg:x="933" fg:w="4"/><text x="75.4313%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="75.1813%" y="501" width="0.3223%" height="15" fill="rgb(206,38,29)" fg:x="933" fg:w="4"/><text x="75.4313%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.3425%" y="485" width="0.1612%" height="15" fill="rgb(245,19,52)" fg:x="935" fg:w="2"/><text x="75.5925%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4230%" y="469" width="0.0806%" height="15" fill="rgb(205,67,43)" fg:x="936" fg:w="1"/><text x="75.6730%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.5036%" y="469" width="0.1612%" height="15" fill="rgb(217,128,23)" fg:x="937" fg:w="2"/><text x="75.7536%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.5842%" y="453" width="0.0806%" height="15" fill="rgb(210,109,28)" fg:x="938" fg:w="1"/><text x="75.8342%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.5842%" y="437" width="0.0806%" height="15" fill="rgb(233,181,7)" fg:x="938" fg:w="1"/><text x="75.8342%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.6648%" y="453" width="0.0806%" height="15" fill="rgb(244,11,22)" fg:x="939" fg:w="1"/><text x="75.9148%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.6648%" y="437" width="0.0806%" height="15" fill="rgb(205,124,54)" fg:x="939" fg:w="1"/><text x="75.9148%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.7454%" y="421" width="0.0806%" height="15" fill="rgb(218,21,27)" fg:x="940" fg:w="1"/><text x="75.9954%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (6 samples, 0.48%)</title><rect x="75.6648%" y="469" width="0.4835%" height="15" fill="rgb(224,153,33)" fg:x="939" fg:w="6"/><text x="75.9148%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="75.7454%" y="453" width="0.4029%" height="15" fill="rgb(240,219,28)" fg:x="940" fg:w="5"/><text x="75.9954%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="75.7454%" y="437" width="0.4029%" height="15" fill="rgb(214,80,29)" fg:x="940" fg:w="5"/><text x="75.9954%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="75.8259%" y="421" width="0.3223%" height="15" fill="rgb(247,148,44)" fg:x="941" fg:w="4"/><text x="76.0759%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="75.8259%" y="405" width="0.3223%" height="15" fill="rgb(243,110,30)" fg:x="941" fg:w="4"/><text x="76.0759%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="75.9065%" y="389" width="0.2417%" height="15" fill="rgb(243,173,41)" fg:x="942" fg:w="3"/><text x="76.1565%" y="399.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="76.1483%" y="469" width="0.0806%" height="15" fill="rgb(225,160,47)" fg:x="945" fg:w="1"/><text x="76.3983%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1483%" y="453" width="0.0806%" height="15" fill="rgb(215,44,21)" fg:x="945" fg:w="1"/><text x="76.3983%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="76.3900%" y="421" width="0.0806%" height="15" fill="rgb(248,90,3)" fg:x="948" fg:w="1"/><text x="76.6400%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5512%" y="389" width="0.0806%" height="15" fill="rgb(220,196,49)" fg:x="950" fg:w="1"/><text x="76.8012%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.7929%" y="341" width="0.2417%" height="15" fill="rgb(217,138,14)" fg:x="953" fg:w="3"/><text x="77.0429%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.7929%" y="325" width="0.2417%" height="15" fill="rgb(219,111,20)" fg:x="953" fg:w="3"/><text x="77.0429%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="76.7929%" y="309" width="0.2417%" height="15" fill="rgb(218,114,4)" fg:x="953" fg:w="3"/><text x="77.0429%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.8735%" y="293" width="0.1612%" height="15" fill="rgb(238,133,3)" fg:x="954" fg:w="2"/><text x="77.1235%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.9541%" y="277" width="0.0806%" height="15" fill="rgb(224,95,0)" fg:x="955" fg:w="1"/><text x="77.2041%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="76.9541%" y="261" width="0.0806%" height="15" fill="rgb(220,169,35)" fg:x="955" fg:w="1"/><text x="77.2041%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="76.7929%" y="373" width="0.3223%" height="15" fill="rgb(242,116,47)" fg:x="953" fg:w="4"/><text x="77.0429%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.7929%" y="357" width="0.3223%" height="15" fill="rgb(251,42,20)" fg:x="953" fg:w="4"/><text x="77.0429%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="77.0346%" y="341" width="0.0806%" height="15" fill="rgb(234,7,34)" fg:x="956" fg:w="1"/><text x="77.2846%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.1152%" y="373" width="0.0806%" height="15" fill="rgb(243,208,13)" fg:x="957" fg:w="1"/><text x="77.3652%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.1152%" y="357" width="0.0806%" height="15" fill="rgb(227,33,28)" fg:x="957" fg:w="1"/><text x="77.3652%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.1152%" y="341" width="0.0806%" height="15" fill="rgb(250,47,37)" fg:x="957" fg:w="1"/><text x="77.3652%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.1152%" y="325" width="0.0806%" height="15" fill="rgb(235,111,52)" fg:x="957" fg:w="1"/><text x="77.3652%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.89%)</title><rect x="76.4706%" y="421" width="0.8864%" height="15" fill="rgb(223,64,28)" fg:x="949" fg:w="11"/><text x="76.7206%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="76.4706%" y="405" width="0.8864%" height="15" fill="rgb(236,67,22)" fg:x="949" fg:w="11"/><text x="76.7206%" y="415.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.73%)</title><rect x="76.6317%" y="389" width="0.7252%" height="15" fill="rgb(243,79,24)" fg:x="951" fg:w="9"/><text x="76.8817%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.1958%" y="373" width="0.1612%" height="15" fill="rgb(241,225,22)" fg:x="958" fg:w="2"/><text x="77.4458%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.1958%" y="357" width="0.1612%" height="15" fill="rgb(228,214,26)" fg:x="958" fg:w="2"/><text x="77.4458%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.1958%" y="341" width="0.1612%" height="15" fill="rgb(219,84,52)" fg:x="958" fg:w="2"/><text x="77.4458%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.1958%" y="325" width="0.1612%" height="15" fill="rgb(220,12,22)" fg:x="958" fg:w="2"/><text x="77.4458%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.1958%" y="309" width="0.1612%" height="15" fill="rgb(219,9,49)" fg:x="958" fg:w="2"/><text x="77.4458%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="77.1958%" y="293" width="0.1612%" height="15" fill="rgb(237,40,43)" fg:x="958" fg:w="2"/><text x="77.4458%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.2764%" y="277" width="0.0806%" height="15" fill="rgb(212,189,32)" fg:x="959" fg:w="1"/><text x="77.5264%" y="287.50"></text></g><g><title>kernel::model::entity::Entity::from_value (15 samples, 1.21%)</title><rect x="76.2288%" y="469" width="1.2087%" height="15" fill="rgb(247,48,9)" fg:x="946" fg:w="15"/><text x="76.4788%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.21%)</title><rect x="76.2288%" y="453" width="1.2087%" height="15" fill="rgb(247,112,3)" fg:x="946" fg:w="15"/><text x="76.4788%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.21%)</title><rect x="76.2288%" y="437" width="1.2087%" height="15" fill="rgb(243,110,18)" fg:x="946" fg:w="15"/><text x="76.4788%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.3570%" y="421" width="0.0806%" height="15" fill="rgb(233,223,44)" fg:x="960" fg:w="1"/><text x="77.6070%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.3570%" y="405" width="0.0806%" height="15" fill="rgb(245,160,20)" fg:x="960" fg:w="1"/><text x="77.6070%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3570%" y="389" width="0.0806%" height="15" fill="rgb(225,37,1)" fg:x="960" fg:w="1"/><text x="77.6070%" y="399.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="77.4376%" y="469" width="0.0806%" height="15" fill="rgb(253,227,39)" fg:x="961" fg:w="1"/><text x="77.6876%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.4376%" y="453" width="0.0806%" height="15" fill="rgb(240,179,26)" fg:x="961" fg:w="1"/><text x="77.6876%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.4376%" y="437" width="0.0806%" height="15" fill="rgb(237,212,23)" fg:x="961" fg:w="1"/><text x="77.6876%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (30 samples, 2.42%)</title><rect x="75.5036%" y="485" width="2.4174%" height="15" fill="rgb(221,38,11)" fg:x="937" fg:w="30"/><text x="75.7536%" y="495.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="77.5181%" y="469" width="0.4029%" height="15" fill="rgb(215,85,6)" fg:x="962" fg:w="5"/><text x="77.7681%" y="479.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="77.5181%" y="453" width="0.4029%" height="15" fill="rgb(239,64,14)" fg:x="962" fg:w="5"/><text x="77.7681%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="77.5181%" y="437" width="0.4029%" height="15" fill="rgb(215,150,32)" fg:x="962" fg:w="5"/><text x="77.7681%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="77.5181%" y="421" width="0.4029%" height="15" fill="rgb(238,15,13)" fg:x="962" fg:w="5"/><text x="77.7681%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="77.5181%" y="405" width="0.4029%" height="15" fill="rgb(251,87,8)" fg:x="962" fg:w="5"/><text x="77.7681%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="77.5987%" y="389" width="0.3223%" height="15" fill="rgb(206,86,1)" fg:x="963" fg:w="4"/><text x="77.8487%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="77.6793%" y="373" width="0.2417%" height="15" fill="rgb(208,151,45)" fg:x="964" fg:w="3"/><text x="77.9293%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.6793%" y="357" width="0.2417%" height="15" fill="rgb(231,181,24)" fg:x="964" fg:w="3"/><text x="77.9293%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="77.6793%" y="341" width="0.2417%" height="15" fill="rgb(240,106,29)" fg:x="964" fg:w="3"/><text x="77.9293%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.6793%" y="325" width="0.2417%" height="15" fill="rgb(227,166,11)" fg:x="964" fg:w="3"/><text x="77.9293%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="77.7599%" y="309" width="0.1612%" height="15" fill="rgb(254,14,34)" fg:x="965" fg:w="2"/><text x="78.0099%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.7599%" y="293" width="0.1612%" height="15" fill="rgb(223,222,6)" fg:x="965" fg:w="2"/><text x="78.0099%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.7599%" y="277" width="0.1612%" height="15" fill="rgb(245,69,24)" fg:x="965" fg:w="2"/><text x="78.0099%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.7599%" y="261" width="0.1612%" height="15" fill="rgb(213,193,7)" fg:x="965" fg:w="2"/><text x="78.0099%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8405%" y="245" width="0.0806%" height="15" fill="rgb(237,92,51)" fg:x="966" fg:w="1"/><text x="78.0905%" y="255.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (216 samples, 17.41%)</title><rect x="60.5963%" y="549" width="17.4053%" height="15" fill="rgb(225,194,6)" fg:x="752" fg:w="216"/><text x="60.8463%" y="559.50">engine::session::Session::e..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (216 samples, 17.41%)</title><rect x="60.5963%" y="533" width="17.4053%" height="15" fill="rgb(205,159,49)" fg:x="752" fg:w="216"/><text x="60.8463%" y="543.50">engine::session::Session::e..</text></g><g><title>kernel::model::EntityPtrResolver::world (31 samples, 2.50%)</title><rect x="75.5036%" y="517" width="2.4980%" height="15" fill="rgb(219,69,2)" fg:x="937" fg:w="31"/><text x="75.7536%" y="527.50">ke..</text></g><g><title>engine::session::Session::load_entity (31 samples, 2.50%)</title><rect x="75.5036%" y="501" width="2.4980%" height="15" fill="rgb(215,107,24)" fg:x="937" fg:w="31"/><text x="75.7536%" y="511.50">en..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="77.9210%" y="485" width="0.0806%" height="15" fill="rgb(249,208,29)" fg:x="967" fg:w="1"/><text x="78.1710%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.9210%" y="469" width="0.0806%" height="15" fill="rgb(213,147,10)" fg:x="967" fg:w="1"/><text x="78.1710%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (969 samples, 78.08%)</title><rect x="0.0000%" y="597" width="78.0822%" height="15" fill="rgb(254,140,42)" fg:x="0" fg:w="969"/><text x="0.2500%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (969 samples, 78.08%)</title><rect x="0.0000%" y="581" width="78.0822%" height="15" fill="rgb(249,9,15)" fg:x="0" fg:w="969"/><text x="0.2500%" y="591.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (969 samples, 78.08%)</title><rect x="0.0000%" y="565" width="78.0822%" height="15" fill="rgb(210,19,33)" fg:x="0" fg:w="969"/><text x="0.2500%" y="575.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="78.0016%" y="549" width="0.0806%" height="15" fill="rgb(241,121,22)" fg:x="968" fg:w="1"/><text x="78.2516%" y="559.50"></text></g><g><title>engine::domain::Domain::new (1 samples, 0.08%)</title><rect x="78.0016%" y="533" width="0.0806%" height="15" fill="rgb(244,69,52)" fg:x="968" fg:w="1"/><text x="78.2516%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.1628%" y="469" width="0.1612%" height="15" fill="rgb(244,191,54)" fg:x="970" fg:w="2"/><text x="78.4128%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.40%)</title><rect x="78.0822%" y="533" width="0.4029%" height="15" fill="rgb(250,3,53)" fg:x="969" fg:w="5"/><text x="78.3322%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="78.0822%" y="517" width="0.4029%" height="15" fill="rgb(205,77,3)" fg:x="969" fg:w="5"/><text x="78.3322%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.32%)</title><rect x="78.1628%" y="501" width="0.3223%" height="15" fill="rgb(207,155,3)" fg:x="970" fg:w="4"/><text x="78.4128%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.32%)</title><rect x="78.1628%" y="485" width="0.3223%" height="15" fill="rgb(224,79,2)" fg:x="970" fg:w="4"/><text x="78.4128%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (2 samples, 0.16%)</title><rect x="78.3239%" y="469" width="0.1612%" height="15" fill="rgb(243,172,5)" fg:x="972" fg:w="2"/><text x="78.5739%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4045%" y="453" width="0.0806%" height="15" fill="rgb(217,23,43)" fg:x="973" fg:w="1"/><text x="78.6545%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4851%" y="421" width="0.0806%" height="15" fill="rgb(223,109,20)" fg:x="974" fg:w="1"/><text x="78.7351%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5657%" y="405" width="0.0806%" height="15" fill="rgb(232,159,21)" fg:x="975" fg:w="1"/><text x="78.8157%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.7268%" y="389" width="0.0806%" height="15" fill="rgb(219,58,2)" fg:x="977" fg:w="1"/><text x="78.9768%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7268%" y="373" width="0.0806%" height="15" fill="rgb(241,56,8)" fg:x="977" fg:w="1"/><text x="78.9768%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="78.4851%" y="469" width="0.4835%" height="15" fill="rgb(249,10,27)" fg:x="974" fg:w="6"/><text x="78.7351%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (6 samples, 0.48%)</title><rect x="78.4851%" y="453" width="0.4835%" height="15" fill="rgb(248,177,5)" fg:x="974" fg:w="6"/><text x="78.7351%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="78.4851%" y="437" width="0.4835%" height="15" fill="rgb(239,12,30)" fg:x="974" fg:w="6"/><text x="78.7351%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.5657%" y="421" width="0.4029%" height="15" fill="rgb(229,164,25)" fg:x="975" fg:w="5"/><text x="78.8157%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.6463%" y="405" width="0.3223%" height="15" fill="rgb(231,217,50)" fg:x="976" fg:w="4"/><text x="78.8963%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="78.8074%" y="389" width="0.1612%" height="15" fill="rgb(247,99,32)" fg:x="978" fg:w="2"/><text x="79.0574%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="78.8074%" y="373" width="0.1612%" height="15" fill="rgb(240,74,50)" fg:x="978" fg:w="2"/><text x="79.0574%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0492%" y="437" width="0.0806%" height="15" fill="rgb(218,54,8)" fg:x="981" fg:w="1"/><text x="79.2992%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1297%" y="421" width="0.0806%" height="15" fill="rgb(227,132,20)" fg:x="982" fg:w="1"/><text x="79.3797%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.2103%" y="389" width="0.0806%" height="15" fill="rgb(232,134,12)" fg:x="983" fg:w="1"/><text x="79.4603%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2103%" y="373" width="0.0806%" height="15" fill="rgb(250,129,18)" fg:x="983" fg:w="1"/><text x="79.4603%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="78.0822%" y="549" width="1.2893%" height="15" fill="rgb(232,129,47)" fg:x="969" fg:w="16"/><text x="78.3322%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (11 samples, 0.89%)</title><rect x="78.4851%" y="533" width="0.8864%" height="15" fill="rgb(230,31,40)" fg:x="974" fg:w="11"/><text x="78.7351%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="78.4851%" y="517" width="0.8864%" height="15" fill="rgb(232,126,10)" fg:x="974" fg:w="11"/><text x="78.7351%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (11 samples, 0.89%)</title><rect x="78.4851%" y="501" width="0.8864%" height="15" fill="rgb(205,46,31)" fg:x="974" fg:w="11"/><text x="78.7351%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="78.4851%" y="485" width="0.8864%" height="15" fill="rgb(232,37,37)" fg:x="974" fg:w="11"/><text x="78.7351%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="78.9686%" y="469" width="0.4029%" height="15" fill="rgb(240,91,16)" fg:x="980" fg:w="5"/><text x="79.2186%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.9686%" y="453" width="0.4029%" height="15" fill="rgb(224,160,9)" fg:x="980" fg:w="5"/><text x="79.2186%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.1297%" y="437" width="0.2417%" height="15" fill="rgb(215,116,14)" fg:x="982" fg:w="3"/><text x="79.3797%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.2103%" y="421" width="0.1612%" height="15" fill="rgb(235,46,36)" fg:x="983" fg:w="2"/><text x="79.4603%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.2103%" y="405" width="0.1612%" height="15" fill="rgb(238,39,28)" fg:x="983" fg:w="2"/><text x="79.4603%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.2909%" y="389" width="0.0806%" height="15" fill="rgb(242,125,29)" fg:x="984" fg:w="1"/><text x="79.5409%" y="399.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="79.6132%" y="421" width="0.0806%" height="15" fill="rgb(238,211,30)" fg:x="988" fg:w="1"/><text x="79.8632%" y="431.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.32%)</title><rect x="79.5326%" y="453" width="0.3223%" height="15" fill="rgb(227,201,28)" fg:x="987" fg:w="4"/><text x="79.7826%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.32%)</title><rect x="79.5326%" y="437" width="0.3223%" height="15" fill="rgb(238,77,29)" fg:x="987" fg:w="4"/><text x="79.7826%" y="447.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="79.6938%" y="421" width="0.1612%" height="15" fill="rgb(213,221,40)" fg:x="989" fg:w="2"/><text x="79.9438%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.7744%" y="405" width="0.0806%" height="15" fill="rgb(226,220,44)" fg:x="990" fg:w="1"/><text x="80.0244%" y="415.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="79.8550%" y="453" width="0.0806%" height="15" fill="rgb(228,90,23)" fg:x="991" fg:w="1"/><text x="80.1050%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="79.8550%" y="437" width="0.0806%" height="15" fill="rgb(235,72,29)" fg:x="991" fg:w="1"/><text x="80.1050%" y="447.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="79.8550%" y="421" width="0.0806%" height="15" fill="rgb(248,117,39)" fg:x="991" fg:w="1"/><text x="80.1050%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="79.8550%" y="405" width="0.0806%" height="15" fill="rgb(225,43,28)" fg:x="991" fg:w="1"/><text x="80.1050%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8550%" y="389" width="0.0806%" height="15" fill="rgb(240,93,4)" fg:x="991" fg:w="1"/><text x="80.1050%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.56%)</title><rect x="79.4521%" y="469" width="0.5641%" height="15" fill="rgb(234,178,27)" fg:x="986" fg:w="7"/><text x="79.7021%" y="479.50"></text></g><g><title>kernel::plugins::Plugin::schema (1 samples, 0.08%)</title><rect x="79.9355%" y="453" width="0.0806%" height="15" fill="rgb(254,88,22)" fg:x="992" fg:w="1"/><text x="80.1855%" y="463.50"></text></g><g><title>kernel::plugins::Schema::empty (1 samples, 0.08%)</title><rect x="79.9355%" y="437" width="0.0806%" height="15" fill="rgb(240,206,50)" fg:x="992" fg:w="1"/><text x="80.1855%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.0161%" y="453" width="0.0806%" height="15" fill="rgb(249,103,8)" fg:x="993" fg:w="1"/><text x="80.2661%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.0161%" y="437" width="0.0806%" height="15" fill="rgb(241,178,36)" fg:x="993" fg:w="1"/><text x="80.2661%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.0161%" y="421" width="0.0806%" height="15" fill="rgb(246,110,15)" fg:x="993" fg:w="1"/><text x="80.2661%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.0161%" y="405" width="0.0806%" height="15" fill="rgb(207,14,43)" fg:x="993" fg:w="1"/><text x="80.2661%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.0161%" y="389" width="0.0806%" height="15" fill="rgb(253,219,19)" fg:x="993" fg:w="1"/><text x="80.2661%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.0161%" y="373" width="0.0806%" height="15" fill="rgb(216,126,5)" fg:x="993" fg:w="1"/><text x="80.2661%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="80.0161%" y="357" width="0.0806%" height="15" fill="rgb(218,78,42)" fg:x="993" fg:w="1"/><text x="80.2661%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="80.0161%" y="341" width="0.0806%" height="15" fill="rgb(215,154,40)" fg:x="993" fg:w="1"/><text x="80.2661%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="80.0161%" y="325" width="0.0806%" height="15" fill="rgb(235,129,32)" fg:x="993" fg:w="1"/><text x="80.2661%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="80.0161%" y="309" width="0.0806%" height="15" fill="rgb(218,51,8)" fg:x="993" fg:w="1"/><text x="80.2661%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.0161%" y="293" width="0.0806%" height="15" fill="rgb(245,48,4)" fg:x="993" fg:w="1"/><text x="80.2661%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.0161%" y="277" width="0.0806%" height="15" fill="rgb(250,175,12)" fg:x="993" fg:w="1"/><text x="80.2661%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.0161%" y="261" width="0.0806%" height="15" fill="rgb(237,95,40)" fg:x="993" fg:w="1"/><text x="80.2661%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="80.0161%" y="245" width="0.0806%" height="15" fill="rgb(244,120,0)" fg:x="993" fg:w="1"/><text x="80.2661%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.0161%" y="229" width="0.0806%" height="15" fill="rgb(241,19,42)" fg:x="993" fg:w="1"/><text x="80.2661%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="80.0161%" y="213" width="0.0806%" height="15" fill="rgb(217,174,48)" fg:x="993" fg:w="1"/><text x="80.2661%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="80.0161%" y="197" width="0.0806%" height="15" fill="rgb(239,36,38)" fg:x="993" fg:w="1"/><text x="80.2661%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="80.0161%" y="181" width="0.0806%" height="15" fill="rgb(220,63,49)" fg:x="993" fg:w="1"/><text x="80.2661%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.0161%" y="165" width="0.0806%" height="15" fill="rgb(240,101,13)" fg:x="993" fg:w="1"/><text x="80.2661%" y="175.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="80.0967%" y="453" width="0.0806%" height="15" fill="rgb(209,184,51)" fg:x="994" fg:w="1"/><text x="80.3467%" y="463.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="80.0967%" y="437" width="0.0806%" height="15" fill="rgb(206,136,39)" fg:x="994" fg:w="1"/><text x="80.3467%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="80.0967%" y="421" width="0.0806%" height="15" fill="rgb(254,47,45)" fg:x="994" fg:w="1"/><text x="80.3467%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="80.0967%" y="405" width="0.0806%" height="15" fill="rgb(252,103,20)" fg:x="994" fg:w="1"/><text x="80.3467%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="80.0967%" y="389" width="0.0806%" height="15" fill="rgb(230,69,12)" fg:x="994" fg:w="1"/><text x="80.3467%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="80.0967%" y="373" width="0.0806%" height="15" fill="rgb(219,2,28)" fg:x="994" fg:w="1"/><text x="80.3467%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.24%)</title><rect x="80.0161%" y="469" width="0.2417%" height="15" fill="rgb(210,9,12)" fg:x="993" fg:w="3"/><text x="80.2661%" y="479.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="80.1773%" y="453" width="0.0806%" height="15" fill="rgb(235,99,33)" fg:x="995" fg:w="1"/><text x="80.4273%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="80.1773%" y="437" width="0.0806%" height="15" fill="rgb(230,11,38)" fg:x="995" fg:w="1"/><text x="80.4273%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="80.1773%" y="421" width="0.0806%" height="15" fill="rgb(217,129,0)" fg:x="995" fg:w="1"/><text x="80.4273%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="80.1773%" y="405" width="0.0806%" height="15" fill="rgb(222,198,4)" fg:x="995" fg:w="1"/><text x="80.4273%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="80.1773%" y="389" width="0.0806%" height="15" fill="rgb(246,170,27)" fg:x="995" fg:w="1"/><text x="80.4273%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="80.1773%" y="373" width="0.0806%" height="15" fill="rgb(229,17,28)" fg:x="995" fg:w="1"/><text x="80.4273%" y="383.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="80.1773%" y="357" width="0.0806%" height="15" fill="rgb(233,198,48)" fg:x="995" fg:w="1"/><text x="80.4273%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.2579%" y="421" width="0.0806%" height="15" fill="rgb(238,103,23)" fg:x="996" fg:w="1"/><text x="80.5079%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.2579%" y="405" width="0.0806%" height="15" fill="rgb(206,91,41)" fg:x="996" fg:w="1"/><text x="80.5079%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.2579%" y="389" width="0.0806%" height="15" fill="rgb(227,34,25)" fg:x="996" fg:w="1"/><text x="80.5079%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.2579%" y="373" width="0.0806%" height="15" fill="rgb(210,110,44)" fg:x="996" fg:w="1"/><text x="80.5079%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.2579%" y="357" width="0.0806%" height="15" fill="rgb(216,189,8)" fg:x="996" fg:w="1"/><text x="80.5079%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.2579%" y="341" width="0.0806%" height="15" fill="rgb(234,9,46)" fg:x="996" fg:w="1"/><text x="80.5079%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.2579%" y="325" width="0.0806%" height="15" fill="rgb(251,200,5)" fg:x="996" fg:w="1"/><text x="80.5079%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.2579%" y="309" width="0.0806%" height="15" fill="rgb(238,165,37)" fg:x="996" fg:w="1"/><text x="80.5079%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.2579%" y="293" width="0.0806%" height="15" fill="rgb(232,77,38)" fg:x="996" fg:w="1"/><text x="80.5079%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.2579%" y="277" width="0.0806%" height="15" fill="rgb(253,179,33)" fg:x="996" fg:w="1"/><text x="80.5079%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.2579%" y="261" width="0.0806%" height="15" fill="rgb(240,13,35)" fg:x="996" fg:w="1"/><text x="80.5079%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2579%" y="245" width="0.0806%" height="15" fill="rgb(242,150,49)" fg:x="996" fg:w="1"/><text x="80.5079%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="80.4190%" y="405" width="0.2417%" height="15" fill="rgb(237,176,28)" fg:x="998" fg:w="3"/><text x="80.6690%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="80.4190%" y="389" width="0.2417%" height="15" fill="rgb(214,176,33)" fg:x="998" fg:w="3"/><text x="80.6690%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="80.4190%" y="373" width="0.2417%" height="15" fill="rgb(214,25,12)" fg:x="998" fg:w="3"/><text x="80.6690%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="80.4190%" y="357" width="0.2417%" height="15" fill="rgb(238,190,20)" fg:x="998" fg:w="3"/><text x="80.6690%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="80.4190%" y="341" width="0.2417%" height="15" fill="rgb(208,11,19)" fg:x="998" fg:w="3"/><text x="80.6690%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="80.4190%" y="325" width="0.2417%" height="15" fill="rgb(239,90,4)" fg:x="998" fg:w="3"/><text x="80.6690%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="80.4190%" y="309" width="0.2417%" height="15" fill="rgb(248,110,3)" fg:x="998" fg:w="3"/><text x="80.6690%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="80.4190%" y="293" width="0.2417%" height="15" fill="rgb(210,41,30)" fg:x="998" fg:w="3"/><text x="80.6690%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="80.4190%" y="277" width="0.2417%" height="15" fill="rgb(239,36,8)" fg:x="998" fg:w="3"/><text x="80.6690%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="80.4190%" y="261" width="0.2417%" height="15" fill="rgb(237,201,47)" fg:x="998" fg:w="3"/><text x="80.6690%" y="271.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="80.4190%" y="245" width="0.2417%" height="15" fill="rgb(224,140,29)" fg:x="998" fg:w="3"/><text x="80.6690%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.4996%" y="229" width="0.1612%" height="15" fill="rgb(231,209,17)" fg:x="999" fg:w="2"/><text x="80.7496%" y="239.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (6 samples, 0.48%)</title><rect x="80.2579%" y="453" width="0.4835%" height="15" fill="rgb(249,196,1)" fg:x="996" fg:w="6"/><text x="80.5079%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="80.2579%" y="437" width="0.4835%" height="15" fill="rgb(223,207,51)" fg:x="996" fg:w="6"/><text x="80.5079%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="80.3384%" y="421" width="0.4029%" height="15" fill="rgb(210,14,40)" fg:x="997" fg:w="5"/><text x="80.5884%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.6608%" y="405" width="0.0806%" height="15" fill="rgb(250,20,52)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="415.50"></text></g><g><title>glob::is_dir (2 samples, 0.16%)</title><rect x="80.7413%" y="405" width="0.1612%" height="15" fill="rgb(241,46,11)" fg:x="1002" fg:w="2"/><text x="80.9913%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat (2 samples, 0.16%)</title><rect x="80.7413%" y="389" width="0.1612%" height="15" fill="rgb(219,105,5)" fg:x="1002" fg:w="2"/><text x="80.9913%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.16%)</title><rect x="80.7413%" y="373" width="0.1612%" height="15" fill="rgb(252,77,35)" fg:x="1002" fg:w="2"/><text x="80.9913%" y="383.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="80.7413%" y="357" width="0.1612%" height="15" fill="rgb(243,119,2)" fg:x="1002" fg:w="2"/><text x="80.9913%" y="367.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="80.7413%" y="341" width="0.1612%" height="15" fill="rgb(206,82,28)" fg:x="1002" fg:w="2"/><text x="80.9913%" y="351.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="80.7413%" y="325" width="0.1612%" height="15" fill="rgb(227,120,12)" fg:x="1002" fg:w="2"/><text x="80.9913%" y="335.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="80.7413%" y="309" width="0.1612%" height="15" fill="rgb(229,134,41)" fg:x="1002" fg:w="2"/><text x="80.9913%" y="319.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="80.7413%" y="293" width="0.1612%" height="15" fill="rgb(239,96,32)" fg:x="1002" fg:w="2"/><text x="80.9913%" y="303.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="80.7413%" y="437" width="0.2417%" height="15" fill="rgb(225,46,27)" fg:x="1002" fg:w="3"/><text x="80.9913%" y="447.50"></text></g><g><title>glob::fill_todo (3 samples, 0.24%)</title><rect x="80.7413%" y="421" width="0.2417%" height="15" fill="rgb(215,168,2)" fg:x="1002" fg:w="3"/><text x="80.9913%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="80.9025%" y="405" width="0.0806%" height="15" fill="rgb(207,170,52)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="80.9025%" y="389" width="0.0806%" height="15" fill="rgb(237,198,36)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="80.9025%" y="373" width="0.0806%" height="15" fill="rgb(213,27,14)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="383.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="80.9025%" y="357" width="0.0806%" height="15" fill="rgb(218,77,5)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="80.9025%" y="341" width="0.0806%" height="15" fill="rgb(230,219,39)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="351.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="80.9025%" y="325" width="0.0806%" height="15" fill="rgb(245,177,7)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="335.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="80.9025%" y="309" width="0.0806%" height="15" fill="rgb(246,44,46)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="319.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.1442%" y="405" width="0.0806%" height="15" fill="rgb(207,173,15)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="415.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="81.1442%" y="389" width="0.0806%" height="15" fill="rgb(245,170,50)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="399.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="81.1442%" y="373" width="0.0806%" height="15" fill="rgb(233,156,21)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="383.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="81.1442%" y="357" width="0.0806%" height="15" fill="rgb(253,146,27)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="81.1442%" y="341" width="0.0806%" height="15" fill="rgb(247,66,29)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="81.1442%" y="325" width="0.0806%" height="15" fill="rgb(218,207,26)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="81.1442%" y="309" width="0.0806%" height="15" fill="rgb(234,93,26)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="81.1442%" y="293" width="0.0806%" height="15" fill="rgb(214,75,48)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="81.1442%" y="277" width="0.0806%" height="15" fill="rgb(229,119,22)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.1442%" y="261" width="0.0806%" height="15" fill="rgb(226,153,19)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="81.1442%" y="245" width="0.0806%" height="15" fill="rgb(220,204,36)" fg:x="1007" fg:w="1"/><text x="81.3942%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.2248%" y="389" width="0.0806%" height="15" fill="rgb(253,181,43)" fg:x="1008" fg:w="1"/><text x="81.4748%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.2248%" y="373" width="0.0806%" height="15" fill="rgb(211,41,51)" fg:x="1008" fg:w="1"/><text x="81.4748%" y="383.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (14 samples, 1.13%)</title><rect x="80.2579%" y="469" width="1.1281%" height="15" fill="rgb(207,215,0)" fg:x="996" fg:w="14"/><text x="80.5079%" y="479.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (8 samples, 0.64%)</title><rect x="80.7413%" y="453" width="0.6446%" height="15" fill="rgb(212,153,10)" fg:x="1002" fg:w="8"/><text x="80.9913%" y="463.50"></text></g><g><title>glob::glob (5 samples, 0.40%)</title><rect x="80.9831%" y="437" width="0.4029%" height="15" fill="rgb(251,171,36)" fg:x="1005" fg:w="5"/><text x="81.2331%" y="447.50"></text></g><g><title>glob::glob_with (5 samples, 0.40%)</title><rect x="80.9831%" y="421" width="0.4029%" height="15" fill="rgb(225,219,41)" fg:x="1005" fg:w="5"/><text x="81.2331%" y="431.50"></text></g><g><title>glob::Pattern::new (2 samples, 0.16%)</title><rect x="81.2248%" y="405" width="0.1612%" height="15" fill="rgb(208,200,1)" fg:x="1008" fg:w="2"/><text x="81.4748%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="81.3054%" y="389" width="0.0806%" height="15" fill="rgb(206,75,47)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.3054%" y="373" width="0.0806%" height="15" fill="rgb(248,3,16)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.3054%" y="357" width="0.0806%" height="15" fill="rgb(242,157,36)" fg:x="1009" fg:w="1"/><text x="81.5554%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3860%" y="469" width="0.0806%" height="15" fill="rgb(215,175,11)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="81.4666%" y="453" width="0.1612%" height="15" fill="rgb(252,222,22)" fg:x="1011" fg:w="2"/><text x="81.7166%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (29 samples, 2.34%)</title><rect x="79.3715%" y="485" width="2.3368%" height="15" fill="rgb(250,121,35)" fg:x="985" fg:w="29"/><text x="79.6215%" y="495.50">k..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (3 samples, 0.24%)</title><rect x="81.4666%" y="469" width="0.2417%" height="15" fill="rgb(233,120,49)" fg:x="1011" fg:w="3"/><text x="81.7166%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="81.6277%" y="453" width="0.0806%" height="15" fill="rgb(205,201,14)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6277%" y="437" width="0.0806%" height="15" fill="rgb(219,58,45)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="447.50"></text></g><g><title>engine::session::Session::initialize (30 samples, 2.42%)</title><rect x="79.3715%" y="501" width="2.4174%" height="15" fill="rgb(251,65,12)" fg:x="985" fg:w="30"/><text x="79.6215%" y="511.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="81.7083%" y="485" width="0.0806%" height="15" fill="rgb(224,47,31)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.7083%" y="469" width="0.0806%" height="15" fill="rgb(233,74,26)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="479.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="81.7083%" y="453" width="0.0806%" height="15" fill="rgb(231,211,31)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7083%" y="437" width="0.0806%" height="15" fill="rgb(239,167,5)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="447.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (31 samples, 2.50%)</title><rect x="79.3715%" y="549" width="2.4980%" height="15" fill="rgb(241,85,0)" fg:x="985" fg:w="31"/><text x="79.6215%" y="559.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (31 samples, 2.50%)</title><rect x="79.3715%" y="533" width="2.4980%" height="15" fill="rgb(229,130,21)" fg:x="985" fg:w="31"/><text x="79.6215%" y="543.50">en..</text></g><g><title>engine::session::Session::new (31 samples, 2.50%)</title><rect x="79.3715%" y="517" width="2.4980%" height="15" fill="rgb(254,84,49)" fg:x="985" fg:w="31"/><text x="79.6215%" y="527.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="81.7889%" y="501" width="0.0806%" height="15" fill="rgb(235,85,21)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.7889%" y="485" width="0.0806%" height="15" fill="rgb(246,128,52)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.7889%" y="469" width="0.0806%" height="15" fill="rgb(243,114,49)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.7889%" y="453" width="0.0806%" height="15" fill="rgb(240,224,22)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="81.9500%" y="517" width="0.0806%" height="15" fill="rgb(247,201,52)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="82.0306%" y="517" width="0.0806%" height="15" fill="rgb(231,70,45)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="527.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="82.0306%" y="501" width="0.0806%" height="15" fill="rgb(217,215,20)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="511.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="82.0306%" y="485" width="0.0806%" height="15" fill="rgb(226,170,30)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="495.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="82.0306%" y="469" width="0.0806%" height="15" fill="rgb(220,190,43)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="82.0306%" y="453" width="0.0806%" height="15" fill="rgb(218,20,18)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="82.0306%" y="437" width="0.0806%" height="15" fill="rgb(245,37,26)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="82.0306%" y="421" width="0.0806%" height="15" fill="rgb(241,127,29)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.1112%" y="421" width="0.0806%" height="15" fill="rgb(241,33,26)" fg:x="1019" fg:w="1"/><text x="82.3612%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.1112%" y="405" width="0.0806%" height="15" fill="rgb(220,106,21)" fg:x="1019" fg:w="1"/><text x="82.3612%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.1112%" y="389" width="0.0806%" height="15" fill="rgb(225,125,35)" fg:x="1019" fg:w="1"/><text x="82.3612%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.1112%" y="373" width="0.0806%" height="15" fill="rgb(248,80,22)" fg:x="1019" fg:w="1"/><text x="82.3612%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.1918%" y="357" width="0.0806%" height="15" fill="rgb(231,117,39)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.2724%" y="341" width="0.0806%" height="15" fill="rgb(239,183,16)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.2724%" y="325" width="0.0806%" height="15" fill="rgb(221,61,19)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.2724%" y="309" width="0.0806%" height="15" fill="rgb(239,196,44)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="82.2724%" y="293" width="0.0806%" height="15" fill="rgb(206,113,19)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="82.1918%" y="389" width="0.2417%" height="15" fill="rgb(245,114,12)" fg:x="1020" fg:w="3"/><text x="82.4418%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="82.1918%" y="373" width="0.2417%" height="15" fill="rgb(247,89,39)" fg:x="1020" fg:w="3"/><text x="82.4418%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2724%" y="357" width="0.1612%" height="15" fill="rgb(213,85,14)" fg:x="1021" fg:w="2"/><text x="82.5224%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3529%" y="341" width="0.0806%" height="15" fill="rgb(249,206,33)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3529%" y="325" width="0.0806%" height="15" fill="rgb(235,167,47)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.3529%" y="309" width="0.0806%" height="15" fill="rgb(217,177,16)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.3529%" y="293" width="0.0806%" height="15" fill="rgb(250,228,29)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.4335%" y="389" width="0.1612%" height="15" fill="rgb(216,195,42)" fg:x="1023" fg:w="2"/><text x="82.6835%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.5141%" y="373" width="0.0806%" height="15" fill="rgb(232,192,32)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.5141%" y="357" width="0.0806%" height="15" fill="rgb(211,8,47)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="82.5141%" y="341" width="0.0806%" height="15" fill="rgb(251,201,9)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="82.1918%" y="405" width="0.5641%" height="15" fill="rgb(206,185,47)" fg:x="1020" fg:w="7"/><text x="82.4418%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.5947%" y="389" width="0.1612%" height="15" fill="rgb(245,54,32)" fg:x="1025" fg:w="2"/><text x="82.8447%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.5947%" y="373" width="0.1612%" height="15" fill="rgb(208,1,8)" fg:x="1025" fg:w="2"/><text x="82.8447%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.6753%" y="357" width="0.0806%" height="15" fill="rgb(228,57,24)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.81%)</title><rect x="82.1112%" y="437" width="0.8058%" height="15" fill="rgb(251,24,8)" fg:x="1019" fg:w="10"/><text x="82.3612%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="82.1918%" y="421" width="0.7252%" height="15" fill="rgb(236,196,50)" fg:x="1020" fg:w="9"/><text x="82.4418%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.7558%" y="405" width="0.1612%" height="15" fill="rgb(246,222,29)" fg:x="1027" fg:w="2"/><text x="83.0058%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.8364%" y="389" width="0.0806%" height="15" fill="rgb(211,34,40)" fg:x="1028" fg:w="1"/><text x="83.0864%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="82.8364%" y="373" width="0.0806%" height="15" fill="rgb(210,66,51)" fg:x="1028" fg:w="1"/><text x="83.0864%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.08%)</title><rect x="82.9170%" y="437" width="0.0806%" height="15" fill="rgb(250,56,43)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9170%" y="421" width="0.0806%" height="15" fill="rgb(240,111,50)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9976%" y="405" width="0.0806%" height="15" fill="rgb(209,117,13)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.9976%" y="437" width="0.2417%" height="15" fill="rgb(232,164,45)" fg:x="1030" fg:w="3"/><text x="83.2476%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="82.9976%" y="421" width="0.2417%" height="15" fill="rgb(205,69,32)" fg:x="1030" fg:w="3"/><text x="83.2476%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="83.0782%" y="405" width="0.1612%" height="15" fill="rgb(240,147,45)" fg:x="1031" fg:w="2"/><text x="83.3282%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="83.0782%" y="389" width="0.1612%" height="15" fill="rgb(221,94,48)" fg:x="1031" fg:w="2"/><text x="83.3282%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.1587%" y="373" width="0.0806%" height="15" fill="rgb(249,209,17)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.1587%" y="357" width="0.0806%" height="15" fill="rgb(228,57,28)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="83.2393%" y="421" width="0.0806%" height="15" fill="rgb(250,133,26)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.2393%" y="405" width="0.0806%" height="15" fill="rgb(254,15,16)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2393%" y="389" width="0.0806%" height="15" fill="rgb(209,147,42)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3199%" y="389" width="0.0806%" height="15" fill="rgb(208,5,29)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="83.4005%" y="389" width="0.1612%" height="15" fill="rgb(250,73,31)" fg:x="1035" fg:w="2"/><text x="83.6505%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.4005%" y="373" width="0.1612%" height="15" fill="rgb(238,45,10)" fg:x="1035" fg:w="2"/><text x="83.6505%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.4811%" y="357" width="0.0806%" height="15" fill="rgb(214,104,5)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="83.4811%" y="341" width="0.0806%" height="15" fill="rgb(242,217,19)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5616%" y="341" width="0.0806%" height="15" fill="rgb(246,113,27)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.5616%" y="325" width="0.0806%" height="15" fill="rgb(221,34,27)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="83.6422%" y="325" width="0.0806%" height="15" fill="rgb(246,109,6)" fg:x="1038" fg:w="1"/><text x="83.8922%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6422%" y="309" width="0.0806%" height="15" fill="rgb(217,12,25)" fg:x="1038" fg:w="1"/><text x="83.8922%" y="319.50"></text></g><g><title>engine::session::state::State::flush_entities (21 samples, 1.69%)</title><rect x="82.1112%" y="501" width="1.6922%" height="15" fill="rgb(250,195,5)" fg:x="1019" fg:w="21"/><text x="82.3612%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (21 samples, 1.69%)</title><rect x="82.1112%" y="485" width="1.6922%" height="15" fill="rgb(244,140,45)" fg:x="1019" fg:w="21"/><text x="82.3612%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 1.69%)</title><rect x="82.1112%" y="469" width="1.6922%" height="15" fill="rgb(230,64,14)" fg:x="1019" fg:w="21"/><text x="82.3612%" y="479.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (21 samples, 1.69%)</title><rect x="82.1112%" y="453" width="1.6922%" height="15" fill="rgb(206,27,27)" fg:x="1019" fg:w="21"/><text x="82.3612%" y="463.50"></text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="83.2393%" y="437" width="0.5641%" height="15" fill="rgb(230,14,50)" fg:x="1033" fg:w="7"/><text x="83.4893%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="83.3199%" y="421" width="0.4835%" height="15" fill="rgb(237,172,14)" fg:x="1034" fg:w="6"/><text x="83.5699%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="83.3199%" y="405" width="0.4835%" height="15" fill="rgb(209,25,21)" fg:x="1034" fg:w="6"/><text x="83.5699%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="83.5616%" y="389" width="0.2417%" height="15" fill="rgb(248,148,22)" fg:x="1037" fg:w="3"/><text x="83.8116%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="83.5616%" y="373" width="0.2417%" height="15" fill="rgb(234,100,22)" fg:x="1037" fg:w="3"/><text x="83.8116%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="83.5616%" y="357" width="0.2417%" height="15" fill="rgb(210,20,30)" fg:x="1037" fg:w="3"/><text x="83.8116%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="83.6422%" y="341" width="0.1612%" height="15" fill="rgb(232,58,0)" fg:x="1038" fg:w="2"/><text x="83.8922%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.7228%" y="325" width="0.0806%" height="15" fill="rgb(221,68,13)" fg:x="1039" fg:w="1"/><text x="83.9728%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.7228%" y="309" width="0.0806%" height="15" fill="rgb(231,194,11)" fg:x="1039" fg:w="1"/><text x="83.9728%" y="319.50"></text></g><g><title>engine::session::Session::flush (24 samples, 1.93%)</title><rect x="81.9500%" y="533" width="1.9339%" height="15" fill="rgb(235,51,41)" fg:x="1017" fg:w="24"/><text x="82.2000%" y="543.50">e..</text></g><g><title>engine::session::state::State::close (22 samples, 1.77%)</title><rect x="82.1112%" y="517" width="1.7728%" height="15" fill="rgb(240,50,32)" fg:x="1019" fg:w="22"/><text x="82.3612%" y="527.50">e..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="83.8034%" y="501" width="0.0806%" height="15" fill="rgb(240,185,36)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.8840%" y="517" width="0.0806%" height="15" fill="rgb(211,168,15)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="83.8840%" y="501" width="0.0806%" height="15" fill="rgb(221,70,0)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8840%" y="485" width="0.0806%" height="15" fill="rgb(205,21,33)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8840%" y="469" width="0.0806%" height="15" fill="rgb(225,106,10)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.8840%" y="453" width="0.0806%" height="15" fill="rgb(236,200,50)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8840%" y="437" width="0.0806%" height="15" fill="rgb(249,93,23)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8840%" y="421" width="0.0806%" height="15" fill="rgb(244,115,35)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8840%" y="405" width="0.0806%" height="15" fill="rgb(231,129,47)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="83.9645%" y="501" width="0.0806%" height="15" fill="rgb(225,160,50)" fg:x="1042" fg:w="1"/><text x="84.2145%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="83.9645%" y="485" width="0.0806%" height="15" fill="rgb(218,135,23)" fg:x="1042" fg:w="1"/><text x="84.2145%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="84.0451%" y="501" width="0.0806%" height="15" fill="rgb(227,119,14)" fg:x="1043" fg:w="1"/><text x="84.2951%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="84.0451%" y="485" width="0.0806%" height="15" fill="rgb(242,138,13)" fg:x="1043" fg:w="1"/><text x="84.2951%" y="495.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.0451%" y="469" width="0.0806%" height="15" fill="rgb(215,11,16)" fg:x="1043" fg:w="1"/><text x="84.2951%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0451%" y="453" width="0.0806%" height="15" fill="rgb(234,170,50)" fg:x="1043" fg:w="1"/><text x="84.2951%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0451%" y="437" width="0.0806%" height="15" fill="rgb(233,34,20)" fg:x="1043" fg:w="1"/><text x="84.2951%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="84.1257%" y="453" width="0.0806%" height="15" fill="rgb(237,100,45)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1257%" y="437" width="0.0806%" height="15" fill="rgb(231,184,36)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1257%" y="421" width="0.0806%" height="15" fill="rgb(252,93,2)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.1257%" y="405" width="0.0806%" height="15" fill="rgb(248,176,47)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1257%" y="389" width="0.0806%" height="15" fill="rgb(249,125,23)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1257%" y="373" width="0.0806%" height="15" fill="rgb(239,67,42)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1257%" y="357" width="0.0806%" height="15" fill="rgb(244,162,4)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.1257%" y="341" width="0.0806%" height="15" fill="rgb(214,150,38)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="84.1257%" y="485" width="0.1612%" height="15" fill="rgb(228,211,28)" fg:x="1044" fg:w="2"/><text x="84.3757%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="84.1257%" y="469" width="0.1612%" height="15" fill="rgb(212,98,48)" fg:x="1044" fg:w="2"/><text x="84.3757%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2063%" y="453" width="0.0806%" height="15" fill="rgb(213,45,13)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2063%" y="437" width="0.0806%" height="15" fill="rgb(218,35,29)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2063%" y="421" width="0.0806%" height="15" fill="rgb(244,13,3)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2063%" y="405" width="0.0806%" height="15" fill="rgb(235,170,19)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.2063%" y="389" width="0.0806%" height="15" fill="rgb(233,193,43)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::new_from_entity (1 samples, 0.08%)</title><rect x="84.2869%" y="485" width="0.0806%" height="15" fill="rgb(228,223,20)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (7 samples, 0.56%)</title><rect x="83.8840%" y="533" width="0.5641%" height="15" fill="rgb(208,85,54)" fg:x="1041" fg:w="7"/><text x="84.1340%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="83.9645%" y="517" width="0.4835%" height="15" fill="rgb(254,14,45)" fg:x="1042" fg:w="6"/><text x="84.2145%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="84.1257%" y="501" width="0.3223%" height="15" fill="rgb(247,99,29)" fg:x="1044" fg:w="4"/><text x="84.3757%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3674%" y="485" width="0.0806%" height="15" fill="rgb(225,180,54)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3674%" y="469" width="0.0806%" height="15" fill="rgb(239,88,43)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.3674%" y="453" width="0.0806%" height="15" fill="rgb(209,47,11)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="84.3674%" y="437" width="0.0806%" height="15" fill="rgb(219,179,23)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.3674%" y="421" width="0.0806%" height="15" fill="rgb(213,183,19)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3674%" y="405" width="0.0806%" height="15" fill="rgb(210,11,9)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.3674%" y="389" width="0.0806%" height="15" fill="rgb(239,194,16)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3674%" y="373" width="0.0806%" height="15" fill="rgb(246,23,50)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.3674%" y="357" width="0.0806%" height="15" fill="rgb(245,10,41)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="367.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (1 samples, 0.08%)</title><rect x="84.4480%" y="533" width="0.0806%" height="15" fill="rgb(228,43,24)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="543.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.08%)</title><rect x="84.4480%" y="517" width="0.0806%" height="15" fill="rgb(220,151,0)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.4480%" y="501" width="0.0806%" height="15" fill="rgb(232,219,10)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4480%" y="485" width="0.0806%" height="15" fill="rgb(227,217,48)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4480%" y="469" width="0.0806%" height="15" fill="rgb(210,66,35)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4480%" y="453" width="0.0806%" height="15" fill="rgb(254,6,7)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4480%" y="437" width="0.0806%" height="15" fill="rgb(235,222,42)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4480%" y="421" width="0.0806%" height="15" fill="rgb(245,126,5)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4480%" y="405" width="0.0806%" height="15" fill="rgb(215,73,17)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4480%" y="389" width="0.0806%" height="15" fill="rgb(219,198,52)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.5286%" y="469" width="0.0806%" height="15" fill="rgb(217,159,18)" fg:x="1049" fg:w="1"/><text x="84.7786%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.5286%" y="453" width="0.0806%" height="15" fill="rgb(212,177,18)" fg:x="1049" fg:w="1"/><text x="84.7786%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5286%" y="437" width="0.0806%" height="15" fill="rgb(241,10,11)" fg:x="1049" fg:w="1"/><text x="84.7786%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5286%" y="421" width="0.0806%" height="15" fill="rgb(232,114,35)" fg:x="1049" fg:w="1"/><text x="84.7786%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5286%" y="405" width="0.0806%" height="15" fill="rgb(238,222,8)" fg:x="1049" fg:w="1"/><text x="84.7786%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5286%" y="389" width="0.0806%" height="15" fill="rgb(251,153,44)" fg:x="1049" fg:w="1"/><text x="84.7786%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="84.5286%" y="501" width="0.1612%" height="15" fill="rgb(210,140,51)" fg:x="1049" fg:w="2"/><text x="84.7786%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.5286%" y="485" width="0.1612%" height="15" fill="rgb(222,63,0)" fg:x="1049" fg:w="2"/><text x="84.7786%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.6092%" y="469" width="0.0806%" height="15" fill="rgb(240,18,40)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.6092%" y="453" width="0.0806%" height="15" fill="rgb(237,88,16)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6092%" y="437" width="0.0806%" height="15" fill="rgb(251,117,13)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="84.6898%" y="485" width="0.0806%" height="15" fill="rgb(251,228,8)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6898%" y="469" width="0.0806%" height="15" fill="rgb(205,107,49)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6898%" y="453" width="0.0806%" height="15" fill="rgb(238,72,41)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6898%" y="437" width="0.0806%" height="15" fill="rgb(248,183,52)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6898%" y="421" width="0.0806%" height="15" fill="rgb(215,58,20)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.6898%" y="405" width="0.0806%" height="15" fill="rgb(209,49,13)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6898%" y="389" width="0.0806%" height="15" fill="rgb(208,113,17)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.7703%" y="453" width="0.0806%" height="15" fill="rgb(208,14,22)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.7703%" y="437" width="0.0806%" height="15" fill="rgb(222,95,2)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.7703%" y="421" width="0.0806%" height="15" fill="rgb(253,180,37)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.7703%" y="405" width="0.0806%" height="15" fill="rgb(250,81,33)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.7703%" y="389" width="0.0806%" height="15" fill="rgb(251,151,41)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.7703%" y="373" width="0.0806%" height="15" fill="rgb(210,135,17)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.7703%" y="357" width="0.0806%" height="15" fill="rgb(239,21,29)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="84.6898%" y="501" width="0.2417%" height="15" fill="rgb(231,215,16)" fg:x="1051" fg:w="3"/><text x="84.9398%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="84.7703%" y="485" width="0.1612%" height="15" fill="rgb(239,151,54)" fg:x="1052" fg:w="2"/><text x="85.0203%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.7703%" y="469" width="0.1612%" height="15" fill="rgb(222,122,38)" fg:x="1052" fg:w="2"/><text x="85.0203%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.8509%" y="453" width="0.0806%" height="15" fill="rgb(243,128,1)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="84.8509%" y="437" width="0.0806%" height="15" fill="rgb(225,74,21)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8509%" y="421" width="0.0806%" height="15" fill="rgb(216,210,10)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (6 samples, 0.48%)</title><rect x="84.5286%" y="533" width="0.4835%" height="15" fill="rgb(228,76,19)" fg:x="1049" fg:w="6"/><text x="84.7786%" y="543.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="84.5286%" y="517" width="0.4835%" height="15" fill="rgb(236,80,34)" fg:x="1049" fg:w="6"/><text x="84.7786%" y="527.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="84.9315%" y="501" width="0.0806%" height="15" fill="rgb(225,173,23)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.9315%" y="485" width="0.0806%" height="15" fill="rgb(253,38,1)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="84.9315%" y="469" width="0.0806%" height="15" fill="rgb(206,155,35)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0121%" y="485" width="0.0806%" height="15" fill="rgb(254,27,53)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="85.0121%" y="517" width="0.1612%" height="15" fill="rgb(225,52,41)" fg:x="1055" fg:w="2"/><text x="85.2621%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="85.0121%" y="501" width="0.1612%" height="15" fill="rgb(244,53,18)" fg:x="1055" fg:w="2"/><text x="85.2621%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.0927%" y="485" width="0.0806%" height="15" fill="rgb(254,206,48)" fg:x="1056" fg:w="1"/><text x="85.3427%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0927%" y="469" width="0.0806%" height="15" fill="rgb(236,182,23)" fg:x="1056" fg:w="1"/><text x="85.3427%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="85.1732%" y="517" width="0.0806%" height="15" fill="rgb(236,191,37)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.1732%" y="501" width="0.0806%" height="15" fill="rgb(245,53,8)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="85.1732%" y="485" width="0.0806%" height="15" fill="rgb(245,147,9)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="85.1732%" y="469" width="0.0806%" height="15" fill="rgb(218,24,48)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.1732%" y="453" width="0.0806%" height="15" fill="rgb(254,23,9)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.1732%" y="437" width="0.0806%" height="15" fill="rgb(244,105,9)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.1732%" y="421" width="0.0806%" height="15" fill="rgb(212,142,22)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1732%" y="405" width="0.0806%" height="15" fill="rgb(221,114,49)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1732%" y="389" width="0.0806%" height="15" fill="rgb(223,210,25)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.1732%" y="373" width="0.0806%" height="15" fill="rgb(235,162,44)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1732%" y="357" width="0.0806%" height="15" fill="rgb(237,65,45)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.1732%" y="341" width="0.0806%" height="15" fill="rgb(208,79,9)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="85.2538%" y="501" width="0.0806%" height="15" fill="rgb(215,228,8)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2538%" y="485" width="0.0806%" height="15" fill="rgb(205,185,17)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2538%" y="469" width="0.0806%" height="15" fill="rgb(213,62,36)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.2538%" y="453" width="0.0806%" height="15" fill="rgb(209,34,9)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.2538%" y="437" width="0.0806%" height="15" fill="rgb(246,151,27)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.2538%" y="421" width="0.0806%" height="15" fill="rgb(218,206,3)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2538%" y="405" width="0.0806%" height="15" fill="rgb(242,202,1)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2538%" y="389" width="0.0806%" height="15" fill="rgb(227,185,16)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.2538%" y="373" width="0.0806%" height="15" fill="rgb(241,1,14)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.2538%" y="357" width="0.0806%" height="15" fill="rgb(212,113,25)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.2538%" y="341" width="0.0806%" height="15" fill="rgb(247,37,43)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.2538%" y="325" width="0.0806%" height="15" fill="rgb(226,54,8)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2538%" y="309" width="0.0806%" height="15" fill="rgb(251,205,25)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.3344%" y="453" width="0.0806%" height="15" fill="rgb(246,87,35)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="85.3344%" y="437" width="0.0806%" height="15" fill="rgb(251,145,46)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.3344%" y="421" width="0.0806%" height="15" fill="rgb(210,210,33)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.4956%" y="373" width="0.0806%" height="15" fill="rgb(221,151,11)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="85.4956%" y="389" width="0.2417%" height="15" fill="rgb(208,160,28)" fg:x="1061" fg:w="3"/><text x="85.7456%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.5761%" y="373" width="0.1612%" height="15" fill="rgb(243,69,29)" fg:x="1062" fg:w="2"/><text x="85.8261%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.7373%" y="373" width="0.1612%" height="15" fill="rgb(224,144,4)" fg:x="1064" fg:w="2"/><text x="85.9873%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.8179%" y="357" width="0.0806%" height="15" fill="rgb(211,140,38)" fg:x="1065" fg:w="1"/><text x="86.0679%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.8985%" y="357" width="0.0806%" height="15" fill="rgb(252,189,15)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.9790%" y="357" width="0.0806%" height="15" fill="rgb(251,175,23)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9790%" y="341" width="0.0806%" height="15" fill="rgb(212,184,11)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9790%" y="325" width="0.0806%" height="15" fill="rgb(217,205,6)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.9790%" y="309" width="0.0806%" height="15" fill="rgb(235,45,45)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.0596%" y="357" width="0.0806%" height="15" fill="rgb(211,157,53)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.0596%" y="341" width="0.0806%" height="15" fill="rgb(212,13,8)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.0596%" y="325" width="0.0806%" height="15" fill="rgb(218,80,36)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="335.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="86.1402%" y="341" width="0.0806%" height="15" fill="rgb(211,123,43)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.2208%" y="325" width="0.1612%" height="15" fill="rgb(206,165,2)" fg:x="1070" fg:w="2"/><text x="86.4708%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.2208%" y="309" width="0.1612%" height="15" fill="rgb(248,63,35)" fg:x="1070" fg:w="2"/><text x="86.4708%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.3014%" y="293" width="0.0806%" height="15" fill="rgb(219,133,41)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.3014%" y="277" width="0.0806%" height="15" fill="rgb(206,175,46)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="85.8985%" y="373" width="0.5641%" height="15" fill="rgb(224,41,35)" fg:x="1066" fg:w="7"/><text x="86.1485%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="86.1402%" y="357" width="0.3223%" height="15" fill="rgb(226,113,24)" fg:x="1069" fg:w="4"/><text x="86.3902%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="86.2208%" y="341" width="0.2417%" height="15" fill="rgb(219,51,41)" fg:x="1070" fg:w="3"/><text x="86.4708%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.3820%" y="325" width="0.0806%" height="15" fill="rgb(220,145,47)" fg:x="1072" fg:w="1"/><text x="86.6320%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.3820%" y="309" width="0.0806%" height="15" fill="rgb(239,121,47)" fg:x="1072" fg:w="1"/><text x="86.6320%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.05%)</title><rect x="85.4956%" y="405" width="1.0475%" height="15" fill="rgb(207,60,40)" fg:x="1061" fg:w="13"/><text x="85.7456%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="85.7373%" y="389" width="0.8058%" height="15" fill="rgb(224,229,11)" fg:x="1064" fg:w="10"/><text x="85.9873%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.4625%" y="373" width="0.0806%" height="15" fill="rgb(252,28,32)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.4625%" y="357" width="0.0806%" height="15" fill="rgb(207,52,49)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.4625%" y="341" width="0.0806%" height="15" fill="rgb(243,51,50)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.4625%" y="325" width="0.0806%" height="15" fill="rgb(212,92,21)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.4625%" y="309" width="0.0806%" height="15" fill="rgb(230,183,50)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.4625%" y="293" width="0.0806%" height="15" fill="rgb(225,48,9)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5431%" y="357" width="0.0806%" height="15" fill="rgb(254,44,4)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.6237%" y="357" width="0.0806%" height="15" fill="rgb(252,128,37)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.7849%" y="325" width="0.0806%" height="15" fill="rgb(227,178,8)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7849%" y="309" width="0.0806%" height="15" fill="rgb(205,206,32)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.8654%" y="309" width="0.1612%" height="15" fill="rgb(220,218,22)" fg:x="1078" fg:w="2"/><text x="87.1154%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="86.5431%" y="405" width="0.5641%" height="15" fill="rgb(236,41,28)" fg:x="1074" fg:w="7"/><text x="86.7931%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="86.5431%" y="389" width="0.5641%" height="15" fill="rgb(219,37,7)" fg:x="1074" fg:w="7"/><text x="86.7931%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="86.5431%" y="373" width="0.5641%" height="15" fill="rgb(206,160,15)" fg:x="1074" fg:w="7"/><text x="86.7931%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="86.7043%" y="357" width="0.4029%" height="15" fill="rgb(208,82,21)" fg:x="1076" fg:w="5"/><text x="86.9543%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="86.7849%" y="341" width="0.3223%" height="15" fill="rgb(226,130,25)" fg:x="1077" fg:w="4"/><text x="87.0349%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.8654%" y="325" width="0.2417%" height="15" fill="rgb(212,72,24)" fg:x="1078" fg:w="3"/><text x="87.1154%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.0266%" y="309" width="0.0806%" height="15" fill="rgb(206,28,16)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="319.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="87.1072%" y="373" width="0.1612%" height="15" fill="rgb(249,41,5)" fg:x="1081" fg:w="2"/><text x="87.3572%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="87.1072%" y="357" width="0.1612%" height="15" fill="rgb(233,96,48)" fg:x="1081" fg:w="2"/><text x="87.3572%" y="367.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="87.1072%" y="341" width="0.1612%" height="15" fill="rgb(240,198,11)" fg:x="1081" fg:w="2"/><text x="87.3572%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="87.1878%" y="325" width="0.0806%" height="15" fill="rgb(209,175,35)" fg:x="1082" fg:w="1"/><text x="87.4378%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="87.1072%" y="389" width="0.2417%" height="15" fill="rgb(214,40,51)" fg:x="1081" fg:w="3"/><text x="87.3572%" y="399.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="87.2683%" y="373" width="0.0806%" height="15" fill="rgb(252,56,4)" fg:x="1083" fg:w="1"/><text x="87.5183%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="87.4295%" y="357" width="0.0806%" height="15" fill="rgb(219,131,5)" fg:x="1085" fg:w="1"/><text x="87.6795%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.4295%" y="341" width="0.0806%" height="15" fill="rgb(223,67,53)" fg:x="1085" fg:w="1"/><text x="87.6795%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4295%" y="325" width="0.0806%" height="15" fill="rgb(227,154,8)" fg:x="1085" fg:w="1"/><text x="87.6795%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5907%" y="309" width="0.0806%" height="15" fill="rgb(216,174,51)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.5907%" y="293" width="0.0806%" height="15" fill="rgb(239,60,34)" fg:x="1087" fg:w="1"/><text x="87.8407%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.6712%" y="309" width="0.0806%" height="15" fill="rgb(236,165,48)" fg:x="1088" fg:w="1"/><text x="87.9212%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="87.8324%" y="293" width="0.2417%" height="15" fill="rgb(210,37,26)" fg:x="1090" fg:w="3"/><text x="88.0824%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="87.8324%" y="277" width="0.2417%" height="15" fill="rgb(211,3,17)" fg:x="1090" fg:w="3"/><text x="88.0824%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="87.9130%" y="261" width="0.1612%" height="15" fill="rgb(234,88,49)" fg:x="1091" fg:w="2"/><text x="88.1630%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9936%" y="245" width="0.0806%" height="15" fill="rgb(233,40,17)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.9936%" y="229" width="0.0806%" height="15" fill="rgb(235,127,31)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="87.5101%" y="325" width="0.6446%" height="15" fill="rgb(248,167,17)" fg:x="1086" fg:w="8"/><text x="87.7601%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="87.7518%" y="309" width="0.4029%" height="15" fill="rgb(218,179,8)" fg:x="1089" fg:w="5"/><text x="88.0018%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0741%" y="293" width="0.0806%" height="15" fill="rgb(216,92,14)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.81%)</title><rect x="87.5101%" y="341" width="0.8058%" height="15" fill="rgb(221,198,46)" fg:x="1086" fg:w="10"/><text x="87.7601%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="88.1547%" y="325" width="0.1612%" height="15" fill="rgb(244,7,25)" fg:x="1094" fg:w="2"/><text x="88.4047%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2353%" y="309" width="0.0806%" height="15" fill="rgb(233,75,6)" fg:x="1095" fg:w="1"/><text x="88.4853%" y="319.50"></text></g><g><title>engine::session::Session::flush (39 samples, 3.14%)</title><rect x="85.2538%" y="517" width="3.1426%" height="15" fill="rgb(240,189,41)" fg:x="1058" fg:w="39"/><text x="85.5038%" y="527.50">eng..</text></g><g><title>engine::session::Session::save_changes (38 samples, 3.06%)</title><rect x="85.3344%" y="501" width="3.0620%" height="15" fill="rgb(237,157,21)" fg:x="1059" fg:w="38"/><text x="85.5844%" y="511.50">eng..</text></g><g><title>engine::session::state::State::close (38 samples, 3.06%)</title><rect x="85.3344%" y="485" width="3.0620%" height="15" fill="rgb(210,136,49)" fg:x="1059" fg:w="38"/><text x="85.5844%" y="495.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (38 samples, 3.06%)</title><rect x="85.3344%" y="469" width="3.0620%" height="15" fill="rgb(210,68,29)" fg:x="1059" fg:w="38"/><text x="85.5844%" y="479.50">eng..</text></g><g><title>core::iter::adapters::try_process (37 samples, 2.98%)</title><rect x="85.4150%" y="453" width="2.9815%" height="15" fill="rgb(247,207,20)" fg:x="1060" fg:w="37"/><text x="85.6650%" y="463.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.90%)</title><rect x="85.4956%" y="437" width="2.9009%" height="15" fill="rgb(224,73,48)" fg:x="1061" fg:w="36"/><text x="85.7456%" y="447.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (36 samples, 2.90%)</title><rect x="85.4956%" y="421" width="2.9009%" height="15" fill="rgb(215,136,47)" fg:x="1061" fg:w="36"/><text x="85.7456%" y="431.50">en..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.29%)</title><rect x="87.1072%" y="405" width="1.2893%" height="15" fill="rgb(232,222,16)" fg:x="1081" fg:w="16"/><text x="87.3572%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.05%)</title><rect x="87.3489%" y="389" width="1.0475%" height="15" fill="rgb(249,202,47)" fg:x="1084" fg:w="13"/><text x="87.5989%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.05%)</title><rect x="87.3489%" y="373" width="1.0475%" height="15" fill="rgb(236,56,8)" fg:x="1084" fg:w="13"/><text x="87.5989%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.89%)</title><rect x="87.5101%" y="357" width="0.8864%" height="15" fill="rgb(222,6,3)" fg:x="1086" fg:w="11"/><text x="87.7601%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3159%" y="341" width="0.0806%" height="15" fill="rgb(254,222,28)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="351.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="88.3965%" y="517" width="0.0806%" height="15" fill="rgb(219,57,23)" fg:x="1097" fg:w="1"/><text x="88.6465%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="88.3965%" y="501" width="0.0806%" height="15" fill="rgb(251,106,48)" fg:x="1097" fg:w="1"/><text x="88.6465%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="88.3965%" y="485" width="0.0806%" height="15" fill="rgb(242,2,23)" fg:x="1097" fg:w="1"/><text x="88.6465%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.4770%" y="501" width="0.0806%" height="15" fill="rgb(212,109,31)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="88.4770%" y="485" width="0.0806%" height="15" fill="rgb(241,9,22)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.4770%" y="469" width="0.0806%" height="15" fill="rgb(209,64,27)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4770%" y="453" width="0.0806%" height="15" fill="rgb(248,13,44)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.4770%" y="437" width="0.0806%" height="15" fill="rgb(213,86,6)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4770%" y="421" width="0.0806%" height="15" fill="rgb(247,11,18)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5576%" y="421" width="0.0806%" height="15" fill="rgb(252,31,11)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5576%" y="405" width="0.0806%" height="15" fill="rgb(215,63,51)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5576%" y="389" width="0.0806%" height="15" fill="rgb(222,180,4)" fg:x="1099" fg:w="1"/><text x="88.8076%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="88.5576%" y="437" width="0.1612%" height="15" fill="rgb(233,4,23)" fg:x="1099" fg:w="2"/><text x="88.8076%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.6382%" y="421" width="0.0806%" height="15" fill="rgb(230,116,22)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6382%" y="405" width="0.0806%" height="15" fill="rgb(222,20,14)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.6382%" y="389" width="0.0806%" height="15" fill="rgb(210,176,43)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6382%" y="373" width="0.0806%" height="15" fill="rgb(219,67,32)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.6382%" y="357" width="0.0806%" height="15" fill="rgb(228,91,39)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.6382%" y="341" width="0.0806%" height="15" fill="rgb(254,63,14)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6382%" y="325" width="0.0806%" height="15" fill="rgb(216,171,39)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="88.7188%" y="437" width="0.0806%" height="15" fill="rgb(248,68,25)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.7188%" y="421" width="0.0806%" height="15" fill="rgb(239,63,16)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.7188%" y="405" width="0.0806%" height="15" fill="rgb(225,111,43)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="88.5576%" y="469" width="0.3223%" height="15" fill="rgb(246,165,17)" fg:x="1099" fg:w="4"/><text x="88.8076%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.32%)</title><rect x="88.5576%" y="453" width="0.3223%" height="15" fill="rgb(208,124,1)" fg:x="1099" fg:w="4"/><text x="88.8076%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7994%" y="437" width="0.0806%" height="15" fill="rgb(234,147,33)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7994%" y="421" width="0.0806%" height="15" fill="rgb(240,86,30)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7994%" y="405" width="0.0806%" height="15" fill="rgb(237,34,51)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.7994%" y="389" width="0.0806%" height="15" fill="rgb(232,131,41)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="88.5576%" y="485" width="0.4029%" height="15" fill="rgb(227,129,53)" fg:x="1099" fg:w="5"/><text x="88.8076%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="88.8799%" y="469" width="0.0806%" height="15" fill="rgb(230,90,35)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.8799%" y="453" width="0.0806%" height="15" fill="rgb(248,88,27)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8799%" y="437" width="0.0806%" height="15" fill="rgb(223,18,17)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8799%" y="421" width="0.0806%" height="15" fill="rgb(241,11,10)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.8799%" y="405" width="0.0806%" height="15" fill="rgb(232,111,52)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="415.50"></text></g><g><title>plugins_core::build::Build::save (7 samples, 0.56%)</title><rect x="88.4770%" y="517" width="0.5641%" height="15" fill="rgb(228,67,8)" fg:x="1098" fg:w="7"/><text x="88.7270%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="88.5576%" y="501" width="0.4835%" height="15" fill="rgb(251,168,31)" fg:x="1099" fg:w="6"/><text x="88.8076%" y="511.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="88.9605%" y="485" width="0.0806%" height="15" fill="rgb(249,164,11)" fg:x="1104" fg:w="1"/><text x="89.2105%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="88.9605%" y="469" width="0.0806%" height="15" fill="rgb(239,81,9)" fg:x="1104" fg:w="1"/><text x="89.2105%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.0411%" y="453" width="0.0806%" height="15" fill="rgb(222,145,38)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="89.0411%" y="437" width="0.0806%" height="15" fill="rgb(238,80,54)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::plugins::ActionSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="89.0411%" y="421" width="0.0806%" height="15" fill="rgb(237,116,16)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.1217%" y="421" width="0.1612%" height="15" fill="rgb(218,135,19)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.1217%" y="405" width="0.1612%" height="15" fill="rgb(216,207,44)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.1217%" y="389" width="0.1612%" height="15" fill="rgb(226,152,40)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.1217%" y="373" width="0.1612%" height="15" fill="rgb(219,98,35)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.1217%" y="357" width="0.1612%" height="15" fill="rgb(222,136,46)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="89.1217%" y="341" width="0.1612%" height="15" fill="rgb(222,71,8)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="89.1217%" y="325" width="0.1612%" height="15" fill="rgb(209,89,53)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="89.1217%" y="309" width="0.1612%" height="15" fill="rgb(210,97,51)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="89.1217%" y="293" width="0.1612%" height="15" fill="rgb(248,65,21)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="89.1217%" y="277" width="0.1612%" height="15" fill="rgb(222,5,31)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="89.1217%" y="261" width="0.1612%" height="15" fill="rgb(241,16,30)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="89.1217%" y="245" width="0.1612%" height="15" fill="rgb(215,86,30)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="89.1217%" y="229" width="0.1612%" height="15" fill="rgb(235,26,44)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="89.1217%" y="213" width="0.1612%" height="15" fill="rgb(228,147,14)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="89.1217%" y="197" width="0.1612%" height="15" fill="rgb(253,38,50)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="207.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="89.0411%" y="485" width="0.3223%" height="15" fill="rgb(251,151,16)" fg:x="1105" fg:w="4"/><text x="89.2911%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="89.0411%" y="469" width="0.3223%" height="15" fill="rgb(224,64,19)" fg:x="1105" fg:w="4"/><text x="89.2911%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="89.1217%" y="453" width="0.2417%" height="15" fill="rgb(235,214,47)" fg:x="1106" fg:w="3"/><text x="89.3717%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="89.1217%" y="437" width="0.2417%" height="15" fill="rgb(218,15,19)" fg:x="1106" fg:w="3"/><text x="89.3717%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2828%" y="421" width="0.0806%" height="15" fill="rgb(247,209,3)" fg:x="1108" fg:w="1"/><text x="89.5328%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2828%" y="405" width="0.0806%" height="15" fill="rgb(217,29,2)" fg:x="1108" fg:w="1"/><text x="89.5328%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.2828%" y="389" width="0.0806%" height="15" fill="rgb(234,9,9)" fg:x="1108" fg:w="1"/><text x="89.5328%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2828%" y="373" width="0.0806%" height="15" fill="rgb(207,43,14)" fg:x="1108" fg:w="1"/><text x="89.5328%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="89.3634%" y="469" width="0.0806%" height="15" fill="rgb(216,219,36)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3634%" y="453" width="0.0806%" height="15" fill="rgb(238,12,26)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.3634%" y="437" width="0.0806%" height="15" fill="rgb(226,67,30)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="447.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="89.4440%" y="469" width="0.0806%" height="15" fill="rgb(229,154,7)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.4440%" y="453" width="0.0806%" height="15" fill="rgb(249,90,18)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.4440%" y="437" width="0.0806%" height="15" fill="rgb(223,53,15)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="89.4440%" y="421" width="0.0806%" height="15" fill="rgb(253,86,38)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.4440%" y="405" width="0.0806%" height="15" fill="rgb(222,198,9)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4440%" y="389" width="0.0806%" height="15" fill="rgb(240,146,25)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (7 samples, 0.56%)</title><rect x="89.0411%" y="517" width="0.5641%" height="15" fill="rgb(225,38,10)" fg:x="1105" fg:w="7"/><text x="89.2911%" y="527.50"></text></g><g><title>plugins_core::tools::set_occupying (7 samples, 0.56%)</title><rect x="89.0411%" y="501" width="0.5641%" height="15" fill="rgb(246,93,4)" fg:x="1105" fg:w="7"/><text x="89.2911%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="89.3634%" y="485" width="0.2417%" height="15" fill="rgb(222,55,18)" fg:x="1109" fg:w="3"/><text x="89.6134%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="89.5246%" y="469" width="0.0806%" height="15" fill="rgb(233,137,48)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.5246%" y="453" width="0.0806%" height="15" fill="rgb(214,8,54)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="89.5246%" y="437" width="0.0806%" height="15" fill="rgb(206,75,4)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.5246%" y="421" width="0.0806%" height="15" fill="rgb(238,171,14)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5246%" y="405" width="0.0806%" height="15" fill="rgb(233,70,41)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5246%" y="389" width="0.0806%" height="15" fill="rgb(214,68,36)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="89.6052%" y="453" width="0.0806%" height="15" fill="rgb(223,29,5)" fg:x="1112" fg:w="1"/><text x="89.8552%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="89.6052%" y="437" width="0.0806%" height="15" fill="rgb(251,22,40)" fg:x="1112" fg:w="1"/><text x="89.8552%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="89.6052%" y="421" width="0.0806%" height="15" fill="rgb(210,67,41)" fg:x="1112" fg:w="1"/><text x="89.8552%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="89.6052%" y="501" width="0.1612%" height="15" fill="rgb(225,177,31)" fg:x="1112" fg:w="2"/><text x="89.8552%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.6052%" y="485" width="0.1612%" height="15" fill="rgb(221,229,11)" fg:x="1112" fg:w="2"/><text x="89.8552%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.6052%" y="469" width="0.1612%" height="15" fill="rgb(247,172,52)" fg:x="1112" fg:w="2"/><text x="89.8552%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.6857%" y="453" width="0.0806%" height="15" fill="rgb(212,73,19)" fg:x="1113" fg:w="1"/><text x="89.9357%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6857%" y="437" width="0.0806%" height="15" fill="rgb(244,7,46)" fg:x="1113" fg:w="1"/><text x="89.9357%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (3 samples, 0.24%)</title><rect x="89.6052%" y="517" width="0.2417%" height="15" fill="rgb(230,113,20)" fg:x="1112" fg:w="3"/><text x="89.8552%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="89.7663%" y="501" width="0.0806%" height="15" fill="rgb(209,97,30)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="89.7663%" y="485" width="0.0806%" height="15" fill="rgb(243,89,12)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7663%" y="469" width="0.0806%" height="15" fill="rgb(228,32,19)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.7663%" y="453" width="0.0806%" height="15" fill="rgb(248,25,17)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::OpenedScopeRefMut&lt;plugins_core::carrying::model::Containing,kernel::model::entity::Entity&gt;&gt; (1 samples, 0.08%)</title><rect x="89.8469%" y="501" width="0.0806%" height="15" fill="rgb(232,161,29)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.8469%" y="485" width="0.0806%" height="15" fill="rgb(251,192,11)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8469%" y="469" width="0.0806%" height="15" fill="rgb(240,47,32)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.0081%" y="469" width="0.0806%" height="15" fill="rgb(250,16,45)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="90.0081%" y="453" width="0.0806%" height="15" fill="rgb(227,217,42)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0081%" y="437" width="0.0806%" height="15" fill="rgb(206,82,54)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0081%" y="421" width="0.0806%" height="15" fill="rgb(243,145,25)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0886%" y="437" width="0.0806%" height="15" fill="rgb(207,166,24)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0886%" y="421" width="0.0806%" height="15" fill="rgb(215,191,44)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0886%" y="405" width="0.0806%" height="15" fill="rgb(234,218,51)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0886%" y="389" width="0.0806%" height="15" fill="rgb(245,133,21)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.0886%" y="373" width="0.0806%" height="15" fill="rgb(230,136,45)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.0886%" y="357" width="0.0806%" height="15" fill="rgb(247,63,43)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.0886%" y="341" width="0.0806%" height="15" fill="rgb(254,223,31)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.0886%" y="325" width="0.0806%" height="15" fill="rgb(236,185,0)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.0886%" y="309" width="0.0806%" height="15" fill="rgb(231,139,46)" fg:x="1118" fg:w="1"/><text x="90.3386%" y="319.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="89.9275%" y="501" width="0.3223%" height="15" fill="rgb(236,147,31)" fg:x="1116" fg:w="4"/><text x="90.1775%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="89.9275%" y="485" width="0.3223%" height="15" fill="rgb(225,222,22)" fg:x="1116" fg:w="4"/><text x="90.1775%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="90.0886%" y="469" width="0.1612%" height="15" fill="rgb(225,193,14)" fg:x="1118" fg:w="2"/><text x="90.3386%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="90.0886%" y="453" width="0.1612%" height="15" fill="rgb(253,193,46)" fg:x="1118" fg:w="2"/><text x="90.3386%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1692%" y="437" width="0.0806%" height="15" fill="rgb(218,187,39)" fg:x="1119" fg:w="1"/><text x="90.4192%" y="447.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="89.8469%" y="517" width="0.4835%" height="15" fill="rgb(227,162,48)" fg:x="1115" fg:w="6"/><text x="90.0969%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="90.2498%" y="501" width="0.0806%" height="15" fill="rgb(222,25,5)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="90.2498%" y="485" width="0.0806%" height="15" fill="rgb(211,205,16)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="90.2498%" y="469" width="0.0806%" height="15" fill="rgb(244,191,2)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="90.2498%" y="453" width="0.0806%" height="15" fill="rgb(248,159,12)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="90.2498%" y="437" width="0.0806%" height="15" fill="rgb(235,204,17)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (67 samples, 5.40%)</title><rect x="85.0121%" y="533" width="5.3989%" height="15" fill="rgb(240,21,27)" fg:x="1055" fg:w="67"/><text x="85.2621%" y="543.50">plugins..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="90.3304%" y="517" width="0.0806%" height="15" fill="rgb(224,170,31)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="90.3304%" y="501" width="0.0806%" height="15" fill="rgb(223,145,32)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="90.3304%" y="485" width="0.0806%" height="15" fill="rgb(243,100,5)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3304%" y="469" width="0.0806%" height="15" fill="rgb(242,131,51)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="90.4110%" y="485" width="0.0806%" height="15" fill="rgb(223,156,46)" fg:x="1122" fg:w="1"/><text x="90.6610%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4110%" y="469" width="0.0806%" height="15" fill="rgb(215,10,40)" fg:x="1122" fg:w="1"/><text x="90.6610%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4110%" y="453" width="0.0806%" height="15" fill="rgb(233,155,0)" fg:x="1122" fg:w="1"/><text x="90.6610%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="90.4110%" y="437" width="0.0806%" height="15" fill="rgb(247,78,6)" fg:x="1122" fg:w="1"/><text x="90.6610%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="90.4110%" y="501" width="0.1612%" height="15" fill="rgb(237,217,21)" fg:x="1122" fg:w="2"/><text x="90.6610%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="90.4915%" y="485" width="0.0806%" height="15" fill="rgb(212,1,21)" fg:x="1123" fg:w="1"/><text x="90.7415%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4915%" y="469" width="0.0806%" height="15" fill="rgb(213,7,14)" fg:x="1123" fg:w="1"/><text x="90.7415%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="90.5721%" y="469" width="0.0806%" height="15" fill="rgb(225,84,14)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.5721%" y="453" width="0.0806%" height="15" fill="rgb(239,216,39)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5721%" y="437" width="0.0806%" height="15" fill="rgb(253,29,23)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.5721%" y="421" width="0.0806%" height="15" fill="rgb(220,167,50)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5721%" y="405" width="0.0806%" height="15" fill="rgb(232,141,1)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.5721%" y="389" width="0.0806%" height="15" fill="rgb(222,210,1)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5721%" y="373" width="0.0806%" height="15" fill="rgb(219,84,10)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.5721%" y="357" width="0.0806%" height="15" fill="rgb(245,188,6)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="90.6527%" y="421" width="0.0806%" height="15" fill="rgb(252,139,39)" fg:x="1125" fg:w="1"/><text x="90.9027%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (3 samples, 0.24%)</title><rect x="90.5721%" y="501" width="0.2417%" height="15" fill="rgb(218,42,26)" fg:x="1124" fg:w="3"/><text x="90.8221%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="90.5721%" y="485" width="0.2417%" height="15" fill="rgb(237,226,51)" fg:x="1124" fg:w="3"/><text x="90.8221%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="90.6527%" y="469" width="0.1612%" height="15" fill="rgb(246,15,17)" fg:x="1125" fg:w="2"/><text x="90.9027%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="90.6527%" y="453" width="0.1612%" height="15" fill="rgb(228,170,42)" fg:x="1125" fg:w="2"/><text x="90.9027%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="90.6527%" y="437" width="0.1612%" height="15" fill="rgb(248,118,53)" fg:x="1125" fg:w="2"/><text x="90.9027%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="90.7333%" y="421" width="0.0806%" height="15" fill="rgb(207,30,10)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7333%" y="405" width="0.0806%" height="15" fill="rgb(217,104,38)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="90.4110%" y="533" width="0.4835%" height="15" fill="rgb(211,165,26)" fg:x="1122" fg:w="6"/><text x="90.6610%" y="543.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="90.4110%" y="517" width="0.4835%" height="15" fill="rgb(247,38,9)" fg:x="1122" fg:w="6"/><text x="90.6610%" y="527.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="90.8139%" y="501" width="0.0806%" height="15" fill="rgb(218,187,8)" fg:x="1127" fg:w="1"/><text x="91.0639%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="90.8139%" y="485" width="0.0806%" height="15" fill="rgb(247,94,28)" fg:x="1127" fg:w="1"/><text x="91.0639%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="90.8139%" y="469" width="0.0806%" height="15" fill="rgb(218,173,30)" fg:x="1127" fg:w="1"/><text x="91.0639%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.8139%" y="453" width="0.0806%" height="15" fill="rgb(245,45,36)" fg:x="1127" fg:w="1"/><text x="91.0639%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.8139%" y="437" width="0.0806%" height="15" fill="rgb(221,172,44)" fg:x="1127" fg:w="1"/><text x="91.0639%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="90.8139%" y="421" width="0.0806%" height="15" fill="rgb(222,45,12)" fg:x="1127" fg:w="1"/><text x="91.0639%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="90.8944%" y="517" width="0.0806%" height="15" fill="rgb(250,10,22)" fg:x="1128" fg:w="1"/><text x="91.1444%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="90.8944%" y="501" width="0.0806%" height="15" fill="rgb(239,27,0)" fg:x="1128" fg:w="1"/><text x="91.1444%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="90.9750%" y="485" width="0.0806%" height="15" fill="rgb(223,118,22)" fg:x="1129" fg:w="1"/><text x="91.2250%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="90.9750%" y="469" width="0.0806%" height="15" fill="rgb(251,81,25)" fg:x="1129" fg:w="1"/><text x="91.2250%" y="479.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="90.9750%" y="517" width="0.1612%" height="15" fill="rgb(237,225,53)" fg:x="1129" fg:w="2"/><text x="91.2250%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="90.9750%" y="501" width="0.1612%" height="15" fill="rgb(237,186,51)" fg:x="1129" fg:w="2"/><text x="91.2250%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="91.0556%" y="485" width="0.0806%" height="15" fill="rgb(247,209,11)" fg:x="1130" fg:w="1"/><text x="91.3056%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="91.0556%" y="469" width="0.0806%" height="15" fill="rgb(223,109,27)" fg:x="1130" fg:w="1"/><text x="91.3056%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.1362%" y="501" width="0.0806%" height="15" fill="rgb(246,181,13)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="91.1362%" y="485" width="0.0806%" height="15" fill="rgb(234,57,44)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1362%" y="469" width="0.0806%" height="15" fill="rgb(211,227,50)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1362%" y="453" width="0.0806%" height="15" fill="rgb(254,57,34)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1362%" y="437" width="0.0806%" height="15" fill="rgb(227,212,26)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1362%" y="421" width="0.0806%" height="15" fill="rgb(244,169,44)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="91.2168%" y="469" width="0.0806%" height="15" fill="rgb(236,135,50)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="91.2168%" y="453" width="0.0806%" height="15" fill="rgb(241,89,30)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="91.2168%" y="437" width="0.0806%" height="15" fill="rgb(206,113,34)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2168%" y="421" width="0.0806%" height="15" fill="rgb(218,104,52)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.2168%" y="405" width="0.0806%" height="15" fill="rgb(223,82,32)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="91.2168%" y="389" width="0.0806%" height="15" fill="rgb(249,219,30)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="91.2168%" y="485" width="0.1612%" height="15" fill="rgb(233,141,21)" fg:x="1132" fg:w="2"/><text x="91.4668%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="91.2973%" y="469" width="0.0806%" height="15" fill="rgb(252,87,44)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.2973%" y="453" width="0.0806%" height="15" fill="rgb(229,48,33)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2973%" y="437" width="0.0806%" height="15" fill="rgb(229,23,22)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2973%" y="421" width="0.0806%" height="15" fill="rgb(244,116,16)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="91.2168%" y="501" width="0.2417%" height="15" fill="rgb(247,45,10)" fg:x="1132" fg:w="3"/><text x="91.4668%" y="511.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="91.3779%" y="485" width="0.0806%" height="15" fill="rgb(228,60,29)" fg:x="1134" fg:w="1"/><text x="91.6279%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.3779%" y="469" width="0.0806%" height="15" fill="rgb(205,129,15)" fg:x="1134" fg:w="1"/><text x="91.6279%" y="479.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (120 samples, 9.67%)</title><rect x="81.8695%" y="549" width="9.6696%" height="15" fill="rgb(206,229,4)" fg:x="1016" fg:w="120"/><text x="82.1195%" y="559.50">&lt;tests::Holdin..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.64%)</title><rect x="90.8944%" y="533" width="0.6446%" height="15" fill="rgb(249,191,30)" fg:x="1128" fg:w="8"/><text x="91.1444%" y="543.50"></text></g><g><title>plugins_core::build::Build::save (5 samples, 0.40%)</title><rect x="91.1362%" y="517" width="0.4029%" height="15" fill="rgb(250,84,54)" fg:x="1131" fg:w="5"/><text x="91.3862%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.4585%" y="501" width="0.0806%" height="15" fill="rgb(207,25,53)" fg:x="1135" fg:w="1"/><text x="91.7085%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4585%" y="485" width="0.0806%" height="15" fill="rgb(235,40,8)" fg:x="1135" fg:w="1"/><text x="91.7085%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4585%" y="469" width="0.0806%" height="15" fill="rgb(226,169,33)" fg:x="1135" fg:w="1"/><text x="91.7085%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5391%" y="549" width="0.0806%" height="15" fill="rgb(238,110,8)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="91.6197%" y="533" width="0.0806%" height="15" fill="rgb(251,206,12)" fg:x="1137" fg:w="1"/><text x="91.8697%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.6197%" y="517" width="0.0806%" height="15" fill="rgb(248,171,18)" fg:x="1137" fg:w="1"/><text x="91.8697%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="91.7002%" y="533" width="0.0806%" height="15" fill="rgb(213,65,46)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.7002%" y="517" width="0.0806%" height="15" fill="rgb(211,154,15)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.7002%" y="501" width="0.0806%" height="15" fill="rgb(217,75,43)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.7002%" y="485" width="0.0806%" height="15" fill="rgb(230,32,33)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="91.7002%" y="469" width="0.0806%" height="15" fill="rgb(221,100,16)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="479.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="91.7002%" y="453" width="0.0806%" height="15" fill="rgb(212,129,47)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="91.7002%" y="437" width="0.0806%" height="15" fill="rgb(239,217,47)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.7808%" y="501" width="0.0806%" height="15" fill="rgb(230,84,24)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.8614%" y="501" width="0.0806%" height="15" fill="rgb(214,153,51)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="91.8614%" y="485" width="0.0806%" height="15" fill="rgb(231,6,35)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="91.8614%" y="469" width="0.0806%" height="15" fill="rgb(229,122,30)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="91.9420%" y="421" width="0.0806%" height="15" fill="rgb(234,71,10)" fg:x="1141" fg:w="1"/><text x="92.1920%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.9420%" y="405" width="0.0806%" height="15" fill="rgb(215,173,26)" fg:x="1141" fg:w="1"/><text x="92.1920%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="91.9420%" y="437" width="0.1612%" height="15" fill="rgb(248,118,52)" fg:x="1141" fg:w="2"/><text x="92.1920%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.0226%" y="421" width="0.0806%" height="15" fill="rgb(237,55,46)" fg:x="1142" fg:w="1"/><text x="92.2726%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.1031%" y="421" width="0.0806%" height="15" fill="rgb(243,214,43)" fg:x="1143" fg:w="1"/><text x="92.3531%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.1837%" y="421" width="0.1612%" height="15" fill="rgb(252,123,30)" fg:x="1144" fg:w="2"/><text x="92.4337%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.1837%" y="405" width="0.1612%" height="15" fill="rgb(215,73,39)" fg:x="1144" fg:w="2"/><text x="92.4337%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.2643%" y="389" width="0.0806%" height="15" fill="rgb(251,194,29)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.2643%" y="373" width="0.0806%" height="15" fill="rgb(224,58,52)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.2643%" y="357" width="0.0806%" height="15" fill="rgb(248,106,46)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.2643%" y="341" width="0.0806%" height="15" fill="rgb(223,80,29)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.2643%" y="325" width="0.0806%" height="15" fill="rgb(243,137,9)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="335.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="92.3449%" y="389" width="0.0806%" height="15" fill="rgb(235,121,28)" fg:x="1146" fg:w="1"/><text x="92.5949%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.4255%" y="373" width="0.0806%" height="15" fill="rgb(219,121,41)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="92.5060%" y="373" width="0.1612%" height="15" fill="rgb(251,60,6)" fg:x="1148" fg:w="2"/><text x="92.7560%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.5866%" y="357" width="0.0806%" height="15" fill="rgb(208,12,30)" fg:x="1149" fg:w="1"/><text x="92.8366%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.5866%" y="341" width="0.0806%" height="15" fill="rgb(207,176,36)" fg:x="1149" fg:w="1"/><text x="92.8366%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="92.3449%" y="405" width="0.4029%" height="15" fill="rgb(211,188,29)" fg:x="1146" fg:w="5"/><text x="92.5949%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="92.4255%" y="389" width="0.3223%" height="15" fill="rgb(220,184,37)" fg:x="1147" fg:w="4"/><text x="92.6755%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.6672%" y="373" width="0.0806%" height="15" fill="rgb(239,87,37)" fg:x="1150" fg:w="1"/><text x="92.9172%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.6672%" y="357" width="0.0806%" height="15" fill="rgb(232,113,44)" fg:x="1150" fg:w="1"/><text x="92.9172%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.6672%" y="341" width="0.0806%" height="15" fill="rgb(246,25,39)" fg:x="1150" fg:w="1"/><text x="92.9172%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="91.9420%" y="453" width="0.9670%" height="15" fill="rgb(247,30,13)" fg:x="1141" fg:w="12"/><text x="92.1920%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="92.1031%" y="437" width="0.8058%" height="15" fill="rgb(230,176,35)" fg:x="1143" fg:w="10"/><text x="92.3531%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="92.3449%" y="421" width="0.5641%" height="15" fill="rgb(222,23,18)" fg:x="1146" fg:w="7"/><text x="92.5949%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.7478%" y="405" width="0.1612%" height="15" fill="rgb(234,86,8)" fg:x="1151" fg:w="2"/><text x="92.9978%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.8284%" y="389" width="0.0806%" height="15" fill="rgb(206,218,47)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.9089%" y="453" width="0.0806%" height="15" fill="rgb(229,35,31)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="92.9089%" y="437" width="0.0806%" height="15" fill="rgb(242,81,7)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.9089%" y="421" width="0.0806%" height="15" fill="rgb(231,11,35)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.9089%" y="405" width="0.0806%" height="15" fill="rgb(219,218,17)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.9089%" y="389" width="0.0806%" height="15" fill="rgb(221,83,32)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.9089%" y="373" width="0.0806%" height="15" fill="rgb(233,49,54)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.9895%" y="373" width="0.0806%" height="15" fill="rgb(206,18,51)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="93.0701%" y="373" width="0.1612%" height="15" fill="rgb(249,193,15)" fg:x="1155" fg:w="2"/><text x="93.3201%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="93.2313%" y="357" width="0.1612%" height="15" fill="rgb(245,186,19)" fg:x="1157" fg:w="2"/><text x="93.4813%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="93.2313%" y="341" width="0.1612%" height="15" fill="rgb(230,4,24)" fg:x="1157" fg:w="2"/><text x="93.4813%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.4730%" y="325" width="0.0806%" height="15" fill="rgb(234,75,27)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="92.9895%" y="421" width="0.6446%" height="15" fill="rgb(244,187,35)" fg:x="1154" fg:w="8"/><text x="93.2395%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="92.9895%" y="405" width="0.6446%" height="15" fill="rgb(241,97,43)" fg:x="1154" fg:w="8"/><text x="93.2395%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="92.9895%" y="389" width="0.6446%" height="15" fill="rgb(236,94,2)" fg:x="1154" fg:w="8"/><text x="93.2395%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="93.2313%" y="373" width="0.4029%" height="15" fill="rgb(231,175,7)" fg:x="1157" fg:w="5"/><text x="93.4813%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="93.3924%" y="357" width="0.2417%" height="15" fill="rgb(236,89,47)" fg:x="1159" fg:w="3"/><text x="93.6424%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="93.3924%" y="341" width="0.2417%" height="15" fill="rgb(213,191,37)" fg:x="1159" fg:w="3"/><text x="93.6424%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.5536%" y="325" width="0.0806%" height="15" fill="rgb(252,0,34)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.5536%" y="309" width="0.0806%" height="15" fill="rgb(208,145,44)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="319.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.73%)</title><rect x="92.9895%" y="437" width="0.7252%" height="15" fill="rgb(227,95,50)" fg:x="1154" fg:w="9"/><text x="93.2395%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.6342%" y="421" width="0.0806%" height="15" fill="rgb(222,136,24)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7953%" y="405" width="0.0806%" height="15" fill="rgb(218,105,10)" fg:x="1164" fg:w="1"/><text x="94.0453%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="93.8759%" y="405" width="0.0806%" height="15" fill="rgb(216,65,28)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.8759%" y="389" width="0.0806%" height="15" fill="rgb(229,6,28)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.8759%" y="373" width="0.0806%" height="15" fill="rgb(222,160,42)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="94.1982%" y="373" width="0.0806%" height="15" fill="rgb(235,83,49)" fg:x="1169" fg:w="1"/><text x="94.4482%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="94.2788%" y="357" width="0.0806%" height="15" fill="rgb(236,86,36)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="94.2788%" y="341" width="0.0806%" height="15" fill="rgb(236,19,41)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="94.2788%" y="325" width="0.0806%" height="15" fill="rgb(217,71,31)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="94.2788%" y="309" width="0.0806%" height="15" fill="rgb(236,209,25)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="94.3594%" y="325" width="0.2417%" height="15" fill="rgb(247,104,21)" fg:x="1171" fg:w="3"/><text x="94.6094%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="94.6011%" y="309" width="0.0806%" height="15" fill="rgb(243,80,38)" fg:x="1174" fg:w="1"/><text x="94.8511%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6011%" y="293" width="0.0806%" height="15" fill="rgb(232,109,38)" fg:x="1174" fg:w="1"/><text x="94.8511%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="94.2788%" y="373" width="0.4835%" height="15" fill="rgb(212,177,53)" fg:x="1170" fg:w="6"/><text x="94.5288%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="94.3594%" y="357" width="0.4029%" height="15" fill="rgb(227,30,34)" fg:x="1171" fg:w="5"/><text x="94.6094%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="94.3594%" y="341" width="0.4029%" height="15" fill="rgb(205,175,25)" fg:x="1171" fg:w="5"/><text x="94.6094%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="94.6011%" y="325" width="0.1612%" height="15" fill="rgb(249,39,54)" fg:x="1174" fg:w="2"/><text x="94.8511%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6817%" y="309" width="0.0806%" height="15" fill="rgb(215,54,37)" fg:x="1175" fg:w="1"/><text x="94.9317%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.73%)</title><rect x="94.1176%" y="389" width="0.7252%" height="15" fill="rgb(205,60,46)" fg:x="1168" fg:w="9"/><text x="94.3676%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="94.7623%" y="373" width="0.0806%" height="15" fill="rgb(238,89,29)" fg:x="1176" fg:w="1"/><text x="95.0123%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (15 samples, 1.21%)</title><rect x="93.7147%" y="437" width="1.2087%" height="15" fill="rgb(212,48,10)" fg:x="1163" fg:w="15"/><text x="93.9647%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.21%)</title><rect x="93.7147%" y="421" width="1.2087%" height="15" fill="rgb(237,186,28)" fg:x="1163" fg:w="15"/><text x="93.9647%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.97%)</title><rect x="93.9565%" y="405" width="0.9670%" height="15" fill="rgb(237,204,4)" fg:x="1166" fg:w="12"/><text x="94.2065%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8429%" y="389" width="0.0806%" height="15" fill="rgb(237,15,47)" fg:x="1177" fg:w="1"/><text x="95.0929%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.3263%" y="245" width="0.1612%" height="15" fill="rgb(244,110,25)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4875%" y="213" width="0.0806%" height="15" fill="rgb(241,12,16)" fg:x="1185" fg:w="1"/><text x="95.7375%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="95.1652%" y="341" width="0.4835%" height="15" fill="rgb(235,25,9)" fg:x="1181" fg:w="6"/><text x="95.4152%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.2458%" y="325" width="0.4029%" height="15" fill="rgb(245,159,19)" fg:x="1182" fg:w="5"/><text x="95.4958%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="95.3263%" y="309" width="0.3223%" height="15" fill="rgb(236,63,32)" fg:x="1183" fg:w="4"/><text x="95.5763%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.3263%" y="293" width="0.3223%" height="15" fill="rgb(235,32,52)" fg:x="1183" fg:w="4"/><text x="95.5763%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="95.3263%" y="277" width="0.3223%" height="15" fill="rgb(209,176,21)" fg:x="1183" fg:w="4"/><text x="95.5763%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.3263%" y="261" width="0.3223%" height="15" fill="rgb(205,90,42)" fg:x="1183" fg:w="4"/><text x="95.5763%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.4875%" y="245" width="0.1612%" height="15" fill="rgb(213,132,16)" fg:x="1185" fg:w="2"/><text x="95.7375%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.4875%" y="229" width="0.1612%" height="15" fill="rgb(232,11,22)" fg:x="1185" fg:w="2"/><text x="95.7375%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.5681%" y="213" width="0.0806%" height="15" fill="rgb(248,167,41)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="223.50"></text></g><g><title>engine::session::Session::close (51 samples, 4.11%)</title><rect x="91.6197%" y="549" width="4.1096%" height="15" fill="rgb(209,127,6)" fg:x="1137" fg:w="51"/><text x="91.8697%" y="559.50">engi..</text></g><g><title>engine::session::state::State::close (49 samples, 3.95%)</title><rect x="91.7808%" y="533" width="3.9484%" height="15" fill="rgb(246,210,34)" fg:x="1139" fg:w="49"/><text x="92.0308%" y="543.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (49 samples, 3.95%)</title><rect x="91.7808%" y="517" width="3.9484%" height="15" fill="rgb(238,165,13)" fg:x="1139" fg:w="49"/><text x="92.0308%" y="527.50">engi..</text></g><g><title>core::iter::adapters::try_process (47 samples, 3.79%)</title><rect x="91.9420%" y="501" width="3.7873%" height="15" fill="rgb(233,98,15)" fg:x="1141" fg:w="47"/><text x="92.1920%" y="511.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 3.79%)</title><rect x="91.9420%" y="485" width="3.7873%" height="15" fill="rgb(215,215,51)" fg:x="1141" fg:w="47"/><text x="92.1920%" y="495.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (47 samples, 3.79%)</title><rect x="91.9420%" y="469" width="3.7873%" height="15" fill="rgb(217,161,25)" fg:x="1141" fg:w="47"/><text x="92.1920%" y="479.50">engi..</text></g><g><title>kernel::model::any_entity_changes (34 samples, 2.74%)</title><rect x="92.9895%" y="453" width="2.7397%" height="15" fill="rgb(217,167,48)" fg:x="1154" fg:w="34"/><text x="93.2395%" y="463.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.81%)</title><rect x="94.9234%" y="437" width="0.8058%" height="15" fill="rgb(205,163,34)" fg:x="1178" fg:w="10"/><text x="95.1734%" y="447.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.81%)</title><rect x="94.9234%" y="421" width="0.8058%" height="15" fill="rgb(241,197,31)" fg:x="1178" fg:w="10"/><text x="95.1734%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="94.9234%" y="405" width="0.8058%" height="15" fill="rgb(225,123,11)" fg:x="1178" fg:w="10"/><text x="95.1734%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="95.0040%" y="389" width="0.7252%" height="15" fill="rgb(217,4,20)" fg:x="1179" fg:w="9"/><text x="95.2540%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="95.0040%" y="373" width="0.7252%" height="15" fill="rgb(215,55,9)" fg:x="1179" fg:w="9"/><text x="95.2540%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="95.0846%" y="357" width="0.6446%" height="15" fill="rgb(218,165,5)" fg:x="1180" fg:w="8"/><text x="95.3346%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.6487%" y="341" width="0.0806%" height="15" fill="rgb(222,175,15)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6487%" y="325" width="0.0806%" height="15" fill="rgb(223,85,34)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="95.7293%" y="485" width="0.0806%" height="15" fill="rgb(234,228,29)" fg:x="1188" fg:w="1"/><text x="95.9793%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.7293%" y="469" width="0.0806%" height="15" fill="rgb(239,7,28)" fg:x="1188" fg:w="1"/><text x="95.9793%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7293%" y="453" width="0.0806%" height="15" fill="rgb(252,222,53)" fg:x="1188" fg:w="1"/><text x="95.9793%" y="463.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (1 samples, 0.08%)</title><rect x="95.8098%" y="485" width="0.0806%" height="15" fill="rgb(232,146,44)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="495.50"></text></g><g><title>tracing_core::callsite::register_dispatch (1 samples, 0.08%)</title><rect x="95.8098%" y="469" width="0.0806%" height="15" fill="rgb(243,223,53)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="479.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (1 samples, 0.08%)</title><rect x="95.8098%" y="453" width="0.0806%" height="15" fill="rgb(219,128,25)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="463.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (1 samples, 0.08%)</title><rect x="95.8098%" y="437" width="0.0806%" height="15" fill="rgb(223,56,32)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="447.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.08%)</title><rect x="95.8904%" y="485" width="0.0806%" height="15" fill="rgb(237,41,3)" fg:x="1190" fg:w="1"/><text x="96.1404%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="95.9710%" y="437" width="0.0806%" height="15" fill="rgb(235,138,9)" fg:x="1191" fg:w="1"/><text x="96.2210%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.0516%" y="213" width="0.1612%" height="15" fill="rgb(214,131,10)" fg:x="1192" fg:w="2"/><text x="96.3016%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.0516%" y="197" width="0.1612%" height="15" fill="rgb(229,89,7)" fg:x="1192" fg:w="2"/><text x="96.3016%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1322%" y="181" width="0.0806%" height="15" fill="rgb(240,24,42)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1322%" y="165" width="0.0806%" height="15" fill="rgb(243,188,54)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="175.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="96.0516%" y="309" width="0.4029%" height="15" fill="rgb(246,92,22)" fg:x="1192" fg:w="5"/><text x="96.3016%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="96.0516%" y="293" width="0.4029%" height="15" fill="rgb(211,176,51)" fg:x="1192" fg:w="5"/><text x="96.3016%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="96.0516%" y="277" width="0.4029%" height="15" fill="rgb(246,207,34)" fg:x="1192" fg:w="5"/><text x="96.3016%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="96.0516%" y="261" width="0.4029%" height="15" fill="rgb(239,95,2)" fg:x="1192" fg:w="5"/><text x="96.3016%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="96.0516%" y="245" width="0.4029%" height="15" fill="rgb(211,124,25)" fg:x="1192" fg:w="5"/><text x="96.3016%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="96.0516%" y="229" width="0.4029%" height="15" fill="rgb(231,221,19)" fg:x="1192" fg:w="5"/><text x="96.3016%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.2127%" y="213" width="0.2417%" height="15" fill="rgb(239,183,19)" fg:x="1194" fg:w="3"/><text x="96.4627%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.2127%" y="197" width="0.2417%" height="15" fill="rgb(221,130,29)" fg:x="1194" fg:w="3"/><text x="96.4627%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.3739%" y="181" width="0.0806%" height="15" fill="rgb(206,130,36)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.3739%" y="165" width="0.0806%" height="15" fill="rgb(215,70,19)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.3739%" y="149" width="0.0806%" height="15" fill="rgb(244,16,43)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3739%" y="133" width="0.0806%" height="15" fill="rgb(222,115,32)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3739%" y="117" width="0.0806%" height="15" fill="rgb(247,48,25)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.3739%" y="101" width="0.0806%" height="15" fill="rgb(226,180,51)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3739%" y="85" width="0.0806%" height="15" fill="rgb(217,142,42)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3739%" y="69" width="0.0806%" height="15" fill="rgb(220,178,3)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.4545%" y="245" width="0.0806%" height="15" fill="rgb(217,221,4)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4545%" y="229" width="0.0806%" height="15" fill="rgb(237,63,43)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.4545%" y="213" width="0.0806%" height="15" fill="rgb(220,57,8)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4545%" y="197" width="0.0806%" height="15" fill="rgb(254,186,27)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="207.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (7 samples, 0.56%)</title><rect x="96.0516%" y="405" width="0.5641%" height="15" fill="rgb(251,57,28)" fg:x="1192" fg:w="7"/><text x="96.3016%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (7 samples, 0.56%)</title><rect x="96.0516%" y="389" width="0.5641%" height="15" fill="rgb(215,228,0)" fg:x="1192" fg:w="7"/><text x="96.3016%" y="399.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (7 samples, 0.56%)</title><rect x="96.0516%" y="373" width="0.5641%" height="15" fill="rgb(237,218,39)" fg:x="1192" fg:w="7"/><text x="96.3016%" y="383.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (7 samples, 0.56%)</title><rect x="96.0516%" y="357" width="0.5641%" height="15" fill="rgb(207,2,54)" fg:x="1192" fg:w="7"/><text x="96.3016%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (7 samples, 0.56%)</title><rect x="96.0516%" y="341" width="0.5641%" height="15" fill="rgb(232,76,50)" fg:x="1192" fg:w="7"/><text x="96.3016%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="96.0516%" y="325" width="0.5641%" height="15" fill="rgb(211,85,31)" fg:x="1192" fg:w="7"/><text x="96.3016%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="96.4545%" y="309" width="0.1612%" height="15" fill="rgb(223,210,27)" fg:x="1197" fg:w="2"/><text x="96.7045%" y="319.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="96.4545%" y="293" width="0.1612%" height="15" fill="rgb(254,36,8)" fg:x="1197" fg:w="2"/><text x="96.7045%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.4545%" y="277" width="0.1612%" height="15" fill="rgb(213,4,25)" fg:x="1197" fg:w="2"/><text x="96.7045%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.4545%" y="261" width="0.1612%" height="15" fill="rgb(224,2,39)" fg:x="1197" fg:w="2"/><text x="96.7045%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5351%" y="245" width="0.0806%" height="15" fill="rgb(208,8,39)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5351%" y="229" width="0.0806%" height="15" fill="rgb(216,226,3)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="96.5351%" y="213" width="0.0806%" height="15" fill="rgb(249,139,31)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="223.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="96.6156%" y="373" width="0.2417%" height="15" fill="rgb(242,170,35)" fg:x="1199" fg:w="3"/><text x="96.8656%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="96.6156%" y="357" width="0.2417%" height="15" fill="rgb(238,14,9)" fg:x="1199" fg:w="3"/><text x="96.8656%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="96.6156%" y="341" width="0.2417%" height="15" fill="rgb(251,81,46)" fg:x="1199" fg:w="3"/><text x="96.8656%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="96.6962%" y="325" width="0.1612%" height="15" fill="rgb(230,23,4)" fg:x="1200" fg:w="2"/><text x="96.9462%" y="335.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="96.6962%" y="309" width="0.1612%" height="15" fill="rgb(211,85,25)" fg:x="1200" fg:w="2"/><text x="96.9462%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="96.6962%" y="293" width="0.1612%" height="15" fill="rgb(252,23,31)" fg:x="1200" fg:w="2"/><text x="96.9462%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="96.6962%" y="277" width="0.1612%" height="15" fill="rgb(234,163,38)" fg:x="1200" fg:w="2"/><text x="96.9462%" y="287.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="96.7768%" y="261" width="0.0806%" height="15" fill="rgb(210,190,50)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="96.7768%" y="245" width="0.0806%" height="15" fill="rgb(228,158,3)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="255.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="96.7768%" y="229" width="0.0806%" height="15" fill="rgb(216,130,0)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="239.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="96.7768%" y="213" width="0.0806%" height="15" fill="rgb(224,184,10)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="223.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="96.7768%" y="197" width="0.0806%" height="15" fill="rgb(214,202,18)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="96.7768%" y="181" width="0.0806%" height="15" fill="rgb(213,229,54)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.7768%" y="165" width="0.0806%" height="15" fill="rgb(246,120,0)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="175.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="96.8574%" y="357" width="0.0806%" height="15" fill="rgb(237,6,15)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8574%" y="341" width="0.0806%" height="15" fill="rgb(252,156,15)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="96.9380%" y="341" width="0.0806%" height="15" fill="rgb(249,78,18)" fg:x="1203" fg:w="1"/><text x="97.1880%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.9380%" y="325" width="0.0806%" height="15" fill="rgb(230,223,44)" fg:x="1203" fg:w="1"/><text x="97.1880%" y="335.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.0185%" y="325" width="0.0806%" height="15" fill="rgb(230,222,32)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.0185%" y="309" width="0.0806%" height="15" fill="rgb(247,54,6)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0185%" y="293" width="0.0806%" height="15" fill="rgb(247,115,45)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.0185%" y="277" width="0.0806%" height="15" fill="rgb(213,203,37)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0185%" y="261" width="0.0806%" height="15" fill="rgb(248,188,18)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.0185%" y="245" width="0.0806%" height="15" fill="rgb(206,80,8)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="97.0991%" y="277" width="0.0806%" height="15" fill="rgb(245,217,31)" fg:x="1205" fg:w="1"/><text x="97.3491%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1797%" y="261" width="0.0806%" height="15" fill="rgb(220,193,15)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1797%" y="245" width="0.0806%" height="15" fill="rgb(226,7,19)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1797%" y="229" width="0.0806%" height="15" fill="rgb(222,145,31)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1797%" y="213" width="0.0806%" height="15" fill="rgb(241,193,36)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="97.2603%" y="261" width="0.0806%" height="15" fill="rgb(225,123,33)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2603%" y="245" width="0.0806%" height="15" fill="rgb(246,136,38)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2603%" y="229" width="0.0806%" height="15" fill="rgb(243,56,24)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.2603%" y="213" width="0.0806%" height="15" fill="rgb(215,147,2)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2603%" y="197" width="0.0806%" height="15" fill="rgb(209,155,27)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2603%" y="181" width="0.0806%" height="15" fill="rgb(222,177,11)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2603%" y="165" width="0.0806%" height="15" fill="rgb(212,227,15)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.2603%" y="149" width="0.0806%" height="15" fill="rgb(214,138,20)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.5826%" y="165" width="0.0806%" height="15" fill="rgb(221,170,31)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5826%" y="149" width="0.0806%" height="15" fill="rgb(253,207,5)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.5826%" y="133" width="0.0806%" height="15" fill="rgb(212,64,37)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5826%" y="117" width="0.0806%" height="15" fill="rgb(208,113,51)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5826%" y="101" width="0.0806%" height="15" fill="rgb(237,15,5)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="111.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="97.3409%" y="261" width="0.4029%" height="15" fill="rgb(238,33,18)" fg:x="1208" fg:w="5"/><text x="97.5909%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="97.3409%" y="245" width="0.4029%" height="15" fill="rgb(253,206,50)" fg:x="1208" fg:w="5"/><text x="97.5909%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="97.3409%" y="229" width="0.4029%" height="15" fill="rgb(242,158,43)" fg:x="1208" fg:w="5"/><text x="97.5909%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="97.5020%" y="213" width="0.2417%" height="15" fill="rgb(213,125,27)" fg:x="1210" fg:w="3"/><text x="97.7520%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.5020%" y="197" width="0.2417%" height="15" fill="rgb(233,161,31)" fg:x="1210" fg:w="3"/><text x="97.7520%" y="207.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.5826%" y="181" width="0.1612%" height="15" fill="rgb(218,135,6)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.6632%" y="165" width="0.0806%" height="15" fill="rgb(222,73,53)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.6632%" y="149" width="0.0806%" height="15" fill="rgb(229,66,53)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.6632%" y="133" width="0.0806%" height="15" fill="rgb(208,128,19)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.6632%" y="117" width="0.0806%" height="15" fill="rgb(235,70,27)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.6632%" y="101" width="0.0806%" height="15" fill="rgb(241,130,30)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="111.50"></text></g><g><title>plugins_core::tools::contained_by (10 samples, 0.81%)</title><rect x="97.0185%" y="341" width="0.8058%" height="15" fill="rgb(222,57,48)" fg:x="1204" fg:w="10"/><text x="97.2685%" y="351.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (9 samples, 0.73%)</title><rect x="97.0991%" y="325" width="0.7252%" height="15" fill="rgb(225,204,29)" fg:x="1205" fg:w="9"/><text x="97.3491%" y="335.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (9 samples, 0.73%)</title><rect x="97.0991%" y="309" width="0.7252%" height="15" fill="rgb(240,196,35)" fg:x="1205" fg:w="9"/><text x="97.3491%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (9 samples, 0.73%)</title><rect x="97.0991%" y="293" width="0.7252%" height="15" fill="rgb(215,150,16)" fg:x="1205" fg:w="9"/><text x="97.3491%" y="303.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="97.1797%" y="277" width="0.6446%" height="15" fill="rgb(209,170,13)" fg:x="1206" fg:w="8"/><text x="97.4297%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="97.7438%" y="261" width="0.0806%" height="15" fill="rgb(235,75,31)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="271.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="97.7438%" y="245" width="0.0806%" height="15" fill="rgb(252,1,47)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.7438%" y="229" width="0.0806%" height="15" fill="rgb(241,2,36)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7438%" y="213" width="0.0806%" height="15" fill="rgb(236,191,4)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.7438%" y="197" width="0.0806%" height="15" fill="rgb(212,65,35)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7438%" y="181" width="0.0806%" height="15" fill="rgb(209,49,33)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.7438%" y="165" width="0.0806%" height="15" fill="rgb(208,36,46)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="175.50"></text></g><g><title>plugins_core::tools::occupied_by (2 samples, 0.16%)</title><rect x="97.8243%" y="341" width="0.1612%" height="15" fill="rgb(210,125,2)" fg:x="1214" fg:w="2"/><text x="98.0743%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="97.8243%" y="325" width="0.1612%" height="15" fill="rgb(225,62,6)" fg:x="1214" fg:w="2"/><text x="98.0743%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.8243%" y="309" width="0.1612%" height="15" fill="rgb(210,54,27)" fg:x="1214" fg:w="2"/><text x="98.0743%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.8243%" y="293" width="0.1612%" height="15" fill="rgb(249,189,52)" fg:x="1214" fg:w="2"/><text x="98.0743%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9049%" y="277" width="0.0806%" height="15" fill="rgb(225,134,40)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9049%" y="261" width="0.0806%" height="15" fill="rgb(206,13,37)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="271.50"></text></g><g><title>engine::session::Session::captured (29 samples, 2.34%)</title><rect x="95.7293%" y="517" width="2.3368%" height="15" fill="rgb(232,114,28)" fg:x="1188" fg:w="29"/><text x="95.9793%" y="527.50">e..</text></g><g><title>engine::session::logs::capture (29 samples, 2.34%)</title><rect x="95.7293%" y="501" width="2.3368%" height="15" fill="rgb(253,215,8)" fg:x="1188" fg:w="29"/><text x="95.9793%" y="511.50">e..</text></g><g><title>tracing_core::dispatcher::with_default (26 samples, 2.10%)</title><rect x="95.9710%" y="485" width="2.0951%" height="15" fill="rgb(254,64,19)" fg:x="1191" fg:w="26"/><text x="96.2210%" y="495.50">t..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (26 samples, 2.10%)</title><rect x="95.9710%" y="469" width="2.0951%" height="15" fill="rgb(242,18,46)" fg:x="1191" fg:w="26"/><text x="96.2210%" y="479.50">&lt;..</text></g><g><title>kernel::plugins::mw::apply_middleware (26 samples, 2.10%)</title><rect x="95.9710%" y="453" width="2.0951%" height="15" fill="rgb(239,192,30)" fg:x="1191" fg:w="26"/><text x="96.2210%" y="463.50">k..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (25 samples, 2.01%)</title><rect x="96.0516%" y="437" width="2.0145%" height="15" fill="rgb(232,73,14)" fg:x="1192" fg:w="25"/><text x="96.3016%" y="447.50">k..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (25 samples, 2.01%)</title><rect x="96.0516%" y="421" width="2.0145%" height="15" fill="rgb(225,51,9)" fg:x="1192" fg:w="25"/><text x="96.3016%" y="431.50">&lt;..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (18 samples, 1.45%)</title><rect x="96.6156%" y="405" width="1.4504%" height="15" fill="rgb(242,217,54)" fg:x="1199" fg:w="18"/><text x="96.8656%" y="415.50"></text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (18 samples, 1.45%)</title><rect x="96.6156%" y="389" width="1.4504%" height="15" fill="rgb(216,93,3)" fg:x="1199" fg:w="18"/><text x="96.8656%" y="399.50"></text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (15 samples, 1.21%)</title><rect x="96.8574%" y="373" width="1.2087%" height="15" fill="rgb(230,119,33)" fg:x="1202" fg:w="15"/><text x="97.1074%" y="383.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (14 samples, 1.13%)</title><rect x="96.9380%" y="357" width="1.1281%" height="15" fill="rgb(238,170,27)" fg:x="1203" fg:w="14"/><text x="97.1880%" y="367.50"></text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="97.9855%" y="341" width="0.0806%" height="15" fill="rgb(229,8,2)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.9855%" y="325" width="0.0806%" height="15" fill="rgb(205,214,42)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9855%" y="309" width="0.0806%" height="15" fill="rgb(245,113,1)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9855%" y="293" width="0.0806%" height="15" fill="rgb(252,50,2)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.1467%" y="469" width="0.1612%" height="15" fill="rgb(225,122,24)" fg:x="1218" fg:w="2"/><text x="98.3967%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.1467%" y="453" width="0.1612%" height="15" fill="rgb(234,129,31)" fg:x="1218" fg:w="2"/><text x="98.3967%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.1467%" y="437" width="0.1612%" height="15" fill="rgb(219,177,4)" fg:x="1218" fg:w="2"/><text x="98.3967%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.1467%" y="421" width="0.1612%" height="15" fill="rgb(225,142,27)" fg:x="1218" fg:w="2"/><text x="98.3967%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.1467%" y="405" width="0.1612%" height="15" fill="rgb(205,107,51)" fg:x="1218" fg:w="2"/><text x="98.3967%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2272%" y="389" width="0.0806%" height="15" fill="rgb(236,223,15)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2272%" y="373" width="0.0806%" height="15" fill="rgb(235,133,11)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.2272%" y="357" width="0.0806%" height="15" fill="rgb(247,172,13)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.2272%" y="341" width="0.0806%" height="15" fill="rgb(233,191,41)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.2272%" y="325" width="0.0806%" height="15" fill="rgb(250,65,16)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2272%" y="309" width="0.0806%" height="15" fill="rgb(206,10,27)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2272%" y="293" width="0.0806%" height="15" fill="rgb(212,96,22)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.2272%" y="277" width="0.0806%" height="15" fill="rgb(206,50,0)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.2272%" y="261" width="0.0806%" height="15" fill="rgb(249,105,52)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.2272%" y="245" width="0.0806%" height="15" fill="rgb(216,93,51)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.2272%" y="229" width="0.0806%" height="15" fill="rgb(217,172,13)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2272%" y="213" width="0.0806%" height="15" fill="rgb(235,199,38)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3078%" y="421" width="0.0806%" height="15" fill="rgb(221,97,33)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3078%" y="405" width="0.0806%" height="15" fill="rgb(205,156,50)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3078%" y="389" width="0.0806%" height="15" fill="rgb(215,142,19)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3078%" y="373" width="0.0806%" height="15" fill="rgb(232,170,7)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.3078%" y="357" width="0.0806%" height="15" fill="rgb(223,50,17)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.3078%" y="341" width="0.0806%" height="15" fill="rgb(230,103,46)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.3078%" y="325" width="0.0806%" height="15" fill="rgb(254,30,34)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3078%" y="309" width="0.0806%" height="15" fill="rgb(235,198,1)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3078%" y="293" width="0.0806%" height="15" fill="rgb(217,105,47)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.3078%" y="277" width="0.0806%" height="15" fill="rgb(231,18,12)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.3078%" y="261" width="0.0806%" height="15" fill="rgb(218,196,1)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.3078%" y="245" width="0.0806%" height="15" fill="rgb(210,32,3)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.3078%" y="229" width="0.0806%" height="15" fill="rgb(227,178,30)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="98.3884%" y="325" width="0.0806%" height="15" fill="rgb(231,140,27)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.3884%" y="309" width="0.0806%" height="15" fill="rgb(206,66,35)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="319.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="98.3884%" y="293" width="0.0806%" height="15" fill="rgb(212,34,2)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3884%" y="277" width="0.0806%" height="15" fill="rgb(207,201,33)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3884%" y="261" width="0.0806%" height="15" fill="rgb(221,135,32)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="98.3078%" y="469" width="0.3223%" height="15" fill="rgb(206,77,31)" fg:x="1220" fg:w="4"/><text x="98.5578%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="98.3078%" y="453" width="0.3223%" height="15" fill="rgb(252,198,50)" fg:x="1220" fg:w="4"/><text x="98.5578%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="98.3078%" y="437" width="0.3223%" height="15" fill="rgb(206,79,27)" fg:x="1220" fg:w="4"/><text x="98.5578%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="98.3884%" y="421" width="0.2417%" height="15" fill="rgb(228,108,9)" fg:x="1221" fg:w="3"/><text x="98.6384%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="98.3884%" y="405" width="0.2417%" height="15" fill="rgb(213,9,39)" fg:x="1221" fg:w="3"/><text x="98.6384%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="98.3884%" y="389" width="0.2417%" height="15" fill="rgb(252,51,13)" fg:x="1221" fg:w="3"/><text x="98.6384%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="98.3884%" y="373" width="0.2417%" height="15" fill="rgb(218,202,39)" fg:x="1221" fg:w="3"/><text x="98.6384%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="98.3884%" y="357" width="0.2417%" height="15" fill="rgb(214,122,21)" fg:x="1221" fg:w="3"/><text x="98.6384%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="98.3884%" y="341" width="0.2417%" height="15" fill="rgb(217,205,48)" fg:x="1221" fg:w="3"/><text x="98.6384%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.4690%" y="325" width="0.1612%" height="15" fill="rgb(230,216,13)" fg:x="1222" fg:w="2"/><text x="98.7190%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4690%" y="309" width="0.1612%" height="15" fill="rgb(249,118,4)" fg:x="1222" fg:w="2"/><text x="98.7190%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="98.5496%" y="293" width="0.0806%" height="15" fill="rgb(212,207,40)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="98.5496%" y="277" width="0.0806%" height="15" fill="rgb(217,156,26)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="287.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="98.5496%" y="261" width="0.0806%" height="15" fill="rgb(226,86,34)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="271.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="98.5496%" y="245" width="0.0806%" height="15" fill="rgb(217,111,30)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="255.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.5496%" y="229" width="0.0806%" height="15" fill="rgb(228,64,18)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="239.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.5496%" y="213" width="0.0806%" height="15" fill="rgb(254,217,48)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="223.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.5496%" y="197" width="0.0806%" height="15" fill="rgb(226,156,48)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="207.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.5496%" y="181" width="0.0806%" height="15" fill="rgb(236,168,20)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="191.50"></text></g><g><title>&lt;dyn serde::de::Expected as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="98.5496%" y="165" width="0.0806%" height="15" fill="rgb(239,210,33)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="175.50"></text></g><g><title>engine::session::internal::Added::find_refs (9 samples, 0.73%)</title><rect x="98.0661%" y="501" width="0.7252%" height="15" fill="rgb(242,85,17)" fg:x="1217" fg:w="9"/><text x="98.3161%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.73%)</title><rect x="98.0661%" y="485" width="0.7252%" height="15" fill="rgb(221,196,15)" fg:x="1217" fg:w="9"/><text x="98.3161%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.6301%" y="469" width="0.1612%" height="15" fill="rgb(249,76,21)" fg:x="1224" fg:w="2"/><text x="98.8801%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.6301%" y="453" width="0.1612%" height="15" fill="rgb(243,67,29)" fg:x="1224" fg:w="2"/><text x="98.8801%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="98.6301%" y="437" width="0.1612%" height="15" fill="rgb(240,159,2)" fg:x="1224" fg:w="2"/><text x="98.8801%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="98.6301%" y="421" width="0.1612%" height="15" fill="rgb(244,64,3)" fg:x="1224" fg:w="2"/><text x="98.8801%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="98.6301%" y="405" width="0.1612%" height="15" fill="rgb(220,86,40)" fg:x="1224" fg:w="2"/><text x="98.8801%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7107%" y="389" width="0.0806%" height="15" fill="rgb(222,194,51)" fg:x="1225" fg:w="1"/><text x="98.9607%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.7913%" y="437" width="0.0806%" height="15" fill="rgb(207,154,19)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7913%" y="421" width="0.0806%" height="15" fill="rgb(206,178,36)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.7913%" y="405" width="0.0806%" height="15" fill="rgb(218,8,24)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.7913%" y="389" width="0.0806%" height="15" fill="rgb(226,83,41)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.8719%" y="389" width="0.1612%" height="15" fill="rgb(224,23,22)" fg:x="1227" fg:w="2"/><text x="99.1219%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8719%" y="373" width="0.1612%" height="15" fill="rgb(218,198,45)" fg:x="1227" fg:w="2"/><text x="99.1219%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="98.9525%" y="357" width="0.0806%" height="15" fill="rgb(249,147,41)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.0330%" y="389" width="0.0806%" height="15" fill="rgb(244,224,13)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.0330%" y="373" width="0.0806%" height="15" fill="rgb(225,97,27)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.0330%" y="357" width="0.0806%" height="15" fill="rgb(254,64,0)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.0330%" y="341" width="0.0806%" height="15" fill="rgb(208,130,43)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1942%" y="357" width="0.0806%" height="15" fill="rgb(247,91,25)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (16 samples, 1.29%)</title><rect x="98.0661%" y="517" width="1.2893%" height="15" fill="rgb(215,218,42)" fg:x="1217" fg:w="16"/><text x="98.3161%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="98.7913%" y="501" width="0.5641%" height="15" fill="rgb(233,9,24)" fg:x="1226" fg:w="7"/><text x="99.0413%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.56%)</title><rect x="98.7913%" y="485" width="0.5641%" height="15" fill="rgb(252,105,38)" fg:x="1226" fg:w="7"/><text x="99.0413%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="98.7913%" y="469" width="0.5641%" height="15" fill="rgb(225,40,49)" fg:x="1226" fg:w="7"/><text x="99.0413%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="98.7913%" y="453" width="0.5641%" height="15" fill="rgb(232,196,19)" fg:x="1226" fg:w="7"/><text x="99.0413%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="98.8719%" y="437" width="0.4835%" height="15" fill="rgb(207,35,15)" fg:x="1227" fg:w="6"/><text x="99.1219%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="98.8719%" y="421" width="0.4835%" height="15" fill="rgb(238,68,36)" fg:x="1227" fg:w="6"/><text x="99.1219%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="98.8719%" y="405" width="0.4835%" height="15" fill="rgb(205,158,20)" fg:x="1227" fg:w="6"/><text x="99.1219%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.1136%" y="389" width="0.2417%" height="15" fill="rgb(232,32,22)" fg:x="1230" fg:w="3"/><text x="99.3636%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.1136%" y="373" width="0.2417%" height="15" fill="rgb(210,169,6)" fg:x="1230" fg:w="3"/><text x="99.3636%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2748%" y="357" width="0.0806%" height="15" fill="rgb(229,28,12)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2748%" y="341" width="0.0806%" height="15" fill="rgb(229,78,10)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2748%" y="325" width="0.0806%" height="15" fill="rgb(223,139,54)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2748%" y="309" width="0.0806%" height="15" fill="rgb(207,110,4)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2748%" y="293" width="0.0806%" height="15" fill="rgb(248,30,41)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2748%" y="277" width="0.0806%" height="15" fill="rgb(235,54,25)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="287.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.3554%" y="517" width="0.0806%" height="15" fill="rgb(213,107,41)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="99.3554%" y="501" width="0.0806%" height="15" fill="rgb(237,102,9)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="99.3554%" y="485" width="0.0806%" height="15" fill="rgb(252,137,49)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="99.5165%" y="469" width="0.1612%" height="15" fill="rgb(233,202,33)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5165%" y="453" width="0.1612%" height="15" fill="rgb(223,14,51)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5971%" y="437" width="0.0806%" height="15" fill="rgb(248,70,23)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.5971%" y="421" width="0.0806%" height="15" fill="rgb(209,207,47)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5971%" y="405" width="0.0806%" height="15" fill="rgb(245,124,2)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.5971%" y="389" width="0.0806%" height="15" fill="rgb(249,208,11)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="99.6777%" y="469" width="0.1612%" height="15" fill="rgb(247,112,7)" fg:x="1237" fg:w="2"/><text x="99.9277%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.6777%" y="453" width="0.1612%" height="15" fill="rgb(209,192,31)" fg:x="1237" fg:w="2"/><text x="99.9277%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6777%" y="437" width="0.1612%" height="15" fill="rgb(236,55,19)" fg:x="1237" fg:w="2"/><text x="99.9277%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.6777%" y="421" width="0.1612%" height="15" fill="rgb(252,89,41)" fg:x="1237" fg:w="2"/><text x="99.9277%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6777%" y="405" width="0.1612%" height="15" fill="rgb(220,172,14)" fg:x="1237" fg:w="2"/><text x="99.9277%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7583%" y="389" width="0.0806%" height="15" fill="rgb(252,65,2)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="399.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (52 samples, 4.19%)</title><rect x="95.7293%" y="549" width="4.1902%" height="15" fill="rgb(250,20,8)" fg:x="1188" fg:w="52"/><text x="95.9793%" y="559.50">engin..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (52 samples, 4.19%)</title><rect x="95.7293%" y="533" width="4.1902%" height="15" fill="rgb(234,149,13)" fg:x="1188" fg:w="52"/><text x="95.9793%" y="543.50">engin..</text></g><g><title>kernel::model::EntityPtrResolver::world (6 samples, 0.48%)</title><rect x="99.4359%" y="517" width="0.4835%" height="15" fill="rgb(223,219,12)" fg:x="1234" fg:w="6"/><text x="99.6859%" y="527.50"></text></g><g><title>engine::session::Session::load_entity (6 samples, 0.48%)</title><rect x="99.4359%" y="501" width="0.4835%" height="15" fill="rgb(234,13,49)" fg:x="1234" fg:w="6"/><text x="99.6859%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="99.5165%" y="485" width="0.4029%" height="15" fill="rgb(214,41,25)" fg:x="1235" fg:w="5"/><text x="99.7665%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="99.8388%" y="469" width="0.0806%" height="15" fill="rgb(232,198,52)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="479.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.8388%" y="453" width="0.0806%" height="15" fill="rgb(236,111,46)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.8388%" y="437" width="0.0806%" height="15" fill="rgb(253,30,20)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8388%" y="421" width="0.0806%" height="15" fill="rgb(247,141,17)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.8388%" y="405" width="0.0806%" height="15" fill="rgb(214,195,21)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.8388%" y="389" width="0.0806%" height="15" fill="rgb(214,98,12)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="399.50"></text></g><g><title>all (1,241 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(239,4,26)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="911.50"></text></g><g><title>simple-da05257a (1,241 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(234,210,35)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="895.50">simple-da05257a</text></g><g><title>_start (1,241 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(252,178,27)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="879.50">_start</text></g><g><title>__libc_start_main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(217,50,1)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="863.50">__libc_start_main</text></g><g><title>main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(233,137,5)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (1,241 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(217,227,25)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(242,89,38)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(212,190,30)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(222,120,8)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="783.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(227,181,9)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="767.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(222,125,29)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(215,153,31)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(228,77,30)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="719.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,241 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(226,110,9)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="703.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(219,111,7)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="687.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,241 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(229,167,25)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="671.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(209,77,43)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="655.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,241 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(233,70,39)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="639.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,241 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(207,171,44)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="623.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (272 samples, 21.92%)</title><rect x="78.0822%" y="597" width="21.9178%" height="15" fill="rgb(244,91,6)" fg:x="969" fg:w="272"/><text x="78.3322%" y="607.50">&lt;criterion::routine::Function&lt;M,F,T..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (272 samples, 21.92%)</title><rect x="78.0822%" y="581" width="21.9178%" height="15" fill="rgb(234,136,12)" fg:x="969" fg:w="272"/><text x="78.3322%" y="591.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (272 samples, 21.92%)</title><rect x="78.0822%" y="565" width="21.9178%" height="15" fill="rgb(216,210,38)" fg:x="969" fg:w="272"/><text x="78.3322%" y="575.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9194%" y="549" width="0.0806%" height="15" fill="rgb(241,227,7)" fg:x="1240" fg:w="1"/><text x="100.1694%" y="559.50"></text></g></svg></svg>