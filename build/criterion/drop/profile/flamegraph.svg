<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1350"><g><title>__libc_free (1 samples, 0.07%)</title><rect x="0.2222%" y="533" width="0.0741%" height="15" fill="rgb(228,83,9)" fg:x="3" fg:w="1"/><text x="0.4722%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.22%)</title><rect x="0.2963%" y="501" width="0.2222%" height="15" fill="rgb(225,16,36)" fg:x="4" fg:w="3"/><text x="0.5463%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rune::runtime::unit::Unit&gt;&gt; (1 samples, 0.07%)</title><rect x="0.5185%" y="501" width="0.0741%" height="15" fill="rgb(242,198,13)" fg:x="7" fg:w="1"/><text x="0.7685%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.52%)</title><rect x="0.1481%" y="549" width="0.5185%" height="15" fill="rgb(239,25,51)" fg:x="2" fg:w="7"/><text x="0.3981%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.37%)</title><rect x="0.2963%" y="533" width="0.3704%" height="15" fill="rgb(239,28,37)" fg:x="4" fg:w="5"/><text x="0.5463%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.37%)</title><rect x="0.2963%" y="517" width="0.3704%" height="15" fill="rgb(234,70,17)" fg:x="4" fg:w="5"/><text x="0.5463%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.07%)</title><rect x="0.5926%" y="501" width="0.0741%" height="15" fill="rgb(231,215,53)" fg:x="8" fg:w="1"/><text x="0.8426%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="0.5926%" y="485" width="0.0741%" height="15" fill="rgb(218,140,42)" fg:x="8" fg:w="1"/><text x="0.8426%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.59%)</title><rect x="0.1481%" y="565" width="0.5926%" height="15" fill="rgb(233,227,45)" fg:x="2" fg:w="8"/><text x="0.3981%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="0.6667%" y="549" width="0.0741%" height="15" fill="rgb(225,189,21)" fg:x="9" fg:w="1"/><text x="0.9167%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="0.9630%" y="485" width="0.0741%" height="15" fill="rgb(237,176,54)" fg:x="13" fg:w="1"/><text x="1.2130%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="1.1852%" y="453" width="0.0741%" height="15" fill="rgb(215,131,46)" fg:x="16" fg:w="1"/><text x="1.4352%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="1.2593%" y="453" width="0.1481%" height="15" fill="rgb(218,95,20)" fg:x="17" fg:w="2"/><text x="1.5093%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="1.3333%" y="437" width="0.0741%" height="15" fill="rgb(208,198,12)" fg:x="18" fg:w="1"/><text x="1.5833%" y="447.50"></text></g><g><title>__libc_free (4 samples, 0.30%)</title><rect x="1.4815%" y="437" width="0.2963%" height="15" fill="rgb(239,107,50)" fg:x="20" fg:w="4"/><text x="1.7315%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.22%)</title><rect x="1.7778%" y="437" width="0.2222%" height="15" fill="rgb(240,217,37)" fg:x="24" fg:w="3"/><text x="2.0278%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="1.9259%" y="421" width="0.0741%" height="15" fill="rgb(242,197,49)" fg:x="26" fg:w="1"/><text x="2.1759%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.22%)</title><rect x="2.0000%" y="421" width="0.2222%" height="15" fill="rgb(219,171,17)" fg:x="27" fg:w="3"/><text x="2.2500%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="2.2222%" y="405" width="0.0741%" height="15" fill="rgb(209,81,40)" fg:x="30" fg:w="1"/><text x="2.4722%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="2.2963%" y="405" width="0.0741%" height="15" fill="rgb(237,156,30)" fg:x="31" fg:w="1"/><text x="2.5463%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="2.3704%" y="389" width="0.0741%" height="15" fill="rgb(212,127,16)" fg:x="32" fg:w="1"/><text x="2.6204%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.70%)</title><rect x="0.8148%" y="501" width="1.7037%" height="15" fill="rgb(226,66,32)" fg:x="11" fg:w="23"/><text x="1.0648%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (20 samples, 1.48%)</title><rect x="1.0370%" y="485" width="1.4815%" height="15" fill="rgb(245,22,46)" fg:x="14" fg:w="20"/><text x="1.2870%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.48%)</title><rect x="1.0370%" y="469" width="1.4815%" height="15" fill="rgb(210,112,21)" fg:x="14" fg:w="20"/><text x="1.2870%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.11%)</title><rect x="1.4074%" y="453" width="1.1111%" height="15" fill="rgb(207,118,39)" fg:x="19" fg:w="15"/><text x="1.6574%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.52%)</title><rect x="2.0000%" y="437" width="0.5185%" height="15" fill="rgb(205,206,35)" fg:x="27" fg:w="7"/><text x="2.2500%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.30%)</title><rect x="2.2222%" y="421" width="0.2963%" height="15" fill="rgb(222,120,2)" fg:x="30" fg:w="4"/><text x="2.4722%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="2.3704%" y="405" width="0.1481%" height="15" fill="rgb(205,38,18)" fg:x="32" fg:w="2"/><text x="2.6204%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="2.4444%" y="389" width="0.0741%" height="15" fill="rgb(226,61,2)" fg:x="33" fg:w="1"/><text x="2.6944%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="2.4444%" y="373" width="0.0741%" height="15" fill="rgb(242,161,23)" fg:x="33" fg:w="1"/><text x="2.6944%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="2.5185%" y="501" width="0.0741%" height="15" fill="rgb(213,13,52)" fg:x="34" fg:w="1"/><text x="2.7685%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="2.5926%" y="485" width="0.1481%" height="15" fill="rgb(246,209,47)" fg:x="35" fg:w="2"/><text x="2.8426%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.22%)</title><rect x="2.8889%" y="469" width="0.2222%" height="15" fill="rgb(214,41,3)" fg:x="39" fg:w="3"/><text x="3.1389%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.22%)</title><rect x="3.1111%" y="469" width="0.2222%" height="15" fill="rgb(236,119,38)" fg:x="42" fg:w="3"/><text x="3.3611%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="3.1852%" y="453" width="0.1481%" height="15" fill="rgb(218,50,11)" fg:x="43" fg:w="2"/><text x="3.4352%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="3.3333%" y="453" width="0.0741%" height="15" fill="rgb(228,38,11)" fg:x="45" fg:w="1"/><text x="3.5833%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.30%)</title><rect x="3.4074%" y="453" width="0.2963%" height="15" fill="rgb(212,13,9)" fg:x="46" fg:w="4"/><text x="3.6574%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="3.6296%" y="437" width="0.0741%" height="15" fill="rgb(208,211,9)" fg:x="49" fg:w="1"/><text x="3.8796%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="3.7037%" y="437" width="0.1481%" height="15" fill="rgb(239,39,32)" fg:x="50" fg:w="2"/><text x="3.9537%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="4.0000%" y="421" width="0.0741%" height="15" fill="rgb(254,179,26)" fg:x="54" fg:w="1"/><text x="4.2500%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (46 samples, 3.41%)</title><rect x="0.7407%" y="565" width="3.4074%" height="15" fill="rgb(249,165,28)" fg:x="10" fg:w="46"/><text x="0.9907%" y="575.50">cor..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 3.33%)</title><rect x="0.8148%" y="549" width="3.3333%" height="15" fill="rgb(225,59,50)" fg:x="11" fg:w="45"/><text x="1.0648%" y="559.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (45 samples, 3.33%)</title><rect x="0.8148%" y="533" width="3.3333%" height="15" fill="rgb(209,122,5)" fg:x="11" fg:w="45"/><text x="1.0648%" y="543.50">cor..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 3.33%)</title><rect x="0.8148%" y="517" width="3.3333%" height="15" fill="rgb(214,65,34)" fg:x="11" fg:w="45"/><text x="1.0648%" y="527.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (21 samples, 1.56%)</title><rect x="2.5926%" y="501" width="1.5556%" height="15" fill="rgb(249,183,32)" fg:x="35" fg:w="21"/><text x="2.8426%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.41%)</title><rect x="2.7407%" y="485" width="1.4074%" height="15" fill="rgb(218,122,24)" fg:x="37" fg:w="19"/><text x="2.9907%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.81%)</title><rect x="3.3333%" y="469" width="0.8148%" height="15" fill="rgb(224,109,18)" fg:x="45" fg:w="11"/><text x="3.5833%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.44%)</title><rect x="3.7037%" y="453" width="0.4444%" height="15" fill="rgb(210,68,50)" fg:x="50" fg:w="6"/><text x="3.9537%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.30%)</title><rect x="3.8519%" y="437" width="0.2963%" height="15" fill="rgb(212,184,34)" fg:x="52" fg:w="4"/><text x="4.1019%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="4.0741%" y="421" width="0.0741%" height="15" fill="rgb(238,105,48)" fg:x="55" fg:w="1"/><text x="4.3241%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 4.22%)</title><rect x="0.0000%" y="581" width="4.2222%" height="15" fill="rgb(222,134,54)" fg:x="0" fg:w="57"/><text x="0.2500%" y="591.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::Captured&gt; (1 samples, 0.07%)</title><rect x="4.1481%" y="565" width="0.0741%" height="15" fill="rgb(246,24,43)" fg:x="56" fg:w="1"/><text x="4.3981%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="4.1481%" y="549" width="0.0741%" height="15" fill="rgb(227,169,22)" fg:x="56" fg:w="1"/><text x="4.3981%" y="559.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.07%)</title><rect x="4.2963%" y="533" width="0.0741%" height="15" fill="rgb(253,152,4)" fg:x="58" fg:w="1"/><text x="4.5463%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="4.2963%" y="517" width="0.0741%" height="15" fill="rgb(219,158,36)" fg:x="58" fg:w="1"/><text x="4.5463%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="4.4444%" y="485" width="0.0741%" height="15" fill="rgb(251,128,40)" fg:x="60" fg:w="1"/><text x="4.6944%" y="495.50"></text></g><g><title>anyhow::__private::format_err (1 samples, 0.07%)</title><rect x="4.5185%" y="485" width="0.0741%" height="15" fill="rgb(254,101,39)" fg:x="61" fg:w="1"/><text x="4.7685%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.52%)</title><rect x="4.3704%" y="501" width="0.5185%" height="15" fill="rgb(221,168,40)" fg:x="59" fg:w="7"/><text x="4.6204%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (4 samples, 0.30%)</title><rect x="4.5926%" y="485" width="0.2963%" height="15" fill="rgb(221,14,27)" fg:x="62" fg:w="4"/><text x="4.8426%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.30%)</title><rect x="4.5926%" y="469" width="0.2963%" height="15" fill="rgb(207,36,43)" fg:x="62" fg:w="4"/><text x="4.8426%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.30%)</title><rect x="4.5926%" y="453" width="0.2963%" height="15" fill="rgb(240,172,53)" fg:x="62" fg:w="4"/><text x="4.8426%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (4 samples, 0.30%)</title><rect x="4.5926%" y="437" width="0.2963%" height="15" fill="rgb(241,138,43)" fg:x="62" fg:w="4"/><text x="4.8426%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (4 samples, 0.30%)</title><rect x="4.5926%" y="421" width="0.2963%" height="15" fill="rgb(227,78,19)" fg:x="62" fg:w="4"/><text x="4.8426%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (4 samples, 0.30%)</title><rect x="4.5926%" y="405" width="0.2963%" height="15" fill="rgb(215,127,44)" fg:x="62" fg:w="4"/><text x="4.8426%" y="415.50"></text></g><g><title>statx (4 samples, 0.30%)</title><rect x="4.5926%" y="389" width="0.2963%" height="15" fill="rgb(227,13,10)" fg:x="62" fg:w="4"/><text x="4.8426%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="4.8889%" y="485" width="0.0741%" height="15" fill="rgb(249,177,6)" fg:x="66" fg:w="1"/><text x="5.1389%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="5.1111%" y="453" width="0.0741%" height="15" fill="rgb(215,154,26)" fg:x="69" fg:w="1"/><text x="5.3611%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="5.1111%" y="437" width="0.0741%" height="15" fill="rgb(250,168,20)" fg:x="69" fg:w="1"/><text x="5.3611%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="5.1111%" y="421" width="0.0741%" height="15" fill="rgb(222,53,38)" fg:x="69" fg:w="1"/><text x="5.3611%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="5.1111%" y="405" width="0.0741%" height="15" fill="rgb(245,154,5)" fg:x="69" fg:w="1"/><text x="5.3611%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="5.1111%" y="389" width="0.0741%" height="15" fill="rgb(214,89,50)" fg:x="69" fg:w="1"/><text x="5.3611%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="5.1111%" y="373" width="0.0741%" height="15" fill="rgb(232,73,14)" fg:x="69" fg:w="1"/><text x="5.3611%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="5.1111%" y="357" width="0.0741%" height="15" fill="rgb(230,101,20)" fg:x="69" fg:w="1"/><text x="5.3611%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.59%)</title><rect x="5.7037%" y="357" width="0.5926%" height="15" fill="rgb(208,56,28)" fg:x="77" fg:w="8"/><text x="5.9537%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.59%)</title><rect x="5.7037%" y="341" width="0.5926%" height="15" fill="rgb(247,205,22)" fg:x="77" fg:w="8"/><text x="5.9537%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.59%)</title><rect x="5.7037%" y="325" width="0.5926%" height="15" fill="rgb(252,109,51)" fg:x="77" fg:w="8"/><text x="5.9537%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.59%)</title><rect x="5.7037%" y="309" width="0.5926%" height="15" fill="rgb(220,40,24)" fg:x="77" fg:w="8"/><text x="5.9537%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.59%)</title><rect x="5.7037%" y="293" width="0.5926%" height="15" fill="rgb(251,108,7)" fg:x="77" fg:w="8"/><text x="5.9537%" y="303.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.59%)</title><rect x="5.7037%" y="277" width="0.5926%" height="15" fill="rgb(238,102,51)" fg:x="77" fg:w="8"/><text x="5.9537%" y="287.50"></text></g><g><title>__libc_malloc (8 samples, 0.59%)</title><rect x="5.7037%" y="261" width="0.5926%" height="15" fill="rgb(219,149,34)" fg:x="77" fg:w="8"/><text x="5.9537%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.74%)</title><rect x="5.7037%" y="437" width="0.7407%" height="15" fill="rgb(239,70,0)" fg:x="77" fg:w="10"/><text x="5.9537%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.74%)</title><rect x="5.7037%" y="421" width="0.7407%" height="15" fill="rgb(246,214,23)" fg:x="77" fg:w="10"/><text x="5.9537%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.74%)</title><rect x="5.7037%" y="405" width="0.7407%" height="15" fill="rgb(239,221,51)" fg:x="77" fg:w="10"/><text x="5.9537%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.74%)</title><rect x="5.7037%" y="389" width="0.7407%" height="15" fill="rgb(254,62,14)" fg:x="77" fg:w="10"/><text x="5.9537%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.74%)</title><rect x="5.7037%" y="373" width="0.7407%" height="15" fill="rgb(253,57,33)" fg:x="77" fg:w="10"/><text x="5.9537%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.15%)</title><rect x="6.2963%" y="357" width="0.1481%" height="15" fill="rgb(229,34,6)" fg:x="85" fg:w="2"/><text x="6.5463%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.15%)</title><rect x="6.2963%" y="341" width="0.1481%" height="15" fill="rgb(235,191,23)" fg:x="85" fg:w="2"/><text x="6.5463%" y="351.50"></text></g><g><title>__libc_malloc (4 samples, 0.30%)</title><rect x="6.4444%" y="437" width="0.2963%" height="15" fill="rgb(217,207,27)" fg:x="87" fg:w="4"/><text x="6.6944%" y="447.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (25 samples, 1.85%)</title><rect x="4.9630%" y="485" width="1.8519%" height="15" fill="rgb(232,41,44)" fg:x="67" fg:w="25"/><text x="5.2130%" y="495.50">p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 1.85%)</title><rect x="4.9630%" y="469" width="1.8519%" height="15" fill="rgb(221,188,19)" fg:x="67" fg:w="25"/><text x="5.2130%" y="479.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 1.63%)</title><rect x="5.1852%" y="453" width="1.6296%" height="15" fill="rgb(245,180,45)" fg:x="70" fg:w="22"/><text x="5.4352%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="6.7407%" y="437" width="0.0741%" height="15" fill="rgb(250,220,42)" fg:x="91" fg:w="1"/><text x="6.9907%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="6.7407%" y="421" width="0.0741%" height="15" fill="rgb(234,16,34)" fg:x="91" fg:w="1"/><text x="6.9907%" y="431.50"></text></g><g><title>glob::is_dir (4 samples, 0.30%)</title><rect x="6.8889%" y="437" width="0.2963%" height="15" fill="rgb(233,217,23)" fg:x="93" fg:w="4"/><text x="7.1389%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (4 samples, 0.30%)</title><rect x="6.8889%" y="421" width="0.2963%" height="15" fill="rgb(209,22,46)" fg:x="93" fg:w="4"/><text x="7.1389%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.30%)</title><rect x="6.8889%" y="405" width="0.2963%" height="15" fill="rgb(213,101,18)" fg:x="93" fg:w="4"/><text x="7.1389%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.30%)</title><rect x="6.8889%" y="389" width="0.2963%" height="15" fill="rgb(215,179,52)" fg:x="93" fg:w="4"/><text x="7.1389%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (4 samples, 0.30%)</title><rect x="6.8889%" y="373" width="0.2963%" height="15" fill="rgb(223,50,25)" fg:x="93" fg:w="4"/><text x="7.1389%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (4 samples, 0.30%)</title><rect x="6.8889%" y="357" width="0.2963%" height="15" fill="rgb(224,51,44)" fg:x="93" fg:w="4"/><text x="7.1389%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (4 samples, 0.30%)</title><rect x="6.8889%" y="341" width="0.2963%" height="15" fill="rgb(224,13,54)" fg:x="93" fg:w="4"/><text x="7.1389%" y="351.50"></text></g><g><title>statx (4 samples, 0.30%)</title><rect x="6.8889%" y="325" width="0.2963%" height="15" fill="rgb(219,58,47)" fg:x="93" fg:w="4"/><text x="7.1389%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.59%)</title><rect x="6.8889%" y="469" width="0.5926%" height="15" fill="rgb(246,124,34)" fg:x="93" fg:w="8"/><text x="7.1389%" y="479.50"></text></g><g><title>glob::fill_todo (8 samples, 0.59%)</title><rect x="6.8889%" y="453" width="0.5926%" height="15" fill="rgb(245,109,25)" fg:x="93" fg:w="8"/><text x="7.1389%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (4 samples, 0.30%)</title><rect x="7.1852%" y="437" width="0.2963%" height="15" fill="rgb(235,48,23)" fg:x="97" fg:w="4"/><text x="7.4352%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.30%)</title><rect x="7.1852%" y="421" width="0.2963%" height="15" fill="rgb(229,203,36)" fg:x="97" fg:w="4"/><text x="7.4352%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.30%)</title><rect x="7.1852%" y="405" width="0.2963%" height="15" fill="rgb(234,180,9)" fg:x="97" fg:w="4"/><text x="7.4352%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (4 samples, 0.30%)</title><rect x="7.1852%" y="389" width="0.2963%" height="15" fill="rgb(228,98,45)" fg:x="97" fg:w="4"/><text x="7.4352%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (4 samples, 0.30%)</title><rect x="7.1852%" y="373" width="0.2963%" height="15" fill="rgb(240,24,36)" fg:x="97" fg:w="4"/><text x="7.4352%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (4 samples, 0.30%)</title><rect x="7.1852%" y="357" width="0.2963%" height="15" fill="rgb(227,154,19)" fg:x="97" fg:w="4"/><text x="7.4352%" y="367.50"></text></g><g><title>statx (4 samples, 0.30%)</title><rect x="7.1852%" y="341" width="0.2963%" height="15" fill="rgb(231,2,48)" fg:x="97" fg:w="4"/><text x="7.4352%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;glob::Paths&gt; (1 samples, 0.07%)</title><rect x="7.4815%" y="469" width="0.0741%" height="15" fill="rgb(219,216,0)" fg:x="101" fg:w="1"/><text x="7.7315%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="7.4815%" y="453" width="0.0741%" height="15" fill="rgb(251,88,0)" fg:x="101" fg:w="1"/><text x="7.7315%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="7.4815%" y="437" width="0.0741%" height="15" fill="rgb(242,45,45)" fg:x="101" fg:w="1"/><text x="7.7315%" y="447.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="7.6296%" y="421" width="0.1481%" height="15" fill="rgb(218,149,45)" fg:x="103" fg:w="2"/><text x="7.8796%" y="431.50"></text></g><g><title>std::path::Components::parse_next_component (2 samples, 0.15%)</title><rect x="7.6296%" y="405" width="0.1481%" height="15" fill="rgb(247,194,10)" fg:x="103" fg:w="2"/><text x="7.8796%" y="415.50"></text></g><g><title>std::path::Components::parse_single_component (2 samples, 0.15%)</title><rect x="7.6296%" y="389" width="0.1481%" height="15" fill="rgb(234,33,37)" fg:x="103" fg:w="2"/><text x="7.8796%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="7.7778%" y="261" width="0.0741%" height="15" fill="rgb(218,61,13)" fg:x="105" fg:w="1"/><text x="8.0278%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="7.7778%" y="245" width="0.0741%" height="15" fill="rgb(210,80,52)" fg:x="105" fg:w="1"/><text x="8.0278%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="7.7778%" y="229" width="0.0741%" height="15" fill="rgb(218,203,27)" fg:x="105" fg:w="1"/><text x="8.0278%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="7.7778%" y="213" width="0.0741%" height="15" fill="rgb(209,126,33)" fg:x="105" fg:w="1"/><text x="8.0278%" y="223.50"></text></g><g><title>std::path::PathBuf::_push (2 samples, 0.15%)</title><rect x="7.7778%" y="421" width="0.1481%" height="15" fill="rgb(234,173,41)" fg:x="105" fg:w="2"/><text x="8.0278%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (2 samples, 0.15%)</title><rect x="7.7778%" y="405" width="0.1481%" height="15" fill="rgb(228,166,9)" fg:x="105" fg:w="2"/><text x="8.0278%" y="415.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (2 samples, 0.15%)</title><rect x="7.7778%" y="389" width="0.1481%" height="15" fill="rgb(208,124,43)" fg:x="105" fg:w="2"/><text x="8.0278%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="7.7778%" y="373" width="0.1481%" height="15" fill="rgb(212,154,38)" fg:x="105" fg:w="2"/><text x="8.0278%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.15%)</title><rect x="7.7778%" y="357" width="0.1481%" height="15" fill="rgb(246,179,35)" fg:x="105" fg:w="2"/><text x="8.0278%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.15%)</title><rect x="7.7778%" y="341" width="0.1481%" height="15" fill="rgb(251,3,50)" fg:x="105" fg:w="2"/><text x="8.0278%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="7.7778%" y="325" width="0.1481%" height="15" fill="rgb(219,96,8)" fg:x="105" fg:w="2"/><text x="8.0278%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="7.7778%" y="309" width="0.1481%" height="15" fill="rgb(251,216,33)" fg:x="105" fg:w="2"/><text x="8.0278%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="7.7778%" y="293" width="0.1481%" height="15" fill="rgb(243,145,29)" fg:x="105" fg:w="2"/><text x="8.0278%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.15%)</title><rect x="7.7778%" y="277" width="0.1481%" height="15" fill="rgb(210,75,20)" fg:x="105" fg:w="2"/><text x="8.0278%" y="287.50"></text></g><g><title>core::cmp::max (1 samples, 0.07%)</title><rect x="7.8519%" y="261" width="0.0741%" height="15" fill="rgb(235,56,8)" fg:x="106" fg:w="1"/><text x="8.1019%" y="271.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.07%)</title><rect x="7.8519%" y="245" width="0.0741%" height="15" fill="rgb(226,175,49)" fg:x="106" fg:w="1"/><text x="8.1019%" y="255.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.07%)</title><rect x="7.8519%" y="229" width="0.0741%" height="15" fill="rgb(242,204,23)" fg:x="106" fg:w="1"/><text x="8.1019%" y="239.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (6 samples, 0.44%)</title><rect x="7.5556%" y="437" width="0.4444%" height="15" fill="rgb(225,104,24)" fg:x="102" fg:w="6"/><text x="7.8056%" y="447.50"></text></g><g><title>std::sys::unix::os_str::Buf::from_string (1 samples, 0.07%)</title><rect x="7.9259%" y="421" width="0.0741%" height="15" fill="rgb(253,34,1)" fg:x="107" fg:w="1"/><text x="8.1759%" y="431.50"></text></g><g><title>alloc::string::String::into_bytes (1 samples, 0.07%)</title><rect x="7.9259%" y="405" width="0.0741%" height="15" fill="rgb(233,199,23)" fg:x="107" fg:w="1"/><text x="8.1759%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="8.0000%" y="437" width="0.0741%" height="15" fill="rgb(247,7,51)" fg:x="108" fg:w="1"/><text x="8.2500%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="8.0741%" y="421" width="0.0741%" height="15" fill="rgb(214,146,12)" fg:x="109" fg:w="1"/><text x="8.3241%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="8.0741%" y="405" width="0.0741%" height="15" fill="rgb(234,181,43)" fg:x="109" fg:w="1"/><text x="8.3241%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="8.0741%" y="389" width="0.0741%" height="15" fill="rgb(239,148,6)" fg:x="109" fg:w="1"/><text x="8.3241%" y="399.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="8.0741%" y="373" width="0.0741%" height="15" fill="rgb(206,151,17)" fg:x="109" fg:w="1"/><text x="8.3241%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="8.1481%" y="389" width="0.0741%" height="15" fill="rgb(213,215,10)" fg:x="110" fg:w="1"/><text x="8.3981%" y="399.50"></text></g><g><title>glob::Pattern::new (3 samples, 0.22%)</title><rect x="8.0741%" y="437" width="0.2222%" height="15" fill="rgb(215,220,44)" fg:x="109" fg:w="3"/><text x="8.3241%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.15%)</title><rect x="8.1481%" y="421" width="0.1481%" height="15" fill="rgb(245,205,37)" fg:x="110" fg:w="2"/><text x="8.3981%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="8.1481%" y="405" width="0.1481%" height="15" fill="rgb(245,130,43)" fg:x="110" fg:w="2"/><text x="8.3981%" y="415.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="8.2222%" y="389" width="0.0741%" height="15" fill="rgb(231,227,38)" fg:x="111" fg:w="1"/><text x="8.4722%" y="399.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (47 samples, 3.48%)</title><rect x="4.8889%" y="501" width="3.4815%" height="15" fill="rgb(233,185,4)" fg:x="66" fg:w="47"/><text x="5.1389%" y="511.50">&lt;pl..</text></g><g><title>plugins_rune::sources::load_directory_sources (21 samples, 1.56%)</title><rect x="6.8148%" y="485" width="1.5556%" height="15" fill="rgb(224,154,43)" fg:x="92" fg:w="21"/><text x="7.0648%" y="495.50"></text></g><g><title>glob::glob (11 samples, 0.81%)</title><rect x="7.5556%" y="469" width="0.8148%" height="15" fill="rgb(235,156,15)" fg:x="102" fg:w="11"/><text x="7.8056%" y="479.50"></text></g><g><title>glob::glob_with (11 samples, 0.81%)</title><rect x="7.5556%" y="453" width="0.8148%" height="15" fill="rgb(211,55,43)" fg:x="102" fg:w="11"/><text x="7.8056%" y="463.50"></text></g><g><title>std::path::is_separator (1 samples, 0.07%)</title><rect x="8.2963%" y="437" width="0.0741%" height="15" fill="rgb(247,149,40)" fg:x="112" fg:w="1"/><text x="8.5463%" y="447.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.07%)</title><rect x="8.6667%" y="437" width="0.0741%" height="15" fill="rgb(232,171,16)" fg:x="117" fg:w="1"/><text x="8.9167%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.07%)</title><rect x="8.6667%" y="421" width="0.0741%" height="15" fill="rgb(215,117,49)" fg:x="117" fg:w="1"/><text x="8.9167%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.07%)</title><rect x="8.7407%" y="437" width="0.0741%" height="15" fill="rgb(246,194,11)" fg:x="118" fg:w="1"/><text x="8.9907%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="8.7407%" y="421" width="0.0741%" height="15" fill="rgb(242,101,44)" fg:x="118" fg:w="1"/><text x="8.9907%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="8.7407%" y="405" width="0.0741%" height="15" fill="rgb(226,174,6)" fg:x="118" fg:w="1"/><text x="8.9907%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="8.7407%" y="389" width="0.0741%" height="15" fill="rgb(213,150,20)" fg:x="118" fg:w="1"/><text x="8.9907%" y="399.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.30%)</title><rect x="8.5926%" y="469" width="0.2963%" height="15" fill="rgb(222,124,42)" fg:x="116" fg:w="4"/><text x="8.8426%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.30%)</title><rect x="8.5926%" y="453" width="0.2963%" height="15" fill="rgb(250,19,47)" fg:x="116" fg:w="4"/><text x="8.8426%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.07%)</title><rect x="8.8148%" y="437" width="0.0741%" height="15" fill="rgb(241,217,19)" fg:x="119" fg:w="1"/><text x="9.0648%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.07%)</title><rect x="9.1111%" y="437" width="0.0741%" height="15" fill="rgb(207,210,34)" fg:x="123" fg:w="1"/><text x="9.3611%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.07%)</title><rect x="9.1111%" y="421" width="0.0741%" height="15" fill="rgb(244,45,4)" fg:x="123" fg:w="1"/><text x="9.3611%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::TakeOutAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.07%)</title><rect x="9.1852%" y="437" width="0.0741%" height="15" fill="rgb(252,134,50)" fg:x="124" fg:w="1"/><text x="9.4352%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.07%)</title><rect x="9.1852%" y="421" width="0.0741%" height="15" fill="rgb(238,74,2)" fg:x="124" fg:w="1"/><text x="9.4352%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (3 samples, 0.22%)</title><rect x="9.2593%" y="437" width="0.2222%" height="15" fill="rgb(226,58,46)" fg:x="125" fg:w="3"/><text x="9.5093%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.15%)</title><rect x="9.3333%" y="421" width="0.1481%" height="15" fill="rgb(232,83,35)" fg:x="126" fg:w="2"/><text x="9.5833%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="9.4074%" y="405" width="0.0741%" height="15" fill="rgb(212,148,47)" fg:x="127" fg:w="1"/><text x="9.6574%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="9.4074%" y="389" width="0.0741%" height="15" fill="rgb(235,29,1)" fg:x="127" fg:w="1"/><text x="9.6574%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="9.4074%" y="373" width="0.0741%" height="15" fill="rgb(247,55,37)" fg:x="127" fg:w="1"/><text x="9.6574%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="9.4815%" y="437" width="0.0741%" height="15" fill="rgb(222,48,3)" fg:x="128" fg:w="1"/><text x="9.7315%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="9.4815%" y="421" width="0.0741%" height="15" fill="rgb(234,21,33)" fg:x="128" fg:w="1"/><text x="9.7315%" y="431.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="9.4815%" y="405" width="0.0741%" height="15" fill="rgb(247,178,53)" fg:x="128" fg:w="1"/><text x="9.7315%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="9.5556%" y="421" width="0.0741%" height="15" fill="rgb(225,75,7)" fg:x="129" fg:w="1"/><text x="9.8056%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="9.5556%" y="405" width="0.0741%" height="15" fill="rgb(219,199,7)" fg:x="129" fg:w="1"/><text x="9.8056%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="9.5556%" y="389" width="0.0741%" height="15" fill="rgb(209,93,42)" fg:x="129" fg:w="1"/><text x="9.8056%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="9.5556%" y="373" width="0.0741%" height="15" fill="rgb(240,175,17)" fg:x="129" fg:w="1"/><text x="9.8056%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (11 samples, 0.81%)</title><rect x="8.8889%" y="469" width="0.8148%" height="15" fill="rgb(232,106,7)" fg:x="120" fg:w="11"/><text x="9.1389%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (10 samples, 0.74%)</title><rect x="8.9630%" y="453" width="0.7407%" height="15" fill="rgb(242,106,43)" fg:x="121" fg:w="10"/><text x="9.2130%" y="463.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.15%)</title><rect x="9.5556%" y="437" width="0.1481%" height="15" fill="rgb(242,61,37)" fg:x="129" fg:w="2"/><text x="9.8056%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="9.6296%" y="421" width="0.0741%" height="15" fill="rgb(205,72,10)" fg:x="130" fg:w="1"/><text x="9.8796%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="9.6296%" y="405" width="0.0741%" height="15" fill="rgb(214,184,36)" fg:x="130" fg:w="1"/><text x="9.8796%" y="415.50"></text></g><g><title>&lt;plugins_core::chat::actions::SpeakAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.15%)</title><rect x="9.7037%" y="437" width="0.1481%" height="15" fill="rgb(206,107,18)" fg:x="131" fg:w="2"/><text x="9.9537%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.15%)</title><rect x="9.7037%" y="421" width="0.1481%" height="15" fill="rgb(210,75,5)" fg:x="131" fg:w="2"/><text x="9.9537%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="9.7778%" y="405" width="0.0741%" height="15" fill="rgb(205,3,19)" fg:x="132" fg:w="1"/><text x="10.0278%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="9.8519%" y="437" width="0.0741%" height="15" fill="rgb(207,181,42)" fg:x="133" fg:w="1"/><text x="10.1019%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="9.9259%" y="421" width="0.0741%" height="15" fill="rgb(229,179,43)" fg:x="134" fg:w="1"/><text x="10.1759%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="9.9259%" y="405" width="0.0741%" height="15" fill="rgb(246,95,30)" fg:x="134" fg:w="1"/><text x="10.1759%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="9.9259%" y="389" width="0.0741%" height="15" fill="rgb(234,144,45)" fg:x="134" fg:w="1"/><text x="10.1759%" y="399.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.37%)</title><rect x="9.7037%" y="469" width="0.3704%" height="15" fill="rgb(250,54,25)" fg:x="131" fg:w="5"/><text x="9.9537%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.37%)</title><rect x="9.7037%" y="453" width="0.3704%" height="15" fill="rgb(215,195,40)" fg:x="131" fg:w="5"/><text x="9.9537%" y="463.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.15%)</title><rect x="9.9259%" y="437" width="0.1481%" height="15" fill="rgb(233,188,42)" fg:x="134" fg:w="2"/><text x="10.1759%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="10.0000%" y="421" width="0.0741%" height="15" fill="rgb(247,227,35)" fg:x="135" fg:w="1"/><text x="10.2500%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.07%)</title><rect x="10.0741%" y="469" width="0.0741%" height="15" fill="rgb(249,124,27)" fg:x="136" fg:w="1"/><text x="10.3241%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.07%)</title><rect x="10.0741%" y="453" width="0.0741%" height="15" fill="rgb(219,207,25)" fg:x="136" fg:w="1"/><text x="10.3241%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.07%)</title><rect x="10.0741%" y="437" width="0.0741%" height="15" fill="rgb(241,216,47)" fg:x="136" fg:w="1"/><text x="10.3241%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="10.0741%" y="421" width="0.0741%" height="15" fill="rgb(233,82,50)" fg:x="136" fg:w="1"/><text x="10.3241%" y="431.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.07%)</title><rect x="10.1481%" y="469" width="0.0741%" height="15" fill="rgb(232,63,2)" fg:x="137" fg:w="1"/><text x="10.3981%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.07%)</title><rect x="10.1481%" y="453" width="0.0741%" height="15" fill="rgb(236,184,28)" fg:x="137" fg:w="1"/><text x="10.3981%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.07%)</title><rect x="10.1481%" y="437" width="0.0741%" height="15" fill="rgb(254,63,27)" fg:x="137" fg:w="1"/><text x="10.3981%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="10.1481%" y="421" width="0.0741%" height="15" fill="rgb(253,106,28)" fg:x="137" fg:w="1"/><text x="10.3981%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::actions::AddRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.07%)</title><rect x="10.2963%" y="437" width="0.0741%" height="15" fill="rgb(225,141,39)" fg:x="139" fg:w="1"/><text x="10.5463%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.07%)</title><rect x="10.2963%" y="421" width="0.0741%" height="15" fill="rgb(222,157,20)" fg:x="139" fg:w="1"/><text x="10.5463%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::actions::RemoveRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.07%)</title><rect x="10.3704%" y="437" width="0.0741%" height="15" fill="rgb(210,190,9)" fg:x="140" fg:w="1"/><text x="10.6204%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.07%)</title><rect x="10.3704%" y="421" width="0.0741%" height="15" fill="rgb(242,167,7)" fg:x="140" fg:w="1"/><text x="10.6204%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="10.3704%" y="405" width="0.0741%" height="15" fill="rgb(227,82,41)" fg:x="140" fg:w="1"/><text x="10.6204%" y="415.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (6 samples, 0.44%)</title><rect x="10.2222%" y="469" width="0.4444%" height="15" fill="rgb(222,131,13)" fg:x="138" fg:w="6"/><text x="10.4722%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (6 samples, 0.44%)</title><rect x="10.2222%" y="453" width="0.4444%" height="15" fill="rgb(221,98,26)" fg:x="138" fg:w="6"/><text x="10.4722%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::new (3 samples, 0.22%)</title><rect x="10.4444%" y="437" width="0.2222%" height="15" fill="rgb(251,63,52)" fg:x="141" fg:w="3"/><text x="10.6944%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="10.5185%" y="421" width="0.1481%" height="15" fill="rgb(246,25,43)" fg:x="142" fg:w="2"/><text x="10.7685%" y="431.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.07%)</title><rect x="10.6667%" y="469" width="0.0741%" height="15" fill="rgb(247,167,15)" fg:x="144" fg:w="1"/><text x="10.9167%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.07%)</title><rect x="10.6667%" y="453" width="0.0741%" height="15" fill="rgb(240,104,42)" fg:x="144" fg:w="1"/><text x="10.9167%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="10.6667%" y="437" width="0.0741%" height="15" fill="rgb(224,54,6)" fg:x="144" fg:w="1"/><text x="10.9167%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.22%)</title><rect x="10.7407%" y="469" width="0.2222%" height="15" fill="rgb(244,108,35)" fg:x="145" fg:w="3"/><text x="10.9907%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.15%)</title><rect x="10.8148%" y="453" width="0.1481%" height="15" fill="rgb(216,154,2)" fg:x="146" fg:w="2"/><text x="11.0648%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="10.8889%" y="437" width="0.0741%" height="15" fill="rgb(222,8,47)" fg:x="147" fg:w="1"/><text x="11.1389%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (36 samples, 2.67%)</title><rect x="8.3704%" y="501" width="2.6667%" height="15" fill="rgb(252,93,1)" fg:x="113" fg:w="36"/><text x="8.6204%" y="511.50">&lt;s..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 2.67%)</title><rect x="8.3704%" y="485" width="2.6667%" height="15" fill="rgb(223,226,51)" fg:x="113" fg:w="36"/><text x="8.6204%" y="495.50">&lt;c..</text></g><g><title>kernel::plugins::Plugin::schema (1 samples, 0.07%)</title><rect x="10.9630%" y="469" width="0.0741%" height="15" fill="rgb(206,147,9)" fg:x="148" fg:w="1"/><text x="11.2130%" y="479.50"></text></g><g><title>kernel::plugins::Schema::empty (1 samples, 0.07%)</title><rect x="10.9630%" y="453" width="0.0741%" height="15" fill="rgb(248,180,41)" fg:x="148" fg:w="1"/><text x="11.2130%" y="463.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.07%)</title><rect x="11.0370%" y="501" width="0.0741%" height="15" fill="rgb(209,47,50)" fg:x="149" fg:w="1"/><text x="11.2870%" y="511.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.07%)</title><rect x="11.0370%" y="485" width="0.0741%" height="15" fill="rgb(243,65,31)" fg:x="149" fg:w="1"/><text x="11.2870%" y="495.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.07%)</title><rect x="11.0370%" y="469" width="0.0741%" height="15" fill="rgb(228,128,1)" fg:x="149" fg:w="1"/><text x="11.2870%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.07%)</title><rect x="11.0370%" y="453" width="0.0741%" height="15" fill="rgb(231,192,16)" fg:x="149" fg:w="1"/><text x="11.2870%" y="463.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.07%)</title><rect x="11.0370%" y="437" width="0.0741%" height="15" fill="rgb(224,26,40)" fg:x="149" fg:w="1"/><text x="11.2870%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="11.1111%" y="501" width="0.0741%" height="15" fill="rgb(214,192,17)" fg:x="150" fg:w="1"/><text x="11.3611%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="11.2593%" y="469" width="0.0741%" height="15" fill="rgb(225,147,18)" fg:x="152" fg:w="1"/><text x="11.5093%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (3 samples, 0.22%)</title><rect x="11.1852%" y="501" width="0.2222%" height="15" fill="rgb(205,35,11)" fg:x="151" fg:w="3"/><text x="11.4352%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.22%)</title><rect x="11.1852%" y="485" width="0.2222%" height="15" fill="rgb(242,40,42)" fg:x="151" fg:w="3"/><text x="11.4352%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::plugins::ArgumentType&gt; (1 samples, 0.07%)</title><rect x="11.3333%" y="469" width="0.0741%" height="15" fill="rgb(250,170,13)" fg:x="153" fg:w="1"/><text x="11.5833%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::plugins::ArgumentType&gt; (1 samples, 0.07%)</title><rect x="11.3333%" y="453" width="0.0741%" height="15" fill="rgb(240,161,28)" fg:x="153" fg:w="1"/><text x="11.5833%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (99 samples, 7.33%)</title><rect x="4.3704%" y="517" width="7.3333%" height="15" fill="rgb(245,179,12)" fg:x="59" fg:w="99"/><text x="4.6204%" y="527.50">kernel::pl..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.30%)</title><rect x="11.4074%" y="501" width="0.2963%" height="15" fill="rgb(250,92,32)" fg:x="154" fg:w="4"/><text x="11.6574%" y="511.50"></text></g><g><title>clock_gettime (4 samples, 0.30%)</title><rect x="11.4074%" y="485" width="0.2963%" height="15" fill="rgb(233,10,40)" fg:x="154" fg:w="4"/><text x="11.6574%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="11.7778%" y="485" width="0.0741%" height="15" fill="rgb(217,98,1)" fg:x="159" fg:w="1"/><text x="12.0278%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="11.7778%" y="469" width="0.0741%" height="15" fill="rgb(238,202,7)" fg:x="159" fg:w="1"/><text x="12.0278%" y="479.50"></text></g><g><title>engine::session::Session::initialize (104 samples, 7.70%)</title><rect x="4.3704%" y="533" width="7.7037%" height="15" fill="rgb(222,91,3)" fg:x="59" fg:w="104"/><text x="4.6204%" y="543.50">engine::ses..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.37%)</title><rect x="11.7037%" y="517" width="0.3704%" height="15" fill="rgb(211,170,49)" fg:x="158" fg:w="5"/><text x="11.9537%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.37%)</title><rect x="11.7037%" y="501" width="0.3704%" height="15" fill="rgb(253,139,18)" fg:x="158" fg:w="5"/><text x="11.9537%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.22%)</title><rect x="11.8519%" y="485" width="0.2222%" height="15" fill="rgb(222,4,43)" fg:x="160" fg:w="3"/><text x="12.1019%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.22%)</title><rect x="11.8519%" y="469" width="0.2222%" height="15" fill="rgb(207,205,12)" fg:x="160" fg:w="3"/><text x="12.1019%" y="479.50"></text></g><g><title>realloc (3 samples, 0.22%)</title><rect x="11.8519%" y="453" width="0.2222%" height="15" fill="rgb(216,159,46)" fg:x="160" fg:w="3"/><text x="12.1019%" y="463.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.07%)</title><rect x="12.2963%" y="501" width="0.0741%" height="15" fill="rgb(236,115,1)" fg:x="166" fg:w="1"/><text x="12.5463%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (111 samples, 8.22%)</title><rect x="4.2222%" y="581" width="8.2222%" height="15" fill="rgb(251,35,33)" fg:x="57" fg:w="111"/><text x="4.4722%" y="591.50">&lt;engine::do..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (111 samples, 8.22%)</title><rect x="4.2222%" y="565" width="8.2222%" height="15" fill="rgb(248,62,51)" fg:x="57" fg:w="111"/><text x="4.4722%" y="575.50">engine::dom..</text></g><g><title>engine::session::Session::new (110 samples, 8.15%)</title><rect x="4.2963%" y="549" width="8.1481%" height="15" fill="rgb(254,180,19)" fg:x="58" fg:w="110"/><text x="4.5463%" y="559.50">engine::ses..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (5 samples, 0.37%)</title><rect x="12.0741%" y="533" width="0.3704%" height="15" fill="rgb(217,100,32)" fg:x="163" fg:w="5"/><text x="12.3241%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.37%)</title><rect x="12.0741%" y="517" width="0.3704%" height="15" fill="rgb(224,71,22)" fg:x="163" fg:w="5"/><text x="12.3241%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="12.3704%" y="501" width="0.0741%" height="15" fill="rgb(251,185,33)" fg:x="167" fg:w="1"/><text x="12.6204%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="12.3704%" y="485" width="0.0741%" height="15" fill="rgb(209,75,48)" fg:x="167" fg:w="1"/><text x="12.6204%" y="495.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="12.3704%" y="469" width="0.0741%" height="15" fill="rgb(253,190,16)" fg:x="167" fg:w="1"/><text x="12.6204%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="12.4444%" y="565" width="0.0741%" height="15" fill="rgb(226,140,1)" fg:x="168" fg:w="1"/><text x="12.6944%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.07%)</title><rect x="12.4444%" y="549" width="0.0741%" height="15" fill="rgb(206,75,30)" fg:x="168" fg:w="1"/><text x="12.6944%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.07%)</title><rect x="12.4444%" y="533" width="0.0741%" height="15" fill="rgb(231,208,37)" fg:x="168" fg:w="1"/><text x="12.6944%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.07%)</title><rect x="12.4444%" y="517" width="0.0741%" height="15" fill="rgb(238,136,40)" fg:x="168" fg:w="1"/><text x="12.6944%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="12.4444%" y="501" width="0.0741%" height="15" fill="rgb(247,137,17)" fg:x="168" fg:w="1"/><text x="12.6944%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.07%)</title><rect x="12.5185%" y="565" width="0.0741%" height="15" fill="rgb(240,60,40)" fg:x="169" fg:w="1"/><text x="12.7685%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.07%)</title><rect x="12.6667%" y="549" width="0.0741%" height="15" fill="rgb(236,68,50)" fg:x="171" fg:w="1"/><text x="12.9167%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.07%)</title><rect x="12.8148%" y="485" width="0.0741%" height="15" fill="rgb(230,42,12)" fg:x="173" fg:w="1"/><text x="13.0648%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="12.8148%" y="469" width="0.0741%" height="15" fill="rgb(219,16,16)" fg:x="173" fg:w="1"/><text x="13.0648%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="12.8148%" y="453" width="0.0741%" height="15" fill="rgb(220,38,35)" fg:x="173" fg:w="1"/><text x="13.0648%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="12.8148%" y="437" width="0.0741%" height="15" fill="rgb(228,33,1)" fg:x="173" fg:w="1"/><text x="13.0648%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="12.8148%" y="421" width="0.0741%" height="15" fill="rgb(241,46,31)" fg:x="173" fg:w="1"/><text x="13.0648%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="12.8148%" y="405" width="0.0741%" height="15" fill="rgb(232,58,20)" fg:x="173" fg:w="1"/><text x="13.0648%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="12.8148%" y="389" width="0.0741%" height="15" fill="rgb(206,228,53)" fg:x="173" fg:w="1"/><text x="13.0648%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="12.8148%" y="373" width="0.0741%" height="15" fill="rgb(206,88,33)" fg:x="173" fg:w="1"/><text x="13.0648%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="12.8148%" y="357" width="0.0741%" height="15" fill="rgb(238,69,7)" fg:x="173" fg:w="1"/><text x="13.0648%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="12.8148%" y="341" width="0.0741%" height="15" fill="rgb(250,21,46)" fg:x="173" fg:w="1"/><text x="13.0648%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="12.8148%" y="325" width="0.0741%" height="15" fill="rgb(215,212,21)" fg:x="173" fg:w="1"/><text x="13.0648%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="12.8148%" y="309" width="0.0741%" height="15" fill="rgb(211,35,12)" fg:x="173" fg:w="1"/><text x="13.0648%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="12.8148%" y="293" width="0.0741%" height="15" fill="rgb(231,184,16)" fg:x="173" fg:w="1"/><text x="13.0648%" y="303.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="12.8148%" y="517" width="0.1481%" height="15" fill="rgb(242,140,15)" fg:x="173" fg:w="2"/><text x="13.0648%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.15%)</title><rect x="12.8148%" y="501" width="0.1481%" height="15" fill="rgb(220,37,14)" fg:x="173" fg:w="2"/><text x="13.0648%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="12.8889%" y="485" width="0.0741%" height="15" fill="rgb(223,146,22)" fg:x="174" fg:w="1"/><text x="13.1389%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.22%)</title><rect x="13.2593%" y="405" width="0.2222%" height="15" fill="rgb(216,132,15)" fg:x="179" fg:w="3"/><text x="13.5093%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.22%)</title><rect x="13.2593%" y="389" width="0.2222%" height="15" fill="rgb(248,83,5)" fg:x="179" fg:w="3"/><text x="13.5093%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="13.4815%" y="405" width="0.0741%" height="15" fill="rgb(231,206,48)" fg:x="182" fg:w="1"/><text x="13.7315%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.44%)</title><rect x="13.1852%" y="421" width="0.4444%" height="15" fill="rgb(253,185,37)" fg:x="178" fg:w="6"/><text x="13.4352%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="13.5556%" y="405" width="0.0741%" height="15" fill="rgb(208,21,44)" fg:x="183" fg:w="1"/><text x="13.8056%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.22%)</title><rect x="13.6296%" y="421" width="0.2222%" height="15" fill="rgb(236,125,4)" fg:x="184" fg:w="3"/><text x="13.8796%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="13.7037%" y="405" width="0.1481%" height="15" fill="rgb(226,134,25)" fg:x="185" fg:w="2"/><text x="13.9537%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.81%)</title><rect x="13.1111%" y="437" width="0.8148%" height="15" fill="rgb(250,201,12)" fg:x="177" fg:w="11"/><text x="13.3611%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.07%)</title><rect x="13.8519%" y="421" width="0.0741%" height="15" fill="rgb(225,92,18)" fg:x="187" fg:w="1"/><text x="14.1019%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="13.8519%" y="405" width="0.0741%" height="15" fill="rgb(227,35,22)" fg:x="187" fg:w="1"/><text x="14.1019%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="13.8519%" y="389" width="0.0741%" height="15" fill="rgb(214,180,52)" fg:x="187" fg:w="1"/><text x="14.1019%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="13.9259%" y="437" width="0.0741%" height="15" fill="rgb(233,55,38)" fg:x="188" fg:w="1"/><text x="14.1759%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.04%)</title><rect x="13.1111%" y="453" width="1.0370%" height="15" fill="rgb(249,171,43)" fg:x="177" fg:w="14"/><text x="13.3611%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="14.0000%" y="437" width="0.1481%" height="15" fill="rgb(239,87,2)" fg:x="189" fg:w="2"/><text x="14.2500%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="14.1481%" y="453" width="0.0741%" height="15" fill="rgb(248,141,5)" fg:x="191" fg:w="1"/><text x="14.3981%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.41%)</title><rect x="12.9630%" y="469" width="1.4074%" height="15" fill="rgb(238,33,42)" fg:x="175" fg:w="19"/><text x="13.2130%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="14.2222%" y="453" width="0.1481%" height="15" fill="rgb(231,57,19)" fg:x="192" fg:w="2"/><text x="14.4722%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.74%)</title><rect x="14.5185%" y="453" width="0.7407%" height="15" fill="rgb(214,78,53)" fg:x="196" fg:w="10"/><text x="14.7685%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.67%)</title><rect x="14.5926%" y="437" width="0.6667%" height="15" fill="rgb(206,132,29)" fg:x="197" fg:w="9"/><text x="14.8426%" y="447.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.52%)</title><rect x="14.7407%" y="421" width="0.5185%" height="15" fill="rgb(248,174,31)" fg:x="199" fg:w="7"/><text x="14.9907%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.22%)</title><rect x="15.0370%" y="405" width="0.2222%" height="15" fill="rgb(221,87,13)" fg:x="203" fg:w="3"/><text x="15.2870%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.22%)</title><rect x="15.0370%" y="389" width="0.2222%" height="15" fill="rgb(223,197,17)" fg:x="203" fg:w="3"/><text x="15.2870%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="15.1111%" y="373" width="0.1481%" height="15" fill="rgb(220,144,50)" fg:x="204" fg:w="2"/><text x="15.3611%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="15.1111%" y="357" width="0.1481%" height="15" fill="rgb(244,201,11)" fg:x="204" fg:w="2"/><text x="15.3611%" y="367.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="15.1852%" y="341" width="0.0741%" height="15" fill="rgb(249,81,34)" fg:x="205" fg:w="1"/><text x="15.4352%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="15.2593%" y="437" width="0.1481%" height="15" fill="rgb(205,161,12)" fg:x="206" fg:w="2"/><text x="15.5093%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="15.2593%" y="421" width="0.1481%" height="15" fill="rgb(252,139,50)" fg:x="206" fg:w="2"/><text x="15.5093%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="15.3333%" y="405" width="0.0741%" height="15" fill="rgb(205,169,14)" fg:x="207" fg:w="1"/><text x="15.5833%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="15.3333%" y="389" width="0.0741%" height="15" fill="rgb(248,198,33)" fg:x="207" fg:w="1"/><text x="15.5833%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="15.3333%" y="373" width="0.0741%" height="15" fill="rgb(236,23,21)" fg:x="207" fg:w="1"/><text x="15.5833%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="15.3333%" y="357" width="0.0741%" height="15" fill="rgb(231,13,38)" fg:x="207" fg:w="1"/><text x="15.5833%" y="367.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="15.3333%" y="341" width="0.0741%" height="15" fill="rgb(239,139,21)" fg:x="207" fg:w="1"/><text x="15.5833%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="15.4815%" y="421" width="0.0741%" height="15" fill="rgb(222,164,45)" fg:x="209" fg:w="1"/><text x="15.7315%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="15.6296%" y="389" width="0.1481%" height="15" fill="rgb(230,52,27)" fg:x="211" fg:w="2"/><text x="15.8796%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="15.7037%" y="373" width="0.0741%" height="15" fill="rgb(227,143,42)" fg:x="212" fg:w="1"/><text x="15.9537%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="15.7037%" y="357" width="0.0741%" height="15" fill="rgb(249,127,1)" fg:x="212" fg:w="1"/><text x="15.9537%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="15.7037%" y="341" width="0.0741%" height="15" fill="rgb(243,107,26)" fg:x="212" fg:w="1"/><text x="15.9537%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="15.8519%" y="357" width="0.0741%" height="15" fill="rgb(225,7,45)" fg:x="214" fg:w="1"/><text x="16.1019%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="15.8519%" y="341" width="0.0741%" height="15" fill="rgb(241,88,38)" fg:x="214" fg:w="1"/><text x="16.1019%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="15.8519%" y="325" width="0.0741%" height="15" fill="rgb(226,121,9)" fg:x="214" fg:w="1"/><text x="16.1019%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.15%)</title><rect x="15.8519%" y="373" width="0.1481%" height="15" fill="rgb(253,60,29)" fg:x="214" fg:w="2"/><text x="16.1019%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="15.9259%" y="357" width="0.0741%" height="15" fill="rgb(244,181,39)" fg:x="215" fg:w="1"/><text x="16.1759%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="15.9259%" y="341" width="0.0741%" height="15" fill="rgb(252,203,31)" fg:x="215" fg:w="1"/><text x="16.1759%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.44%)</title><rect x="15.6296%" y="405" width="0.4444%" height="15" fill="rgb(224,120,8)" fg:x="211" fg:w="6"/><text x="15.8796%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.30%)</title><rect x="15.7778%" y="389" width="0.2963%" height="15" fill="rgb(205,171,54)" fg:x="213" fg:w="4"/><text x="16.0278%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="16.0000%" y="373" width="0.0741%" height="15" fill="rgb(235,89,11)" fg:x="216" fg:w="1"/><text x="16.2500%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="16.0000%" y="357" width="0.0741%" height="15" fill="rgb(212,180,28)" fg:x="216" fg:w="1"/><text x="16.2500%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="16.0000%" y="341" width="0.0741%" height="15" fill="rgb(247,84,49)" fg:x="216" fg:w="1"/><text x="16.2500%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.59%)</title><rect x="15.5556%" y="421" width="0.5926%" height="15" fill="rgb(236,187,52)" fg:x="210" fg:w="8"/><text x="15.8056%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="16.0741%" y="405" width="0.0741%" height="15" fill="rgb(227,24,15)" fg:x="217" fg:w="1"/><text x="16.3241%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.30%)</title><rect x="16.1481%" y="421" width="0.2963%" height="15" fill="rgb(227,211,13)" fg:x="218" fg:w="4"/><text x="16.3981%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.22%)</title><rect x="16.2222%" y="405" width="0.2222%" height="15" fill="rgb(245,52,14)" fg:x="219" fg:w="3"/><text x="16.4722%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="16.3704%" y="389" width="0.0741%" height="15" fill="rgb(225,185,13)" fg:x="221" fg:w="1"/><text x="16.6204%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="16.4444%" y="405" width="0.1481%" height="15" fill="rgb(217,160,29)" fg:x="222" fg:w="2"/><text x="16.6944%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="16.4444%" y="389" width="0.1481%" height="15" fill="rgb(216,115,53)" fg:x="222" fg:w="2"/><text x="16.6944%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="16.5185%" y="373" width="0.0741%" height="15" fill="rgb(236,99,5)" fg:x="223" fg:w="1"/><text x="16.7685%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="16.5926%" y="389" width="0.0741%" height="15" fill="rgb(222,60,38)" fg:x="224" fg:w="1"/><text x="16.8426%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.22%)</title><rect x="16.6667%" y="389" width="0.2222%" height="15" fill="rgb(212,82,22)" fg:x="225" fg:w="3"/><text x="16.9167%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.07%)</title><rect x="16.8889%" y="389" width="0.0741%" height="15" fill="rgb(214,48,28)" fg:x="228" fg:w="1"/><text x="17.1389%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="16.8889%" y="373" width="0.0741%" height="15" fill="rgb(245,196,50)" fg:x="228" fg:w="1"/><text x="17.1389%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.44%)</title><rect x="16.5926%" y="405" width="0.4444%" height="15" fill="rgb(225,159,46)" fg:x="224" fg:w="6"/><text x="16.8426%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="16.9630%" y="389" width="0.0741%" height="15" fill="rgb(207,195,48)" fg:x="229" fg:w="1"/><text x="17.2130%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="16.9630%" y="373" width="0.0741%" height="15" fill="rgb(240,73,3)" fg:x="229" fg:w="1"/><text x="17.2130%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="16.9630%" y="357" width="0.0741%" height="15" fill="rgb(245,57,23)" fg:x="229" fg:w="1"/><text x="17.2130%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.67%)</title><rect x="16.4444%" y="421" width="0.6667%" height="15" fill="rgb(240,75,18)" fg:x="222" fg:w="9"/><text x="16.6944%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="17.0370%" y="405" width="0.0741%" height="15" fill="rgb(238,168,12)" fg:x="230" fg:w="1"/><text x="17.2870%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="17.0370%" y="389" width="0.0741%" height="15" fill="rgb(226,20,40)" fg:x="230" fg:w="1"/><text x="17.2870%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.78%)</title><rect x="15.4074%" y="437" width="1.7778%" height="15" fill="rgb(224,130,35)" fg:x="208" fg:w="24"/><text x="15.6574%" y="447.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="17.1111%" y="421" width="0.0741%" height="15" fill="rgb(225,63,41)" fg:x="231" fg:w="1"/><text x="17.3611%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.26%)</title><rect x="14.3704%" y="469" width="3.2593%" height="15" fill="rgb(219,3,3)" fg:x="194" fg:w="44"/><text x="14.6204%" y="479.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.37%)</title><rect x="15.2593%" y="453" width="2.3704%" height="15" fill="rgb(218,157,4)" fg:x="206" fg:w="32"/><text x="15.5093%" y="463.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.44%)</title><rect x="17.1852%" y="437" width="0.4444%" height="15" fill="rgb(232,76,36)" fg:x="232" fg:w="6"/><text x="17.4352%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.37%)</title><rect x="17.2593%" y="421" width="0.3704%" height="15" fill="rgb(247,36,0)" fg:x="233" fg:w="5"/><text x="17.5093%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.37%)</title><rect x="17.2593%" y="405" width="0.3704%" height="15" fill="rgb(205,2,34)" fg:x="233" fg:w="5"/><text x="17.5093%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.22%)</title><rect x="17.4074%" y="389" width="0.2222%" height="15" fill="rgb(239,136,13)" fg:x="235" fg:w="3"/><text x="17.6574%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.22%)</title><rect x="17.4074%" y="373" width="0.2222%" height="15" fill="rgb(253,122,12)" fg:x="235" fg:w="3"/><text x="17.6574%" y="383.50"></text></g><g><title>realloc (3 samples, 0.22%)</title><rect x="17.4074%" y="357" width="0.2222%" height="15" fill="rgb(222,174,7)" fg:x="235" fg:w="3"/><text x="17.6574%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="17.6296%" y="437" width="0.0741%" height="15" fill="rgb(208,191,42)" fg:x="238" fg:w="1"/><text x="17.8796%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="17.6296%" y="421" width="0.0741%" height="15" fill="rgb(237,212,15)" fg:x="238" fg:w="1"/><text x="17.8796%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="17.7037%" y="437" width="0.1481%" height="15" fill="rgb(215,65,20)" fg:x="239" fg:w="2"/><text x="17.9537%" y="447.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPath as core::convert::From&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::from (1 samples, 0.07%)</title><rect x="17.7778%" y="421" width="0.0741%" height="15" fill="rgb(232,103,11)" fg:x="240" fg:w="1"/><text x="18.0278%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.30%)</title><rect x="17.6296%" y="453" width="0.2963%" height="15" fill="rgb(235,148,18)" fg:x="238" fg:w="4"/><text x="17.8796%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::iter (1 samples, 0.07%)</title><rect x="17.8519%" y="437" width="0.0741%" height="15" fill="rgb(240,173,7)" fg:x="241" fg:w="1"/><text x="18.1019%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.07%)</title><rect x="17.9259%" y="437" width="0.0741%" height="15" fill="rgb(228,182,25)" fg:x="242" fg:w="1"/><text x="18.1759%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="18.0000%" y="421" width="0.0741%" height="15" fill="rgb(247,3,52)" fg:x="243" fg:w="1"/><text x="18.2500%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="18.0741%" y="421" width="0.1481%" height="15" fill="rgb(226,155,8)" fg:x="244" fg:w="2"/><text x="18.3241%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="18.1481%" y="405" width="0.0741%" height="15" fill="rgb(243,195,38)" fg:x="245" fg:w="1"/><text x="18.3981%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.07%)</title><rect x="18.2222%" y="421" width="0.0741%" height="15" fill="rgb(254,181,33)" fg:x="246" fg:w="1"/><text x="18.4722%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="18.2222%" y="405" width="0.0741%" height="15" fill="rgb(232,98,23)" fg:x="246" fg:w="1"/><text x="18.4722%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.15%)</title><rect x="18.2963%" y="421" width="0.1481%" height="15" fill="rgb(205,23,10)" fg:x="247" fg:w="2"/><text x="18.5463%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="18.3704%" y="405" width="0.0741%" height="15" fill="rgb(212,124,38)" fg:x="248" fg:w="1"/><text x="18.6204%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="18.5926%" y="389" width="0.1481%" height="15" fill="rgb(228,207,2)" fg:x="251" fg:w="2"/><text x="18.8426%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="18.8889%" y="357" width="0.0741%" height="15" fill="rgb(215,120,22)" fg:x="255" fg:w="1"/><text x="19.1389%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.22%)</title><rect x="18.8148%" y="373" width="0.2222%" height="15" fill="rgb(251,172,33)" fg:x="254" fg:w="3"/><text x="19.0648%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="18.9630%" y="357" width="0.0741%" height="15" fill="rgb(250,83,2)" fg:x="256" fg:w="1"/><text x="19.2130%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.07%)</title><rect x="19.0370%" y="357" width="0.0741%" height="15" fill="rgb(210,132,53)" fg:x="257" fg:w="1"/><text x="19.2870%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="19.0370%" y="341" width="0.0741%" height="15" fill="rgb(221,208,36)" fg:x="257" fg:w="1"/><text x="19.2870%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.07%)</title><rect x="19.1852%" y="309" width="0.0741%" height="15" fill="rgb(205,192,46)" fg:x="259" fg:w="1"/><text x="19.4352%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="19.2593%" y="309" width="0.0741%" height="15" fill="rgb(223,163,14)" fg:x="260" fg:w="1"/><text x="19.5093%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="19.2593%" y="293" width="0.0741%" height="15" fill="rgb(218,41,28)" fg:x="260" fg:w="1"/><text x="19.5093%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="19.2593%" y="277" width="0.0741%" height="15" fill="rgb(235,104,10)" fg:x="260" fg:w="1"/><text x="19.5093%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="19.2593%" y="261" width="0.0741%" height="15" fill="rgb(246,17,4)" fg:x="260" fg:w="1"/><text x="19.5093%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.37%)</title><rect x="19.0370%" y="373" width="0.3704%" height="15" fill="rgb(240,7,16)" fg:x="257" fg:w="5"/><text x="19.2870%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.30%)</title><rect x="19.1111%" y="357" width="0.2963%" height="15" fill="rgb(213,160,23)" fg:x="258" fg:w="4"/><text x="19.3611%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.30%)</title><rect x="19.1111%" y="341" width="0.2963%" height="15" fill="rgb(251,179,49)" fg:x="258" fg:w="4"/><text x="19.3611%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.22%)</title><rect x="19.1852%" y="325" width="0.2222%" height="15" fill="rgb(247,198,10)" fg:x="259" fg:w="3"/><text x="19.4352%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="19.3333%" y="309" width="0.0741%" height="15" fill="rgb(220,65,29)" fg:x="261" fg:w="1"/><text x="19.5833%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.30%)</title><rect x="19.5556%" y="325" width="0.2963%" height="15" fill="rgb(237,171,28)" fg:x="264" fg:w="4"/><text x="19.8056%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="19.5556%" y="309" width="0.2963%" height="15" fill="rgb(228,44,26)" fg:x="264" fg:w="4"/><text x="19.8056%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="19.7037%" y="293" width="0.1481%" height="15" fill="rgb(216,210,27)" fg:x="266" fg:w="2"/><text x="19.9537%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.52%)</title><rect x="19.4815%" y="357" width="0.5185%" height="15" fill="rgb(252,10,17)" fg:x="263" fg:w="7"/><text x="19.7315%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.52%)</title><rect x="19.4815%" y="341" width="0.5185%" height="15" fill="rgb(214,172,30)" fg:x="263" fg:w="7"/><text x="19.7315%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="19.8519%" y="325" width="0.1481%" height="15" fill="rgb(253,130,48)" fg:x="268" fg:w="2"/><text x="20.1019%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.33%)</title><rect x="18.7407%" y="389" width="1.3333%" height="15" fill="rgb(226,99,43)" fg:x="253" fg:w="18"/><text x="18.9907%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.67%)</title><rect x="19.4074%" y="373" width="0.6667%" height="15" fill="rgb(239,111,26)" fg:x="262" fg:w="9"/><text x="19.6574%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="20.0000%" y="357" width="0.0741%" height="15" fill="rgb(240,27,53)" fg:x="270" fg:w="1"/><text x="20.2500%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.56%)</title><rect x="18.5926%" y="405" width="1.5556%" height="15" fill="rgb(254,163,12)" fg:x="251" fg:w="21"/><text x="18.8426%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="20.0741%" y="389" width="0.0741%" height="15" fill="rgb(225,51,48)" fg:x="271" fg:w="1"/><text x="20.3241%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="20.0741%" y="373" width="0.0741%" height="15" fill="rgb(205,19,32)" fg:x="271" fg:w="1"/><text x="20.3241%" y="383.50"></text></g><g><title>engine::session::Session::flush (103 samples, 7.63%)</title><rect x="12.5926%" y="565" width="7.6296%" height="15" fill="rgb(218,119,26)" fg:x="170" fg:w="103"/><text x="12.8426%" y="575.50">engine::se..</text></g><g><title>engine::session::state::State::close (101 samples, 7.48%)</title><rect x="12.7407%" y="549" width="7.4815%" height="15" fill="rgb(231,173,33)" fg:x="172" fg:w="101"/><text x="12.9907%" y="559.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (100 samples, 7.41%)</title><rect x="12.8148%" y="533" width="7.4074%" height="15" fill="rgb(241,100,29)" fg:x="173" fg:w="100"/><text x="13.0648%" y="543.50">engine::se..</text></g><g><title>core::iter::adapters::try_process (98 samples, 7.26%)</title><rect x="12.9630%" y="517" width="7.2593%" height="15" fill="rgb(250,194,34)" fg:x="175" fg:w="98"/><text x="13.2130%" y="527.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (98 samples, 7.26%)</title><rect x="12.9630%" y="501" width="7.2593%" height="15" fill="rgb(215,23,50)" fg:x="175" fg:w="98"/><text x="13.2130%" y="511.50">&lt;alloc::ve..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (98 samples, 7.26%)</title><rect x="12.9630%" y="485" width="7.2593%" height="15" fill="rgb(206,49,37)" fg:x="175" fg:w="98"/><text x="13.2130%" y="495.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (35 samples, 2.59%)</title><rect x="17.6296%" y="469" width="2.5926%" height="15" fill="rgb(247,39,21)" fg:x="238" fg:w="35"/><text x="17.8796%" y="479.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (31 samples, 2.30%)</title><rect x="17.9259%" y="453" width="2.2963%" height="15" fill="rgb(209,220,15)" fg:x="242" fg:w="31"/><text x="18.1759%" y="463.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (30 samples, 2.22%)</title><rect x="18.0000%" y="437" width="2.2222%" height="15" fill="rgb(206,41,33)" fg:x="243" fg:w="30"/><text x="18.2500%" y="447.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.78%)</title><rect x="18.4444%" y="421" width="1.7778%" height="15" fill="rgb(221,225,45)" fg:x="249" fg:w="24"/><text x="18.6944%" y="431.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="20.1481%" y="405" width="0.0741%" height="15" fill="rgb(216,27,18)" fg:x="272" fg:w="1"/><text x="20.3981%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="20.1481%" y="389" width="0.0741%" height="15" fill="rgb(250,193,34)" fg:x="272" fg:w="1"/><text x="20.3981%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="20.2222%" y="517" width="0.0741%" height="15" fill="rgb(227,215,20)" fg:x="273" fg:w="1"/><text x="20.4722%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="20.2963%" y="485" width="0.0741%" height="15" fill="rgb(242,211,27)" fg:x="274" fg:w="1"/><text x="20.5463%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="20.2963%" y="469" width="0.0741%" height="15" fill="rgb(229,190,30)" fg:x="274" fg:w="1"/><text x="20.5463%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.22%)</title><rect x="20.2222%" y="533" width="0.2222%" height="15" fill="rgb(253,31,29)" fg:x="273" fg:w="3"/><text x="20.4722%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="20.2963%" y="517" width="0.1481%" height="15" fill="rgb(229,177,52)" fg:x="274" fg:w="2"/><text x="20.5463%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="20.2963%" y="501" width="0.1481%" height="15" fill="rgb(226,88,8)" fg:x="274" fg:w="2"/><text x="20.5463%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="20.3704%" y="485" width="0.0741%" height="15" fill="rgb(214,55,27)" fg:x="275" fg:w="1"/><text x="20.6204%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="20.3704%" y="469" width="0.0741%" height="15" fill="rgb(233,202,5)" fg:x="275" fg:w="1"/><text x="20.6204%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.30%)</title><rect x="20.2222%" y="565" width="0.2963%" height="15" fill="rgb(251,49,30)" fg:x="273" fg:w="4"/><text x="20.4722%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (4 samples, 0.30%)</title><rect x="20.2222%" y="549" width="0.2963%" height="15" fill="rgb(235,18,52)" fg:x="273" fg:w="4"/><text x="20.4722%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.07%)</title><rect x="20.4444%" y="533" width="0.0741%" height="15" fill="rgb(250,111,51)" fg:x="276" fg:w="1"/><text x="20.6944%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="20.4444%" y="517" width="0.0741%" height="15" fill="rgb(218,13,25)" fg:x="276" fg:w="1"/><text x="20.6944%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="20.4444%" y="501" width="0.0741%" height="15" fill="rgb(248,96,7)" fg:x="276" fg:w="1"/><text x="20.6944%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="20.4444%" y="485" width="0.0741%" height="15" fill="rgb(217,31,15)" fg:x="276" fg:w="1"/><text x="20.6944%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="20.5185%" y="549" width="0.0741%" height="15" fill="rgb(228,59,49)" fg:x="277" fg:w="1"/><text x="20.7685%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="20.5185%" y="533" width="0.0741%" height="15" fill="rgb(210,152,38)" fg:x="277" fg:w="1"/><text x="20.7685%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="20.5185%" y="517" width="0.0741%" height="15" fill="rgb(206,71,11)" fg:x="277" fg:w="1"/><text x="20.7685%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="20.5185%" y="501" width="0.0741%" height="15" fill="rgb(244,199,5)" fg:x="277" fg:w="1"/><text x="20.7685%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="20.5185%" y="485" width="0.0741%" height="15" fill="rgb(253,49,1)" fg:x="277" fg:w="1"/><text x="20.7685%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="20.5185%" y="469" width="0.0741%" height="15" fill="rgb(225,206,40)" fg:x="277" fg:w="1"/><text x="20.7685%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="20.5185%" y="453" width="0.0741%" height="15" fill="rgb(243,116,47)" fg:x="277" fg:w="1"/><text x="20.7685%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="20.5185%" y="437" width="0.0741%" height="15" fill="rgb(219,225,16)" fg:x="277" fg:w="1"/><text x="20.7685%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="20.5185%" y="421" width="0.0741%" height="15" fill="rgb(233,29,47)" fg:x="277" fg:w="1"/><text x="20.7685%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="20.5185%" y="405" width="0.0741%" height="15" fill="rgb(250,179,18)" fg:x="277" fg:w="1"/><text x="20.7685%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="20.5185%" y="389" width="0.0741%" height="15" fill="rgb(215,176,6)" fg:x="277" fg:w="1"/><text x="20.7685%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="20.5185%" y="373" width="0.0741%" height="15" fill="rgb(214,117,39)" fg:x="277" fg:w="1"/><text x="20.7685%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.15%)</title><rect x="20.5926%" y="533" width="0.1481%" height="15" fill="rgb(247,183,36)" fg:x="278" fg:w="2"/><text x="20.8426%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="20.6667%" y="517" width="0.0741%" height="15" fill="rgb(237,200,3)" fg:x="279" fg:w="1"/><text x="20.9167%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="20.6667%" y="501" width="0.0741%" height="15" fill="rgb(212,220,24)" fg:x="279" fg:w="1"/><text x="20.9167%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="20.6667%" y="485" width="0.0741%" height="15" fill="rgb(245,216,20)" fg:x="279" fg:w="1"/><text x="20.9167%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="20.6667%" y="469" width="0.0741%" height="15" fill="rgb(219,124,7)" fg:x="279" fg:w="1"/><text x="20.9167%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.15%)</title><rect x="20.7407%" y="533" width="0.1481%" height="15" fill="rgb(227,167,8)" fg:x="280" fg:w="2"/><text x="20.9907%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.15%)</title><rect x="20.7407%" y="517" width="0.1481%" height="15" fill="rgb(241,37,2)" fg:x="280" fg:w="2"/><text x="20.9907%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.07%)</title><rect x="20.8148%" y="501" width="0.0741%" height="15" fill="rgb(238,134,33)" fg:x="281" fg:w="1"/><text x="21.0648%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="20.8148%" y="485" width="0.0741%" height="15" fill="rgb(248,48,27)" fg:x="281" fg:w="1"/><text x="21.0648%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="20.8148%" y="469" width="0.0741%" height="15" fill="rgb(212,14,16)" fg:x="281" fg:w="1"/><text x="21.0648%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="20.8148%" y="453" width="0.0741%" height="15" fill="rgb(217,205,37)" fg:x="281" fg:w="1"/><text x="21.0648%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.15%)</title><rect x="20.9630%" y="485" width="0.1481%" height="15" fill="rgb(233,185,47)" fg:x="283" fg:w="2"/><text x="21.2130%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="20.9630%" y="469" width="0.1481%" height="15" fill="rgb(244,88,8)" fg:x="283" fg:w="2"/><text x="21.2130%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="20.9630%" y="453" width="0.1481%" height="15" fill="rgb(213,0,20)" fg:x="283" fg:w="2"/><text x="21.2130%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="20.9630%" y="437" width="0.1481%" height="15" fill="rgb(238,159,36)" fg:x="283" fg:w="2"/><text x="21.2130%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.07%)</title><rect x="21.1111%" y="485" width="0.0741%" height="15" fill="rgb(253,173,17)" fg:x="285" fg:w="1"/><text x="21.3611%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.07%)</title><rect x="21.1111%" y="469" width="0.0741%" height="15" fill="rgb(221,23,28)" fg:x="285" fg:w="1"/><text x="21.3611%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.07%)</title><rect x="21.1111%" y="453" width="0.0741%" height="15" fill="rgb(218,113,15)" fg:x="285" fg:w="1"/><text x="21.3611%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="21.1111%" y="437" width="0.0741%" height="15" fill="rgb(233,58,3)" fg:x="285" fg:w="1"/><text x="21.3611%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.37%)</title><rect x="20.8889%" y="517" width="0.3704%" height="15" fill="rgb(250,46,35)" fg:x="282" fg:w="5"/><text x="21.1389%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (5 samples, 0.37%)</title><rect x="20.8889%" y="501" width="0.3704%" height="15" fill="rgb(210,169,11)" fg:x="282" fg:w="5"/><text x="21.1389%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.07%)</title><rect x="21.1852%" y="485" width="0.0741%" height="15" fill="rgb(246,88,19)" fg:x="286" fg:w="1"/><text x="21.4352%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="21.1852%" y="469" width="0.0741%" height="15" fill="rgb(206,81,49)" fg:x="286" fg:w="1"/><text x="21.4352%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="21.1852%" y="453" width="0.0741%" height="15" fill="rgb(232,144,18)" fg:x="286" fg:w="1"/><text x="21.4352%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="21.2593%" y="485" width="0.0741%" height="15" fill="rgb(235,2,27)" fg:x="287" fg:w="1"/><text x="21.5093%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="21.3333%" y="485" width="0.0741%" height="15" fill="rgb(239,157,39)" fg:x="288" fg:w="1"/><text x="21.5833%" y="495.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.07%)</title><rect x="21.4074%" y="485" width="0.0741%" height="15" fill="rgb(220,11,17)" fg:x="289" fg:w="1"/><text x="21.6574%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="21.4074%" y="469" width="0.0741%" height="15" fill="rgb(243,94,50)" fg:x="289" fg:w="1"/><text x="21.6574%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="21.4074%" y="453" width="0.0741%" height="15" fill="rgb(218,22,0)" fg:x="289" fg:w="1"/><text x="21.6574%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.22%)</title><rect x="21.4815%" y="469" width="0.2222%" height="15" fill="rgb(249,70,21)" fg:x="290" fg:w="3"/><text x="21.7315%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="21.5556%" y="453" width="0.1481%" height="15" fill="rgb(245,111,46)" fg:x="291" fg:w="2"/><text x="21.8056%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="21.5556%" y="437" width="0.1481%" height="15" fill="rgb(244,183,12)" fg:x="291" fg:w="2"/><text x="21.8056%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="21.5556%" y="421" width="0.1481%" height="15" fill="rgb(207,117,0)" fg:x="291" fg:w="2"/><text x="21.8056%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="21.6296%" y="405" width="0.0741%" height="15" fill="rgb(206,20,43)" fg:x="292" fg:w="1"/><text x="21.8796%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="21.6296%" y="389" width="0.0741%" height="15" fill="rgb(221,104,11)" fg:x="292" fg:w="1"/><text x="21.8796%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="21.6296%" y="373" width="0.0741%" height="15" fill="rgb(254,36,50)" fg:x="292" fg:w="1"/><text x="21.8796%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.19%)</title><rect x="20.5926%" y="549" width="1.1852%" height="15" fill="rgb(252,17,15)" fg:x="278" fg:w="16"/><text x="20.8426%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.89%)</title><rect x="20.8889%" y="533" width="0.8889%" height="15" fill="rgb(219,129,43)" fg:x="282" fg:w="12"/><text x="21.1389%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.52%)</title><rect x="21.2593%" y="517" width="0.5185%" height="15" fill="rgb(205,34,45)" fg:x="287" fg:w="7"/><text x="21.5093%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.52%)</title><rect x="21.2593%" y="501" width="0.5185%" height="15" fill="rgb(251,201,32)" fg:x="287" fg:w="7"/><text x="21.5093%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.30%)</title><rect x="21.4815%" y="485" width="0.2963%" height="15" fill="rgb(205,56,0)" fg:x="290" fg:w="4"/><text x="21.7315%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="21.7037%" y="469" width="0.0741%" height="15" fill="rgb(211,193,27)" fg:x="293" fg:w="1"/><text x="21.9537%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="21.8519%" y="517" width="0.0741%" height="15" fill="rgb(231,100,42)" fg:x="295" fg:w="1"/><text x="22.1019%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="21.8519%" y="501" width="0.0741%" height="15" fill="rgb(245,85,27)" fg:x="295" fg:w="1"/><text x="22.1019%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="21.8519%" y="533" width="0.1481%" height="15" fill="rgb(241,76,24)" fg:x="295" fg:w="2"/><text x="22.1019%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="21.9259%" y="517" width="0.0741%" height="15" fill="rgb(249,157,15)" fg:x="296" fg:w="1"/><text x="22.1759%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="21.9259%" y="501" width="0.0741%" height="15" fill="rgb(222,218,25)" fg:x="296" fg:w="1"/><text x="22.1759%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="21.9259%" y="485" width="0.0741%" height="15" fill="rgb(252,156,52)" fg:x="296" fg:w="1"/><text x="22.1759%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="21.9259%" y="469" width="0.0741%" height="15" fill="rgb(211,185,7)" fg:x="296" fg:w="1"/><text x="22.1759%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="21.9259%" y="453" width="0.0741%" height="15" fill="rgb(234,108,24)" fg:x="296" fg:w="1"/><text x="22.1759%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="21.9259%" y="437" width="0.0741%" height="15" fill="rgb(227,218,2)" fg:x="296" fg:w="1"/><text x="22.1759%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="21.9259%" y="421" width="0.0741%" height="15" fill="rgb(224,0,36)" fg:x="296" fg:w="1"/><text x="22.1759%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.30%)</title><rect x="21.7778%" y="549" width="0.2963%" height="15" fill="rgb(233,201,10)" fg:x="294" fg:w="4"/><text x="22.0278%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="22.0000%" y="533" width="0.0741%" height="15" fill="rgb(252,209,14)" fg:x="297" fg:w="1"/><text x="22.2500%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="22.0000%" y="517" width="0.0741%" height="15" fill="rgb(205,93,49)" fg:x="297" fg:w="1"/><text x="22.2500%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="22.0000%" y="501" width="0.0741%" height="15" fill="rgb(234,116,45)" fg:x="297" fg:w="1"/><text x="22.2500%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="22.0000%" y="485" width="0.0741%" height="15" fill="rgb(248,89,35)" fg:x="297" fg:w="1"/><text x="22.2500%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="22.0000%" y="469" width="0.0741%" height="15" fill="rgb(233,167,45)" fg:x="297" fg:w="1"/><text x="22.2500%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="22.0000%" y="453" width="0.0741%" height="15" fill="rgb(248,228,14)" fg:x="297" fg:w="1"/><text x="22.2500%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="22.0000%" y="437" width="0.0741%" height="15" fill="rgb(246,91,14)" fg:x="297" fg:w="1"/><text x="22.2500%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="22.0000%" y="421" width="0.0741%" height="15" fill="rgb(227,142,5)" fg:x="297" fg:w="1"/><text x="22.2500%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="22.0000%" y="405" width="0.0741%" height="15" fill="rgb(221,63,33)" fg:x="297" fg:w="1"/><text x="22.2500%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="22.0000%" y="389" width="0.0741%" height="15" fill="rgb(233,49,0)" fg:x="297" fg:w="1"/><text x="22.2500%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="22.0000%" y="373" width="0.0741%" height="15" fill="rgb(251,115,38)" fg:x="297" fg:w="1"/><text x="22.2500%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="22.0000%" y="357" width="0.0741%" height="15" fill="rgb(231,214,32)" fg:x="297" fg:w="1"/><text x="22.2500%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="22.0000%" y="341" width="0.0741%" height="15" fill="rgb(248,73,46)" fg:x="297" fg:w="1"/><text x="22.2500%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="22.0741%" y="533" width="0.0741%" height="15" fill="rgb(237,156,4)" fg:x="298" fg:w="1"/><text x="22.3241%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="22.0741%" y="517" width="0.0741%" height="15" fill="rgb(227,132,2)" fg:x="298" fg:w="1"/><text x="22.3241%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="22.0741%" y="501" width="0.0741%" height="15" fill="rgb(248,161,9)" fg:x="298" fg:w="1"/><text x="22.3241%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="22.0741%" y="485" width="0.0741%" height="15" fill="rgb(238,77,38)" fg:x="298" fg:w="1"/><text x="22.3241%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="22.1481%" y="533" width="0.1481%" height="15" fill="rgb(222,166,40)" fg:x="299" fg:w="2"/><text x="22.3981%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="22.2222%" y="517" width="0.0741%" height="15" fill="rgb(214,168,45)" fg:x="300" fg:w="1"/><text x="22.4722%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="22.2222%" y="501" width="0.0741%" height="15" fill="rgb(226,64,37)" fg:x="300" fg:w="1"/><text x="22.4722%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="22.2222%" y="485" width="0.0741%" height="15" fill="rgb(232,210,43)" fg:x="300" fg:w="1"/><text x="22.4722%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="22.2222%" y="469" width="0.0741%" height="15" fill="rgb(214,76,33)" fg:x="300" fg:w="1"/><text x="22.4722%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="22.2222%" y="453" width="0.0741%" height="15" fill="rgb(210,78,5)" fg:x="300" fg:w="1"/><text x="22.4722%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="22.2222%" y="437" width="0.0741%" height="15" fill="rgb(211,107,37)" fg:x="300" fg:w="1"/><text x="22.4722%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="22.2222%" y="421" width="0.0741%" height="15" fill="rgb(249,67,16)" fg:x="300" fg:w="1"/><text x="22.4722%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (26 samples, 1.93%)</title><rect x="20.5185%" y="565" width="1.9259%" height="15" fill="rgb(222,114,31)" fg:x="277" fg:w="26"/><text x="20.7685%" y="575.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.37%)</title><rect x="22.0741%" y="549" width="0.3704%" height="15" fill="rgb(242,118,19)" fg:x="298" fg:w="5"/><text x="22.3241%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="22.2963%" y="533" width="0.1481%" height="15" fill="rgb(223,115,1)" fg:x="301" fg:w="2"/><text x="22.5463%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="22.2963%" y="517" width="0.1481%" height="15" fill="rgb(241,182,54)" fg:x="301" fg:w="2"/><text x="22.5463%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="22.3704%" y="501" width="0.0741%" height="15" fill="rgb(244,166,36)" fg:x="302" fg:w="1"/><text x="22.6204%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="22.3704%" y="485" width="0.0741%" height="15" fill="rgb(241,52,43)" fg:x="302" fg:w="1"/><text x="22.6204%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.15%)</title><rect x="22.5926%" y="501" width="0.1481%" height="15" fill="rgb(236,82,9)" fg:x="305" fg:w="2"/><text x="22.8426%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.15%)</title><rect x="22.5926%" y="485" width="0.1481%" height="15" fill="rgb(241,119,0)" fg:x="305" fg:w="2"/><text x="22.8426%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (4 samples, 0.30%)</title><rect x="22.5185%" y="517" width="0.2963%" height="15" fill="rgb(221,19,22)" fg:x="304" fg:w="4"/><text x="22.7685%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="22.7407%" y="501" width="0.0741%" height="15" fill="rgb(254,144,35)" fg:x="307" fg:w="1"/><text x="22.9907%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="22.7407%" y="485" width="0.0741%" height="15" fill="rgb(246,132,30)" fg:x="307" fg:w="1"/><text x="22.9907%" y="495.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (8 samples, 0.59%)</title><rect x="22.4444%" y="565" width="0.5926%" height="15" fill="rgb(234,69,28)" fg:x="303" fg:w="8"/><text x="22.6944%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (8 samples, 0.59%)</title><rect x="22.4444%" y="549" width="0.5926%" height="15" fill="rgb(219,106,47)" fg:x="303" fg:w="8"/><text x="22.6944%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (8 samples, 0.59%)</title><rect x="22.4444%" y="533" width="0.5926%" height="15" fill="rgb(218,79,24)" fg:x="303" fg:w="8"/><text x="22.6944%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (3 samples, 0.22%)</title><rect x="22.8148%" y="517" width="0.2222%" height="15" fill="rgb(225,26,21)" fg:x="308" fg:w="3"/><text x="23.0648%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="22.8889%" y="501" width="0.1481%" height="15" fill="rgb(217,68,49)" fg:x="309" fg:w="2"/><text x="23.1389%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (2 samples, 0.15%)</title><rect x="22.8889%" y="485" width="0.1481%" height="15" fill="rgb(220,204,28)" fg:x="309" fg:w="2"/><text x="23.1389%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="22.8889%" y="469" width="0.1481%" height="15" fill="rgb(237,208,43)" fg:x="309" fg:w="2"/><text x="23.1389%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.15%)</title><rect x="22.8889%" y="453" width="0.1481%" height="15" fill="rgb(213,97,42)" fg:x="309" fg:w="2"/><text x="23.1389%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="22.8889%" y="437" width="0.1481%" height="15" fill="rgb(238,96,52)" fg:x="309" fg:w="2"/><text x="23.1389%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="22.8889%" y="421" width="0.1481%" height="15" fill="rgb(228,14,13)" fg:x="309" fg:w="2"/><text x="23.1389%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="22.9630%" y="405" width="0.0741%" height="15" fill="rgb(219,123,13)" fg:x="310" fg:w="1"/><text x="23.2130%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="23.2593%" y="469" width="0.0741%" height="15" fill="rgb(216,144,17)" fg:x="314" fg:w="1"/><text x="23.5093%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="23.2593%" y="453" width="0.0741%" height="15" fill="rgb(230,228,29)" fg:x="314" fg:w="1"/><text x="23.5093%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.30%)</title><rect x="23.1852%" y="485" width="0.2963%" height="15" fill="rgb(233,18,5)" fg:x="313" fg:w="4"/><text x="23.4352%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="23.3333%" y="469" width="0.1481%" height="15" fill="rgb(233,197,12)" fg:x="315" fg:w="2"/><text x="23.5833%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="23.3333%" y="453" width="0.1481%" height="15" fill="rgb(234,140,29)" fg:x="315" fg:w="2"/><text x="23.5833%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="23.3333%" y="437" width="0.1481%" height="15" fill="rgb(233,113,19)" fg:x="315" fg:w="2"/><text x="23.5833%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="23.3333%" y="421" width="0.1481%" height="15" fill="rgb(246,209,13)" fg:x="315" fg:w="2"/><text x="23.5833%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="23.3333%" y="405" width="0.1481%" height="15" fill="rgb(242,79,54)" fg:x="315" fg:w="2"/><text x="23.5833%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="23.3333%" y="389" width="0.1481%" height="15" fill="rgb(219,73,16)" fg:x="315" fg:w="2"/><text x="23.5833%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.37%)</title><rect x="23.1852%" y="501" width="0.3704%" height="15" fill="rgb(224,52,10)" fg:x="313" fg:w="5"/><text x="23.4352%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="23.4815%" y="485" width="0.0741%" height="15" fill="rgb(237,179,5)" fg:x="317" fg:w="1"/><text x="23.7315%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="23.5556%" y="469" width="0.0741%" height="15" fill="rgb(231,20,6)" fg:x="318" fg:w="1"/><text x="23.8056%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="23.5556%" y="453" width="0.0741%" height="15" fill="rgb(253,171,45)" fg:x="318" fg:w="1"/><text x="23.8056%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.15%)</title><rect x="23.5556%" y="485" width="0.1481%" height="15" fill="rgb(230,75,49)" fg:x="318" fg:w="2"/><text x="23.8056%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="23.6296%" y="469" width="0.0741%" height="15" fill="rgb(216,83,46)" fg:x="319" fg:w="1"/><text x="23.8796%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="23.6296%" y="453" width="0.0741%" height="15" fill="rgb(236,56,9)" fg:x="319" fg:w="1"/><text x="23.8796%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="23.6296%" y="437" width="0.0741%" height="15" fill="rgb(215,28,34)" fg:x="319" fg:w="1"/><text x="23.8796%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="23.6296%" y="421" width="0.0741%" height="15" fill="rgb(230,222,20)" fg:x="319" fg:w="1"/><text x="23.8796%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="23.6296%" y="405" width="0.0741%" height="15" fill="rgb(235,209,51)" fg:x="319" fg:w="1"/><text x="23.8796%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="23.6296%" y="389" width="0.0741%" height="15" fill="rgb(235,167,1)" fg:x="319" fg:w="1"/><text x="23.8796%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (9 samples, 0.67%)</title><rect x="23.1111%" y="533" width="0.6667%" height="15" fill="rgb(248,220,0)" fg:x="312" fg:w="9"/><text x="23.3611%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.59%)</title><rect x="23.1852%" y="517" width="0.5926%" height="15" fill="rgb(239,0,18)" fg:x="313" fg:w="8"/><text x="23.4352%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.22%)</title><rect x="23.5556%" y="501" width="0.2222%" height="15" fill="rgb(229,179,11)" fg:x="318" fg:w="3"/><text x="23.8056%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.07%)</title><rect x="23.7037%" y="485" width="0.0741%" height="15" fill="rgb(226,116,53)" fg:x="320" fg:w="1"/><text x="23.9537%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="23.7037%" y="469" width="0.0741%" height="15" fill="rgb(218,1,49)" fg:x="320" fg:w="1"/><text x="23.9537%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.07%)</title><rect x="23.7778%" y="517" width="0.0741%" height="15" fill="rgb(208,184,47)" fg:x="321" fg:w="1"/><text x="24.0278%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="23.7778%" y="501" width="0.0741%" height="15" fill="rgb(238,174,3)" fg:x="321" fg:w="1"/><text x="24.0278%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="23.7778%" y="485" width="0.0741%" height="15" fill="rgb(247,188,6)" fg:x="321" fg:w="1"/><text x="24.0278%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.22%)</title><rect x="23.7778%" y="533" width="0.2222%" height="15" fill="rgb(211,165,46)" fg:x="321" fg:w="3"/><text x="24.0278%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.15%)</title><rect x="23.8519%" y="517" width="0.1481%" height="15" fill="rgb(222,190,10)" fg:x="322" fg:w="2"/><text x="24.1019%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="23.8519%" y="501" width="0.1481%" height="15" fill="rgb(206,185,3)" fg:x="322" fg:w="2"/><text x="24.1019%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="23.8519%" y="485" width="0.1481%" height="15" fill="rgb(244,125,37)" fg:x="322" fg:w="2"/><text x="24.1019%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="23.8519%" y="469" width="0.1481%" height="15" fill="rgb(211,43,7)" fg:x="322" fg:w="2"/><text x="24.1019%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="23.9259%" y="453" width="0.0741%" height="15" fill="rgb(250,41,42)" fg:x="323" fg:w="1"/><text x="24.1759%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.07%)</title><rect x="24.0000%" y="517" width="0.0741%" height="15" fill="rgb(254,54,42)" fg:x="324" fg:w="1"/><text x="24.2500%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="24.0000%" y="501" width="0.0741%" height="15" fill="rgb(213,71,43)" fg:x="324" fg:w="1"/><text x="24.2500%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="24.0000%" y="485" width="0.0741%" height="15" fill="rgb(249,3,44)" fg:x="324" fg:w="1"/><text x="24.2500%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="24.0741%" y="453" width="0.0741%" height="15" fill="rgb(229,80,41)" fg:x="325" fg:w="1"/><text x="24.3241%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="24.0741%" y="437" width="0.0741%" height="15" fill="rgb(231,25,28)" fg:x="325" fg:w="1"/><text x="24.3241%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="24.1481%" y="389" width="0.0741%" height="15" fill="rgb(208,79,48)" fg:x="326" fg:w="1"/><text x="24.3981%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="24.1481%" y="373" width="0.0741%" height="15" fill="rgb(207,196,38)" fg:x="326" fg:w="1"/><text x="24.3981%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.22%)</title><rect x="24.0741%" y="469" width="0.2222%" height="15" fill="rgb(228,105,49)" fg:x="325" fg:w="3"/><text x="24.3241%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="24.1481%" y="453" width="0.1481%" height="15" fill="rgb(237,99,15)" fg:x="326" fg:w="2"/><text x="24.3981%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="24.1481%" y="437" width="0.1481%" height="15" fill="rgb(224,207,46)" fg:x="326" fg:w="2"/><text x="24.3981%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="24.1481%" y="421" width="0.1481%" height="15" fill="rgb(249,117,50)" fg:x="326" fg:w="2"/><text x="24.3981%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="24.1481%" y="405" width="0.1481%" height="15" fill="rgb(248,17,13)" fg:x="326" fg:w="2"/><text x="24.3981%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="24.2222%" y="389" width="0.0741%" height="15" fill="rgb(228,187,36)" fg:x="327" fg:w="1"/><text x="24.4722%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="24.2222%" y="373" width="0.0741%" height="15" fill="rgb(234,132,20)" fg:x="327" fg:w="1"/><text x="24.4722%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="24.2963%" y="469" width="0.0741%" height="15" fill="rgb(209,170,46)" fg:x="328" fg:w="1"/><text x="24.5463%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.37%)</title><rect x="24.0741%" y="485" width="0.3704%" height="15" fill="rgb(237,23,19)" fg:x="325" fg:w="5"/><text x="24.3241%" y="495.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.07%)</title><rect x="24.3704%" y="469" width="0.0741%" height="15" fill="rgb(227,21,26)" fg:x="329" fg:w="1"/><text x="24.6204%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="24.5185%" y="453" width="0.0741%" height="15" fill="rgb(222,220,48)" fg:x="331" fg:w="1"/><text x="24.7685%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="24.5185%" y="437" width="0.0741%" height="15" fill="rgb(214,9,16)" fg:x="331" fg:w="1"/><text x="24.7685%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="24.5185%" y="421" width="0.0741%" height="15" fill="rgb(209,73,30)" fg:x="331" fg:w="1"/><text x="24.7685%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="24.5185%" y="405" width="0.0741%" height="15" fill="rgb(207,20,33)" fg:x="331" fg:w="1"/><text x="24.7685%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="24.5185%" y="389" width="0.0741%" height="15" fill="rgb(219,153,12)" fg:x="331" fg:w="1"/><text x="24.7685%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="24.5185%" y="373" width="0.0741%" height="15" fill="rgb(235,97,25)" fg:x="331" fg:w="1"/><text x="24.7685%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="24.5185%" y="357" width="0.0741%" height="15" fill="rgb(244,30,34)" fg:x="331" fg:w="1"/><text x="24.7685%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="24.5185%" y="341" width="0.0741%" height="15" fill="rgb(214,106,45)" fg:x="331" fg:w="1"/><text x="24.7685%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="24.5185%" y="325" width="0.0741%" height="15" fill="rgb(226,41,9)" fg:x="331" fg:w="1"/><text x="24.7685%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="24.5185%" y="309" width="0.0741%" height="15" fill="rgb(253,139,29)" fg:x="331" fg:w="1"/><text x="24.7685%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="24.5185%" y="293" width="0.0741%" height="15" fill="rgb(213,205,39)" fg:x="331" fg:w="1"/><text x="24.7685%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="24.5185%" y="277" width="0.0741%" height="15" fill="rgb(209,27,10)" fg:x="331" fg:w="1"/><text x="24.7685%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="24.5185%" y="261" width="0.0741%" height="15" fill="rgb(249,142,16)" fg:x="331" fg:w="1"/><text x="24.7685%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="24.5185%" y="245" width="0.0741%" height="15" fill="rgb(242,65,12)" fg:x="331" fg:w="1"/><text x="24.7685%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="24.5185%" y="229" width="0.0741%" height="15" fill="rgb(232,48,10)" fg:x="331" fg:w="1"/><text x="24.7685%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.15%)</title><rect x="24.5185%" y="469" width="0.1481%" height="15" fill="rgb(253,67,19)" fg:x="331" fg:w="2"/><text x="24.7685%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="24.5926%" y="453" width="0.0741%" height="15" fill="rgb(227,93,29)" fg:x="332" fg:w="1"/><text x="24.8426%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="24.5926%" y="437" width="0.0741%" height="15" fill="rgb(226,189,53)" fg:x="332" fg:w="1"/><text x="24.8426%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="24.5926%" y="421" width="0.0741%" height="15" fill="rgb(223,224,1)" fg:x="332" fg:w="1"/><text x="24.8426%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="24.5926%" y="405" width="0.0741%" height="15" fill="rgb(221,84,32)" fg:x="332" fg:w="1"/><text x="24.8426%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="24.5926%" y="389" width="0.0741%" height="15" fill="rgb(214,189,28)" fg:x="332" fg:w="1"/><text x="24.8426%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="24.5926%" y="373" width="0.0741%" height="15" fill="rgb(234,7,52)" fg:x="332" fg:w="1"/><text x="24.8426%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="24.5926%" y="357" width="0.0741%" height="15" fill="rgb(249,73,31)" fg:x="332" fg:w="1"/><text x="24.8426%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="24.5926%" y="341" width="0.0741%" height="15" fill="rgb(253,153,41)" fg:x="332" fg:w="1"/><text x="24.8426%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.74%)</title><rect x="24.0000%" y="533" width="0.7407%" height="15" fill="rgb(249,52,34)" fg:x="324" fg:w="10"/><text x="24.2500%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (9 samples, 0.67%)</title><rect x="24.0741%" y="517" width="0.6667%" height="15" fill="rgb(236,177,47)" fg:x="325" fg:w="9"/><text x="24.3241%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.67%)</title><rect x="24.0741%" y="501" width="0.6667%" height="15" fill="rgb(252,185,45)" fg:x="325" fg:w="9"/><text x="24.3241%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (4 samples, 0.30%)</title><rect x="24.4444%" y="485" width="0.2963%" height="15" fill="rgb(251,15,30)" fg:x="330" fg:w="4"/><text x="24.6944%" y="495.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.07%)</title><rect x="24.6667%" y="469" width="0.0741%" height="15" fill="rgb(233,31,4)" fg:x="333" fg:w="1"/><text x="24.9167%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.07%)</title><rect x="24.8148%" y="501" width="0.0741%" height="15" fill="rgb(254,44,24)" fg:x="335" fg:w="1"/><text x="25.0648%" y="511.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (26 samples, 1.93%)</title><rect x="23.0370%" y="565" width="1.9259%" height="15" fill="rgb(218,54,1)" fg:x="311" fg:w="26"/><text x="23.2870%" y="575.50">p..</text></g><g><title>plugins_core::tools::set_container (26 samples, 1.93%)</title><rect x="23.0370%" y="549" width="1.9259%" height="15" fill="rgb(243,209,39)" fg:x="311" fg:w="26"/><text x="23.2870%" y="559.50">p..</text></g><g><title>plugins_core::location::model::Location::set (3 samples, 0.22%)</title><rect x="24.7407%" y="533" width="0.2222%" height="15" fill="rgb(206,75,33)" fg:x="334" fg:w="3"/><text x="24.9907%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.15%)</title><rect x="24.8148%" y="517" width="0.1481%" height="15" fill="rgb(223,108,18)" fg:x="335" fg:w="2"/><text x="25.0648%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.07%)</title><rect x="24.8889%" y="501" width="0.0741%" height="15" fill="rgb(244,89,31)" fg:x="336" fg:w="1"/><text x="25.1389%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="24.8889%" y="485" width="0.0741%" height="15" fill="rgb(222,167,27)" fg:x="336" fg:w="1"/><text x="25.1389%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.07%)</title><rect x="24.8889%" y="469" width="0.0741%" height="15" fill="rgb(247,41,16)" fg:x="336" fg:w="1"/><text x="25.1389%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="24.8889%" y="453" width="0.0741%" height="15" fill="rgb(233,168,40)" fg:x="336" fg:w="1"/><text x="25.1389%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.07%)</title><rect x="24.9630%" y="533" width="0.0741%" height="15" fill="rgb(205,211,8)" fg:x="337" fg:w="1"/><text x="25.2130%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="24.9630%" y="517" width="0.0741%" height="15" fill="rgb(238,105,11)" fg:x="337" fg:w="1"/><text x="25.2130%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.15%)</title><rect x="24.9630%" y="549" width="0.1481%" height="15" fill="rgb(223,142,52)" fg:x="337" fg:w="2"/><text x="25.2130%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.07%)</title><rect x="25.0370%" y="533" width="0.0741%" height="15" fill="rgb(238,51,33)" fg:x="338" fg:w="1"/><text x="25.2870%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="25.0370%" y="517" width="0.0741%" height="15" fill="rgb(231,188,43)" fg:x="338" fg:w="1"/><text x="25.2870%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.15%)</title><rect x="25.1111%" y="549" width="0.1481%" height="15" fill="rgb(216,92,17)" fg:x="339" fg:w="2"/><text x="25.3611%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.15%)</title><rect x="25.1111%" y="533" width="0.1481%" height="15" fill="rgb(228,2,40)" fg:x="339" fg:w="2"/><text x="25.3611%" y="543.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (2 samples, 0.15%)</title><rect x="25.1111%" y="517" width="0.1481%" height="15" fill="rgb(226,73,15)" fg:x="339" fg:w="2"/><text x="25.3611%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="25.1111%" y="501" width="0.1481%" height="15" fill="rgb(227,66,46)" fg:x="339" fg:w="2"/><text x="25.3611%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.15%)</title><rect x="25.1111%" y="485" width="0.1481%" height="15" fill="rgb(209,71,6)" fg:x="339" fg:w="2"/><text x="25.3611%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="25.1852%" y="469" width="0.0741%" height="15" fill="rgb(246,100,25)" fg:x="340" fg:w="1"/><text x="25.4352%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="25.1852%" y="453" width="0.0741%" height="15" fill="rgb(248,185,27)" fg:x="340" fg:w="1"/><text x="25.4352%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="25.1852%" y="437" width="0.0741%" height="15" fill="rgb(225,118,47)" fg:x="340" fg:w="1"/><text x="25.4352%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.15%)</title><rect x="25.3333%" y="469" width="0.1481%" height="15" fill="rgb(220,185,44)" fg:x="342" fg:w="2"/><text x="25.5833%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="25.4074%" y="453" width="0.0741%" height="15" fill="rgb(227,95,24)" fg:x="343" fg:w="1"/><text x="25.6574%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="25.4074%" y="437" width="0.0741%" height="15" fill="rgb(252,84,24)" fg:x="343" fg:w="1"/><text x="25.6574%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="25.4074%" y="421" width="0.0741%" height="15" fill="rgb(240,34,44)" fg:x="343" fg:w="1"/><text x="25.6574%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="25.4074%" y="405" width="0.0741%" height="15" fill="rgb(209,72,54)" fg:x="343" fg:w="1"/><text x="25.6574%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="25.4074%" y="389" width="0.0741%" height="15" fill="rgb(226,19,45)" fg:x="343" fg:w="1"/><text x="25.6574%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="25.4074%" y="373" width="0.0741%" height="15" fill="rgb(246,7,45)" fg:x="343" fg:w="1"/><text x="25.6574%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="25.4074%" y="357" width="0.0741%" height="15" fill="rgb(225,45,2)" fg:x="343" fg:w="1"/><text x="25.6574%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="25.4815%" y="453" width="0.0741%" height="15" fill="rgb(221,80,29)" fg:x="344" fg:w="1"/><text x="25.7315%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="25.4815%" y="437" width="0.0741%" height="15" fill="rgb(228,11,19)" fg:x="344" fg:w="1"/><text x="25.7315%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="25.4815%" y="421" width="0.0741%" height="15" fill="rgb(243,17,21)" fg:x="344" fg:w="1"/><text x="25.7315%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="25.4815%" y="405" width="0.0741%" height="15" fill="rgb(243,88,8)" fg:x="344" fg:w="1"/><text x="25.7315%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="25.4815%" y="389" width="0.0741%" height="15" fill="rgb(214,17,9)" fg:x="344" fg:w="1"/><text x="25.7315%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="25.4815%" y="373" width="0.0741%" height="15" fill="rgb(232,169,15)" fg:x="344" fg:w="1"/><text x="25.7315%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="25.4815%" y="357" width="0.0741%" height="15" fill="rgb(232,86,53)" fg:x="344" fg:w="1"/><text x="25.7315%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.52%)</title><rect x="25.2593%" y="549" width="0.5185%" height="15" fill="rgb(222,100,4)" fg:x="341" fg:w="7"/><text x="25.5093%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.52%)</title><rect x="25.2593%" y="533" width="0.5185%" height="15" fill="rgb(253,151,38)" fg:x="341" fg:w="7"/><text x="25.5093%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.52%)</title><rect x="25.2593%" y="517" width="0.5185%" height="15" fill="rgb(238,215,29)" fg:x="341" fg:w="7"/><text x="25.5093%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.44%)</title><rect x="25.3333%" y="501" width="0.4444%" height="15" fill="rgb(205,128,53)" fg:x="342" fg:w="6"/><text x="25.5833%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.44%)</title><rect x="25.3333%" y="485" width="0.4444%" height="15" fill="rgb(248,183,14)" fg:x="342" fg:w="6"/><text x="25.5833%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (4 samples, 0.30%)</title><rect x="25.4815%" y="469" width="0.2963%" height="15" fill="rgb(244,172,35)" fg:x="344" fg:w="4"/><text x="25.7315%" y="479.50"></text></g><g><title>kernel::model::props::Props::string_property (3 samples, 0.22%)</title><rect x="25.5556%" y="453" width="0.2222%" height="15" fill="rgb(234,93,19)" fg:x="345" fg:w="3"/><text x="25.8056%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="25.7037%" y="437" width="0.0741%" height="15" fill="rgb(227,109,7)" fg:x="347" fg:w="1"/><text x="25.9537%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="25.7037%" y="421" width="0.0741%" height="15" fill="rgb(233,136,54)" fg:x="347" fg:w="1"/><text x="25.9537%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.07%)</title><rect x="25.7778%" y="549" width="0.0741%" height="15" fill="rgb(233,19,40)" fg:x="348" fg:w="1"/><text x="26.0278%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="25.7778%" y="533" width="0.0741%" height="15" fill="rgb(247,41,18)" fg:x="348" fg:w="1"/><text x="26.0278%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="26.0000%" y="517" width="0.0741%" height="15" fill="rgb(220,34,34)" fg:x="351" fg:w="1"/><text x="26.2500%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="26.0000%" y="501" width="0.0741%" height="15" fill="rgb(222,135,32)" fg:x="351" fg:w="1"/><text x="26.2500%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="26.0000%" y="485" width="0.0741%" height="15" fill="rgb(214,80,19)" fg:x="351" fg:w="1"/><text x="26.2500%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="26.0000%" y="469" width="0.0741%" height="15" fill="rgb(234,54,46)" fg:x="351" fg:w="1"/><text x="26.2500%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="26.0000%" y="453" width="0.0741%" height="15" fill="rgb(251,48,23)" fg:x="351" fg:w="1"/><text x="26.2500%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="26.0000%" y="437" width="0.0741%" height="15" fill="rgb(254,109,52)" fg:x="351" fg:w="1"/><text x="26.2500%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="26.0000%" y="421" width="0.0741%" height="15" fill="rgb(240,186,19)" fg:x="351" fg:w="1"/><text x="26.2500%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="26.0000%" y="405" width="0.0741%" height="15" fill="rgb(246,187,17)" fg:x="351" fg:w="1"/><text x="26.2500%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="26.0000%" y="389" width="0.0741%" height="15" fill="rgb(212,21,5)" fg:x="351" fg:w="1"/><text x="26.2500%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="26.0000%" y="373" width="0.0741%" height="15" fill="rgb(225,185,18)" fg:x="351" fg:w="1"/><text x="26.2500%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="26.0000%" y="357" width="0.0741%" height="15" fill="rgb(245,114,17)" fg:x="351" fg:w="1"/><text x="26.2500%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="26.0000%" y="341" width="0.0741%" height="15" fill="rgb(223,164,24)" fg:x="351" fg:w="1"/><text x="26.2500%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.22%)</title><rect x="25.9259%" y="533" width="0.2222%" height="15" fill="rgb(211,228,3)" fg:x="350" fg:w="3"/><text x="26.1759%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="26.0741%" y="517" width="0.0741%" height="15" fill="rgb(223,16,38)" fg:x="352" fg:w="1"/><text x="26.3241%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="26.0741%" y="501" width="0.0741%" height="15" fill="rgb(207,31,54)" fg:x="352" fg:w="1"/><text x="26.3241%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="26.0741%" y="485" width="0.0741%" height="15" fill="rgb(220,39,11)" fg:x="352" fg:w="1"/><text x="26.3241%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="26.2963%" y="485" width="0.0741%" height="15" fill="rgb(235,185,0)" fg:x="355" fg:w="1"/><text x="26.5463%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="26.2963%" y="469" width="0.0741%" height="15" fill="rgb(249,39,18)" fg:x="355" fg:w="1"/><text x="26.5463%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="26.2963%" y="453" width="0.0741%" height="15" fill="rgb(240,110,33)" fg:x="355" fg:w="1"/><text x="26.5463%" y="463.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="26.2963%" y="437" width="0.0741%" height="15" fill="rgb(210,92,42)" fg:x="355" fg:w="1"/><text x="26.5463%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="26.3704%" y="485" width="0.0741%" height="15" fill="rgb(218,215,28)" fg:x="356" fg:w="1"/><text x="26.6204%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="26.3704%" y="469" width="0.0741%" height="15" fill="rgb(238,215,36)" fg:x="356" fg:w="1"/><text x="26.6204%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.07%)</title><rect x="26.3704%" y="453" width="0.0741%" height="15" fill="rgb(220,31,10)" fg:x="356" fg:w="1"/><text x="26.6204%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="26.5926%" y="373" width="0.0741%" height="15" fill="rgb(212,93,14)" fg:x="359" fg:w="1"/><text x="26.8426%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="26.6667%" y="373" width="0.1481%" height="15" fill="rgb(254,207,2)" fg:x="360" fg:w="2"/><text x="26.9167%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.37%)</title><rect x="26.5926%" y="389" width="0.3704%" height="15" fill="rgb(205,57,44)" fg:x="359" fg:w="5"/><text x="26.8426%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="26.8148%" y="373" width="0.1481%" height="15" fill="rgb(226,151,19)" fg:x="362" fg:w="2"/><text x="27.0648%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="26.8889%" y="357" width="0.0741%" height="15" fill="rgb(230,72,30)" fg:x="363" fg:w="1"/><text x="27.1389%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="26.9630%" y="389" width="0.0741%" height="15" fill="rgb(244,0,8)" fg:x="364" fg:w="1"/><text x="27.2130%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="27.0370%" y="389" width="0.1481%" height="15" fill="rgb(230,192,6)" fg:x="365" fg:w="2"/><text x="27.2870%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="27.1111%" y="373" width="0.0741%" height="15" fill="rgb(233,207,13)" fg:x="366" fg:w="1"/><text x="27.3611%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="27.1852%" y="357" width="0.0741%" height="15" fill="rgb(206,227,7)" fg:x="367" fg:w="1"/><text x="27.4352%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="27.1852%" y="341" width="0.0741%" height="15" fill="rgb(213,217,25)" fg:x="367" fg:w="1"/><text x="27.4352%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="27.1852%" y="325" width="0.0741%" height="15" fill="rgb(249,75,4)" fg:x="367" fg:w="1"/><text x="27.4352%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.74%)</title><rect x="26.5926%" y="405" width="0.7407%" height="15" fill="rgb(225,114,18)" fg:x="359" fg:w="10"/><text x="26.8426%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.15%)</title><rect x="27.1852%" y="389" width="0.1481%" height="15" fill="rgb(211,162,40)" fg:x="367" fg:w="2"/><text x="27.4352%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="27.1852%" y="373" width="0.1481%" height="15" fill="rgb(206,49,29)" fg:x="367" fg:w="2"/><text x="27.4352%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="27.2593%" y="357" width="0.0741%" height="15" fill="rgb(244,8,6)" fg:x="368" fg:w="1"/><text x="27.5093%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.04%)</title><rect x="26.5185%" y="437" width="1.0370%" height="15" fill="rgb(231,194,28)" fg:x="358" fg:w="14"/><text x="26.7685%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.04%)</title><rect x="26.5185%" y="421" width="1.0370%" height="15" fill="rgb(210,69,5)" fg:x="358" fg:w="14"/><text x="26.7685%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.22%)</title><rect x="27.3333%" y="405" width="0.2222%" height="15" fill="rgb(216,186,12)" fg:x="369" fg:w="3"/><text x="27.5833%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.07%)</title><rect x="27.5556%" y="437" width="0.0741%" height="15" fill="rgb(238,61,15)" fg:x="372" fg:w="1"/><text x="27.8056%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.07%)</title><rect x="27.5556%" y="421" width="0.0741%" height="15" fill="rgb(226,104,1)" fg:x="372" fg:w="1"/><text x="27.8056%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="27.5556%" y="405" width="0.0741%" height="15" fill="rgb(229,128,15)" fg:x="372" fg:w="1"/><text x="27.8056%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.07%)</title><rect x="27.5556%" y="389" width="0.0741%" height="15" fill="rgb(247,110,15)" fg:x="372" fg:w="1"/><text x="27.8056%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="27.5556%" y="373" width="0.0741%" height="15" fill="rgb(210,74,48)" fg:x="372" fg:w="1"/><text x="27.8056%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="27.5556%" y="357" width="0.0741%" height="15" fill="rgb(246,121,10)" fg:x="372" fg:w="1"/><text x="27.8056%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="27.5556%" y="341" width="0.0741%" height="15" fill="rgb(214,156,37)" fg:x="372" fg:w="1"/><text x="27.8056%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="27.7037%" y="421" width="0.0741%" height="15" fill="rgb(214,210,34)" fg:x="374" fg:w="1"/><text x="27.9537%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.67%)</title><rect x="27.8519%" y="405" width="0.6667%" height="15" fill="rgb(237,93,35)" fg:x="376" fg:w="9"/><text x="28.1019%" y="415.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.59%)</title><rect x="27.9259%" y="389" width="0.5926%" height="15" fill="rgb(206,36,8)" fg:x="377" fg:w="8"/><text x="28.1759%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.52%)</title><rect x="28.0000%" y="373" width="0.5185%" height="15" fill="rgb(208,151,12)" fg:x="378" fg:w="7"/><text x="28.2500%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.44%)</title><rect x="28.0741%" y="357" width="0.4444%" height="15" fill="rgb(225,133,52)" fg:x="379" fg:w="6"/><text x="28.3241%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.30%)</title><rect x="28.2222%" y="341" width="0.2963%" height="15" fill="rgb(231,71,53)" fg:x="381" fg:w="4"/><text x="28.4722%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.22%)</title><rect x="28.2963%" y="325" width="0.2222%" height="15" fill="rgb(243,76,21)" fg:x="382" fg:w="3"/><text x="28.5463%" y="335.50"></text></g><g><title>realloc (3 samples, 0.22%)</title><rect x="28.2963%" y="309" width="0.2222%" height="15" fill="rgb(252,144,3)" fg:x="382" fg:w="3"/><text x="28.5463%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (11 samples, 0.81%)</title><rect x="27.7778%" y="421" width="0.8148%" height="15" fill="rgb(231,199,10)" fg:x="375" fg:w="11"/><text x="28.0278%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="28.5185%" y="405" width="0.0741%" height="15" fill="rgb(215,18,11)" fg:x="385" fg:w="1"/><text x="28.7685%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="28.5185%" y="389" width="0.0741%" height="15" fill="rgb(241,65,24)" fg:x="385" fg:w="1"/><text x="28.7685%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="28.5185%" y="373" width="0.0741%" height="15" fill="rgb(251,192,38)" fg:x="385" fg:w="1"/><text x="28.7685%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.67%)</title><rect x="28.5926%" y="405" width="0.6667%" height="15" fill="rgb(205,9,35)" fg:x="386" fg:w="9"/><text x="28.8426%" y="415.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.52%)</title><rect x="28.7407%" y="389" width="0.5185%" height="15" fill="rgb(229,225,49)" fg:x="388" fg:w="7"/><text x="28.9907%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.37%)</title><rect x="28.8889%" y="373" width="0.3704%" height="15" fill="rgb(207,125,39)" fg:x="390" fg:w="5"/><text x="29.1389%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.30%)</title><rect x="28.9630%" y="357" width="0.2963%" height="15" fill="rgb(222,78,19)" fg:x="391" fg:w="4"/><text x="29.2130%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="29.1852%" y="341" width="0.0741%" height="15" fill="rgb(248,207,20)" fg:x="394" fg:w="1"/><text x="29.4352%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="29.1852%" y="325" width="0.0741%" height="15" fill="rgb(205,103,49)" fg:x="394" fg:w="1"/><text x="29.4352%" y="335.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="29.1852%" y="309" width="0.0741%" height="15" fill="rgb(216,42,28)" fg:x="394" fg:w="1"/><text x="29.4352%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="29.4074%" y="357" width="0.0741%" height="15" fill="rgb(213,205,53)" fg:x="397" fg:w="1"/><text x="29.6574%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="29.5556%" y="341" width="0.0741%" height="15" fill="rgb(239,140,53)" fg:x="399" fg:w="1"/><text x="29.8056%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="29.5556%" y="325" width="0.0741%" height="15" fill="rgb(248,95,9)" fg:x="399" fg:w="1"/><text x="29.8056%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="29.6296%" y="325" width="0.1481%" height="15" fill="rgb(254,58,47)" fg:x="400" fg:w="2"/><text x="29.8796%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="29.6296%" y="309" width="0.1481%" height="15" fill="rgb(234,227,14)" fg:x="400" fg:w="2"/><text x="29.8796%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="29.7037%" y="293" width="0.0741%" height="15" fill="rgb(205,192,45)" fg:x="401" fg:w="1"/><text x="29.9537%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.22%)</title><rect x="29.6296%" y="341" width="0.2222%" height="15" fill="rgb(253,187,31)" fg:x="400" fg:w="3"/><text x="29.8796%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.07%)</title><rect x="29.7778%" y="325" width="0.0741%" height="15" fill="rgb(222,6,32)" fg:x="402" fg:w="1"/><text x="30.0278%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="29.7778%" y="309" width="0.0741%" height="15" fill="rgb(249,190,19)" fg:x="402" fg:w="1"/><text x="30.0278%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="29.7778%" y="293" width="0.0741%" height="15" fill="rgb(251,28,20)" fg:x="402" fg:w="1"/><text x="30.0278%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="29.7778%" y="277" width="0.0741%" height="15" fill="rgb(210,223,40)" fg:x="402" fg:w="1"/><text x="30.0278%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="29.7778%" y="261" width="0.0741%" height="15" fill="rgb(216,137,22)" fg:x="402" fg:w="1"/><text x="30.0278%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.44%)</title><rect x="29.4815%" y="357" width="0.4444%" height="15" fill="rgb(247,39,34)" fg:x="398" fg:w="6"/><text x="29.7315%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="29.8519%" y="341" width="0.0741%" height="15" fill="rgb(239,43,50)" fg:x="403" fg:w="1"/><text x="30.1019%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.59%)</title><rect x="29.4074%" y="389" width="0.5926%" height="15" fill="rgb(241,212,9)" fg:x="397" fg:w="8"/><text x="29.6574%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.59%)</title><rect x="29.4074%" y="373" width="0.5926%" height="15" fill="rgb(205,8,2)" fg:x="397" fg:w="8"/><text x="29.6574%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="29.9259%" y="357" width="0.0741%" height="15" fill="rgb(217,173,54)" fg:x="404" fg:w="1"/><text x="30.1759%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="29.9259%" y="341" width="0.0741%" height="15" fill="rgb(208,149,52)" fg:x="404" fg:w="1"/><text x="30.1759%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.52%)</title><rect x="30.0000%" y="389" width="0.5185%" height="15" fill="rgb(239,99,40)" fg:x="405" fg:w="7"/><text x="30.2500%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="30.3704%" y="373" width="0.1481%" height="15" fill="rgb(233,214,26)" fg:x="410" fg:w="2"/><text x="30.6204%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="30.4444%" y="357" width="0.0741%" height="15" fill="rgb(231,225,37)" fg:x="411" fg:w="1"/><text x="30.6944%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="30.4444%" y="341" width="0.0741%" height="15" fill="rgb(252,55,35)" fg:x="411" fg:w="1"/><text x="30.6944%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="30.5926%" y="373" width="0.0741%" height="15" fill="rgb(239,43,18)" fg:x="413" fg:w="1"/><text x="30.8426%" y="383.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (1 samples, 0.07%)</title><rect x="30.6667%" y="373" width="0.0741%" height="15" fill="rgb(251,125,49)" fg:x="414" fg:w="1"/><text x="30.9167%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.07%)</title><rect x="30.7407%" y="373" width="0.0741%" height="15" fill="rgb(212,83,54)" fg:x="415" fg:w="1"/><text x="30.9907%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="30.8148%" y="373" width="0.1481%" height="15" fill="rgb(250,75,6)" fg:x="416" fg:w="2"/><text x="31.0648%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="30.8148%" y="357" width="0.1481%" height="15" fill="rgb(252,36,40)" fg:x="416" fg:w="2"/><text x="31.0648%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="30.8889%" y="341" width="0.0741%" height="15" fill="rgb(230,91,51)" fg:x="417" fg:w="1"/><text x="31.1389%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="30.8889%" y="325" width="0.0741%" height="15" fill="rgb(212,92,28)" fg:x="417" fg:w="1"/><text x="31.1389%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="30.8889%" y="309" width="0.0741%" height="15" fill="rgb(227,13,22)" fg:x="417" fg:w="1"/><text x="31.1389%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="30.8889%" y="293" width="0.0741%" height="15" fill="rgb(239,204,32)" fg:x="417" fg:w="1"/><text x="31.1389%" y="303.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="30.8889%" y="277" width="0.0741%" height="15" fill="rgb(228,49,41)" fg:x="417" fg:w="1"/><text x="31.1389%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="30.9630%" y="357" width="0.1481%" height="15" fill="rgb(206,95,6)" fg:x="418" fg:w="2"/><text x="31.2130%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="30.9630%" y="341" width="0.1481%" height="15" fill="rgb(251,20,14)" fg:x="418" fg:w="2"/><text x="31.2130%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="31.0370%" y="325" width="0.0741%" height="15" fill="rgb(214,99,28)" fg:x="419" fg:w="1"/><text x="31.2870%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="31.0370%" y="309" width="0.0741%" height="15" fill="rgb(239,122,54)" fg:x="419" fg:w="1"/><text x="31.2870%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="31.0370%" y="293" width="0.0741%" height="15" fill="rgb(218,217,46)" fg:x="419" fg:w="1"/><text x="31.2870%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="31.0370%" y="277" width="0.0741%" height="15" fill="rgb(249,106,28)" fg:x="419" fg:w="1"/><text x="31.2870%" y="287.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="31.0370%" y="261" width="0.0741%" height="15" fill="rgb(250,158,18)" fg:x="419" fg:w="1"/><text x="31.2870%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.37%)</title><rect x="30.9630%" y="373" width="0.3704%" height="15" fill="rgb(226,137,29)" fg:x="418" fg:w="5"/><text x="31.2130%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.22%)</title><rect x="31.1111%" y="357" width="0.2222%" height="15" fill="rgb(210,188,1)" fg:x="420" fg:w="3"/><text x="31.3611%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="31.1852%" y="341" width="0.1481%" height="15" fill="rgb(227,84,42)" fg:x="421" fg:w="2"/><text x="31.4352%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="31.2593%" y="325" width="0.0741%" height="15" fill="rgb(222,147,48)" fg:x="422" fg:w="1"/><text x="31.5093%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.11%)</title><rect x="30.5185%" y="389" width="1.1111%" height="15" fill="rgb(241,150,43)" fg:x="412" fg:w="15"/><text x="30.7685%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.30%)</title><rect x="31.3333%" y="373" width="0.2963%" height="15" fill="rgb(206,139,52)" fg:x="423" fg:w="4"/><text x="31.5833%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="31.4815%" y="357" width="0.1481%" height="15" fill="rgb(230,63,14)" fg:x="425" fg:w="2"/><text x="31.7315%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="31.4815%" y="341" width="0.1481%" height="15" fill="rgb(247,8,20)" fg:x="425" fg:w="2"/><text x="31.7315%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.52%)</title><rect x="29.2593%" y="405" width="2.5185%" height="15" fill="rgb(213,115,4)" fg:x="395" fg:w="34"/><text x="29.5093%" y="415.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="31.6296%" y="389" width="0.1481%" height="15" fill="rgb(241,79,49)" fg:x="427" fg:w="2"/><text x="31.8796%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="31.7037%" y="373" width="0.0741%" height="15" fill="rgb(222,42,35)" fg:x="428" fg:w="1"/><text x="31.9537%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="31.7037%" y="357" width="0.0741%" height="15" fill="rgb(247,59,23)" fg:x="428" fg:w="1"/><text x="31.9537%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (49 samples, 3.63%)</title><rect x="28.5926%" y="421" width="3.6296%" height="15" fill="rgb(247,93,18)" fg:x="386" fg:w="49"/><text x="28.8426%" y="431.50">serd..</text></g><g><title>std::io::Write::write_all (6 samples, 0.44%)</title><rect x="31.7778%" y="405" width="0.4444%" height="15" fill="rgb(249,107,47)" fg:x="429" fg:w="6"/><text x="32.0278%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.22%)</title><rect x="32.0000%" y="389" width="0.2222%" height="15" fill="rgb(219,27,1)" fg:x="432" fg:w="3"/><text x="32.2500%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="32.0741%" y="373" width="0.1481%" height="15" fill="rgb(217,82,32)" fg:x="433" fg:w="2"/><text x="32.3241%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="32.0741%" y="357" width="0.1481%" height="15" fill="rgb(250,129,47)" fg:x="433" fg:w="2"/><text x="32.3241%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="32.1481%" y="341" width="0.0741%" height="15" fill="rgb(253,88,35)" fg:x="434" fg:w="1"/><text x="32.3981%" y="351.50"></text></g><g><title>__rdl_realloc (1 samples, 0.07%)</title><rect x="32.1481%" y="325" width="0.0741%" height="15" fill="rgb(245,221,14)" fg:x="434" fg:w="1"/><text x="32.3981%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.07%)</title><rect x="32.1481%" y="309" width="0.0741%" height="15" fill="rgb(217,119,54)" fg:x="434" fg:w="1"/><text x="32.3981%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (63 samples, 4.67%)</title><rect x="27.6296%" y="437" width="4.6667%" height="15" fill="rgb(247,128,31)" fg:x="373" fg:w="63"/><text x="27.8796%" y="447.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="32.2222%" y="421" width="0.0741%" height="15" fill="rgb(211,99,22)" fg:x="435" fg:w="1"/><text x="32.4722%" y="431.50"></text></g><g><title>burrow_bon::perms::find_acls (1 samples, 0.07%)</title><rect x="32.2963%" y="437" width="0.0741%" height="15" fill="rgb(212,20,17)" fg:x="436" fg:w="1"/><text x="32.5463%" y="447.50"></text></g><g><title>burrow_bon::scour::scour (1 samples, 0.07%)</title><rect x="32.2963%" y="421" width="0.0741%" height="15" fill="rgb(209,159,29)" fg:x="436" fg:w="1"/><text x="32.5463%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.07%)</title><rect x="32.3704%" y="437" width="0.0741%" height="15" fill="rgb(222,177,53)" fg:x="437" fg:w="1"/><text x="32.6204%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="32.3704%" y="421" width="0.0741%" height="15" fill="rgb(234,46,43)" fg:x="437" fg:w="1"/><text x="32.6204%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="32.5185%" y="405" width="0.0741%" height="15" fill="rgb(208,108,14)" fg:x="439" fg:w="1"/><text x="32.7685%" y="415.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.07%)</title><rect x="32.5926%" y="405" width="0.0741%" height="15" fill="rgb(226,78,53)" fg:x="440" fg:w="1"/><text x="32.8426%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="32.5926%" y="389" width="0.0741%" height="15" fill="rgb(230,20,41)" fg:x="440" fg:w="1"/><text x="32.8426%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="32.5926%" y="373" width="0.0741%" height="15" fill="rgb(213,195,35)" fg:x="440" fg:w="1"/><text x="32.8426%" y="383.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.07%)</title><rect x="32.5926%" y="357" width="0.0741%" height="15" fill="rgb(242,62,36)" fg:x="440" fg:w="1"/><text x="32.8426%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="32.6667%" y="405" width="0.0741%" height="15" fill="rgb(222,210,37)" fg:x="441" fg:w="1"/><text x="32.9167%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="32.8148%" y="341" width="0.0741%" height="15" fill="rgb(232,107,19)" fg:x="443" fg:w="1"/><text x="33.0648%" y="351.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (4 samples, 0.30%)</title><rect x="32.7407%" y="405" width="0.2963%" height="15" fill="rgb(235,85,17)" fg:x="442" fg:w="4"/><text x="32.9907%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.30%)</title><rect x="32.7407%" y="389" width="0.2963%" height="15" fill="rgb(219,195,31)" fg:x="442" fg:w="4"/><text x="32.9907%" y="399.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.22%)</title><rect x="32.8148%" y="373" width="0.2222%" height="15" fill="rgb(231,183,30)" fg:x="443" fg:w="3"/><text x="33.0648%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.22%)</title><rect x="32.8148%" y="357" width="0.2222%" height="15" fill="rgb(212,0,11)" fg:x="443" fg:w="3"/><text x="33.0648%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.15%)</title><rect x="32.8889%" y="341" width="0.1481%" height="15" fill="rgb(249,53,54)" fg:x="444" fg:w="2"/><text x="33.1389%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="32.9630%" y="325" width="0.0741%" height="15" fill="rgb(211,118,13)" fg:x="445" fg:w="1"/><text x="33.2130%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.67%)</title><rect x="32.4444%" y="421" width="0.6667%" height="15" fill="rgb(237,42,9)" fg:x="438" fg:w="9"/><text x="32.6944%" y="431.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.07%)</title><rect x="33.0370%" y="405" width="0.0741%" height="15" fill="rgb(227,68,32)" fg:x="446" fg:w="1"/><text x="33.2870%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="33.0370%" y="389" width="0.0741%" height="15" fill="rgb(238,10,7)" fg:x="446" fg:w="1"/><text x="33.2870%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="33.2593%" y="389" width="0.2963%" height="15" fill="rgb(224,42,12)" fg:x="449" fg:w="4"/><text x="33.5093%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.07%)</title><rect x="33.5556%" y="373" width="0.0741%" height="15" fill="rgb(252,190,5)" fg:x="453" fg:w="1"/><text x="33.8056%" y="383.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.15%)</title><rect x="33.5556%" y="389" width="0.1481%" height="15" fill="rgb(220,214,39)" fg:x="453" fg:w="2"/><text x="33.8056%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="33.6296%" y="373" width="0.0741%" height="15" fill="rgb(247,98,4)" fg:x="454" fg:w="1"/><text x="33.8796%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.44%)</title><rect x="33.7037%" y="389" width="0.4444%" height="15" fill="rgb(211,60,12)" fg:x="455" fg:w="6"/><text x="33.9537%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.22%)</title><rect x="33.9259%" y="373" width="0.2222%" height="15" fill="rgb(224,42,10)" fg:x="458" fg:w="3"/><text x="34.1759%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="34.0741%" y="357" width="0.0741%" height="15" fill="rgb(217,167,4)" fg:x="460" fg:w="1"/><text x="34.3241%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="34.0741%" y="341" width="0.0741%" height="15" fill="rgb(253,18,17)" fg:x="460" fg:w="1"/><text x="34.3241%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="34.2222%" y="357" width="0.0741%" height="15" fill="rgb(249,186,44)" fg:x="462" fg:w="1"/><text x="34.4722%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="34.2963%" y="341" width="0.2963%" height="15" fill="rgb(254,124,54)" fg:x="463" fg:w="4"/><text x="34.5463%" y="351.50"></text></g><g><title>__libc_malloc (4 samples, 0.30%)</title><rect x="34.2963%" y="325" width="0.2963%" height="15" fill="rgb(220,124,39)" fg:x="463" fg:w="4"/><text x="34.5463%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="34.6667%" y="293" width="0.0741%" height="15" fill="rgb(225,96,46)" fg:x="468" fg:w="1"/><text x="34.9167%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="34.6667%" y="309" width="0.1481%" height="15" fill="rgb(221,106,12)" fg:x="468" fg:w="2"/><text x="34.9167%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="34.7407%" y="293" width="0.0741%" height="15" fill="rgb(227,133,23)" fg:x="469" fg:w="1"/><text x="34.9907%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="34.7407%" y="277" width="0.0741%" height="15" fill="rgb(216,44,52)" fg:x="469" fg:w="1"/><text x="34.9907%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="34.7407%" y="261" width="0.0741%" height="15" fill="rgb(239,149,7)" fg:x="469" fg:w="1"/><text x="34.9907%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="34.7407%" y="245" width="0.0741%" height="15" fill="rgb(211,157,31)" fg:x="469" fg:w="1"/><text x="34.9907%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="34.7407%" y="229" width="0.0741%" height="15" fill="rgb(206,215,22)" fg:x="469" fg:w="1"/><text x="34.9907%" y="239.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.30%)</title><rect x="34.5926%" y="341" width="0.2963%" height="15" fill="rgb(208,113,15)" fg:x="467" fg:w="4"/><text x="34.8426%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.30%)</title><rect x="34.5926%" y="325" width="0.2963%" height="15" fill="rgb(207,189,15)" fg:x="467" fg:w="4"/><text x="34.8426%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="34.8148%" y="309" width="0.0741%" height="15" fill="rgb(231,115,4)" fg:x="470" fg:w="1"/><text x="35.0648%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.22%)</title><rect x="35.0370%" y="309" width="0.2222%" height="15" fill="rgb(253,117,2)" fg:x="473" fg:w="3"/><text x="35.2870%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.22%)</title><rect x="35.0370%" y="293" width="0.2222%" height="15" fill="rgb(248,48,24)" fg:x="473" fg:w="3"/><text x="35.2870%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.07%)</title><rect x="35.2593%" y="293" width="0.0741%" height="15" fill="rgb(241,28,46)" fg:x="476" fg:w="1"/><text x="35.5093%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.30%)</title><rect x="35.3333%" y="293" width="0.2963%" height="15" fill="rgb(216,165,52)" fg:x="477" fg:w="4"/><text x="35.5833%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="35.4815%" y="277" width="0.1481%" height="15" fill="rgb(220,222,34)" fg:x="479" fg:w="2"/><text x="35.7315%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="35.4815%" y="261" width="0.1481%" height="15" fill="rgb(247,222,49)" fg:x="479" fg:w="2"/><text x="35.7315%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.41%)</title><rect x="34.2963%" y="357" width="1.4074%" height="15" fill="rgb(240,10,31)" fg:x="463" fg:w="19"/><text x="34.5463%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.81%)</title><rect x="34.8889%" y="341" width="0.8148%" height="15" fill="rgb(221,199,35)" fg:x="471" fg:w="11"/><text x="35.1389%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.74%)</title><rect x="34.9630%" y="325" width="0.7407%" height="15" fill="rgb(230,223,11)" fg:x="472" fg:w="10"/><text x="35.2130%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.44%)</title><rect x="35.2593%" y="309" width="0.4444%" height="15" fill="rgb(218,82,45)" fg:x="476" fg:w="6"/><text x="35.5093%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="35.6296%" y="293" width="0.0741%" height="15" fill="rgb(233,213,33)" fg:x="481" fg:w="1"/><text x="35.8796%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.07%)</title><rect x="35.7037%" y="357" width="0.0741%" height="15" fill="rgb(210,143,52)" fg:x="482" fg:w="1"/><text x="35.9537%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (24 samples, 1.78%)</title><rect x="34.1481%" y="373" width="1.7778%" height="15" fill="rgb(206,95,4)" fg:x="461" fg:w="24"/><text x="34.3981%" y="383.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.15%)</title><rect x="35.7778%" y="357" width="0.1481%" height="15" fill="rgb(246,164,46)" fg:x="483" fg:w="2"/><text x="36.0278%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="35.7778%" y="341" width="0.1481%" height="15" fill="rgb(213,210,47)" fg:x="483" fg:w="2"/><text x="36.0278%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="35.9259%" y="373" width="0.0741%" height="15" fill="rgb(210,12,38)" fg:x="485" fg:w="1"/><text x="36.1759%" y="383.50"></text></g><g><title>engine::session::Session::flush (140 samples, 10.37%)</title><rect x="25.8519%" y="549" width="10.3704%" height="15" fill="rgb(252,192,54)" fg:x="349" fg:w="140"/><text x="26.1019%" y="559.50">engine::session..</text></g><g><title>engine::session::Session::save_changes (136 samples, 10.07%)</title><rect x="26.1481%" y="533" width="10.0741%" height="15" fill="rgb(242,92,6)" fg:x="353" fg:w="136"/><text x="26.3981%" y="543.50">engine::session..</text></g><g><title>engine::session::state::State::close (136 samples, 10.07%)</title><rect x="26.1481%" y="517" width="10.0741%" height="15" fill="rgb(253,154,15)" fg:x="353" fg:w="136"/><text x="26.3981%" y="527.50">engine::session..</text></g><g><title>engine::session::state::State::flush_entities (135 samples, 10.00%)</title><rect x="26.2222%" y="501" width="10.0000%" height="15" fill="rgb(209,20,43)" fg:x="354" fg:w="135"/><text x="26.4722%" y="511.50">engine::sessio..</text></g><g><title>core::iter::adapters::try_process (132 samples, 9.78%)</title><rect x="26.4444%" y="485" width="9.7778%" height="15" fill="rgb(232,28,49)" fg:x="357" fg:w="132"/><text x="26.6944%" y="495.50">core::iter::ad..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (132 samples, 9.78%)</title><rect x="26.4444%" y="469" width="9.7778%" height="15" fill="rgb(248,131,53)" fg:x="357" fg:w="132"/><text x="26.6944%" y="479.50">&lt;alloc::vec::V..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (132 samples, 9.78%)</title><rect x="26.4444%" y="453" width="9.7778%" height="15" fill="rgb(214,16,30)" fg:x="357" fg:w="132"/><text x="26.6944%" y="463.50">engine::sessio..</text></g><g><title>kernel::model::any_entity_changes (51 samples, 3.78%)</title><rect x="32.4444%" y="437" width="3.7778%" height="15" fill="rgb(245,16,0)" fg:x="438" fg:w="51"/><text x="32.6944%" y="447.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (42 samples, 3.11%)</title><rect x="33.1111%" y="421" width="3.1111%" height="15" fill="rgb(245,17,35)" fg:x="447" fg:w="42"/><text x="33.3611%" y="431.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (42 samples, 3.11%)</title><rect x="33.1111%" y="405" width="3.1111%" height="15" fill="rgb(249,27,53)" fg:x="447" fg:w="42"/><text x="33.3611%" y="415.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.07%)</title><rect x="34.1481%" y="389" width="2.0741%" height="15" fill="rgb(214,73,24)" fg:x="461" fg:w="28"/><text x="34.3981%" y="399.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.22%)</title><rect x="36.0000%" y="373" width="0.2222%" height="15" fill="rgb(223,84,37)" fg:x="486" fg:w="3"/><text x="36.2500%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="36.1481%" y="357" width="0.0741%" height="15" fill="rgb(210,109,28)" fg:x="488" fg:w="1"/><text x="36.3981%" y="367.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.07%)</title><rect x="36.2222%" y="517" width="0.0741%" height="15" fill="rgb(208,186,6)" fg:x="489" fg:w="1"/><text x="36.4722%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="36.2222%" y="501" width="0.0741%" height="15" fill="rgb(235,201,30)" fg:x="489" fg:w="1"/><text x="36.4722%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="36.2222%" y="485" width="0.0741%" height="15" fill="rgb(216,198,48)" fg:x="489" fg:w="1"/><text x="36.4722%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.15%)</title><rect x="36.2222%" y="549" width="0.1481%" height="15" fill="rgb(254,186,25)" fg:x="489" fg:w="2"/><text x="36.4722%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.15%)</title><rect x="36.2222%" y="533" width="0.1481%" height="15" fill="rgb(227,87,5)" fg:x="489" fg:w="2"/><text x="36.4722%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.07%)</title><rect x="36.2963%" y="517" width="0.0741%" height="15" fill="rgb(236,205,25)" fg:x="490" fg:w="1"/><text x="36.5463%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="36.2963%" y="501" width="0.0741%" height="15" fill="rgb(229,99,32)" fg:x="490" fg:w="1"/><text x="36.5463%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="36.2963%" y="485" width="0.0741%" height="15" fill="rgb(231,177,31)" fg:x="490" fg:w="1"/><text x="36.5463%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="36.2963%" y="469" width="0.0741%" height="15" fill="rgb(246,15,2)" fg:x="490" fg:w="1"/><text x="36.5463%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="36.2963%" y="453" width="0.0741%" height="15" fill="rgb(207,39,15)" fg:x="490" fg:w="1"/><text x="36.5463%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="36.2963%" y="437" width="0.0741%" height="15" fill="rgb(207,44,9)" fg:x="490" fg:w="1"/><text x="36.5463%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.07%)</title><rect x="36.4444%" y="533" width="0.0741%" height="15" fill="rgb(225,224,33)" fg:x="492" fg:w="1"/><text x="36.6944%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.07%)</title><rect x="36.4444%" y="517" width="0.0741%" height="15" fill="rgb(252,151,3)" fg:x="492" fg:w="1"/><text x="36.6944%" y="527.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.07%)</title><rect x="36.4444%" y="501" width="0.0741%" height="15" fill="rgb(211,140,13)" fg:x="492" fg:w="1"/><text x="36.6944%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="36.4444%" y="485" width="0.0741%" height="15" fill="rgb(239,225,17)" fg:x="492" fg:w="1"/><text x="36.6944%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="36.5926%" y="485" width="0.0741%" height="15" fill="rgb(223,170,52)" fg:x="494" fg:w="1"/><text x="36.8426%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="36.5926%" y="469" width="0.0741%" height="15" fill="rgb(212,64,21)" fg:x="494" fg:w="1"/><text x="36.8426%" y="479.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.22%)</title><rect x="36.5185%" y="533" width="0.2222%" height="15" fill="rgb(236,126,48)" fg:x="493" fg:w="3"/><text x="36.7685%" y="543.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.15%)</title><rect x="36.5926%" y="517" width="0.1481%" height="15" fill="rgb(209,135,11)" fg:x="494" fg:w="2"/><text x="36.8426%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.15%)</title><rect x="36.5926%" y="501" width="0.1481%" height="15" fill="rgb(228,126,40)" fg:x="494" fg:w="2"/><text x="36.8426%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.07%)</title><rect x="36.6667%" y="485" width="0.0741%" height="15" fill="rgb(205,196,36)" fg:x="495" fg:w="1"/><text x="36.9167%" y="495.50"></text></g><g><title>plugins_core::build::Build::new (6 samples, 0.44%)</title><rect x="36.3704%" y="549" width="0.4444%" height="15" fill="rgb(243,160,33)" fg:x="491" fg:w="6"/><text x="36.6204%" y="559.50"></text></g><g><title>kernel::model::builder::build_entity (1 samples, 0.07%)</title><rect x="36.7407%" y="533" width="0.0741%" height="15" fill="rgb(210,84,20)" fg:x="496" fg:w="1"/><text x="36.9907%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.07%)</title><rect x="36.7407%" y="517" width="0.0741%" height="15" fill="rgb(228,213,30)" fg:x="496" fg:w="1"/><text x="36.9907%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="36.9630%" y="501" width="0.0741%" height="15" fill="rgb(252,33,45)" fg:x="499" fg:w="1"/><text x="37.2130%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="36.9630%" y="485" width="0.0741%" height="15" fill="rgb(254,227,20)" fg:x="499" fg:w="1"/><text x="37.2130%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="36.9630%" y="469" width="0.0741%" height="15" fill="rgb(228,192,2)" fg:x="499" fg:w="1"/><text x="37.2130%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="36.9630%" y="453" width="0.0741%" height="15" fill="rgb(233,32,8)" fg:x="499" fg:w="1"/><text x="37.2130%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="36.9630%" y="437" width="0.0741%" height="15" fill="rgb(220,146,47)" fg:x="499" fg:w="1"/><text x="37.2130%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="36.9630%" y="421" width="0.0741%" height="15" fill="rgb(246,194,1)" fg:x="499" fg:w="1"/><text x="37.2130%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="36.9630%" y="405" width="0.0741%" height="15" fill="rgb(218,203,9)" fg:x="499" fg:w="1"/><text x="37.2130%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="36.9630%" y="389" width="0.0741%" height="15" fill="rgb(237,97,14)" fg:x="499" fg:w="1"/><text x="37.2130%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="36.9630%" y="373" width="0.0741%" height="15" fill="rgb(239,76,15)" fg:x="499" fg:w="1"/><text x="37.2130%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="36.9630%" y="357" width="0.0741%" height="15" fill="rgb(222,53,45)" fg:x="499" fg:w="1"/><text x="37.2130%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="36.9630%" y="341" width="0.0741%" height="15" fill="rgb(237,88,5)" fg:x="499" fg:w="1"/><text x="37.2130%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="36.9630%" y="325" width="0.0741%" height="15" fill="rgb(218,223,35)" fg:x="499" fg:w="1"/><text x="37.2130%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="36.9630%" y="309" width="0.0741%" height="15" fill="rgb(243,229,38)" fg:x="499" fg:w="1"/><text x="37.2130%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="36.9630%" y="293" width="0.0741%" height="15" fill="rgb(240,75,41)" fg:x="499" fg:w="1"/><text x="37.2130%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="36.9630%" y="277" width="0.0741%" height="15" fill="rgb(209,110,37)" fg:x="499" fg:w="1"/><text x="37.2130%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="37.0370%" y="501" width="0.0741%" height="15" fill="rgb(221,130,46)" fg:x="500" fg:w="1"/><text x="37.2870%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="37.1111%" y="501" width="0.0741%" height="15" fill="rgb(237,160,20)" fg:x="501" fg:w="1"/><text x="37.3611%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.37%)</title><rect x="36.8889%" y="517" width="0.3704%" height="15" fill="rgb(234,126,24)" fg:x="498" fg:w="5"/><text x="37.1389%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="37.1852%" y="501" width="0.0741%" height="15" fill="rgb(207,177,9)" fg:x="502" fg:w="1"/><text x="37.4352%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="37.1852%" y="485" width="0.0741%" height="15" fill="rgb(231,191,33)" fg:x="502" fg:w="1"/><text x="37.4352%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="37.1852%" y="469" width="0.0741%" height="15" fill="rgb(207,42,1)" fg:x="502" fg:w="1"/><text x="37.4352%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="37.1852%" y="453" width="0.0741%" height="15" fill="rgb(218,34,50)" fg:x="502" fg:w="1"/><text x="37.4352%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="37.1852%" y="437" width="0.0741%" height="15" fill="rgb(254,126,39)" fg:x="502" fg:w="1"/><text x="37.4352%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.07%)</title><rect x="37.2593%" y="501" width="0.0741%" height="15" fill="rgb(251,17,26)" fg:x="503" fg:w="1"/><text x="37.5093%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="37.2593%" y="485" width="0.0741%" height="15" fill="rgb(252,215,34)" fg:x="503" fg:w="1"/><text x="37.5093%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="37.2593%" y="469" width="0.0741%" height="15" fill="rgb(217,120,44)" fg:x="503" fg:w="1"/><text x="37.5093%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="37.2593%" y="453" width="0.0741%" height="15" fill="rgb(211,31,11)" fg:x="503" fg:w="1"/><text x="37.5093%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.15%)</title><rect x="37.3333%" y="469" width="0.1481%" height="15" fill="rgb(222,69,51)" fg:x="504" fg:w="2"/><text x="37.5833%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.07%)</title><rect x="37.4074%" y="453" width="0.0741%" height="15" fill="rgb(215,229,42)" fg:x="505" fg:w="1"/><text x="37.6574%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="37.4074%" y="437" width="0.0741%" height="15" fill="rgb(212,102,15)" fg:x="505" fg:w="1"/><text x="37.6574%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="37.4074%" y="421" width="0.0741%" height="15" fill="rgb(205,179,41)" fg:x="505" fg:w="1"/><text x="37.6574%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="37.4074%" y="405" width="0.0741%" height="15" fill="rgb(219,148,46)" fg:x="505" fg:w="1"/><text x="37.6574%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.30%)</title><rect x="37.2593%" y="517" width="0.2963%" height="15" fill="rgb(243,40,19)" fg:x="503" fg:w="4"/><text x="37.5093%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.22%)</title><rect x="37.3333%" y="501" width="0.2222%" height="15" fill="rgb(208,206,34)" fg:x="504" fg:w="3"/><text x="37.5833%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (3 samples, 0.22%)</title><rect x="37.3333%" y="485" width="0.2222%" height="15" fill="rgb(244,184,38)" fg:x="504" fg:w="3"/><text x="37.5833%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="37.4815%" y="469" width="0.0741%" height="15" fill="rgb(244,151,47)" fg:x="506" fg:w="1"/><text x="37.7315%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="37.4815%" y="453" width="0.0741%" height="15" fill="rgb(236,134,42)" fg:x="506" fg:w="1"/><text x="37.7315%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="37.5556%" y="453" width="0.0741%" height="15" fill="rgb(233,93,22)" fg:x="507" fg:w="1"/><text x="37.8056%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="37.5556%" y="437" width="0.0741%" height="15" fill="rgb(211,202,10)" fg:x="507" fg:w="1"/><text x="37.8056%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="37.5556%" y="421" width="0.0741%" height="15" fill="rgb(240,63,8)" fg:x="507" fg:w="1"/><text x="37.8056%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="37.5556%" y="405" width="0.0741%" height="15" fill="rgb(214,9,4)" fg:x="507" fg:w="1"/><text x="37.8056%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="37.5556%" y="389" width="0.0741%" height="15" fill="rgb(243,66,45)" fg:x="507" fg:w="1"/><text x="37.8056%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="37.5556%" y="373" width="0.0741%" height="15" fill="rgb(220,50,42)" fg:x="507" fg:w="1"/><text x="37.8056%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="37.5556%" y="357" width="0.0741%" height="15" fill="rgb(220,134,27)" fg:x="507" fg:w="1"/><text x="37.8056%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="37.5556%" y="341" width="0.0741%" height="15" fill="rgb(246,151,50)" fg:x="507" fg:w="1"/><text x="37.8056%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="37.5556%" y="325" width="0.0741%" height="15" fill="rgb(238,216,27)" fg:x="507" fg:w="1"/><text x="37.8056%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="37.5556%" y="309" width="0.0741%" height="15" fill="rgb(250,92,11)" fg:x="507" fg:w="1"/><text x="37.8056%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="37.5556%" y="293" width="0.0741%" height="15" fill="rgb(248,183,6)" fg:x="507" fg:w="1"/><text x="37.8056%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="37.5556%" y="277" width="0.0741%" height="15" fill="rgb(211,204,50)" fg:x="507" fg:w="1"/><text x="37.8056%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="37.5556%" y="261" width="0.0741%" height="15" fill="rgb(252,55,47)" fg:x="507" fg:w="1"/><text x="37.8056%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="37.5556%" y="245" width="0.0741%" height="15" fill="rgb(240,198,32)" fg:x="507" fg:w="1"/><text x="37.8056%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="37.5556%" y="229" width="0.0741%" height="15" fill="rgb(224,203,19)" fg:x="507" fg:w="1"/><text x="37.8056%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.07%)</title><rect x="37.6296%" y="453" width="0.0741%" height="15" fill="rgb(205,27,16)" fg:x="508" fg:w="1"/><text x="37.8796%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="37.6296%" y="437" width="0.0741%" height="15" fill="rgb(224,226,17)" fg:x="508" fg:w="1"/><text x="37.8796%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="37.7037%" y="453" width="0.0741%" height="15" fill="rgb(205,216,54)" fg:x="509" fg:w="1"/><text x="37.9537%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.30%)</title><rect x="37.5556%" y="469" width="0.2963%" height="15" fill="rgb(248,168,46)" fg:x="507" fg:w="4"/><text x="37.8056%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeMut&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="37.7778%" y="453" width="0.0741%" height="15" fill="rgb(226,111,45)" fg:x="510" fg:w="1"/><text x="38.0278%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.07%)</title><rect x="37.8519%" y="469" width="0.0741%" height="15" fill="rgb(231,15,9)" fg:x="511" fg:w="1"/><text x="38.1019%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="37.8519%" y="453" width="0.0741%" height="15" fill="rgb(243,168,3)" fg:x="511" fg:w="1"/><text x="38.1019%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.07%)</title><rect x="37.9259%" y="469" width="0.0741%" height="15" fill="rgb(221,220,54)" fg:x="512" fg:w="1"/><text x="38.1759%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="38.0000%" y="437" width="0.0741%" height="15" fill="rgb(232,174,38)" fg:x="513" fg:w="1"/><text x="38.2500%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="38.0741%" y="437" width="0.0741%" height="15" fill="rgb(205,14,38)" fg:x="514" fg:w="1"/><text x="38.3241%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="38.0741%" y="421" width="0.0741%" height="15" fill="rgb(234,89,19)" fg:x="514" fg:w="1"/><text x="38.3241%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="38.0741%" y="405" width="0.0741%" height="15" fill="rgb(216,68,51)" fg:x="514" fg:w="1"/><text x="38.3241%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="38.2222%" y="405" width="0.0741%" height="15" fill="rgb(213,49,2)" fg:x="516" fg:w="1"/><text x="38.4722%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="38.2222%" y="389" width="0.0741%" height="15" fill="rgb(242,146,30)" fg:x="516" fg:w="1"/><text x="38.4722%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (11 samples, 0.81%)</title><rect x="37.5556%" y="501" width="0.8148%" height="15" fill="rgb(224,188,11)" fg:x="507" fg:w="11"/><text x="37.8056%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (11 samples, 0.81%)</title><rect x="37.5556%" y="485" width="0.8148%" height="15" fill="rgb(213,159,11)" fg:x="507" fg:w="11"/><text x="37.8056%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (5 samples, 0.37%)</title><rect x="38.0000%" y="469" width="0.3704%" height="15" fill="rgb(229,13,31)" fg:x="513" fg:w="5"/><text x="38.2500%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.37%)</title><rect x="38.0000%" y="453" width="0.3704%" height="15" fill="rgb(209,103,11)" fg:x="513" fg:w="5"/><text x="38.2500%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.22%)</title><rect x="38.1481%" y="437" width="0.2222%" height="15" fill="rgb(206,3,4)" fg:x="515" fg:w="3"/><text x="38.3981%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (3 samples, 0.22%)</title><rect x="38.1481%" y="421" width="0.2222%" height="15" fill="rgb(252,10,49)" fg:x="515" fg:w="3"/><text x="38.3981%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.07%)</title><rect x="38.2963%" y="405" width="0.0741%" height="15" fill="rgb(217,160,32)" fg:x="517" fg:w="1"/><text x="38.5463%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.22%)</title><rect x="38.5185%" y="469" width="0.2222%" height="15" fill="rgb(249,196,0)" fg:x="520" fg:w="3"/><text x="38.7685%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="38.5926%" y="453" width="0.1481%" height="15" fill="rgb(213,17,48)" fg:x="521" fg:w="2"/><text x="38.8426%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="38.6667%" y="437" width="0.0741%" height="15" fill="rgb(206,42,46)" fg:x="522" fg:w="1"/><text x="38.9167%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.07%)</title><rect x="38.7407%" y="469" width="0.0741%" height="15" fill="rgb(212,105,24)" fg:x="523" fg:w="1"/><text x="38.9907%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.07%)</title><rect x="38.7407%" y="453" width="0.0741%" height="15" fill="rgb(243,216,30)" fg:x="523" fg:w="1"/><text x="38.9907%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.30%)</title><rect x="38.8148%" y="453" width="0.2963%" height="15" fill="rgb(207,121,3)" fg:x="524" fg:w="4"/><text x="39.0648%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.30%)</title><rect x="38.8148%" y="437" width="0.2963%" height="15" fill="rgb(249,78,0)" fg:x="524" fg:w="4"/><text x="39.0648%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.30%)</title><rect x="38.8148%" y="421" width="0.2963%" height="15" fill="rgb(244,151,32)" fg:x="524" fg:w="4"/><text x="39.0648%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.22%)</title><rect x="38.8889%" y="405" width="0.2222%" height="15" fill="rgb(228,63,25)" fg:x="525" fg:w="3"/><text x="39.1389%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="38.9630%" y="389" width="0.1481%" height="15" fill="rgb(231,158,23)" fg:x="526" fg:w="2"/><text x="39.2130%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="38.9630%" y="373" width="0.1481%" height="15" fill="rgb(248,107,23)" fg:x="526" fg:w="2"/><text x="39.2130%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="38.9630%" y="357" width="0.1481%" height="15" fill="rgb(215,168,21)" fg:x="526" fg:w="2"/><text x="39.2130%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="38.9630%" y="341" width="0.1481%" height="15" fill="rgb(227,83,22)" fg:x="526" fg:w="2"/><text x="39.2130%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (31 samples, 2.30%)</title><rect x="36.8889%" y="533" width="2.2963%" height="15" fill="rgb(217,118,43)" fg:x="498" fg:w="31"/><text x="37.1389%" y="543.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (22 samples, 1.63%)</title><rect x="37.5556%" y="517" width="1.6296%" height="15" fill="rgb(229,220,41)" fg:x="507" fg:w="22"/><text x="37.8056%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.81%)</title><rect x="38.3704%" y="501" width="0.8148%" height="15" fill="rgb(254,146,46)" fg:x="518" fg:w="11"/><text x="38.6204%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.81%)</title><rect x="38.3704%" y="485" width="0.8148%" height="15" fill="rgb(233,208,31)" fg:x="518" fg:w="11"/><text x="38.6204%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.37%)</title><rect x="38.8148%" y="469" width="0.3704%" height="15" fill="rgb(222,162,7)" fg:x="524" fg:w="5"/><text x="39.0648%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="39.1111%" y="453" width="0.0741%" height="15" fill="rgb(230,117,45)" fg:x="528" fg:w="1"/><text x="39.3611%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="39.1111%" y="437" width="0.0741%" height="15" fill="rgb(239,163,6)" fg:x="528" fg:w="1"/><text x="39.3611%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="39.1111%" y="421" width="0.0741%" height="15" fill="rgb(246,130,17)" fg:x="528" fg:w="1"/><text x="39.3611%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="39.1852%" y="517" width="0.0741%" height="15" fill="rgb(216,84,5)" fg:x="529" fg:w="1"/><text x="39.4352%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="39.1852%" y="501" width="0.0741%" height="15" fill="rgb(230,200,21)" fg:x="529" fg:w="1"/><text x="39.4352%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="39.1852%" y="485" width="0.0741%" height="15" fill="rgb(224,2,8)" fg:x="529" fg:w="1"/><text x="39.4352%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="39.1852%" y="469" width="0.0741%" height="15" fill="rgb(238,178,10)" fg:x="529" fg:w="1"/><text x="39.4352%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="39.1852%" y="453" width="0.0741%" height="15" fill="rgb(242,153,24)" fg:x="529" fg:w="1"/><text x="39.4352%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="39.1852%" y="437" width="0.0741%" height="15" fill="rgb(242,32,48)" fg:x="529" fg:w="1"/><text x="39.4352%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="39.1852%" y="421" width="0.0741%" height="15" fill="rgb(227,36,0)" fg:x="529" fg:w="1"/><text x="39.4352%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="39.1852%" y="405" width="0.0741%" height="15" fill="rgb(251,33,35)" fg:x="529" fg:w="1"/><text x="39.4352%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="39.1852%" y="389" width="0.0741%" height="15" fill="rgb(232,168,51)" fg:x="529" fg:w="1"/><text x="39.4352%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="39.1852%" y="373" width="0.0741%" height="15" fill="rgb(228,56,10)" fg:x="529" fg:w="1"/><text x="39.4352%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="39.1852%" y="357" width="0.0741%" height="15" fill="rgb(231,10,26)" fg:x="529" fg:w="1"/><text x="39.4352%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="39.1852%" y="341" width="0.0741%" height="15" fill="rgb(226,202,12)" fg:x="529" fg:w="1"/><text x="39.4352%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="39.1852%" y="325" width="0.0741%" height="15" fill="rgb(251,49,21)" fg:x="529" fg:w="1"/><text x="39.4352%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="39.1852%" y="309" width="0.0741%" height="15" fill="rgb(206,228,28)" fg:x="529" fg:w="1"/><text x="39.4352%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="39.1852%" y="293" width="0.0741%" height="15" fill="rgb(205,198,31)" fg:x="529" fg:w="1"/><text x="39.4352%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="39.2593%" y="517" width="0.0741%" height="15" fill="rgb(213,69,1)" fg:x="530" fg:w="1"/><text x="39.5093%" y="527.50"></text></g><g><title>plugins_core::build::Build::save (35 samples, 2.59%)</title><rect x="36.8148%" y="549" width="2.5926%" height="15" fill="rgb(209,177,9)" fg:x="497" fg:w="35"/><text x="37.0648%" y="559.50">pl..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.22%)</title><rect x="39.1852%" y="533" width="0.2222%" height="15" fill="rgb(227,119,30)" fg:x="529" fg:w="3"/><text x="39.4352%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.07%)</title><rect x="39.3333%" y="517" width="0.0741%" height="15" fill="rgb(234,106,41)" fg:x="531" fg:w="1"/><text x="39.5833%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="39.3333%" y="501" width="0.0741%" height="15" fill="rgb(244,103,47)" fg:x="531" fg:w="1"/><text x="39.5833%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="39.4815%" y="517" width="0.0741%" height="15" fill="rgb(212,211,25)" fg:x="533" fg:w="1"/><text x="39.7315%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="39.4815%" y="501" width="0.0741%" height="15" fill="rgb(208,63,53)" fg:x="533" fg:w="1"/><text x="39.7315%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="39.4815%" y="485" width="0.0741%" height="15" fill="rgb(213,176,21)" fg:x="533" fg:w="1"/><text x="39.7315%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.07%)</title><rect x="39.5556%" y="517" width="0.0741%" height="15" fill="rgb(243,124,12)" fg:x="534" fg:w="1"/><text x="39.8056%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.07%)</title><rect x="39.5556%" y="501" width="0.0741%" height="15" fill="rgb(239,2,35)" fg:x="534" fg:w="1"/><text x="39.8056%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="39.5556%" y="485" width="0.0741%" height="15" fill="rgb(253,169,22)" fg:x="534" fg:w="1"/><text x="39.8056%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.15%)</title><rect x="39.6296%" y="485" width="0.1481%" height="15" fill="rgb(254,51,12)" fg:x="535" fg:w="2"/><text x="39.8796%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.15%)</title><rect x="39.6296%" y="469" width="0.1481%" height="15" fill="rgb(244,17,47)" fg:x="535" fg:w="2"/><text x="39.8796%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="39.6296%" y="453" width="0.1481%" height="15" fill="rgb(251,45,46)" fg:x="535" fg:w="2"/><text x="39.8796%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="39.6296%" y="437" width="0.1481%" height="15" fill="rgb(223,87,43)" fg:x="535" fg:w="2"/><text x="39.8796%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="39.6296%" y="421" width="0.1481%" height="15" fill="rgb(230,132,31)" fg:x="535" fg:w="2"/><text x="39.8796%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="39.6296%" y="405" width="0.1481%" height="15" fill="rgb(206,99,1)" fg:x="535" fg:w="2"/><text x="39.8796%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="39.6296%" y="389" width="0.1481%" height="15" fill="rgb(227,110,25)" fg:x="535" fg:w="2"/><text x="39.8796%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="39.6296%" y="373" width="0.1481%" height="15" fill="rgb(217,182,7)" fg:x="535" fg:w="2"/><text x="39.8796%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="39.6296%" y="357" width="0.1481%" height="15" fill="rgb(250,176,4)" fg:x="535" fg:w="2"/><text x="39.8796%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="39.6296%" y="341" width="0.1481%" height="15" fill="rgb(244,98,30)" fg:x="535" fg:w="2"/><text x="39.8796%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="39.6296%" y="325" width="0.1481%" height="15" fill="rgb(228,150,42)" fg:x="535" fg:w="2"/><text x="39.8796%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="39.6296%" y="309" width="0.1481%" height="15" fill="rgb(231,91,46)" fg:x="535" fg:w="2"/><text x="39.8796%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="39.6296%" y="293" width="0.1481%" height="15" fill="rgb(252,161,32)" fg:x="535" fg:w="2"/><text x="39.8796%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="39.6296%" y="277" width="0.1481%" height="15" fill="rgb(236,69,41)" fg:x="535" fg:w="2"/><text x="39.8796%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="39.6296%" y="261" width="0.1481%" height="15" fill="rgb(212,160,3)" fg:x="535" fg:w="2"/><text x="39.8796%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="39.6296%" y="245" width="0.1481%" height="15" fill="rgb(216,5,50)" fg:x="535" fg:w="2"/><text x="39.8796%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="39.6296%" y="229" width="0.1481%" height="15" fill="rgb(241,138,25)" fg:x="535" fg:w="2"/><text x="39.8796%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="39.7778%" y="453" width="0.0741%" height="15" fill="rgb(239,42,18)" fg:x="537" fg:w="1"/><text x="40.0278%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="39.7778%" y="437" width="0.0741%" height="15" fill="rgb(239,40,7)" fg:x="537" fg:w="1"/><text x="40.0278%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="39.7778%" y="421" width="0.0741%" height="15" fill="rgb(239,11,31)" fg:x="537" fg:w="1"/><text x="40.0278%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="39.7778%" y="405" width="0.0741%" height="15" fill="rgb(224,77,40)" fg:x="537" fg:w="1"/><text x="40.0278%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.07%)</title><rect x="39.8519%" y="453" width="0.0741%" height="15" fill="rgb(226,15,5)" fg:x="538" fg:w="1"/><text x="40.1019%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="39.8519%" y="437" width="0.0741%" height="15" fill="rgb(254,188,5)" fg:x="538" fg:w="1"/><text x="40.1019%" y="447.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="39.9259%" y="453" width="0.0741%" height="15" fill="rgb(241,148,52)" fg:x="539" fg:w="1"/><text x="40.1759%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.30%)</title><rect x="39.7778%" y="469" width="0.2963%" height="15" fill="rgb(251,48,36)" fg:x="537" fg:w="4"/><text x="40.0278%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="40.0000%" y="453" width="0.0741%" height="15" fill="rgb(243,83,13)" fg:x="540" fg:w="1"/><text x="40.2500%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="40.0000%" y="437" width="0.0741%" height="15" fill="rgb(210,105,0)" fg:x="540" fg:w="1"/><text x="40.2500%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="40.0000%" y="421" width="0.0741%" height="15" fill="rgb(239,60,36)" fg:x="540" fg:w="1"/><text x="40.2500%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="40.0000%" y="405" width="0.0741%" height="15" fill="rgb(210,20,0)" fg:x="540" fg:w="1"/><text x="40.2500%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="40.0000%" y="389" width="0.0741%" height="15" fill="rgb(244,26,53)" fg:x="540" fg:w="1"/><text x="40.2500%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.07%)</title><rect x="40.0741%" y="469" width="0.0741%" height="15" fill="rgb(240,100,49)" fg:x="541" fg:w="1"/><text x="40.3241%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="40.0741%" y="453" width="0.0741%" height="15" fill="rgb(250,46,45)" fg:x="541" fg:w="1"/><text x="40.3241%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (8 samples, 0.59%)</title><rect x="39.6296%" y="517" width="0.5926%" height="15" fill="rgb(220,181,29)" fg:x="535" fg:w="8"/><text x="39.8796%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.59%)</title><rect x="39.6296%" y="501" width="0.5926%" height="15" fill="rgb(213,137,33)" fg:x="535" fg:w="8"/><text x="39.8796%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (6 samples, 0.44%)</title><rect x="39.7778%" y="485" width="0.4444%" height="15" fill="rgb(213,27,48)" fg:x="537" fg:w="6"/><text x="40.0278%" y="495.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.07%)</title><rect x="40.1481%" y="469" width="0.0741%" height="15" fill="rgb(245,180,39)" fg:x="542" fg:w="1"/><text x="40.3981%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.15%)</title><rect x="40.3704%" y="485" width="0.1481%" height="15" fill="rgb(212,158,42)" fg:x="545" fg:w="2"/><text x="40.6204%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="40.4444%" y="469" width="0.0741%" height="15" fill="rgb(228,193,18)" fg:x="546" fg:w="1"/><text x="40.6944%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (4 samples, 0.30%)</title><rect x="40.2963%" y="501" width="0.2963%" height="15" fill="rgb(245,172,29)" fg:x="544" fg:w="4"/><text x="40.5463%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="40.5185%" y="485" width="0.0741%" height="15" fill="rgb(207,98,24)" fg:x="547" fg:w="1"/><text x="40.7685%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="40.5185%" y="469" width="0.0741%" height="15" fill="rgb(249,92,26)" fg:x="547" fg:w="1"/><text x="40.7685%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="40.5185%" y="453" width="0.0741%" height="15" fill="rgb(217,176,26)" fg:x="547" fg:w="1"/><text x="40.7685%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (18 samples, 1.33%)</title><rect x="39.4074%" y="549" width="1.3333%" height="15" fill="rgb(221,8,39)" fg:x="532" fg:w="18"/><text x="39.6574%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (17 samples, 1.26%)</title><rect x="39.4815%" y="533" width="1.2593%" height="15" fill="rgb(208,90,18)" fg:x="533" fg:w="17"/><text x="39.7315%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (7 samples, 0.52%)</title><rect x="40.2222%" y="517" width="0.5185%" height="15" fill="rgb(207,202,30)" fg:x="543" fg:w="7"/><text x="40.4722%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.15%)</title><rect x="40.5926%" y="501" width="0.1481%" height="15" fill="rgb(231,124,22)" fg:x="548" fg:w="2"/><text x="40.8426%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="40.6667%" y="485" width="0.0741%" height="15" fill="rgb(206,15,5)" fg:x="549" fg:w="1"/><text x="40.9167%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.07%)</title><rect x="40.6667%" y="469" width="0.0741%" height="15" fill="rgb(239,16,52)" fg:x="549" fg:w="1"/><text x="40.9167%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.07%)</title><rect x="40.6667%" y="453" width="0.0741%" height="15" fill="rgb(245,213,29)" fg:x="549" fg:w="1"/><text x="40.9167%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="40.6667%" y="437" width="0.0741%" height="15" fill="rgb(213,203,36)" fg:x="549" fg:w="1"/><text x="40.9167%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.15%)</title><rect x="40.7407%" y="533" width="0.1481%" height="15" fill="rgb(209,55,18)" fg:x="550" fg:w="2"/><text x="40.9907%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="40.7407%" y="517" width="0.1481%" height="15" fill="rgb(207,133,49)" fg:x="550" fg:w="2"/><text x="40.9907%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="40.8148%" y="501" width="0.0741%" height="15" fill="rgb(240,33,46)" fg:x="551" fg:w="1"/><text x="41.0648%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.07%)</title><rect x="40.8148%" y="485" width="0.0741%" height="15" fill="rgb(212,35,2)" fg:x="551" fg:w="1"/><text x="41.0648%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.07%)</title><rect x="40.8148%" y="469" width="0.0741%" height="15" fill="rgb(231,119,28)" fg:x="551" fg:w="1"/><text x="41.0648%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.07%)</title><rect x="40.8148%" y="453" width="0.0741%" height="15" fill="rgb(252,178,7)" fg:x="551" fg:w="1"/><text x="41.0648%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (3 samples, 0.22%)</title><rect x="40.7407%" y="549" width="0.2222%" height="15" fill="rgb(251,91,4)" fg:x="550" fg:w="3"/><text x="40.9907%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.07%)</title><rect x="40.8889%" y="533" width="0.0741%" height="15" fill="rgb(233,122,19)" fg:x="552" fg:w="1"/><text x="41.1389%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.07%)</title><rect x="40.8889%" y="517" width="0.0741%" height="15" fill="rgb(231,208,46)" fg:x="552" fg:w="1"/><text x="41.1389%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="40.8889%" y="501" width="0.0741%" height="15" fill="rgb(243,15,41)" fg:x="552" fg:w="1"/><text x="41.1389%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.07%)</title><rect x="40.8889%" y="485" width="0.0741%" height="15" fill="rgb(210,32,43)" fg:x="552" fg:w="1"/><text x="41.1389%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.07%)</title><rect x="40.8889%" y="469" width="0.0741%" height="15" fill="rgb(222,177,15)" fg:x="552" fg:w="1"/><text x="41.1389%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="40.8889%" y="453" width="0.0741%" height="15" fill="rgb(244,121,34)" fg:x="552" fg:w="1"/><text x="41.1389%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="40.8889%" y="437" width="0.0741%" height="15" fill="rgb(234,138,4)" fg:x="552" fg:w="1"/><text x="41.1389%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.07%)</title><rect x="40.9630%" y="469" width="0.0741%" height="15" fill="rgb(240,97,48)" fg:x="553" fg:w="1"/><text x="41.2130%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="40.9630%" y="453" width="0.0741%" height="15" fill="rgb(237,65,54)" fg:x="553" fg:w="1"/><text x="41.2130%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="41.0370%" y="405" width="0.0741%" height="15" fill="rgb(214,25,24)" fg:x="554" fg:w="1"/><text x="41.2870%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="41.0370%" y="389" width="0.0741%" height="15" fill="rgb(213,5,3)" fg:x="554" fg:w="1"/><text x="41.2870%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.22%)</title><rect x="40.9630%" y="485" width="0.2222%" height="15" fill="rgb(219,81,29)" fg:x="553" fg:w="3"/><text x="41.2130%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="41.0370%" y="469" width="0.1481%" height="15" fill="rgb(220,43,48)" fg:x="554" fg:w="2"/><text x="41.2870%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="41.0370%" y="453" width="0.1481%" height="15" fill="rgb(239,157,2)" fg:x="554" fg:w="2"/><text x="41.2870%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="41.0370%" y="437" width="0.1481%" height="15" fill="rgb(213,104,43)" fg:x="554" fg:w="2"/><text x="41.2870%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="41.0370%" y="421" width="0.1481%" height="15" fill="rgb(237,84,9)" fg:x="554" fg:w="2"/><text x="41.2870%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="41.1111%" y="405" width="0.0741%" height="15" fill="rgb(252,6,33)" fg:x="555" fg:w="1"/><text x="41.3611%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="41.1111%" y="389" width="0.0741%" height="15" fill="rgb(251,172,22)" fg:x="555" fg:w="1"/><text x="41.3611%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="41.1111%" y="373" width="0.0741%" height="15" fill="rgb(244,91,53)" fg:x="555" fg:w="1"/><text x="41.3611%" y="383.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.30%)</title><rect x="40.9630%" y="501" width="0.2963%" height="15" fill="rgb(219,29,30)" fg:x="553" fg:w="4"/><text x="41.2130%" y="511.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.07%)</title><rect x="41.1852%" y="485" width="0.0741%" height="15" fill="rgb(213,3,15)" fg:x="556" fg:w="1"/><text x="41.4352%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="41.2593%" y="469" width="0.1481%" height="15" fill="rgb(208,25,28)" fg:x="557" fg:w="2"/><text x="41.5093%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="41.2593%" y="453" width="0.1481%" height="15" fill="rgb(252,144,25)" fg:x="557" fg:w="2"/><text x="41.5093%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="41.2593%" y="437" width="0.1481%" height="15" fill="rgb(226,220,25)" fg:x="557" fg:w="2"/><text x="41.5093%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (7 samples, 0.52%)</title><rect x="40.9630%" y="533" width="0.5185%" height="15" fill="rgb(212,131,28)" fg:x="553" fg:w="7"/><text x="41.2130%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.52%)</title><rect x="40.9630%" y="517" width="0.5185%" height="15" fill="rgb(219,143,52)" fg:x="553" fg:w="7"/><text x="41.2130%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.22%)</title><rect x="41.2593%" y="501" width="0.2222%" height="15" fill="rgb(215,56,7)" fg:x="557" fg:w="3"/><text x="41.5093%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.22%)</title><rect x="41.2593%" y="485" width="0.2222%" height="15" fill="rgb(239,59,51)" fg:x="557" fg:w="3"/><text x="41.5093%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="41.4074%" y="469" width="0.0741%" height="15" fill="rgb(209,215,4)" fg:x="559" fg:w="1"/><text x="41.6574%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.07%)</title><rect x="41.4815%" y="533" width="0.0741%" height="15" fill="rgb(221,118,39)" fg:x="560" fg:w="1"/><text x="41.7315%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.07%)</title><rect x="41.4815%" y="517" width="0.0741%" height="15" fill="rgb(236,6,44)" fg:x="560" fg:w="1"/><text x="41.7315%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.07%)</title><rect x="41.4815%" y="501" width="0.0741%" height="15" fill="rgb(216,122,9)" fg:x="560" fg:w="1"/><text x="41.7315%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="41.5556%" y="453" width="0.0741%" height="15" fill="rgb(244,134,42)" fg:x="561" fg:w="1"/><text x="41.8056%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="41.5556%" y="437" width="0.0741%" height="15" fill="rgb(209,189,35)" fg:x="561" fg:w="1"/><text x="41.8056%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="41.5556%" y="421" width="0.0741%" height="15" fill="rgb(250,47,36)" fg:x="561" fg:w="1"/><text x="41.8056%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="41.6296%" y="389" width="0.1481%" height="15" fill="rgb(252,112,4)" fg:x="562" fg:w="2"/><text x="41.8796%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="41.7037%" y="373" width="0.0741%" height="15" fill="rgb(221,79,51)" fg:x="563" fg:w="1"/><text x="41.9537%" y="383.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.30%)</title><rect x="41.5556%" y="485" width="0.2963%" height="15" fill="rgb(232,65,53)" fg:x="561" fg:w="4"/><text x="41.8056%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.30%)</title><rect x="41.5556%" y="469" width="0.2963%" height="15" fill="rgb(211,37,7)" fg:x="561" fg:w="4"/><text x="41.8056%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.22%)</title><rect x="41.6296%" y="453" width="0.2222%" height="15" fill="rgb(234,221,18)" fg:x="562" fg:w="3"/><text x="41.8796%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="41.6296%" y="437" width="0.2222%" height="15" fill="rgb(220,158,26)" fg:x="562" fg:w="3"/><text x="41.8796%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.22%)</title><rect x="41.6296%" y="421" width="0.2222%" height="15" fill="rgb(220,70,6)" fg:x="562" fg:w="3"/><text x="41.8796%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="41.6296%" y="405" width="0.2222%" height="15" fill="rgb(250,39,48)" fg:x="562" fg:w="3"/><text x="41.8796%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="41.7778%" y="389" width="0.0741%" height="15" fill="rgb(206,40,27)" fg:x="564" fg:w="1"/><text x="42.0278%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="41.7778%" y="373" width="0.0741%" height="15" fill="rgb(247,80,36)" fg:x="564" fg:w="1"/><text x="42.0278%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="41.7778%" y="357" width="0.0741%" height="15" fill="rgb(222,9,20)" fg:x="564" fg:w="1"/><text x="42.0278%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="41.7778%" y="341" width="0.0741%" height="15" fill="rgb(217,26,45)" fg:x="564" fg:w="1"/><text x="42.0278%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="41.8519%" y="453" width="0.0741%" height="15" fill="rgb(221,67,14)" fg:x="565" fg:w="1"/><text x="42.1019%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="41.8519%" y="437" width="0.0741%" height="15" fill="rgb(248,100,24)" fg:x="565" fg:w="1"/><text x="42.1019%" y="447.50"></text></g><g><title>plugins_core::tools::set_container (14 samples, 1.04%)</title><rect x="40.9630%" y="549" width="1.0370%" height="15" fill="rgb(230,187,16)" fg:x="553" fg:w="14"/><text x="41.2130%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.44%)</title><rect x="41.5556%" y="533" width="0.4444%" height="15" fill="rgb(205,108,13)" fg:x="561" fg:w="6"/><text x="41.8056%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.44%)</title><rect x="41.5556%" y="517" width="0.4444%" height="15" fill="rgb(235,71,51)" fg:x="561" fg:w="6"/><text x="41.8056%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.44%)</title><rect x="41.5556%" y="501" width="0.4444%" height="15" fill="rgb(251,172,48)" fg:x="561" fg:w="6"/><text x="41.8056%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="41.8519%" y="485" width="0.1481%" height="15" fill="rgb(240,96,49)" fg:x="565" fg:w="2"/><text x="42.1019%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.15%)</title><rect x="41.8519%" y="469" width="0.1481%" height="15" fill="rgb(235,46,36)" fg:x="565" fg:w="2"/><text x="42.1019%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="41.9259%" y="453" width="0.0741%" height="15" fill="rgb(244,3,49)" fg:x="566" fg:w="1"/><text x="42.1759%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="41.9259%" y="437" width="0.0741%" height="15" fill="rgb(206,78,54)" fg:x="566" fg:w="1"/><text x="42.1759%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="41.9259%" y="421" width="0.0741%" height="15" fill="rgb(208,85,42)" fg:x="566" fg:w="1"/><text x="42.1759%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="41.9259%" y="405" width="0.0741%" height="15" fill="rgb(219,196,21)" fg:x="566" fg:w="1"/><text x="42.1759%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="41.9259%" y="389" width="0.0741%" height="15" fill="rgb(238,19,9)" fg:x="566" fg:w="1"/><text x="42.1759%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (232 samples, 17.19%)</title><rect x="24.9630%" y="565" width="17.1852%" height="15" fill="rgb(206,86,13)" fg:x="337" fg:w="232"/><text x="25.2130%" y="575.50">plugins_core::build::BuildS..</text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.15%)</title><rect x="42.0000%" y="549" width="0.1481%" height="15" fill="rgb(214,123,40)" fg:x="567" fg:w="2"/><text x="42.2500%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.15%)</title><rect x="42.0000%" y="533" width="0.1481%" height="15" fill="rgb(243,53,5)" fg:x="567" fg:w="2"/><text x="42.2500%" y="543.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (2 samples, 0.15%)</title><rect x="42.0000%" y="517" width="0.1481%" height="15" fill="rgb(254,186,31)" fg:x="567" fg:w="2"/><text x="42.2500%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="42.0000%" y="501" width="0.1481%" height="15" fill="rgb(221,216,25)" fg:x="567" fg:w="2"/><text x="42.2500%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="42.0000%" y="485" width="0.1481%" height="15" fill="rgb(248,107,42)" fg:x="567" fg:w="2"/><text x="42.2500%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.07%)</title><rect x="42.1481%" y="533" width="0.0741%" height="15" fill="rgb(221,85,43)" fg:x="569" fg:w="1"/><text x="42.3981%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.07%)</title><rect x="42.1481%" y="517" width="0.0741%" height="15" fill="rgb(225,34,24)" fg:x="569" fg:w="1"/><text x="42.3981%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.07%)</title><rect x="42.1481%" y="501" width="0.0741%" height="15" fill="rgb(211,119,1)" fg:x="569" fg:w="1"/><text x="42.3981%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.07%)</title><rect x="42.1481%" y="485" width="0.0741%" height="15" fill="rgb(254,216,46)" fg:x="569" fg:w="1"/><text x="42.3981%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="42.1481%" y="469" width="0.0741%" height="15" fill="rgb(238,11,38)" fg:x="569" fg:w="1"/><text x="42.3981%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="42.1481%" y="453" width="0.0741%" height="15" fill="rgb(233,50,15)" fg:x="569" fg:w="1"/><text x="42.3981%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="42.1481%" y="437" width="0.0741%" height="15" fill="rgb(217,181,29)" fg:x="569" fg:w="1"/><text x="42.3981%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="42.1481%" y="421" width="0.0741%" height="15" fill="rgb(214,56,3)" fg:x="569" fg:w="1"/><text x="42.3981%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="42.1481%" y="405" width="0.0741%" height="15" fill="rgb(230,69,45)" fg:x="569" fg:w="1"/><text x="42.3981%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="42.1481%" y="389" width="0.0741%" height="15" fill="rgb(224,201,50)" fg:x="569" fg:w="1"/><text x="42.3981%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="42.1481%" y="373" width="0.0741%" height="15" fill="rgb(217,228,18)" fg:x="569" fg:w="1"/><text x="42.3981%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="42.1481%" y="357" width="0.0741%" height="15" fill="rgb(239,33,44)" fg:x="569" fg:w="1"/><text x="42.3981%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.15%)</title><rect x="42.2222%" y="517" width="0.1481%" height="15" fill="rgb(248,210,23)" fg:x="570" fg:w="2"/><text x="42.4722%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.15%)</title><rect x="42.2222%" y="501" width="0.1481%" height="15" fill="rgb(253,135,8)" fg:x="570" fg:w="2"/><text x="42.4722%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.07%)</title><rect x="42.2963%" y="485" width="0.0741%" height="15" fill="rgb(217,98,21)" fg:x="571" fg:w="1"/><text x="42.5463%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.07%)</title><rect x="42.2963%" y="469" width="0.0741%" height="15" fill="rgb(253,130,21)" fg:x="571" fg:w="1"/><text x="42.5463%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="42.2963%" y="453" width="0.0741%" height="15" fill="rgb(207,81,54)" fg:x="571" fg:w="1"/><text x="42.5463%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.07%)</title><rect x="42.2963%" y="437" width="0.0741%" height="15" fill="rgb(232,48,33)" fg:x="571" fg:w="1"/><text x="42.5463%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.07%)</title><rect x="42.2963%" y="421" width="0.0741%" height="15" fill="rgb(211,9,35)" fg:x="571" fg:w="1"/><text x="42.5463%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.07%)</title><rect x="42.2963%" y="405" width="0.0741%" height="15" fill="rgb(205,152,21)" fg:x="571" fg:w="1"/><text x="42.5463%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.07%)</title><rect x="42.2963%" y="389" width="0.0741%" height="15" fill="rgb(249,21,27)" fg:x="571" fg:w="1"/><text x="42.5463%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="42.3704%" y="517" width="0.0741%" height="15" fill="rgb(252,29,24)" fg:x="572" fg:w="1"/><text x="42.6204%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="42.3704%" y="501" width="0.0741%" height="15" fill="rgb(230,130,50)" fg:x="572" fg:w="1"/><text x="42.6204%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="42.3704%" y="485" width="0.0741%" height="15" fill="rgb(239,144,14)" fg:x="572" fg:w="1"/><text x="42.6204%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (5 samples, 0.37%)</title><rect x="42.1481%" y="565" width="0.3704%" height="15" fill="rgb(227,111,50)" fg:x="569" fg:w="5"/><text x="42.3981%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (5 samples, 0.37%)</title><rect x="42.1481%" y="549" width="0.3704%" height="15" fill="rgb(254,84,20)" fg:x="569" fg:w="5"/><text x="42.3981%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (4 samples, 0.30%)</title><rect x="42.2222%" y="533" width="0.2963%" height="15" fill="rgb(232,90,48)" fg:x="570" fg:w="4"/><text x="42.4722%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.07%)</title><rect x="42.4444%" y="517" width="0.0741%" height="15" fill="rgb(253,63,47)" fg:x="573" fg:w="1"/><text x="42.6944%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.07%)</title><rect x="42.4444%" y="501" width="0.0741%" height="15" fill="rgb(251,146,35)" fg:x="573" fg:w="1"/><text x="42.6944%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="42.4444%" y="485" width="0.0741%" height="15" fill="rgb(229,192,35)" fg:x="573" fg:w="1"/><text x="42.6944%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="42.4444%" y="469" width="0.0741%" height="15" fill="rgb(225,68,9)" fg:x="573" fg:w="1"/><text x="42.6944%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="42.4444%" y="453" width="0.0741%" height="15" fill="rgb(214,97,34)" fg:x="573" fg:w="1"/><text x="42.6944%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.07%)</title><rect x="42.5926%" y="533" width="0.0741%" height="15" fill="rgb(253,31,26)" fg:x="575" fg:w="1"/><text x="42.8426%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.07%)</title><rect x="42.5926%" y="517" width="0.0741%" height="15" fill="rgb(225,151,47)" fg:x="575" fg:w="1"/><text x="42.8426%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="42.5926%" y="501" width="0.0741%" height="15" fill="rgb(206,185,9)" fg:x="575" fg:w="1"/><text x="42.8426%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="42.5926%" y="485" width="0.0741%" height="15" fill="rgb(249,65,17)" fg:x="575" fg:w="1"/><text x="42.8426%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.07%)</title><rect x="42.5926%" y="469" width="0.0741%" height="15" fill="rgb(220,110,10)" fg:x="575" fg:w="1"/><text x="42.8426%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="42.6667%" y="533" width="0.0741%" height="15" fill="rgb(222,198,49)" fg:x="576" fg:w="1"/><text x="42.9167%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.07%)</title><rect x="42.7407%" y="533" width="0.0741%" height="15" fill="rgb(239,81,13)" fg:x="577" fg:w="1"/><text x="42.9907%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="42.7407%" y="517" width="0.0741%" height="15" fill="rgb(216,128,11)" fg:x="577" fg:w="1"/><text x="42.9907%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.07%)</title><rect x="42.8148%" y="533" width="0.0741%" height="15" fill="rgb(247,156,8)" fg:x="578" fg:w="1"/><text x="43.0648%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.07%)</title><rect x="42.8148%" y="517" width="0.0741%" height="15" fill="rgb(219,173,1)" fg:x="578" fg:w="1"/><text x="43.0648%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="42.8148%" y="501" width="0.0741%" height="15" fill="rgb(227,42,24)" fg:x="578" fg:w="1"/><text x="43.0648%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="42.9630%" y="437" width="0.0741%" height="15" fill="rgb(253,219,50)" fg:x="580" fg:w="1"/><text x="43.2130%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="42.9630%" y="421" width="0.0741%" height="15" fill="rgb(215,191,54)" fg:x="580" fg:w="1"/><text x="43.2130%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="42.9630%" y="405" width="0.0741%" height="15" fill="rgb(238,83,12)" fg:x="580" fg:w="1"/><text x="43.2130%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="43.0370%" y="373" width="0.0741%" height="15" fill="rgb(205,124,9)" fg:x="581" fg:w="1"/><text x="43.2870%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.30%)</title><rect x="42.9630%" y="453" width="0.2963%" height="15" fill="rgb(253,174,7)" fg:x="580" fg:w="4"/><text x="43.2130%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.22%)</title><rect x="43.0370%" y="437" width="0.2222%" height="15" fill="rgb(206,134,49)" fg:x="581" fg:w="3"/><text x="43.2870%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="43.0370%" y="421" width="0.2222%" height="15" fill="rgb(221,89,20)" fg:x="581" fg:w="3"/><text x="43.2870%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.22%)</title><rect x="43.0370%" y="405" width="0.2222%" height="15" fill="rgb(240,205,13)" fg:x="581" fg:w="3"/><text x="43.2870%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="43.0370%" y="389" width="0.2222%" height="15" fill="rgb(237,174,32)" fg:x="581" fg:w="3"/><text x="43.2870%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="43.1111%" y="373" width="0.1481%" height="15" fill="rgb(226,12,15)" fg:x="582" fg:w="2"/><text x="43.3611%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="43.1852%" y="357" width="0.0741%" height="15" fill="rgb(245,160,52)" fg:x="583" fg:w="1"/><text x="43.4352%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.07%)</title><rect x="43.2593%" y="453" width="0.0741%" height="15" fill="rgb(253,80,21)" fg:x="584" fg:w="1"/><text x="43.5093%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.07%)</title><rect x="43.2593%" y="437" width="0.0741%" height="15" fill="rgb(231,225,22)" fg:x="584" fg:w="1"/><text x="43.5093%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.07%)</title><rect x="43.2593%" y="421" width="0.0741%" height="15" fill="rgb(253,185,12)" fg:x="584" fg:w="1"/><text x="43.5093%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="43.2593%" y="405" width="0.0741%" height="15" fill="rgb(234,197,21)" fg:x="584" fg:w="1"/><text x="43.5093%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="43.2593%" y="389" width="0.0741%" height="15" fill="rgb(210,47,30)" fg:x="584" fg:w="1"/><text x="43.5093%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.44%)</title><rect x="42.9630%" y="485" width="0.4444%" height="15" fill="rgb(246,139,27)" fg:x="580" fg:w="6"/><text x="43.2130%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (6 samples, 0.44%)</title><rect x="42.9630%" y="469" width="0.4444%" height="15" fill="rgb(226,130,16)" fg:x="580" fg:w="6"/><text x="43.2130%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.07%)</title><rect x="43.3333%" y="453" width="0.0741%" height="15" fill="rgb(237,208,20)" fg:x="585" fg:w="1"/><text x="43.5833%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="43.3333%" y="437" width="0.0741%" height="15" fill="rgb(245,186,28)" fg:x="585" fg:w="1"/><text x="43.5833%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="43.3333%" y="421" width="0.0741%" height="15" fill="rgb(238,105,39)" fg:x="585" fg:w="1"/><text x="43.5833%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.07%)</title><rect x="43.3333%" y="405" width="0.0741%" height="15" fill="rgb(253,228,11)" fg:x="585" fg:w="1"/><text x="43.5833%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="43.3333%" y="389" width="0.0741%" height="15" fill="rgb(224,136,38)" fg:x="585" fg:w="1"/><text x="43.5833%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="43.4074%" y="453" width="0.1481%" height="15" fill="rgb(211,3,25)" fg:x="586" fg:w="2"/><text x="43.6574%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.67%)</title><rect x="42.9630%" y="501" width="0.6667%" height="15" fill="rgb(238,66,34)" fg:x="580" fg:w="9"/><text x="43.2130%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.22%)</title><rect x="43.4074%" y="485" width="0.2222%" height="15" fill="rgb(223,188,11)" fg:x="586" fg:w="3"/><text x="43.6574%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.22%)</title><rect x="43.4074%" y="469" width="0.2222%" height="15" fill="rgb(221,10,35)" fg:x="586" fg:w="3"/><text x="43.6574%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="43.5556%" y="453" width="0.0741%" height="15" fill="rgb(223,18,44)" fg:x="588" fg:w="1"/><text x="43.8056%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="43.5556%" y="437" width="0.0741%" height="15" fill="rgb(220,97,41)" fg:x="588" fg:w="1"/><text x="43.8056%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.74%)</title><rect x="42.9630%" y="517" width="0.7407%" height="15" fill="rgb(206,95,45)" fg:x="580" fg:w="10"/><text x="43.2130%" y="527.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.07%)</title><rect x="43.6296%" y="501" width="0.0741%" height="15" fill="rgb(209,96,13)" fg:x="589" fg:w="1"/><text x="43.8796%" y="511.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.07%)</title><rect x="43.6296%" y="485" width="0.0741%" height="15" fill="rgb(237,39,34)" fg:x="589" fg:w="1"/><text x="43.8796%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.07%)</title><rect x="43.6296%" y="469" width="0.0741%" height="15" fill="rgb(213,49,47)" fg:x="589" fg:w="1"/><text x="43.8796%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="43.7037%" y="501" width="0.0741%" height="15" fill="rgb(205,107,27)" fg:x="590" fg:w="1"/><text x="43.9537%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="43.7037%" y="485" width="0.0741%" height="15" fill="rgb(212,142,9)" fg:x="590" fg:w="1"/><text x="43.9537%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="43.7037%" y="469" width="0.0741%" height="15" fill="rgb(226,182,0)" fg:x="590" fg:w="1"/><text x="43.9537%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="43.7037%" y="453" width="0.0741%" height="15" fill="rgb(231,3,53)" fg:x="590" fg:w="1"/><text x="43.9537%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="43.7037%" y="437" width="0.0741%" height="15" fill="rgb(246,111,28)" fg:x="590" fg:w="1"/><text x="43.9537%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="43.7037%" y="421" width="0.0741%" height="15" fill="rgb(254,183,7)" fg:x="590" fg:w="1"/><text x="43.9537%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="43.7037%" y="405" width="0.0741%" height="15" fill="rgb(247,177,28)" fg:x="590" fg:w="1"/><text x="43.9537%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="43.7037%" y="389" width="0.0741%" height="15" fill="rgb(244,43,1)" fg:x="590" fg:w="1"/><text x="43.9537%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="43.7037%" y="373" width="0.0741%" height="15" fill="rgb(207,2,35)" fg:x="590" fg:w="1"/><text x="43.9537%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="43.7037%" y="357" width="0.0741%" height="15" fill="rgb(213,83,22)" fg:x="590" fg:w="1"/><text x="43.9537%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="43.7037%" y="341" width="0.0741%" height="15" fill="rgb(246,212,13)" fg:x="590" fg:w="1"/><text x="43.9537%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="43.7037%" y="325" width="0.0741%" height="15" fill="rgb(213,127,46)" fg:x="590" fg:w="1"/><text x="43.9537%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="43.7037%" y="309" width="0.0741%" height="15" fill="rgb(219,215,39)" fg:x="590" fg:w="1"/><text x="43.9537%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="43.7037%" y="293" width="0.0741%" height="15" fill="rgb(227,99,17)" fg:x="590" fg:w="1"/><text x="43.9537%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="43.7037%" y="277" width="0.0741%" height="15" fill="rgb(208,155,18)" fg:x="590" fg:w="1"/><text x="43.9537%" y="287.50"></text></g><g><title>plugins_core::build::Build::save (14 samples, 1.04%)</title><rect x="42.8889%" y="533" width="1.0370%" height="15" fill="rgb(223,204,38)" fg:x="579" fg:w="14"/><text x="43.1389%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.22%)</title><rect x="43.7037%" y="517" width="0.2222%" height="15" fill="rgb(212,114,21)" fg:x="590" fg:w="3"/><text x="43.9537%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="43.7778%" y="501" width="0.1481%" height="15" fill="rgb(250,74,13)" fg:x="591" fg:w="2"/><text x="44.0278%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="43.7778%" y="485" width="0.1481%" height="15" fill="rgb(234,7,1)" fg:x="591" fg:w="2"/><text x="44.0278%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="43.7778%" y="469" width="0.1481%" height="15" fill="rgb(207,138,31)" fg:x="591" fg:w="2"/><text x="44.0278%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="43.7778%" y="453" width="0.1481%" height="15" fill="rgb(215,186,42)" fg:x="591" fg:w="2"/><text x="44.0278%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="43.7778%" y="437" width="0.1481%" height="15" fill="rgb(229,205,49)" fg:x="591" fg:w="2"/><text x="44.0278%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="43.7778%" y="421" width="0.1481%" height="15" fill="rgb(216,156,32)" fg:x="591" fg:w="2"/><text x="44.0278%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="43.8519%" y="405" width="0.0741%" height="15" fill="rgb(238,7,21)" fg:x="592" fg:w="1"/><text x="44.1019%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="43.9259%" y="485" width="0.0741%" height="15" fill="rgb(249,190,22)" fg:x="593" fg:w="1"/><text x="44.1759%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (21 samples, 1.56%)</title><rect x="42.5185%" y="565" width="1.5556%" height="15" fill="rgb(253,51,31)" fg:x="574" fg:w="21"/><text x="42.7685%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (21 samples, 1.56%)</title><rect x="42.5185%" y="549" width="1.5556%" height="15" fill="rgb(237,90,54)" fg:x="574" fg:w="21"/><text x="42.7685%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (2 samples, 0.15%)</title><rect x="43.9259%" y="533" width="0.1481%" height="15" fill="rgb(250,214,33)" fg:x="593" fg:w="2"/><text x="44.1759%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.15%)</title><rect x="43.9259%" y="517" width="0.1481%" height="15" fill="rgb(237,10,49)" fg:x="593" fg:w="2"/><text x="44.1759%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.15%)</title><rect x="43.9259%" y="501" width="0.1481%" height="15" fill="rgb(241,56,36)" fg:x="593" fg:w="2"/><text x="44.1759%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="44.0000%" y="485" width="0.0741%" height="15" fill="rgb(227,164,12)" fg:x="594" fg:w="1"/><text x="44.2500%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.07%)</title><rect x="44.2222%" y="533" width="0.0741%" height="15" fill="rgb(249,149,35)" fg:x="597" fg:w="1"/><text x="44.4722%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="44.2222%" y="517" width="0.0741%" height="15" fill="rgb(238,227,50)" fg:x="597" fg:w="1"/><text x="44.4722%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="44.2222%" y="501" width="0.0741%" height="15" fill="rgb(235,102,45)" fg:x="597" fg:w="1"/><text x="44.4722%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="44.2222%" y="485" width="0.0741%" height="15" fill="rgb(211,10,38)" fg:x="597" fg:w="1"/><text x="44.4722%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="44.2963%" y="485" width="0.0741%" height="15" fill="rgb(219,77,48)" fg:x="598" fg:w="1"/><text x="44.5463%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="44.2963%" y="469" width="0.0741%" height="15" fill="rgb(246,6,15)" fg:x="598" fg:w="1"/><text x="44.5463%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="44.2963%" y="453" width="0.0741%" height="15" fill="rgb(207,220,2)" fg:x="598" fg:w="1"/><text x="44.5463%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.22%)</title><rect x="44.2222%" y="549" width="0.2222%" height="15" fill="rgb(242,48,14)" fg:x="597" fg:w="3"/><text x="44.4722%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.15%)</title><rect x="44.2963%" y="533" width="0.1481%" height="15" fill="rgb(218,19,27)" fg:x="598" fg:w="2"/><text x="44.5463%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="44.2963%" y="517" width="0.1481%" height="15" fill="rgb(228,0,35)" fg:x="598" fg:w="2"/><text x="44.5463%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.15%)</title><rect x="44.2963%" y="501" width="0.1481%" height="15" fill="rgb(244,142,54)" fg:x="598" fg:w="2"/><text x="44.5463%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.07%)</title><rect x="44.3704%" y="485" width="0.0741%" height="15" fill="rgb(243,217,40)" fg:x="599" fg:w="1"/><text x="44.6204%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="44.3704%" y="469" width="0.0741%" height="15" fill="rgb(207,114,16)" fg:x="599" fg:w="1"/><text x="44.6204%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="44.3704%" y="453" width="0.0741%" height="15" fill="rgb(224,33,25)" fg:x="599" fg:w="1"/><text x="44.6204%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="44.3704%" y="437" width="0.0741%" height="15" fill="rgb(230,93,54)" fg:x="599" fg:w="1"/><text x="44.6204%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="44.4444%" y="549" width="0.0741%" height="15" fill="rgb(224,56,24)" fg:x="600" fg:w="1"/><text x="44.6944%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="44.5185%" y="549" width="0.0741%" height="15" fill="rgb(235,189,50)" fg:x="601" fg:w="1"/><text x="44.7685%" y="559.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.07%)</title><rect x="44.5926%" y="549" width="0.0741%" height="15" fill="rgb(242,173,8)" fg:x="602" fg:w="1"/><text x="44.8426%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.07%)</title><rect x="44.5926%" y="533" width="0.0741%" height="15" fill="rgb(209,206,10)" fg:x="602" fg:w="1"/><text x="44.8426%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.07%)</title><rect x="44.5926%" y="517" width="0.0741%" height="15" fill="rgb(213,182,44)" fg:x="602" fg:w="1"/><text x="44.8426%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.07%)</title><rect x="44.5926%" y="501" width="0.0741%" height="15" fill="rgb(243,51,15)" fg:x="602" fg:w="1"/><text x="44.8426%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="44.7407%" y="533" width="0.0741%" height="15" fill="rgb(241,13,14)" fg:x="604" fg:w="1"/><text x="44.9907%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="44.7407%" y="517" width="0.0741%" height="15" fill="rgb(239,147,24)" fg:x="604" fg:w="1"/><text x="44.9907%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="44.7407%" y="501" width="0.0741%" height="15" fill="rgb(223,129,16)" fg:x="604" fg:w="1"/><text x="44.9907%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="44.7407%" y="485" width="0.0741%" height="15" fill="rgb(209,169,13)" fg:x="604" fg:w="1"/><text x="44.9907%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="44.7407%" y="469" width="0.0741%" height="15" fill="rgb(235,159,41)" fg:x="604" fg:w="1"/><text x="44.9907%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="44.7407%" y="453" width="0.0741%" height="15" fill="rgb(223,219,48)" fg:x="604" fg:w="1"/><text x="44.9907%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="44.7407%" y="437" width="0.0741%" height="15" fill="rgb(236,80,13)" fg:x="604" fg:w="1"/><text x="44.9907%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="44.7407%" y="421" width="0.0741%" height="15" fill="rgb(213,5,6)" fg:x="604" fg:w="1"/><text x="44.9907%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="44.7407%" y="405" width="0.0741%" height="15" fill="rgb(205,59,21)" fg:x="604" fg:w="1"/><text x="44.9907%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="44.7407%" y="389" width="0.0741%" height="15" fill="rgb(247,137,35)" fg:x="604" fg:w="1"/><text x="44.9907%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="44.7407%" y="373" width="0.0741%" height="15" fill="rgb(242,208,28)" fg:x="604" fg:w="1"/><text x="44.9907%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="44.7407%" y="357" width="0.0741%" height="15" fill="rgb(245,62,25)" fg:x="604" fg:w="1"/><text x="44.9907%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="44.8148%" y="501" width="0.0741%" height="15" fill="rgb(233,99,54)" fg:x="605" fg:w="1"/><text x="45.0648%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.15%)</title><rect x="44.8148%" y="517" width="0.1481%" height="15" fill="rgb(213,10,37)" fg:x="605" fg:w="2"/><text x="45.0648%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.07%)</title><rect x="44.8889%" y="501" width="0.0741%" height="15" fill="rgb(235,143,30)" fg:x="606" fg:w="1"/><text x="45.1389%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="45.0370%" y="453" width="0.0741%" height="15" fill="rgb(250,146,33)" fg:x="608" fg:w="1"/><text x="45.2870%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="45.0370%" y="437" width="0.0741%" height="15" fill="rgb(226,198,42)" fg:x="608" fg:w="1"/><text x="45.2870%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="45.1111%" y="421" width="0.0741%" height="15" fill="rgb(222,55,6)" fg:x="609" fg:w="1"/><text x="45.3611%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="45.1111%" y="405" width="0.0741%" height="15" fill="rgb(213,224,31)" fg:x="609" fg:w="1"/><text x="45.3611%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (5 samples, 0.37%)</title><rect x="44.9630%" y="469" width="0.3704%" height="15" fill="rgb(226,103,35)" fg:x="607" fg:w="5"/><text x="45.2130%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.22%)</title><rect x="45.1111%" y="453" width="0.2222%" height="15" fill="rgb(205,66,45)" fg:x="609" fg:w="3"/><text x="45.3611%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="45.1111%" y="437" width="0.2222%" height="15" fill="rgb(226,51,42)" fg:x="609" fg:w="3"/><text x="45.3611%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="45.1852%" y="421" width="0.1481%" height="15" fill="rgb(206,69,1)" fg:x="610" fg:w="2"/><text x="45.4352%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="45.1852%" y="405" width="0.1481%" height="15" fill="rgb(213,228,47)" fg:x="610" fg:w="2"/><text x="45.4352%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="45.2593%" y="389" width="0.0741%" height="15" fill="rgb(224,204,18)" fg:x="611" fg:w="1"/><text x="45.5093%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="45.2593%" y="373" width="0.0741%" height="15" fill="rgb(253,187,47)" fg:x="611" fg:w="1"/><text x="45.5093%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.44%)</title><rect x="44.9630%" y="501" width="0.4444%" height="15" fill="rgb(232,61,2)" fg:x="607" fg:w="6"/><text x="45.2130%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (6 samples, 0.44%)</title><rect x="44.9630%" y="485" width="0.4444%" height="15" fill="rgb(213,132,35)" fg:x="607" fg:w="6"/><text x="45.2130%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.07%)</title><rect x="45.3333%" y="469" width="0.0741%" height="15" fill="rgb(247,33,21)" fg:x="612" fg:w="1"/><text x="45.5833%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.07%)</title><rect x="45.3333%" y="453" width="0.0741%" height="15" fill="rgb(233,71,46)" fg:x="612" fg:w="1"/><text x="45.5833%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.07%)</title><rect x="45.3333%" y="437" width="0.0741%" height="15" fill="rgb(222,173,43)" fg:x="612" fg:w="1"/><text x="45.5833%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="45.3333%" y="421" width="0.0741%" height="15" fill="rgb(249,218,47)" fg:x="612" fg:w="1"/><text x="45.5833%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="45.4815%" y="469" width="0.0741%" height="15" fill="rgb(254,185,48)" fg:x="614" fg:w="1"/><text x="45.7315%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.07%)</title><rect x="45.5556%" y="469" width="0.0741%" height="15" fill="rgb(252,165,50)" fg:x="615" fg:w="1"/><text x="45.8056%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="45.5556%" y="453" width="0.0741%" height="15" fill="rgb(206,219,6)" fg:x="615" fg:w="1"/><text x="45.8056%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.89%)</title><rect x="44.8148%" y="533" width="0.8889%" height="15" fill="rgb(212,212,45)" fg:x="605" fg:w="12"/><text x="45.0648%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.74%)</title><rect x="44.9630%" y="517" width="0.7407%" height="15" fill="rgb(221,31,9)" fg:x="607" fg:w="10"/><text x="45.2130%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.30%)</title><rect x="45.4074%" y="501" width="0.2963%" height="15" fill="rgb(234,198,39)" fg:x="613" fg:w="4"/><text x="45.6574%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.30%)</title><rect x="45.4074%" y="485" width="0.2963%" height="15" fill="rgb(252,145,46)" fg:x="613" fg:w="4"/><text x="45.6574%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="45.6296%" y="469" width="0.0741%" height="15" fill="rgb(237,149,0)" fg:x="616" fg:w="1"/><text x="45.8796%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="45.7037%" y="533" width="0.1481%" height="15" fill="rgb(229,65,5)" fg:x="617" fg:w="2"/><text x="45.9537%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="45.7037%" y="517" width="0.1481%" height="15" fill="rgb(235,60,36)" fg:x="617" fg:w="2"/><text x="45.9537%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="45.7037%" y="501" width="0.1481%" height="15" fill="rgb(222,47,18)" fg:x="617" fg:w="2"/><text x="45.9537%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="45.7037%" y="485" width="0.1481%" height="15" fill="rgb(235,114,22)" fg:x="617" fg:w="2"/><text x="45.9537%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="45.7037%" y="469" width="0.1481%" height="15" fill="rgb(209,167,11)" fg:x="617" fg:w="2"/><text x="45.9537%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="45.7037%" y="453" width="0.1481%" height="15" fill="rgb(251,73,18)" fg:x="617" fg:w="2"/><text x="45.9537%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="45.7037%" y="437" width="0.1481%" height="15" fill="rgb(217,60,17)" fg:x="617" fg:w="2"/><text x="45.9537%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="45.7037%" y="421" width="0.1481%" height="15" fill="rgb(224,36,37)" fg:x="617" fg:w="2"/><text x="45.9537%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="45.7037%" y="405" width="0.1481%" height="15" fill="rgb(211,21,32)" fg:x="617" fg:w="2"/><text x="45.9537%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="45.7037%" y="389" width="0.1481%" height="15" fill="rgb(231,55,48)" fg:x="617" fg:w="2"/><text x="45.9537%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="45.7037%" y="373" width="0.1481%" height="15" fill="rgb(227,42,18)" fg:x="617" fg:w="2"/><text x="45.9537%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="45.7037%" y="357" width="0.1481%" height="15" fill="rgb(217,2,27)" fg:x="617" fg:w="2"/><text x="45.9537%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="45.7778%" y="341" width="0.0741%" height="15" fill="rgb(251,138,23)" fg:x="618" fg:w="1"/><text x="46.0278%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="45.8519%" y="533" width="0.0741%" height="15" fill="rgb(226,184,11)" fg:x="619" fg:w="1"/><text x="46.1019%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="46.0000%" y="517" width="0.0741%" height="15" fill="rgb(242,142,12)" fg:x="621" fg:w="1"/><text x="46.2500%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="46.0000%" y="501" width="0.0741%" height="15" fill="rgb(234,187,18)" fg:x="621" fg:w="1"/><text x="46.2500%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="46.0000%" y="485" width="0.0741%" height="15" fill="rgb(237,44,42)" fg:x="621" fg:w="1"/><text x="46.2500%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="46.0000%" y="469" width="0.0741%" height="15" fill="rgb(211,90,23)" fg:x="621" fg:w="1"/><text x="46.2500%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="46.0000%" y="453" width="0.0741%" height="15" fill="rgb(207,81,18)" fg:x="621" fg:w="1"/><text x="46.2500%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="46.0000%" y="437" width="0.0741%" height="15" fill="rgb(222,107,28)" fg:x="621" fg:w="1"/><text x="46.2500%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="46.0000%" y="421" width="0.0741%" height="15" fill="rgb(237,83,52)" fg:x="621" fg:w="1"/><text x="46.2500%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="46.0000%" y="405" width="0.0741%" height="15" fill="rgb(208,67,11)" fg:x="621" fg:w="1"/><text x="46.2500%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="46.0000%" y="389" width="0.0741%" height="15" fill="rgb(249,157,49)" fg:x="621" fg:w="1"/><text x="46.2500%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="46.0000%" y="373" width="0.0741%" height="15" fill="rgb(243,200,1)" fg:x="621" fg:w="1"/><text x="46.2500%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="46.0000%" y="357" width="0.0741%" height="15" fill="rgb(225,162,37)" fg:x="621" fg:w="1"/><text x="46.2500%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="46.0000%" y="341" width="0.0741%" height="15" fill="rgb(242,92,13)" fg:x="621" fg:w="1"/><text x="46.2500%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="46.0000%" y="325" width="0.0741%" height="15" fill="rgb(220,43,36)" fg:x="621" fg:w="1"/><text x="46.2500%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="46.0000%" y="309" width="0.0741%" height="15" fill="rgb(213,165,48)" fg:x="621" fg:w="1"/><text x="46.2500%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="46.0000%" y="293" width="0.0741%" height="15" fill="rgb(227,200,9)" fg:x="621" fg:w="1"/><text x="46.2500%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="46.0741%" y="517" width="0.0741%" height="15" fill="rgb(221,222,28)" fg:x="622" fg:w="1"/><text x="46.3241%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="46.1481%" y="485" width="0.0741%" height="15" fill="rgb(223,142,26)" fg:x="623" fg:w="1"/><text x="46.3981%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (458 samples, 33.93%)</title><rect x="12.4444%" y="581" width="33.9259%" height="15" fill="rgb(243,46,9)" fg:x="168" fg:w="458"/><text x="12.6944%" y="591.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::pre..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (31 samples, 2.30%)</title><rect x="44.0741%" y="565" width="2.2963%" height="15" fill="rgb(250,56,11)" fg:x="595" fg:w="31"/><text x="44.3241%" y="575.50">p..</text></g><g><title>plugins_core::build::Build::save (23 samples, 1.70%)</title><rect x="44.6667%" y="549" width="1.7037%" height="15" fill="rgb(229,113,5)" fg:x="603" fg:w="23"/><text x="44.9167%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (6 samples, 0.44%)</title><rect x="45.9259%" y="533" width="0.4444%" height="15" fill="rgb(244,108,28)" fg:x="620" fg:w="6"/><text x="46.1759%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.22%)</title><rect x="46.1481%" y="517" width="0.2222%" height="15" fill="rgb(242,119,50)" fg:x="623" fg:w="3"/><text x="46.3981%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="46.1481%" y="501" width="0.2222%" height="15" fill="rgb(224,164,23)" fg:x="623" fg:w="3"/><text x="46.3981%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="46.2222%" y="485" width="0.1481%" height="15" fill="rgb(214,227,44)" fg:x="624" fg:w="2"/><text x="46.4722%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="46.2222%" y="469" width="0.1481%" height="15" fill="rgb(238,202,4)" fg:x="624" fg:w="2"/><text x="46.4722%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="46.2222%" y="453" width="0.1481%" height="15" fill="rgb(213,190,30)" fg:x="624" fg:w="2"/><text x="46.4722%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="46.2222%" y="437" width="0.1481%" height="15" fill="rgb(239,15,2)" fg:x="624" fg:w="2"/><text x="46.4722%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="46.2963%" y="421" width="0.0741%" height="15" fill="rgb(249,229,4)" fg:x="625" fg:w="1"/><text x="46.5463%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="46.2963%" y="405" width="0.0741%" height="15" fill="rgb(239,75,44)" fg:x="625" fg:w="1"/><text x="46.5463%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.15%)</title><rect x="46.3704%" y="581" width="0.1481%" height="15" fill="rgb(251,206,23)" fg:x="626" fg:w="2"/><text x="46.6204%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.15%)</title><rect x="46.3704%" y="565" width="0.1481%" height="15" fill="rgb(215,208,0)" fg:x="626" fg:w="2"/><text x="46.6204%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.07%)</title><rect x="46.4444%" y="549" width="0.0741%" height="15" fill="rgb(230,75,50)" fg:x="627" fg:w="1"/><text x="46.6944%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="46.4444%" y="533" width="0.0741%" height="15" fill="rgb(246,180,39)" fg:x="627" fg:w="1"/><text x="46.6944%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="46.4444%" y="517" width="0.0741%" height="15" fill="rgb(249,175,24)" fg:x="627" fg:w="1"/><text x="46.6944%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.07%)</title><rect x="46.5185%" y="565" width="0.0741%" height="15" fill="rgb(247,176,22)" fg:x="628" fg:w="1"/><text x="46.7685%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.07%)</title><rect x="46.5185%" y="549" width="0.0741%" height="15" fill="rgb(241,100,24)" fg:x="628" fg:w="1"/><text x="46.7685%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="46.5185%" y="533" width="0.0741%" height="15" fill="rgb(233,4,35)" fg:x="628" fg:w="1"/><text x="46.7685%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.07%)</title><rect x="46.5185%" y="517" width="0.0741%" height="15" fill="rgb(211,164,46)" fg:x="628" fg:w="1"/><text x="46.7685%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.07%)</title><rect x="46.5185%" y="501" width="0.0741%" height="15" fill="rgb(242,99,53)" fg:x="628" fg:w="1"/><text x="46.7685%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.07%)</title><rect x="46.5185%" y="485" width="0.0741%" height="15" fill="rgb(243,45,33)" fg:x="628" fg:w="1"/><text x="46.7685%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.07%)</title><rect x="46.5185%" y="469" width="0.0741%" height="15" fill="rgb(217,55,21)" fg:x="628" fg:w="1"/><text x="46.7685%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="46.5185%" y="453" width="0.0741%" height="15" fill="rgb(245,145,46)" fg:x="628" fg:w="1"/><text x="46.7685%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.07%)</title><rect x="46.5185%" y="437" width="0.0741%" height="15" fill="rgb(215,112,45)" fg:x="628" fg:w="1"/><text x="46.7685%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.07%)</title><rect x="46.5926%" y="565" width="0.0741%" height="15" fill="rgb(228,104,16)" fg:x="629" fg:w="1"/><text x="46.8426%" y="575.50"></text></g><g><title>std::env::_var (1 samples, 0.07%)</title><rect x="46.5926%" y="549" width="0.0741%" height="15" fill="rgb(239,186,38)" fg:x="629" fg:w="1"/><text x="46.8426%" y="559.50"></text></g><g><title>std::env::var_os (1 samples, 0.07%)</title><rect x="46.5926%" y="533" width="0.0741%" height="15" fill="rgb(228,38,35)" fg:x="629" fg:w="1"/><text x="46.8426%" y="543.50"></text></g><g><title>std::env::_var_os (1 samples, 0.07%)</title><rect x="46.5926%" y="517" width="0.0741%" height="15" fill="rgb(251,42,40)" fg:x="629" fg:w="1"/><text x="46.8426%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.07%)</title><rect x="46.5926%" y="501" width="0.0741%" height="15" fill="rgb(210,51,19)" fg:x="629" fg:w="1"/><text x="46.8426%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.07%)</title><rect x="46.5926%" y="485" width="0.0741%" height="15" fill="rgb(236,94,42)" fg:x="629" fg:w="1"/><text x="46.8426%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.07%)</title><rect x="46.5926%" y="469" width="0.0741%" height="15" fill="rgb(239,167,16)" fg:x="629" fg:w="1"/><text x="46.8426%" y="479.50"></text></g><g><title>getenv (1 samples, 0.07%)</title><rect x="46.5926%" y="453" width="0.0741%" height="15" fill="rgb(252,175,31)" fg:x="629" fg:w="1"/><text x="46.8426%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.07%)</title><rect x="46.8148%" y="501" width="0.0741%" height="15" fill="rgb(206,166,30)" fg:x="632" fg:w="1"/><text x="47.0648%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="46.8148%" y="485" width="0.0741%" height="15" fill="rgb(206,209,37)" fg:x="632" fg:w="1"/><text x="47.0648%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="46.8148%" y="469" width="0.0741%" height="15" fill="rgb(226,91,4)" fg:x="632" fg:w="1"/><text x="47.0648%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="46.8148%" y="453" width="0.0741%" height="15" fill="rgb(222,167,0)" fg:x="632" fg:w="1"/><text x="47.0648%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="46.8148%" y="437" width="0.0741%" height="15" fill="rgb(211,70,14)" fg:x="632" fg:w="1"/><text x="47.0648%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="46.8148%" y="421" width="0.0741%" height="15" fill="rgb(214,84,42)" fg:x="632" fg:w="1"/><text x="47.0648%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="46.8148%" y="405" width="0.0741%" height="15" fill="rgb(235,157,37)" fg:x="632" fg:w="1"/><text x="47.0648%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="46.8148%" y="389" width="0.0741%" height="15" fill="rgb(225,13,6)" fg:x="632" fg:w="1"/><text x="47.0648%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="46.8148%" y="373" width="0.0741%" height="15" fill="rgb(205,202,1)" fg:x="632" fg:w="1"/><text x="47.0648%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="46.8148%" y="357" width="0.0741%" height="15" fill="rgb(232,195,26)" fg:x="632" fg:w="1"/><text x="47.0648%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="46.8148%" y="341" width="0.0741%" height="15" fill="rgb(208,102,26)" fg:x="632" fg:w="1"/><text x="47.0648%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="46.8148%" y="325" width="0.0741%" height="15" fill="rgb(215,41,39)" fg:x="632" fg:w="1"/><text x="47.0648%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="46.8148%" y="309" width="0.0741%" height="15" fill="rgb(247,139,11)" fg:x="632" fg:w="1"/><text x="47.0648%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.30%)</title><rect x="46.7407%" y="533" width="0.2963%" height="15" fill="rgb(243,99,6)" fg:x="631" fg:w="4"/><text x="46.9907%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.22%)</title><rect x="46.8148%" y="517" width="0.2222%" height="15" fill="rgb(230,168,48)" fg:x="632" fg:w="3"/><text x="47.0648%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="46.8889%" y="501" width="0.1481%" height="15" fill="rgb(238,227,13)" fg:x="633" fg:w="2"/><text x="47.1389%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="47.1852%" y="501" width="0.0741%" height="15" fill="rgb(209,109,13)" fg:x="637" fg:w="1"/><text x="47.4352%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="47.4815%" y="421" width="0.0741%" height="15" fill="rgb(228,195,1)" fg:x="641" fg:w="1"/><text x="47.7315%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="47.4815%" y="405" width="0.0741%" height="15" fill="rgb(230,218,0)" fg:x="641" fg:w="1"/><text x="47.7315%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.22%)</title><rect x="47.4815%" y="437" width="0.2222%" height="15" fill="rgb(206,1,45)" fg:x="641" fg:w="3"/><text x="47.7315%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="47.5556%" y="421" width="0.1481%" height="15" fill="rgb(209,124,26)" fg:x="642" fg:w="2"/><text x="47.8056%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="47.6296%" y="405" width="0.0741%" height="15" fill="rgb(220,59,8)" fg:x="643" fg:w="1"/><text x="47.8796%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="47.7037%" y="437" width="0.1481%" height="15" fill="rgb(251,41,37)" fg:x="644" fg:w="2"/><text x="47.9537%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="47.7778%" y="421" width="0.0741%" height="15" fill="rgb(239,152,21)" fg:x="645" fg:w="1"/><text x="48.0278%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="47.8519%" y="405" width="0.0741%" height="15" fill="rgb(226,32,1)" fg:x="646" fg:w="1"/><text x="48.1019%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="47.8519%" y="389" width="0.0741%" height="15" fill="rgb(230,154,36)" fg:x="646" fg:w="1"/><text x="48.1019%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.52%)</title><rect x="47.4815%" y="453" width="0.5185%" height="15" fill="rgb(208,228,43)" fg:x="641" fg:w="7"/><text x="47.7315%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.15%)</title><rect x="47.8519%" y="437" width="0.1481%" height="15" fill="rgb(214,203,3)" fg:x="646" fg:w="2"/><text x="48.1019%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="47.8519%" y="421" width="0.1481%" height="15" fill="rgb(207,149,29)" fg:x="646" fg:w="2"/><text x="48.1019%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="47.9259%" y="405" width="0.0741%" height="15" fill="rgb(250,105,7)" fg:x="647" fg:w="1"/><text x="48.1759%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="48.0000%" y="453" width="0.1481%" height="15" fill="rgb(232,222,16)" fg:x="648" fg:w="2"/><text x="48.2500%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.19%)</title><rect x="47.3333%" y="469" width="1.1852%" height="15" fill="rgb(209,32,24)" fg:x="639" fg:w="16"/><text x="47.5833%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.37%)</title><rect x="48.1481%" y="453" width="0.3704%" height="15" fill="rgb(225,13,6)" fg:x="650" fg:w="5"/><text x="48.3981%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="48.3704%" y="437" width="0.1481%" height="15" fill="rgb(245,226,26)" fg:x="653" fg:w="2"/><text x="48.6204%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="48.5185%" y="469" width="0.0741%" height="15" fill="rgb(229,178,27)" fg:x="655" fg:w="1"/><text x="48.7685%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.41%)</title><rect x="47.3333%" y="485" width="1.4074%" height="15" fill="rgb(205,227,28)" fg:x="639" fg:w="19"/><text x="47.5833%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="48.5926%" y="469" width="0.1481%" height="15" fill="rgb(210,191,45)" fg:x="656" fg:w="2"/><text x="48.8426%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.07%)</title><rect x="48.7407%" y="485" width="0.0741%" height="15" fill="rgb(206,124,16)" fg:x="658" fg:w="1"/><text x="48.9907%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.07%)</title><rect x="48.7407%" y="469" width="0.0741%" height="15" fill="rgb(210,162,0)" fg:x="658" fg:w="1"/><text x="48.9907%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="48.7407%" y="453" width="0.0741%" height="15" fill="rgb(211,54,38)" fg:x="658" fg:w="1"/><text x="48.9907%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.07%)</title><rect x="48.7407%" y="437" width="0.0741%" height="15" fill="rgb(248,192,3)" fg:x="658" fg:w="1"/><text x="48.9907%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="48.7407%" y="421" width="0.0741%" height="15" fill="rgb(233,187,18)" fg:x="658" fg:w="1"/><text x="48.9907%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="48.7407%" y="405" width="0.0741%" height="15" fill="rgb(237,208,14)" fg:x="658" fg:w="1"/><text x="48.9907%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="48.7407%" y="389" width="0.0741%" height="15" fill="rgb(212,77,1)" fg:x="658" fg:w="1"/><text x="48.9907%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="48.7407%" y="373" width="0.0741%" height="15" fill="rgb(210,163,22)" fg:x="658" fg:w="1"/><text x="48.9907%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.37%)</title><rect x="48.8148%" y="469" width="0.3704%" height="15" fill="rgb(250,58,28)" fg:x="659" fg:w="5"/><text x="49.0648%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.37%)</title><rect x="48.8148%" y="453" width="0.3704%" height="15" fill="rgb(254,28,41)" fg:x="659" fg:w="5"/><text x="49.0648%" y="463.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.37%)</title><rect x="48.8148%" y="437" width="0.3704%" height="15" fill="rgb(237,162,36)" fg:x="659" fg:w="5"/><text x="49.0648%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.30%)</title><rect x="48.8889%" y="421" width="0.2963%" height="15" fill="rgb(232,56,6)" fg:x="660" fg:w="4"/><text x="49.1389%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.22%)</title><rect x="48.9630%" y="405" width="0.2222%" height="15" fill="rgb(216,127,42)" fg:x="661" fg:w="3"/><text x="49.2130%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="49.1111%" y="389" width="0.0741%" height="15" fill="rgb(241,69,15)" fg:x="663" fg:w="1"/><text x="49.3611%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="49.1111%" y="373" width="0.0741%" height="15" fill="rgb(227,180,19)" fg:x="663" fg:w="1"/><text x="49.3611%" y="383.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="49.1111%" y="357" width="0.0741%" height="15" fill="rgb(231,188,29)" fg:x="663" fg:w="1"/><text x="49.3611%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="49.2593%" y="453" width="0.1481%" height="15" fill="rgb(224,176,27)" fg:x="665" fg:w="2"/><text x="49.5093%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.22%)</title><rect x="49.4074%" y="453" width="0.2222%" height="15" fill="rgb(249,214,19)" fg:x="667" fg:w="3"/><text x="49.6574%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.22%)</title><rect x="49.4074%" y="437" width="0.2222%" height="15" fill="rgb(240,0,4)" fg:x="667" fg:w="3"/><text x="49.6574%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="49.4815%" y="421" width="0.1481%" height="15" fill="rgb(233,28,41)" fg:x="668" fg:w="2"/><text x="49.7315%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="49.4815%" y="405" width="0.1481%" height="15" fill="rgb(220,90,51)" fg:x="668" fg:w="2"/><text x="49.7315%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="49.5556%" y="389" width="0.0741%" height="15" fill="rgb(250,52,22)" fg:x="669" fg:w="1"/><text x="49.8056%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="49.7037%" y="405" width="0.0741%" height="15" fill="rgb(231,152,36)" fg:x="671" fg:w="1"/><text x="49.9537%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="49.7037%" y="389" width="0.0741%" height="15" fill="rgb(250,218,4)" fg:x="671" fg:w="1"/><text x="49.9537%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="49.7037%" y="373" width="0.0741%" height="15" fill="rgb(210,38,21)" fg:x="671" fg:w="1"/><text x="49.9537%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="49.7037%" y="357" width="0.0741%" height="15" fill="rgb(230,75,13)" fg:x="671" fg:w="1"/><text x="49.9537%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.30%)</title><rect x="49.6296%" y="437" width="0.2963%" height="15" fill="rgb(250,68,53)" fg:x="670" fg:w="4"/><text x="49.8796%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.30%)</title><rect x="49.6296%" y="421" width="0.2963%" height="15" fill="rgb(250,210,16)" fg:x="670" fg:w="4"/><text x="49.8796%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.15%)</title><rect x="49.7778%" y="405" width="0.1481%" height="15" fill="rgb(240,132,5)" fg:x="672" fg:w="2"/><text x="50.0278%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="49.7778%" y="389" width="0.1481%" height="15" fill="rgb(222,148,48)" fg:x="672" fg:w="2"/><text x="50.0278%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="49.7778%" y="373" width="0.1481%" height="15" fill="rgb(247,181,24)" fg:x="672" fg:w="2"/><text x="50.0278%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="49.7778%" y="357" width="0.1481%" height="15" fill="rgb(239,5,31)" fg:x="672" fg:w="2"/><text x="50.0278%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="49.8519%" y="341" width="0.0741%" height="15" fill="rgb(241,152,38)" fg:x="673" fg:w="1"/><text x="50.1019%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.59%)</title><rect x="49.9259%" y="437" width="0.5926%" height="15" fill="rgb(246,200,37)" fg:x="674" fg:w="8"/><text x="50.1759%" y="447.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.52%)</title><rect x="50.0000%" y="421" width="0.5185%" height="15" fill="rgb(243,210,26)" fg:x="675" fg:w="7"/><text x="50.2500%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.30%)</title><rect x="50.2222%" y="405" width="0.2963%" height="15" fill="rgb(222,22,22)" fg:x="678" fg:w="4"/><text x="50.4722%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.22%)</title><rect x="50.2963%" y="389" width="0.2222%" height="15" fill="rgb(208,129,28)" fg:x="679" fg:w="3"/><text x="50.5463%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="50.4444%" y="373" width="0.0741%" height="15" fill="rgb(254,169,28)" fg:x="681" fg:w="1"/><text x="50.6944%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="50.4444%" y="357" width="0.0741%" height="15" fill="rgb(225,45,17)" fg:x="681" fg:w="1"/><text x="50.6944%" y="367.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="50.4444%" y="341" width="0.0741%" height="15" fill="rgb(232,199,2)" fg:x="681" fg:w="1"/><text x="50.6944%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="50.5185%" y="421" width="0.1481%" height="15" fill="rgb(235,33,40)" fg:x="682" fg:w="2"/><text x="50.7685%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="50.5926%" y="405" width="0.0741%" height="15" fill="rgb(237,89,50)" fg:x="683" fg:w="1"/><text x="50.8426%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="50.7407%" y="405" width="0.1481%" height="15" fill="rgb(238,126,5)" fg:x="685" fg:w="2"/><text x="50.9907%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="50.7407%" y="389" width="0.1481%" height="15" fill="rgb(247,214,42)" fg:x="685" fg:w="2"/><text x="50.9907%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="50.8148%" y="373" width="0.0741%" height="15" fill="rgb(238,60,45)" fg:x="686" fg:w="1"/><text x="51.0648%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.22%)</title><rect x="50.8889%" y="405" width="0.2222%" height="15" fill="rgb(225,69,44)" fg:x="687" fg:w="3"/><text x="51.1389%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="50.9630%" y="389" width="0.1481%" height="15" fill="rgb(241,13,44)" fg:x="688" fg:w="2"/><text x="51.2130%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="51.0370%" y="373" width="0.0741%" height="15" fill="rgb(227,121,22)" fg:x="689" fg:w="1"/><text x="51.2870%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="51.0370%" y="357" width="0.0741%" height="15" fill="rgb(231,160,23)" fg:x="689" fg:w="1"/><text x="51.2870%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="51.0370%" y="341" width="0.0741%" height="15" fill="rgb(250,179,43)" fg:x="689" fg:w="1"/><text x="51.2870%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.59%)</title><rect x="50.6667%" y="421" width="0.5926%" height="15" fill="rgb(233,54,46)" fg:x="684" fg:w="8"/><text x="50.9167%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="51.1111%" y="405" width="0.1481%" height="15" fill="rgb(247,120,42)" fg:x="690" fg:w="2"/><text x="51.3611%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="51.1111%" y="389" width="0.1481%" height="15" fill="rgb(221,219,12)" fg:x="690" fg:w="2"/><text x="51.3611%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.11%)</title><rect x="50.5185%" y="437" width="1.1111%" height="15" fill="rgb(211,126,8)" fg:x="682" fg:w="15"/><text x="50.7685%" y="447.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.37%)</title><rect x="51.2593%" y="421" width="0.3704%" height="15" fill="rgb(218,154,33)" fg:x="692" fg:w="5"/><text x="51.5093%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="51.4815%" y="405" width="0.1481%" height="15" fill="rgb(212,199,16)" fg:x="695" fg:w="2"/><text x="51.7315%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="51.4815%" y="389" width="0.1481%" height="15" fill="rgb(236,215,46)" fg:x="695" fg:w="2"/><text x="51.7315%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.22%)</title><rect x="49.6296%" y="453" width="2.2222%" height="15" fill="rgb(232,32,22)" fg:x="670" fg:w="30"/><text x="49.8796%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.22%)</title><rect x="51.6296%" y="437" width="0.2222%" height="15" fill="rgb(234,79,15)" fg:x="697" fg:w="3"/><text x="51.8796%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="51.7778%" y="421" width="0.0741%" height="15" fill="rgb(235,187,47)" fg:x="699" fg:w="1"/><text x="52.0278%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="51.7778%" y="405" width="0.0741%" height="15" fill="rgb(244,69,37)" fg:x="699" fg:w="1"/><text x="52.0278%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (41 samples, 3.04%)</title><rect x="49.1852%" y="469" width="3.0370%" height="15" fill="rgb(249,140,25)" fg:x="664" fg:w="41"/><text x="49.4352%" y="479.50">ser..</text></g><g><title>std::io::Write::write_all (5 samples, 0.37%)</title><rect x="51.8519%" y="453" width="0.3704%" height="15" fill="rgb(213,69,8)" fg:x="700" fg:w="5"/><text x="52.1019%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.22%)</title><rect x="52.0000%" y="437" width="0.2222%" height="15" fill="rgb(220,136,2)" fg:x="702" fg:w="3"/><text x="52.2500%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.22%)</title><rect x="52.0000%" y="421" width="0.2222%" height="15" fill="rgb(237,50,36)" fg:x="702" fg:w="3"/><text x="52.2500%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="52.1481%" y="405" width="0.0741%" height="15" fill="rgb(226,18,11)" fg:x="704" fg:w="1"/><text x="52.3981%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="52.1481%" y="389" width="0.0741%" height="15" fill="rgb(243,156,2)" fg:x="704" fg:w="1"/><text x="52.3981%" y="399.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="52.1481%" y="373" width="0.0741%" height="15" fill="rgb(218,8,34)" fg:x="704" fg:w="1"/><text x="52.3981%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (47 samples, 3.48%)</title><rect x="48.8148%" y="485" width="3.4815%" height="15" fill="rgb(250,94,35)" fg:x="659" fg:w="47"/><text x="49.0648%" y="495.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="52.2222%" y="469" width="0.0741%" height="15" fill="rgb(229,127,21)" fg:x="705" fg:w="1"/><text x="52.4722%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="52.2222%" y="453" width="0.0741%" height="15" fill="rgb(234,49,5)" fg:x="705" fg:w="1"/><text x="52.4722%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="52.2222%" y="437" width="0.0741%" height="15" fill="rgb(248,12,16)" fg:x="705" fg:w="1"/><text x="52.4722%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="52.2222%" y="421" width="0.0741%" height="15" fill="rgb(208,220,31)" fg:x="705" fg:w="1"/><text x="52.4722%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="52.2222%" y="405" width="0.0741%" height="15" fill="rgb(243,184,0)" fg:x="705" fg:w="1"/><text x="52.4722%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="52.2222%" y="389" width="0.0741%" height="15" fill="rgb(217,38,21)" fg:x="705" fg:w="1"/><text x="52.4722%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.22%)</title><rect x="52.3704%" y="421" width="0.2222%" height="15" fill="rgb(239,120,45)" fg:x="707" fg:w="3"/><text x="52.6204%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="52.6667%" y="405" width="0.1481%" height="15" fill="rgb(235,33,2)" fg:x="711" fg:w="2"/><text x="52.9167%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="52.8148%" y="405" width="0.0741%" height="15" fill="rgb(249,161,5)" fg:x="713" fg:w="1"/><text x="53.0648%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="52.8148%" y="389" width="0.0741%" height="15" fill="rgb(250,165,48)" fg:x="713" fg:w="1"/><text x="53.0648%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="52.9630%" y="389" width="0.1481%" height="15" fill="rgb(221,23,45)" fg:x="715" fg:w="2"/><text x="53.2130%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="53.1111%" y="389" width="0.0741%" height="15" fill="rgb(217,108,46)" fg:x="717" fg:w="1"/><text x="53.3611%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="53.2593%" y="373" width="0.1481%" height="15" fill="rgb(254,26,35)" fg:x="719" fg:w="2"/><text x="53.5093%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="53.4074%" y="341" width="0.0741%" height="15" fill="rgb(218,223,28)" fg:x="721" fg:w="1"/><text x="53.6574%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="53.4815%" y="341" width="0.0741%" height="15" fill="rgb(242,27,47)" fg:x="722" fg:w="1"/><text x="53.7315%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.30%)</title><rect x="53.4074%" y="373" width="0.2963%" height="15" fill="rgb(218,39,35)" fg:x="721" fg:w="4"/><text x="53.6574%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.30%)</title><rect x="53.4074%" y="357" width="0.2963%" height="15" fill="rgb(232,127,16)" fg:x="721" fg:w="4"/><text x="53.6574%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="53.5556%" y="341" width="0.1481%" height="15" fill="rgb(231,219,51)" fg:x="723" fg:w="2"/><text x="53.8056%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="53.6296%" y="325" width="0.0741%" height="15" fill="rgb(217,220,46)" fg:x="724" fg:w="1"/><text x="53.8796%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="53.6296%" y="309" width="0.0741%" height="15" fill="rgb(230,75,1)" fg:x="724" fg:w="1"/><text x="53.8796%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.48%)</title><rect x="52.3704%" y="453" width="1.4815%" height="15" fill="rgb(218,2,8)" fg:x="707" fg:w="20"/><text x="52.6204%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.48%)</title><rect x="52.3704%" y="437" width="1.4815%" height="15" fill="rgb(206,111,30)" fg:x="707" fg:w="20"/><text x="52.6204%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.26%)</title><rect x="52.5926%" y="421" width="1.2593%" height="15" fill="rgb(209,135,6)" fg:x="710" fg:w="17"/><text x="52.8426%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 0.96%)</title><rect x="52.8889%" y="405" width="0.9630%" height="15" fill="rgb(205,169,10)" fg:x="714" fg:w="13"/><text x="53.1389%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.67%)</title><rect x="53.1852%" y="389" width="0.6667%" height="15" fill="rgb(212,204,38)" fg:x="718" fg:w="9"/><text x="53.4352%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="53.7037%" y="373" width="0.1481%" height="15" fill="rgb(205,199,14)" fg:x="725" fg:w="2"/><text x="53.9537%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="53.7037%" y="357" width="0.1481%" height="15" fill="rgb(212,4,6)" fg:x="725" fg:w="2"/><text x="53.9537%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="53.7037%" y="341" width="0.1481%" height="15" fill="rgb(250,15,10)" fg:x="725" fg:w="2"/><text x="53.9537%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="53.8519%" y="453" width="0.0741%" height="15" fill="rgb(212,49,51)" fg:x="727" fg:w="1"/><text x="54.1019%" y="463.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.07%)</title><rect x="53.9259%" y="453" width="0.0741%" height="15" fill="rgb(235,21,9)" fg:x="728" fg:w="1"/><text x="54.1759%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="53.9259%" y="437" width="0.0741%" height="15" fill="rgb(251,31,32)" fg:x="728" fg:w="1"/><text x="54.1759%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="53.9259%" y="421" width="0.0741%" height="15" fill="rgb(246,23,9)" fg:x="728" fg:w="1"/><text x="54.1759%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="54.0000%" y="453" width="0.0741%" height="15" fill="rgb(225,216,14)" fg:x="729" fg:w="1"/><text x="54.2500%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.07%)</title><rect x="54.0741%" y="453" width="0.0741%" height="15" fill="rgb(215,200,26)" fg:x="730" fg:w="1"/><text x="54.3241%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="54.0741%" y="437" width="0.0741%" height="15" fill="rgb(237,130,47)" fg:x="730" fg:w="1"/><text x="54.3241%" y="447.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="54.0741%" y="421" width="0.0741%" height="15" fill="rgb(247,74,14)" fg:x="730" fg:w="1"/><text x="54.3241%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="54.0741%" y="405" width="0.0741%" height="15" fill="rgb(254,97,46)" fg:x="730" fg:w="1"/><text x="54.3241%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="54.0741%" y="389" width="0.0741%" height="15" fill="rgb(234,191,1)" fg:x="730" fg:w="1"/><text x="54.3241%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.22%)</title><rect x="54.5185%" y="389" width="0.2222%" height="15" fill="rgb(215,165,14)" fg:x="736" fg:w="3"/><text x="54.7685%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="54.6667%" y="373" width="0.0741%" height="15" fill="rgb(230,182,6)" fg:x="738" fg:w="1"/><text x="54.9167%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="54.6667%" y="357" width="0.0741%" height="15" fill="rgb(210,127,39)" fg:x="738" fg:w="1"/><text x="54.9167%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.22%)</title><rect x="54.7407%" y="389" width="0.2222%" height="15" fill="rgb(223,212,51)" fg:x="739" fg:w="3"/><text x="54.9907%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="54.8148%" y="373" width="0.1481%" height="15" fill="rgb(226,176,43)" fg:x="740" fg:w="2"/><text x="55.0648%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.96%)</title><rect x="54.1481%" y="437" width="0.9630%" height="15" fill="rgb(222,155,4)" fg:x="731" fg:w="13"/><text x="54.3981%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.96%)</title><rect x="54.1481%" y="421" width="0.9630%" height="15" fill="rgb(215,149,7)" fg:x="731" fg:w="13"/><text x="54.3981%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.81%)</title><rect x="54.2963%" y="405" width="0.8148%" height="15" fill="rgb(252,199,23)" fg:x="733" fg:w="11"/><text x="54.5463%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="54.9630%" y="389" width="0.1481%" height="15" fill="rgb(245,52,29)" fg:x="742" fg:w="2"/><text x="55.2130%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (40 samples, 2.96%)</title><rect x="52.2963%" y="469" width="2.9630%" height="15" fill="rgb(221,228,19)" fg:x="706" fg:w="40"/><text x="52.5463%" y="479.50">&lt;ke..</text></g><g><title>treediff::diff::diff (15 samples, 1.11%)</title><rect x="54.1481%" y="453" width="1.1111%" height="15" fill="rgb(253,101,6)" fg:x="731" fg:w="15"/><text x="54.3981%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.15%)</title><rect x="55.1111%" y="437" width="0.1481%" height="15" fill="rgb(211,130,8)" fg:x="744" fg:w="2"/><text x="55.3611%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="55.1111%" y="421" width="0.1481%" height="15" fill="rgb(238,37,53)" fg:x="744" fg:w="2"/><text x="55.3611%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="55.1111%" y="405" width="0.1481%" height="15" fill="rgb(235,145,5)" fg:x="744" fg:w="2"/><text x="55.3611%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="55.5556%" y="437" width="0.0741%" height="15" fill="rgb(244,12,43)" fg:x="750" fg:w="1"/><text x="55.8056%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="55.6296%" y="437" width="0.2963%" height="15" fill="rgb(246,195,24)" fg:x="751" fg:w="4"/><text x="55.8796%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.15%)</title><rect x="55.7778%" y="421" width="0.1481%" height="15" fill="rgb(235,163,6)" fg:x="753" fg:w="2"/><text x="56.0278%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.15%)</title><rect x="55.9259%" y="437" width="0.1481%" height="15" fill="rgb(236,218,17)" fg:x="755" fg:w="2"/><text x="56.1759%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="56.0000%" y="421" width="0.0741%" height="15" fill="rgb(235,12,38)" fg:x="756" fg:w="1"/><text x="56.2500%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="56.0000%" y="405" width="0.0741%" height="15" fill="rgb(225,195,33)" fg:x="756" fg:w="1"/><text x="56.2500%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.07%)</title><rect x="56.0741%" y="421" width="0.0741%" height="15" fill="rgb(238,54,35)" fg:x="757" fg:w="1"/><text x="56.3241%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.15%)</title><rect x="56.0741%" y="437" width="0.1481%" height="15" fill="rgb(238,33,7)" fg:x="757" fg:w="2"/><text x="56.3241%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="56.1481%" y="421" width="0.0741%" height="15" fill="rgb(245,5,14)" fg:x="758" fg:w="1"/><text x="56.3981%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="56.1481%" y="405" width="0.0741%" height="15" fill="rgb(251,95,31)" fg:x="758" fg:w="1"/><text x="56.3981%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.37%)</title><rect x="56.2222%" y="437" width="0.3704%" height="15" fill="rgb(222,15,46)" fg:x="759" fg:w="5"/><text x="56.4722%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.30%)</title><rect x="56.2963%" y="421" width="0.2963%" height="15" fill="rgb(226,182,24)" fg:x="760" fg:w="4"/><text x="56.5463%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.30%)</title><rect x="56.2963%" y="405" width="0.2963%" height="15" fill="rgb(229,105,41)" fg:x="760" fg:w="4"/><text x="56.5463%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.52%)</title><rect x="56.8148%" y="389" width="0.5185%" height="15" fill="rgb(216,99,53)" fg:x="767" fg:w="7"/><text x="57.0648%" y="399.50"></text></g><g><title>__libc_malloc (5 samples, 0.37%)</title><rect x="56.9630%" y="373" width="0.3704%" height="15" fill="rgb(253,26,20)" fg:x="769" fg:w="5"/><text x="57.2130%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.07%)</title><rect x="57.4074%" y="357" width="0.0741%" height="15" fill="rgb(249,155,28)" fg:x="775" fg:w="1"/><text x="57.6574%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="57.4815%" y="341" width="0.1481%" height="15" fill="rgb(241,221,2)" fg:x="776" fg:w="2"/><text x="57.7315%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="57.5556%" y="325" width="0.0741%" height="15" fill="rgb(219,124,6)" fg:x="777" fg:w="1"/><text x="57.8056%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="57.7037%" y="325" width="0.0741%" height="15" fill="rgb(233,37,6)" fg:x="779" fg:w="1"/><text x="57.9537%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="57.7037%" y="309" width="0.0741%" height="15" fill="rgb(238,20,14)" fg:x="779" fg:w="1"/><text x="57.9537%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="57.7037%" y="293" width="0.0741%" height="15" fill="rgb(232,106,27)" fg:x="779" fg:w="1"/><text x="57.9537%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="57.7037%" y="277" width="0.0741%" height="15" fill="rgb(246,157,24)" fg:x="779" fg:w="1"/><text x="57.9537%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.37%)</title><rect x="57.4815%" y="357" width="0.3704%" height="15" fill="rgb(214,153,10)" fg:x="776" fg:w="5"/><text x="57.7315%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.22%)</title><rect x="57.6296%" y="341" width="0.2222%" height="15" fill="rgb(212,94,6)" fg:x="778" fg:w="3"/><text x="57.8796%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="57.7778%" y="325" width="0.0741%" height="15" fill="rgb(254,25,27)" fg:x="780" fg:w="1"/><text x="58.0278%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.59%)</title><rect x="57.3333%" y="389" width="0.5926%" height="15" fill="rgb(250,43,52)" fg:x="774" fg:w="8"/><text x="57.5833%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.59%)</title><rect x="57.3333%" y="373" width="0.5926%" height="15" fill="rgb(221,226,40)" fg:x="774" fg:w="8"/><text x="57.5833%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="57.8519%" y="357" width="0.0741%" height="15" fill="rgb(235,162,34)" fg:x="781" fg:w="1"/><text x="58.1019%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.07%)</title><rect x="58.0741%" y="373" width="0.0741%" height="15" fill="rgb(239,24,26)" fg:x="784" fg:w="1"/><text x="58.3241%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="58.4444%" y="357" width="0.1481%" height="15" fill="rgb(244,226,11)" fg:x="789" fg:w="2"/><text x="58.6944%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="58.5185%" y="341" width="0.0741%" height="15" fill="rgb(225,23,10)" fg:x="790" fg:w="1"/><text x="58.7685%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.37%)</title><rect x="58.7407%" y="325" width="0.3704%" height="15" fill="rgb(249,125,6)" fg:x="793" fg:w="5"/><text x="58.9907%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.22%)</title><rect x="58.8889%" y="309" width="0.2222%" height="15" fill="rgb(246,212,12)" fg:x="795" fg:w="3"/><text x="59.1389%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.52%)</title><rect x="58.6667%" y="341" width="0.5185%" height="15" fill="rgb(230,43,32)" fg:x="792" fg:w="7"/><text x="58.9167%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="59.1111%" y="325" width="0.0741%" height="15" fill="rgb(210,95,23)" fg:x="798" fg:w="1"/><text x="59.3611%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.11%)</title><rect x="58.1481%" y="373" width="1.1111%" height="15" fill="rgb(229,103,33)" fg:x="785" fg:w="15"/><text x="58.3981%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.67%)</title><rect x="58.5926%" y="357" width="0.6667%" height="15" fill="rgb(222,104,27)" fg:x="791" fg:w="9"/><text x="58.8426%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="59.1852%" y="341" width="0.0741%" height="15" fill="rgb(239,221,23)" fg:x="799" fg:w="1"/><text x="59.4352%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (35 samples, 2.59%)</title><rect x="56.7407%" y="405" width="2.5926%" height="15" fill="rgb(222,98,21)" fg:x="766" fg:w="35"/><text x="56.9907%" y="415.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.41%)</title><rect x="57.9259%" y="389" width="1.4074%" height="15" fill="rgb(231,101,20)" fg:x="782" fg:w="19"/><text x="58.1759%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="59.2593%" y="373" width="0.0741%" height="15" fill="rgb(215,150,22)" fg:x="800" fg:w="1"/><text x="59.5093%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (38 samples, 2.81%)</title><rect x="56.6667%" y="421" width="2.8148%" height="15" fill="rgb(248,3,34)" fg:x="765" fg:w="38"/><text x="56.9167%" y="431.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.15%)</title><rect x="59.3333%" y="405" width="0.1481%" height="15" fill="rgb(220,141,21)" fg:x="801" fg:w="2"/><text x="59.5833%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="59.4074%" y="389" width="0.0741%" height="15" fill="rgb(223,41,48)" fg:x="802" fg:w="1"/><text x="59.6574%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (59 samples, 4.37%)</title><rect x="55.2593%" y="469" width="4.3704%" height="15" fill="rgb(247,12,5)" fg:x="746" fg:w="59"/><text x="55.5093%" y="479.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (59 samples, 4.37%)</title><rect x="55.2593%" y="453" width="4.3704%" height="15" fill="rgb(206,173,10)" fg:x="746" fg:w="59"/><text x="55.5093%" y="463.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (41 samples, 3.04%)</title><rect x="56.5926%" y="437" width="3.0370%" height="15" fill="rgb(233,214,37)" fg:x="764" fg:w="41"/><text x="56.8426%" y="447.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="59.4815%" y="421" width="0.1481%" height="15" fill="rgb(238,86,43)" fg:x="803" fg:w="2"/><text x="59.7315%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="59.5556%" y="405" width="0.0741%" height="15" fill="rgb(212,182,8)" fg:x="804" fg:w="1"/><text x="59.8056%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="60.0741%" y="293" width="0.0741%" height="15" fill="rgb(240,91,47)" fg:x="811" fg:w="1"/><text x="60.3241%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="60.0741%" y="277" width="0.0741%" height="15" fill="rgb(209,138,26)" fg:x="811" fg:w="1"/><text x="60.3241%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="60.0741%" y="325" width="0.1481%" height="15" fill="rgb(231,163,20)" fg:x="811" fg:w="2"/><text x="60.3241%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="60.0741%" y="309" width="0.1481%" height="15" fill="rgb(214,91,54)" fg:x="811" fg:w="2"/><text x="60.3241%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="60.1481%" y="293" width="0.0741%" height="15" fill="rgb(230,32,17)" fg:x="812" fg:w="1"/><text x="60.3981%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="60.4444%" y="277" width="0.0741%" height="15" fill="rgb(231,34,34)" fg:x="816" fg:w="1"/><text x="60.6944%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="60.4444%" y="261" width="0.0741%" height="15" fill="rgb(224,228,27)" fg:x="816" fg:w="1"/><text x="60.6944%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.44%)</title><rect x="60.2222%" y="309" width="0.4444%" height="15" fill="rgb(219,35,40)" fg:x="813" fg:w="6"/><text x="60.4722%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.30%)</title><rect x="60.3704%" y="293" width="0.2963%" height="15" fill="rgb(234,42,8)" fg:x="815" fg:w="4"/><text x="60.6204%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="60.5185%" y="277" width="0.1481%" height="15" fill="rgb(226,75,22)" fg:x="817" fg:w="2"/><text x="60.7685%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="60.5185%" y="261" width="0.1481%" height="15" fill="rgb(242,203,28)" fg:x="817" fg:w="2"/><text x="60.7685%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="60.6667%" y="293" width="0.0741%" height="15" fill="rgb(221,3,9)" fg:x="819" fg:w="1"/><text x="60.9167%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="60.6667%" y="309" width="0.1481%" height="15" fill="rgb(214,34,31)" fg:x="819" fg:w="2"/><text x="60.9167%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="60.7407%" y="293" width="0.0741%" height="15" fill="rgb(252,119,15)" fg:x="820" fg:w="1"/><text x="60.9907%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.67%)</title><rect x="60.2222%" y="325" width="0.6667%" height="15" fill="rgb(244,224,31)" fg:x="813" fg:w="9"/><text x="60.4722%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="60.8148%" y="309" width="0.0741%" height="15" fill="rgb(215,8,51)" fg:x="821" fg:w="1"/><text x="61.0648%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.96%)</title><rect x="60.0000%" y="341" width="0.9630%" height="15" fill="rgb(207,24,1)" fg:x="810" fg:w="13"/><text x="60.2500%" y="351.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.07%)</title><rect x="60.8889%" y="325" width="0.0741%" height="15" fill="rgb(245,90,0)" fg:x="822" fg:w="1"/><text x="61.1389%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.22%)</title><rect x="60.9630%" y="341" width="0.2222%" height="15" fill="rgb(246,43,48)" fg:x="823" fg:w="3"/><text x="61.2130%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="61.1111%" y="325" width="0.0741%" height="15" fill="rgb(252,218,10)" fg:x="825" fg:w="1"/><text x="61.3611%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.41%)</title><rect x="59.8519%" y="373" width="1.4074%" height="15" fill="rgb(231,24,35)" fg:x="808" fg:w="19"/><text x="60.1019%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.33%)</title><rect x="59.9259%" y="357" width="1.3333%" height="15" fill="rgb(225,66,19)" fg:x="809" fg:w="18"/><text x="60.1759%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="61.1852%" y="341" width="0.0741%" height="15" fill="rgb(214,96,51)" fg:x="826" fg:w="1"/><text x="61.4352%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="61.1852%" y="325" width="0.0741%" height="15" fill="rgb(251,151,47)" fg:x="826" fg:w="1"/><text x="61.4352%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="61.1852%" y="309" width="0.0741%" height="15" fill="rgb(236,79,14)" fg:x="826" fg:w="1"/><text x="61.4352%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.15%)</title><rect x="61.4815%" y="357" width="0.1481%" height="15" fill="rgb(210,205,11)" fg:x="830" fg:w="2"/><text x="61.7315%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (10 samples, 0.74%)</title><rect x="61.2593%" y="373" width="0.7407%" height="15" fill="rgb(233,142,53)" fg:x="827" fg:w="10"/><text x="61.5093%" y="383.50"></text></g><g><title>__libc_malloc (5 samples, 0.37%)</title><rect x="61.6296%" y="357" width="0.3704%" height="15" fill="rgb(212,116,48)" fg:x="832" fg:w="5"/><text x="61.8796%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.37%)</title><rect x="59.7037%" y="405" width="2.3704%" height="15" fill="rgb(234,55,33)" fg:x="806" fg:w="32"/><text x="59.9537%" y="415.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.37%)</title><rect x="59.7037%" y="389" width="2.3704%" height="15" fill="rgb(253,92,27)" fg:x="806" fg:w="32"/><text x="59.9537%" y="399.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="62.0000%" y="373" width="0.0741%" height="15" fill="rgb(220,7,35)" fg:x="837" fg:w="1"/><text x="62.2500%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="62.0000%" y="357" width="0.0741%" height="15" fill="rgb(246,124,6)" fg:x="837" fg:w="1"/><text x="62.2500%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="62.0000%" y="341" width="0.0741%" height="15" fill="rgb(212,111,51)" fg:x="837" fg:w="1"/><text x="62.2500%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="62.0741%" y="405" width="0.1481%" height="15" fill="rgb(253,116,7)" fg:x="838" fg:w="2"/><text x="62.3241%" y="415.50"></text></g><g><title>engine::session::state::State::close (212 samples, 15.70%)</title><rect x="46.6667%" y="565" width="15.7037%" height="15" fill="rgb(213,145,18)" fg:x="630" fg:w="212"/><text x="46.9167%" y="575.50">engine::session::state::..</text></g><g><title>engine::session::state::State::flush_entities (211 samples, 15.63%)</title><rect x="46.7407%" y="549" width="15.6296%" height="15" fill="rgb(219,149,7)" fg:x="631" fg:w="211"/><text x="46.9907%" y="559.50">engine::session::state::..</text></g><g><title>core::iter::adapters::try_process (207 samples, 15.33%)</title><rect x="47.0370%" y="533" width="15.3333%" height="15" fill="rgb(225,156,20)" fg:x="635" fg:w="207"/><text x="47.2870%" y="543.50">core::iter::adapters::t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (207 samples, 15.33%)</title><rect x="47.0370%" y="517" width="15.3333%" height="15" fill="rgb(211,98,19)" fg:x="635" fg:w="207"/><text x="47.2870%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as ..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (204 samples, 15.11%)</title><rect x="47.2593%" y="501" width="15.1111%" height="15" fill="rgb(231,192,31)" fg:x="638" fg:w="204"/><text x="47.5093%" y="511.50">engine::session::state:..</text></g><g><title>kernel::model::any_entity_changes (136 samples, 10.07%)</title><rect x="52.2963%" y="485" width="10.0741%" height="15" fill="rgb(249,95,19)" fg:x="706" fg:w="136"/><text x="52.5463%" y="495.50">kernel::model::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (37 samples, 2.74%)</title><rect x="59.6296%" y="469" width="2.7407%" height="15" fill="rgb(247,101,36)" fg:x="805" fg:w="37"/><text x="59.8796%" y="479.50">se..</text></g><g><title>serde_json::de::from_trait (37 samples, 2.74%)</title><rect x="59.6296%" y="453" width="2.7407%" height="15" fill="rgb(221,45,43)" fg:x="805" fg:w="37"/><text x="59.8796%" y="463.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (37 samples, 2.74%)</title><rect x="59.6296%" y="437" width="2.7407%" height="15" fill="rgb(220,42,1)" fg:x="805" fg:w="37"/><text x="59.8796%" y="447.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (36 samples, 2.67%)</title><rect x="59.7037%" y="421" width="2.6667%" height="15" fill="rgb(236,19,24)" fg:x="806" fg:w="36"/><text x="59.9537%" y="431.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="62.2222%" y="405" width="0.1481%" height="15" fill="rgb(225,192,6)" fg:x="840" fg:w="2"/><text x="62.4722%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="62.2963%" y="389" width="0.0741%" height="15" fill="rgb(242,30,19)" fg:x="841" fg:w="1"/><text x="62.5463%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="62.2963%" y="373" width="0.0741%" height="15" fill="rgb(240,36,6)" fg:x="841" fg:w="1"/><text x="62.5463%" y="383.50"></text></g><g><title>engine::session::Session::close (216 samples, 16.00%)</title><rect x="46.5185%" y="581" width="16.0000%" height="15" fill="rgb(246,40,28)" fg:x="628" fg:w="216"/><text x="46.7685%" y="591.50">engine::session::Session:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.15%)</title><rect x="62.3704%" y="565" width="0.1481%" height="15" fill="rgb(225,155,33)" fg:x="842" fg:w="2"/><text x="62.6204%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="62.5926%" y="517" width="0.1481%" height="15" fill="rgb(240,65,18)" fg:x="845" fg:w="2"/><text x="62.8426%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="62.6667%" y="501" width="0.0741%" height="15" fill="rgb(217,0,48)" fg:x="846" fg:w="1"/><text x="62.9167%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="62.6667%" y="485" width="0.0741%" height="15" fill="rgb(217,80,15)" fg:x="846" fg:w="1"/><text x="62.9167%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="62.6667%" y="469" width="0.0741%" height="15" fill="rgb(253,43,51)" fg:x="846" fg:w="1"/><text x="62.9167%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="62.6667%" y="453" width="0.0741%" height="15" fill="rgb(246,60,4)" fg:x="846" fg:w="1"/><text x="62.9167%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="62.6667%" y="437" width="0.0741%" height="15" fill="rgb(230,40,54)" fg:x="846" fg:w="1"/><text x="62.9167%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="62.6667%" y="421" width="0.0741%" height="15" fill="rgb(208,20,44)" fg:x="846" fg:w="1"/><text x="62.9167%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="62.6667%" y="405" width="0.0741%" height="15" fill="rgb(230,22,22)" fg:x="846" fg:w="1"/><text x="62.9167%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="62.6667%" y="389" width="0.0741%" height="15" fill="rgb(207,57,4)" fg:x="846" fg:w="1"/><text x="62.9167%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="62.6667%" y="373" width="0.0741%" height="15" fill="rgb(242,130,33)" fg:x="846" fg:w="1"/><text x="62.9167%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="62.6667%" y="357" width="0.0741%" height="15" fill="rgb(218,66,43)" fg:x="846" fg:w="1"/><text x="62.9167%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="62.6667%" y="341" width="0.0741%" height="15" fill="rgb(236,105,16)" fg:x="846" fg:w="1"/><text x="62.9167%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="62.6667%" y="325" width="0.0741%" height="15" fill="rgb(230,46,15)" fg:x="846" fg:w="1"/><text x="62.9167%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="62.7407%" y="517" width="0.0741%" height="15" fill="rgb(251,172,40)" fg:x="847" fg:w="1"/><text x="62.9907%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="62.7407%" y="501" width="0.0741%" height="15" fill="rgb(225,217,32)" fg:x="847" fg:w="1"/><text x="62.9907%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.37%)</title><rect x="62.5926%" y="533" width="0.3704%" height="15" fill="rgb(243,10,29)" fg:x="845" fg:w="5"/><text x="62.8426%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="62.8148%" y="517" width="0.1481%" height="15" fill="rgb(207,102,10)" fg:x="848" fg:w="2"/><text x="63.0648%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="62.8148%" y="501" width="0.1481%" height="15" fill="rgb(241,125,5)" fg:x="848" fg:w="2"/><text x="63.0648%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="62.8889%" y="485" width="0.0741%" height="15" fill="rgb(230,125,29)" fg:x="849" fg:w="1"/><text x="63.1389%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="62.8889%" y="469" width="0.0741%" height="15" fill="rgb(223,65,44)" fg:x="849" fg:w="1"/><text x="63.1389%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="62.8889%" y="453" width="0.0741%" height="15" fill="rgb(224,188,28)" fg:x="849" fg:w="1"/><text x="63.1389%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="62.8889%" y="437" width="0.0741%" height="15" fill="rgb(254,197,27)" fg:x="849" fg:w="1"/><text x="63.1389%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (6 samples, 0.44%)</title><rect x="62.5926%" y="549" width="0.4444%" height="15" fill="rgb(220,200,25)" fg:x="845" fg:w="6"/><text x="62.8426%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="62.9630%" y="533" width="0.0741%" height="15" fill="rgb(239,225,54)" fg:x="850" fg:w="1"/><text x="63.2130%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="62.9630%" y="517" width="0.0741%" height="15" fill="rgb(211,59,40)" fg:x="850" fg:w="1"/><text x="63.2130%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.07%)</title><rect x="63.1111%" y="517" width="0.0741%" height="15" fill="rgb(213,176,46)" fg:x="852" fg:w="1"/><text x="63.3611%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.07%)</title><rect x="63.1111%" y="501" width="0.0741%" height="15" fill="rgb(226,99,4)" fg:x="852" fg:w="1"/><text x="63.3611%" y="511.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.07%)</title><rect x="63.1111%" y="485" width="0.0741%" height="15" fill="rgb(239,203,43)" fg:x="852" fg:w="1"/><text x="63.3611%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.07%)</title><rect x="63.1111%" y="469" width="0.0741%" height="15" fill="rgb(246,1,45)" fg:x="852" fg:w="1"/><text x="63.3611%" y="479.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.07%)</title><rect x="63.1852%" y="517" width="0.0741%" height="15" fill="rgb(231,42,52)" fg:x="853" fg:w="1"/><text x="63.4352%" y="527.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.07%)</title><rect x="63.1852%" y="501" width="0.0741%" height="15" fill="rgb(240,13,50)" fg:x="853" fg:w="1"/><text x="63.4352%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.07%)</title><rect x="63.1852%" y="485" width="0.0741%" height="15" fill="rgb(225,81,14)" fg:x="853" fg:w="1"/><text x="63.4352%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.07%)</title><rect x="63.2593%" y="517" width="0.0741%" height="15" fill="rgb(216,182,23)" fg:x="854" fg:w="1"/><text x="63.5093%" y="527.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.07%)</title><rect x="63.2593%" y="501" width="0.0741%" height="15" fill="rgb(233,137,19)" fg:x="854" fg:w="1"/><text x="63.5093%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.07%)</title><rect x="63.2593%" y="485" width="0.0741%" height="15" fill="rgb(242,61,46)" fg:x="854" fg:w="1"/><text x="63.5093%" y="495.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (5 samples, 0.37%)</title><rect x="63.0370%" y="549" width="0.3704%" height="15" fill="rgb(221,168,51)" fg:x="851" fg:w="5"/><text x="63.2870%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.37%)</title><rect x="63.0370%" y="533" width="0.3704%" height="15" fill="rgb(238,48,15)" fg:x="851" fg:w="5"/><text x="63.2870%" y="543.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.07%)</title><rect x="63.3333%" y="517" width="0.0741%" height="15" fill="rgb(216,13,16)" fg:x="855" fg:w="1"/><text x="63.5833%" y="527.50"></text></g><g><title>&lt;plugins_rune::parser::DiagnosticsActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.07%)</title><rect x="63.3333%" y="501" width="0.0741%" height="15" fill="rgb(223,185,34)" fg:x="855" fg:w="1"/><text x="63.5833%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (1 samples, 0.07%)</title><rect x="63.4074%" y="549" width="0.0741%" height="15" fill="rgb(228,94,42)" fg:x="856" fg:w="1"/><text x="63.6574%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Debug&gt;::fmt (1 samples, 0.07%)</title><rect x="63.6296%" y="325" width="0.0741%" height="15" fill="rgb(218,166,43)" fg:x="859" fg:w="1"/><text x="63.8796%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.07%)</title><rect x="63.6296%" y="309" width="0.0741%" height="15" fill="rgb(232,30,50)" fg:x="859" fg:w="1"/><text x="63.8796%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="63.6296%" y="293" width="0.0741%" height="15" fill="rgb(245,206,45)" fg:x="859" fg:w="1"/><text x="63.8796%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.07%)</title><rect x="63.6296%" y="277" width="0.0741%" height="15" fill="rgb(220,56,22)" fg:x="859" fg:w="1"/><text x="63.8796%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="63.6296%" y="261" width="0.0741%" height="15" fill="rgb(239,129,38)" fg:x="859" fg:w="1"/><text x="63.8796%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="63.6296%" y="245" width="0.0741%" height="15" fill="rgb(207,68,41)" fg:x="859" fg:w="1"/><text x="63.8796%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="63.6296%" y="229" width="0.0741%" height="15" fill="rgb(221,21,7)" fg:x="859" fg:w="1"/><text x="63.8796%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="63.6296%" y="213" width="0.0741%" height="15" fill="rgb(240,33,25)" fg:x="859" fg:w="1"/><text x="63.8796%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="63.6296%" y="197" width="0.0741%" height="15" fill="rgb(242,119,10)" fg:x="859" fg:w="1"/><text x="63.8796%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="63.6296%" y="181" width="0.0741%" height="15" fill="rgb(214,149,40)" fg:x="859" fg:w="1"/><text x="63.8796%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="63.6296%" y="165" width="0.0741%" height="15" fill="rgb(228,25,36)" fg:x="859" fg:w="1"/><text x="63.8796%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="63.6296%" y="149" width="0.0741%" height="15" fill="rgb(222,59,15)" fg:x="859" fg:w="1"/><text x="63.8796%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="63.6296%" y="133" width="0.0741%" height="15" fill="rgb(218,170,0)" fg:x="859" fg:w="1"/><text x="63.8796%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.22%)</title><rect x="63.5556%" y="533" width="0.2222%" height="15" fill="rgb(232,173,23)" fg:x="858" fg:w="3"/><text x="63.8056%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.15%)</title><rect x="63.6296%" y="517" width="0.1481%" height="15" fill="rgb(218,116,1)" fg:x="859" fg:w="2"/><text x="63.8796%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="63.6296%" y="501" width="0.1481%" height="15" fill="rgb(207,34,4)" fg:x="859" fg:w="2"/><text x="63.8796%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="63.6296%" y="485" width="0.1481%" height="15" fill="rgb(229,54,52)" fg:x="859" fg:w="2"/><text x="63.8796%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="63.6296%" y="469" width="0.1481%" height="15" fill="rgb(211,86,23)" fg:x="859" fg:w="2"/><text x="63.8796%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.15%)</title><rect x="63.6296%" y="453" width="0.1481%" height="15" fill="rgb(254,153,34)" fg:x="859" fg:w="2"/><text x="63.8796%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.15%)</title><rect x="63.6296%" y="437" width="0.1481%" height="15" fill="rgb(219,220,14)" fg:x="859" fg:w="2"/><text x="63.8796%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.15%)</title><rect x="63.6296%" y="421" width="0.1481%" height="15" fill="rgb(247,8,26)" fg:x="859" fg:w="2"/><text x="63.8796%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.15%)</title><rect x="63.6296%" y="405" width="0.1481%" height="15" fill="rgb(213,129,42)" fg:x="859" fg:w="2"/><text x="63.8796%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="63.6296%" y="389" width="0.1481%" height="15" fill="rgb(225,95,41)" fg:x="859" fg:w="2"/><text x="63.8796%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.15%)</title><rect x="63.6296%" y="373" width="0.1481%" height="15" fill="rgb(215,134,24)" fg:x="859" fg:w="2"/><text x="63.8796%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.15%)</title><rect x="63.6296%" y="357" width="0.1481%" height="15" fill="rgb(235,23,54)" fg:x="859" fg:w="2"/><text x="63.8796%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.15%)</title><rect x="63.6296%" y="341" width="0.1481%" height="15" fill="rgb(229,96,31)" fg:x="859" fg:w="2"/><text x="63.8796%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.07%)</title><rect x="63.7037%" y="325" width="0.0741%" height="15" fill="rgb(206,111,12)" fg:x="860" fg:w="1"/><text x="63.9537%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="63.7037%" y="309" width="0.0741%" height="15" fill="rgb(222,177,8)" fg:x="860" fg:w="1"/><text x="63.9537%" y="319.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.07%)</title><rect x="63.7778%" y="533" width="0.0741%" height="15" fill="rgb(251,36,52)" fg:x="861" fg:w="1"/><text x="64.0278%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::PerformAction&gt; (1 samples, 0.07%)</title><rect x="63.8519%" y="533" width="0.0741%" height="15" fill="rgb(216,182,29)" fg:x="862" fg:w="1"/><text x="64.1019%" y="543.50"></text></g><g><title>chrono::offset::utc::Utc::now (1 samples, 0.07%)</title><rect x="63.9259%" y="517" width="0.0741%" height="15" fill="rgb(241,145,50)" fg:x="863" fg:w="1"/><text x="64.1759%" y="527.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (1 samples, 0.07%)</title><rect x="63.9259%" y="501" width="0.0741%" height="15" fill="rgb(231,71,35)" fg:x="863" fg:w="1"/><text x="64.1759%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (6 samples, 0.44%)</title><rect x="64.0000%" y="517" width="0.4444%" height="15" fill="rgb(218,22,17)" fg:x="864" fg:w="6"/><text x="64.2500%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (6 samples, 0.44%)</title><rect x="64.0000%" y="501" width="0.4444%" height="15" fill="rgb(225,227,6)" fg:x="864" fg:w="6"/><text x="64.2500%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (6 samples, 0.44%)</title><rect x="64.0000%" y="485" width="0.4444%" height="15" fill="rgb(224,204,17)" fg:x="864" fg:w="6"/><text x="64.2500%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (3 samples, 0.22%)</title><rect x="64.2222%" y="469" width="0.2222%" height="15" fill="rgb(227,61,28)" fg:x="867" fg:w="3"/><text x="64.4722%" y="479.50"></text></g><g><title>tracing_core::subscriber::Subscriber::register_callsite (1 samples, 0.07%)</title><rect x="64.3704%" y="453" width="0.0741%" height="15" fill="rgb(242,148,23)" fg:x="869" fg:w="1"/><text x="64.6204%" y="463.50"></text></g><g><title>&lt;engine::session::logs::SessionSubscriber as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.07%)</title><rect x="64.3704%" y="437" width="0.0741%" height="15" fill="rgb(237,105,33)" fg:x="869" fg:w="1"/><text x="64.6204%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="64.5926%" y="389" width="0.0741%" height="15" fill="rgb(238,218,40)" fg:x="872" fg:w="1"/><text x="64.8426%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="64.5926%" y="373" width="0.0741%" height="15" fill="rgb(209,126,11)" fg:x="872" fg:w="1"/><text x="64.8426%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.30%)</title><rect x="64.5926%" y="405" width="0.2963%" height="15" fill="rgb(245,90,11)" fg:x="872" fg:w="4"/><text x="64.8426%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.22%)</title><rect x="64.6667%" y="389" width="0.2222%" height="15" fill="rgb(211,195,10)" fg:x="873" fg:w="3"/><text x="64.9167%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="64.7407%" y="373" width="0.1481%" height="15" fill="rgb(231,45,45)" fg:x="874" fg:w="2"/><text x="64.9907%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="64.8148%" y="357" width="0.0741%" height="15" fill="rgb(246,100,43)" fg:x="875" fg:w="1"/><text x="65.0648%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="64.8148%" y="341" width="0.0741%" height="15" fill="rgb(241,193,8)" fg:x="875" fg:w="1"/><text x="65.0648%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="64.8148%" y="325" width="0.0741%" height="15" fill="rgb(208,76,19)" fg:x="875" fg:w="1"/><text x="65.0648%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.07%)</title><rect x="64.8889%" y="357" width="0.0741%" height="15" fill="rgb(223,69,40)" fg:x="876" fg:w="1"/><text x="65.1389%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="64.9630%" y="309" width="0.0741%" height="15" fill="rgb(207,120,39)" fg:x="877" fg:w="1"/><text x="65.2130%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="64.9630%" y="341" width="0.1481%" height="15" fill="rgb(212,209,28)" fg:x="877" fg:w="2"/><text x="65.2130%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="64.9630%" y="325" width="0.1481%" height="15" fill="rgb(246,82,29)" fg:x="877" fg:w="2"/><text x="65.2130%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="65.0370%" y="309" width="0.0741%" height="15" fill="rgb(239,6,40)" fg:x="878" fg:w="1"/><text x="65.2870%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="65.1111%" y="341" width="0.0741%" height="15" fill="rgb(228,181,35)" fg:x="879" fg:w="1"/><text x="65.3611%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="65.1852%" y="325" width="0.0741%" height="15" fill="rgb(238,151,2)" fg:x="880" fg:w="1"/><text x="65.4352%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="65.1852%" y="309" width="0.0741%" height="15" fill="rgb(236,94,18)" fg:x="880" fg:w="1"/><text x="65.4352%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="65.1852%" y="293" width="0.0741%" height="15" fill="rgb(208,38,14)" fg:x="880" fg:w="1"/><text x="65.4352%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="65.1852%" y="277" width="0.0741%" height="15" fill="rgb(234,215,27)" fg:x="880" fg:w="1"/><text x="65.4352%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="65.1852%" y="261" width="0.0741%" height="15" fill="rgb(254,211,53)" fg:x="880" fg:w="1"/><text x="65.4352%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="65.1852%" y="245" width="0.0741%" height="15" fill="rgb(216,175,11)" fg:x="880" fg:w="1"/><text x="65.4352%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="65.1852%" y="229" width="0.0741%" height="15" fill="rgb(246,179,26)" fg:x="880" fg:w="1"/><text x="65.4352%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="65.1852%" y="213" width="0.0741%" height="15" fill="rgb(249,19,52)" fg:x="880" fg:w="1"/><text x="65.4352%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="65.2593%" y="325" width="0.0741%" height="15" fill="rgb(230,42,52)" fg:x="881" fg:w="1"/><text x="65.5093%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="65.3333%" y="261" width="0.0741%" height="15" fill="rgb(221,171,0)" fg:x="882" fg:w="1"/><text x="65.5833%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="65.3333%" y="245" width="0.0741%" height="15" fill="rgb(222,177,40)" fg:x="882" fg:w="1"/><text x="65.5833%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.30%)</title><rect x="65.1852%" y="341" width="0.2963%" height="15" fill="rgb(247,34,16)" fg:x="880" fg:w="4"/><text x="65.4352%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="65.3333%" y="325" width="0.1481%" height="15" fill="rgb(213,217,37)" fg:x="882" fg:w="2"/><text x="65.5833%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="65.3333%" y="309" width="0.1481%" height="15" fill="rgb(231,189,24)" fg:x="882" fg:w="2"/><text x="65.5833%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="65.3333%" y="293" width="0.1481%" height="15" fill="rgb(214,22,9)" fg:x="882" fg:w="2"/><text x="65.5833%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="65.3333%" y="277" width="0.1481%" height="15" fill="rgb(212,70,22)" fg:x="882" fg:w="2"/><text x="65.5833%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="65.4074%" y="261" width="0.0741%" height="15" fill="rgb(249,64,51)" fg:x="883" fg:w="1"/><text x="65.6574%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="65.4074%" y="245" width="0.0741%" height="15" fill="rgb(249,148,20)" fg:x="883" fg:w="1"/><text x="65.6574%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="65.5556%" y="261" width="0.0741%" height="15" fill="rgb(246,46,48)" fg:x="885" fg:w="1"/><text x="65.8056%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="65.5556%" y="245" width="0.0741%" height="15" fill="rgb(217,34,48)" fg:x="885" fg:w="1"/><text x="65.8056%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="65.5556%" y="229" width="0.0741%" height="15" fill="rgb(222,45,26)" fg:x="885" fg:w="1"/><text x="65.8056%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.15%)</title><rect x="65.7037%" y="213" width="0.1481%" height="15" fill="rgb(230,201,36)" fg:x="887" fg:w="2"/><text x="65.9537%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="65.7037%" y="197" width="0.1481%" height="15" fill="rgb(217,30,43)" fg:x="887" fg:w="2"/><text x="65.9537%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="65.7037%" y="181" width="0.1481%" height="15" fill="rgb(230,197,40)" fg:x="887" fg:w="2"/><text x="65.9537%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="65.7037%" y="165" width="0.1481%" height="15" fill="rgb(239,181,18)" fg:x="887" fg:w="2"/><text x="65.9537%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="65.7037%" y="149" width="0.1481%" height="15" fill="rgb(222,60,39)" fg:x="887" fg:w="2"/><text x="65.9537%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="65.7037%" y="133" width="0.1481%" height="15" fill="rgb(210,60,22)" fg:x="887" fg:w="2"/><text x="65.9537%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.15%)</title><rect x="65.7037%" y="117" width="0.1481%" height="15" fill="rgb(239,213,48)" fg:x="887" fg:w="2"/><text x="65.9537%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="65.7037%" y="101" width="0.1481%" height="15" fill="rgb(253,214,23)" fg:x="887" fg:w="2"/><text x="65.9537%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="65.7037%" y="85" width="0.1481%" height="15" fill="rgb(211,98,45)" fg:x="887" fg:w="2"/><text x="65.9537%" y="95.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.15%)</title><rect x="65.7037%" y="69" width="0.1481%" height="15" fill="rgb(239,130,44)" fg:x="887" fg:w="2"/><text x="65.9537%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.07%)</title><rect x="65.7778%" y="53" width="0.0741%" height="15" fill="rgb(222,181,35)" fg:x="888" fg:w="1"/><text x="66.0278%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="65.7778%" y="37" width="0.0741%" height="15" fill="rgb(219,219,49)" fg:x="888" fg:w="1"/><text x="66.0278%" y="47.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.37%)</title><rect x="65.6296%" y="245" width="0.3704%" height="15" fill="rgb(227,161,51)" fg:x="886" fg:w="5"/><text x="65.8796%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.37%)</title><rect x="65.6296%" y="229" width="0.3704%" height="15" fill="rgb(239,112,27)" fg:x="886" fg:w="5"/><text x="65.8796%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="65.8519%" y="213" width="0.1481%" height="15" fill="rgb(248,122,18)" fg:x="889" fg:w="2"/><text x="66.1019%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="65.9259%" y="197" width="0.0741%" height="15" fill="rgb(245,130,23)" fg:x="890" fg:w="1"/><text x="66.1759%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="66.0000%" y="213" width="0.0741%" height="15" fill="rgb(211,225,28)" fg:x="891" fg:w="1"/><text x="66.2500%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="66.0000%" y="245" width="0.1481%" height="15" fill="rgb(242,105,44)" fg:x="891" fg:w="2"/><text x="66.2500%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="66.0000%" y="229" width="0.1481%" height="15" fill="rgb(216,183,46)" fg:x="891" fg:w="2"/><text x="66.2500%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="66.0741%" y="213" width="0.0741%" height="15" fill="rgb(227,112,9)" fg:x="892" fg:w="1"/><text x="66.3241%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="66.0741%" y="197" width="0.0741%" height="15" fill="rgb(244,21,0)" fg:x="892" fg:w="1"/><text x="66.3241%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="66.0741%" y="181" width="0.0741%" height="15" fill="rgb(236,185,14)" fg:x="892" fg:w="1"/><text x="66.3241%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="66.0741%" y="165" width="0.0741%" height="15" fill="rgb(236,170,30)" fg:x="892" fg:w="1"/><text x="66.3241%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="66.0741%" y="149" width="0.0741%" height="15" fill="rgb(209,198,51)" fg:x="892" fg:w="1"/><text x="66.3241%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="66.1481%" y="213" width="0.0741%" height="15" fill="rgb(205,171,26)" fg:x="893" fg:w="1"/><text x="66.3981%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="66.1481%" y="197" width="0.0741%" height="15" fill="rgb(246,41,49)" fg:x="893" fg:w="1"/><text x="66.3981%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="66.1481%" y="181" width="0.0741%" height="15" fill="rgb(240,229,12)" fg:x="893" fg:w="1"/><text x="66.3981%" y="191.50"></text></g><g><title>kernel::model::entity::Entity::from_value (14 samples, 1.04%)</title><rect x="65.4815%" y="341" width="1.0370%" height="15" fill="rgb(212,8,54)" fg:x="884" fg:w="14"/><text x="65.7315%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.04%)</title><rect x="65.4815%" y="325" width="1.0370%" height="15" fill="rgb(230,114,13)" fg:x="884" fg:w="14"/><text x="65.7315%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.04%)</title><rect x="65.4815%" y="309" width="1.0370%" height="15" fill="rgb(229,130,28)" fg:x="884" fg:w="14"/><text x="65.7315%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 0.96%)</title><rect x="65.5556%" y="293" width="0.9630%" height="15" fill="rgb(206,139,15)" fg:x="885" fg:w="13"/><text x="65.8056%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 0.96%)</title><rect x="65.5556%" y="277" width="0.9630%" height="15" fill="rgb(241,188,35)" fg:x="885" fg:w="13"/><text x="65.8056%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.89%)</title><rect x="65.6296%" y="261" width="0.8889%" height="15" fill="rgb(208,224,26)" fg:x="886" fg:w="12"/><text x="65.8796%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.37%)</title><rect x="66.1481%" y="245" width="0.3704%" height="15" fill="rgb(251,131,28)" fg:x="893" fg:w="5"/><text x="66.3981%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.37%)</title><rect x="66.1481%" y="229" width="0.3704%" height="15" fill="rgb(208,153,1)" fg:x="893" fg:w="5"/><text x="66.3981%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.30%)</title><rect x="66.2222%" y="213" width="0.2963%" height="15" fill="rgb(234,33,36)" fg:x="894" fg:w="4"/><text x="66.4722%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="66.2963%" y="197" width="0.2222%" height="15" fill="rgb(246,42,29)" fg:x="895" fg:w="3"/><text x="66.5463%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="66.2963%" y="181" width="0.2222%" height="15" fill="rgb(251,114,16)" fg:x="895" fg:w="3"/><text x="66.5463%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.22%)</title><rect x="66.2963%" y="165" width="0.2222%" height="15" fill="rgb(233,13,38)" fg:x="895" fg:w="3"/><text x="66.5463%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="66.2963%" y="149" width="0.2222%" height="15" fill="rgb(247,120,19)" fg:x="895" fg:w="3"/><text x="66.5463%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="66.2963%" y="133" width="0.2222%" height="15" fill="rgb(205,11,16)" fg:x="895" fg:w="3"/><text x="66.5463%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="66.4444%" y="117" width="0.0741%" height="15" fill="rgb(228,185,19)" fg:x="897" fg:w="1"/><text x="66.6944%" y="127.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="66.5185%" y="229" width="0.0741%" height="15" fill="rgb(239,88,52)" fg:x="898" fg:w="1"/><text x="66.7685%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="66.6667%" y="149" width="0.0741%" height="15" fill="rgb(219,23,1)" fg:x="900" fg:w="1"/><text x="66.9167%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="66.6667%" y="133" width="0.0741%" height="15" fill="rgb(253,177,16)" fg:x="900" fg:w="1"/><text x="66.9167%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="66.6667%" y="117" width="0.0741%" height="15" fill="rgb(225,150,40)" fg:x="900" fg:w="1"/><text x="66.9167%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="66.6667%" y="101" width="0.0741%" height="15" fill="rgb(208,108,30)" fg:x="900" fg:w="1"/><text x="66.9167%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="66.6667%" y="85" width="0.0741%" height="15" fill="rgb(214,122,4)" fg:x="900" fg:w="1"/><text x="66.9167%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="66.5926%" y="197" width="0.2222%" height="15" fill="rgb(229,74,37)" fg:x="899" fg:w="3"/><text x="66.8426%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="66.5926%" y="181" width="0.2222%" height="15" fill="rgb(233,61,41)" fg:x="899" fg:w="3"/><text x="66.8426%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="66.5926%" y="165" width="0.2222%" height="15" fill="rgb(238,191,5)" fg:x="899" fg:w="3"/><text x="66.8426%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="66.7407%" y="149" width="0.0741%" height="15" fill="rgb(233,78,24)" fg:x="901" fg:w="1"/><text x="66.9907%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.30%)</title><rect x="66.5926%" y="213" width="0.2963%" height="15" fill="rgb(211,142,8)" fg:x="899" fg:w="4"/><text x="66.8426%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="66.8148%" y="197" width="0.0741%" height="15" fill="rgb(253,38,53)" fg:x="902" fg:w="1"/><text x="67.0648%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="66.8148%" y="181" width="0.0741%" height="15" fill="rgb(234,63,51)" fg:x="902" fg:w="1"/><text x="67.0648%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="66.8148%" y="165" width="0.0741%" height="15" fill="rgb(205,23,31)" fg:x="902" fg:w="1"/><text x="67.0648%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="66.8148%" y="149" width="0.0741%" height="15" fill="rgb(210,184,50)" fg:x="902" fg:w="1"/><text x="67.0648%" y="159.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.07%)</title><rect x="66.8148%" y="133" width="0.0741%" height="15" fill="rgb(222,112,26)" fg:x="902" fg:w="1"/><text x="67.0648%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.44%)</title><rect x="66.5185%" y="245" width="0.4444%" height="15" fill="rgb(250,98,18)" fg:x="898" fg:w="6"/><text x="66.7685%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.37%)</title><rect x="66.5926%" y="229" width="0.3704%" height="15" fill="rgb(250,34,12)" fg:x="899" fg:w="5"/><text x="66.8426%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="66.8889%" y="213" width="0.0741%" height="15" fill="rgb(236,141,30)" fg:x="903" fg:w="1"/><text x="67.1389%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="66.8889%" y="197" width="0.0741%" height="15" fill="rgb(246,134,38)" fg:x="903" fg:w="1"/><text x="67.1389%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="66.9630%" y="229" width="0.0741%" height="15" fill="rgb(240,114,4)" fg:x="904" fg:w="1"/><text x="67.2130%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.59%)</title><rect x="66.5185%" y="277" width="0.5926%" height="15" fill="rgb(243,113,39)" fg:x="898" fg:w="8"/><text x="66.7685%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.59%)</title><rect x="66.5185%" y="261" width="0.5926%" height="15" fill="rgb(239,215,4)" fg:x="898" fg:w="8"/><text x="66.7685%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="66.9630%" y="245" width="0.1481%" height="15" fill="rgb(236,229,45)" fg:x="904" fg:w="2"/><text x="67.2130%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="67.0370%" y="229" width="0.0741%" height="15" fill="rgb(242,2,6)" fg:x="905" fg:w="1"/><text x="67.2870%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="67.0370%" y="213" width="0.0741%" height="15" fill="rgb(239,108,21)" fg:x="905" fg:w="1"/><text x="67.2870%" y="223.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (32 samples, 2.37%)</title><rect x="64.8889%" y="405" width="2.3704%" height="15" fill="rgb(215,168,34)" fg:x="876" fg:w="32"/><text x="65.1389%" y="415.50">&lt;k..</text></g><g><title>kernel::model::EntityPtrResolver::entity (32 samples, 2.37%)</title><rect x="64.8889%" y="389" width="2.3704%" height="15" fill="rgb(238,31,17)" fg:x="876" fg:w="32"/><text x="65.1389%" y="399.50">ke..</text></g><g><title>engine::session::Session::load_entity (32 samples, 2.37%)</title><rect x="64.8889%" y="373" width="2.3704%" height="15" fill="rgb(220,133,11)" fg:x="876" fg:w="32"/><text x="65.1389%" y="383.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (31 samples, 2.30%)</title><rect x="64.9630%" y="357" width="2.2963%" height="15" fill="rgb(212,158,23)" fg:x="877" fg:w="31"/><text x="65.2130%" y="367.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.74%)</title><rect x="66.5185%" y="341" width="0.7407%" height="15" fill="rgb(223,172,7)" fg:x="898" fg:w="10"/><text x="66.7685%" y="351.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.74%)</title><rect x="66.5185%" y="325" width="0.7407%" height="15" fill="rgb(244,3,52)" fg:x="898" fg:w="10"/><text x="66.7685%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.74%)</title><rect x="66.5185%" y="309" width="0.7407%" height="15" fill="rgb(207,69,27)" fg:x="898" fg:w="10"/><text x="66.7685%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.74%)</title><rect x="66.5185%" y="293" width="0.7407%" height="15" fill="rgb(213,136,45)" fg:x="898" fg:w="10"/><text x="66.7685%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="67.1111%" y="277" width="0.1481%" height="15" fill="rgb(218,79,17)" fg:x="906" fg:w="2"/><text x="67.3611%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="67.1111%" y="261" width="0.1481%" height="15" fill="rgb(216,106,36)" fg:x="906" fg:w="2"/><text x="67.3611%" y="271.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (37 samples, 2.74%)</title><rect x="64.5926%" y="421" width="2.7407%" height="15" fill="rgb(251,27,45)" fg:x="872" fg:w="37"/><text x="64.8426%" y="431.50">&lt;p..</text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="67.2593%" y="405" width="0.0741%" height="15" fill="rgb(232,21,34)" fg:x="908" fg:w="1"/><text x="67.5093%" y="415.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (39 samples, 2.89%)</title><rect x="64.5926%" y="437" width="2.8889%" height="15" fill="rgb(249,191,16)" fg:x="872" fg:w="39"/><text x="64.8426%" y="447.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (2 samples, 0.15%)</title><rect x="67.3333%" y="421" width="0.1481%" height="15" fill="rgb(224,88,20)" fg:x="909" fg:w="2"/><text x="67.5833%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="67.6296%" y="229" width="0.0741%" height="15" fill="rgb(237,93,27)" fg:x="913" fg:w="1"/><text x="67.8796%" y="239.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.22%)</title><rect x="67.5556%" y="405" width="0.2222%" height="15" fill="rgb(226,198,48)" fg:x="912" fg:w="3"/><text x="67.8056%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.22%)</title><rect x="67.5556%" y="389" width="0.2222%" height="15" fill="rgb(207,162,53)" fg:x="912" fg:w="3"/><text x="67.8056%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.22%)</title><rect x="67.5556%" y="373" width="0.2222%" height="15" fill="rgb(207,169,9)" fg:x="912" fg:w="3"/><text x="67.8056%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.22%)</title><rect x="67.5556%" y="357" width="0.2222%" height="15" fill="rgb(224,166,46)" fg:x="912" fg:w="3"/><text x="67.8056%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.22%)</title><rect x="67.5556%" y="341" width="0.2222%" height="15" fill="rgb(233,26,6)" fg:x="912" fg:w="3"/><text x="67.8056%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.22%)</title><rect x="67.5556%" y="325" width="0.2222%" height="15" fill="rgb(218,106,45)" fg:x="912" fg:w="3"/><text x="67.8056%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.22%)</title><rect x="67.5556%" y="309" width="0.2222%" height="15" fill="rgb(240,217,4)" fg:x="912" fg:w="3"/><text x="67.8056%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.22%)</title><rect x="67.5556%" y="293" width="0.2222%" height="15" fill="rgb(246,171,10)" fg:x="912" fg:w="3"/><text x="67.8056%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.15%)</title><rect x="67.6296%" y="277" width="0.1481%" height="15" fill="rgb(223,197,30)" fg:x="913" fg:w="2"/><text x="67.8796%" y="287.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (2 samples, 0.15%)</title><rect x="67.6296%" y="261" width="0.1481%" height="15" fill="rgb(207,92,16)" fg:x="913" fg:w="2"/><text x="67.8796%" y="271.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.15%)</title><rect x="67.6296%" y="245" width="0.1481%" height="15" fill="rgb(211,6,44)" fg:x="913" fg:w="2"/><text x="67.8796%" y="255.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.07%)</title><rect x="67.7037%" y="229" width="0.0741%" height="15" fill="rgb(219,139,2)" fg:x="914" fg:w="1"/><text x="67.9537%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="67.7778%" y="389" width="0.0741%" height="15" fill="rgb(224,103,21)" fg:x="915" fg:w="1"/><text x="68.0278%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="67.8519%" y="389" width="0.0741%" height="15" fill="rgb(254,110,48)" fg:x="916" fg:w="1"/><text x="68.1019%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="68.0000%" y="373" width="0.0741%" height="15" fill="rgb(212,88,19)" fg:x="918" fg:w="1"/><text x="68.2500%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="68.0000%" y="357" width="0.0741%" height="15" fill="rgb(248,103,6)" fg:x="918" fg:w="1"/><text x="68.2500%" y="367.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="68.0000%" y="341" width="0.0741%" height="15" fill="rgb(214,53,46)" fg:x="918" fg:w="1"/><text x="68.2500%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="68.0741%" y="373" width="0.0741%" height="15" fill="rgb(236,190,24)" fg:x="919" fg:w="1"/><text x="68.3241%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="68.2222%" y="341" width="0.1481%" height="15" fill="rgb(254,58,28)" fg:x="921" fg:w="2"/><text x="68.4722%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="68.2963%" y="325" width="0.0741%" height="15" fill="rgb(243,63,27)" fg:x="922" fg:w="1"/><text x="68.5463%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="68.2963%" y="309" width="0.0741%" height="15" fill="rgb(206,81,20)" fg:x="922" fg:w="1"/><text x="68.5463%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="68.7407%" y="309" width="0.0741%" height="15" fill="rgb(252,69,51)" fg:x="928" fg:w="1"/><text x="68.9907%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="68.8148%" y="277" width="0.0741%" height="15" fill="rgb(222,213,4)" fg:x="929" fg:w="1"/><text x="69.0648%" y="287.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (10 samples, 0.74%)</title><rect x="68.2222%" y="357" width="0.7407%" height="15" fill="rgb(226,198,12)" fg:x="921" fg:w="10"/><text x="68.4722%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.59%)</title><rect x="68.3704%" y="341" width="0.5926%" height="15" fill="rgb(248,115,11)" fg:x="923" fg:w="8"/><text x="68.6204%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.52%)</title><rect x="68.4444%" y="325" width="0.5185%" height="15" fill="rgb(221,148,54)" fg:x="924" fg:w="7"/><text x="68.6944%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="68.8148%" y="309" width="0.1481%" height="15" fill="rgb(214,209,51)" fg:x="929" fg:w="2"/><text x="69.0648%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="68.8148%" y="293" width="0.1481%" height="15" fill="rgb(249,116,53)" fg:x="929" fg:w="2"/><text x="69.0648%" y="303.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.07%)</title><rect x="68.8889%" y="277" width="0.0741%" height="15" fill="rgb(248,170,1)" fg:x="930" fg:w="1"/><text x="69.1389%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="69.0370%" y="261" width="0.0741%" height="15" fill="rgb(244,105,10)" fg:x="932" fg:w="1"/><text x="69.2870%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="69.0370%" y="245" width="0.0741%" height="15" fill="rgb(229,100,5)" fg:x="932" fg:w="1"/><text x="69.2870%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="69.0370%" y="229" width="0.0741%" height="15" fill="rgb(233,221,39)" fg:x="932" fg:w="1"/><text x="69.2870%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.22%)</title><rect x="68.9630%" y="293" width="0.2222%" height="15" fill="rgb(233,88,21)" fg:x="931" fg:w="3"/><text x="69.2130%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="69.0370%" y="277" width="0.1481%" height="15" fill="rgb(206,13,0)" fg:x="932" fg:w="2"/><text x="69.2870%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="69.1111%" y="261" width="0.0741%" height="15" fill="rgb(242,15,35)" fg:x="933" fg:w="1"/><text x="69.3611%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="69.1111%" y="245" width="0.0741%" height="15" fill="rgb(247,142,41)" fg:x="933" fg:w="1"/><text x="69.3611%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="69.1111%" y="229" width="0.0741%" height="15" fill="rgb(245,51,29)" fg:x="933" fg:w="1"/><text x="69.3611%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="69.1111%" y="213" width="0.0741%" height="15" fill="rgb(228,209,43)" fg:x="933" fg:w="1"/><text x="69.3611%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="69.1111%" y="197" width="0.0741%" height="15" fill="rgb(233,185,9)" fg:x="933" fg:w="1"/><text x="69.3611%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="69.1111%" y="181" width="0.0741%" height="15" fill="rgb(226,93,0)" fg:x="933" fg:w="1"/><text x="69.3611%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="69.1111%" y="165" width="0.0741%" height="15" fill="rgb(245,194,43)" fg:x="933" fg:w="1"/><text x="69.3611%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="69.1111%" y="149" width="0.0741%" height="15" fill="rgb(211,145,34)" fg:x="933" fg:w="1"/><text x="69.3611%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="69.1111%" y="133" width="0.0741%" height="15" fill="rgb(231,228,28)" fg:x="933" fg:w="1"/><text x="69.3611%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="69.1111%" y="117" width="0.0741%" height="15" fill="rgb(236,149,4)" fg:x="933" fg:w="1"/><text x="69.3611%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="69.1111%" y="101" width="0.0741%" height="15" fill="rgb(234,114,38)" fg:x="933" fg:w="1"/><text x="69.3611%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="69.1111%" y="85" width="0.0741%" height="15" fill="rgb(246,132,51)" fg:x="933" fg:w="1"/><text x="69.3611%" y="95.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="69.1852%" y="293" width="0.0741%" height="15" fill="rgb(251,137,22)" fg:x="934" fg:w="1"/><text x="69.4352%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.07%)</title><rect x="69.1852%" y="277" width="0.0741%" height="15" fill="rgb(243,59,52)" fg:x="934" fg:w="1"/><text x="69.4352%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="69.1852%" y="261" width="0.0741%" height="15" fill="rgb(239,56,28)" fg:x="934" fg:w="1"/><text x="69.4352%" y="271.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.07%)</title><rect x="69.2593%" y="293" width="0.0741%" height="15" fill="rgb(218,168,27)" fg:x="935" fg:w="1"/><text x="69.5093%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="69.2593%" y="277" width="0.0741%" height="15" fill="rgb(232,165,11)" fg:x="935" fg:w="1"/><text x="69.5093%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="69.2593%" y="261" width="0.0741%" height="15" fill="rgb(253,55,41)" fg:x="935" fg:w="1"/><text x="69.5093%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="69.2593%" y="245" width="0.0741%" height="15" fill="rgb(233,206,24)" fg:x="935" fg:w="1"/><text x="69.5093%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.15%)</title><rect x="69.4074%" y="133" width="0.1481%" height="15" fill="rgb(220,199,8)" fg:x="937" fg:w="2"/><text x="69.6574%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="69.4074%" y="117" width="0.1481%" height="15" fill="rgb(254,65,26)" fg:x="937" fg:w="2"/><text x="69.6574%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="69.4074%" y="101" width="0.1481%" height="15" fill="rgb(253,102,23)" fg:x="937" fg:w="2"/><text x="69.6574%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.15%)</title><rect x="69.4074%" y="85" width="0.1481%" height="15" fill="rgb(231,103,35)" fg:x="937" fg:w="2"/><text x="69.6574%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="69.4074%" y="69" width="0.1481%" height="15" fill="rgb(238,26,10)" fg:x="937" fg:w="2"/><text x="69.6574%" y="79.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="69.4074%" y="53" width="0.1481%" height="15" fill="rgb(234,191,34)" fg:x="937" fg:w="2"/><text x="69.6574%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="69.4074%" y="165" width="0.2222%" height="15" fill="rgb(206,210,9)" fg:x="937" fg:w="3"/><text x="69.6574%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="69.4074%" y="149" width="0.2222%" height="15" fill="rgb(219,155,3)" fg:x="937" fg:w="3"/><text x="69.6574%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="69.5556%" y="133" width="0.0741%" height="15" fill="rgb(221,62,52)" fg:x="939" fg:w="1"/><text x="69.8056%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.37%)</title><rect x="69.4074%" y="197" width="0.3704%" height="15" fill="rgb(215,197,36)" fg:x="937" fg:w="5"/><text x="69.6574%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.37%)</title><rect x="69.4074%" y="181" width="0.3704%" height="15" fill="rgb(226,222,6)" fg:x="937" fg:w="5"/><text x="69.6574%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.15%)</title><rect x="69.6296%" y="165" width="0.1481%" height="15" fill="rgb(215,58,28)" fg:x="940" fg:w="2"/><text x="69.8796%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="69.7037%" y="149" width="0.0741%" height="15" fill="rgb(212,148,2)" fg:x="941" fg:w="1"/><text x="69.9537%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="69.7037%" y="133" width="0.0741%" height="15" fill="rgb(208,21,42)" fg:x="941" fg:w="1"/><text x="69.9537%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="69.7037%" y="117" width="0.0741%" height="15" fill="rgb(209,107,26)" fg:x="941" fg:w="1"/><text x="69.9537%" y="127.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="69.7778%" y="149" width="0.1481%" height="15" fill="rgb(254,60,47)" fg:x="942" fg:w="2"/><text x="70.0278%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="69.9259%" y="133" width="0.0741%" height="15" fill="rgb(207,226,45)" fg:x="944" fg:w="1"/><text x="70.1759%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5 samples, 0.37%)</title><rect x="69.7778%" y="197" width="0.3704%" height="15" fill="rgb(223,124,22)" fg:x="942" fg:w="5"/><text x="70.0278%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.37%)</title><rect x="69.7778%" y="181" width="0.3704%" height="15" fill="rgb(240,162,13)" fg:x="942" fg:w="5"/><text x="70.0278%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5 samples, 0.37%)</title><rect x="69.7778%" y="165" width="0.3704%" height="15" fill="rgb(244,199,31)" fg:x="942" fg:w="5"/><text x="70.0278%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.22%)</title><rect x="69.9259%" y="149" width="0.2222%" height="15" fill="rgb(207,92,16)" fg:x="944" fg:w="3"/><text x="70.1759%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="70.0000%" y="133" width="0.1481%" height="15" fill="rgb(215,31,19)" fg:x="945" fg:w="2"/><text x="70.2500%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="70.1481%" y="165" width="0.0741%" height="15" fill="rgb(245,118,14)" fg:x="947" fg:w="1"/><text x="70.3981%" y="175.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.07%)</title><rect x="70.2222%" y="149" width="0.0741%" height="15" fill="rgb(248,12,46)" fg:x="948" fg:w="1"/><text x="70.4722%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.07%)</title><rect x="70.2222%" y="133" width="0.0741%" height="15" fill="rgb(209,119,0)" fg:x="948" fg:w="1"/><text x="70.4722%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="70.2222%" y="117" width="0.0741%" height="15" fill="rgb(254,51,44)" fg:x="948" fg:w="1"/><text x="70.4722%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="70.2963%" y="117" width="0.0741%" height="15" fill="rgb(253,182,35)" fg:x="949" fg:w="1"/><text x="70.5463%" y="127.50"></text></g><g><title>kernel::model::entity::Entity::from_value (15 samples, 1.11%)</title><rect x="69.3333%" y="293" width="1.1111%" height="15" fill="rgb(205,198,39)" fg:x="936" fg:w="15"/><text x="69.5833%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.11%)</title><rect x="69.3333%" y="277" width="1.1111%" height="15" fill="rgb(251,175,48)" fg:x="936" fg:w="15"/><text x="69.5833%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.11%)</title><rect x="69.3333%" y="261" width="1.1111%" height="15" fill="rgb(239,38,17)" fg:x="936" fg:w="15"/><text x="69.5833%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.04%)</title><rect x="69.4074%" y="245" width="1.0370%" height="15" fill="rgb(212,101,8)" fg:x="937" fg:w="14"/><text x="69.6574%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.04%)</title><rect x="69.4074%" y="229" width="1.0370%" height="15" fill="rgb(228,35,17)" fg:x="937" fg:w="14"/><text x="69.6574%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (14 samples, 1.04%)</title><rect x="69.4074%" y="213" width="1.0370%" height="15" fill="rgb(214,95,8)" fg:x="937" fg:w="14"/><text x="69.6574%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.30%)</title><rect x="70.1481%" y="197" width="0.2963%" height="15" fill="rgb(210,176,35)" fg:x="947" fg:w="4"/><text x="70.3981%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.30%)</title><rect x="70.1481%" y="181" width="0.2963%" height="15" fill="rgb(226,4,3)" fg:x="947" fg:w="4"/><text x="70.3981%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.22%)</title><rect x="70.2222%" y="165" width="0.2222%" height="15" fill="rgb(232,133,14)" fg:x="948" fg:w="3"/><text x="70.4722%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="70.2963%" y="149" width="0.1481%" height="15" fill="rgb(250,191,8)" fg:x="949" fg:w="2"/><text x="70.5463%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="70.2963%" y="133" width="0.1481%" height="15" fill="rgb(213,12,45)" fg:x="949" fg:w="2"/><text x="70.5463%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="70.3704%" y="117" width="0.0741%" height="15" fill="rgb(233,78,26)" fg:x="950" fg:w="1"/><text x="70.6204%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="70.3704%" y="101" width="0.0741%" height="15" fill="rgb(245,222,11)" fg:x="950" fg:w="1"/><text x="70.6204%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="70.3704%" y="85" width="0.0741%" height="15" fill="rgb(216,174,12)" fg:x="950" fg:w="1"/><text x="70.6204%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="70.8148%" y="149" width="0.0741%" height="15" fill="rgb(213,15,9)" fg:x="956" fg:w="1"/><text x="71.0648%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="70.8148%" y="133" width="0.0741%" height="15" fill="rgb(238,103,32)" fg:x="956" fg:w="1"/><text x="71.0648%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="70.8148%" y="117" width="0.0741%" height="15" fill="rgb(245,85,15)" fg:x="956" fg:w="1"/><text x="71.0648%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="70.8148%" y="101" width="0.0741%" height="15" fill="rgb(254,204,5)" fg:x="956" fg:w="1"/><text x="71.0648%" y="111.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="70.8148%" y="85" width="0.0741%" height="15" fill="rgb(231,178,15)" fg:x="956" fg:w="1"/><text x="71.0648%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="70.8889%" y="133" width="0.0741%" height="15" fill="rgb(248,151,3)" fg:x="957" fg:w="1"/><text x="71.1389%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="70.8889%" y="117" width="0.0741%" height="15" fill="rgb(250,139,13)" fg:x="957" fg:w="1"/><text x="71.1389%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="70.8889%" y="101" width="0.0741%" height="15" fill="rgb(243,107,53)" fg:x="957" fg:w="1"/><text x="71.1389%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="70.8889%" y="85" width="0.0741%" height="15" fill="rgb(232,81,15)" fg:x="957" fg:w="1"/><text x="71.1389%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="70.8148%" y="165" width="0.2222%" height="15" fill="rgb(225,187,48)" fg:x="956" fg:w="3"/><text x="71.0648%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="70.8889%" y="149" width="0.1481%" height="15" fill="rgb(205,116,12)" fg:x="957" fg:w="2"/><text x="71.1389%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="70.9630%" y="133" width="0.0741%" height="15" fill="rgb(220,222,31)" fg:x="958" fg:w="1"/><text x="71.2130%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="70.9630%" y="117" width="0.0741%" height="15" fill="rgb(233,187,49)" fg:x="958" fg:w="1"/><text x="71.2130%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.44%)</title><rect x="70.6667%" y="197" width="0.4444%" height="15" fill="rgb(211,168,53)" fg:x="954" fg:w="6"/><text x="70.9167%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.44%)</title><rect x="70.6667%" y="181" width="0.4444%" height="15" fill="rgb(206,160,16)" fg:x="954" fg:w="6"/><text x="70.9167%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="71.0370%" y="165" width="0.0741%" height="15" fill="rgb(254,164,13)" fg:x="959" fg:w="1"/><text x="71.2870%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="71.0370%" y="149" width="0.0741%" height="15" fill="rgb(229,45,30)" fg:x="959" fg:w="1"/><text x="71.2870%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="71.0370%" y="133" width="0.0741%" height="15" fill="rgb(237,32,10)" fg:x="959" fg:w="1"/><text x="71.2870%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.22%)</title><rect x="71.1111%" y="197" width="0.2222%" height="15" fill="rgb(251,20,47)" fg:x="960" fg:w="3"/><text x="71.3611%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="71.2593%" y="181" width="0.0741%" height="15" fill="rgb(251,116,12)" fg:x="962" fg:w="1"/><text x="71.5093%" y="191.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (33 samples, 2.44%)</title><rect x="68.9630%" y="357" width="2.4444%" height="15" fill="rgb(214,227,27)" fg:x="931" fg:w="33"/><text x="69.2130%" y="367.50">&lt;k..</text></g><g><title>kernel::model::EntityPtrResolver::entity (33 samples, 2.44%)</title><rect x="68.9630%" y="341" width="2.4444%" height="15" fill="rgb(248,10,53)" fg:x="931" fg:w="33"/><text x="69.2130%" y="351.50">ke..</text></g><g><title>engine::session::Session::load_entity (33 samples, 2.44%)</title><rect x="68.9630%" y="325" width="2.4444%" height="15" fill="rgb(221,176,25)" fg:x="931" fg:w="33"/><text x="69.2130%" y="335.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (33 samples, 2.44%)</title><rect x="68.9630%" y="309" width="2.4444%" height="15" fill="rgb(205,70,46)" fg:x="931" fg:w="33"/><text x="69.2130%" y="319.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (13 samples, 0.96%)</title><rect x="70.4444%" y="293" width="0.9630%" height="15" fill="rgb(217,45,38)" fg:x="951" fg:w="13"/><text x="70.6944%" y="303.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 0.96%)</title><rect x="70.4444%" y="277" width="0.9630%" height="15" fill="rgb(243,6,54)" fg:x="951" fg:w="13"/><text x="70.6944%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.96%)</title><rect x="70.4444%" y="261" width="0.9630%" height="15" fill="rgb(242,76,23)" fg:x="951" fg:w="13"/><text x="70.6944%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.96%)</title><rect x="70.4444%" y="245" width="0.9630%" height="15" fill="rgb(239,166,0)" fg:x="951" fg:w="13"/><text x="70.6944%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.96%)</title><rect x="70.4444%" y="229" width="0.9630%" height="15" fill="rgb(238,174,32)" fg:x="951" fg:w="13"/><text x="70.6944%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.89%)</title><rect x="70.5185%" y="213" width="0.8889%" height="15" fill="rgb(238,124,44)" fg:x="952" fg:w="12"/><text x="70.7685%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="71.3333%" y="197" width="0.0741%" height="15" fill="rgb(206,185,9)" fg:x="963" fg:w="1"/><text x="71.5833%" y="207.50"></text></g><g><title>plugins_core::tools::contained_by (45 samples, 3.33%)</title><rect x="68.1481%" y="373" width="3.3333%" height="15" fill="rgb(215,157,17)" fg:x="920" fg:w="45"/><text x="68.3981%" y="383.50">plu..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="71.4074%" y="357" width="0.0741%" height="15" fill="rgb(251,17,29)" fg:x="964" fg:w="1"/><text x="71.6574%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="71.4074%" y="341" width="0.0741%" height="15" fill="rgb(227,113,27)" fg:x="964" fg:w="1"/><text x="71.6574%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="71.4074%" y="325" width="0.0741%" height="15" fill="rgb(217,226,24)" fg:x="964" fg:w="1"/><text x="71.6574%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="71.4815%" y="341" width="0.1481%" height="15" fill="rgb(251,99,38)" fg:x="965" fg:w="2"/><text x="71.7315%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="71.4815%" y="325" width="0.1481%" height="15" fill="rgb(231,147,19)" fg:x="965" fg:w="2"/><text x="71.7315%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="71.4815%" y="309" width="0.1481%" height="15" fill="rgb(230,86,8)" fg:x="965" fg:w="2"/><text x="71.7315%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="71.4815%" y="293" width="0.1481%" height="15" fill="rgb(237,159,39)" fg:x="965" fg:w="2"/><text x="71.7315%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="71.4815%" y="277" width="0.1481%" height="15" fill="rgb(247,179,47)" fg:x="965" fg:w="2"/><text x="71.7315%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="71.4815%" y="261" width="0.1481%" height="15" fill="rgb(253,152,26)" fg:x="965" fg:w="2"/><text x="71.7315%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="71.6296%" y="245" width="0.0741%" height="15" fill="rgb(222,211,15)" fg:x="967" fg:w="1"/><text x="71.8796%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="71.8519%" y="213" width="0.0741%" height="15" fill="rgb(236,193,6)" fg:x="970" fg:w="1"/><text x="72.1019%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="71.8519%" y="197" width="0.0741%" height="15" fill="rgb(226,206,10)" fg:x="970" fg:w="1"/><text x="72.1019%" y="207.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="71.9259%" y="181" width="0.1481%" height="15" fill="rgb(213,125,22)" fg:x="971" fg:w="2"/><text x="72.1759%" y="191.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (7 samples, 0.52%)</title><rect x="71.6296%" y="261" width="0.5185%" height="15" fill="rgb(221,66,28)" fg:x="967" fg:w="7"/><text x="71.8796%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.44%)</title><rect x="71.7037%" y="245" width="0.4444%" height="15" fill="rgb(222,84,53)" fg:x="968" fg:w="6"/><text x="71.9537%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.44%)</title><rect x="71.7037%" y="229" width="0.4444%" height="15" fill="rgb(243,50,15)" fg:x="968" fg:w="6"/><text x="71.9537%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.22%)</title><rect x="71.9259%" y="213" width="0.2222%" height="15" fill="rgb(208,184,23)" fg:x="971" fg:w="3"/><text x="72.1759%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="71.9259%" y="197" width="0.2222%" height="15" fill="rgb(221,83,2)" fg:x="971" fg:w="3"/><text x="72.1759%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.07%)</title><rect x="72.0741%" y="181" width="0.0741%" height="15" fill="rgb(236,53,24)" fg:x="973" fg:w="1"/><text x="72.3241%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (8 samples, 0.59%)</title><rect x="71.6296%" y="309" width="0.5926%" height="15" fill="rgb(244,171,29)" fg:x="967" fg:w="8"/><text x="71.8796%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (8 samples, 0.59%)</title><rect x="71.6296%" y="293" width="0.5926%" height="15" fill="rgb(205,19,11)" fg:x="967" fg:w="8"/><text x="71.8796%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (8 samples, 0.59%)</title><rect x="71.6296%" y="277" width="0.5926%" height="15" fill="rgb(207,108,29)" fg:x="967" fg:w="8"/><text x="71.8796%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="72.1481%" y="261" width="0.0741%" height="15" fill="rgb(236,215,43)" fg:x="974" fg:w="1"/><text x="72.3981%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="72.1481%" y="245" width="0.0741%" height="15" fill="rgb(213,58,35)" fg:x="974" fg:w="1"/><text x="72.3981%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="72.1481%" y="229" width="0.0741%" height="15" fill="rgb(220,211,46)" fg:x="974" fg:w="1"/><text x="72.3981%" y="239.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (12 samples, 0.89%)</title><rect x="71.4815%" y="357" width="0.8889%" height="15" fill="rgb(212,134,16)" fg:x="965" fg:w="12"/><text x="71.7315%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.74%)</title><rect x="71.6296%" y="341" width="0.7407%" height="15" fill="rgb(232,90,44)" fg:x="967" fg:w="10"/><text x="71.8796%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.74%)</title><rect x="71.6296%" y="325" width="0.7407%" height="15" fill="rgb(212,18,36)" fg:x="967" fg:w="10"/><text x="71.8796%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="72.2222%" y="309" width="0.1481%" height="15" fill="rgb(206,112,24)" fg:x="975" fg:w="2"/><text x="72.4722%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="72.2222%" y="293" width="0.1481%" height="15" fill="rgb(238,223,40)" fg:x="975" fg:w="2"/><text x="72.4722%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="72.2963%" y="277" width="0.0741%" height="15" fill="rgb(226,169,20)" fg:x="976" fg:w="1"/><text x="72.5463%" y="287.50"></text></g><g><title>plugins_core::tools::occupied_by (13 samples, 0.96%)</title><rect x="71.4815%" y="373" width="0.9630%" height="15" fill="rgb(241,64,52)" fg:x="965" fg:w="13"/><text x="71.7315%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.07%)</title><rect x="72.3704%" y="357" width="0.0741%" height="15" fill="rgb(228,120,25)" fg:x="977" fg:w="1"/><text x="72.6204%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.07%)</title><rect x="72.3704%" y="341" width="0.0741%" height="15" fill="rgb(234,108,19)" fg:x="977" fg:w="1"/><text x="72.6204%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (62 samples, 4.59%)</title><rect x="67.9259%" y="389" width="4.5926%" height="15" fill="rgb(236,133,29)" fg:x="917" fg:w="62"/><text x="68.1759%" y="399.50">plugi..</text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.07%)</title><rect x="72.4444%" y="373" width="0.0741%" height="15" fill="rgb(246,174,53)" fg:x="978" fg:w="1"/><text x="72.6944%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.07%)</title><rect x="72.4444%" y="357" width="0.0741%" height="15" fill="rgb(210,105,35)" fg:x="978" fg:w="1"/><text x="72.6944%" y="367.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="72.4444%" y="341" width="0.0741%" height="15" fill="rgb(225,27,26)" fg:x="978" fg:w="1"/><text x="72.6944%" y="351.50"></text></g><g><title>engine::session::Session::captured (123 samples, 9.11%)</title><rect x="63.4815%" y="549" width="9.1111%" height="15" fill="rgb(233,2,39)" fg:x="857" fg:w="123"/><text x="63.7315%" y="559.50">engine::sessi..</text></g><g><title>engine::session::logs::capture (117 samples, 8.67%)</title><rect x="63.9259%" y="533" width="8.6667%" height="15" fill="rgb(219,164,26)" fg:x="863" fg:w="117"/><text x="64.1759%" y="543.50">engine::sess..</text></g><g><title>tracing_core::dispatcher::with_default (110 samples, 8.15%)</title><rect x="64.4444%" y="517" width="8.1481%" height="15" fill="rgb(236,211,5)" fg:x="870" fg:w="110"/><text x="64.6944%" y="527.50">tracing_cor..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (110 samples, 8.15%)</title><rect x="64.4444%" y="501" width="8.1481%" height="15" fill="rgb(244,227,23)" fg:x="870" fg:w="110"/><text x="64.6944%" y="511.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::apply_middleware (109 samples, 8.07%)</title><rect x="64.5185%" y="485" width="8.0741%" height="15" fill="rgb(230,184,8)" fg:x="871" fg:w="109"/><text x="64.7685%" y="495.50">kernel::plu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (109 samples, 8.07%)</title><rect x="64.5185%" y="469" width="8.0741%" height="15" fill="rgb(217,125,48)" fg:x="871" fg:w="109"/><text x="64.7685%" y="479.50">kernel::plu..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (109 samples, 8.07%)</title><rect x="64.5185%" y="453" width="8.0741%" height="15" fill="rgb(223,192,47)" fg:x="871" fg:w="109"/><text x="64.7685%" y="463.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (69 samples, 5.11%)</title><rect x="67.4815%" y="437" width="5.1111%" height="15" fill="rgb(226,119,10)" fg:x="911" fg:w="69"/><text x="67.7315%" y="447.50">kernel..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (69 samples, 5.11%)</title><rect x="67.4815%" y="421" width="5.1111%" height="15" fill="rgb(221,49,29)" fg:x="911" fg:w="69"/><text x="67.7315%" y="431.50">&lt;plugi..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (65 samples, 4.81%)</title><rect x="67.7778%" y="405" width="4.8148%" height="15" fill="rgb(217,205,19)" fg:x="915" fg:w="65"/><text x="68.0278%" y="415.50">plugin..</text></g><g><title>plugins_rune::sources::load_sources_from_entity (1 samples, 0.07%)</title><rect x="72.5185%" y="389" width="0.0741%" height="15" fill="rgb(242,104,7)" fg:x="979" fg:w="1"/><text x="72.7685%" y="399.50"></text></g><g><title>plugins_rune::sources::get_script (1 samples, 0.07%)</title><rect x="72.5185%" y="373" width="0.0741%" height="15" fill="rgb(209,154,48)" fg:x="979" fg:w="1"/><text x="72.7685%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="72.5926%" y="517" width="0.0741%" height="15" fill="rgb(219,213,46)" fg:x="980" fg:w="1"/><text x="72.8426%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="72.5926%" y="501" width="0.0741%" height="15" fill="rgb(229,105,38)" fg:x="980" fg:w="1"/><text x="72.8426%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="72.5926%" y="485" width="0.0741%" height="15" fill="rgb(205,151,5)" fg:x="980" fg:w="1"/><text x="72.8426%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="72.6667%" y="469" width="0.0741%" height="15" fill="rgb(248,115,40)" fg:x="981" fg:w="1"/><text x="72.9167%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="72.6667%" y="453" width="0.0741%" height="15" fill="rgb(206,179,2)" fg:x="981" fg:w="1"/><text x="72.9167%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="72.6667%" y="437" width="0.0741%" height="15" fill="rgb(230,103,24)" fg:x="981" fg:w="1"/><text x="72.9167%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="72.6667%" y="421" width="0.0741%" height="15" fill="rgb(218,152,4)" fg:x="981" fg:w="1"/><text x="72.9167%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="72.6667%" y="405" width="0.0741%" height="15" fill="rgb(236,161,54)" fg:x="981" fg:w="1"/><text x="72.9167%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="72.6667%" y="389" width="0.0741%" height="15" fill="rgb(226,65,17)" fg:x="981" fg:w="1"/><text x="72.9167%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="72.6667%" y="373" width="0.0741%" height="15" fill="rgb(221,134,44)" fg:x="981" fg:w="1"/><text x="72.9167%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="72.6667%" y="357" width="0.0741%" height="15" fill="rgb(251,129,4)" fg:x="981" fg:w="1"/><text x="72.9167%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="72.6667%" y="341" width="0.0741%" height="15" fill="rgb(244,32,34)" fg:x="981" fg:w="1"/><text x="72.9167%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="72.6667%" y="325" width="0.0741%" height="15" fill="rgb(251,224,37)" fg:x="981" fg:w="1"/><text x="72.9167%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="72.6667%" y="309" width="0.0741%" height="15" fill="rgb(248,117,31)" fg:x="981" fg:w="1"/><text x="72.9167%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="72.6667%" y="293" width="0.0741%" height="15" fill="rgb(222,208,37)" fg:x="981" fg:w="1"/><text x="72.9167%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="72.6667%" y="277" width="0.0741%" height="15" fill="rgb(234,211,25)" fg:x="981" fg:w="1"/><text x="72.9167%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="72.6667%" y="261" width="0.0741%" height="15" fill="rgb(211,72,6)" fg:x="981" fg:w="1"/><text x="72.9167%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="72.6667%" y="485" width="0.1481%" height="15" fill="rgb(249,198,38)" fg:x="981" fg:w="2"/><text x="72.9167%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="72.7407%" y="469" width="0.0741%" height="15" fill="rgb(221,86,51)" fg:x="982" fg:w="1"/><text x="72.9907%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="72.7407%" y="453" width="0.0741%" height="15" fill="rgb(226,178,43)" fg:x="982" fg:w="1"/><text x="72.9907%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="72.7407%" y="437" width="0.0741%" height="15" fill="rgb(215,145,7)" fg:x="982" fg:w="1"/><text x="72.9907%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="72.7407%" y="421" width="0.0741%" height="15" fill="rgb(250,202,36)" fg:x="982" fg:w="1"/><text x="72.9907%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="72.7407%" y="405" width="0.0741%" height="15" fill="rgb(215,86,13)" fg:x="982" fg:w="1"/><text x="72.9907%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="72.7407%" y="389" width="0.0741%" height="15" fill="rgb(221,134,12)" fg:x="982" fg:w="1"/><text x="72.9907%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="72.7407%" y="373" width="0.0741%" height="15" fill="rgb(213,82,10)" fg:x="982" fg:w="1"/><text x="72.9907%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="72.7407%" y="357" width="0.0741%" height="15" fill="rgb(214,142,0)" fg:x="982" fg:w="1"/><text x="72.9907%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="72.7407%" y="341" width="0.0741%" height="15" fill="rgb(205,145,9)" fg:x="982" fg:w="1"/><text x="72.9907%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="72.7407%" y="325" width="0.0741%" height="15" fill="rgb(244,214,8)" fg:x="982" fg:w="1"/><text x="72.9907%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="72.7407%" y="309" width="0.0741%" height="15" fill="rgb(224,72,51)" fg:x="982" fg:w="1"/><text x="72.9907%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="72.7407%" y="293" width="0.0741%" height="15" fill="rgb(233,137,37)" fg:x="982" fg:w="1"/><text x="72.9907%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.22%)</title><rect x="72.6667%" y="501" width="0.2222%" height="15" fill="rgb(208,71,28)" fg:x="981" fg:w="3"/><text x="72.9167%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="72.8148%" y="485" width="0.0741%" height="15" fill="rgb(226,31,7)" fg:x="983" fg:w="1"/><text x="73.0648%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="72.8148%" y="469" width="0.0741%" height="15" fill="rgb(229,62,18)" fg:x="983" fg:w="1"/><text x="73.0648%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="72.8148%" y="453" width="0.0741%" height="15" fill="rgb(226,74,28)" fg:x="983" fg:w="1"/><text x="73.0648%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="72.8148%" y="437" width="0.0741%" height="15" fill="rgb(214,170,18)" fg:x="983" fg:w="1"/><text x="73.0648%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="72.8148%" y="421" width="0.0741%" height="15" fill="rgb(227,229,35)" fg:x="983" fg:w="1"/><text x="73.0648%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="72.8148%" y="405" width="0.0741%" height="15" fill="rgb(225,181,39)" fg:x="983" fg:w="1"/><text x="73.0648%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="72.8148%" y="389" width="0.0741%" height="15" fill="rgb(253,124,44)" fg:x="983" fg:w="1"/><text x="73.0648%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="72.8148%" y="373" width="0.0741%" height="15" fill="rgb(220,75,18)" fg:x="983" fg:w="1"/><text x="73.0648%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="72.8148%" y="357" width="0.0741%" height="15" fill="rgb(239,175,43)" fg:x="983" fg:w="1"/><text x="73.0648%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="72.8148%" y="341" width="0.0741%" height="15" fill="rgb(228,112,50)" fg:x="983" fg:w="1"/><text x="73.0648%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="72.8148%" y="325" width="0.0741%" height="15" fill="rgb(232,105,36)" fg:x="983" fg:w="1"/><text x="73.0648%" y="335.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.07%)</title><rect x="72.8148%" y="309" width="0.0741%" height="15" fill="rgb(227,137,47)" fg:x="983" fg:w="1"/><text x="73.0648%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="72.8889%" y="389" width="0.0741%" height="15" fill="rgb(217,51,9)" fg:x="984" fg:w="1"/><text x="73.1389%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="72.8889%" y="373" width="0.0741%" height="15" fill="rgb(245,117,0)" fg:x="984" fg:w="1"/><text x="73.1389%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="72.8889%" y="357" width="0.0741%" height="15" fill="rgb(252,52,30)" fg:x="984" fg:w="1"/><text x="73.1389%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="72.8889%" y="341" width="0.0741%" height="15" fill="rgb(227,85,33)" fg:x="984" fg:w="1"/><text x="73.1389%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="72.8889%" y="325" width="0.0741%" height="15" fill="rgb(220,157,20)" fg:x="984" fg:w="1"/><text x="73.1389%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="72.8889%" y="309" width="0.0741%" height="15" fill="rgb(254,14,34)" fg:x="984" fg:w="1"/><text x="73.1389%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="72.8889%" y="293" width="0.0741%" height="15" fill="rgb(216,103,41)" fg:x="984" fg:w="1"/><text x="73.1389%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="72.8889%" y="277" width="0.0741%" height="15" fill="rgb(245,221,9)" fg:x="984" fg:w="1"/><text x="73.1389%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="72.8889%" y="261" width="0.0741%" height="15" fill="rgb(254,136,47)" fg:x="984" fg:w="1"/><text x="73.1389%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="72.8889%" y="245" width="0.0741%" height="15" fill="rgb(235,71,46)" fg:x="984" fg:w="1"/><text x="73.1389%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="72.8889%" y="229" width="0.0741%" height="15" fill="rgb(242,154,29)" fg:x="984" fg:w="1"/><text x="73.1389%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="72.8889%" y="213" width="0.0741%" height="15" fill="rgb(210,65,31)" fg:x="984" fg:w="1"/><text x="73.1389%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="72.8889%" y="437" width="0.1481%" height="15" fill="rgb(244,9,50)" fg:x="984" fg:w="2"/><text x="73.1389%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="72.8889%" y="421" width="0.1481%" height="15" fill="rgb(215,141,38)" fg:x="984" fg:w="2"/><text x="73.1389%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="72.8889%" y="405" width="0.1481%" height="15" fill="rgb(241,129,6)" fg:x="984" fg:w="2"/><text x="73.1389%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="72.9630%" y="389" width="0.0741%" height="15" fill="rgb(253,169,4)" fg:x="985" fg:w="1"/><text x="73.2130%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="73.0370%" y="437" width="0.1481%" height="15" fill="rgb(237,82,36)" fg:x="986" fg:w="2"/><text x="73.2870%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="73.0370%" y="421" width="0.1481%" height="15" fill="rgb(209,171,11)" fg:x="986" fg:w="2"/><text x="73.2870%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="73.0370%" y="405" width="0.1481%" height="15" fill="rgb(242,19,22)" fg:x="986" fg:w="2"/><text x="73.2870%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="73.0370%" y="389" width="0.1481%" height="15" fill="rgb(251,122,24)" fg:x="986" fg:w="2"/><text x="73.2870%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="73.0370%" y="373" width="0.1481%" height="15" fill="rgb(226,166,42)" fg:x="986" fg:w="2"/><text x="73.2870%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="73.0370%" y="357" width="0.1481%" height="15" fill="rgb(244,101,48)" fg:x="986" fg:w="2"/><text x="73.2870%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="73.0370%" y="341" width="0.1481%" height="15" fill="rgb(227,125,1)" fg:x="986" fg:w="2"/><text x="73.2870%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="73.0370%" y="325" width="0.1481%" height="15" fill="rgb(206,79,43)" fg:x="986" fg:w="2"/><text x="73.2870%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="73.0370%" y="309" width="0.1481%" height="15" fill="rgb(241,109,41)" fg:x="986" fg:w="2"/><text x="73.2870%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="73.0370%" y="293" width="0.1481%" height="15" fill="rgb(219,73,4)" fg:x="986" fg:w="2"/><text x="73.2870%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="73.0370%" y="277" width="0.1481%" height="15" fill="rgb(239,25,41)" fg:x="986" fg:w="2"/><text x="73.2870%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="73.0370%" y="261" width="0.1481%" height="15" fill="rgb(208,88,46)" fg:x="986" fg:w="2"/><text x="73.2870%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.37%)</title><rect x="72.8889%" y="453" width="0.3704%" height="15" fill="rgb(239,184,9)" fg:x="984" fg:w="5"/><text x="73.1389%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="73.1852%" y="437" width="0.0741%" height="15" fill="rgb(223,114,13)" fg:x="988" fg:w="1"/><text x="73.4352%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="73.2593%" y="405" width="0.1481%" height="15" fill="rgb(214,28,42)" fg:x="989" fg:w="2"/><text x="73.5093%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="73.2593%" y="389" width="0.1481%" height="15" fill="rgb(252,32,44)" fg:x="989" fg:w="2"/><text x="73.5093%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="73.2593%" y="373" width="0.1481%" height="15" fill="rgb(231,159,4)" fg:x="989" fg:w="2"/><text x="73.5093%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="73.3333%" y="357" width="0.0741%" height="15" fill="rgb(210,35,26)" fg:x="990" fg:w="1"/><text x="73.5833%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="73.3333%" y="341" width="0.0741%" height="15" fill="rgb(208,190,37)" fg:x="990" fg:w="1"/><text x="73.5833%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="73.3333%" y="325" width="0.0741%" height="15" fill="rgb(226,148,22)" fg:x="990" fg:w="1"/><text x="73.5833%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="73.3333%" y="309" width="0.0741%" height="15" fill="rgb(242,153,24)" fg:x="990" fg:w="1"/><text x="73.5833%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="73.3333%" y="293" width="0.0741%" height="15" fill="rgb(213,133,7)" fg:x="990" fg:w="1"/><text x="73.5833%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="73.3333%" y="277" width="0.0741%" height="15" fill="rgb(248,206,18)" fg:x="990" fg:w="1"/><text x="73.5833%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="73.3333%" y="261" width="0.0741%" height="15" fill="rgb(233,157,4)" fg:x="990" fg:w="1"/><text x="73.5833%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="73.3333%" y="245" width="0.0741%" height="15" fill="rgb(249,179,32)" fg:x="990" fg:w="1"/><text x="73.5833%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="73.3333%" y="229" width="0.0741%" height="15" fill="rgb(248,69,35)" fg:x="990" fg:w="1"/><text x="73.5833%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="73.3333%" y="213" width="0.0741%" height="15" fill="rgb(249,158,38)" fg:x="990" fg:w="1"/><text x="73.5833%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="73.3333%" y="197" width="0.0741%" height="15" fill="rgb(223,18,43)" fg:x="990" fg:w="1"/><text x="73.5833%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="73.3333%" y="181" width="0.0741%" height="15" fill="rgb(238,42,45)" fg:x="990" fg:w="1"/><text x="73.5833%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="73.4074%" y="357" width="0.0741%" height="15" fill="rgb(219,65,47)" fg:x="991" fg:w="1"/><text x="73.6574%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="73.4074%" y="341" width="0.0741%" height="15" fill="rgb(248,153,12)" fg:x="991" fg:w="1"/><text x="73.6574%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="73.4074%" y="325" width="0.0741%" height="15" fill="rgb(240,118,4)" fg:x="991" fg:w="1"/><text x="73.6574%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="73.4074%" y="309" width="0.0741%" height="15" fill="rgb(250,96,34)" fg:x="991" fg:w="1"/><text x="73.6574%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="73.4074%" y="293" width="0.0741%" height="15" fill="rgb(221,15,4)" fg:x="991" fg:w="1"/><text x="73.6574%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="73.4074%" y="277" width="0.0741%" height="15" fill="rgb(217,149,33)" fg:x="991" fg:w="1"/><text x="73.6574%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="73.4074%" y="261" width="0.0741%" height="15" fill="rgb(213,58,29)" fg:x="991" fg:w="1"/><text x="73.6574%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="73.4074%" y="245" width="0.0741%" height="15" fill="rgb(236,218,9)" fg:x="991" fg:w="1"/><text x="73.6574%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="73.4074%" y="229" width="0.0741%" height="15" fill="rgb(248,40,19)" fg:x="991" fg:w="1"/><text x="73.6574%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="73.4074%" y="213" width="0.0741%" height="15" fill="rgb(212,17,6)" fg:x="991" fg:w="1"/><text x="73.6574%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="73.4074%" y="197" width="0.0741%" height="15" fill="rgb(206,212,20)" fg:x="991" fg:w="1"/><text x="73.6574%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="73.4074%" y="181" width="0.0741%" height="15" fill="rgb(229,80,37)" fg:x="991" fg:w="1"/><text x="73.6574%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="73.4074%" y="165" width="0.0741%" height="15" fill="rgb(253,8,37)" fg:x="991" fg:w="1"/><text x="73.6574%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="73.4074%" y="149" width="0.0741%" height="15" fill="rgb(215,16,43)" fg:x="991" fg:w="1"/><text x="73.6574%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.22%)</title><rect x="73.4815%" y="357" width="0.2222%" height="15" fill="rgb(236,219,16)" fg:x="992" fg:w="3"/><text x="73.7315%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.22%)</title><rect x="73.4815%" y="341" width="0.2222%" height="15" fill="rgb(251,0,3)" fg:x="992" fg:w="3"/><text x="73.7315%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.15%)</title><rect x="73.5556%" y="325" width="0.1481%" height="15" fill="rgb(207,133,37)" fg:x="993" fg:w="2"/><text x="73.8056%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="73.5556%" y="309" width="0.1481%" height="15" fill="rgb(250,143,20)" fg:x="993" fg:w="2"/><text x="73.8056%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="73.5556%" y="293" width="0.1481%" height="15" fill="rgb(242,19,50)" fg:x="993" fg:w="2"/><text x="73.8056%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="73.6296%" y="277" width="0.0741%" height="15" fill="rgb(206,124,43)" fg:x="994" fg:w="1"/><text x="73.8796%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="73.7037%" y="357" width="0.0741%" height="15" fill="rgb(229,4,38)" fg:x="995" fg:w="1"/><text x="73.9537%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.52%)</title><rect x="73.4074%" y="405" width="0.5185%" height="15" fill="rgb(247,220,45)" fg:x="991" fg:w="7"/><text x="73.6574%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.52%)</title><rect x="73.4074%" y="389" width="0.5185%" height="15" fill="rgb(247,195,0)" fg:x="991" fg:w="7"/><text x="73.6574%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.52%)</title><rect x="73.4074%" y="373" width="0.5185%" height="15" fill="rgb(252,12,19)" fg:x="991" fg:w="7"/><text x="73.6574%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="73.7778%" y="357" width="0.1481%" height="15" fill="rgb(222,49,50)" fg:x="996" fg:w="2"/><text x="74.0278%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="73.7778%" y="341" width="0.1481%" height="15" fill="rgb(209,157,28)" fg:x="996" fg:w="2"/><text x="74.0278%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="73.8519%" y="325" width="0.0741%" height="15" fill="rgb(238,174,24)" fg:x="997" fg:w="1"/><text x="74.1019%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="73.8519%" y="309" width="0.0741%" height="15" fill="rgb(224,17,28)" fg:x="997" fg:w="1"/><text x="74.1019%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="73.8519%" y="293" width="0.0741%" height="15" fill="rgb(249,7,29)" fg:x="997" fg:w="1"/><text x="74.1019%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="73.9259%" y="373" width="0.1481%" height="15" fill="rgb(243,178,4)" fg:x="998" fg:w="2"/><text x="74.1759%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.15%)</title><rect x="73.9259%" y="357" width="0.1481%" height="15" fill="rgb(246,138,35)" fg:x="998" fg:w="2"/><text x="74.1759%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="73.9259%" y="341" width="0.1481%" height="15" fill="rgb(251,85,18)" fg:x="998" fg:w="2"/><text x="74.1759%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.89%)</title><rect x="73.2593%" y="453" width="0.8889%" height="15" fill="rgb(254,55,9)" fg:x="989" fg:w="12"/><text x="73.5093%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.89%)</title><rect x="73.2593%" y="437" width="0.8889%" height="15" fill="rgb(248,4,50)" fg:x="989" fg:w="12"/><text x="73.5093%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (12 samples, 0.89%)</title><rect x="73.2593%" y="421" width="0.8889%" height="15" fill="rgb(215,208,14)" fg:x="989" fg:w="12"/><text x="73.5093%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.22%)</title><rect x="73.9259%" y="405" width="0.2222%" height="15" fill="rgb(218,37,18)" fg:x="998" fg:w="3"/><text x="74.1759%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="73.9259%" y="389" width="0.2222%" height="15" fill="rgb(206,104,13)" fg:x="998" fg:w="3"/><text x="74.1759%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="74.0741%" y="373" width="0.0741%" height="15" fill="rgb(248,94,22)" fg:x="1000" fg:w="1"/><text x="74.3241%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="74.1481%" y="389" width="0.0741%" height="15" fill="rgb(235,42,46)" fg:x="1001" fg:w="1"/><text x="74.3981%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.48%)</title><rect x="72.8889%" y="485" width="1.4815%" height="15" fill="rgb(220,228,48)" fg:x="984" fg:w="20"/><text x="73.1389%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (20 samples, 1.48%)</title><rect x="72.8889%" y="469" width="1.4815%" height="15" fill="rgb(216,58,12)" fg:x="984" fg:w="20"/><text x="73.1389%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.22%)</title><rect x="74.1481%" y="453" width="0.2222%" height="15" fill="rgb(223,97,52)" fg:x="1001" fg:w="3"/><text x="74.3981%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="74.1481%" y="437" width="0.2222%" height="15" fill="rgb(208,159,17)" fg:x="1001" fg:w="3"/><text x="74.3981%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.22%)</title><rect x="74.1481%" y="421" width="0.2222%" height="15" fill="rgb(215,172,9)" fg:x="1001" fg:w="3"/><text x="74.3981%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.22%)</title><rect x="74.1481%" y="405" width="0.2222%" height="15" fill="rgb(252,175,30)" fg:x="1001" fg:w="3"/><text x="74.3981%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="74.2222%" y="389" width="0.1481%" height="15" fill="rgb(209,159,10)" fg:x="1002" fg:w="2"/><text x="74.4722%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.15%)</title><rect x="74.2222%" y="373" width="0.1481%" height="15" fill="rgb(229,73,51)" fg:x="1002" fg:w="2"/><text x="74.4722%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.15%)</title><rect x="74.2222%" y="357" width="0.1481%" height="15" fill="rgb(208,212,43)" fg:x="1002" fg:w="2"/><text x="74.4722%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="74.2222%" y="341" width="0.1481%" height="15" fill="rgb(254,123,53)" fg:x="1002" fg:w="2"/><text x="74.4722%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 1.56%)</title><rect x="72.8889%" y="501" width="1.5556%" height="15" fill="rgb(254,128,49)" fg:x="984" fg:w="21"/><text x="73.1389%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;core::iter::adapters::flatten::FlatMap&lt;serde_json::map::Iter,core::option::Option&lt;alloc::vec::Vec&lt;kernel::model::entity_ref::EntityRef&gt;&gt;,kernel::model::entity_ref::find_entity_refs::{{closure}}&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="74.3704%" y="485" width="0.0741%" height="15" fill="rgb(246,16,16)" fg:x="1004" fg:w="1"/><text x="74.6204%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="74.5185%" y="437" width="0.0741%" height="15" fill="rgb(209,200,1)" fg:x="1006" fg:w="1"/><text x="74.7685%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.22%)</title><rect x="74.5926%" y="437" width="0.2222%" height="15" fill="rgb(235,9,3)" fg:x="1007" fg:w="3"/><text x="74.8426%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.22%)</title><rect x="74.5926%" y="421" width="0.2222%" height="15" fill="rgb(233,121,54)" fg:x="1007" fg:w="3"/><text x="74.8426%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="74.8148%" y="421" width="0.0741%" height="15" fill="rgb(236,80,25)" fg:x="1010" fg:w="1"/><text x="75.0648%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.52%)</title><rect x="74.5185%" y="469" width="0.5185%" height="15" fill="rgb(220,44,24)" fg:x="1006" fg:w="7"/><text x="74.7685%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.52%)</title><rect x="74.5185%" y="453" width="0.5185%" height="15" fill="rgb(236,225,16)" fg:x="1006" fg:w="7"/><text x="74.7685%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.22%)</title><rect x="74.8148%" y="437" width="0.2222%" height="15" fill="rgb(237,140,0)" fg:x="1010" fg:w="3"/><text x="75.0648%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="74.8889%" y="421" width="0.1481%" height="15" fill="rgb(243,225,53)" fg:x="1011" fg:w="2"/><text x="75.1389%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="74.9630%" y="405" width="0.0741%" height="15" fill="rgb(240,140,30)" fg:x="1012" fg:w="1"/><text x="75.2130%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="74.9630%" y="389" width="0.0741%" height="15" fill="rgb(217,51,16)" fg:x="1012" fg:w="1"/><text x="75.2130%" y="399.50"></text></g><g><title>engine::session::internal::Added::find_refs (34 samples, 2.52%)</title><rect x="72.5926%" y="533" width="2.5185%" height="15" fill="rgb(245,75,50)" fg:x="980" fg:w="34"/><text x="72.8426%" y="543.50">en..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (33 samples, 2.44%)</title><rect x="72.6667%" y="517" width="2.4444%" height="15" fill="rgb(208,174,22)" fg:x="981" fg:w="33"/><text x="72.9167%" y="527.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.67%)</title><rect x="74.4444%" y="501" width="0.6667%" height="15" fill="rgb(219,98,50)" fg:x="1005" fg:w="9"/><text x="74.6944%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.67%)</title><rect x="74.4444%" y="485" width="0.6667%" height="15" fill="rgb(243,138,3)" fg:x="1005" fg:w="9"/><text x="74.6944%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="75.0370%" y="469" width="0.0741%" height="15" fill="rgb(243,132,26)" fg:x="1013" fg:w="1"/><text x="75.2870%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="75.1852%" y="469" width="0.0741%" height="15" fill="rgb(250,201,8)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="75.1852%" y="453" width="0.0741%" height="15" fill="rgb(213,91,26)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="75.1852%" y="437" width="0.0741%" height="15" fill="rgb(229,117,1)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="75.1852%" y="421" width="0.0741%" height="15" fill="rgb(229,24,6)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="75.1852%" y="405" width="0.0741%" height="15" fill="rgb(206,69,11)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="75.1852%" y="389" width="0.0741%" height="15" fill="rgb(234,111,34)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="75.1852%" y="373" width="0.0741%" height="15" fill="rgb(213,187,51)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="75.1852%" y="357" width="0.0741%" height="15" fill="rgb(207,45,11)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="75.1852%" y="341" width="0.0741%" height="15" fill="rgb(225,151,47)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="75.1852%" y="325" width="0.0741%" height="15" fill="rgb(211,226,5)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="75.1852%" y="309" width="0.0741%" height="15" fill="rgb(214,83,52)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="75.1852%" y="293" width="0.0741%" height="15" fill="rgb(229,49,53)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="75.1852%" y="277" width="0.0741%" height="15" fill="rgb(246,8,28)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="75.1852%" y="261" width="0.0741%" height="15" fill="rgb(207,28,41)" fg:x="1015" fg:w="1"/><text x="75.4352%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.22%)</title><rect x="75.1111%" y="517" width="0.2222%" height="15" fill="rgb(254,22,25)" fg:x="1014" fg:w="3"/><text x="75.3611%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.22%)</title><rect x="75.1111%" y="501" width="0.2222%" height="15" fill="rgb(209,120,42)" fg:x="1014" fg:w="3"/><text x="75.3611%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="75.1852%" y="485" width="0.1481%" height="15" fill="rgb(216,194,18)" fg:x="1015" fg:w="2"/><text x="75.4352%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="75.2593%" y="469" width="0.0741%" height="15" fill="rgb(213,70,17)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="75.2593%" y="453" width="0.0741%" height="15" fill="rgb(228,66,19)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="75.2593%" y="437" width="0.0741%" height="15" fill="rgb(236,221,54)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="75.2593%" y="421" width="0.0741%" height="15" fill="rgb(207,175,15)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="75.2593%" y="405" width="0.0741%" height="15" fill="rgb(234,76,8)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="75.2593%" y="389" width="0.0741%" height="15" fill="rgb(243,106,0)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="75.2593%" y="373" width="0.0741%" height="15" fill="rgb(208,48,19)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="75.2593%" y="357" width="0.0741%" height="15" fill="rgb(251,50,29)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="75.2593%" y="341" width="0.0741%" height="15" fill="rgb(222,31,49)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="75.2593%" y="325" width="0.0741%" height="15" fill="rgb(232,33,18)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="75.2593%" y="309" width="0.0741%" height="15" fill="rgb(209,1,44)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="75.2593%" y="293" width="0.0741%" height="15" fill="rgb(211,7,1)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="75.2593%" y="277" width="0.0741%" height="15" fill="rgb(224,111,27)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="75.2593%" y="261" width="0.0741%" height="15" fill="rgb(252,195,39)" fg:x="1016" fg:w="1"/><text x="75.5093%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="75.3333%" y="517" width="0.0741%" height="15" fill="rgb(237,198,5)" fg:x="1017" fg:w="1"/><text x="75.5833%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="75.3333%" y="501" width="0.0741%" height="15" fill="rgb(232,148,1)" fg:x="1017" fg:w="1"/><text x="75.5833%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="75.3333%" y="485" width="0.0741%" height="15" fill="rgb(249,41,3)" fg:x="1017" fg:w="1"/><text x="75.5833%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="75.3333%" y="469" width="0.0741%" height="15" fill="rgb(215,14,33)" fg:x="1017" fg:w="1"/><text x="75.5833%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="75.3333%" y="453" width="0.0741%" height="15" fill="rgb(209,146,24)" fg:x="1017" fg:w="1"/><text x="75.5833%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="75.3333%" y="437" width="0.0741%" height="15" fill="rgb(219,51,47)" fg:x="1017" fg:w="1"/><text x="75.5833%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="75.4074%" y="437" width="0.0741%" height="15" fill="rgb(234,217,40)" fg:x="1018" fg:w="1"/><text x="75.6574%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="75.4074%" y="421" width="0.0741%" height="15" fill="rgb(228,34,26)" fg:x="1018" fg:w="1"/><text x="75.6574%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="75.4074%" y="405" width="0.0741%" height="15" fill="rgb(224,50,29)" fg:x="1018" fg:w="1"/><text x="75.6574%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="75.4815%" y="389" width="0.0741%" height="15" fill="rgb(205,79,51)" fg:x="1019" fg:w="1"/><text x="75.7315%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="75.4815%" y="421" width="0.2222%" height="15" fill="rgb(218,136,28)" fg:x="1019" fg:w="3"/><text x="75.7315%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="75.4815%" y="405" width="0.2222%" height="15" fill="rgb(220,150,10)" fg:x="1019" fg:w="3"/><text x="75.7315%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.15%)</title><rect x="75.5556%" y="389" width="0.1481%" height="15" fill="rgb(242,158,47)" fg:x="1020" fg:w="2"/><text x="75.8056%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="75.6296%" y="373" width="0.0741%" height="15" fill="rgb(209,68,0)" fg:x="1021" fg:w="1"/><text x="75.8796%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="75.7037%" y="373" width="0.0741%" height="15" fill="rgb(208,13,41)" fg:x="1022" fg:w="1"/><text x="75.9537%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="75.7037%" y="421" width="0.1481%" height="15" fill="rgb(226,201,7)" fg:x="1022" fg:w="2"/><text x="75.9537%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="75.7037%" y="405" width="0.1481%" height="15" fill="rgb(236,103,26)" fg:x="1022" fg:w="2"/><text x="75.9537%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="75.7037%" y="389" width="0.1481%" height="15" fill="rgb(243,162,8)" fg:x="1022" fg:w="2"/><text x="75.9537%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="75.7778%" y="373" width="0.0741%" height="15" fill="rgb(237,225,11)" fg:x="1023" fg:w="1"/><text x="76.0278%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="75.7778%" y="357" width="0.0741%" height="15" fill="rgb(247,186,32)" fg:x="1023" fg:w="1"/><text x="76.0278%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.07%)</title><rect x="75.9259%" y="373" width="0.0741%" height="15" fill="rgb(215,26,28)" fg:x="1025" fg:w="1"/><text x="76.1759%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.07%)</title><rect x="75.9259%" y="357" width="0.0741%" height="15" fill="rgb(208,121,6)" fg:x="1025" fg:w="1"/><text x="76.1759%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="75.9259%" y="341" width="0.0741%" height="15" fill="rgb(225,91,3)" fg:x="1025" fg:w="1"/><text x="76.1759%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="75.9259%" y="325" width="0.0741%" height="15" fill="rgb(246,119,36)" fg:x="1025" fg:w="1"/><text x="76.1759%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="75.9259%" y="309" width="0.0741%" height="15" fill="rgb(254,173,2)" fg:x="1025" fg:w="1"/><text x="76.1759%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="75.9259%" y="293" width="0.0741%" height="15" fill="rgb(209,87,54)" fg:x="1025" fg:w="1"/><text x="76.1759%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.67%)</title><rect x="75.4074%" y="469" width="0.6667%" height="15" fill="rgb(223,216,20)" fg:x="1018" fg:w="9"/><text x="75.6574%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.67%)</title><rect x="75.4074%" y="453" width="0.6667%" height="15" fill="rgb(220,31,8)" fg:x="1018" fg:w="9"/><text x="75.6574%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.59%)</title><rect x="75.4815%" y="437" width="0.5926%" height="15" fill="rgb(220,185,15)" fg:x="1019" fg:w="8"/><text x="75.7315%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="75.8519%" y="421" width="0.2222%" height="15" fill="rgb(247,190,50)" fg:x="1024" fg:w="3"/><text x="76.1019%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="75.8519%" y="405" width="0.2222%" height="15" fill="rgb(239,173,47)" fg:x="1024" fg:w="3"/><text x="76.1019%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.15%)</title><rect x="75.9259%" y="389" width="0.1481%" height="15" fill="rgb(218,190,42)" fg:x="1025" fg:w="2"/><text x="76.1759%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="76.0000%" y="373" width="0.0741%" height="15" fill="rgb(251,207,16)" fg:x="1026" fg:w="1"/><text x="76.2500%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="76.0000%" y="357" width="0.0741%" height="15" fill="rgb(222,199,47)" fg:x="1026" fg:w="1"/><text x="76.2500%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="76.0000%" y="341" width="0.0741%" height="15" fill="rgb(245,190,7)" fg:x="1026" fg:w="1"/><text x="76.2500%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (11 samples, 0.81%)</title><rect x="75.4074%" y="517" width="0.8148%" height="15" fill="rgb(239,85,38)" fg:x="1018" fg:w="11"/><text x="75.6574%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.81%)</title><rect x="75.4074%" y="501" width="0.8148%" height="15" fill="rgb(229,69,51)" fg:x="1018" fg:w="11"/><text x="75.6574%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.81%)</title><rect x="75.4074%" y="485" width="0.8148%" height="15" fill="rgb(231,104,51)" fg:x="1018" fg:w="11"/><text x="75.6574%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="76.0741%" y="469" width="0.1481%" height="15" fill="rgb(235,49,4)" fg:x="1027" fg:w="2"/><text x="76.3241%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="76.0741%" y="453" width="0.1481%" height="15" fill="rgb(246,166,20)" fg:x="1027" fg:w="2"/><text x="76.3241%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="76.1481%" y="437" width="0.0741%" height="15" fill="rgb(230,119,37)" fg:x="1028" fg:w="1"/><text x="76.3981%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="76.1481%" y="421" width="0.0741%" height="15" fill="rgb(234,77,34)" fg:x="1028" fg:w="1"/><text x="76.3981%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="76.2222%" y="421" width="0.0741%" height="15" fill="rgb(211,222,33)" fg:x="1029" fg:w="1"/><text x="76.4722%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="76.2222%" y="405" width="0.0741%" height="15" fill="rgb(226,45,42)" fg:x="1029" fg:w="1"/><text x="76.4722%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="76.2222%" y="453" width="0.2222%" height="15" fill="rgb(215,174,28)" fg:x="1029" fg:w="3"/><text x="76.4722%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="76.2222%" y="437" width="0.2222%" height="15" fill="rgb(254,173,49)" fg:x="1029" fg:w="3"/><text x="76.4722%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="76.2963%" y="421" width="0.1481%" height="15" fill="rgb(229,191,6)" fg:x="1030" fg:w="2"/><text x="76.5463%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="76.2963%" y="405" width="0.1481%" height="15" fill="rgb(212,145,22)" fg:x="1030" fg:w="2"/><text x="76.5463%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (53 samples, 3.93%)</title><rect x="72.5926%" y="549" width="3.9259%" height="15" fill="rgb(226,6,51)" fg:x="980" fg:w="53"/><text x="72.8426%" y="559.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.41%)</title><rect x="75.1111%" y="533" width="1.4074%" height="15" fill="rgb(227,128,8)" fg:x="1014" fg:w="19"/><text x="75.3611%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.30%)</title><rect x="76.2222%" y="517" width="0.2963%" height="15" fill="rgb(205,24,10)" fg:x="1029" fg:w="4"/><text x="76.4722%" y="527.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.30%)</title><rect x="76.2222%" y="501" width="0.2963%" height="15" fill="rgb(217,147,27)" fg:x="1029" fg:w="4"/><text x="76.4722%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.30%)</title><rect x="76.2222%" y="485" width="0.2963%" height="15" fill="rgb(250,82,42)" fg:x="1029" fg:w="4"/><text x="76.4722%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.30%)</title><rect x="76.2222%" y="469" width="0.2963%" height="15" fill="rgb(248,93,17)" fg:x="1029" fg:w="4"/><text x="76.4722%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="76.4444%" y="453" width="0.0741%" height="15" fill="rgb(254,212,40)" fg:x="1032" fg:w="1"/><text x="76.6944%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="76.5926%" y="501" width="0.1481%" height="15" fill="rgb(229,209,2)" fg:x="1034" fg:w="2"/><text x="76.8426%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="76.5926%" y="485" width="0.1481%" height="15" fill="rgb(211,50,43)" fg:x="1034" fg:w="2"/><text x="76.8426%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="76.5926%" y="469" width="0.1481%" height="15" fill="rgb(245,196,29)" fg:x="1034" fg:w="2"/><text x="76.8426%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="76.5926%" y="453" width="0.1481%" height="15" fill="rgb(216,132,13)" fg:x="1034" fg:w="2"/><text x="76.8426%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="76.5926%" y="437" width="0.1481%" height="15" fill="rgb(251,108,21)" fg:x="1034" fg:w="2"/><text x="76.8426%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="76.6667%" y="421" width="0.0741%" height="15" fill="rgb(229,174,54)" fg:x="1035" fg:w="1"/><text x="76.9167%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="76.6667%" y="405" width="0.0741%" height="15" fill="rgb(211,175,47)" fg:x="1035" fg:w="1"/><text x="76.9167%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="76.6667%" y="389" width="0.0741%" height="15" fill="rgb(234,5,37)" fg:x="1035" fg:w="1"/><text x="76.9167%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="76.6667%" y="373" width="0.0741%" height="15" fill="rgb(244,150,43)" fg:x="1035" fg:w="1"/><text x="76.9167%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="76.6667%" y="357" width="0.0741%" height="15" fill="rgb(242,172,38)" fg:x="1035" fg:w="1"/><text x="76.9167%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="76.6667%" y="341" width="0.0741%" height="15" fill="rgb(205,27,8)" fg:x="1035" fg:w="1"/><text x="76.9167%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="76.6667%" y="325" width="0.0741%" height="15" fill="rgb(217,57,3)" fg:x="1035" fg:w="1"/><text x="76.9167%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="76.7407%" y="485" width="0.0741%" height="15" fill="rgb(242,21,38)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="76.7407%" y="469" width="0.0741%" height="15" fill="rgb(209,64,43)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="76.7407%" y="453" width="0.0741%" height="15" fill="rgb(222,2,46)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="76.7407%" y="437" width="0.0741%" height="15" fill="rgb(218,19,44)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="76.7407%" y="421" width="0.0741%" height="15" fill="rgb(240,203,42)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="76.7407%" y="405" width="0.0741%" height="15" fill="rgb(229,23,45)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="76.7407%" y="389" width="0.0741%" height="15" fill="rgb(205,228,51)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="76.7407%" y="373" width="0.0741%" height="15" fill="rgb(239,36,20)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="76.7407%" y="357" width="0.0741%" height="15" fill="rgb(248,172,27)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="76.7407%" y="341" width="0.0741%" height="15" fill="rgb(244,55,32)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="76.7407%" y="325" width="0.0741%" height="15" fill="rgb(215,97,16)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="76.7407%" y="309" width="0.0741%" height="15" fill="rgb(224,80,29)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="76.7407%" y="293" width="0.0741%" height="15" fill="rgb(216,93,47)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="76.7407%" y="277" width="0.0741%" height="15" fill="rgb(238,159,10)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="76.7407%" y="261" width="0.0741%" height="15" fill="rgb(223,98,29)" fg:x="1036" fg:w="1"/><text x="76.9907%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="76.8148%" y="485" width="0.0741%" height="15" fill="rgb(210,176,23)" fg:x="1037" fg:w="1"/><text x="77.0648%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.22%)</title><rect x="76.7407%" y="501" width="0.2222%" height="15" fill="rgb(242,162,27)" fg:x="1036" fg:w="3"/><text x="76.9907%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="76.8889%" y="485" width="0.0741%" height="15" fill="rgb(245,109,32)" fg:x="1038" fg:w="1"/><text x="77.1389%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="76.8889%" y="469" width="0.0741%" height="15" fill="rgb(248,87,8)" fg:x="1038" fg:w="1"/><text x="77.1389%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="76.8889%" y="453" width="0.0741%" height="15" fill="rgb(250,160,50)" fg:x="1038" fg:w="1"/><text x="77.1389%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="76.8889%" y="437" width="0.0741%" height="15" fill="rgb(246,165,25)" fg:x="1038" fg:w="1"/><text x="77.1389%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="76.8889%" y="421" width="0.0741%" height="15" fill="rgb(249,219,3)" fg:x="1038" fg:w="1"/><text x="77.1389%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="76.8889%" y="405" width="0.0741%" height="15" fill="rgb(226,66,5)" fg:x="1038" fg:w="1"/><text x="77.1389%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.07%)</title><rect x="76.9630%" y="501" width="0.0741%" height="15" fill="rgb(250,220,43)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="76.9630%" y="485" width="0.0741%" height="15" fill="rgb(225,111,31)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="76.9630%" y="469" width="0.0741%" height="15" fill="rgb(248,106,18)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="76.9630%" y="453" width="0.0741%" height="15" fill="rgb(220,226,45)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="76.9630%" y="437" width="0.0741%" height="15" fill="rgb(208,58,53)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="76.9630%" y="421" width="0.0741%" height="15" fill="rgb(209,133,1)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="76.9630%" y="405" width="0.0741%" height="15" fill="rgb(228,216,27)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="76.9630%" y="389" width="0.0741%" height="15" fill="rgb(238,155,2)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="76.9630%" y="373" width="0.0741%" height="15" fill="rgb(244,99,37)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="76.9630%" y="357" width="0.0741%" height="15" fill="rgb(254,32,3)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="76.9630%" y="341" width="0.0741%" height="15" fill="rgb(234,46,50)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="76.9630%" y="325" width="0.0741%" height="15" fill="rgb(232,118,51)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="76.9630%" y="309" width="0.0741%" height="15" fill="rgb(207,24,32)" fg:x="1039" fg:w="1"/><text x="77.2130%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="77.2593%" y="453" width="0.0741%" height="15" fill="rgb(208,107,43)" fg:x="1043" fg:w="1"/><text x="77.5093%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="77.3333%" y="421" width="0.0741%" height="15" fill="rgb(231,28,9)" fg:x="1044" fg:w="1"/><text x="77.5833%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="77.3333%" y="405" width="0.0741%" height="15" fill="rgb(241,204,15)" fg:x="1044" fg:w="1"/><text x="77.5833%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="77.3333%" y="389" width="0.0741%" height="15" fill="rgb(214,54,15)" fg:x="1044" fg:w="1"/><text x="77.5833%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="77.5556%" y="341" width="0.0741%" height="15" fill="rgb(230,12,28)" fg:x="1047" fg:w="1"/><text x="77.8056%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="77.5556%" y="325" width="0.0741%" height="15" fill="rgb(221,171,5)" fg:x="1047" fg:w="1"/><text x="77.8056%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="77.5556%" y="405" width="0.1481%" height="15" fill="rgb(207,72,25)" fg:x="1047" fg:w="2"/><text x="77.8056%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="77.5556%" y="389" width="0.1481%" height="15" fill="rgb(249,79,37)" fg:x="1047" fg:w="2"/><text x="77.8056%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="77.5556%" y="373" width="0.1481%" height="15" fill="rgb(209,98,49)" fg:x="1047" fg:w="2"/><text x="77.8056%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="77.5556%" y="357" width="0.1481%" height="15" fill="rgb(221,62,13)" fg:x="1047" fg:w="2"/><text x="77.8056%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.07%)</title><rect x="77.6296%" y="341" width="0.0741%" height="15" fill="rgb(223,39,6)" fg:x="1048" fg:w="1"/><text x="77.8796%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="77.6296%" y="325" width="0.0741%" height="15" fill="rgb(246,163,20)" fg:x="1048" fg:w="1"/><text x="77.8796%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="77.6296%" y="309" width="0.0741%" height="15" fill="rgb(211,111,29)" fg:x="1048" fg:w="1"/><text x="77.8796%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="77.6296%" y="293" width="0.0741%" height="15" fill="rgb(243,118,5)" fg:x="1048" fg:w="1"/><text x="77.8796%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="77.7037%" y="341" width="0.0741%" height="15" fill="rgb(240,144,52)" fg:x="1049" fg:w="1"/><text x="77.9537%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.15%)</title><rect x="77.7778%" y="309" width="0.1481%" height="15" fill="rgb(244,158,36)" fg:x="1050" fg:w="2"/><text x="78.0278%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.07%)</title><rect x="77.8519%" y="293" width="0.0741%" height="15" fill="rgb(241,109,37)" fg:x="1051" fg:w="1"/><text x="78.1019%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.74%)</title><rect x="77.3333%" y="453" width="0.7407%" height="15" fill="rgb(213,95,32)" fg:x="1044" fg:w="10"/><text x="77.5833%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.74%)</title><rect x="77.3333%" y="437" width="0.7407%" height="15" fill="rgb(252,193,9)" fg:x="1044" fg:w="10"/><text x="77.5833%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.67%)</title><rect x="77.4074%" y="421" width="0.6667%" height="15" fill="rgb(225,213,21)" fg:x="1045" fg:w="9"/><text x="77.6574%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.37%)</title><rect x="77.7037%" y="405" width="0.3704%" height="15" fill="rgb(220,172,46)" fg:x="1049" fg:w="5"/><text x="77.9537%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.37%)</title><rect x="77.7037%" y="389" width="0.3704%" height="15" fill="rgb(235,75,41)" fg:x="1049" fg:w="5"/><text x="77.9537%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.37%)</title><rect x="77.7037%" y="373" width="0.3704%" height="15" fill="rgb(213,86,9)" fg:x="1049" fg:w="5"/><text x="77.9537%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.37%)</title><rect x="77.7037%" y="357" width="0.3704%" height="15" fill="rgb(238,127,51)" fg:x="1049" fg:w="5"/><text x="77.9537%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.30%)</title><rect x="77.7778%" y="341" width="0.2963%" height="15" fill="rgb(215,2,54)" fg:x="1050" fg:w="4"/><text x="78.0278%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.30%)</title><rect x="77.7778%" y="325" width="0.2963%" height="15" fill="rgb(245,80,6)" fg:x="1050" fg:w="4"/><text x="78.0278%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="77.9259%" y="309" width="0.1481%" height="15" fill="rgb(233,106,42)" fg:x="1052" fg:w="2"/><text x="78.1759%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="78.0000%" y="293" width="0.0741%" height="15" fill="rgb(244,86,38)" fg:x="1053" fg:w="1"/><text x="78.2500%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (15 samples, 1.11%)</title><rect x="77.0370%" y="501" width="1.1111%" height="15" fill="rgb(242,167,7)" fg:x="1040" fg:w="15"/><text x="77.2870%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.11%)</title><rect x="77.0370%" y="485" width="1.1111%" height="15" fill="rgb(218,216,3)" fg:x="1040" fg:w="15"/><text x="77.2870%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.11%)</title><rect x="77.0370%" y="469" width="1.1111%" height="15" fill="rgb(206,136,36)" fg:x="1040" fg:w="15"/><text x="77.2870%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="78.0741%" y="453" width="0.0741%" height="15" fill="rgb(206,206,15)" fg:x="1054" fg:w="1"/><text x="78.3241%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="78.0741%" y="437" width="0.0741%" height="15" fill="rgb(207,163,34)" fg:x="1054" fg:w="1"/><text x="78.3241%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="78.2963%" y="389" width="0.0741%" height="15" fill="rgb(240,127,22)" fg:x="1057" fg:w="1"/><text x="78.5463%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.37%)</title><rect x="78.2222%" y="405" width="0.3704%" height="15" fill="rgb(227,49,5)" fg:x="1056" fg:w="5"/><text x="78.4722%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="78.3704%" y="389" width="0.2222%" height="15" fill="rgb(231,8,6)" fg:x="1058" fg:w="3"/><text x="78.6204%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="78.3704%" y="373" width="0.2222%" height="15" fill="rgb(223,21,24)" fg:x="1058" fg:w="3"/><text x="78.6204%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="78.3704%" y="357" width="0.2222%" height="15" fill="rgb(244,44,52)" fg:x="1058" fg:w="3"/><text x="78.6204%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="78.4444%" y="341" width="0.1481%" height="15" fill="rgb(207,73,28)" fg:x="1059" fg:w="2"/><text x="78.6944%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="78.4444%" y="325" width="0.1481%" height="15" fill="rgb(234,215,10)" fg:x="1059" fg:w="2"/><text x="78.6944%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="78.4444%" y="309" width="0.1481%" height="15" fill="rgb(236,85,3)" fg:x="1059" fg:w="2"/><text x="78.6944%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="78.5185%" y="293" width="0.0741%" height="15" fill="rgb(236,102,39)" fg:x="1060" fg:w="1"/><text x="78.7685%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="78.5926%" y="405" width="0.0741%" height="15" fill="rgb(243,50,8)" fg:x="1061" fg:w="1"/><text x="78.8426%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="78.5926%" y="389" width="0.0741%" height="15" fill="rgb(207,111,4)" fg:x="1061" fg:w="1"/><text x="78.8426%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.52%)</title><rect x="78.2222%" y="437" width="0.5185%" height="15" fill="rgb(230,52,42)" fg:x="1056" fg:w="7"/><text x="78.4722%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.52%)</title><rect x="78.2222%" y="421" width="0.5185%" height="15" fill="rgb(252,178,50)" fg:x="1056" fg:w="7"/><text x="78.4722%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="78.6667%" y="405" width="0.0741%" height="15" fill="rgb(234,46,35)" fg:x="1062" fg:w="1"/><text x="78.9167%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="78.6667%" y="389" width="0.0741%" height="15" fill="rgb(228,69,37)" fg:x="1062" fg:w="1"/><text x="78.9167%" y="399.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (220 samples, 16.30%)</title><rect x="62.5185%" y="581" width="16.2963%" height="15" fill="rgb(221,21,11)" fg:x="844" fg:w="220"/><text x="62.7685%" y="591.50">engine::session::Session:..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (220 samples, 16.30%)</title><rect x="62.5185%" y="565" width="16.2963%" height="15" fill="rgb(223,56,9)" fg:x="844" fg:w="220"/><text x="62.7685%" y="575.50">engine::session::Session:..</text></g><g><title>kernel::model::EntityPtrResolver::world (31 samples, 2.30%)</title><rect x="76.5185%" y="549" width="2.2963%" height="15" fill="rgb(234,30,19)" fg:x="1033" fg:w="31"/><text x="76.7685%" y="559.50">k..</text></g><g><title>engine::session::Session::load_entity (31 samples, 2.30%)</title><rect x="76.5185%" y="533" width="2.2963%" height="15" fill="rgb(211,64,54)" fg:x="1033" fg:w="31"/><text x="76.7685%" y="543.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (31 samples, 2.30%)</title><rect x="76.5185%" y="517" width="2.2963%" height="15" fill="rgb(250,189,5)" fg:x="1033" fg:w="31"/><text x="76.7685%" y="527.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.67%)</title><rect x="78.1481%" y="501" width="0.6667%" height="15" fill="rgb(214,180,13)" fg:x="1055" fg:w="9"/><text x="78.3981%" y="511.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.67%)</title><rect x="78.1481%" y="485" width="0.6667%" height="15" fill="rgb(238,40,40)" fg:x="1055" fg:w="9"/><text x="78.3981%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.67%)</title><rect x="78.1481%" y="469" width="0.6667%" height="15" fill="rgb(214,101,38)" fg:x="1055" fg:w="9"/><text x="78.3981%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.67%)</title><rect x="78.1481%" y="453" width="0.6667%" height="15" fill="rgb(242,65,53)" fg:x="1055" fg:w="9"/><text x="78.3981%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="78.7407%" y="437" width="0.0741%" height="15" fill="rgb(230,22,45)" fg:x="1063" fg:w="1"/><text x="78.9907%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,065 samples, 78.89%)</title><rect x="0.0000%" y="629" width="78.8889%" height="15" fill="rgb(223,77,1)" fg:x="0" fg:w="1065"/><text x="0.2500%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (1,065 samples, 78.89%)</title><rect x="0.0000%" y="613" width="78.8889%" height="15" fill="rgb(227,33,37)" fg:x="0" fg:w="1065"/><text x="0.2500%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (1,065 samples, 78.89%)</title><rect x="0.0000%" y="597" width="78.8889%" height="15" fill="rgb(224,148,39)" fg:x="0" fg:w="1065"/><text x="0.2500%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.07%)</title><rect x="78.8148%" y="581" width="0.0741%" height="15" fill="rgb(232,212,39)" fg:x="1064" fg:w="1"/><text x="79.0648%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="78.8148%" y="565" width="0.0741%" height="15" fill="rgb(251,172,7)" fg:x="1064" fg:w="1"/><text x="79.0648%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="78.8148%" y="549" width="0.0741%" height="15" fill="rgb(219,39,9)" fg:x="1064" fg:w="1"/><text x="79.0648%" y="559.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="78.8148%" y="533" width="0.0741%" height="15" fill="rgb(228,118,14)" fg:x="1064" fg:w="1"/><text x="79.0648%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="79.1111%" y="533" width="0.0741%" height="15" fill="rgb(207,140,10)" fg:x="1068" fg:w="1"/><text x="79.3611%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.37%)</title><rect x="78.8889%" y="565" width="0.3704%" height="15" fill="rgb(227,111,53)" fg:x="1065" fg:w="5"/><text x="79.1389%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.37%)</title><rect x="78.8889%" y="549" width="0.3704%" height="15" fill="rgb(216,165,16)" fg:x="1065" fg:w="5"/><text x="79.1389%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.07%)</title><rect x="79.1852%" y="533" width="0.0741%" height="15" fill="rgb(226,111,18)" fg:x="1069" fg:w="1"/><text x="79.4352%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.07%)</title><rect x="79.1852%" y="517" width="0.0741%" height="15" fill="rgb(251,27,17)" fg:x="1069" fg:w="1"/><text x="79.4352%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.07%)</title><rect x="79.1852%" y="501" width="0.0741%" height="15" fill="rgb(254,69,9)" fg:x="1069" fg:w="1"/><text x="79.4352%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="79.2593%" y="453" width="0.0741%" height="15" fill="rgb(234,140,37)" fg:x="1070" fg:w="1"/><text x="79.5093%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="79.3333%" y="453" width="0.0741%" height="15" fill="rgb(220,93,8)" fg:x="1071" fg:w="1"/><text x="79.5833%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="79.3333%" y="437" width="0.0741%" height="15" fill="rgb(236,113,3)" fg:x="1071" fg:w="1"/><text x="79.5833%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="79.4074%" y="437" width="0.1481%" height="15" fill="rgb(234,108,23)" fg:x="1072" fg:w="2"/><text x="79.6574%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.52%)</title><rect x="79.2593%" y="501" width="0.5185%" height="15" fill="rgb(205,114,34)" fg:x="1070" fg:w="7"/><text x="79.5093%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (7 samples, 0.52%)</title><rect x="79.2593%" y="485" width="0.5185%" height="15" fill="rgb(236,200,45)" fg:x="1070" fg:w="7"/><text x="79.5093%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.52%)</title><rect x="79.2593%" y="469" width="0.5185%" height="15" fill="rgb(227,194,29)" fg:x="1070" fg:w="7"/><text x="79.5093%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.37%)</title><rect x="79.4074%" y="453" width="0.3704%" height="15" fill="rgb(250,76,42)" fg:x="1072" fg:w="5"/><text x="79.6574%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.22%)</title><rect x="79.5556%" y="437" width="0.2222%" height="15" fill="rgb(208,128,8)" fg:x="1074" fg:w="3"/><text x="79.8056%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="79.7037%" y="421" width="0.0741%" height="15" fill="rgb(229,209,35)" fg:x="1076" fg:w="1"/><text x="79.9537%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="79.7778%" y="501" width="0.0741%" height="15" fill="rgb(215,39,53)" fg:x="1077" fg:w="1"/><text x="80.0278%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="79.8519%" y="453" width="0.1481%" height="15" fill="rgb(219,123,41)" fg:x="1078" fg:w="2"/><text x="80.1019%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.19%)</title><rect x="78.8889%" y="581" width="1.1852%" height="15" fill="rgb(212,158,18)" fg:x="1065" fg:w="16"/><text x="79.1389%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (11 samples, 0.81%)</title><rect x="79.2593%" y="565" width="0.8148%" height="15" fill="rgb(234,196,53)" fg:x="1070" fg:w="11"/><text x="79.5093%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.81%)</title><rect x="79.2593%" y="549" width="0.8148%" height="15" fill="rgb(210,139,12)" fg:x="1070" fg:w="11"/><text x="79.5093%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (11 samples, 0.81%)</title><rect x="79.2593%" y="533" width="0.8148%" height="15" fill="rgb(220,116,54)" fg:x="1070" fg:w="11"/><text x="79.5093%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.81%)</title><rect x="79.2593%" y="517" width="0.8148%" height="15" fill="rgb(247,103,28)" fg:x="1070" fg:w="11"/><text x="79.5093%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.22%)</title><rect x="79.8519%" y="501" width="0.2222%" height="15" fill="rgb(253,156,45)" fg:x="1078" fg:w="3"/><text x="80.1019%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.22%)</title><rect x="79.8519%" y="485" width="0.2222%" height="15" fill="rgb(237,157,52)" fg:x="1078" fg:w="3"/><text x="80.1019%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.22%)</title><rect x="79.8519%" y="469" width="0.2222%" height="15" fill="rgb(253,112,16)" fg:x="1078" fg:w="3"/><text x="80.1019%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="80.0000%" y="453" width="0.0741%" height="15" fill="rgb(234,70,18)" fg:x="1080" fg:w="1"/><text x="80.2500%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="80.0000%" y="437" width="0.0741%" height="15" fill="rgb(247,138,19)" fg:x="1080" fg:w="1"/><text x="80.2500%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="80.0741%" y="533" width="0.0741%" height="15" fill="rgb(207,171,1)" fg:x="1081" fg:w="1"/><text x="80.3241%" y="543.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.07%)</title><rect x="80.1481%" y="533" width="0.0741%" height="15" fill="rgb(239,213,3)" fg:x="1082" fg:w="1"/><text x="80.3981%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="80.1481%" y="517" width="0.0741%" height="15" fill="rgb(226,112,4)" fg:x="1082" fg:w="1"/><text x="80.3981%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.07%)</title><rect x="80.3704%" y="485" width="0.0741%" height="15" fill="rgb(252,170,12)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.07%)</title><rect x="80.3704%" y="469" width="0.0741%" height="15" fill="rgb(241,106,13)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="80.3704%" y="453" width="0.0741%" height="15" fill="rgb(225,73,23)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.07%)</title><rect x="80.3704%" y="437" width="0.0741%" height="15" fill="rgb(251,227,29)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="80.3704%" y="421" width="0.0741%" height="15" fill="rgb(237,144,13)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="80.3704%" y="405" width="0.0741%" height="15" fill="rgb(232,106,46)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="80.3704%" y="389" width="0.0741%" height="15" fill="rgb(245,154,53)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="80.3704%" y="373" width="0.0741%" height="15" fill="rgb(212,119,47)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="80.3704%" y="357" width="0.0741%" height="15" fill="rgb(253,135,25)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="80.3704%" y="341" width="0.0741%" height="15" fill="rgb(253,208,39)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="80.3704%" y="325" width="0.0741%" height="15" fill="rgb(226,64,12)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="80.3704%" y="309" width="0.0741%" height="15" fill="rgb(214,162,37)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="80.3704%" y="293" width="0.0741%" height="15" fill="rgb(250,104,5)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="80.3704%" y="277" width="0.0741%" height="15" fill="rgb(220,202,50)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="80.3704%" y="261" width="0.0741%" height="15" fill="rgb(248,67,38)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="80.3704%" y="245" width="0.0741%" height="15" fill="rgb(242,94,35)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="80.3704%" y="229" width="0.0741%" height="15" fill="rgb(209,78,37)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="80.3704%" y="213" width="0.0741%" height="15" fill="rgb(230,126,47)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="223.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="80.3704%" y="197" width="0.0741%" height="15" fill="rgb(222,110,35)" fg:x="1085" fg:w="1"/><text x="80.6204%" y="207.50"></text></g><g><title>std::ffi::os_str::&lt;impl core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt; for &amp;str&gt;::try_from (1 samples, 0.07%)</title><rect x="80.4444%" y="485" width="0.0741%" height="15" fill="rgb(233,154,20)" fg:x="1086" fg:w="1"/><text x="80.6944%" y="495.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.07%)</title><rect x="80.4444%" y="469" width="0.0741%" height="15" fill="rgb(223,53,50)" fg:x="1086" fg:w="1"/><text x="80.6944%" y="479.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.07%)</title><rect x="80.4444%" y="453" width="0.0741%" height="15" fill="rgb(251,27,26)" fg:x="1086" fg:w="1"/><text x="80.6944%" y="463.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.07%)</title><rect x="80.4444%" y="437" width="0.0741%" height="15" fill="rgb(223,189,16)" fg:x="1086" fg:w="1"/><text x="80.6944%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.22%)</title><rect x="80.3704%" y="501" width="0.2222%" height="15" fill="rgb(207,5,54)" fg:x="1085" fg:w="3"/><text x="80.6204%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.07%)</title><rect x="80.5185%" y="485" width="0.0741%" height="15" fill="rgb(254,124,50)" fg:x="1087" fg:w="1"/><text x="80.7685%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.07%)</title><rect x="80.5185%" y="469" width="0.0741%" height="15" fill="rgb(253,193,24)" fg:x="1087" fg:w="1"/><text x="80.7685%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.07%)</title><rect x="80.5185%" y="453" width="0.0741%" height="15" fill="rgb(235,170,24)" fg:x="1087" fg:w="1"/><text x="80.7685%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.07%)</title><rect x="80.5185%" y="437" width="0.0741%" height="15" fill="rgb(222,212,52)" fg:x="1087" fg:w="1"/><text x="80.7685%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.07%)</title><rect x="80.5185%" y="421" width="0.0741%" height="15" fill="rgb(223,17,45)" fg:x="1087" fg:w="1"/><text x="80.7685%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.07%)</title><rect x="80.5185%" y="405" width="0.0741%" height="15" fill="rgb(227,103,26)" fg:x="1087" fg:w="1"/><text x="80.7685%" y="415.50"></text></g><g><title>statx (1 samples, 0.07%)</title><rect x="80.5185%" y="389" width="0.0741%" height="15" fill="rgb(251,151,25)" fg:x="1087" fg:w="1"/><text x="80.7685%" y="399.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.30%)</title><rect x="80.5926%" y="501" width="0.2963%" height="15" fill="rgb(248,144,29)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="511.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (4 samples, 0.30%)</title><rect x="80.5926%" y="485" width="0.2963%" height="15" fill="rgb(245,97,16)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="495.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.30%)</title><rect x="80.5926%" y="469" width="0.2963%" height="15" fill="rgb(220,200,29)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="479.50"></text></g><g><title>glob::fill_todo (4 samples, 0.30%)</title><rect x="80.5926%" y="453" width="0.2963%" height="15" fill="rgb(206,38,29)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="463.50"></text></g><g><title>glob::is_dir (4 samples, 0.30%)</title><rect x="80.5926%" y="437" width="0.2963%" height="15" fill="rgb(245,19,52)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (4 samples, 0.30%)</title><rect x="80.5926%" y="421" width="0.2963%" height="15" fill="rgb(205,67,43)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.30%)</title><rect x="80.5926%" y="405" width="0.2963%" height="15" fill="rgb(217,128,23)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.30%)</title><rect x="80.5926%" y="389" width="0.2963%" height="15" fill="rgb(210,109,28)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (4 samples, 0.30%)</title><rect x="80.5926%" y="373" width="0.2963%" height="15" fill="rgb(233,181,7)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (4 samples, 0.30%)</title><rect x="80.5926%" y="357" width="0.2963%" height="15" fill="rgb(244,11,22)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (4 samples, 0.30%)</title><rect x="80.5926%" y="341" width="0.2963%" height="15" fill="rgb(205,124,54)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="351.50"></text></g><g><title>statx (4 samples, 0.30%)</title><rect x="80.5926%" y="325" width="0.2963%" height="15" fill="rgb(218,21,27)" fg:x="1088" fg:w="4"/><text x="80.8426%" y="335.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.15%)</title><rect x="80.8889%" y="437" width="0.1481%" height="15" fill="rgb(224,153,33)" fg:x="1092" fg:w="2"/><text x="81.1389%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.15%)</title><rect x="80.8889%" y="421" width="0.1481%" height="15" fill="rgb(240,219,28)" fg:x="1092" fg:w="2"/><text x="81.1389%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="80.9630%" y="405" width="0.0741%" height="15" fill="rgb(214,80,29)" fg:x="1093" fg:w="1"/><text x="81.2130%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="80.9630%" y="389" width="0.0741%" height="15" fill="rgb(247,148,44)" fg:x="1093" fg:w="1"/><text x="81.2130%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="80.9630%" y="373" width="0.0741%" height="15" fill="rgb(243,110,30)" fg:x="1093" fg:w="1"/><text x="81.2130%" y="383.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.15%)</title><rect x="81.0370%" y="437" width="0.1481%" height="15" fill="rgb(243,173,41)" fg:x="1094" fg:w="2"/><text x="81.2870%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.15%)</title><rect x="81.0370%" y="421" width="0.1481%" height="15" fill="rgb(225,160,47)" fg:x="1094" fg:w="2"/><text x="81.2870%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="81.0370%" y="405" width="0.1481%" height="15" fill="rgb(215,44,21)" fg:x="1094" fg:w="2"/><text x="81.2870%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="81.0370%" y="389" width="0.1481%" height="15" fill="rgb(248,90,3)" fg:x="1094" fg:w="2"/><text x="81.2870%" y="399.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.37%)</title><rect x="80.8889%" y="469" width="0.3704%" height="15" fill="rgb(220,196,49)" fg:x="1092" fg:w="5"/><text x="81.1389%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.37%)</title><rect x="80.8889%" y="453" width="0.3704%" height="15" fill="rgb(217,138,14)" fg:x="1092" fg:w="5"/><text x="81.1389%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.07%)</title><rect x="81.1852%" y="437" width="0.0741%" height="15" fill="rgb(219,111,20)" fg:x="1096" fg:w="1"/><text x="81.4352%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="81.1852%" y="421" width="0.0741%" height="15" fill="rgb(218,114,4)" fg:x="1096" fg:w="1"/><text x="81.4352%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="81.1852%" y="405" width="0.0741%" height="15" fill="rgb(238,133,3)" fg:x="1096" fg:w="1"/><text x="81.4352%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="81.1852%" y="389" width="0.0741%" height="15" fill="rgb(224,95,0)" fg:x="1096" fg:w="1"/><text x="81.4352%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.07%)</title><rect x="81.2593%" y="469" width="0.0741%" height="15" fill="rgb(220,169,35)" fg:x="1097" fg:w="1"/><text x="81.5093%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.07%)</title><rect x="81.2593%" y="453" width="0.0741%" height="15" fill="rgb(242,116,47)" fg:x="1097" fg:w="1"/><text x="81.5093%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.07%)</title><rect x="81.2593%" y="437" width="0.0741%" height="15" fill="rgb(251,42,20)" fg:x="1097" fg:w="1"/><text x="81.5093%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.07%)</title><rect x="81.2593%" y="421" width="0.0741%" height="15" fill="rgb(234,7,34)" fg:x="1097" fg:w="1"/><text x="81.5093%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.07%)</title><rect x="81.3333%" y="469" width="0.0741%" height="15" fill="rgb(243,208,13)" fg:x="1098" fg:w="1"/><text x="81.5833%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.07%)</title><rect x="81.3333%" y="453" width="0.0741%" height="15" fill="rgb(227,33,28)" fg:x="1098" fg:w="1"/><text x="81.5833%" y="463.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.07%)</title><rect x="81.3333%" y="437" width="0.0741%" height="15" fill="rgb(250,47,37)" fg:x="1098" fg:w="1"/><text x="81.5833%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="81.3333%" y="421" width="0.0741%" height="15" fill="rgb(235,111,52)" fg:x="1098" fg:w="1"/><text x="81.5833%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="81.3333%" y="405" width="0.0741%" height="15" fill="rgb(223,64,28)" fg:x="1098" fg:w="1"/><text x="81.5833%" y="415.50"></text></g><g><title>&lt;plugins_core::moving::actions::DeactivateRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.07%)</title><rect x="81.4074%" y="437" width="0.0741%" height="15" fill="rgb(236,67,22)" fg:x="1099" fg:w="1"/><text x="81.6574%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.07%)</title><rect x="81.4074%" y="421" width="0.0741%" height="15" fill="rgb(243,79,24)" fg:x="1099" fg:w="1"/><text x="81.6574%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.15%)</title><rect x="81.4074%" y="469" width="0.1481%" height="15" fill="rgb(241,225,22)" fg:x="1099" fg:w="2"/><text x="81.6574%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.15%)</title><rect x="81.4074%" y="453" width="0.1481%" height="15" fill="rgb(228,214,26)" fg:x="1099" fg:w="2"/><text x="81.6574%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.07%)</title><rect x="81.4815%" y="437" width="0.0741%" height="15" fill="rgb(219,84,52)" fg:x="1100" fg:w="1"/><text x="81.7315%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="81.4815%" y="421" width="0.0741%" height="15" fill="rgb(220,12,22)" fg:x="1100" fg:w="1"/><text x="81.7315%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.07%)</title><rect x="81.5556%" y="437" width="0.0741%" height="15" fill="rgb(219,9,49)" fg:x="1101" fg:w="1"/><text x="81.8056%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.81%)</title><rect x="80.8889%" y="501" width="0.8148%" height="15" fill="rgb(237,40,43)" fg:x="1092" fg:w="11"/><text x="81.1389%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.81%)</title><rect x="80.8889%" y="485" width="0.8148%" height="15" fill="rgb(212,189,32)" fg:x="1092" fg:w="11"/><text x="81.1389%" y="495.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.15%)</title><rect x="81.5556%" y="469" width="0.1481%" height="15" fill="rgb(247,48,9)" fg:x="1101" fg:w="2"/><text x="81.8056%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.15%)</title><rect x="81.5556%" y="453" width="0.1481%" height="15" fill="rgb(247,112,3)" fg:x="1101" fg:w="2"/><text x="81.8056%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.07%)</title><rect x="81.6296%" y="437" width="0.0741%" height="15" fill="rgb(243,110,18)" fg:x="1102" fg:w="1"/><text x="81.8796%" y="447.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (22 samples, 1.63%)</title><rect x="80.2222%" y="517" width="1.6296%" height="15" fill="rgb(233,223,44)" fg:x="1083" fg:w="22"/><text x="80.4722%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (2 samples, 0.15%)</title><rect x="81.7037%" y="501" width="0.1481%" height="15" fill="rgb(245,160,20)" fg:x="1103" fg:w="2"/><text x="81.9537%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="81.7778%" y="485" width="0.0741%" height="15" fill="rgb(225,37,1)" fg:x="1104" fg:w="1"/><text x="82.0278%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (25 samples, 1.85%)</title><rect x="80.0741%" y="581" width="1.8519%" height="15" fill="rgb(253,227,39)" fg:x="1081" fg:w="25"/><text x="80.3241%" y="591.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (25 samples, 1.85%)</title><rect x="80.0741%" y="565" width="1.8519%" height="15" fill="rgb(240,179,26)" fg:x="1081" fg:w="25"/><text x="80.3241%" y="575.50">e..</text></g><g><title>engine::session::Session::new (25 samples, 1.85%)</title><rect x="80.0741%" y="549" width="1.8519%" height="15" fill="rgb(237,212,23)" fg:x="1081" fg:w="25"/><text x="80.3241%" y="559.50">e..</text></g><g><title>engine::session::Session::initialize (23 samples, 1.70%)</title><rect x="80.2222%" y="533" width="1.7037%" height="15" fill="rgb(221,38,11)" fg:x="1083" fg:w="23"/><text x="80.4722%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.07%)</title><rect x="81.8519%" y="517" width="0.0741%" height="15" fill="rgb(215,85,6)" fg:x="1105" fg:w="1"/><text x="82.1019%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="81.8519%" y="501" width="0.0741%" height="15" fill="rgb(239,64,14)" fg:x="1105" fg:w="1"/><text x="82.1019%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.07%)</title><rect x="82.0000%" y="565" width="0.0741%" height="15" fill="rgb(215,150,32)" fg:x="1107" fg:w="1"/><text x="82.2500%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="82.0000%" y="549" width="0.0741%" height="15" fill="rgb(238,15,13)" fg:x="1107" fg:w="1"/><text x="82.2500%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="82.2222%" y="517" width="0.0741%" height="15" fill="rgb(251,87,8)" fg:x="1110" fg:w="1"/><text x="82.4722%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="82.2222%" y="501" width="0.0741%" height="15" fill="rgb(206,86,1)" fg:x="1110" fg:w="1"/><text x="82.4722%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="82.2222%" y="485" width="0.0741%" height="15" fill="rgb(208,151,45)" fg:x="1110" fg:w="1"/><text x="82.4722%" y="495.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="82.2222%" y="469" width="0.0741%" height="15" fill="rgb(231,181,24)" fg:x="1110" fg:w="1"/><text x="82.4722%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="82.2963%" y="485" width="0.0741%" height="15" fill="rgb(240,106,29)" fg:x="1111" fg:w="1"/><text x="82.5463%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="82.2963%" y="469" width="0.0741%" height="15" fill="rgb(227,166,11)" fg:x="1111" fg:w="1"/><text x="82.5463%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="82.3704%" y="421" width="0.0741%" height="15" fill="rgb(254,14,34)" fg:x="1112" fg:w="1"/><text x="82.6204%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="82.3704%" y="405" width="0.0741%" height="15" fill="rgb(223,222,6)" fg:x="1112" fg:w="1"/><text x="82.6204%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="82.3704%" y="389" width="0.0741%" height="15" fill="rgb(245,69,24)" fg:x="1112" fg:w="1"/><text x="82.6204%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="82.4444%" y="421" width="0.1481%" height="15" fill="rgb(213,193,7)" fg:x="1113" fg:w="2"/><text x="82.6944%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="82.4444%" y="405" width="0.1481%" height="15" fill="rgb(237,92,51)" fg:x="1113" fg:w="2"/><text x="82.6944%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.30%)</title><rect x="82.3704%" y="453" width="0.2963%" height="15" fill="rgb(225,194,6)" fg:x="1112" fg:w="4"/><text x="82.6204%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.30%)</title><rect x="82.3704%" y="437" width="0.2963%" height="15" fill="rgb(205,159,49)" fg:x="1112" fg:w="4"/><text x="82.6204%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.07%)</title><rect x="82.5926%" y="421" width="0.0741%" height="15" fill="rgb(219,69,2)" fg:x="1115" fg:w="1"/><text x="82.8426%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.37%)</title><rect x="82.3704%" y="469" width="0.3704%" height="15" fill="rgb(215,107,24)" fg:x="1112" fg:w="5"/><text x="82.6204%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="82.6667%" y="453" width="0.0741%" height="15" fill="rgb(249,208,29)" fg:x="1116" fg:w="1"/><text x="82.9167%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="82.6667%" y="437" width="0.0741%" height="15" fill="rgb(213,147,10)" fg:x="1116" fg:w="1"/><text x="82.9167%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.15%)</title><rect x="82.7407%" y="453" width="0.1481%" height="15" fill="rgb(254,140,42)" fg:x="1117" fg:w="2"/><text x="82.9907%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="82.7407%" y="437" width="0.1481%" height="15" fill="rgb(249,9,15)" fg:x="1117" fg:w="2"/><text x="82.9907%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="82.8148%" y="421" width="0.0741%" height="15" fill="rgb(210,19,33)" fg:x="1118" fg:w="1"/><text x="83.0648%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="82.8148%" y="405" width="0.0741%" height="15" fill="rgb(241,121,22)" fg:x="1118" fg:w="1"/><text x="83.0648%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="82.8148%" y="389" width="0.0741%" height="15" fill="rgb(244,69,52)" fg:x="1118" fg:w="1"/><text x="83.0648%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="82.8889%" y="437" width="0.0741%" height="15" fill="rgb(244,191,54)" fg:x="1119" fg:w="1"/><text x="83.1389%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="82.8889%" y="421" width="0.0741%" height="15" fill="rgb(250,3,53)" fg:x="1119" fg:w="1"/><text x="83.1389%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="82.8889%" y="405" width="0.0741%" height="15" fill="rgb(205,77,3)" fg:x="1119" fg:w="1"/><text x="83.1389%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.07%)</title><rect x="82.9630%" y="389" width="0.0741%" height="15" fill="rgb(207,155,3)" fg:x="1120" fg:w="1"/><text x="83.2130%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="82.9630%" y="373" width="0.0741%" height="15" fill="rgb(224,79,2)" fg:x="1120" fg:w="1"/><text x="83.2130%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="82.9630%" y="357" width="0.0741%" height="15" fill="rgb(243,172,5)" fg:x="1120" fg:w="1"/><text x="83.2130%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="82.9630%" y="341" width="0.0741%" height="15" fill="rgb(217,23,43)" fg:x="1120" fg:w="1"/><text x="83.2130%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.15%)</title><rect x="82.9630%" y="421" width="0.1481%" height="15" fill="rgb(223,109,20)" fg:x="1120" fg:w="2"/><text x="83.2130%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.15%)</title><rect x="82.9630%" y="405" width="0.1481%" height="15" fill="rgb(232,159,21)" fg:x="1120" fg:w="2"/><text x="83.2130%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="83.0370%" y="389" width="0.0741%" height="15" fill="rgb(219,58,2)" fg:x="1121" fg:w="1"/><text x="83.2870%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="83.0370%" y="373" width="0.0741%" height="15" fill="rgb(241,56,8)" fg:x="1121" fg:w="1"/><text x="83.2870%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="83.0370%" y="357" width="0.0741%" height="15" fill="rgb(249,10,27)" fg:x="1121" fg:w="1"/><text x="83.2870%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="83.1111%" y="421" width="0.1481%" height="15" fill="rgb(248,177,5)" fg:x="1122" fg:w="2"/><text x="83.3611%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="83.1111%" y="405" width="0.1481%" height="15" fill="rgb(239,12,30)" fg:x="1122" fg:w="2"/><text x="83.3611%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="83.1852%" y="389" width="0.0741%" height="15" fill="rgb(229,164,25)" fg:x="1123" fg:w="1"/><text x="83.4352%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="83.2593%" y="405" width="0.0741%" height="15" fill="rgb(231,217,50)" fg:x="1124" fg:w="1"/><text x="83.5093%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.44%)</title><rect x="82.9630%" y="437" width="0.4444%" height="15" fill="rgb(247,99,32)" fg:x="1120" fg:w="6"/><text x="83.2130%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.15%)</title><rect x="83.2593%" y="421" width="0.1481%" height="15" fill="rgb(240,74,50)" fg:x="1124" fg:w="2"/><text x="83.5093%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.07%)</title><rect x="83.3333%" y="405" width="0.0741%" height="15" fill="rgb(218,54,8)" fg:x="1125" fg:w="1"/><text x="83.5833%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="83.3333%" y="389" width="0.0741%" height="15" fill="rgb(227,132,20)" fg:x="1125" fg:w="1"/><text x="83.5833%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="83.3333%" y="373" width="0.0741%" height="15" fill="rgb(232,134,12)" fg:x="1125" fg:w="1"/><text x="83.5833%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.74%)</title><rect x="82.7407%" y="469" width="0.7407%" height="15" fill="rgb(250,129,18)" fg:x="1117" fg:w="10"/><text x="82.9907%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.59%)</title><rect x="82.8889%" y="453" width="0.5926%" height="15" fill="rgb(232,129,47)" fg:x="1119" fg:w="8"/><text x="83.1389%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="83.4074%" y="437" width="0.0741%" height="15" fill="rgb(230,31,40)" fg:x="1126" fg:w="1"/><text x="83.6574%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="83.4074%" y="421" width="0.0741%" height="15" fill="rgb(232,126,10)" fg:x="1126" fg:w="1"/><text x="83.6574%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="83.4074%" y="405" width="0.0741%" height="15" fill="rgb(205,46,31)" fg:x="1126" fg:w="1"/><text x="83.6574%" y="415.50"></text></g><g><title>burrow_bon::perms::find_acls (1 samples, 0.07%)</title><rect x="83.4815%" y="469" width="0.0741%" height="15" fill="rgb(232,37,37)" fg:x="1127" fg:w="1"/><text x="83.7315%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.5556%" y="437" width="0.0741%" height="15" fill="rgb(240,91,16)" fg:x="1128" fg:w="1"/><text x="83.8056%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.15%)</title><rect x="83.5556%" y="453" width="0.1481%" height="15" fill="rgb(224,160,9)" fg:x="1128" fg:w="2"/><text x="83.8056%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.07%)</title><rect x="83.6296%" y="437" width="0.0741%" height="15" fill="rgb(215,116,14)" fg:x="1129" fg:w="1"/><text x="83.8796%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="83.6296%" y="421" width="0.0741%" height="15" fill="rgb(235,46,36)" fg:x="1129" fg:w="1"/><text x="83.8796%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="83.6296%" y="405" width="0.0741%" height="15" fill="rgb(238,39,28)" fg:x="1129" fg:w="1"/><text x="83.8796%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="83.6296%" y="389" width="0.0741%" height="15" fill="rgb(242,125,29)" fg:x="1129" fg:w="1"/><text x="83.8796%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="83.7778%" y="421" width="0.0741%" height="15" fill="rgb(238,211,30)" fg:x="1131" fg:w="1"/><text x="84.0278%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="83.8519%" y="373" width="0.0741%" height="15" fill="rgb(227,201,28)" fg:x="1132" fg:w="1"/><text x="84.1019%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="83.8519%" y="357" width="0.0741%" height="15" fill="rgb(238,77,29)" fg:x="1132" fg:w="1"/><text x="84.1019%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="83.8519%" y="389" width="0.1481%" height="15" fill="rgb(213,221,40)" fg:x="1132" fg:w="2"/><text x="84.1019%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="83.9259%" y="373" width="0.0741%" height="15" fill="rgb(226,220,44)" fg:x="1133" fg:w="1"/><text x="84.1759%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="83.9259%" y="357" width="0.0741%" height="15" fill="rgb(228,90,23)" fg:x="1133" fg:w="1"/><text x="84.1759%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="83.9259%" y="341" width="0.0741%" height="15" fill="rgb(235,72,29)" fg:x="1133" fg:w="1"/><text x="84.1759%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="83.9259%" y="325" width="0.0741%" height="15" fill="rgb(248,117,39)" fg:x="1133" fg:w="1"/><text x="84.1759%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="83.9259%" y="309" width="0.0741%" height="15" fill="rgb(225,43,28)" fg:x="1133" fg:w="1"/><text x="84.1759%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="83.9259%" y="293" width="0.0741%" height="15" fill="rgb(240,93,4)" fg:x="1133" fg:w="1"/><text x="84.1759%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.22%)</title><rect x="83.8519%" y="405" width="0.2222%" height="15" fill="rgb(234,178,27)" fg:x="1132" fg:w="3"/><text x="84.1019%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.07%)</title><rect x="84.0000%" y="389" width="0.0741%" height="15" fill="rgb(254,88,22)" fg:x="1134" fg:w="1"/><text x="84.2500%" y="399.50"></text></g><g><title>engine::session::Session::flush (28 samples, 2.07%)</title><rect x="82.0741%" y="565" width="2.0741%" height="15" fill="rgb(240,206,50)" fg:x="1108" fg:w="28"/><text x="82.3241%" y="575.50">e..</text></g><g><title>engine::session::state::State::close (27 samples, 2.00%)</title><rect x="82.1481%" y="549" width="2.0000%" height="15" fill="rgb(249,103,8)" fg:x="1109" fg:w="27"/><text x="82.3981%" y="559.50">e..</text></g><g><title>engine::session::state::State::flush_entities (26 samples, 1.93%)</title><rect x="82.2222%" y="533" width="1.9259%" height="15" fill="rgb(241,178,36)" fg:x="1110" fg:w="26"/><text x="82.4722%" y="543.50">e..</text></g><g><title>core::iter::adapters::try_process (25 samples, 1.85%)</title><rect x="82.2963%" y="517" width="1.8519%" height="15" fill="rgb(246,110,15)" fg:x="1111" fg:w="25"/><text x="82.5463%" y="527.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 1.85%)</title><rect x="82.2963%" y="501" width="1.8519%" height="15" fill="rgb(207,14,43)" fg:x="1111" fg:w="25"/><text x="82.5463%" y="511.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (24 samples, 1.78%)</title><rect x="82.3704%" y="485" width="1.7778%" height="15" fill="rgb(253,219,19)" fg:x="1112" fg:w="24"/><text x="82.6204%" y="495.50">e..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.59%)</title><rect x="83.5556%" y="469" width="0.5926%" height="15" fill="rgb(216,126,5)" fg:x="1128" fg:w="8"/><text x="83.8056%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.44%)</title><rect x="83.7037%" y="453" width="0.4444%" height="15" fill="rgb(218,78,42)" fg:x="1130" fg:w="6"/><text x="83.9537%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.44%)</title><rect x="83.7037%" y="437" width="0.4444%" height="15" fill="rgb(215,154,40)" fg:x="1130" fg:w="6"/><text x="83.9537%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.30%)</title><rect x="83.8519%" y="421" width="0.2963%" height="15" fill="rgb(235,129,32)" fg:x="1132" fg:w="4"/><text x="84.1019%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="84.0741%" y="405" width="0.0741%" height="15" fill="rgb(218,51,8)" fg:x="1135" fg:w="1"/><text x="84.3241%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="84.0741%" y="389" width="0.0741%" height="15" fill="rgb(245,48,4)" fg:x="1135" fg:w="1"/><text x="84.3241%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="84.1481%" y="485" width="0.0741%" height="15" fill="rgb(250,175,12)" fg:x="1136" fg:w="1"/><text x="84.3981%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="84.1481%" y="469" width="0.0741%" height="15" fill="rgb(237,95,40)" fg:x="1136" fg:w="1"/><text x="84.3981%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="84.1481%" y="501" width="0.1481%" height="15" fill="rgb(244,120,0)" fg:x="1136" fg:w="2"/><text x="84.3981%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="84.2222%" y="485" width="0.0741%" height="15" fill="rgb(241,19,42)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="84.2222%" y="469" width="0.0741%" height="15" fill="rgb(217,174,48)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="84.2222%" y="453" width="0.0741%" height="15" fill="rgb(239,36,38)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="84.2222%" y="437" width="0.0741%" height="15" fill="rgb(220,63,49)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="84.2222%" y="421" width="0.0741%" height="15" fill="rgb(240,101,13)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="84.2222%" y="405" width="0.0741%" height="15" fill="rgb(209,184,51)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="84.2222%" y="389" width="0.0741%" height="15" fill="rgb(206,136,39)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="84.2222%" y="373" width="0.0741%" height="15" fill="rgb(254,47,45)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.07%)</title><rect x="84.2222%" y="357" width="0.0741%" height="15" fill="rgb(252,103,20)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.07%)</title><rect x="84.2222%" y="341" width="0.0741%" height="15" fill="rgb(230,69,12)" fg:x="1137" fg:w="1"/><text x="84.4722%" y="351.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.22%)</title><rect x="84.1481%" y="533" width="0.2222%" height="15" fill="rgb(219,2,28)" fg:x="1136" fg:w="3"/><text x="84.3981%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.22%)</title><rect x="84.1481%" y="517" width="0.2222%" height="15" fill="rgb(210,9,12)" fg:x="1136" fg:w="3"/><text x="84.3981%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.07%)</title><rect x="84.2963%" y="501" width="0.0741%" height="15" fill="rgb(235,99,33)" fg:x="1138" fg:w="1"/><text x="84.5463%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.07%)</title><rect x="84.3704%" y="517" width="0.0741%" height="15" fill="rgb(230,11,38)" fg:x="1139" fg:w="1"/><text x="84.6204%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.07%)</title><rect x="84.3704%" y="501" width="0.0741%" height="15" fill="rgb(217,129,0)" fg:x="1139" fg:w="1"/><text x="84.6204%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.07%)</title><rect x="84.3704%" y="485" width="0.0741%" height="15" fill="rgb(222,198,4)" fg:x="1139" fg:w="1"/><text x="84.6204%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="84.3704%" y="469" width="0.0741%" height="15" fill="rgb(246,170,27)" fg:x="1139" fg:w="1"/><text x="84.6204%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="84.3704%" y="453" width="0.0741%" height="15" fill="rgb(229,17,28)" fg:x="1139" fg:w="1"/><text x="84.6204%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="84.3704%" y="437" width="0.0741%" height="15" fill="rgb(233,198,48)" fg:x="1139" fg:w="1"/><text x="84.6204%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="84.3704%" y="421" width="0.0741%" height="15" fill="rgb(238,103,23)" fg:x="1139" fg:w="1"/><text x="84.6204%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.44%)</title><rect x="84.1481%" y="549" width="0.4444%" height="15" fill="rgb(206,91,41)" fg:x="1136" fg:w="6"/><text x="84.3981%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.22%)</title><rect x="84.3704%" y="533" width="0.2222%" height="15" fill="rgb(227,34,25)" fg:x="1139" fg:w="3"/><text x="84.6204%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.15%)</title><rect x="84.4444%" y="517" width="0.1481%" height="15" fill="rgb(210,110,44)" fg:x="1140" fg:w="2"/><text x="84.6944%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="84.4444%" y="501" width="0.1481%" height="15" fill="rgb(216,189,8)" fg:x="1140" fg:w="2"/><text x="84.6944%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="84.5185%" y="485" width="0.0741%" height="15" fill="rgb(234,9,46)" fg:x="1141" fg:w="1"/><text x="84.7685%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.07%)</title><rect x="84.5185%" y="469" width="0.0741%" height="15" fill="rgb(251,200,5)" fg:x="1141" fg:w="1"/><text x="84.7685%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="84.5185%" y="453" width="0.0741%" height="15" fill="rgb(238,165,37)" fg:x="1141" fg:w="1"/><text x="84.7685%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="84.5185%" y="437" width="0.0741%" height="15" fill="rgb(232,77,38)" fg:x="1141" fg:w="1"/><text x="84.7685%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="84.5185%" y="421" width="0.0741%" height="15" fill="rgb(253,179,33)" fg:x="1141" fg:w="1"/><text x="84.7685%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="84.5185%" y="405" width="0.0741%" height="15" fill="rgb(240,13,35)" fg:x="1141" fg:w="1"/><text x="84.7685%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="84.5185%" y="389" width="0.0741%" height="15" fill="rgb(242,150,49)" fg:x="1141" fg:w="1"/><text x="84.7685%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="84.5185%" y="373" width="0.0741%" height="15" fill="rgb(237,176,28)" fg:x="1141" fg:w="1"/><text x="84.7685%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="84.5185%" y="357" width="0.0741%" height="15" fill="rgb(214,176,33)" fg:x="1141" fg:w="1"/><text x="84.7685%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="84.5926%" y="533" width="0.0741%" height="15" fill="rgb(214,25,12)" fg:x="1142" fg:w="1"/><text x="84.8426%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="84.5926%" y="517" width="0.0741%" height="15" fill="rgb(238,190,20)" fg:x="1142" fg:w="1"/><text x="84.8426%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="84.5926%" y="501" width="0.0741%" height="15" fill="rgb(208,11,19)" fg:x="1142" fg:w="1"/><text x="84.8426%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="84.5926%" y="485" width="0.0741%" height="15" fill="rgb(239,90,4)" fg:x="1142" fg:w="1"/><text x="84.8426%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.15%)</title><rect x="84.5926%" y="549" width="0.1481%" height="15" fill="rgb(248,110,3)" fg:x="1142" fg:w="2"/><text x="84.8426%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="84.6667%" y="533" width="0.0741%" height="15" fill="rgb(210,41,30)" fg:x="1143" fg:w="1"/><text x="84.9167%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="84.6667%" y="517" width="0.0741%" height="15" fill="rgb(239,36,8)" fg:x="1143" fg:w="1"/><text x="84.9167%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="84.6667%" y="501" width="0.0741%" height="15" fill="rgb(237,201,47)" fg:x="1143" fg:w="1"/><text x="84.9167%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="84.6667%" y="485" width="0.0741%" height="15" fill="rgb(224,140,29)" fg:x="1143" fg:w="1"/><text x="84.9167%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (9 samples, 0.67%)</title><rect x="84.1481%" y="565" width="0.6667%" height="15" fill="rgb(231,209,17)" fg:x="1136" fg:w="9"/><text x="84.3981%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.07%)</title><rect x="84.7407%" y="549" width="0.0741%" height="15" fill="rgb(249,196,1)" fg:x="1144" fg:w="1"/><text x="84.9907%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="84.7407%" y="533" width="0.0741%" height="15" fill="rgb(223,207,51)" fg:x="1144" fg:w="1"/><text x="84.9907%" y="543.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (1 samples, 0.07%)</title><rect x="84.8148%" y="565" width="0.0741%" height="15" fill="rgb(210,14,40)" fg:x="1145" fg:w="1"/><text x="85.0648%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.07%)</title><rect x="84.8148%" y="549" width="0.0741%" height="15" fill="rgb(250,20,52)" fg:x="1145" fg:w="1"/><text x="85.0648%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.07%)</title><rect x="84.8889%" y="533" width="0.0741%" height="15" fill="rgb(241,46,11)" fg:x="1146" fg:w="1"/><text x="85.1389%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.07%)</title><rect x="84.8889%" y="517" width="0.0741%" height="15" fill="rgb(219,105,5)" fg:x="1146" fg:w="1"/><text x="85.1389%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="84.8889%" y="501" width="0.0741%" height="15" fill="rgb(252,77,35)" fg:x="1146" fg:w="1"/><text x="85.1389%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.07%)</title><rect x="84.8889%" y="485" width="0.0741%" height="15" fill="rgb(243,119,2)" fg:x="1146" fg:w="1"/><text x="85.1389%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.07%)</title><rect x="84.8889%" y="469" width="0.0741%" height="15" fill="rgb(206,82,28)" fg:x="1146" fg:w="1"/><text x="85.1389%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="84.8889%" y="453" width="0.0741%" height="15" fill="rgb(227,120,12)" fg:x="1146" fg:w="1"/><text x="85.1389%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.07%)</title><rect x="84.9630%" y="517" width="0.0741%" height="15" fill="rgb(229,134,41)" fg:x="1147" fg:w="1"/><text x="85.2130%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="84.9630%" y="501" width="0.0741%" height="15" fill="rgb(239,96,32)" fg:x="1147" fg:w="1"/><text x="85.2130%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="84.9630%" y="485" width="0.0741%" height="15" fill="rgb(225,46,27)" fg:x="1147" fg:w="1"/><text x="85.2130%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="84.9630%" y="469" width="0.0741%" height="15" fill="rgb(215,168,2)" fg:x="1147" fg:w="1"/><text x="85.2130%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (3 samples, 0.22%)</title><rect x="84.8889%" y="565" width="0.2222%" height="15" fill="rgb(207,170,52)" fg:x="1146" fg:w="3"/><text x="85.1389%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.22%)</title><rect x="84.8889%" y="549" width="0.2222%" height="15" fill="rgb(237,198,36)" fg:x="1146" fg:w="3"/><text x="85.1389%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.15%)</title><rect x="84.9630%" y="533" width="0.1481%" height="15" fill="rgb(213,27,14)" fg:x="1147" fg:w="2"/><text x="85.2130%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.07%)</title><rect x="85.0370%" y="517" width="0.0741%" height="15" fill="rgb(218,77,5)" fg:x="1148" fg:w="1"/><text x="85.2870%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.07%)</title><rect x="85.0370%" y="501" width="0.0741%" height="15" fill="rgb(230,219,39)" fg:x="1148" fg:w="1"/><text x="85.2870%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.07%)</title><rect x="85.0370%" y="485" width="0.0741%" height="15" fill="rgb(245,177,7)" fg:x="1148" fg:w="1"/><text x="85.2870%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="85.0370%" y="469" width="0.0741%" height="15" fill="rgb(246,44,46)" fg:x="1148" fg:w="1"/><text x="85.2870%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.15%)</title><rect x="85.1852%" y="549" width="0.1481%" height="15" fill="rgb(207,173,15)" fg:x="1150" fg:w="2"/><text x="85.4352%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.07%)</title><rect x="85.2593%" y="533" width="0.0741%" height="15" fill="rgb(245,170,50)" fg:x="1151" fg:w="1"/><text x="85.5093%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="85.2593%" y="517" width="0.0741%" height="15" fill="rgb(233,156,21)" fg:x="1151" fg:w="1"/><text x="85.5093%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.07%)</title><rect x="85.3333%" y="469" width="0.0741%" height="15" fill="rgb(253,146,27)" fg:x="1152" fg:w="1"/><text x="85.5833%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="85.3333%" y="453" width="0.0741%" height="15" fill="rgb(247,66,29)" fg:x="1152" fg:w="1"/><text x="85.5833%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="85.3333%" y="437" width="0.0741%" height="15" fill="rgb(218,207,26)" fg:x="1152" fg:w="1"/><text x="85.5833%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="85.3333%" y="421" width="0.0741%" height="15" fill="rgb(234,93,26)" fg:x="1152" fg:w="1"/><text x="85.5833%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="85.3333%" y="405" width="0.0741%" height="15" fill="rgb(214,75,48)" fg:x="1152" fg:w="1"/><text x="85.5833%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="85.3333%" y="389" width="0.0741%" height="15" fill="rgb(229,119,22)" fg:x="1152" fg:w="1"/><text x="85.5833%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="85.3333%" y="373" width="0.0741%" height="15" fill="rgb(226,153,19)" fg:x="1152" fg:w="1"/><text x="85.5833%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="85.3333%" y="357" width="0.0741%" height="15" fill="rgb(220,204,36)" fg:x="1152" fg:w="1"/><text x="85.5833%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.15%)</title><rect x="85.3333%" y="549" width="0.1481%" height="15" fill="rgb(253,181,43)" fg:x="1152" fg:w="2"/><text x="85.5833%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="85.3333%" y="533" width="0.1481%" height="15" fill="rgb(211,41,51)" fg:x="1152" fg:w="2"/><text x="85.5833%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.15%)</title><rect x="85.3333%" y="517" width="0.1481%" height="15" fill="rgb(207,215,0)" fg:x="1152" fg:w="2"/><text x="85.5833%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.15%)</title><rect x="85.3333%" y="501" width="0.1481%" height="15" fill="rgb(212,153,10)" fg:x="1152" fg:w="2"/><text x="85.5833%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.15%)</title><rect x="85.3333%" y="485" width="0.1481%" height="15" fill="rgb(251,171,36)" fg:x="1152" fg:w="2"/><text x="85.5833%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.07%)</title><rect x="85.4074%" y="469" width="0.0741%" height="15" fill="rgb(225,219,41)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="85.4074%" y="453" width="0.0741%" height="15" fill="rgb(208,200,1)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="85.4074%" y="437" width="0.0741%" height="15" fill="rgb(206,75,47)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="85.4074%" y="421" width="0.0741%" height="15" fill="rgb(248,3,16)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="85.4074%" y="405" width="0.0741%" height="15" fill="rgb(242,157,36)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.4074%" y="389" width="0.0741%" height="15" fill="rgb(215,175,11)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.4074%" y="373" width="0.0741%" height="15" fill="rgb(252,222,22)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="85.4074%" y="357" width="0.0741%" height="15" fill="rgb(250,121,35)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="85.4074%" y="341" width="0.0741%" height="15" fill="rgb(233,120,49)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="85.4074%" y="325" width="0.0741%" height="15" fill="rgb(205,201,14)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="85.4074%" y="309" width="0.0741%" height="15" fill="rgb(219,58,45)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="85.4074%" y="293" width="0.0741%" height="15" fill="rgb(251,65,12)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="85.4074%" y="277" width="0.0741%" height="15" fill="rgb(224,47,31)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="85.4074%" y="261" width="0.0741%" height="15" fill="rgb(233,74,26)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="85.4074%" y="245" width="0.0741%" height="15" fill="rgb(231,211,31)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="85.4074%" y="229" width="0.0741%" height="15" fill="rgb(239,167,5)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="85.4074%" y="213" width="0.0741%" height="15" fill="rgb(241,85,0)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="85.4074%" y="197" width="0.0741%" height="15" fill="rgb(229,130,21)" fg:x="1153" fg:w="1"/><text x="85.6574%" y="207.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.07%)</title><rect x="85.4815%" y="533" width="0.0741%" height="15" fill="rgb(254,84,49)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.4815%" y="517" width="0.0741%" height="15" fill="rgb(235,85,21)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.4815%" y="501" width="0.0741%" height="15" fill="rgb(246,128,52)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="85.4815%" y="485" width="0.0741%" height="15" fill="rgb(243,114,49)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="85.4815%" y="469" width="0.0741%" height="15" fill="rgb(240,224,22)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="85.4815%" y="453" width="0.0741%" height="15" fill="rgb(247,201,52)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="85.4815%" y="437" width="0.0741%" height="15" fill="rgb(231,70,45)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="85.4815%" y="421" width="0.0741%" height="15" fill="rgb(217,215,20)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="85.4815%" y="405" width="0.0741%" height="15" fill="rgb(226,170,30)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="85.4815%" y="389" width="0.0741%" height="15" fill="rgb(220,190,43)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="85.4815%" y="373" width="0.0741%" height="15" fill="rgb(218,20,18)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="85.4815%" y="357" width="0.0741%" height="15" fill="rgb(245,37,26)" fg:x="1154" fg:w="1"/><text x="85.7315%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.5556%" y="485" width="0.0741%" height="15" fill="rgb(241,127,29)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="85.5556%" y="469" width="0.0741%" height="15" fill="rgb(241,33,26)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.07%)</title><rect x="85.5556%" y="453" width="0.0741%" height="15" fill="rgb(220,106,21)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.5556%" y="437" width="0.0741%" height="15" fill="rgb(225,125,35)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.5556%" y="421" width="0.0741%" height="15" fill="rgb(248,80,22)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="85.5556%" y="405" width="0.0741%" height="15" fill="rgb(231,117,39)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="85.5556%" y="389" width="0.0741%" height="15" fill="rgb(239,183,16)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="85.5556%" y="373" width="0.0741%" height="15" fill="rgb(221,61,19)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="85.5556%" y="357" width="0.0741%" height="15" fill="rgb(239,196,44)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="85.5556%" y="341" width="0.0741%" height="15" fill="rgb(206,113,19)" fg:x="1155" fg:w="1"/><text x="85.8056%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="85.7037%" y="389" width="0.0741%" height="15" fill="rgb(245,114,12)" fg:x="1157" fg:w="1"/><text x="85.9537%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="85.7037%" y="373" width="0.0741%" height="15" fill="rgb(247,89,39)" fg:x="1157" fg:w="1"/><text x="85.9537%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="85.7037%" y="405" width="0.1481%" height="15" fill="rgb(213,85,14)" fg:x="1157" fg:w="2"/><text x="85.9537%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="85.7778%" y="389" width="0.0741%" height="15" fill="rgb(249,206,33)" fg:x="1158" fg:w="1"/><text x="86.0278%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="85.7778%" y="373" width="0.0741%" height="15" fill="rgb(235,167,47)" fg:x="1158" fg:w="1"/><text x="86.0278%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.30%)</title><rect x="85.6296%" y="437" width="0.2963%" height="15" fill="rgb(217,177,16)" fg:x="1156" fg:w="4"/><text x="85.8796%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.22%)</title><rect x="85.7037%" y="421" width="0.2222%" height="15" fill="rgb(250,228,29)" fg:x="1157" fg:w="3"/><text x="85.9537%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="85.8519%" y="405" width="0.0741%" height="15" fill="rgb(216,195,42)" fg:x="1159" fg:w="1"/><text x="86.1019%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.22%)</title><rect x="85.9259%" y="405" width="0.2222%" height="15" fill="rgb(232,192,32)" fg:x="1160" fg:w="3"/><text x="86.1759%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="86.0000%" y="389" width="0.1481%" height="15" fill="rgb(211,8,47)" fg:x="1161" fg:w="2"/><text x="86.2500%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="86.0741%" y="373" width="0.0741%" height="15" fill="rgb(251,201,9)" fg:x="1162" fg:w="1"/><text x="86.3241%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="86.0741%" y="357" width="0.0741%" height="15" fill="rgb(206,185,47)" fg:x="1162" fg:w="1"/><text x="86.3241%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.30%)</title><rect x="85.9259%" y="421" width="0.2963%" height="15" fill="rgb(245,54,32)" fg:x="1160" fg:w="4"/><text x="86.1759%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="86.1481%" y="405" width="0.0741%" height="15" fill="rgb(208,1,8)" fg:x="1163" fg:w="1"/><text x="86.3981%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="86.1481%" y="389" width="0.0741%" height="15" fill="rgb(228,57,24)" fg:x="1163" fg:w="1"/><text x="86.3981%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.07%)</title><rect x="86.2222%" y="405" width="0.0741%" height="15" fill="rgb(251,24,8)" fg:x="1164" fg:w="1"/><text x="86.4722%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.22%)</title><rect x="86.2963%" y="405" width="0.2222%" height="15" fill="rgb(236,196,50)" fg:x="1165" fg:w="3"/><text x="86.5463%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="86.3704%" y="389" width="0.1481%" height="15" fill="rgb(246,222,29)" fg:x="1166" fg:w="2"/><text x="86.6204%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="86.3704%" y="373" width="0.1481%" height="15" fill="rgb(211,34,40)" fg:x="1166" fg:w="2"/><text x="86.6204%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="86.3704%" y="357" width="0.1481%" height="15" fill="rgb(210,66,51)" fg:x="1166" fg:w="2"/><text x="86.6204%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="86.4444%" y="341" width="0.0741%" height="15" fill="rgb(250,56,43)" fg:x="1167" fg:w="1"/><text x="86.6944%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="86.4444%" y="325" width="0.0741%" height="15" fill="rgb(240,111,50)" fg:x="1167" fg:w="1"/><text x="86.6944%" y="335.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="86.4444%" y="309" width="0.0741%" height="15" fill="rgb(209,117,13)" fg:x="1167" fg:w="1"/><text x="86.6944%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="86.5185%" y="389" width="0.0741%" height="15" fill="rgb(232,164,45)" fg:x="1168" fg:w="1"/><text x="86.7685%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.07%)</title><rect x="86.5926%" y="389" width="0.0741%" height="15" fill="rgb(205,69,32)" fg:x="1169" fg:w="1"/><text x="86.8426%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.07%)</title><rect x="86.5926%" y="373" width="0.0741%" height="15" fill="rgb(240,147,45)" fg:x="1169" fg:w="1"/><text x="86.8426%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.07%)</title><rect x="86.5926%" y="357" width="0.0741%" height="15" fill="rgb(221,94,48)" fg:x="1169" fg:w="1"/><text x="86.8426%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="86.5926%" y="341" width="0.0741%" height="15" fill="rgb(249,209,17)" fg:x="1169" fg:w="1"/><text x="86.8426%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="86.6667%" y="373" width="0.0741%" height="15" fill="rgb(228,57,28)" fg:x="1170" fg:w="1"/><text x="86.9167%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.07%)</title><rect x="86.7407%" y="373" width="0.0741%" height="15" fill="rgb(250,133,26)" fg:x="1171" fg:w="1"/><text x="86.9907%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="86.7407%" y="357" width="0.0741%" height="15" fill="rgb(254,15,16)" fg:x="1171" fg:w="1"/><text x="86.9907%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.37%)</title><rect x="86.6667%" y="389" width="0.3704%" height="15" fill="rgb(209,147,42)" fg:x="1170" fg:w="5"/><text x="86.9167%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.22%)</title><rect x="86.8148%" y="373" width="0.2222%" height="15" fill="rgb(208,5,29)" fg:x="1172" fg:w="3"/><text x="87.0648%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.22%)</title><rect x="86.8148%" y="357" width="0.2222%" height="15" fill="rgb(250,73,31)" fg:x="1172" fg:w="3"/><text x="87.0648%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.22%)</title><rect x="86.8148%" y="341" width="0.2222%" height="15" fill="rgb(238,45,10)" fg:x="1172" fg:w="3"/><text x="87.0648%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="86.9630%" y="325" width="0.0741%" height="15" fill="rgb(214,104,5)" fg:x="1174" fg:w="1"/><text x="87.2130%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="86.9630%" y="309" width="0.0741%" height="15" fill="rgb(242,217,19)" fg:x="1174" fg:w="1"/><text x="87.2130%" y="319.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="86.9630%" y="293" width="0.0741%" height="15" fill="rgb(246,113,27)" fg:x="1174" fg:w="1"/><text x="87.2130%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.59%)</title><rect x="86.5185%" y="405" width="0.5926%" height="15" fill="rgb(221,34,27)" fg:x="1168" fg:w="8"/><text x="86.7685%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="87.0370%" y="389" width="0.0741%" height="15" fill="rgb(246,109,6)" fg:x="1175" fg:w="1"/><text x="87.2870%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="87.0370%" y="373" width="0.0741%" height="15" fill="rgb(217,12,25)" fg:x="1175" fg:w="1"/><text x="87.2870%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.26%)</title><rect x="85.9259%" y="437" width="1.2593%" height="15" fill="rgb(250,195,5)" fg:x="1160" fg:w="17"/><text x="86.1759%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 0.96%)</title><rect x="86.2222%" y="421" width="0.9630%" height="15" fill="rgb(244,140,45)" fg:x="1164" fg:w="13"/><text x="86.4722%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="87.1111%" y="405" width="0.0741%" height="15" fill="rgb(230,64,14)" fg:x="1176" fg:w="1"/><text x="87.3611%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="87.1111%" y="389" width="0.0741%" height="15" fill="rgb(206,27,27)" fg:x="1176" fg:w="1"/><text x="87.3611%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.07%)</title><rect x="87.1111%" y="373" width="0.0741%" height="15" fill="rgb(230,14,50)" fg:x="1176" fg:w="1"/><text x="87.3611%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.07%)</title><rect x="87.1852%" y="437" width="0.0741%" height="15" fill="rgb(237,172,14)" fg:x="1177" fg:w="1"/><text x="87.4352%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.07%)</title><rect x="87.2593%" y="389" width="0.0741%" height="15" fill="rgb(209,25,21)" fg:x="1178" fg:w="1"/><text x="87.5093%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="87.2593%" y="373" width="0.0741%" height="15" fill="rgb(248,148,22)" fg:x="1178" fg:w="1"/><text x="87.5093%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.07%)</title><rect x="87.2593%" y="357" width="0.0741%" height="15" fill="rgb(234,100,22)" fg:x="1178" fg:w="1"/><text x="87.5093%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="87.3333%" y="341" width="0.1481%" height="15" fill="rgb(210,20,30)" fg:x="1179" fg:w="2"/><text x="87.5833%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="87.4815%" y="277" width="0.0741%" height="15" fill="rgb(232,58,0)" fg:x="1181" fg:w="1"/><text x="87.7315%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="87.4815%" y="261" width="0.0741%" height="15" fill="rgb(221,68,13)" fg:x="1181" fg:w="1"/><text x="87.7315%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="87.4815%" y="245" width="0.0741%" height="15" fill="rgb(231,194,11)" fg:x="1181" fg:w="1"/><text x="87.7315%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="87.4815%" y="229" width="0.0741%" height="15" fill="rgb(235,51,41)" fg:x="1181" fg:w="1"/><text x="87.7315%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="87.4815%" y="213" width="0.0741%" height="15" fill="rgb(240,50,32)" fg:x="1181" fg:w="1"/><text x="87.7315%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.15%)</title><rect x="87.4815%" y="341" width="0.1481%" height="15" fill="rgb(240,185,36)" fg:x="1181" fg:w="2"/><text x="87.7315%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="87.4815%" y="325" width="0.1481%" height="15" fill="rgb(211,168,15)" fg:x="1181" fg:w="2"/><text x="87.7315%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="87.4815%" y="309" width="0.1481%" height="15" fill="rgb(221,70,0)" fg:x="1181" fg:w="2"/><text x="87.7315%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="87.4815%" y="293" width="0.1481%" height="15" fill="rgb(205,21,33)" fg:x="1181" fg:w="2"/><text x="87.7315%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="87.5556%" y="277" width="0.0741%" height="15" fill="rgb(225,106,10)" fg:x="1182" fg:w="1"/><text x="87.8056%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="87.7778%" y="325" width="0.1481%" height="15" fill="rgb(236,200,50)" fg:x="1185" fg:w="2"/><text x="88.0278%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="87.8519%" y="309" width="0.0741%" height="15" fill="rgb(249,93,23)" fg:x="1186" fg:w="1"/><text x="88.1019%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="87.8519%" y="293" width="0.0741%" height="15" fill="rgb(244,115,35)" fg:x="1186" fg:w="1"/><text x="88.1019%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.67%)</title><rect x="87.3333%" y="357" width="0.6667%" height="15" fill="rgb(231,129,47)" fg:x="1179" fg:w="9"/><text x="87.5833%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.37%)</title><rect x="87.6296%" y="341" width="0.3704%" height="15" fill="rgb(225,160,50)" fg:x="1183" fg:w="5"/><text x="87.8796%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="87.9259%" y="325" width="0.0741%" height="15" fill="rgb(218,135,23)" fg:x="1187" fg:w="1"/><text x="88.1759%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.81%)</title><rect x="87.3333%" y="373" width="0.8148%" height="15" fill="rgb(227,119,14)" fg:x="1179" fg:w="11"/><text x="87.5833%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.15%)</title><rect x="88.0000%" y="357" width="0.1481%" height="15" fill="rgb(242,138,13)" fg:x="1188" fg:w="2"/><text x="88.2500%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="88.0741%" y="341" width="0.0741%" height="15" fill="rgb(215,11,16)" fg:x="1189" fg:w="1"/><text x="88.3241%" y="351.50"></text></g><g><title>engine::session::Session::flush (37 samples, 2.74%)</title><rect x="85.4815%" y="549" width="2.7407%" height="15" fill="rgb(234,170,50)" fg:x="1154" fg:w="37"/><text x="85.7315%" y="559.50">en..</text></g><g><title>engine::session::Session::save_changes (36 samples, 2.67%)</title><rect x="85.5556%" y="533" width="2.6667%" height="15" fill="rgb(233,34,20)" fg:x="1155" fg:w="36"/><text x="85.8056%" y="543.50">en..</text></g><g><title>engine::session::state::State::close (36 samples, 2.67%)</title><rect x="85.5556%" y="517" width="2.6667%" height="15" fill="rgb(237,100,45)" fg:x="1155" fg:w="36"/><text x="85.8056%" y="527.50">en..</text></g><g><title>engine::session::state::State::flush_entities (36 samples, 2.67%)</title><rect x="85.5556%" y="501" width="2.6667%" height="15" fill="rgb(231,184,36)" fg:x="1155" fg:w="36"/><text x="85.8056%" y="511.50">en..</text></g><g><title>core::iter::adapters::try_process (35 samples, 2.59%)</title><rect x="85.6296%" y="485" width="2.5926%" height="15" fill="rgb(252,93,2)" fg:x="1156" fg:w="35"/><text x="85.8796%" y="495.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 2.59%)</title><rect x="85.6296%" y="469" width="2.5926%" height="15" fill="rgb(248,176,47)" fg:x="1156" fg:w="35"/><text x="85.8796%" y="479.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (35 samples, 2.59%)</title><rect x="85.6296%" y="453" width="2.5926%" height="15" fill="rgb(249,125,23)" fg:x="1156" fg:w="35"/><text x="85.8796%" y="463.50">en..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 0.96%)</title><rect x="87.2593%" y="437" width="0.9630%" height="15" fill="rgb(239,67,42)" fg:x="1178" fg:w="13"/><text x="87.5093%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 0.96%)</title><rect x="87.2593%" y="421" width="0.9630%" height="15" fill="rgb(244,162,4)" fg:x="1178" fg:w="13"/><text x="87.5093%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 0.96%)</title><rect x="87.2593%" y="405" width="0.9630%" height="15" fill="rgb(214,150,38)" fg:x="1178" fg:w="13"/><text x="87.5093%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.89%)</title><rect x="87.3333%" y="389" width="0.8889%" height="15" fill="rgb(228,211,28)" fg:x="1179" fg:w="12"/><text x="87.5833%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="88.1481%" y="373" width="0.0741%" height="15" fill="rgb(212,98,48)" fg:x="1190" fg:w="1"/><text x="88.3981%" y="383.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.07%)</title><rect x="88.2222%" y="549" width="0.0741%" height="15" fill="rgb(213,45,13)" fg:x="1191" fg:w="1"/><text x="88.4722%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.07%)</title><rect x="88.2222%" y="533" width="0.0741%" height="15" fill="rgb(218,35,29)" fg:x="1191" fg:w="1"/><text x="88.4722%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="88.2222%" y="517" width="0.0741%" height="15" fill="rgb(244,13,3)" fg:x="1191" fg:w="1"/><text x="88.4722%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="88.2222%" y="501" width="0.0741%" height="15" fill="rgb(235,170,19)" fg:x="1191" fg:w="1"/><text x="88.4722%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="88.2222%" y="485" width="0.0741%" height="15" fill="rgb(233,193,43)" fg:x="1191" fg:w="1"/><text x="88.4722%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="88.2963%" y="517" width="0.0741%" height="15" fill="rgb(228,223,20)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="88.2963%" y="501" width="0.0741%" height="15" fill="rgb(208,85,54)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="88.2963%" y="485" width="0.0741%" height="15" fill="rgb(254,14,45)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="88.2963%" y="469" width="0.0741%" height="15" fill="rgb(247,99,29)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="88.2963%" y="453" width="0.0741%" height="15" fill="rgb(225,180,54)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="88.2963%" y="437" width="0.0741%" height="15" fill="rgb(239,88,43)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="88.2963%" y="421" width="0.0741%" height="15" fill="rgb(209,47,11)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="88.2963%" y="405" width="0.0741%" height="15" fill="rgb(219,179,23)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="88.2963%" y="389" width="0.0741%" height="15" fill="rgb(213,183,19)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="88.2963%" y="373" width="0.0741%" height="15" fill="rgb(210,11,9)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="88.2963%" y="357" width="0.0741%" height="15" fill="rgb(239,194,16)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="88.2963%" y="341" width="0.0741%" height="15" fill="rgb(246,23,50)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="88.2963%" y="325" width="0.0741%" height="15" fill="rgb(245,10,41)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="88.2963%" y="309" width="0.0741%" height="15" fill="rgb(228,43,24)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="88.2963%" y="293" width="0.0741%" height="15" fill="rgb(220,151,0)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="88.2963%" y="277" width="0.0741%" height="15" fill="rgb(232,219,10)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="88.2963%" y="261" width="0.0741%" height="15" fill="rgb(227,217,48)" fg:x="1192" fg:w="1"/><text x="88.5463%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.07%)</title><rect x="88.3704%" y="501" width="0.0741%" height="15" fill="rgb(210,66,35)" fg:x="1193" fg:w="1"/><text x="88.6204%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.07%)</title><rect x="88.3704%" y="485" width="0.0741%" height="15" fill="rgb(254,6,7)" fg:x="1193" fg:w="1"/><text x="88.6204%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.07%)</title><rect x="88.3704%" y="469" width="0.0741%" height="15" fill="rgb(235,222,42)" fg:x="1193" fg:w="1"/><text x="88.6204%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="88.3704%" y="453" width="0.0741%" height="15" fill="rgb(245,126,5)" fg:x="1193" fg:w="1"/><text x="88.6204%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="88.3704%" y="437" width="0.0741%" height="15" fill="rgb(215,73,17)" fg:x="1193" fg:w="1"/><text x="88.6204%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="88.4444%" y="389" width="0.0741%" height="15" fill="rgb(219,198,52)" fg:x="1194" fg:w="1"/><text x="88.6944%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="88.4444%" y="373" width="0.0741%" height="15" fill="rgb(217,159,18)" fg:x="1194" fg:w="1"/><text x="88.6944%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="88.4444%" y="357" width="0.0741%" height="15" fill="rgb(212,177,18)" fg:x="1194" fg:w="1"/><text x="88.6944%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.15%)</title><rect x="88.4444%" y="453" width="0.1481%" height="15" fill="rgb(241,10,11)" fg:x="1194" fg:w="2"/><text x="88.6944%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="88.4444%" y="437" width="0.1481%" height="15" fill="rgb(232,114,35)" fg:x="1194" fg:w="2"/><text x="88.6944%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="88.4444%" y="421" width="0.1481%" height="15" fill="rgb(238,222,8)" fg:x="1194" fg:w="2"/><text x="88.6944%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="88.4444%" y="405" width="0.1481%" height="15" fill="rgb(251,153,44)" fg:x="1194" fg:w="2"/><text x="88.6944%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="88.5185%" y="389" width="0.0741%" height="15" fill="rgb(210,140,51)" fg:x="1195" fg:w="1"/><text x="88.7685%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.37%)</title><rect x="88.2963%" y="533" width="0.3704%" height="15" fill="rgb(222,63,0)" fg:x="1192" fg:w="5"/><text x="88.5463%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.30%)</title><rect x="88.3704%" y="517" width="0.2963%" height="15" fill="rgb(240,18,40)" fg:x="1193" fg:w="4"/><text x="88.6204%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.22%)</title><rect x="88.4444%" y="501" width="0.2222%" height="15" fill="rgb(237,88,16)" fg:x="1194" fg:w="3"/><text x="88.6944%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.22%)</title><rect x="88.4444%" y="485" width="0.2222%" height="15" fill="rgb(251,117,13)" fg:x="1194" fg:w="3"/><text x="88.6944%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.22%)</title><rect x="88.4444%" y="469" width="0.2222%" height="15" fill="rgb(251,228,8)" fg:x="1194" fg:w="3"/><text x="88.6944%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="88.5926%" y="453" width="0.0741%" height="15" fill="rgb(205,107,49)" fg:x="1196" fg:w="1"/><text x="88.8426%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="88.5926%" y="437" width="0.0741%" height="15" fill="rgb(238,72,41)" fg:x="1196" fg:w="1"/><text x="88.8426%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="88.5926%" y="421" width="0.0741%" height="15" fill="rgb(248,183,52)" fg:x="1196" fg:w="1"/><text x="88.8426%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (6 samples, 0.44%)</title><rect x="88.2963%" y="549" width="0.4444%" height="15" fill="rgb(215,58,20)" fg:x="1192" fg:w="6"/><text x="88.5463%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="88.6667%" y="533" width="0.0741%" height="15" fill="rgb(209,49,13)" fg:x="1197" fg:w="1"/><text x="88.9167%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.07%)</title><rect x="88.7407%" y="517" width="0.0741%" height="15" fill="rgb(208,113,17)" fg:x="1198" fg:w="1"/><text x="88.9907%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.15%)</title><rect x="88.8148%" y="517" width="0.1481%" height="15" fill="rgb(208,14,22)" fg:x="1199" fg:w="2"/><text x="89.0648%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.15%)</title><rect x="88.8148%" y="501" width="0.1481%" height="15" fill="rgb(222,95,2)" fg:x="1199" fg:w="2"/><text x="89.0648%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.07%)</title><rect x="88.8889%" y="485" width="0.0741%" height="15" fill="rgb(253,180,37)" fg:x="1200" fg:w="1"/><text x="89.1389%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="88.8889%" y="469" width="0.0741%" height="15" fill="rgb(250,81,33)" fg:x="1200" fg:w="1"/><text x="89.1389%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="88.8889%" y="453" width="0.0741%" height="15" fill="rgb(251,151,41)" fg:x="1200" fg:w="1"/><text x="89.1389%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="88.8889%" y="437" width="0.0741%" height="15" fill="rgb(210,135,17)" fg:x="1200" fg:w="1"/><text x="89.1389%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="88.8889%" y="421" width="0.0741%" height="15" fill="rgb(239,21,29)" fg:x="1200" fg:w="1"/><text x="89.1389%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="88.8889%" y="405" width="0.0741%" height="15" fill="rgb(231,215,16)" fg:x="1200" fg:w="1"/><text x="89.1389%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="88.8889%" y="389" width="0.0741%" height="15" fill="rgb(239,151,54)" fg:x="1200" fg:w="1"/><text x="89.1389%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (4 samples, 0.30%)</title><rect x="88.7407%" y="549" width="0.2963%" height="15" fill="rgb(222,122,38)" fg:x="1198" fg:w="4"/><text x="88.9907%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.30%)</title><rect x="88.7407%" y="533" width="0.2963%" height="15" fill="rgb(243,128,1)" fg:x="1198" fg:w="4"/><text x="88.9907%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.07%)</title><rect x="88.9630%" y="517" width="0.0741%" height="15" fill="rgb(225,74,21)" fg:x="1201" fg:w="1"/><text x="89.2130%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.07%)</title><rect x="88.9630%" y="501" width="0.0741%" height="15" fill="rgb(216,210,10)" fg:x="1201" fg:w="1"/><text x="89.2130%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="88.9630%" y="485" width="0.0741%" height="15" fill="rgb(228,76,19)" fg:x="1201" fg:w="1"/><text x="89.2130%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.07%)</title><rect x="88.9630%" y="469" width="0.0741%" height="15" fill="rgb(236,80,34)" fg:x="1201" fg:w="1"/><text x="89.2130%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="88.9630%" y="453" width="0.0741%" height="15" fill="rgb(225,173,23)" fg:x="1201" fg:w="1"/><text x="89.2130%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="88.9630%" y="437" width="0.0741%" height="15" fill="rgb(253,38,1)" fg:x="1201" fg:w="1"/><text x="89.2130%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="88.9630%" y="421" width="0.0741%" height="15" fill="rgb(206,155,35)" fg:x="1201" fg:w="1"/><text x="89.2130%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="88.9630%" y="405" width="0.0741%" height="15" fill="rgb(254,27,53)" fg:x="1201" fg:w="1"/><text x="89.2130%" y="415.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.07%)</title><rect x="89.0370%" y="533" width="0.0741%" height="15" fill="rgb(225,52,41)" fg:x="1202" fg:w="1"/><text x="89.2870%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.07%)</title><rect x="89.0370%" y="517" width="0.0741%" height="15" fill="rgb(244,53,18)" fg:x="1202" fg:w="1"/><text x="89.2870%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="89.0370%" y="501" width="0.0741%" height="15" fill="rgb(254,206,48)" fg:x="1202" fg:w="1"/><text x="89.2870%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.07%)</title><rect x="89.0370%" y="485" width="0.0741%" height="15" fill="rgb(236,182,23)" fg:x="1202" fg:w="1"/><text x="89.2870%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.07%)</title><rect x="89.0370%" y="469" width="0.0741%" height="15" fill="rgb(236,191,37)" fg:x="1202" fg:w="1"/><text x="89.2870%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="89.0370%" y="453" width="0.0741%" height="15" fill="rgb(245,53,8)" fg:x="1202" fg:w="1"/><text x="89.2870%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="89.0370%" y="437" width="0.0741%" height="15" fill="rgb(245,147,9)" fg:x="1202" fg:w="1"/><text x="89.2870%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.07%)</title><rect x="89.1111%" y="517" width="0.0741%" height="15" fill="rgb(218,24,48)" fg:x="1203" fg:w="1"/><text x="89.3611%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="89.1111%" y="501" width="0.0741%" height="15" fill="rgb(254,23,9)" fg:x="1203" fg:w="1"/><text x="89.3611%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="89.1111%" y="485" width="0.0741%" height="15" fill="rgb(244,105,9)" fg:x="1203" fg:w="1"/><text x="89.3611%" y="495.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.15%)</title><rect x="89.1111%" y="533" width="0.1481%" height="15" fill="rgb(212,142,22)" fg:x="1203" fg:w="2"/><text x="89.3611%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.07%)</title><rect x="89.1852%" y="517" width="0.0741%" height="15" fill="rgb(221,114,49)" fg:x="1204" fg:w="1"/><text x="89.4352%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.07%)</title><rect x="89.1852%" y="501" width="0.0741%" height="15" fill="rgb(223,210,25)" fg:x="1204" fg:w="1"/><text x="89.4352%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.07%)</title><rect x="89.1852%" y="485" width="0.0741%" height="15" fill="rgb(235,162,44)" fg:x="1204" fg:w="1"/><text x="89.4352%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="89.1852%" y="469" width="0.0741%" height="15" fill="rgb(237,65,45)" fg:x="1204" fg:w="1"/><text x="89.4352%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="89.1852%" y="453" width="0.0741%" height="15" fill="rgb(208,79,9)" fg:x="1204" fg:w="1"/><text x="89.4352%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="89.1852%" y="437" width="0.0741%" height="15" fill="rgb(215,228,8)" fg:x="1204" fg:w="1"/><text x="89.4352%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="89.1852%" y="421" width="0.0741%" height="15" fill="rgb(205,185,17)" fg:x="1204" fg:w="1"/><text x="89.4352%" y="431.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.30%)</title><rect x="89.0370%" y="549" width="0.2963%" height="15" fill="rgb(213,62,36)" fg:x="1202" fg:w="4"/><text x="89.2870%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.07%)</title><rect x="89.2593%" y="533" width="0.0741%" height="15" fill="rgb(209,34,9)" fg:x="1205" fg:w="1"/><text x="89.5093%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.07%)</title><rect x="89.2593%" y="517" width="0.0741%" height="15" fill="rgb(246,151,27)" fg:x="1205" fg:w="1"/><text x="89.5093%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.07%)</title><rect x="89.2593%" y="501" width="0.0741%" height="15" fill="rgb(218,206,3)" fg:x="1205" fg:w="1"/><text x="89.5093%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (58 samples, 4.30%)</title><rect x="85.1111%" y="565" width="4.2963%" height="15" fill="rgb(242,202,1)" fg:x="1149" fg:w="58"/><text x="85.3611%" y="575.50">plugi..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.07%)</title><rect x="89.3333%" y="549" width="0.0741%" height="15" fill="rgb(227,185,16)" fg:x="1206" fg:w="1"/><text x="89.5833%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.07%)</title><rect x="89.4074%" y="565" width="0.0741%" height="15" fill="rgb(241,1,14)" fg:x="1207" fg:w="1"/><text x="89.6574%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.07%)</title><rect x="89.4074%" y="549" width="0.0741%" height="15" fill="rgb(212,113,25)" fg:x="1207" fg:w="1"/><text x="89.6574%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.07%)</title><rect x="89.4074%" y="533" width="0.0741%" height="15" fill="rgb(247,37,43)" fg:x="1207" fg:w="1"/><text x="89.6574%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.07%)</title><rect x="89.4074%" y="517" width="0.0741%" height="15" fill="rgb(226,54,8)" fg:x="1207" fg:w="1"/><text x="89.6574%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.07%)</title><rect x="89.4074%" y="501" width="0.0741%" height="15" fill="rgb(251,205,25)" fg:x="1207" fg:w="1"/><text x="89.6574%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="89.4074%" y="485" width="0.0741%" height="15" fill="rgb(246,87,35)" fg:x="1207" fg:w="1"/><text x="89.6574%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="89.4074%" y="469" width="0.0741%" height="15" fill="rgb(251,145,46)" fg:x="1207" fg:w="1"/><text x="89.6574%" y="479.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.07%)</title><rect x="89.4815%" y="517" width="0.0741%" height="15" fill="rgb(210,210,33)" fg:x="1208" fg:w="1"/><text x="89.7315%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.15%)</title><rect x="89.4815%" y="533" width="0.1481%" height="15" fill="rgb(221,151,11)" fg:x="1208" fg:w="2"/><text x="89.7315%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="89.5556%" y="517" width="0.0741%" height="15" fill="rgb(208,160,28)" fg:x="1209" fg:w="1"/><text x="89.8056%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.07%)</title><rect x="89.6296%" y="533" width="0.0741%" height="15" fill="rgb(243,69,29)" fg:x="1210" fg:w="1"/><text x="89.8796%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.07%)</title><rect x="89.6296%" y="517" width="0.0741%" height="15" fill="rgb(224,144,4)" fg:x="1210" fg:w="1"/><text x="89.8796%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.07%)</title><rect x="89.6296%" y="501" width="0.0741%" height="15" fill="rgb(211,140,38)" fg:x="1210" fg:w="1"/><text x="89.8796%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.07%)</title><rect x="89.6296%" y="485" width="0.0741%" height="15" fill="rgb(252,189,15)" fg:x="1210" fg:w="1"/><text x="89.8796%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.07%)</title><rect x="89.6296%" y="469" width="0.0741%" height="15" fill="rgb(251,175,23)" fg:x="1210" fg:w="1"/><text x="89.8796%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="89.6296%" y="453" width="0.0741%" height="15" fill="rgb(212,184,11)" fg:x="1210" fg:w="1"/><text x="89.8796%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.07%)</title><rect x="89.7037%" y="501" width="0.0741%" height="15" fill="rgb(217,205,6)" fg:x="1211" fg:w="1"/><text x="89.9537%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.07%)</title><rect x="89.7037%" y="485" width="0.0741%" height="15" fill="rgb(235,45,45)" fg:x="1211" fg:w="1"/><text x="89.9537%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.07%)</title><rect x="89.7037%" y="469" width="0.0741%" height="15" fill="rgb(211,157,53)" fg:x="1211" fg:w="1"/><text x="89.9537%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="89.7037%" y="453" width="0.0741%" height="15" fill="rgb(212,13,8)" fg:x="1211" fg:w="1"/><text x="89.9537%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="89.7037%" y="437" width="0.0741%" height="15" fill="rgb(218,80,36)" fg:x="1211" fg:w="1"/><text x="89.9537%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.07%)</title><rect x="89.7778%" y="453" width="0.0741%" height="15" fill="rgb(211,123,43)" fg:x="1212" fg:w="1"/><text x="90.0278%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="89.7778%" y="437" width="0.0741%" height="15" fill="rgb(206,165,2)" fg:x="1212" fg:w="1"/><text x="90.0278%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="89.7778%" y="421" width="0.0741%" height="15" fill="rgb(248,63,35)" fg:x="1212" fg:w="1"/><text x="90.0278%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="89.7778%" y="405" width="0.0741%" height="15" fill="rgb(219,133,41)" fg:x="1212" fg:w="1"/><text x="90.0278%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="89.7778%" y="389" width="0.0741%" height="15" fill="rgb(206,175,46)" fg:x="1212" fg:w="1"/><text x="90.0278%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="89.7778%" y="373" width="0.0741%" height="15" fill="rgb(224,41,35)" fg:x="1212" fg:w="1"/><text x="90.0278%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="89.7778%" y="357" width="0.0741%" height="15" fill="rgb(226,113,24)" fg:x="1212" fg:w="1"/><text x="90.0278%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="89.8519%" y="453" width="0.0741%" height="15" fill="rgb(219,51,41)" fg:x="1213" fg:w="1"/><text x="90.1019%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="89.9259%" y="421" width="0.0741%" height="15" fill="rgb(220,145,47)" fg:x="1214" fg:w="1"/><text x="90.1759%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="89.9259%" y="405" width="0.0741%" height="15" fill="rgb(239,121,47)" fg:x="1214" fg:w="1"/><text x="90.1759%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="89.9259%" y="389" width="0.0741%" height="15" fill="rgb(207,60,40)" fg:x="1214" fg:w="1"/><text x="90.1759%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.30%)</title><rect x="89.7778%" y="485" width="0.2963%" height="15" fill="rgb(224,229,11)" fg:x="1212" fg:w="4"/><text x="90.0278%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.30%)</title><rect x="89.7778%" y="469" width="0.2963%" height="15" fill="rgb(252,28,32)" fg:x="1212" fg:w="4"/><text x="90.0278%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.15%)</title><rect x="89.9259%" y="453" width="0.1481%" height="15" fill="rgb(207,52,49)" fg:x="1214" fg:w="2"/><text x="90.1759%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="89.9259%" y="437" width="0.1481%" height="15" fill="rgb(243,51,50)" fg:x="1214" fg:w="2"/><text x="90.1759%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="90.0000%" y="421" width="0.0741%" height="15" fill="rgb(212,92,21)" fg:x="1215" fg:w="1"/><text x="90.2500%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.07%)</title><rect x="90.0000%" y="405" width="0.0741%" height="15" fill="rgb(230,183,50)" fg:x="1215" fg:w="1"/><text x="90.2500%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="90.0000%" y="389" width="0.0741%" height="15" fill="rgb(225,48,9)" fg:x="1215" fg:w="1"/><text x="90.2500%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="90.0000%" y="373" width="0.0741%" height="15" fill="rgb(254,44,4)" fg:x="1215" fg:w="1"/><text x="90.2500%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="90.0000%" y="357" width="0.0741%" height="15" fill="rgb(252,128,37)" fg:x="1215" fg:w="1"/><text x="90.2500%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.37%)</title><rect x="89.7778%" y="501" width="0.3704%" height="15" fill="rgb(227,178,8)" fg:x="1212" fg:w="5"/><text x="90.0278%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.07%)</title><rect x="90.0741%" y="485" width="0.0741%" height="15" fill="rgb(205,206,32)" fg:x="1216" fg:w="1"/><text x="90.3241%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="90.0741%" y="469" width="0.0741%" height="15" fill="rgb(220,218,22)" fg:x="1216" fg:w="1"/><text x="90.3241%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.07%)</title><rect x="90.0741%" y="453" width="0.0741%" height="15" fill="rgb(236,41,28)" fg:x="1216" fg:w="1"/><text x="90.3241%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="90.0741%" y="437" width="0.0741%" height="15" fill="rgb(219,37,7)" fg:x="1216" fg:w="1"/><text x="90.3241%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="90.0741%" y="421" width="0.0741%" height="15" fill="rgb(206,160,15)" fg:x="1216" fg:w="1"/><text x="90.3241%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="90.0741%" y="405" width="0.0741%" height="15" fill="rgb(208,82,21)" fg:x="1216" fg:w="1"/><text x="90.3241%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.52%)</title><rect x="89.7037%" y="517" width="0.5185%" height="15" fill="rgb(226,130,25)" fg:x="1211" fg:w="7"/><text x="89.9537%" y="527.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.07%)</title><rect x="90.1481%" y="501" width="0.0741%" height="15" fill="rgb(212,72,24)" fg:x="1217" fg:w="1"/><text x="90.3981%" y="511.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.07%)</title><rect x="90.1481%" y="485" width="0.0741%" height="15" fill="rgb(206,28,16)" fg:x="1217" fg:w="1"/><text x="90.3981%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.59%)</title><rect x="89.7037%" y="533" width="0.5926%" height="15" fill="rgb(249,41,5)" fg:x="1211" fg:w="8"/><text x="89.9537%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="90.2222%" y="517" width="0.0741%" height="15" fill="rgb(233,96,48)" fg:x="1218" fg:w="1"/><text x="90.4722%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="90.2222%" y="501" width="0.0741%" height="15" fill="rgb(240,198,11)" fg:x="1218" fg:w="1"/><text x="90.4722%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="90.2222%" y="485" width="0.0741%" height="15" fill="rgb(209,175,35)" fg:x="1218" fg:w="1"/><text x="90.4722%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="90.2222%" y="469" width="0.0741%" height="15" fill="rgb(214,40,51)" fg:x="1218" fg:w="1"/><text x="90.4722%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="90.2222%" y="453" width="0.0741%" height="15" fill="rgb(252,56,4)" fg:x="1218" fg:w="1"/><text x="90.4722%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (13 samples, 0.96%)</title><rect x="89.4815%" y="565" width="0.9630%" height="15" fill="rgb(219,131,5)" fg:x="1208" fg:w="13"/><text x="89.7315%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (13 samples, 0.96%)</title><rect x="89.4815%" y="549" width="0.9630%" height="15" fill="rgb(223,67,53)" fg:x="1208" fg:w="13"/><text x="89.7315%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (2 samples, 0.15%)</title><rect x="90.2963%" y="533" width="0.1481%" height="15" fill="rgb(227,154,8)" fg:x="1219" fg:w="2"/><text x="90.5463%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.15%)</title><rect x="90.2963%" y="517" width="0.1481%" height="15" fill="rgb(216,174,51)" fg:x="1219" fg:w="2"/><text x="90.5463%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.07%)</title><rect x="90.3704%" y="501" width="0.0741%" height="15" fill="rgb(239,60,34)" fg:x="1220" fg:w="1"/><text x="90.6204%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="90.3704%" y="485" width="0.0741%" height="15" fill="rgb(236,165,48)" fg:x="1220" fg:w="1"/><text x="90.6204%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.15%)</title><rect x="90.4444%" y="549" width="0.1481%" height="15" fill="rgb(210,37,26)" fg:x="1221" fg:w="2"/><text x="90.6944%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (2 samples, 0.15%)</title><rect x="90.4444%" y="533" width="0.1481%" height="15" fill="rgb(211,3,17)" fg:x="1221" fg:w="2"/><text x="90.6944%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="90.5185%" y="517" width="0.0741%" height="15" fill="rgb(234,88,49)" fg:x="1222" fg:w="1"/><text x="90.7685%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="90.6667%" y="517" width="0.0741%" height="15" fill="rgb(233,40,17)" fg:x="1224" fg:w="1"/><text x="90.9167%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="90.6667%" y="501" width="0.0741%" height="15" fill="rgb(235,127,31)" fg:x="1224" fg:w="1"/><text x="90.9167%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.07%)</title><rect x="90.7407%" y="469" width="0.0741%" height="15" fill="rgb(248,167,17)" fg:x="1225" fg:w="1"/><text x="90.9907%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="90.7407%" y="453" width="0.0741%" height="15" fill="rgb(218,179,8)" fg:x="1225" fg:w="1"/><text x="90.9907%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="90.7407%" y="437" width="0.0741%" height="15" fill="rgb(216,92,14)" fg:x="1225" fg:w="1"/><text x="90.9907%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="90.7407%" y="421" width="0.0741%" height="15" fill="rgb(221,198,46)" fg:x="1225" fg:w="1"/><text x="90.9907%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="90.7407%" y="405" width="0.0741%" height="15" fill="rgb(244,7,25)" fg:x="1225" fg:w="1"/><text x="90.9907%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.15%)</title><rect x="90.7407%" y="501" width="0.1481%" height="15" fill="rgb(233,75,6)" fg:x="1225" fg:w="2"/><text x="90.9907%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.15%)</title><rect x="90.7407%" y="485" width="0.1481%" height="15" fill="rgb(240,189,41)" fg:x="1225" fg:w="2"/><text x="90.9907%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.07%)</title><rect x="90.8148%" y="469" width="0.0741%" height="15" fill="rgb(237,157,21)" fg:x="1226" fg:w="1"/><text x="91.0648%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="90.8148%" y="453" width="0.0741%" height="15" fill="rgb(210,136,49)" fg:x="1226" fg:w="1"/><text x="91.0648%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.07%)</title><rect x="90.8148%" y="437" width="0.0741%" height="15" fill="rgb(210,68,29)" fg:x="1226" fg:w="1"/><text x="91.0648%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.07%)</title><rect x="90.8889%" y="501" width="0.0741%" height="15" fill="rgb(247,207,20)" fg:x="1227" fg:w="1"/><text x="91.1389%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="90.8889%" y="485" width="0.0741%" height="15" fill="rgb(224,73,48)" fg:x="1227" fg:w="1"/><text x="91.1389%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="90.8889%" y="469" width="0.0741%" height="15" fill="rgb(215,136,47)" fg:x="1227" fg:w="1"/><text x="91.1389%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="90.8889%" y="453" width="0.0741%" height="15" fill="rgb(232,222,16)" fg:x="1227" fg:w="1"/><text x="91.1389%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.44%)</title><rect x="90.5926%" y="533" width="0.4444%" height="15" fill="rgb(249,202,47)" fg:x="1223" fg:w="6"/><text x="90.8426%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.30%)</title><rect x="90.7407%" y="517" width="0.2963%" height="15" fill="rgb(236,56,8)" fg:x="1225" fg:w="4"/><text x="90.9907%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.07%)</title><rect x="90.9630%" y="501" width="0.0741%" height="15" fill="rgb(222,6,3)" fg:x="1228" fg:w="1"/><text x="91.2130%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="90.9630%" y="485" width="0.0741%" height="15" fill="rgb(254,222,28)" fg:x="1228" fg:w="1"/><text x="91.2130%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="90.9630%" y="469" width="0.0741%" height="15" fill="rgb(219,57,23)" fg:x="1228" fg:w="1"/><text x="91.2130%" y="479.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (124 samples, 9.19%)</title><rect x="81.9259%" y="581" width="9.1852%" height="15" fill="rgb(251,106,48)" fg:x="1106" fg:w="124"/><text x="82.1759%" y="591.50">&lt;tests::Holdi..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (9 samples, 0.67%)</title><rect x="90.4444%" y="565" width="0.6667%" height="15" fill="rgb(242,2,23)" fg:x="1221" fg:w="9"/><text x="90.6944%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (7 samples, 0.52%)</title><rect x="90.5926%" y="549" width="0.5185%" height="15" fill="rgb(212,109,31)" fg:x="1223" fg:w="7"/><text x="90.8426%" y="559.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.07%)</title><rect x="91.0370%" y="533" width="0.0741%" height="15" fill="rgb(241,9,22)" fg:x="1229" fg:w="1"/><text x="91.2870%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="91.0370%" y="517" width="0.0741%" height="15" fill="rgb(209,64,27)" fg:x="1229" fg:w="1"/><text x="91.2870%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="91.0370%" y="501" width="0.0741%" height="15" fill="rgb(248,13,44)" fg:x="1229" fg:w="1"/><text x="91.2870%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.07%)</title><rect x="91.1111%" y="565" width="0.0741%" height="15" fill="rgb(213,86,6)" fg:x="1230" fg:w="1"/><text x="91.3611%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.07%)</title><rect x="91.1111%" y="549" width="0.0741%" height="15" fill="rgb(247,11,18)" fg:x="1230" fg:w="1"/><text x="91.3611%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="91.1111%" y="533" width="0.0741%" height="15" fill="rgb(252,31,11)" fg:x="1230" fg:w="1"/><text x="91.3611%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.07%)</title><rect x="91.1111%" y="517" width="0.0741%" height="15" fill="rgb(215,63,51)" fg:x="1230" fg:w="1"/><text x="91.3611%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.07%)</title><rect x="91.1111%" y="501" width="0.0741%" height="15" fill="rgb(222,180,4)" fg:x="1230" fg:w="1"/><text x="91.3611%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.07%)</title><rect x="91.1111%" y="485" width="0.0741%" height="15" fill="rgb(233,4,23)" fg:x="1230" fg:w="1"/><text x="91.3611%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.07%)</title><rect x="91.1111%" y="469" width="0.0741%" height="15" fill="rgb(230,116,22)" fg:x="1230" fg:w="1"/><text x="91.3611%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="91.1111%" y="453" width="0.0741%" height="15" fill="rgb(222,20,14)" fg:x="1230" fg:w="1"/><text x="91.3611%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="91.1852%" y="533" width="0.0741%" height="15" fill="rgb(210,176,43)" fg:x="1231" fg:w="1"/><text x="91.4352%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="91.1852%" y="517" width="0.0741%" height="15" fill="rgb(219,67,32)" fg:x="1231" fg:w="1"/><text x="91.4352%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="91.1852%" y="501" width="0.0741%" height="15" fill="rgb(228,91,39)" fg:x="1231" fg:w="1"/><text x="91.4352%" y="511.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="91.1852%" y="485" width="0.0741%" height="15" fill="rgb(254,63,14)" fg:x="1231" fg:w="1"/><text x="91.4352%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="91.4074%" y="453" width="0.0741%" height="15" fill="rgb(216,171,39)" fg:x="1234" fg:w="1"/><text x="91.6574%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="91.4074%" y="437" width="0.0741%" height="15" fill="rgb(248,68,25)" fg:x="1234" fg:w="1"/><text x="91.6574%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="91.4074%" y="421" width="0.0741%" height="15" fill="rgb(239,63,16)" fg:x="1234" fg:w="1"/><text x="91.6574%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="91.4074%" y="405" width="0.0741%" height="15" fill="rgb(225,111,43)" fg:x="1234" fg:w="1"/><text x="91.6574%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.22%)</title><rect x="91.3333%" y="485" width="0.2222%" height="15" fill="rgb(246,165,17)" fg:x="1233" fg:w="3"/><text x="91.5833%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.22%)</title><rect x="91.3333%" y="469" width="0.2222%" height="15" fill="rgb(208,124,1)" fg:x="1233" fg:w="3"/><text x="91.5833%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="91.4815%" y="453" width="0.0741%" height="15" fill="rgb(234,147,33)" fg:x="1235" fg:w="1"/><text x="91.7315%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="91.4815%" y="437" width="0.0741%" height="15" fill="rgb(240,86,30)" fg:x="1235" fg:w="1"/><text x="91.7315%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.22%)</title><rect x="91.5556%" y="453" width="0.2222%" height="15" fill="rgb(237,34,51)" fg:x="1236" fg:w="3"/><text x="91.8056%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.22%)</title><rect x="91.5556%" y="437" width="0.2222%" height="15" fill="rgb(232,131,41)" fg:x="1236" fg:w="3"/><text x="91.8056%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="91.6296%" y="421" width="0.1481%" height="15" fill="rgb(227,129,53)" fg:x="1237" fg:w="2"/><text x="91.8796%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="91.6296%" y="405" width="0.1481%" height="15" fill="rgb(230,90,35)" fg:x="1237" fg:w="2"/><text x="91.8796%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.30%)</title><rect x="91.5556%" y="469" width="0.2963%" height="15" fill="rgb(248,88,27)" fg:x="1236" fg:w="4"/><text x="91.8056%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="91.7778%" y="453" width="0.0741%" height="15" fill="rgb(223,18,17)" fg:x="1239" fg:w="1"/><text x="92.0278%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="91.7778%" y="437" width="0.0741%" height="15" fill="rgb(241,11,10)" fg:x="1239" fg:w="1"/><text x="92.0278%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="91.7778%" y="421" width="0.0741%" height="15" fill="rgb(232,111,52)" fg:x="1239" fg:w="1"/><text x="92.0278%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="91.9259%" y="437" width="0.0741%" height="15" fill="rgb(228,67,8)" fg:x="1241" fg:w="1"/><text x="92.1759%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="92.0000%" y="421" width="0.0741%" height="15" fill="rgb(251,168,31)" fg:x="1242" fg:w="1"/><text x="92.2500%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="92.0741%" y="421" width="0.1481%" height="15" fill="rgb(249,164,11)" fg:x="1243" fg:w="2"/><text x="92.3241%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="92.0741%" y="405" width="0.1481%" height="15" fill="rgb(239,81,9)" fg:x="1243" fg:w="2"/><text x="92.3241%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="92.1481%" y="389" width="0.0741%" height="15" fill="rgb(222,145,38)" fg:x="1244" fg:w="1"/><text x="92.3981%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="92.1481%" y="373" width="0.0741%" height="15" fill="rgb(238,80,54)" fg:x="1244" fg:w="1"/><text x="92.3981%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="92.1481%" y="357" width="0.0741%" height="15" fill="rgb(237,116,16)" fg:x="1244" fg:w="1"/><text x="92.3981%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="92.1481%" y="341" width="0.0741%" height="15" fill="rgb(218,135,19)" fg:x="1244" fg:w="1"/><text x="92.3981%" y="351.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="92.1481%" y="325" width="0.0741%" height="15" fill="rgb(216,207,44)" fg:x="1244" fg:w="1"/><text x="92.3981%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.07%)</title><rect x="92.2222%" y="405" width="0.0741%" height="15" fill="rgb(226,152,40)" fg:x="1245" fg:w="1"/><text x="92.4722%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="92.2222%" y="389" width="0.0741%" height="15" fill="rgb(219,98,35)" fg:x="1245" fg:w="1"/><text x="92.4722%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.07%)</title><rect x="92.2963%" y="405" width="0.0741%" height="15" fill="rgb(222,136,46)" fg:x="1246" fg:w="1"/><text x="92.5463%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.22%)</title><rect x="92.2222%" y="421" width="0.2222%" height="15" fill="rgb(222,71,8)" fg:x="1245" fg:w="3"/><text x="92.4722%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="92.3704%" y="405" width="0.0741%" height="15" fill="rgb(209,89,53)" fg:x="1247" fg:w="1"/><text x="92.6204%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="92.3704%" y="389" width="0.0741%" height="15" fill="rgb(210,97,51)" fg:x="1247" fg:w="1"/><text x="92.6204%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.59%)</title><rect x="92.0000%" y="437" width="0.5926%" height="15" fill="rgb(248,65,21)" fg:x="1242" fg:w="8"/><text x="92.2500%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="92.4444%" y="421" width="0.1481%" height="15" fill="rgb(222,5,31)" fg:x="1248" fg:w="2"/><text x="92.6944%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.74%)</title><rect x="91.9259%" y="453" width="0.7407%" height="15" fill="rgb(241,16,30)" fg:x="1241" fg:w="10"/><text x="92.1759%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="92.5926%" y="437" width="0.0741%" height="15" fill="rgb(215,86,30)" fg:x="1250" fg:w="1"/><text x="92.8426%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="92.5926%" y="421" width="0.0741%" height="15" fill="rgb(235,26,44)" fg:x="1250" fg:w="1"/><text x="92.8426%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="92.5926%" y="405" width="0.0741%" height="15" fill="rgb(228,147,14)" fg:x="1250" fg:w="1"/><text x="92.8426%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.19%)</title><rect x="91.5556%" y="485" width="1.1852%" height="15" fill="rgb(253,38,50)" fg:x="1236" fg:w="16"/><text x="91.8056%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.89%)</title><rect x="91.8519%" y="469" width="0.8889%" height="15" fill="rgb(251,151,16)" fg:x="1240" fg:w="12"/><text x="92.1019%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.07%)</title><rect x="92.6667%" y="453" width="0.0741%" height="15" fill="rgb(224,64,19)" fg:x="1251" fg:w="1"/><text x="92.9167%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.07%)</title><rect x="92.6667%" y="437" width="0.0741%" height="15" fill="rgb(235,214,47)" fg:x="1251" fg:w="1"/><text x="92.9167%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="92.7407%" y="405" width="0.0741%" height="15" fill="rgb(218,15,19)" fg:x="1252" fg:w="1"/><text x="92.9907%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="92.8148%" y="389" width="0.1481%" height="15" fill="rgb(247,209,3)" fg:x="1253" fg:w="2"/><text x="93.0648%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="92.8889%" y="373" width="0.0741%" height="15" fill="rgb(217,29,2)" fg:x="1254" fg:w="1"/><text x="93.1389%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.44%)</title><rect x="92.7407%" y="453" width="0.4444%" height="15" fill="rgb(234,9,9)" fg:x="1252" fg:w="6"/><text x="92.9907%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.44%)</title><rect x="92.7407%" y="437" width="0.4444%" height="15" fill="rgb(207,43,14)" fg:x="1252" fg:w="6"/><text x="92.9907%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.44%)</title><rect x="92.7407%" y="421" width="0.4444%" height="15" fill="rgb(216,219,36)" fg:x="1252" fg:w="6"/><text x="92.9907%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.37%)</title><rect x="92.8148%" y="405" width="0.3704%" height="15" fill="rgb(238,12,26)" fg:x="1253" fg:w="5"/><text x="93.0648%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.22%)</title><rect x="92.9630%" y="389" width="0.2222%" height="15" fill="rgb(226,67,30)" fg:x="1255" fg:w="3"/><text x="93.2130%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.07%)</title><rect x="93.1111%" y="373" width="0.0741%" height="15" fill="rgb(229,154,7)" fg:x="1257" fg:w="1"/><text x="93.3611%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.07%)</title><rect x="93.1111%" y="357" width="0.0741%" height="15" fill="rgb(249,90,18)" fg:x="1257" fg:w="1"/><text x="93.3611%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="93.1111%" y="341" width="0.0741%" height="15" fill="rgb(223,53,15)" fg:x="1257" fg:w="1"/><text x="93.3611%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="93.1111%" y="325" width="0.0741%" height="15" fill="rgb(253,86,38)" fg:x="1257" fg:w="1"/><text x="93.3611%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="93.1111%" y="309" width="0.0741%" height="15" fill="rgb(222,198,9)" fg:x="1257" fg:w="1"/><text x="93.3611%" y="319.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.07%)</title><rect x="93.1852%" y="453" width="0.0741%" height="15" fill="rgb(240,146,25)" fg:x="1258" fg:w="1"/><text x="93.4352%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="93.1852%" y="437" width="0.0741%" height="15" fill="rgb(225,38,10)" fg:x="1258" fg:w="1"/><text x="93.4352%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.59%)</title><rect x="92.7407%" y="469" width="0.5926%" height="15" fill="rgb(246,93,4)" fg:x="1252" fg:w="8"/><text x="92.9907%" y="479.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.07%)</title><rect x="93.2593%" y="453" width="0.0741%" height="15" fill="rgb(222,55,18)" fg:x="1259" fg:w="1"/><text x="93.5093%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="93.2593%" y="437" width="0.0741%" height="15" fill="rgb(233,137,48)" fg:x="1259" fg:w="1"/><text x="93.5093%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="93.2593%" y="421" width="0.0741%" height="15" fill="rgb(214,8,54)" fg:x="1259" fg:w="1"/><text x="93.5093%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="93.2593%" y="405" width="0.0741%" height="15" fill="rgb(206,75,4)" fg:x="1259" fg:w="1"/><text x="93.5093%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="93.2593%" y="389" width="0.0741%" height="15" fill="rgb(238,171,14)" fg:x="1259" fg:w="1"/><text x="93.5093%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="93.2593%" y="373" width="0.0741%" height="15" fill="rgb(233,70,41)" fg:x="1259" fg:w="1"/><text x="93.5093%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="93.4074%" y="437" width="0.0741%" height="15" fill="rgb(214,68,36)" fg:x="1261" fg:w="1"/><text x="93.6574%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="93.4815%" y="437" width="0.0741%" height="15" fill="rgb(223,29,5)" fg:x="1262" fg:w="1"/><text x="93.7315%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.07%)</title><rect x="93.4815%" y="421" width="0.0741%" height="15" fill="rgb(251,22,40)" fg:x="1262" fg:w="1"/><text x="93.7315%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.07%)</title><rect x="93.5556%" y="437" width="0.0741%" height="15" fill="rgb(210,67,41)" fg:x="1263" fg:w="1"/><text x="93.8056%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.07%)</title><rect x="93.5556%" y="421" width="0.0741%" height="15" fill="rgb(225,177,31)" fg:x="1263" fg:w="1"/><text x="93.8056%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="93.6296%" y="389" width="0.2963%" height="15" fill="rgb(221,229,11)" fg:x="1264" fg:w="4"/><text x="93.8796%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="93.8519%" y="373" width="0.0741%" height="15" fill="rgb(247,172,52)" fg:x="1267" fg:w="1"/><text x="94.1019%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.07%)</title><rect x="93.9259%" y="389" width="0.0741%" height="15" fill="rgb(212,73,19)" fg:x="1268" fg:w="1"/><text x="94.1759%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="93.9259%" y="373" width="0.0741%" height="15" fill="rgb(244,7,46)" fg:x="1268" fg:w="1"/><text x="94.1759%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.07%)</title><rect x="93.9259%" y="357" width="0.0741%" height="15" fill="rgb(230,113,20)" fg:x="1268" fg:w="1"/><text x="94.1759%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.07%)</title><rect x="93.9259%" y="341" width="0.0741%" height="15" fill="rgb(209,97,30)" fg:x="1268" fg:w="1"/><text x="94.1759%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="93.9259%" y="325" width="0.0741%" height="15" fill="rgb(243,89,12)" fg:x="1268" fg:w="1"/><text x="94.1759%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.67%)</title><rect x="93.6296%" y="421" width="0.6667%" height="15" fill="rgb(228,32,19)" fg:x="1264" fg:w="9"/><text x="93.8796%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.67%)</title><rect x="93.6296%" y="405" width="0.6667%" height="15" fill="rgb(248,25,17)" fg:x="1264" fg:w="9"/><text x="93.8796%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.30%)</title><rect x="94.0000%" y="389" width="0.2963%" height="15" fill="rgb(232,161,29)" fg:x="1269" fg:w="4"/><text x="94.2500%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.30%)</title><rect x="94.0000%" y="373" width="0.2963%" height="15" fill="rgb(251,192,11)" fg:x="1269" fg:w="4"/><text x="94.2500%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.30%)</title><rect x="94.0000%" y="357" width="0.2963%" height="15" fill="rgb(240,47,32)" fg:x="1269" fg:w="4"/><text x="94.2500%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.22%)</title><rect x="94.0741%" y="341" width="0.2222%" height="15" fill="rgb(250,16,45)" fg:x="1270" fg:w="3"/><text x="94.3241%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="94.1481%" y="325" width="0.1481%" height="15" fill="rgb(227,217,42)" fg:x="1271" fg:w="2"/><text x="94.3981%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="94.1481%" y="309" width="0.1481%" height="15" fill="rgb(206,82,54)" fg:x="1271" fg:w="2"/><text x="94.3981%" y="319.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.04%)</title><rect x="93.3333%" y="469" width="1.0370%" height="15" fill="rgb(243,145,25)" fg:x="1260" fg:w="14"/><text x="93.5833%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 0.96%)</title><rect x="93.4074%" y="453" width="0.9630%" height="15" fill="rgb(207,166,24)" fg:x="1261" fg:w="13"/><text x="93.6574%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.74%)</title><rect x="93.6296%" y="437" width="0.7407%" height="15" fill="rgb(215,191,44)" fg:x="1264" fg:w="10"/><text x="93.8796%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="94.2963%" y="421" width="0.0741%" height="15" fill="rgb(234,218,51)" fg:x="1273" fg:w="1"/><text x="94.5463%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="94.5185%" y="277" width="0.0741%" height="15" fill="rgb(245,133,21)" fg:x="1276" fg:w="1"/><text x="94.7685%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="94.5185%" y="325" width="0.2222%" height="15" fill="rgb(230,136,45)" fg:x="1276" fg:w="3"/><text x="94.7685%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="94.5185%" y="309" width="0.2222%" height="15" fill="rgb(247,63,43)" fg:x="1276" fg:w="3"/><text x="94.7685%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="94.5185%" y="293" width="0.2222%" height="15" fill="rgb(254,223,31)" fg:x="1276" fg:w="3"/><text x="94.7685%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="94.5926%" y="277" width="0.1481%" height="15" fill="rgb(236,185,0)" fg:x="1277" fg:w="2"/><text x="94.8426%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="94.5926%" y="261" width="0.1481%" height="15" fill="rgb(231,139,46)" fg:x="1277" fg:w="2"/><text x="94.8426%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="94.5926%" y="245" width="0.1481%" height="15" fill="rgb(236,147,31)" fg:x="1277" fg:w="2"/><text x="94.8426%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="94.6667%" y="229" width="0.0741%" height="15" fill="rgb(225,222,22)" fg:x="1278" fg:w="1"/><text x="94.9167%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.37%)</title><rect x="94.4444%" y="373" width="0.3704%" height="15" fill="rgb(225,193,14)" fg:x="1275" fg:w="5"/><text x="94.6944%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.30%)</title><rect x="94.5185%" y="357" width="0.2963%" height="15" fill="rgb(253,193,46)" fg:x="1276" fg:w="4"/><text x="94.7685%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.30%)</title><rect x="94.5185%" y="341" width="0.2963%" height="15" fill="rgb(218,187,39)" fg:x="1276" fg:w="4"/><text x="94.7685%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="94.7407%" y="325" width="0.0741%" height="15" fill="rgb(227,162,48)" fg:x="1279" fg:w="1"/><text x="94.9907%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="94.7407%" y="309" width="0.0741%" height="15" fill="rgb(222,25,5)" fg:x="1279" fg:w="1"/><text x="94.9907%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="94.7407%" y="293" width="0.0741%" height="15" fill="rgb(211,205,16)" fg:x="1279" fg:w="1"/><text x="94.9907%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.59%)</title><rect x="94.3704%" y="405" width="0.5926%" height="15" fill="rgb(244,191,2)" fg:x="1274" fg:w="8"/><text x="94.6204%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.52%)</title><rect x="94.4444%" y="389" width="0.5185%" height="15" fill="rgb(248,159,12)" fg:x="1275" fg:w="7"/><text x="94.6944%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="94.8148%" y="373" width="0.1481%" height="15" fill="rgb(235,204,17)" fg:x="1280" fg:w="2"/><text x="95.0648%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="94.8889%" y="357" width="0.0741%" height="15" fill="rgb(240,21,27)" fg:x="1281" fg:w="1"/><text x="95.1389%" y="367.50"></text></g><g><title>engine::session::state::State::close (52 samples, 3.85%)</title><rect x="91.1852%" y="565" width="3.8519%" height="15" fill="rgb(224,170,31)" fg:x="1231" fg:w="52"/><text x="91.4352%" y="575.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (52 samples, 3.85%)</title><rect x="91.1852%" y="549" width="3.8519%" height="15" fill="rgb(223,145,32)" fg:x="1231" fg:w="52"/><text x="91.4352%" y="559.50">engi..</text></g><g><title>core::iter::adapters::try_process (51 samples, 3.78%)</title><rect x="91.2593%" y="533" width="3.7778%" height="15" fill="rgb(243,100,5)" fg:x="1232" fg:w="51"/><text x="91.5093%" y="543.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 3.78%)</title><rect x="91.2593%" y="517" width="3.7778%" height="15" fill="rgb(242,131,51)" fg:x="1232" fg:w="51"/><text x="91.5093%" y="527.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (50 samples, 3.70%)</title><rect x="91.3333%" y="501" width="3.7037%" height="15" fill="rgb(223,156,46)" fg:x="1233" fg:w="50"/><text x="91.5833%" y="511.50">engi..</text></g><g><title>kernel::model::any_entity_changes (31 samples, 2.30%)</title><rect x="92.7407%" y="485" width="2.2963%" height="15" fill="rgb(215,10,40)" fg:x="1252" fg:w="31"/><text x="92.9907%" y="495.50">k..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.67%)</title><rect x="94.3704%" y="469" width="0.6667%" height="15" fill="rgb(233,155,0)" fg:x="1274" fg:w="9"/><text x="94.6204%" y="479.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.67%)</title><rect x="94.3704%" y="453" width="0.6667%" height="15" fill="rgb(247,78,6)" fg:x="1274" fg:w="9"/><text x="94.6204%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.67%)</title><rect x="94.3704%" y="437" width="0.6667%" height="15" fill="rgb(237,217,21)" fg:x="1274" fg:w="9"/><text x="94.6204%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.67%)</title><rect x="94.3704%" y="421" width="0.6667%" height="15" fill="rgb(212,1,21)" fg:x="1274" fg:w="9"/><text x="94.6204%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="94.9630%" y="405" width="0.0741%" height="15" fill="rgb(213,7,14)" fg:x="1282" fg:w="1"/><text x="95.2130%" y="415.50"></text></g><g><title>engine::session::Session::close (55 samples, 4.07%)</title><rect x="91.1111%" y="581" width="4.0741%" height="15" fill="rgb(225,84,14)" fg:x="1230" fg:w="55"/><text x="91.3611%" y="591.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.15%)</title><rect x="95.0370%" y="565" width="0.1481%" height="15" fill="rgb(239,216,39)" fg:x="1283" fg:w="2"/><text x="95.2870%" y="575.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.07%)</title><rect x="95.1852%" y="501" width="0.0741%" height="15" fill="rgb(253,29,23)" fg:x="1285" fg:w="1"/><text x="95.4352%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.07%)</title><rect x="95.1852%" y="485" width="0.0741%" height="15" fill="rgb(220,167,50)" fg:x="1285" fg:w="1"/><text x="95.4352%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.15%)</title><rect x="95.1852%" y="517" width="0.1481%" height="15" fill="rgb(232,141,1)" fg:x="1285" fg:w="2"/><text x="95.4352%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.07%)</title><rect x="95.2593%" y="501" width="0.0741%" height="15" fill="rgb(222,210,1)" fg:x="1286" fg:w="1"/><text x="95.5093%" y="511.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.22%)</title><rect x="95.1852%" y="549" width="0.2222%" height="15" fill="rgb(219,84,10)" fg:x="1285" fg:w="3"/><text x="95.4352%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.22%)</title><rect x="95.1852%" y="533" width="0.2222%" height="15" fill="rgb(245,188,6)" fg:x="1285" fg:w="3"/><text x="95.4352%" y="543.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.07%)</title><rect x="95.3333%" y="517" width="0.0741%" height="15" fill="rgb(252,139,39)" fg:x="1287" fg:w="1"/><text x="95.5833%" y="527.50"></text></g><g><title>&lt;plugins_rune::parser::EditActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.07%)</title><rect x="95.3333%" y="501" width="0.0741%" height="15" fill="rgb(218,42,26)" fg:x="1287" fg:w="1"/><text x="95.5833%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.07%)</title><rect x="95.3333%" y="485" width="0.0741%" height="15" fill="rgb(237,226,51)" fg:x="1287" fg:w="1"/><text x="95.5833%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="95.4074%" y="533" width="0.0741%" height="15" fill="rgb(246,15,17)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="95.4074%" y="517" width="0.0741%" height="15" fill="rgb(228,170,42)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="95.4074%" y="501" width="0.0741%" height="15" fill="rgb(248,118,53)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="95.4074%" y="485" width="0.0741%" height="15" fill="rgb(207,30,10)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="95.4074%" y="469" width="0.0741%" height="15" fill="rgb(217,104,38)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="95.4074%" y="453" width="0.0741%" height="15" fill="rgb(211,165,26)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="95.4074%" y="437" width="0.0741%" height="15" fill="rgb(247,38,9)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="95.4074%" y="421" width="0.0741%" height="15" fill="rgb(218,187,8)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="95.4074%" y="405" width="0.0741%" height="15" fill="rgb(247,94,28)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="95.4074%" y="389" width="0.0741%" height="15" fill="rgb(218,173,30)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="95.4074%" y="373" width="0.0741%" height="15" fill="rgb(245,45,36)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="95.4074%" y="357" width="0.0741%" height="15" fill="rgb(221,172,44)" fg:x="1288" fg:w="1"/><text x="95.6574%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.07%)</title><rect x="95.4815%" y="389" width="0.0741%" height="15" fill="rgb(222,45,12)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.07%)</title><rect x="95.4815%" y="373" width="0.0741%" height="15" fill="rgb(250,10,22)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (1 samples, 0.07%)</title><rect x="95.4815%" y="357" width="0.0741%" height="15" fill="rgb(239,27,0)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.07%)</title><rect x="95.4815%" y="341" width="0.0741%" height="15" fill="rgb(223,118,22)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (1 samples, 0.07%)</title><rect x="95.4815%" y="325" width="0.0741%" height="15" fill="rgb(251,81,25)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.07%)</title><rect x="95.4815%" y="309" width="0.0741%" height="15" fill="rgb(237,225,53)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="95.4815%" y="293" width="0.0741%" height="15" fill="rgb(237,186,51)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="95.4815%" y="277" width="0.0741%" height="15" fill="rgb(247,209,11)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="95.4815%" y="261" width="0.0741%" height="15" fill="rgb(223,109,27)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="95.4815%" y="245" width="0.0741%" height="15" fill="rgb(246,181,13)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="95.4815%" y="229" width="0.0741%" height="15" fill="rgb(234,57,44)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="95.4815%" y="213" width="0.0741%" height="15" fill="rgb(211,227,50)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="95.4815%" y="197" width="0.0741%" height="15" fill="rgb(254,57,34)" fg:x="1289" fg:w="1"/><text x="95.7315%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.15%)</title><rect x="95.4815%" y="533" width="0.1481%" height="15" fill="rgb(227,212,26)" fg:x="1289" fg:w="2"/><text x="95.7315%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.15%)</title><rect x="95.4815%" y="517" width="0.1481%" height="15" fill="rgb(244,169,44)" fg:x="1289" fg:w="2"/><text x="95.7315%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="95.4815%" y="501" width="0.1481%" height="15" fill="rgb(236,135,50)" fg:x="1289" fg:w="2"/><text x="95.7315%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="95.4815%" y="485" width="0.1481%" height="15" fill="rgb(241,89,30)" fg:x="1289" fg:w="2"/><text x="95.7315%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="95.4815%" y="469" width="0.1481%" height="15" fill="rgb(206,113,34)" fg:x="1289" fg:w="2"/><text x="95.7315%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.15%)</title><rect x="95.4815%" y="453" width="0.1481%" height="15" fill="rgb(218,104,52)" fg:x="1289" fg:w="2"/><text x="95.7315%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.15%)</title><rect x="95.4815%" y="437" width="0.1481%" height="15" fill="rgb(223,82,32)" fg:x="1289" fg:w="2"/><text x="95.7315%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.15%)</title><rect x="95.4815%" y="421" width="0.1481%" height="15" fill="rgb(249,219,30)" fg:x="1289" fg:w="2"/><text x="95.7315%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.15%)</title><rect x="95.4815%" y="405" width="0.1481%" height="15" fill="rgb(233,141,21)" fg:x="1289" fg:w="2"/><text x="95.7315%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.07%)</title><rect x="95.5556%" y="389" width="0.0741%" height="15" fill="rgb(252,87,44)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.07%)</title><rect x="95.5556%" y="373" width="0.0741%" height="15" fill="rgb(229,48,33)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.07%)</title><rect x="95.5556%" y="357" width="0.0741%" height="15" fill="rgb(229,23,22)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.07%)</title><rect x="95.5556%" y="341" width="0.0741%" height="15" fill="rgb(244,116,16)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Debug&gt;::fmt (1 samples, 0.07%)</title><rect x="95.5556%" y="325" width="0.0741%" height="15" fill="rgb(247,45,10)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.07%)</title><rect x="95.5556%" y="309" width="0.0741%" height="15" fill="rgb(228,60,29)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="95.5556%" y="293" width="0.0741%" height="15" fill="rgb(205,129,15)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.07%)</title><rect x="95.5556%" y="277" width="0.0741%" height="15" fill="rgb(206,229,4)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="95.5556%" y="261" width="0.0741%" height="15" fill="rgb(249,191,30)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.07%)</title><rect x="95.5556%" y="245" width="0.0741%" height="15" fill="rgb(250,84,54)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="95.5556%" y="229" width="0.0741%" height="15" fill="rgb(207,25,53)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="95.5556%" y="213" width="0.0741%" height="15" fill="rgb(235,40,8)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="95.5556%" y="197" width="0.0741%" height="15" fill="rgb(226,169,33)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="95.5556%" y="181" width="0.0741%" height="15" fill="rgb(238,110,8)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="95.5556%" y="165" width="0.0741%" height="15" fill="rgb(251,206,12)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="95.5556%" y="149" width="0.0741%" height="15" fill="rgb(248,171,18)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="95.5556%" y="133" width="0.0741%" height="15" fill="rgb(213,65,46)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="95.5556%" y="117" width="0.0741%" height="15" fill="rgb(211,154,15)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="95.5556%" y="101" width="0.0741%" height="15" fill="rgb(217,75,43)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="95.5556%" y="85" width="0.0741%" height="15" fill="rgb(230,32,33)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="95.5556%" y="69" width="0.0741%" height="15" fill="rgb(221,100,16)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="95.5556%" y="53" width="0.0741%" height="15" fill="rgb(212,129,47)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="63.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="95.5556%" y="37" width="0.0741%" height="15" fill="rgb(239,217,47)" fg:x="1290" fg:w="1"/><text x="95.8056%" y="47.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="95.7037%" y="517" width="0.0741%" height="15" fill="rgb(230,84,24)" fg:x="1292" fg:w="1"/><text x="95.9537%" y="527.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (1 samples, 0.07%)</title><rect x="95.7778%" y="517" width="0.0741%" height="15" fill="rgb(214,153,51)" fg:x="1293" fg:w="1"/><text x="96.0278%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (1 samples, 0.07%)</title><rect x="95.7778%" y="501" width="0.0741%" height="15" fill="rgb(231,6,35)" fg:x="1293" fg:w="1"/><text x="96.0278%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (1 samples, 0.07%)</title><rect x="95.7778%" y="485" width="0.0741%" height="15" fill="rgb(229,122,30)" fg:x="1293" fg:w="1"/><text x="96.0278%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (1 samples, 0.07%)</title><rect x="95.7778%" y="469" width="0.0741%" height="15" fill="rgb(234,71,10)" fg:x="1293" fg:w="1"/><text x="96.0278%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.07%)</title><rect x="95.8519%" y="405" width="0.0741%" height="15" fill="rgb(215,173,26)" fg:x="1294" fg:w="1"/><text x="96.1019%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="95.8519%" y="389" width="0.0741%" height="15" fill="rgb(248,118,52)" fg:x="1294" fg:w="1"/><text x="96.1019%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="95.8519%" y="373" width="0.0741%" height="15" fill="rgb(237,55,46)" fg:x="1294" fg:w="1"/><text x="96.1019%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="95.8519%" y="357" width="0.0741%" height="15" fill="rgb(243,214,43)" fg:x="1294" fg:w="1"/><text x="96.1019%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="95.8519%" y="341" width="0.0741%" height="15" fill="rgb(252,123,30)" fg:x="1294" fg:w="1"/><text x="96.1019%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="95.8519%" y="325" width="0.0741%" height="15" fill="rgb(215,73,39)" fg:x="1294" fg:w="1"/><text x="96.1019%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="95.9259%" y="341" width="0.1481%" height="15" fill="rgb(251,194,29)" fg:x="1295" fg:w="2"/><text x="96.1759%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="95.9259%" y="325" width="0.1481%" height="15" fill="rgb(224,58,52)" fg:x="1295" fg:w="2"/><text x="96.1759%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="95.9259%" y="309" width="0.1481%" height="15" fill="rgb(248,106,46)" fg:x="1295" fg:w="2"/><text x="96.1759%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="96.0000%" y="293" width="0.0741%" height="15" fill="rgb(223,80,29)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="96.0000%" y="277" width="0.0741%" height="15" fill="rgb(243,137,9)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="96.0000%" y="261" width="0.0741%" height="15" fill="rgb(235,121,28)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="96.0000%" y="245" width="0.0741%" height="15" fill="rgb(219,121,41)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="96.0000%" y="229" width="0.0741%" height="15" fill="rgb(251,60,6)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="96.0000%" y="213" width="0.0741%" height="15" fill="rgb(208,12,30)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="96.0000%" y="197" width="0.0741%" height="15" fill="rgb(207,176,36)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="96.0000%" y="181" width="0.0741%" height="15" fill="rgb(211,188,29)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="96.0000%" y="165" width="0.0741%" height="15" fill="rgb(220,184,37)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="96.0000%" y="149" width="0.0741%" height="15" fill="rgb(239,87,37)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="96.0000%" y="133" width="0.0741%" height="15" fill="rgb(232,113,44)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="96.0000%" y="117" width="0.0741%" height="15" fill="rgb(246,25,39)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="96.0000%" y="101" width="0.0741%" height="15" fill="rgb(247,30,13)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="96.0000%" y="85" width="0.0741%" height="15" fill="rgb(230,176,35)" fg:x="1296" fg:w="1"/><text x="96.2500%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="96.0741%" y="341" width="0.0741%" height="15" fill="rgb(222,23,18)" fg:x="1297" fg:w="1"/><text x="96.3241%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="96.0741%" y="325" width="0.0741%" height="15" fill="rgb(234,86,8)" fg:x="1297" fg:w="1"/><text x="96.3241%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="96.0741%" y="309" width="0.0741%" height="15" fill="rgb(206,218,47)" fg:x="1297" fg:w="1"/><text x="96.3241%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="96.0741%" y="293" width="0.0741%" height="15" fill="rgb(229,35,31)" fg:x="1297" fg:w="1"/><text x="96.3241%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="96.0741%" y="277" width="0.0741%" height="15" fill="rgb(242,81,7)" fg:x="1297" fg:w="1"/><text x="96.3241%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="96.0741%" y="261" width="0.0741%" height="15" fill="rgb(231,11,35)" fg:x="1297" fg:w="1"/><text x="96.3241%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="96.0741%" y="245" width="0.0741%" height="15" fill="rgb(219,218,17)" fg:x="1297" fg:w="1"/><text x="96.3241%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="96.0741%" y="229" width="0.0741%" height="15" fill="rgb(221,83,32)" fg:x="1297" fg:w="1"/><text x="96.3241%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="96.0741%" y="213" width="0.0741%" height="15" fill="rgb(233,49,54)" fg:x="1297" fg:w="1"/><text x="96.3241%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.15%)</title><rect x="96.1481%" y="261" width="0.1481%" height="15" fill="rgb(206,18,51)" fg:x="1298" fg:w="2"/><text x="96.3981%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="96.2222%" y="245" width="0.0741%" height="15" fill="rgb(249,193,15)" fg:x="1299" fg:w="1"/><text x="96.4722%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="96.2222%" y="229" width="0.0741%" height="15" fill="rgb(245,186,19)" fg:x="1299" fg:w="1"/><text x="96.4722%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="96.2963%" y="213" width="0.0741%" height="15" fill="rgb(230,4,24)" fg:x="1300" fg:w="1"/><text x="96.5463%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="96.2963%" y="245" width="0.2222%" height="15" fill="rgb(234,75,27)" fg:x="1300" fg:w="3"/><text x="96.5463%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="96.2963%" y="229" width="0.2222%" height="15" fill="rgb(244,187,35)" fg:x="1300" fg:w="3"/><text x="96.5463%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.15%)</title><rect x="96.3704%" y="213" width="0.1481%" height="15" fill="rgb(241,97,43)" fg:x="1301" fg:w="2"/><text x="96.6204%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="96.3704%" y="197" width="0.1481%" height="15" fill="rgb(236,94,2)" fg:x="1301" fg:w="2"/><text x="96.6204%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="96.3704%" y="181" width="0.1481%" height="15" fill="rgb(231,175,7)" fg:x="1301" fg:w="2"/><text x="96.6204%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="96.4444%" y="165" width="0.0741%" height="15" fill="rgb(236,89,47)" fg:x="1302" fg:w="1"/><text x="96.6944%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.07%)</title><rect x="96.4444%" y="149" width="0.0741%" height="15" fill="rgb(213,191,37)" fg:x="1302" fg:w="1"/><text x="96.6944%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.07%)</title><rect x="96.4444%" y="133" width="0.0741%" height="15" fill="rgb(252,0,34)" fg:x="1302" fg:w="1"/><text x="96.6944%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="96.4444%" y="117" width="0.0741%" height="15" fill="rgb(208,145,44)" fg:x="1302" fg:w="1"/><text x="96.6944%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="96.5185%" y="245" width="0.1481%" height="15" fill="rgb(227,95,50)" fg:x="1303" fg:w="2"/><text x="96.7685%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="96.5185%" y="229" width="0.1481%" height="15" fill="rgb(222,136,24)" fg:x="1303" fg:w="2"/><text x="96.7685%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="96.5185%" y="213" width="0.1481%" height="15" fill="rgb(218,105,10)" fg:x="1303" fg:w="2"/><text x="96.7685%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="96.5926%" y="197" width="0.0741%" height="15" fill="rgb(216,65,28)" fg:x="1304" fg:w="1"/><text x="96.8426%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="96.5926%" y="181" width="0.0741%" height="15" fill="rgb(229,6,28)" fg:x="1304" fg:w="1"/><text x="96.8426%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="96.5926%" y="165" width="0.0741%" height="15" fill="rgb(222,160,42)" fg:x="1304" fg:w="1"/><text x="96.8426%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="96.5926%" y="149" width="0.0741%" height="15" fill="rgb(235,83,49)" fg:x="1304" fg:w="1"/><text x="96.8426%" y="159.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.59%)</title><rect x="96.1481%" y="341" width="0.5926%" height="15" fill="rgb(236,86,36)" fg:x="1298" fg:w="8"/><text x="96.3981%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.59%)</title><rect x="96.1481%" y="325" width="0.5926%" height="15" fill="rgb(236,19,41)" fg:x="1298" fg:w="8"/><text x="96.3981%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.59%)</title><rect x="96.1481%" y="309" width="0.5926%" height="15" fill="rgb(217,71,31)" fg:x="1298" fg:w="8"/><text x="96.3981%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.59%)</title><rect x="96.1481%" y="293" width="0.5926%" height="15" fill="rgb(236,209,25)" fg:x="1298" fg:w="8"/><text x="96.3981%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.59%)</title><rect x="96.1481%" y="277" width="0.5926%" height="15" fill="rgb(247,104,21)" fg:x="1298" fg:w="8"/><text x="96.3981%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.44%)</title><rect x="96.2963%" y="261" width="0.4444%" height="15" fill="rgb(243,80,38)" fg:x="1300" fg:w="6"/><text x="96.5463%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="96.6667%" y="245" width="0.0741%" height="15" fill="rgb(232,109,38)" fg:x="1305" fg:w="1"/><text x="96.9167%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="96.6667%" y="229" width="0.0741%" height="15" fill="rgb(212,177,53)" fg:x="1305" fg:w="1"/><text x="96.9167%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.07%)</title><rect x="96.6667%" y="213" width="0.0741%" height="15" fill="rgb(227,30,34)" fg:x="1305" fg:w="1"/><text x="96.9167%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.07%)</title><rect x="96.6667%" y="197" width="0.0741%" height="15" fill="rgb(205,175,25)" fg:x="1305" fg:w="1"/><text x="96.9167%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.07%)</title><rect x="96.6667%" y="181" width="0.0741%" height="15" fill="rgb(249,39,54)" fg:x="1305" fg:w="1"/><text x="96.9167%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="96.7407%" y="197" width="0.0741%" height="15" fill="rgb(215,54,37)" fg:x="1306" fg:w="1"/><text x="96.9907%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="96.7407%" y="181" width="0.0741%" height="15" fill="rgb(205,60,46)" fg:x="1306" fg:w="1"/><text x="96.9907%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="96.7407%" y="165" width="0.0741%" height="15" fill="rgb(238,89,29)" fg:x="1306" fg:w="1"/><text x="96.9907%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="96.7407%" y="149" width="0.0741%" height="15" fill="rgb(212,48,10)" fg:x="1306" fg:w="1"/><text x="96.9907%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="96.8148%" y="149" width="0.0741%" height="15" fill="rgb(237,186,28)" fg:x="1307" fg:w="1"/><text x="97.0648%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="96.8148%" y="133" width="0.0741%" height="15" fill="rgb(237,204,4)" fg:x="1307" fg:w="1"/><text x="97.0648%" y="143.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (15 samples, 1.11%)</title><rect x="95.8519%" y="437" width="1.1111%" height="15" fill="rgb(237,15,47)" fg:x="1294" fg:w="15"/><text x="96.1019%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (15 samples, 1.11%)</title><rect x="95.8519%" y="421" width="1.1111%" height="15" fill="rgb(244,110,25)" fg:x="1294" fg:w="15"/><text x="96.1019%" y="431.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (14 samples, 1.04%)</title><rect x="95.9259%" y="405" width="1.0370%" height="15" fill="rgb(241,12,16)" fg:x="1295" fg:w="14"/><text x="96.1759%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (14 samples, 1.04%)</title><rect x="95.9259%" y="389" width="1.0370%" height="15" fill="rgb(235,25,9)" fg:x="1295" fg:w="14"/><text x="96.1759%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (14 samples, 1.04%)</title><rect x="95.9259%" y="373" width="1.0370%" height="15" fill="rgb(245,159,19)" fg:x="1295" fg:w="14"/><text x="96.1759%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.04%)</title><rect x="95.9259%" y="357" width="1.0370%" height="15" fill="rgb(236,63,32)" fg:x="1295" fg:w="14"/><text x="96.1759%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.22%)</title><rect x="96.7407%" y="341" width="0.2222%" height="15" fill="rgb(235,32,52)" fg:x="1306" fg:w="3"/><text x="96.9907%" y="351.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.22%)</title><rect x="96.7407%" y="325" width="0.2222%" height="15" fill="rgb(209,176,21)" fg:x="1306" fg:w="3"/><text x="96.9907%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="96.7407%" y="309" width="0.2222%" height="15" fill="rgb(205,90,42)" fg:x="1306" fg:w="3"/><text x="96.9907%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="96.7407%" y="293" width="0.2222%" height="15" fill="rgb(213,132,16)" fg:x="1306" fg:w="3"/><text x="96.9907%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="96.7407%" y="277" width="0.2222%" height="15" fill="rgb(232,11,22)" fg:x="1306" fg:w="3"/><text x="96.9907%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="96.7407%" y="261" width="0.2222%" height="15" fill="rgb(248,167,41)" fg:x="1306" fg:w="3"/><text x="96.9907%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="96.7407%" y="245" width="0.2222%" height="15" fill="rgb(209,127,6)" fg:x="1306" fg:w="3"/><text x="96.9907%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="96.7407%" y="229" width="0.2222%" height="15" fill="rgb(246,210,34)" fg:x="1306" fg:w="3"/><text x="96.9907%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="96.7407%" y="213" width="0.2222%" height="15" fill="rgb(238,165,13)" fg:x="1306" fg:w="3"/><text x="96.9907%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="96.8148%" y="197" width="0.1481%" height="15" fill="rgb(233,98,15)" fg:x="1307" fg:w="2"/><text x="97.0648%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="96.8148%" y="181" width="0.1481%" height="15" fill="rgb(215,215,51)" fg:x="1307" fg:w="2"/><text x="97.0648%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="96.8148%" y="165" width="0.1481%" height="15" fill="rgb(217,161,25)" fg:x="1307" fg:w="2"/><text x="97.0648%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="96.8889%" y="149" width="0.0741%" height="15" fill="rgb(217,167,48)" fg:x="1308" fg:w="1"/><text x="97.1389%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="96.9630%" y="389" width="0.0741%" height="15" fill="rgb(205,163,34)" fg:x="1309" fg:w="1"/><text x="97.2130%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.07%)</title><rect x="97.0370%" y="389" width="0.0741%" height="15" fill="rgb(241,197,31)" fg:x="1310" fg:w="1"/><text x="97.2870%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="97.0370%" y="373" width="0.0741%" height="15" fill="rgb(225,123,11)" fg:x="1310" fg:w="1"/><text x="97.2870%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="97.0370%" y="357" width="0.0741%" height="15" fill="rgb(217,4,20)" fg:x="1310" fg:w="1"/><text x="97.2870%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="97.0370%" y="341" width="0.0741%" height="15" fill="rgb(215,55,9)" fg:x="1310" fg:w="1"/><text x="97.2870%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="97.0370%" y="325" width="0.0741%" height="15" fill="rgb(218,165,5)" fg:x="1310" fg:w="1"/><text x="97.2870%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="97.0370%" y="309" width="0.0741%" height="15" fill="rgb(222,175,15)" fg:x="1310" fg:w="1"/><text x="97.2870%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="97.0370%" y="293" width="0.0741%" height="15" fill="rgb(223,85,34)" fg:x="1310" fg:w="1"/><text x="97.2870%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="97.0370%" y="277" width="0.0741%" height="15" fill="rgb(234,228,29)" fg:x="1310" fg:w="1"/><text x="97.2870%" y="287.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="97.1111%" y="373" width="0.0741%" height="15" fill="rgb(239,7,28)" fg:x="1311" fg:w="1"/><text x="97.3611%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="97.1111%" y="357" width="0.0741%" height="15" fill="rgb(252,222,53)" fg:x="1311" fg:w="1"/><text x="97.3611%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.07%)</title><rect x="97.1852%" y="357" width="0.0741%" height="15" fill="rgb(232,146,44)" fg:x="1312" fg:w="1"/><text x="97.4352%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="97.2593%" y="245" width="0.0741%" height="15" fill="rgb(243,223,53)" fg:x="1313" fg:w="1"/><text x="97.5093%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="97.2593%" y="229" width="0.0741%" height="15" fill="rgb(219,128,25)" fg:x="1313" fg:w="1"/><text x="97.5093%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="97.2593%" y="293" width="0.1481%" height="15" fill="rgb(223,56,32)" fg:x="1313" fg:w="2"/><text x="97.5093%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="97.2593%" y="277" width="0.1481%" height="15" fill="rgb(237,41,3)" fg:x="1313" fg:w="2"/><text x="97.5093%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="97.2593%" y="261" width="0.1481%" height="15" fill="rgb(235,138,9)" fg:x="1313" fg:w="2"/><text x="97.5093%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="97.3333%" y="245" width="0.0741%" height="15" fill="rgb(214,131,10)" fg:x="1314" fg:w="1"/><text x="97.5833%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="97.3333%" y="229" width="0.0741%" height="15" fill="rgb(229,89,7)" fg:x="1314" fg:w="1"/><text x="97.5833%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="97.3333%" y="213" width="0.0741%" height="15" fill="rgb(240,24,42)" fg:x="1314" fg:w="1"/><text x="97.5833%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="97.4074%" y="213" width="0.1481%" height="15" fill="rgb(243,188,54)" fg:x="1315" fg:w="2"/><text x="97.6574%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="97.4815%" y="197" width="0.0741%" height="15" fill="rgb(246,92,22)" fg:x="1316" fg:w="1"/><text x="97.7315%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="97.4815%" y="181" width="0.0741%" height="15" fill="rgb(211,176,51)" fg:x="1316" fg:w="1"/><text x="97.7315%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="97.6296%" y="165" width="0.0741%" height="15" fill="rgb(246,207,34)" fg:x="1318" fg:w="1"/><text x="97.8796%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="97.6296%" y="149" width="0.0741%" height="15" fill="rgb(239,95,2)" fg:x="1318" fg:w="1"/><text x="97.8796%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="97.6296%" y="133" width="0.0741%" height="15" fill="rgb(211,124,25)" fg:x="1318" fg:w="1"/><text x="97.8796%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="97.6296%" y="117" width="0.0741%" height="15" fill="rgb(231,221,19)" fg:x="1318" fg:w="1"/><text x="97.8796%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.07%)</title><rect x="97.6296%" y="101" width="0.0741%" height="15" fill="rgb(239,183,19)" fg:x="1318" fg:w="1"/><text x="97.8796%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="97.6296%" y="85" width="0.0741%" height="15" fill="rgb(221,130,29)" fg:x="1318" fg:w="1"/><text x="97.8796%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="97.5556%" y="197" width="0.2222%" height="15" fill="rgb(206,130,36)" fg:x="1317" fg:w="3"/><text x="97.8056%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="97.6296%" y="181" width="0.1481%" height="15" fill="rgb(215,70,19)" fg:x="1318" fg:w="2"/><text x="97.8796%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.07%)</title><rect x="97.7037%" y="165" width="0.0741%" height="15" fill="rgb(244,16,43)" fg:x="1319" fg:w="1"/><text x="97.9537%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="97.7037%" y="149" width="0.0741%" height="15" fill="rgb(222,115,32)" fg:x="1319" fg:w="1"/><text x="97.9537%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="97.7037%" y="133" width="0.0741%" height="15" fill="rgb(247,48,25)" fg:x="1319" fg:w="1"/><text x="97.9537%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="97.7037%" y="117" width="0.0741%" height="15" fill="rgb(226,180,51)" fg:x="1319" fg:w="1"/><text x="97.9537%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.07%)</title><rect x="97.7037%" y="101" width="0.0741%" height="15" fill="rgb(217,142,42)" fg:x="1319" fg:w="1"/><text x="97.9537%" y="111.50"></text></g><g><title>plugins_core::tools::contained_by (10 samples, 0.74%)</title><rect x="97.1852%" y="373" width="0.7407%" height="15" fill="rgb(220,178,3)" fg:x="1312" fg:w="10"/><text x="97.4352%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (9 samples, 0.67%)</title><rect x="97.2593%" y="357" width="0.6667%" height="15" fill="rgb(217,221,4)" fg:x="1313" fg:w="9"/><text x="97.5093%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (9 samples, 0.67%)</title><rect x="97.2593%" y="341" width="0.6667%" height="15" fill="rgb(237,63,43)" fg:x="1313" fg:w="9"/><text x="97.5093%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (9 samples, 0.67%)</title><rect x="97.2593%" y="325" width="0.6667%" height="15" fill="rgb(220,57,8)" fg:x="1313" fg:w="9"/><text x="97.5093%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.67%)</title><rect x="97.2593%" y="309" width="0.6667%" height="15" fill="rgb(254,186,27)" fg:x="1313" fg:w="9"/><text x="97.5093%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.52%)</title><rect x="97.4074%" y="293" width="0.5185%" height="15" fill="rgb(251,57,28)" fg:x="1315" fg:w="7"/><text x="97.6574%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.52%)</title><rect x="97.4074%" y="277" width="0.5185%" height="15" fill="rgb(215,228,0)" fg:x="1315" fg:w="7"/><text x="97.6574%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.52%)</title><rect x="97.4074%" y="261" width="0.5185%" height="15" fill="rgb(237,218,39)" fg:x="1315" fg:w="7"/><text x="97.6574%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.52%)</title><rect x="97.4074%" y="245" width="0.5185%" height="15" fill="rgb(207,2,54)" fg:x="1315" fg:w="7"/><text x="97.6574%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.52%)</title><rect x="97.4074%" y="229" width="0.5185%" height="15" fill="rgb(232,76,50)" fg:x="1315" fg:w="7"/><text x="97.6574%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.37%)</title><rect x="97.5556%" y="213" width="0.3704%" height="15" fill="rgb(211,85,31)" fg:x="1317" fg:w="5"/><text x="97.8056%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="97.7778%" y="197" width="0.1481%" height="15" fill="rgb(223,210,27)" fg:x="1320" fg:w="2"/><text x="98.0278%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="97.7778%" y="181" width="0.1481%" height="15" fill="rgb(254,36,8)" fg:x="1320" fg:w="2"/><text x="98.0278%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="97.8519%" y="165" width="0.0741%" height="15" fill="rgb(213,4,25)" fg:x="1321" fg:w="1"/><text x="98.1019%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="97.8519%" y="149" width="0.0741%" height="15" fill="rgb(224,2,39)" fg:x="1321" fg:w="1"/><text x="98.1019%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="97.8519%" y="133" width="0.0741%" height="15" fill="rgb(208,8,39)" fg:x="1321" fg:w="1"/><text x="98.1019%" y="143.50"></text></g><g><title>engine::session::Session::captured (35 samples, 2.59%)</title><rect x="95.4074%" y="549" width="2.5926%" height="15" fill="rgb(216,226,3)" fg:x="1288" fg:w="35"/><text x="95.6574%" y="559.50">en..</text></g><g><title>engine::session::logs::capture (32 samples, 2.37%)</title><rect x="95.6296%" y="533" width="2.3704%" height="15" fill="rgb(249,139,31)" fg:x="1291" fg:w="32"/><text x="95.8796%" y="543.50">en..</text></g><g><title>tracing_core::dispatcher::with_default (29 samples, 2.15%)</title><rect x="95.8519%" y="517" width="2.1481%" height="15" fill="rgb(242,170,35)" fg:x="1294" fg:w="29"/><text x="96.1019%" y="527.50">t..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (29 samples, 2.15%)</title><rect x="95.8519%" y="501" width="2.1481%" height="15" fill="rgb(238,14,9)" fg:x="1294" fg:w="29"/><text x="96.1019%" y="511.50">&lt;..</text></g><g><title>kernel::plugins::mw::apply_middleware (29 samples, 2.15%)</title><rect x="95.8519%" y="485" width="2.1481%" height="15" fill="rgb(251,81,46)" fg:x="1294" fg:w="29"/><text x="96.1019%" y="495.50">k..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (29 samples, 2.15%)</title><rect x="95.8519%" y="469" width="2.1481%" height="15" fill="rgb(230,23,4)" fg:x="1294" fg:w="29"/><text x="96.1019%" y="479.50">k..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (29 samples, 2.15%)</title><rect x="95.8519%" y="453" width="2.1481%" height="15" fill="rgb(211,85,25)" fg:x="1294" fg:w="29"/><text x="96.1019%" y="463.50">&lt;..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (14 samples, 1.04%)</title><rect x="96.9630%" y="437" width="1.0370%" height="15" fill="rgb(252,23,31)" fg:x="1309" fg:w="14"/><text x="97.2130%" y="447.50"></text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (14 samples, 1.04%)</title><rect x="96.9630%" y="421" width="1.0370%" height="15" fill="rgb(234,163,38)" fg:x="1309" fg:w="14"/><text x="97.2130%" y="431.50"></text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (14 samples, 1.04%)</title><rect x="96.9630%" y="405" width="1.0370%" height="15" fill="rgb(210,190,50)" fg:x="1309" fg:w="14"/><text x="97.2130%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (12 samples, 0.89%)</title><rect x="97.1111%" y="389" width="0.8889%" height="15" fill="rgb(228,158,3)" fg:x="1311" fg:w="12"/><text x="97.3611%" y="399.50"></text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.07%)</title><rect x="97.9259%" y="373" width="0.0741%" height="15" fill="rgb(216,130,0)" fg:x="1322" fg:w="1"/><text x="98.1759%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.07%)</title><rect x="97.9259%" y="357" width="0.0741%" height="15" fill="rgb(224,184,10)" fg:x="1322" fg:w="1"/><text x="98.1759%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="97.9259%" y="341" width="0.0741%" height="15" fill="rgb(214,202,18)" fg:x="1322" fg:w="1"/><text x="98.1759%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="97.9259%" y="325" width="0.0741%" height="15" fill="rgb(213,229,54)" fg:x="1322" fg:w="1"/><text x="98.1759%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="98.0000%" y="501" width="0.0741%" height="15" fill="rgb(246,120,0)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="98.0000%" y="485" width="0.0741%" height="15" fill="rgb(237,6,15)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="98.0000%" y="469" width="0.0741%" height="15" fill="rgb(252,156,15)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="98.0000%" y="453" width="0.0741%" height="15" fill="rgb(249,78,18)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="98.0000%" y="437" width="0.0741%" height="15" fill="rgb(230,223,44)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="98.0000%" y="421" width="0.0741%" height="15" fill="rgb(230,222,32)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="98.0000%" y="405" width="0.0741%" height="15" fill="rgb(247,54,6)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="98.0000%" y="389" width="0.0741%" height="15" fill="rgb(247,115,45)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="98.0000%" y="373" width="0.0741%" height="15" fill="rgb(213,203,37)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="98.0000%" y="357" width="0.0741%" height="15" fill="rgb(248,188,18)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="98.0000%" y="341" width="0.0741%" height="15" fill="rgb(206,80,8)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="98.0000%" y="325" width="0.0741%" height="15" fill="rgb(245,217,31)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="98.0000%" y="309" width="0.0741%" height="15" fill="rgb(220,193,15)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="98.0000%" y="293" width="0.0741%" height="15" fill="rgb(226,7,19)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="98.0000%" y="277" width="0.0741%" height="15" fill="rgb(222,145,31)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="98.0000%" y="261" width="0.0741%" height="15" fill="rgb(241,193,36)" fg:x="1323" fg:w="1"/><text x="98.2500%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="98.0741%" y="309" width="0.0741%" height="15" fill="rgb(225,123,33)" fg:x="1324" fg:w="1"/><text x="98.3241%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="98.0741%" y="357" width="0.1481%" height="15" fill="rgb(246,136,38)" fg:x="1324" fg:w="2"/><text x="98.3241%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="98.0741%" y="341" width="0.1481%" height="15" fill="rgb(243,56,24)" fg:x="1324" fg:w="2"/><text x="98.3241%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.15%)</title><rect x="98.0741%" y="325" width="0.1481%" height="15" fill="rgb(215,147,2)" fg:x="1324" fg:w="2"/><text x="98.3241%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="98.1481%" y="309" width="0.0741%" height="15" fill="rgb(209,155,27)" fg:x="1325" fg:w="1"/><text x="98.3981%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="98.1481%" y="293" width="0.0741%" height="15" fill="rgb(222,177,11)" fg:x="1325" fg:w="1"/><text x="98.3981%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.30%)</title><rect x="98.0741%" y="405" width="0.2963%" height="15" fill="rgb(212,227,15)" fg:x="1324" fg:w="4"/><text x="98.3241%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.30%)</title><rect x="98.0741%" y="389" width="0.2963%" height="15" fill="rgb(214,138,20)" fg:x="1324" fg:w="4"/><text x="98.3241%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.30%)</title><rect x="98.0741%" y="373" width="0.2963%" height="15" fill="rgb(221,170,31)" fg:x="1324" fg:w="4"/><text x="98.3241%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="98.2222%" y="357" width="0.1481%" height="15" fill="rgb(253,207,5)" fg:x="1326" fg:w="2"/><text x="98.4722%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="98.2222%" y="341" width="0.1481%" height="15" fill="rgb(212,64,37)" fg:x="1326" fg:w="2"/><text x="98.4722%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.07%)</title><rect x="98.2963%" y="325" width="0.0741%" height="15" fill="rgb(208,113,51)" fg:x="1327" fg:w="1"/><text x="98.5463%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="98.2963%" y="309" width="0.0741%" height="15" fill="rgb(237,15,5)" fg:x="1327" fg:w="1"/><text x="98.5463%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.07%)</title><rect x="98.2963%" y="293" width="0.0741%" height="15" fill="rgb(238,33,18)" fg:x="1327" fg:w="1"/><text x="98.5463%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="98.2963%" y="277" width="0.0741%" height="15" fill="rgb(253,206,50)" fg:x="1327" fg:w="1"/><text x="98.5463%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.37%)</title><rect x="98.0741%" y="453" width="0.3704%" height="15" fill="rgb(242,158,43)" fg:x="1324" fg:w="5"/><text x="98.3241%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.37%)</title><rect x="98.0741%" y="437" width="0.3704%" height="15" fill="rgb(213,125,27)" fg:x="1324" fg:w="5"/><text x="98.3241%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.37%)</title><rect x="98.0741%" y="421" width="0.3704%" height="15" fill="rgb(233,161,31)" fg:x="1324" fg:w="5"/><text x="98.3241%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="98.3704%" y="405" width="0.0741%" height="15" fill="rgb(218,135,6)" fg:x="1328" fg:w="1"/><text x="98.6204%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="98.3704%" y="389" width="0.0741%" height="15" fill="rgb(222,73,53)" fg:x="1328" fg:w="1"/><text x="98.6204%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="98.3704%" y="373" width="0.0741%" height="15" fill="rgb(229,66,53)" fg:x="1328" fg:w="1"/><text x="98.6204%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.44%)</title><rect x="98.0741%" y="501" width="0.4444%" height="15" fill="rgb(208,128,19)" fg:x="1324" fg:w="6"/><text x="98.3241%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.44%)</title><rect x="98.0741%" y="485" width="0.4444%" height="15" fill="rgb(235,70,27)" fg:x="1324" fg:w="6"/><text x="98.3241%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.44%)</title><rect x="98.0741%" y="469" width="0.4444%" height="15" fill="rgb(241,130,30)" fg:x="1324" fg:w="6"/><text x="98.3241%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="98.4444%" y="453" width="0.0741%" height="15" fill="rgb(222,57,48)" fg:x="1329" fg:w="1"/><text x="98.6944%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="98.4444%" y="437" width="0.0741%" height="15" fill="rgb(225,204,29)" fg:x="1329" fg:w="1"/><text x="98.6944%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.07%)</title><rect x="98.5926%" y="405" width="0.0741%" height="15" fill="rgb(240,196,35)" fg:x="1331" fg:w="1"/><text x="98.8426%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.07%)</title><rect x="98.5926%" y="389" width="0.0741%" height="15" fill="rgb(215,150,16)" fg:x="1331" fg:w="1"/><text x="98.8426%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="98.5926%" y="373" width="0.0741%" height="15" fill="rgb(209,170,13)" fg:x="1331" fg:w="1"/><text x="98.8426%" y="383.50"></text></g><g><title>engine::session::internal::Added::find_refs (10 samples, 0.74%)</title><rect x="98.0000%" y="533" width="0.7407%" height="15" fill="rgb(235,75,31)" fg:x="1323" fg:w="10"/><text x="98.2500%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.74%)</title><rect x="98.0000%" y="517" width="0.7407%" height="15" fill="rgb(252,1,47)" fg:x="1323" fg:w="10"/><text x="98.2500%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.22%)</title><rect x="98.5185%" y="501" width="0.2222%" height="15" fill="rgb(241,2,36)" fg:x="1330" fg:w="3"/><text x="98.7685%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="98.5185%" y="485" width="0.2222%" height="15" fill="rgb(236,191,4)" fg:x="1330" fg:w="3"/><text x="98.7685%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.22%)</title><rect x="98.5185%" y="469" width="0.2222%" height="15" fill="rgb(212,65,35)" fg:x="1330" fg:w="3"/><text x="98.7685%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.22%)</title><rect x="98.5185%" y="453" width="0.2222%" height="15" fill="rgb(209,49,33)" fg:x="1330" fg:w="3"/><text x="98.7685%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.22%)</title><rect x="98.5185%" y="437" width="0.2222%" height="15" fill="rgb(208,36,46)" fg:x="1330" fg:w="3"/><text x="98.7685%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="98.5926%" y="421" width="0.1481%" height="15" fill="rgb(210,125,2)" fg:x="1331" fg:w="2"/><text x="98.8426%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.07%)</title><rect x="98.6667%" y="405" width="0.0741%" height="15" fill="rgb(225,62,6)" fg:x="1332" fg:w="1"/><text x="98.9167%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.07%)</title><rect x="98.6667%" y="389" width="0.0741%" height="15" fill="rgb(210,54,27)" fg:x="1332" fg:w="1"/><text x="98.9167%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.07%)</title><rect x="98.7407%" y="517" width="0.0741%" height="15" fill="rgb(249,189,52)" fg:x="1333" fg:w="1"/><text x="98.9907%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="98.7407%" y="501" width="0.0741%" height="15" fill="rgb(225,134,40)" fg:x="1333" fg:w="1"/><text x="98.9907%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.15%)</title><rect x="98.8148%" y="517" width="0.1481%" height="15" fill="rgb(206,13,37)" fg:x="1334" fg:w="2"/><text x="99.0648%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="98.8148%" y="501" width="0.1481%" height="15" fill="rgb(232,114,28)" fg:x="1334" fg:w="2"/><text x="99.0648%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="98.8148%" y="485" width="0.1481%" height="15" fill="rgb(253,215,8)" fg:x="1334" fg:w="2"/><text x="99.0648%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="98.8148%" y="469" width="0.1481%" height="15" fill="rgb(254,64,19)" fg:x="1334" fg:w="2"/><text x="99.0648%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="98.8148%" y="453" width="0.1481%" height="15" fill="rgb(242,18,46)" fg:x="1334" fg:w="2"/><text x="99.0648%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.15%)</title><rect x="98.8148%" y="437" width="0.1481%" height="15" fill="rgb(239,192,30)" fg:x="1334" fg:w="2"/><text x="99.0648%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="98.9630%" y="421" width="0.0741%" height="15" fill="rgb(232,73,14)" fg:x="1336" fg:w="1"/><text x="99.2130%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (15 samples, 1.11%)</title><rect x="98.0000%" y="549" width="1.1111%" height="15" fill="rgb(225,51,9)" fg:x="1323" fg:w="15"/><text x="98.2500%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.37%)</title><rect x="98.7407%" y="533" width="0.3704%" height="15" fill="rgb(242,217,54)" fg:x="1333" fg:w="5"/><text x="98.9907%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.15%)</title><rect x="98.9630%" y="517" width="0.1481%" height="15" fill="rgb(216,93,3)" fg:x="1336" fg:w="2"/><text x="99.2130%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.15%)</title><rect x="98.9630%" y="501" width="0.1481%" height="15" fill="rgb(230,119,33)" fg:x="1336" fg:w="2"/><text x="99.2130%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="98.9630%" y="485" width="0.1481%" height="15" fill="rgb(238,170,27)" fg:x="1336" fg:w="2"/><text x="99.2130%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="98.9630%" y="469" width="0.1481%" height="15" fill="rgb(229,8,2)" fg:x="1336" fg:w="2"/><text x="99.2130%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="98.9630%" y="453" width="0.1481%" height="15" fill="rgb(205,214,42)" fg:x="1336" fg:w="2"/><text x="99.2130%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="98.9630%" y="437" width="0.1481%" height="15" fill="rgb(245,113,1)" fg:x="1336" fg:w="2"/><text x="99.2130%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="99.0370%" y="421" width="0.0741%" height="15" fill="rgb(252,50,2)" fg:x="1337" fg:w="1"/><text x="99.2870%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.07%)</title><rect x="99.1111%" y="501" width="0.0741%" height="15" fill="rgb(225,122,24)" fg:x="1338" fg:w="1"/><text x="99.3611%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="99.1852%" y="485" width="0.0741%" height="15" fill="rgb(234,129,31)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="99.1852%" y="469" width="0.0741%" height="15" fill="rgb(219,177,4)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="99.1852%" y="453" width="0.0741%" height="15" fill="rgb(225,142,27)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="99.1852%" y="437" width="0.0741%" height="15" fill="rgb(205,107,51)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="99.1852%" y="421" width="0.0741%" height="15" fill="rgb(236,223,15)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="99.1852%" y="405" width="0.0741%" height="15" fill="rgb(235,133,11)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="99.1852%" y="389" width="0.0741%" height="15" fill="rgb(247,172,13)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="99.1852%" y="373" width="0.0741%" height="15" fill="rgb(233,191,41)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="99.1852%" y="357" width="0.0741%" height="15" fill="rgb(250,65,16)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="99.1852%" y="341" width="0.0741%" height="15" fill="rgb(206,10,27)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="99.1852%" y="325" width="0.0741%" height="15" fill="rgb(212,96,22)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="99.1852%" y="309" width="0.0741%" height="15" fill="rgb(206,50,0)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="99.1852%" y="293" width="0.0741%" height="15" fill="rgb(249,105,52)" fg:x="1339" fg:w="1"/><text x="99.4352%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.15%)</title><rect x="99.1852%" y="501" width="0.1481%" height="15" fill="rgb(216,93,51)" fg:x="1339" fg:w="2"/><text x="99.4352%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.07%)</title><rect x="99.2593%" y="485" width="0.0741%" height="15" fill="rgb(217,172,13)" fg:x="1340" fg:w="1"/><text x="99.5093%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="99.2593%" y="469" width="0.0741%" height="15" fill="rgb(235,199,38)" fg:x="1340" fg:w="1"/><text x="99.5093%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.07%)</title><rect x="99.2593%" y="453" width="0.0741%" height="15" fill="rgb(221,97,33)" fg:x="1340" fg:w="1"/><text x="99.5093%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="99.2593%" y="437" width="0.0741%" height="15" fill="rgb(205,156,50)" fg:x="1340" fg:w="1"/><text x="99.5093%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="99.2593%" y="421" width="0.0741%" height="15" fill="rgb(215,142,19)" fg:x="1340" fg:w="1"/><text x="99.5093%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.07%)</title><rect x="99.3333%" y="453" width="0.0741%" height="15" fill="rgb(232,170,7)" fg:x="1341" fg:w="1"/><text x="99.5833%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="99.4074%" y="405" width="0.0741%" height="15" fill="rgb(223,50,17)" fg:x="1342" fg:w="1"/><text x="99.6574%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="99.4074%" y="389" width="0.0741%" height="15" fill="rgb(230,103,46)" fg:x="1342" fg:w="1"/><text x="99.6574%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.07%)</title><rect x="99.4074%" y="373" width="0.0741%" height="15" fill="rgb(254,30,34)" fg:x="1342" fg:w="1"/><text x="99.6574%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="99.4815%" y="405" width="0.0741%" height="15" fill="rgb(235,198,1)" fg:x="1343" fg:w="1"/><text x="99.7315%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="99.4815%" y="389" width="0.0741%" height="15" fill="rgb(217,105,47)" fg:x="1343" fg:w="1"/><text x="99.7315%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="99.4815%" y="373" width="0.0741%" height="15" fill="rgb(231,18,12)" fg:x="1343" fg:w="1"/><text x="99.7315%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="99.4815%" y="357" width="0.0741%" height="15" fill="rgb(218,196,1)" fg:x="1343" fg:w="1"/><text x="99.7315%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.07%)</title><rect x="99.4815%" y="341" width="0.0741%" height="15" fill="rgb(210,32,3)" fg:x="1343" fg:w="1"/><text x="99.7315%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.30%)</title><rect x="99.3333%" y="501" width="0.2963%" height="15" fill="rgb(227,178,30)" fg:x="1341" fg:w="4"/><text x="99.5833%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.30%)</title><rect x="99.3333%" y="485" width="0.2963%" height="15" fill="rgb(231,140,27)" fg:x="1341" fg:w="4"/><text x="99.5833%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.30%)</title><rect x="99.3333%" y="469" width="0.2963%" height="15" fill="rgb(206,66,35)" fg:x="1341" fg:w="4"/><text x="99.5833%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.22%)</title><rect x="99.4074%" y="453" width="0.2222%" height="15" fill="rgb(212,34,2)" fg:x="1342" fg:w="3"/><text x="99.6574%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.22%)</title><rect x="99.4074%" y="437" width="0.2222%" height="15" fill="rgb(207,201,33)" fg:x="1342" fg:w="3"/><text x="99.6574%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.22%)</title><rect x="99.4074%" y="421" width="0.2222%" height="15" fill="rgb(221,135,32)" fg:x="1342" fg:w="3"/><text x="99.6574%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.07%)</title><rect x="99.5556%" y="405" width="0.0741%" height="15" fill="rgb(206,77,31)" fg:x="1344" fg:w="1"/><text x="99.8056%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.07%)</title><rect x="99.5556%" y="389" width="0.0741%" height="15" fill="rgb(252,198,50)" fg:x="1344" fg:w="1"/><text x="99.8056%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="99.6296%" y="405" width="0.0741%" height="15" fill="rgb(206,79,27)" fg:x="1345" fg:w="1"/><text x="99.8796%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="99.6296%" y="437" width="0.1481%" height="15" fill="rgb(228,108,9)" fg:x="1345" fg:w="2"/><text x="99.8796%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="99.6296%" y="421" width="0.1481%" height="15" fill="rgb(213,9,39)" fg:x="1345" fg:w="2"/><text x="99.8796%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="99.7037%" y="405" width="0.0741%" height="15" fill="rgb(252,51,13)" fg:x="1346" fg:w="1"/><text x="99.9537%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="99.7037%" y="389" width="0.0741%" height="15" fill="rgb(218,202,39)" fg:x="1346" fg:w="1"/><text x="99.9537%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.07%)</title><rect x="99.7037%" y="373" width="0.0741%" height="15" fill="rgb(214,122,21)" fg:x="1346" fg:w="1"/><text x="99.9537%" y="383.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (63 samples, 4.67%)</title><rect x="95.1852%" y="581" width="4.6667%" height="15" fill="rgb(217,205,48)" fg:x="1285" fg:w="63"/><text x="95.4352%" y="591.50">engin..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (63 samples, 4.67%)</title><rect x="95.1852%" y="565" width="4.6667%" height="15" fill="rgb(230,216,13)" fg:x="1285" fg:w="63"/><text x="95.4352%" y="575.50">engin..</text></g><g><title>kernel::model::EntityPtrResolver::world (10 samples, 0.74%)</title><rect x="99.1111%" y="549" width="0.7407%" height="15" fill="rgb(249,118,4)" fg:x="1338" fg:w="10"/><text x="99.3611%" y="559.50"></text></g><g><title>engine::session::Session::load_entity (10 samples, 0.74%)</title><rect x="99.1111%" y="533" width="0.7407%" height="15" fill="rgb(212,207,40)" fg:x="1338" fg:w="10"/><text x="99.3611%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.74%)</title><rect x="99.1111%" y="517" width="0.7407%" height="15" fill="rgb(217,156,26)" fg:x="1338" fg:w="10"/><text x="99.3611%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.22%)</title><rect x="99.6296%" y="501" width="0.2222%" height="15" fill="rgb(226,86,34)" fg:x="1345" fg:w="3"/><text x="99.8796%" y="511.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.22%)</title><rect x="99.6296%" y="485" width="0.2222%" height="15" fill="rgb(217,111,30)" fg:x="1345" fg:w="3"/><text x="99.8796%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.22%)</title><rect x="99.6296%" y="469" width="0.2222%" height="15" fill="rgb(228,64,18)" fg:x="1345" fg:w="3"/><text x="99.8796%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.22%)</title><rect x="99.6296%" y="453" width="0.2222%" height="15" fill="rgb(254,217,48)" fg:x="1345" fg:w="3"/><text x="99.8796%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.07%)</title><rect x="99.7778%" y="437" width="0.0741%" height="15" fill="rgb(226,156,48)" fg:x="1347" fg:w="1"/><text x="100.0278%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.07%)</title><rect x="99.7778%" y="421" width="0.0741%" height="15" fill="rgb(236,168,20)" fg:x="1347" fg:w="1"/><text x="100.0278%" y="431.50"></text></g><g><title>all (1,350 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(239,210,33)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="943.50"></text></g><g><title>simple-96d5fd4f (1,350 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(242,85,17)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="927.50">simple-96d5fd4f</text></g><g><title>_start (1,350 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(221,196,15)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="911.50">_start</text></g><g><title>__libc_start_main (1,350 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(249,76,21)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="895.50">__libc_start_main</text></g><g><title>main (1,350 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(243,67,29)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (1,350 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(240,159,2)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,350 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(244,64,3)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,350 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(220,86,40)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,350 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(222,194,51)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,350 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(207,154,19)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,350 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(206,178,36)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,350 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(218,8,24)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,350 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(226,83,41)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,350 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(224,23,22)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,350 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(218,198,45)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,350 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(249,147,41)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,350 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(244,224,13)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="687.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,350 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(225,97,27)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="671.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,350 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(254,64,0)" fg:x="0" fg:w="1350"/><text x="0.2500%" y="655.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (285 samples, 21.11%)</title><rect x="78.8889%" y="629" width="21.1111%" height="15" fill="rgb(208,130,43)" fg:x="1065" fg:w="285"/><text x="79.1389%" y="639.50">&lt;criterion::routine::Function&lt;M,F..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (285 samples, 21.11%)</title><rect x="78.8889%" y="613" width="21.1111%" height="15" fill="rgb(247,91,25)" fg:x="1065" fg:w="285"/><text x="79.1389%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::i..</text></g><g><title>tests::evaluate_text_in_new_domain (285 samples, 21.11%)</title><rect x="78.8889%" y="597" width="21.1111%" height="15" fill="rgb(215,218,42)" fg:x="1065" fg:w="285"/><text x="79.1389%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.15%)</title><rect x="99.8519%" y="581" width="0.1481%" height="15" fill="rgb(233,9,24)" fg:x="1348" fg:w="2"/><text x="100.1019%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.15%)</title><rect x="99.8519%" y="565" width="0.1481%" height="15" fill="rgb(252,105,38)" fg:x="1348" fg:w="2"/><text x="100.1019%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="99.9259%" y="549" width="0.0741%" height="15" fill="rgb(225,40,49)" fg:x="1349" fg:w="1"/><text x="100.1759%" y="559.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="99.9259%" y="533" width="0.0741%" height="15" fill="rgb(232,196,19)" fg:x="1349" fg:w="1"/><text x="100.1759%" y="543.50"></text></g></svg></svg>