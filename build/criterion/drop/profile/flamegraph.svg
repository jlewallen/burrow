<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="1266"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0000%" y="501" width="0.0790%" height="15" fill="rgb(210,24,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0790%" y="501" width="0.0790%" height="15" fill="rgb(234,53,53)" fg:x="1" fg:w="1"/><text x="0.3290%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="0.0790%" y="485" width="0.0790%" height="15" fill="rgb(208,108,28)" fg:x="1" fg:w="1"/><text x="0.3290%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2370%" y="485" width="0.0790%" height="15" fill="rgb(227,143,7)" fg:x="3" fg:w="1"/><text x="0.4870%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7109%" y="421" width="0.0790%" height="15" fill="rgb(238,189,38)" fg:x="9" fg:w="1"/><text x="0.9609%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7899%" y="421" width="0.0790%" height="15" fill="rgb(222,69,15)" fg:x="10" fg:w="1"/><text x="1.0399%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7899%" y="405" width="0.0790%" height="15" fill="rgb(213,169,7)" fg:x="10" fg:w="1"/><text x="1.0399%" y="415.50"></text></g><g><title>__libc_free (5 samples, 0.39%)</title><rect x="1.0269%" y="405" width="0.3949%" height="15" fill="rgb(251,219,4)" fg:x="13" fg:w="5"/><text x="1.2769%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.4218%" y="405" width="0.2370%" height="15" fill="rgb(241,55,40)" fg:x="18" fg:w="3"/><text x="1.6718%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.4218%" y="389" width="0.2370%" height="15" fill="rgb(243,57,30)" fg:x="18" fg:w="3"/><text x="1.6718%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.42%)</title><rect x="0.6319%" y="437" width="1.4218%" height="15" fill="rgb(234,50,30)" fg:x="8" fg:w="18"/><text x="0.8819%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.18%)</title><rect x="0.8689%" y="421" width="1.1848%" height="15" fill="rgb(239,23,42)" fg:x="11" fg:w="15"/><text x="1.1189%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="1.6588%" y="405" width="0.3949%" height="15" fill="rgb(217,38,19)" fg:x="21" fg:w="5"/><text x="1.9088%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.8167%" y="389" width="0.2370%" height="15" fill="rgb(215,179,16)" fg:x="23" fg:w="3"/><text x="2.0667%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.8167%" y="373" width="0.2370%" height="15" fill="rgb(254,21,37)" fg:x="23" fg:w="3"/><text x="2.0667%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9747%" y="357" width="0.0790%" height="15" fill="rgb(219,207,48)" fg:x="25" fg:w="1"/><text x="2.2247%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9747%" y="341" width="0.0790%" height="15" fill="rgb(227,225,41)" fg:x="25" fg:w="1"/><text x="2.2247%" y="351.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.1327%" y="405" width="0.2370%" height="15" fill="rgb(223,130,1)" fg:x="27" fg:w="3"/><text x="2.3827%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.3697%" y="405" width="0.0790%" height="15" fill="rgb(249,54,42)" fg:x="30" fg:w="1"/><text x="2.6197%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3697%" y="389" width="0.0790%" height="15" fill="rgb(248,69,25)" fg:x="30" fg:w="1"/><text x="2.6197%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.5276%" y="373" width="0.1580%" height="15" fill="rgb(234,21,32)" fg:x="32" fg:w="2"/><text x="2.7776%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="2.4487%" y="389" width="0.3160%" height="15" fill="rgb(252,136,6)" fg:x="31" fg:w="4"/><text x="2.6987%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.6856%" y="373" width="0.0790%" height="15" fill="rgb(245,87,12)" fg:x="34" fg:w="1"/><text x="2.9356%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.6856%" y="357" width="0.0790%" height="15" fill="rgb(208,12,15)" fg:x="34" fg:w="1"/><text x="2.9356%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.6856%" y="341" width="0.0790%" height="15" fill="rgb(250,98,2)" fg:x="34" fg:w="1"/><text x="2.9356%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.7646%" y="389" width="0.0790%" height="15" fill="rgb(205,213,15)" fg:x="35" fg:w="1"/><text x="3.0146%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.8436%" y="389" width="0.1580%" height="15" fill="rgb(248,192,44)" fg:x="36" fg:w="2"/><text x="3.0936%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9226%" y="373" width="0.0790%" height="15" fill="rgb(221,89,17)" fg:x="37" fg:w="1"/><text x="3.1726%" y="383.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.0016%" y="373" width="0.2370%" height="15" fill="rgb(209,55,3)" fg:x="38" fg:w="3"/><text x="3.2516%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.34%)</title><rect x="2.0537%" y="421" width="1.3428%" height="15" fill="rgb(247,23,45)" fg:x="26" fg:w="17"/><text x="2.3037%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="2.4487%" y="405" width="0.9479%" height="15" fill="rgb(235,152,23)" fg:x="31" fg:w="12"/><text x="2.6987%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="3.0016%" y="389" width="0.3949%" height="15" fill="rgb(244,63,13)" fg:x="38" fg:w="5"/><text x="3.2516%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.2385%" y="373" width="0.1580%" height="15" fill="rgb(227,30,37)" fg:x="41" fg:w="2"/><text x="3.4885%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3175%" y="357" width="0.0790%" height="15" fill="rgb(224,49,42)" fg:x="42" fg:w="1"/><text x="3.5675%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.58%)</title><rect x="2.0537%" y="437" width="1.5798%" height="15" fill="rgb(218,129,5)" fg:x="26" fg:w="20"/><text x="2.3037%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.3965%" y="421" width="0.2370%" height="15" fill="rgb(240,199,54)" fg:x="43" fg:w="3"/><text x="3.6465%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 3.79%)</title><rect x="0.0000%" y="517" width="3.7915%" height="15" fill="rgb(234,31,13)" fg:x="0" fg:w="48"/><text x="0.2500%" y="527.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (46 samples, 3.63%)</title><rect x="0.1580%" y="501" width="3.6335%" height="15" fill="rgb(219,73,54)" fg:x="2" fg:w="46"/><text x="0.4080%" y="511.50">core..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 3.48%)</title><rect x="0.3160%" y="485" width="3.4755%" height="15" fill="rgb(251,162,10)" fg:x="4" fg:w="44"/><text x="0.5660%" y="495.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (43 samples, 3.40%)</title><rect x="0.3949%" y="469" width="3.3965%" height="15" fill="rgb(240,138,47)" fg:x="5" fg:w="43"/><text x="0.6449%" y="479.50">cor..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 3.40%)</title><rect x="0.3949%" y="453" width="3.3965%" height="15" fill="rgb(216,138,26)" fg:x="5" fg:w="43"/><text x="0.6449%" y="463.50">&lt;al..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.6335%" y="437" width="0.1580%" height="15" fill="rgb(243,17,35)" fg:x="46" fg:w="2"/><text x="3.8835%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="3.7915%" y="485" width="0.0790%" height="15" fill="rgb(241,60,18)" fg:x="48" fg:w="1"/><text x="4.0415%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.9494%" y="469" width="0.0790%" height="15" fill="rgb(234,2,44)" fg:x="50" fg:w="1"/><text x="4.1994%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.0284%" y="453" width="0.1580%" height="15" fill="rgb(225,225,33)" fg:x="51" fg:w="2"/><text x="4.2784%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.0284%" y="437" width="0.1580%" height="15" fill="rgb(234,50,31)" fg:x="51" fg:w="2"/><text x="4.2784%" y="447.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.0284%" y="421" width="0.1580%" height="15" fill="rgb(249,6,25)" fg:x="51" fg:w="2"/><text x="4.2784%" y="431.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (2 samples, 0.16%)</title><rect x="4.2654%" y="405" width="0.1580%" height="15" fill="rgb(241,5,17)" fg:x="54" fg:w="2"/><text x="4.5154%" y="415.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (2 samples, 0.16%)</title><rect x="4.2654%" y="389" width="0.1580%" height="15" fill="rgb(207,116,10)" fg:x="54" fg:w="2"/><text x="4.5154%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="4.2654%" y="373" width="0.1580%" height="15" fill="rgb(222,128,18)" fg:x="54" fg:w="2"/><text x="4.5154%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (2 samples, 0.16%)</title><rect x="4.2654%" y="357" width="0.1580%" height="15" fill="rgb(229,109,25)" fg:x="54" fg:w="2"/><text x="4.5154%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (2 samples, 0.16%)</title><rect x="4.2654%" y="341" width="0.1580%" height="15" fill="rgb(222,102,25)" fg:x="54" fg:w="2"/><text x="4.5154%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="4.2654%" y="325" width="0.1580%" height="15" fill="rgb(239,211,5)" fg:x="54" fg:w="2"/><text x="4.5154%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="4.2654%" y="309" width="0.1580%" height="15" fill="rgb(223,136,26)" fg:x="54" fg:w="2"/><text x="4.5154%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="4.2654%" y="293" width="0.1580%" height="15" fill="rgb(227,30,15)" fg:x="54" fg:w="2"/><text x="4.5154%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="4.2654%" y="277" width="0.1580%" height="15" fill="rgb(247,76,4)" fg:x="54" fg:w="2"/><text x="4.5154%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="4.2654%" y="261" width="0.1580%" height="15" fill="rgb(245,38,48)" fg:x="54" fg:w="2"/><text x="4.5154%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="4.2654%" y="245" width="0.1580%" height="15" fill="rgb(210,220,14)" fg:x="54" fg:w="2"/><text x="4.5154%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="4.2654%" y="229" width="0.1580%" height="15" fill="rgb(224,60,51)" fg:x="54" fg:w="2"/><text x="4.5154%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.4234%" y="405" width="0.0790%" height="15" fill="rgb(212,133,49)" fg:x="56" fg:w="1"/><text x="4.6734%" y="415.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="4.6603%" y="389" width="0.1580%" height="15" fill="rgb(231,39,22)" fg:x="59" fg:w="2"/><text x="4.9103%" y="399.50"></text></g><g><title>dlerror (5 samples, 0.39%)</title><rect x="4.5024%" y="405" width="0.3949%" height="15" fill="rgb(236,173,22)" fg:x="57" fg:w="5"/><text x="4.7524%" y="415.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="4.8183%" y="389" width="0.0790%" height="15" fill="rgb(210,70,0)" fg:x="61" fg:w="1"/><text x="5.0683%" y="399.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="5.2133%" y="357" width="0.0790%" height="15" fill="rgb(215,170,11)" fg:x="66" fg:w="1"/><text x="5.4633%" y="367.50"></text></g><g><title>dlopen (22 samples, 1.74%)</title><rect x="4.8973%" y="405" width="1.7378%" height="15" fill="rgb(220,154,28)" fg:x="62" fg:w="22"/><text x="5.1473%" y="415.50"></text></g><g><title>_dl_catch_error (20 samples, 1.58%)</title><rect x="5.0553%" y="389" width="1.5798%" height="15" fill="rgb(240,160,41)" fg:x="64" fg:w="20"/><text x="5.3053%" y="399.50"></text></g><g><title>_dl_catch_exception (20 samples, 1.58%)</title><rect x="5.0553%" y="373" width="1.5798%" height="15" fill="rgb(243,215,41)" fg:x="64" fg:w="20"/><text x="5.3053%" y="383.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.34%)</title><rect x="5.2923%" y="357" width="1.3428%" height="15" fill="rgb(214,208,31)" fg:x="67" fg:w="17"/><text x="5.5423%" y="367.50"></text></g><g><title>_dl_catch_exception (16 samples, 1.26%)</title><rect x="5.3712%" y="341" width="1.2638%" height="15" fill="rgb(247,57,22)" fg:x="68" fg:w="16"/><text x="5.6212%" y="351.50"></text></g><g><title>libloading::safe::Library::new (31 samples, 2.45%)</title><rect x="4.2654%" y="421" width="2.4487%" height="15" fill="rgb(228,73,52)" fg:x="54" fg:w="31"/><text x="4.5154%" y="431.50">li..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="6.6351%" y="405" width="0.0790%" height="15" fill="rgb(252,60,9)" fg:x="84" fg:w="1"/><text x="6.8851%" y="415.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="6.6351%" y="389" width="0.0790%" height="15" fill="rgb(233,9,51)" fg:x="84" fg:w="1"/><text x="6.8851%" y="399.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="6.6351%" y="373" width="0.0790%" height="15" fill="rgb(223,67,14)" fg:x="84" fg:w="1"/><text x="6.8851%" y="383.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="6.6351%" y="357" width="0.0790%" height="15" fill="rgb(222,86,2)" fg:x="84" fg:w="1"/><text x="6.8851%" y="367.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (34 samples, 2.69%)</title><rect x="4.1864%" y="437" width="2.6856%" height="15" fill="rgb(243,58,54)" fg:x="53" fg:w="34"/><text x="4.4364%" y="447.50">&lt;p..</text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (2 samples, 0.16%)</title><rect x="6.7141%" y="421" width="0.1580%" height="15" fill="rgb(210,200,39)" fg:x="85" fg:w="2"/><text x="6.9641%" y="431.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.16%)</title><rect x="6.7141%" y="405" width="0.1580%" height="15" fill="rgb(238,135,9)" fg:x="85" fg:w="2"/><text x="6.9641%" y="415.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="6.8720%" y="437" width="0.0790%" height="15" fill="rgb(232,179,7)" fg:x="87" fg:w="1"/><text x="7.1220%" y="447.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="6.8720%" y="421" width="0.0790%" height="15" fill="rgb(245,65,41)" fg:x="87" fg:w="1"/><text x="7.1220%" y="431.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="6.8720%" y="405" width="0.0790%" height="15" fill="rgb(227,43,8)" fg:x="87" fg:w="1"/><text x="7.1220%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="6.8720%" y="389" width="0.0790%" height="15" fill="rgb(235,91,14)" fg:x="87" fg:w="1"/><text x="7.1220%" y="399.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="6.8720%" y="373" width="0.0790%" height="15" fill="rgb(235,219,31)" fg:x="87" fg:w="1"/><text x="7.1220%" y="383.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="6.9510%" y="421" width="0.0790%" height="15" fill="rgb(227,121,25)" fg:x="88" fg:w="1"/><text x="7.2010%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (40 samples, 3.16%)</title><rect x="4.1864%" y="453" width="3.1596%" height="15" fill="rgb(254,129,24)" fg:x="53" fg:w="40"/><text x="4.4364%" y="463.50">ker..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (5 samples, 0.39%)</title><rect x="6.9510%" y="437" width="0.3949%" height="15" fill="rgb(226,144,49)" fg:x="88" fg:w="5"/><text x="7.2010%" y="447.50"></text></g><g><title>clock_gettime (4 samples, 0.32%)</title><rect x="7.0300%" y="421" width="0.3160%" height="15" fill="rgb(214,187,32)" fg:x="89" fg:w="4"/><text x="7.2800%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="7.3460%" y="453" width="0.0790%" height="15" fill="rgb(243,129,46)" fg:x="93" fg:w="1"/><text x="7.5960%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="7.3460%" y="437" width="0.0790%" height="15" fill="rgb(221,185,35)" fg:x="93" fg:w="1"/><text x="7.5960%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.3460%" y="421" width="0.0790%" height="15" fill="rgb(205,0,32)" fg:x="93" fg:w="1"/><text x="7.5960%" y="431.50"></text></g><g><title>engine::session::Session::initialize (44 samples, 3.48%)</title><rect x="4.0284%" y="469" width="3.4755%" height="15" fill="rgb(229,179,12)" fg:x="51" fg:w="44"/><text x="4.2784%" y="479.50">eng..</text></g><g><title>kernel::session::SetSession&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="7.4250%" y="453" width="0.0790%" height="15" fill="rgb(252,107,19)" fg:x="94" fg:w="1"/><text x="7.6750%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (48 samples, 3.79%)</title><rect x="3.7915%" y="517" width="3.7915%" height="15" fill="rgb(220,95,27)" fg:x="48" fg:w="48"/><text x="4.0415%" y="527.50">&lt;eng..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (48 samples, 3.79%)</title><rect x="3.7915%" y="501" width="3.7915%" height="15" fill="rgb(240,113,40)" fg:x="48" fg:w="48"/><text x="4.0415%" y="511.50">engi..</text></g><g><title>engine::session::Session::new (47 samples, 3.71%)</title><rect x="3.8705%" y="485" width="3.7125%" height="15" fill="rgb(208,4,43)" fg:x="49" fg:w="47"/><text x="4.1205%" y="495.50">engi..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="7.5039%" y="469" width="0.0790%" height="15" fill="rgb(247,189,30)" fg:x="95" fg:w="1"/><text x="7.7539%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="7.5039%" y="453" width="0.0790%" height="15" fill="rgb(231,157,17)" fg:x="95" fg:w="1"/><text x="7.7539%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.5039%" y="437" width="0.0790%" height="15" fill="rgb(224,139,6)" fg:x="95" fg:w="1"/><text x="7.7539%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.5039%" y="421" width="0.0790%" height="15" fill="rgb(223,83,16)" fg:x="95" fg:w="1"/><text x="7.7539%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.5039%" y="405" width="0.0790%" height="15" fill="rgb(232,211,20)" fg:x="95" fg:w="1"/><text x="7.7539%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="7.7409%" y="501" width="0.0790%" height="15" fill="rgb(225,203,35)" fg:x="98" fg:w="1"/><text x="7.9909%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.7409%" y="485" width="0.0790%" height="15" fill="rgb(215,211,44)" fg:x="98" fg:w="1"/><text x="7.9909%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="7.8199%" y="485" width="0.0790%" height="15" fill="rgb(248,213,26)" fg:x="99" fg:w="1"/><text x="8.0699%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.8199%" y="469" width="0.0790%" height="15" fill="rgb(214,23,52)" fg:x="99" fg:w="1"/><text x="8.0699%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.8199%" y="453" width="0.0790%" height="15" fill="rgb(225,173,50)" fg:x="99" fg:w="1"/><text x="8.0699%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.8199%" y="437" width="0.0790%" height="15" fill="rgb(206,150,22)" fg:x="99" fg:w="1"/><text x="8.0699%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.8199%" y="421" width="0.0790%" height="15" fill="rgb(239,64,23)" fg:x="99" fg:w="1"/><text x="8.0699%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.8199%" y="405" width="0.0790%" height="15" fill="rgb(242,50,38)" fg:x="99" fg:w="1"/><text x="8.0699%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.8199%" y="389" width="0.0790%" height="15" fill="rgb(217,91,15)" fg:x="99" fg:w="1"/><text x="8.0699%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.8199%" y="373" width="0.0790%" height="15" fill="rgb(230,172,6)" fg:x="99" fg:w="1"/><text x="8.0699%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.8199%" y="357" width="0.0790%" height="15" fill="rgb(221,98,26)" fg:x="99" fg:w="1"/><text x="8.0699%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.8199%" y="341" width="0.0790%" height="15" fill="rgb(227,210,45)" fg:x="99" fg:w="1"/><text x="8.0699%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.8199%" y="325" width="0.0790%" height="15" fill="rgb(206,8,30)" fg:x="99" fg:w="1"/><text x="8.0699%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.8199%" y="309" width="0.0790%" height="15" fill="rgb(241,219,17)" fg:x="99" fg:w="1"/><text x="8.0699%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.8199%" y="293" width="0.0790%" height="15" fill="rgb(247,121,29)" fg:x="99" fg:w="1"/><text x="8.0699%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="7.9779%" y="421" width="0.0790%" height="15" fill="rgb(219,169,49)" fg:x="101" fg:w="1"/><text x="8.2279%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.9779%" y="453" width="0.1580%" height="15" fill="rgb(253,49,49)" fg:x="101" fg:w="2"/><text x="8.2279%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="7.9779%" y="437" width="0.1580%" height="15" fill="rgb(217,178,3)" fg:x="101" fg:w="2"/><text x="8.2279%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0569%" y="421" width="0.0790%" height="15" fill="rgb(234,73,37)" fg:x="102" fg:w="1"/><text x="8.3069%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.2938%" y="421" width="0.0790%" height="15" fill="rgb(250,98,22)" fg:x="105" fg:w="1"/><text x="8.5438%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.2938%" y="405" width="0.0790%" height="15" fill="rgb(220,108,37)" fg:x="105" fg:w="1"/><text x="8.5438%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.2938%" y="389" width="0.0790%" height="15" fill="rgb(225,168,10)" fg:x="105" fg:w="1"/><text x="8.5438%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.55%)</title><rect x="8.4518%" y="373" width="0.5529%" height="15" fill="rgb(247,215,21)" fg:x="107" fg:w="7"/><text x="8.7018%" y="383.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="8.5308%" y="357" width="0.4739%" height="15" fill="rgb(253,189,31)" fg:x="108" fg:w="6"/><text x="8.7808%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.39%)</title><rect x="8.6098%" y="341" width="0.3949%" height="15" fill="rgb(241,54,22)" fg:x="109" fg:w="5"/><text x="8.8598%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="8.7678%" y="325" width="0.2370%" height="15" fill="rgb(211,87,4)" fg:x="111" fg:w="3"/><text x="9.0178%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.9258%" y="309" width="0.0790%" height="15" fill="rgb(245,112,24)" fg:x="113" fg:w="1"/><text x="9.1758%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.9258%" y="293" width="0.0790%" height="15" fill="rgb(235,190,41)" fg:x="113" fg:w="1"/><text x="9.1758%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.9258%" y="277" width="0.0790%" height="15" fill="rgb(214,89,8)" fg:x="113" fg:w="1"/><text x="9.1758%" y="287.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.71%)</title><rect x="8.4518%" y="389" width="0.7109%" height="15" fill="rgb(249,155,35)" fg:x="107" fg:w="9"/><text x="8.7018%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.0047%" y="373" width="0.1580%" height="15" fill="rgb(249,88,26)" fg:x="114" fg:w="2"/><text x="9.2547%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.0047%" y="357" width="0.1580%" height="15" fill="rgb(232,56,8)" fg:x="114" fg:w="2"/><text x="9.2547%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="9.1627%" y="373" width="0.2370%" height="15" fill="rgb(240,95,3)" fg:x="116" fg:w="3"/><text x="9.4127%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.63%)</title><rect x="9.3997%" y="373" width="0.6319%" height="15" fill="rgb(222,44,28)" fg:x="119" fg:w="8"/><text x="9.6497%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.7156%" y="357" width="0.3160%" height="15" fill="rgb(234,16,30)" fg:x="123" fg:w="4"/><text x="9.9656%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="9.7946%" y="341" width="0.2370%" height="15" fill="rgb(223,26,17)" fg:x="124" fg:w="3"/><text x="10.0446%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.7946%" y="325" width="0.2370%" height="15" fill="rgb(239,187,47)" fg:x="124" fg:w="3"/><text x="10.0446%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.9526%" y="309" width="0.0790%" height="15" fill="rgb(247,102,50)" fg:x="126" fg:w="1"/><text x="10.2026%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.9526%" y="293" width="0.0790%" height="15" fill="rgb(231,216,22)" fg:x="126" fg:w="1"/><text x="10.2026%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.9526%" y="277" width="0.0790%" height="15" fill="rgb(216,201,26)" fg:x="126" fg:w="1"/><text x="10.2026%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.1106%" y="325" width="0.0790%" height="15" fill="rgb(214,186,23)" fg:x="128" fg:w="1"/><text x="10.3606%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.1106%" y="309" width="0.0790%" height="15" fill="rgb(235,184,4)" fg:x="128" fg:w="1"/><text x="10.3606%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="10.1106%" y="357" width="0.2370%" height="15" fill="rgb(244,46,17)" fg:x="128" fg:w="3"/><text x="10.3606%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="10.1106%" y="341" width="0.2370%" height="15" fill="rgb(248,74,46)" fg:x="128" fg:w="3"/><text x="10.3606%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="10.1896%" y="325" width="0.1580%" height="15" fill="rgb(243,79,5)" fg:x="129" fg:w="2"/><text x="10.4396%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2686%" y="309" width="0.0790%" height="15" fill="rgb(213,148,1)" fg:x="130" fg:w="1"/><text x="10.5186%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2686%" y="293" width="0.0790%" height="15" fill="rgb(221,30,0)" fg:x="130" fg:w="1"/><text x="10.5186%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.2686%" y="277" width="0.0790%" height="15" fill="rgb(207,85,29)" fg:x="130" fg:w="1"/><text x="10.5186%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.2686%" y="261" width="0.0790%" height="15" fill="rgb(239,31,46)" fg:x="130" fg:w="1"/><text x="10.5186%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="10.3476%" y="357" width="0.4739%" height="15" fill="rgb(219,6,1)" fg:x="131" fg:w="6"/><text x="10.5976%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="10.5055%" y="341" width="0.3160%" height="15" fill="rgb(229,90,29)" fg:x="133" fg:w="4"/><text x="10.7555%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.7425%" y="325" width="0.0790%" height="15" fill="rgb(242,201,42)" fg:x="136" fg:w="1"/><text x="10.9925%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.7425%" y="309" width="0.0790%" height="15" fill="rgb(243,80,54)" fg:x="136" fg:w="1"/><text x="10.9925%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.9005%" y="341" width="0.0790%" height="15" fill="rgb(223,166,15)" fg:x="138" fg:w="1"/><text x="11.1505%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="10.9795%" y="325" width="0.3949%" height="15" fill="rgb(238,78,27)" fg:x="139" fg:w="5"/><text x="11.2295%" y="335.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="10.9795%" y="309" width="0.3949%" height="15" fill="rgb(235,28,43)" fg:x="139" fg:w="5"/><text x="11.2295%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.39%)</title><rect x="10.9795%" y="293" width="0.3949%" height="15" fill="rgb(240,210,28)" fg:x="139" fg:w="5"/><text x="11.2295%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.39%)</title><rect x="10.9795%" y="277" width="0.3949%" height="15" fill="rgb(253,6,46)" fg:x="139" fg:w="5"/><text x="11.2295%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.2954%" y="261" width="0.0790%" height="15" fill="rgb(250,159,47)" fg:x="143" fg:w="1"/><text x="11.5454%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.2954%" y="245" width="0.0790%" height="15" fill="rgb(216,139,2)" fg:x="143" fg:w="1"/><text x="11.5454%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.2954%" y="229" width="0.0790%" height="15" fill="rgb(221,124,44)" fg:x="143" fg:w="1"/><text x="11.5454%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="10.9795%" y="341" width="0.4739%" height="15" fill="rgb(205,37,22)" fg:x="139" fg:w="6"/><text x="11.2295%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="11.3744%" y="325" width="0.0790%" height="15" fill="rgb(250,55,8)" fg:x="144" fg:w="1"/><text x="11.6244%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.71%)</title><rect x="10.8215%" y="357" width="0.7109%" height="15" fill="rgb(215,83,48)" fg:x="137" fg:w="9"/><text x="11.0715%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.4534%" y="341" width="0.0790%" height="15" fill="rgb(253,2,32)" fg:x="145" fg:w="1"/><text x="11.7034%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.4534%" y="325" width="0.0790%" height="15" fill="rgb(236,67,28)" fg:x="145" fg:w="1"/><text x="11.7034%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.4534%" y="309" width="0.0790%" height="15" fill="rgb(252,55,15)" fg:x="145" fg:w="1"/><text x="11.7034%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.58%)</title><rect x="10.0316%" y="373" width="1.5798%" height="15" fill="rgb(243,173,17)" fg:x="127" fg:w="20"/><text x="10.2816%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.5324%" y="357" width="0.0790%" height="15" fill="rgb(215,212,13)" fg:x="146" fg:w="1"/><text x="11.7824%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.76%)</title><rect x="9.1627%" y="389" width="2.7646%" height="15" fill="rgb(253,176,6)" fg:x="116" fg:w="35"/><text x="9.4127%" y="399.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="11.6114%" y="373" width="0.3160%" height="15" fill="rgb(236,105,26)" fg:x="147" fg:w="4"/><text x="11.8614%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="11.6904%" y="357" width="0.2370%" height="15" fill="rgb(239,226,32)" fg:x="148" fg:w="3"/><text x="11.9404%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.8483%" y="341" width="0.0790%" height="15" fill="rgb(236,104,51)" fg:x="150" fg:w="1"/><text x="12.0983%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (45 samples, 3.55%)</title><rect x="8.4518%" y="405" width="3.5545%" height="15" fill="rgb(220,172,33)" fg:x="107" fg:w="45"/><text x="8.7018%" y="415.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.9273%" y="389" width="0.0790%" height="15" fill="rgb(224,182,25)" fg:x="151" fg:w="1"/><text x="12.1773%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0063%" y="373" width="0.0790%" height="15" fill="rgb(236,184,24)" fg:x="152" fg:w="1"/><text x="12.2563%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0853%" y="357" width="0.0790%" height="15" fill="rgb(241,221,14)" fg:x="153" fg:w="1"/><text x="12.3353%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2433%" y="341" width="0.0790%" height="15" fill="rgb(227,146,5)" fg:x="155" fg:w="1"/><text x="12.4933%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4013%" y="325" width="0.0790%" height="15" fill="rgb(214,15,23)" fg:x="157" fg:w="1"/><text x="12.6513%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.4803%" y="325" width="0.0790%" height="15" fill="rgb(233,157,31)" fg:x="158" fg:w="1"/><text x="12.7303%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="12.5592%" y="325" width="0.1580%" height="15" fill="rgb(211,27,52)" fg:x="159" fg:w="2"/><text x="12.8092%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="12.5592%" y="309" width="0.1580%" height="15" fill="rgb(212,223,15)" fg:x="159" fg:w="2"/><text x="12.8092%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.6382%" y="293" width="0.0790%" height="15" fill="rgb(254,211,0)" fg:x="160" fg:w="1"/><text x="12.8882%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="12.0063%" y="405" width="1.0269%" height="15" fill="rgb(205,43,38)" fg:x="152" fg:w="13"/><text x="12.2563%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.03%)</title><rect x="12.0063%" y="389" width="1.0269%" height="15" fill="rgb(242,206,46)" fg:x="152" fg:w="13"/><text x="12.2563%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="12.0853%" y="373" width="0.9479%" height="15" fill="rgb(220,221,12)" fg:x="153" fg:w="12"/><text x="12.3353%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="12.1643%" y="357" width="0.8689%" height="15" fill="rgb(217,156,35)" fg:x="154" fg:w="11"/><text x="12.4143%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="12.3223%" y="341" width="0.7109%" height="15" fill="rgb(207,181,49)" fg:x="156" fg:w="9"/><text x="12.5723%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="12.7172%" y="325" width="0.3160%" height="15" fill="rgb(235,103,47)" fg:x="161" fg:w="4"/><text x="12.9672%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="12.7172%" y="309" width="0.3160%" height="15" fill="rgb(222,63,28)" fg:x="161" fg:w="4"/><text x="12.9672%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="12.8752%" y="293" width="0.1580%" height="15" fill="rgb(244,137,21)" fg:x="163" fg:w="2"/><text x="13.1252%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1122%" y="357" width="0.0790%" height="15" fill="rgb(228,35,27)" fg:x="166" fg:w="1"/><text x="13.3622%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1912%" y="357" width="0.0790%" height="15" fill="rgb(226,191,41)" fg:x="167" fg:w="1"/><text x="13.4412%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1912%" y="341" width="0.0790%" height="15" fill="rgb(210,154,3)" fg:x="167" fg:w="1"/><text x="13.4412%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="13.2701%" y="357" width="0.0790%" height="15" fill="rgb(216,60,49)" fg:x="168" fg:w="1"/><text x="13.5201%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="13.2701%" y="341" width="0.0790%" height="15" fill="rgb(226,17,20)" fg:x="168" fg:w="1"/><text x="13.5201%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="13.3491%" y="357" width="0.2370%" height="15" fill="rgb(206,115,35)" fg:x="169" fg:w="3"/><text x="13.5991%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="13.3491%" y="341" width="0.2370%" height="15" fill="rgb(227,88,1)" fg:x="169" fg:w="3"/><text x="13.5991%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.4281%" y="325" width="0.1580%" height="15" fill="rgb(230,222,24)" fg:x="170" fg:w="2"/><text x="13.6781%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.9021%" y="325" width="0.0790%" height="15" fill="rgb(214,124,32)" fg:x="176" fg:w="1"/><text x="14.1521%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.9810%" y="309" width="0.0790%" height="15" fill="rgb(240,41,36)" fg:x="177" fg:w="1"/><text x="14.2310%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="13.9810%" y="293" width="0.0790%" height="15" fill="rgb(221,17,52)" fg:x="177" fg:w="1"/><text x="14.2310%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9810%" y="277" width="0.0790%" height="15" fill="rgb(252,70,16)" fg:x="177" fg:w="1"/><text x="14.2310%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="14.0600%" y="277" width="0.3160%" height="15" fill="rgb(250,177,4)" fg:x="178" fg:w="4"/><text x="14.3100%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="14.1390%" y="261" width="0.2370%" height="15" fill="rgb(240,188,47)" fg:x="179" fg:w="3"/><text x="14.3890%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.2970%" y="245" width="0.0790%" height="15" fill="rgb(215,92,12)" fg:x="181" fg:w="1"/><text x="14.5470%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="14.6919%" y="261" width="0.0790%" height="15" fill="rgb(242,110,29)" fg:x="186" fg:w="1"/><text x="14.9419%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.03%)</title><rect x="13.8231%" y="341" width="1.0269%" height="15" fill="rgb(208,211,26)" fg:x="175" fg:w="13"/><text x="14.0731%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.87%)</title><rect x="13.9810%" y="325" width="0.8689%" height="15" fill="rgb(244,147,6)" fg:x="177" fg:w="11"/><text x="14.2310%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.79%)</title><rect x="14.0600%" y="309" width="0.7899%" height="15" fill="rgb(211,130,42)" fg:x="178" fg:w="10"/><text x="14.3100%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.79%)</title><rect x="14.0600%" y="293" width="0.7899%" height="15" fill="rgb(220,63,1)" fg:x="178" fg:w="10"/><text x="14.3100%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="14.3760%" y="277" width="0.4739%" height="15" fill="rgb(241,212,30)" fg:x="182" fg:w="6"/><text x="14.6260%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="14.7709%" y="261" width="0.0790%" height="15" fill="rgb(233,153,17)" fg:x="187" fg:w="1"/><text x="15.0209%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7709%" y="245" width="0.0790%" height="15" fill="rgb(236,3,10)" fg:x="187" fg:w="1"/><text x="15.0209%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7709%" y="229" width="0.0790%" height="15" fill="rgb(232,41,21)" fg:x="187" fg:w="1"/><text x="15.0209%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7709%" y="213" width="0.0790%" height="15" fill="rgb(206,63,51)" fg:x="187" fg:w="1"/><text x="15.0209%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8499%" y="341" width="0.0790%" height="15" fill="rgb(250,214,3)" fg:x="188" fg:w="1"/><text x="15.0999%" y="351.50"></text></g><g><title>engine::session::Session::flush (91 samples, 7.19%)</title><rect x="7.8199%" y="501" width="7.1880%" height="15" fill="rgb(254,89,27)" fg:x="99" fg:w="91"/><text x="8.0699%" y="511.50">engine::se..</text></g><g><title>engine::session::state::State::close (90 samples, 7.11%)</title><rect x="7.8989%" y="485" width="7.1090%" height="15" fill="rgb(249,41,14)" fg:x="100" fg:w="90"/><text x="8.1489%" y="495.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (89 samples, 7.03%)</title><rect x="7.9779%" y="469" width="7.0300%" height="15" fill="rgb(221,196,51)" fg:x="101" fg:w="89"/><text x="8.2279%" y="479.50">engine::s..</text></g><g><title>core::iter::adapters::try_process (87 samples, 6.87%)</title><rect x="8.1359%" y="453" width="6.8720%" height="15" fill="rgb(214,116,26)" fg:x="103" fg:w="87"/><text x="8.3859%" y="463.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (86 samples, 6.79%)</title><rect x="8.2148%" y="437" width="6.7930%" height="15" fill="rgb(236,67,7)" fg:x="104" fg:w="86"/><text x="8.4648%" y="447.50">&lt;alloc::v..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (84 samples, 6.64%)</title><rect x="8.3728%" y="421" width="6.6351%" height="15" fill="rgb(253,179,32)" fg:x="106" fg:w="84"/><text x="8.6228%" y="431.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (25 samples, 1.97%)</title><rect x="13.0332%" y="405" width="1.9747%" height="15" fill="rgb(218,33,15)" fg:x="165" fg:w="25"/><text x="13.2832%" y="415.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 1.97%)</title><rect x="13.0332%" y="389" width="1.9747%" height="15" fill="rgb(217,202,41)" fg:x="165" fg:w="25"/><text x="13.2832%" y="399.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 1.97%)</title><rect x="13.0332%" y="373" width="1.9747%" height="15" fill="rgb(234,133,5)" fg:x="165" fg:w="25"/><text x="13.2832%" y="383.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.42%)</title><rect x="13.5861%" y="357" width="1.4218%" height="15" fill="rgb(240,47,40)" fg:x="172" fg:w="18"/><text x="13.8361%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9289%" y="341" width="0.0790%" height="15" fill="rgb(234,166,26)" fg:x="189" fg:w="1"/><text x="15.1789%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9289%" y="325" width="0.0790%" height="15" fill="rgb(244,125,51)" fg:x="189" fg:w="1"/><text x="15.1789%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="14.9289%" y="309" width="0.0790%" height="15" fill="rgb(229,171,11)" fg:x="189" fg:w="1"/><text x="15.1789%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="15.0079%" y="453" width="0.0790%" height="15" fill="rgb(224,38,45)" fg:x="190" fg:w="1"/><text x="15.2579%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="15.0079%" y="437" width="0.0790%" height="15" fill="rgb(237,27,7)" fg:x="190" fg:w="1"/><text x="15.2579%" y="447.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="15.0079%" y="501" width="0.1580%" height="15" fill="rgb(216,52,7)" fg:x="190" fg:w="2"/><text x="15.2579%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="15.0079%" y="485" width="0.1580%" height="15" fill="rgb(243,11,11)" fg:x="190" fg:w="2"/><text x="15.2579%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="15.0079%" y="469" width="0.1580%" height="15" fill="rgb(253,167,20)" fg:x="190" fg:w="2"/><text x="15.2579%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="15.0869%" y="453" width="0.0790%" height="15" fill="rgb(215,207,5)" fg:x="191" fg:w="1"/><text x="15.3369%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.0869%" y="437" width="0.0790%" height="15" fill="rgb(252,127,31)" fg:x="191" fg:w="1"/><text x="15.3369%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="15.3239%" y="453" width="0.0790%" height="15" fill="rgb(209,106,27)" fg:x="194" fg:w="1"/><text x="15.5739%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.4028%" y="421" width="0.1580%" height="15" fill="rgb(214,220,18)" fg:x="195" fg:w="2"/><text x="15.6528%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.4818%" y="405" width="0.0790%" height="15" fill="rgb(237,89,12)" fg:x="196" fg:w="1"/><text x="15.7318%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.4818%" y="389" width="0.0790%" height="15" fill="rgb(209,167,36)" fg:x="196" fg:w="1"/><text x="15.7318%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.39%)</title><rect x="15.3239%" y="469" width="0.3949%" height="15" fill="rgb(243,45,22)" fg:x="194" fg:w="5"/><text x="15.5739%" y="479.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="15.4028%" y="453" width="0.3160%" height="15" fill="rgb(239,2,46)" fg:x="195" fg:w="4"/><text x="15.6528%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="15.4028%" y="437" width="0.3160%" height="15" fill="rgb(241,101,0)" fg:x="195" fg:w="4"/><text x="15.6528%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="15.5608%" y="421" width="0.1580%" height="15" fill="rgb(244,34,31)" fg:x="197" fg:w="2"/><text x="15.8108%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6398%" y="405" width="0.0790%" height="15" fill="rgb(248,23,22)" fg:x="198" fg:w="1"/><text x="15.8898%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="15.7188%" y="437" width="0.0790%" height="15" fill="rgb(218,27,48)" fg:x="199" fg:w="1"/><text x="15.9688%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="15.7188%" y="469" width="0.1580%" height="15" fill="rgb(232,78,1)" fg:x="199" fg:w="2"/><text x="15.9688%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="15.7188%" y="453" width="0.1580%" height="15" fill="rgb(233,169,12)" fg:x="199" fg:w="2"/><text x="15.9688%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.7978%" y="437" width="0.0790%" height="15" fill="rgb(225,222,54)" fg:x="200" fg:w="1"/><text x="16.0478%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7978%" y="421" width="0.0790%" height="15" fill="rgb(245,126,29)" fg:x="200" fg:w="1"/><text x="16.0478%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.7978%" y="405" width="0.0790%" height="15" fill="rgb(241,63,48)" fg:x="200" fg:w="1"/><text x="16.0478%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7978%" y="389" width="0.0790%" height="15" fill="rgb(235,126,38)" fg:x="200" fg:w="1"/><text x="16.0478%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="15.7978%" y="373" width="0.0790%" height="15" fill="rgb(232,96,49)" fg:x="200" fg:w="1"/><text x="16.0478%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="15.7978%" y="357" width="0.0790%" height="15" fill="rgb(211,146,40)" fg:x="200" fg:w="1"/><text x="16.0478%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="15.7978%" y="341" width="0.0790%" height="15" fill="rgb(247,93,44)" fg:x="200" fg:w="1"/><text x="16.0478%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="15.8768%" y="469" width="0.0790%" height="15" fill="rgb(251,41,49)" fg:x="201" fg:w="1"/><text x="16.1268%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="15.8768%" y="453" width="0.0790%" height="15" fill="rgb(218,155,12)" fg:x="201" fg:w="1"/><text x="16.1268%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.8768%" y="437" width="0.0790%" height="15" fill="rgb(221,161,30)" fg:x="201" fg:w="1"/><text x="16.1268%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.0348%" y="389" width="0.1580%" height="15" fill="rgb(221,179,11)" fg:x="203" fg:w="2"/><text x="16.2848%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.0348%" y="373" width="0.1580%" height="15" fill="rgb(224,170,48)" fg:x="203" fg:w="2"/><text x="16.2848%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1137%" y="357" width="0.0790%" height="15" fill="rgb(223,117,5)" fg:x="204" fg:w="1"/><text x="16.3637%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1137%" y="341" width="0.0790%" height="15" fill="rgb(209,52,20)" fg:x="204" fg:w="1"/><text x="16.3637%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1137%" y="325" width="0.0790%" height="15" fill="rgb(209,19,41)" fg:x="204" fg:w="1"/><text x="16.3637%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.1137%" y="309" width="0.0790%" height="15" fill="rgb(210,177,12)" fg:x="204" fg:w="1"/><text x="16.3637%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.1137%" y="293" width="0.0790%" height="15" fill="rgb(211,159,37)" fg:x="204" fg:w="1"/><text x="16.3637%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.1137%" y="277" width="0.0790%" height="15" fill="rgb(209,20,2)" fg:x="204" fg:w="1"/><text x="16.3637%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1137%" y="261" width="0.0790%" height="15" fill="rgb(244,3,46)" fg:x="204" fg:w="1"/><text x="16.3637%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1137%" y="245" width="0.0790%" height="15" fill="rgb(220,94,38)" fg:x="204" fg:w="1"/><text x="16.3637%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.1137%" y="229" width="0.0790%" height="15" fill="rgb(253,14,31)" fg:x="204" fg:w="1"/><text x="16.3637%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.1137%" y="213" width="0.0790%" height="15" fill="rgb(234,176,13)" fg:x="204" fg:w="1"/><text x="16.3637%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.1137%" y="197" width="0.0790%" height="15" fill="rgb(218,62,25)" fg:x="204" fg:w="1"/><text x="16.3637%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.1137%" y="181" width="0.0790%" height="15" fill="rgb(216,124,40)" fg:x="204" fg:w="1"/><text x="16.3637%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1137%" y="165" width="0.0790%" height="15" fill="rgb(228,170,12)" fg:x="204" fg:w="1"/><text x="16.3637%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1927%" y="325" width="0.0790%" height="15" fill="rgb(231,226,5)" fg:x="205" fg:w="1"/><text x="16.4427%" y="335.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.39%)</title><rect x="15.9558%" y="421" width="0.3949%" height="15" fill="rgb(237,122,22)" fg:x="202" fg:w="5"/><text x="16.2058%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.39%)</title><rect x="15.9558%" y="405" width="0.3949%" height="15" fill="rgb(209,185,25)" fg:x="202" fg:w="5"/><text x="16.2058%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="16.1927%" y="389" width="0.1580%" height="15" fill="rgb(228,200,32)" fg:x="205" fg:w="2"/><text x="16.4427%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.1927%" y="373" width="0.1580%" height="15" fill="rgb(217,140,10)" fg:x="205" fg:w="2"/><text x="16.4427%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="16.1927%" y="357" width="0.1580%" height="15" fill="rgb(253,17,24)" fg:x="205" fg:w="2"/><text x="16.4427%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.1927%" y="341" width="0.1580%" height="15" fill="rgb(212,61,6)" fg:x="205" fg:w="2"/><text x="16.4427%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.2717%" y="325" width="0.0790%" height="15" fill="rgb(205,14,25)" fg:x="206" fg:w="1"/><text x="16.5217%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.2717%" y="309" width="0.0790%" height="15" fill="rgb(232,69,41)" fg:x="206" fg:w="1"/><text x="16.5217%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.55%)</title><rect x="15.9558%" y="453" width="0.5529%" height="15" fill="rgb(241,106,47)" fg:x="202" fg:w="7"/><text x="16.2058%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.55%)</title><rect x="15.9558%" y="437" width="0.5529%" height="15" fill="rgb(210,213,53)" fg:x="202" fg:w="7"/><text x="16.2058%" y="447.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="16.3507%" y="421" width="0.1580%" height="15" fill="rgb(253,175,27)" fg:x="207" fg:w="2"/><text x="16.6007%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="16.3507%" y="405" width="0.1580%" height="15" fill="rgb(211,171,24)" fg:x="207" fg:w="2"/><text x="16.6007%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.3507%" y="389" width="0.1580%" height="15" fill="rgb(229,80,7)" fg:x="207" fg:w="2"/><text x="16.6007%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="16.3507%" y="373" width="0.1580%" height="15" fill="rgb(212,46,39)" fg:x="207" fg:w="2"/><text x="16.6007%" y="383.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="16.3507%" y="357" width="0.1580%" height="15" fill="rgb(240,80,45)" fg:x="207" fg:w="2"/><text x="16.6007%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.4297%" y="341" width="0.0790%" height="15" fill="rgb(253,177,40)" fg:x="208" fg:w="1"/><text x="16.6797%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4297%" y="325" width="0.0790%" height="15" fill="rgb(249,200,15)" fg:x="208" fg:w="1"/><text x="16.6797%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5087%" y="421" width="0.0790%" height="15" fill="rgb(217,78,26)" fg:x="209" fg:w="1"/><text x="16.7587%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="16.5877%" y="421" width="0.0790%" height="15" fill="rgb(254,151,32)" fg:x="210" fg:w="1"/><text x="16.8377%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.50%)</title><rect x="15.3239%" y="485" width="1.5008%" height="15" fill="rgb(226,165,27)" fg:x="194" fg:w="19"/><text x="15.5739%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.87%)</title><rect x="15.9558%" y="469" width="0.8689%" height="15" fill="rgb(250,206,4)" fg:x="202" fg:w="11"/><text x="16.2058%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="16.5087%" y="453" width="0.3160%" height="15" fill="rgb(231,229,27)" fg:x="209" fg:w="4"/><text x="16.7587%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="16.5087%" y="437" width="0.3160%" height="15" fill="rgb(239,217,8)" fg:x="209" fg:w="4"/><text x="16.7587%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="16.6667%" y="421" width="0.1580%" height="15" fill="rgb(225,204,27)" fg:x="211" fg:w="2"/><text x="16.9167%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="16.6667%" y="405" width="0.1580%" height="15" fill="rgb(230,56,32)" fg:x="211" fg:w="2"/><text x="16.9167%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="16.6667%" y="389" width="0.1580%" height="15" fill="rgb(222,56,27)" fg:x="211" fg:w="2"/><text x="16.9167%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="16.6667%" y="373" width="0.1580%" height="15" fill="rgb(253,108,27)" fg:x="211" fg:w="2"/><text x="16.9167%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="16.6667%" y="357" width="0.1580%" height="15" fill="rgb(212,87,36)" fg:x="211" fg:w="2"/><text x="16.9167%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="16.6667%" y="341" width="0.1580%" height="15" fill="rgb(247,82,36)" fg:x="211" fg:w="2"/><text x="16.9167%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="16.7457%" y="325" width="0.0790%" height="15" fill="rgb(222,143,9)" fg:x="212" fg:w="1"/><text x="16.9957%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="16.8246%" y="485" width="0.2370%" height="15" fill="rgb(238,162,48)" fg:x="213" fg:w="3"/><text x="17.0746%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="16.9036%" y="469" width="0.1580%" height="15" fill="rgb(221,59,43)" fg:x="214" fg:w="2"/><text x="17.1536%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="16.9036%" y="453" width="0.1580%" height="15" fill="rgb(205,166,41)" fg:x="214" fg:w="2"/><text x="17.1536%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="16.9036%" y="437" width="0.1580%" height="15" fill="rgb(241,186,40)" fg:x="214" fg:w="2"/><text x="17.1536%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="16.9036%" y="421" width="0.1580%" height="15" fill="rgb(216,119,35)" fg:x="214" fg:w="2"/><text x="17.1536%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="16.9036%" y="405" width="0.1580%" height="15" fill="rgb(208,68,38)" fg:x="214" fg:w="2"/><text x="17.1536%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="16.9036%" y="389" width="0.1580%" height="15" fill="rgb(217,113,1)" fg:x="214" fg:w="2"/><text x="17.1536%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="16.9036%" y="373" width="0.1580%" height="15" fill="rgb(242,153,3)" fg:x="214" fg:w="2"/><text x="17.1536%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="16.9036%" y="357" width="0.1580%" height="15" fill="rgb(229,76,35)" fg:x="214" fg:w="2"/><text x="17.1536%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="16.9036%" y="341" width="0.1580%" height="15" fill="rgb(229,125,34)" fg:x="214" fg:w="2"/><text x="17.1536%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="16.9036%" y="325" width="0.1580%" height="15" fill="rgb(238,179,36)" fg:x="214" fg:w="2"/><text x="17.1536%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="16.9036%" y="309" width="0.1580%" height="15" fill="rgb(244,183,19)" fg:x="214" fg:w="2"/><text x="17.1536%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.9036%" y="293" width="0.1580%" height="15" fill="rgb(216,85,49)" fg:x="214" fg:w="2"/><text x="17.1536%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="17.0616%" y="469" width="0.0790%" height="15" fill="rgb(208,161,47)" fg:x="216" fg:w="1"/><text x="17.3116%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.0616%" y="453" width="0.0790%" height="15" fill="rgb(233,210,18)" fg:x="216" fg:w="1"/><text x="17.3116%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.1406%" y="469" width="0.0790%" height="15" fill="rgb(205,104,42)" fg:x="217" fg:w="1"/><text x="17.3906%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="17.2196%" y="469" width="0.0790%" height="15" fill="rgb(248,90,43)" fg:x="218" fg:w="1"/><text x="17.4696%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2986%" y="437" width="0.0790%" height="15" fill="rgb(206,198,11)" fg:x="219" fg:w="1"/><text x="17.5486%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2986%" y="421" width="0.0790%" height="15" fill="rgb(239,165,27)" fg:x="219" fg:w="1"/><text x="17.5486%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2986%" y="405" width="0.0790%" height="15" fill="rgb(246,44,32)" fg:x="219" fg:w="1"/><text x="17.5486%" y="415.50"></text></g><g><title>plugins_core::build::Build::save (30 samples, 2.37%)</title><rect x="15.1659%" y="501" width="2.3697%" height="15" fill="rgb(252,65,42)" fg:x="192" fg:w="30"/><text x="15.4159%" y="511.50">pl..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.47%)</title><rect x="17.0616%" y="485" width="0.4739%" height="15" fill="rgb(246,197,18)" fg:x="216" fg:w="6"/><text x="17.3116%" y="495.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="17.2986%" y="469" width="0.2370%" height="15" fill="rgb(216,192,4)" fg:x="219" fg:w="3"/><text x="17.5486%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="17.2986%" y="453" width="0.2370%" height="15" fill="rgb(208,117,10)" fg:x="219" fg:w="3"/><text x="17.5486%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.3776%" y="437" width="0.1580%" height="15" fill="rgb(240,61,47)" fg:x="220" fg:w="2"/><text x="17.6276%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.3776%" y="421" width="0.1580%" height="15" fill="rgb(228,178,21)" fg:x="220" fg:w="2"/><text x="17.6276%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.3776%" y="405" width="0.1580%" height="15" fill="rgb(219,96,54)" fg:x="220" fg:w="2"/><text x="17.6276%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.3776%" y="389" width="0.1580%" height="15" fill="rgb(250,177,24)" fg:x="220" fg:w="2"/><text x="17.6276%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4566%" y="373" width="0.0790%" height="15" fill="rgb(242,154,46)" fg:x="221" fg:w="1"/><text x="17.7066%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.4566%" y="357" width="0.0790%" height="15" fill="rgb(226,176,29)" fg:x="221" fg:w="1"/><text x="17.7066%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.4566%" y="341" width="0.0790%" height="15" fill="rgb(226,29,2)" fg:x="221" fg:w="1"/><text x="17.7066%" y="351.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="17.5355%" y="469" width="0.0790%" height="15" fill="rgb(237,104,14)" fg:x="222" fg:w="1"/><text x="17.7855%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="17.5355%" y="453" width="0.0790%" height="15" fill="rgb(245,207,31)" fg:x="222" fg:w="1"/><text x="17.7855%" y="463.50"></text></g><g><title>kernel::model::base::Kind::new (1 samples, 0.08%)</title><rect x="17.5355%" y="437" width="0.0790%" height="15" fill="rgb(229,211,45)" fg:x="222" fg:w="1"/><text x="17.7855%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (3 samples, 0.24%)</title><rect x="17.5355%" y="501" width="0.2370%" height="15" fill="rgb(229,113,15)" fg:x="222" fg:w="3"/><text x="17.7855%" y="511.50"></text></g><g><title>plugins_core::tools::set_quantity (3 samples, 0.24%)</title><rect x="17.5355%" y="485" width="0.2370%" height="15" fill="rgb(237,147,15)" fg:x="222" fg:w="3"/><text x="17.7855%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="17.6145%" y="469" width="0.1580%" height="15" fill="rgb(244,120,12)" fg:x="223" fg:w="2"/><text x="17.8645%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (2 samples, 0.16%)</title><rect x="17.6145%" y="453" width="0.1580%" height="15" fill="rgb(205,120,12)" fg:x="223" fg:w="2"/><text x="17.8645%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.6935%" y="437" width="0.0790%" height="15" fill="rgb(231,26,45)" fg:x="224" fg:w="1"/><text x="17.9435%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6935%" y="421" width="0.0790%" height="15" fill="rgb(246,98,1)" fg:x="224" fg:w="1"/><text x="17.9435%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.6935%" y="405" width="0.0790%" height="15" fill="rgb(207,68,45)" fg:x="224" fg:w="1"/><text x="17.9435%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8515%" y="389" width="0.0790%" height="15" fill="rgb(231,27,38)" fg:x="226" fg:w="1"/><text x="18.1015%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8515%" y="373" width="0.0790%" height="15" fill="rgb(214,223,3)" fg:x="226" fg:w="1"/><text x="18.1015%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8515%" y="357" width="0.0790%" height="15" fill="rgb(228,195,46)" fg:x="226" fg:w="1"/><text x="18.1015%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8515%" y="341" width="0.0790%" height="15" fill="rgb(231,100,42)" fg:x="226" fg:w="1"/><text x="18.1015%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8515%" y="325" width="0.0790%" height="15" fill="rgb(236,53,4)" fg:x="226" fg:w="1"/><text x="18.1015%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8515%" y="309" width="0.0790%" height="15" fill="rgb(230,152,12)" fg:x="226" fg:w="1"/><text x="18.1015%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8515%" y="293" width="0.0790%" height="15" fill="rgb(226,101,19)" fg:x="226" fg:w="1"/><text x="18.1015%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8515%" y="277" width="0.0790%" height="15" fill="rgb(250,149,32)" fg:x="226" fg:w="1"/><text x="18.1015%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8515%" y="261" width="0.0790%" height="15" fill="rgb(232,178,12)" fg:x="226" fg:w="1"/><text x="18.1015%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8515%" y="245" width="0.0790%" height="15" fill="rgb(246,151,17)" fg:x="226" fg:w="1"/><text x="18.1015%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.8515%" y="229" width="0.0790%" height="15" fill="rgb(252,17,51)" fg:x="226" fg:w="1"/><text x="18.1015%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.8515%" y="213" width="0.0790%" height="15" fill="rgb(250,207,23)" fg:x="226" fg:w="1"/><text x="18.1015%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.8515%" y="197" width="0.0790%" height="15" fill="rgb(205,27,5)" fg:x="226" fg:w="1"/><text x="18.1015%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.8515%" y="181" width="0.0790%" height="15" fill="rgb(224,32,19)" fg:x="226" fg:w="1"/><text x="18.1015%" y="191.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="17.8515%" y="469" width="0.1580%" height="15" fill="rgb(247,214,40)" fg:x="226" fg:w="2"/><text x="18.1015%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="17.8515%" y="453" width="0.1580%" height="15" fill="rgb(239,199,17)" fg:x="226" fg:w="2"/><text x="18.1015%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="17.8515%" y="437" width="0.1580%" height="15" fill="rgb(251,159,9)" fg:x="226" fg:w="2"/><text x="18.1015%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.8515%" y="421" width="0.1580%" height="15" fill="rgb(225,78,32)" fg:x="226" fg:w="2"/><text x="18.1015%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="17.8515%" y="405" width="0.1580%" height="15" fill="rgb(206,97,47)" fg:x="226" fg:w="2"/><text x="18.1015%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.9305%" y="389" width="0.0790%" height="15" fill="rgb(227,107,4)" fg:x="227" fg:w="1"/><text x="18.1805%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9305%" y="373" width="0.0790%" height="15" fill="rgb(241,146,50)" fg:x="227" fg:w="1"/><text x="18.1805%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.9305%" y="357" width="0.0790%" height="15" fill="rgb(232,92,30)" fg:x="227" fg:w="1"/><text x="18.1805%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9305%" y="341" width="0.0790%" height="15" fill="rgb(222,0,40)" fg:x="227" fg:w="1"/><text x="18.1805%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.9305%" y="325" width="0.0790%" height="15" fill="rgb(219,54,33)" fg:x="227" fg:w="1"/><text x="18.1805%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9305%" y="309" width="0.0790%" height="15" fill="rgb(226,209,28)" fg:x="227" fg:w="1"/><text x="18.1805%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.9305%" y="293" width="0.0790%" height="15" fill="rgb(254,205,35)" fg:x="227" fg:w="1"/><text x="18.1805%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0095%" y="437" width="0.0790%" height="15" fill="rgb(230,159,3)" fg:x="228" fg:w="1"/><text x="18.2595%" y="447.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="18.0885%" y="437" width="0.0790%" height="15" fill="rgb(232,190,24)" fg:x="229" fg:w="1"/><text x="18.3385%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (6 samples, 0.47%)</title><rect x="18.0095%" y="453" width="0.4739%" height="15" fill="rgb(217,227,44)" fg:x="228" fg:w="6"/><text x="18.2595%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="18.1675%" y="437" width="0.3160%" height="15" fill="rgb(236,211,1)" fg:x="230" fg:w="4"/><text x="18.4175%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="18.1675%" y="421" width="0.3160%" height="15" fill="rgb(250,127,46)" fg:x="230" fg:w="4"/><text x="18.4175%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="18.1675%" y="405" width="0.3160%" height="15" fill="rgb(229,213,6)" fg:x="230" fg:w="4"/><text x="18.4175%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="18.1675%" y="389" width="0.3160%" height="15" fill="rgb(237,15,36)" fg:x="230" fg:w="4"/><text x="18.4175%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.4044%" y="373" width="0.0790%" height="15" fill="rgb(213,131,41)" fg:x="233" fg:w="1"/><text x="18.6544%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4044%" y="357" width="0.0790%" height="15" fill="rgb(225,82,44)" fg:x="233" fg:w="1"/><text x="18.6544%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.4834%" y="421" width="0.1580%" height="15" fill="rgb(249,42,11)" fg:x="234" fg:w="2"/><text x="18.7334%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="18.4834%" y="405" width="0.1580%" height="15" fill="rgb(253,11,29)" fg:x="234" fg:w="2"/><text x="18.7334%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="18.4834%" y="389" width="0.1580%" height="15" fill="rgb(206,8,54)" fg:x="234" fg:w="2"/><text x="18.7334%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.4834%" y="373" width="0.1580%" height="15" fill="rgb(222,186,2)" fg:x="234" fg:w="2"/><text x="18.7334%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.4834%" y="357" width="0.1580%" height="15" fill="rgb(221,206,53)" fg:x="234" fg:w="2"/><text x="18.7334%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.4834%" y="341" width="0.1580%" height="15" fill="rgb(230,150,21)" fg:x="234" fg:w="2"/><text x="18.7334%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5624%" y="325" width="0.0790%" height="15" fill="rgb(253,202,10)" fg:x="235" fg:w="1"/><text x="18.8124%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5624%" y="309" width="0.0790%" height="15" fill="rgb(238,109,40)" fg:x="235" fg:w="1"/><text x="18.8124%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.5624%" y="293" width="0.0790%" height="15" fill="rgb(247,120,22)" fg:x="235" fg:w="1"/><text x="18.8124%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.5624%" y="277" width="0.0790%" height="15" fill="rgb(207,43,30)" fg:x="235" fg:w="1"/><text x="18.8124%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.5624%" y="261" width="0.0790%" height="15" fill="rgb(213,211,24)" fg:x="235" fg:w="1"/><text x="18.8124%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5624%" y="245" width="0.0790%" height="15" fill="rgb(239,73,39)" fg:x="235" fg:w="1"/><text x="18.8124%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5624%" y="229" width="0.0790%" height="15" fill="rgb(245,182,19)" fg:x="235" fg:w="1"/><text x="18.8124%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.5624%" y="213" width="0.0790%" height="15" fill="rgb(247,143,26)" fg:x="235" fg:w="1"/><text x="18.8124%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.5624%" y="197" width="0.0790%" height="15" fill="rgb(228,191,23)" fg:x="235" fg:w="1"/><text x="18.8124%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.5624%" y="181" width="0.0790%" height="15" fill="rgb(253,165,31)" fg:x="235" fg:w="1"/><text x="18.8124%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.5624%" y="165" width="0.0790%" height="15" fill="rgb(234,138,20)" fg:x="235" fg:w="1"/><text x="18.8124%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5624%" y="149" width="0.0790%" height="15" fill="rgb(218,191,29)" fg:x="235" fg:w="1"/><text x="18.8124%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.6414%" y="405" width="0.0790%" height="15" fill="rgb(221,157,19)" fg:x="236" fg:w="1"/><text x="18.8914%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.79%)</title><rect x="18.0095%" y="469" width="0.7899%" height="15" fill="rgb(237,26,42)" fg:x="228" fg:w="10"/><text x="18.2595%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="18.4834%" y="453" width="0.3160%" height="15" fill="rgb(220,163,24)" fg:x="234" fg:w="4"/><text x="18.7334%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="18.4834%" y="437" width="0.3160%" height="15" fill="rgb(242,115,20)" fg:x="234" fg:w="4"/><text x="18.7334%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="18.6414%" y="421" width="0.1580%" height="15" fill="rgb(210,206,9)" fg:x="236" fg:w="2"/><text x="18.8914%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="18.7204%" y="405" width="0.0790%" height="15" fill="rgb(208,71,17)" fg:x="237" fg:w="1"/><text x="18.9704%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="18.7204%" y="389" width="0.0790%" height="15" fill="rgb(233,7,5)" fg:x="237" fg:w="1"/><text x="18.9704%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (15 samples, 1.18%)</title><rect x="17.7725%" y="501" width="1.1848%" height="15" fill="rgb(207,92,33)" fg:x="225" fg:w="15"/><text x="18.0225%" y="511.50"></text></g><g><title>plugins_core::tools::set_container (15 samples, 1.18%)</title><rect x="17.7725%" y="485" width="1.1848%" height="15" fill="rgb(218,87,9)" fg:x="225" fg:w="15"/><text x="18.0225%" y="495.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="18.7994%" y="469" width="0.1580%" height="15" fill="rgb(219,47,37)" fg:x="238" fg:w="2"/><text x="19.0494%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="18.7994%" y="453" width="0.1580%" height="15" fill="rgb(221,152,34)" fg:x="238" fg:w="2"/><text x="19.0494%" y="463.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8784%" y="437" width="0.0790%" height="15" fill="rgb(235,176,21)" fg:x="239" fg:w="1"/><text x="19.1284%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.8784%" y="421" width="0.0790%" height="15" fill="rgb(232,212,21)" fg:x="239" fg:w="1"/><text x="19.1284%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8784%" y="405" width="0.0790%" height="15" fill="rgb(245,82,39)" fg:x="239" fg:w="1"/><text x="19.1284%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.8784%" y="389" width="0.0790%" height="15" fill="rgb(241,52,51)" fg:x="239" fg:w="1"/><text x="19.1284%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::into_entity (1 samples, 0.08%)</title><rect x="18.9573%" y="501" width="0.0790%" height="15" fill="rgb(219,91,24)" fg:x="240" fg:w="1"/><text x="19.2073%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="19.1943%" y="485" width="0.0790%" height="15" fill="rgb(241,142,12)" fg:x="243" fg:w="1"/><text x="19.4443%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="19.1943%" y="469" width="0.0790%" height="15" fill="rgb(230,27,9)" fg:x="243" fg:w="1"/><text x="19.4443%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="19.1943%" y="453" width="0.0790%" height="15" fill="rgb(249,181,32)" fg:x="243" fg:w="1"/><text x="19.4443%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="19.2733%" y="485" width="0.0790%" height="15" fill="rgb(230,107,3)" fg:x="244" fg:w="1"/><text x="19.5233%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5103%" y="357" width="0.0790%" height="15" fill="rgb(246,204,14)" fg:x="247" fg:w="1"/><text x="19.7603%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5103%" y="341" width="0.0790%" height="15" fill="rgb(213,192,47)" fg:x="247" fg:w="1"/><text x="19.7603%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5103%" y="325" width="0.0790%" height="15" fill="rgb(240,44,36)" fg:x="247" fg:w="1"/><text x="19.7603%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="19.4313%" y="453" width="0.3160%" height="15" fill="rgb(244,209,38)" fg:x="246" fg:w="4"/><text x="19.6813%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="19.4313%" y="437" width="0.3160%" height="15" fill="rgb(219,34,37)" fg:x="246" fg:w="4"/><text x="19.6813%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="19.5103%" y="421" width="0.2370%" height="15" fill="rgb(210,28,6)" fg:x="247" fg:w="3"/><text x="19.7603%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="19.5103%" y="405" width="0.2370%" height="15" fill="rgb(244,110,52)" fg:x="247" fg:w="3"/><text x="19.7603%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="19.5103%" y="389" width="0.2370%" height="15" fill="rgb(254,124,47)" fg:x="247" fg:w="3"/><text x="19.7603%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="19.5103%" y="373" width="0.2370%" height="15" fill="rgb(254,110,13)" fg:x="247" fg:w="3"/><text x="19.7603%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="19.5893%" y="357" width="0.1580%" height="15" fill="rgb(252,57,21)" fg:x="248" fg:w="2"/><text x="19.8393%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.5893%" y="341" width="0.1580%" height="15" fill="rgb(242,60,45)" fg:x="248" fg:w="2"/><text x="19.8393%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.6682%" y="325" width="0.0790%" height="15" fill="rgb(234,49,30)" fg:x="249" fg:w="1"/><text x="19.9182%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6682%" y="309" width="0.0790%" height="15" fill="rgb(218,98,6)" fg:x="249" fg:w="1"/><text x="19.9182%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="19.6682%" y="293" width="0.0790%" height="15" fill="rgb(220,174,29)" fg:x="249" fg:w="1"/><text x="19.9182%" y="303.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.47%)</title><rect x="19.3523%" y="485" width="0.4739%" height="15" fill="rgb(236,163,23)" fg:x="245" fg:w="6"/><text x="19.6023%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.47%)</title><rect x="19.3523%" y="469" width="0.4739%" height="15" fill="rgb(242,114,45)" fg:x="245" fg:w="6"/><text x="19.6023%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7472%" y="453" width="0.0790%" height="15" fill="rgb(232,10,53)" fg:x="250" fg:w="1"/><text x="19.9972%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::EntityPtr&gt;&gt; (1 samples, 0.08%)</title><rect x="19.8262%" y="485" width="0.0790%" height="15" fill="rgb(245,108,29)" fg:x="251" fg:w="1"/><text x="20.0762%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="19.9052%" y="453" width="0.1580%" height="15" fill="rgb(240,89,53)" fg:x="252" fg:w="2"/><text x="20.1552%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.9842%" y="437" width="0.0790%" height="15" fill="rgb(226,60,45)" fg:x="253" fg:w="1"/><text x="20.2342%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.9842%" y="421" width="0.0790%" height="15" fill="rgb(230,41,44)" fg:x="253" fg:w="1"/><text x="20.2342%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.9842%" y="405" width="0.0790%" height="15" fill="rgb(230,26,20)" fg:x="253" fg:w="1"/><text x="20.2342%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.9842%" y="389" width="0.0790%" height="15" fill="rgb(237,170,32)" fg:x="253" fg:w="1"/><text x="20.2342%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.9842%" y="373" width="0.0790%" height="15" fill="rgb(212,35,42)" fg:x="253" fg:w="1"/><text x="20.2342%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.9842%" y="357" width="0.0790%" height="15" fill="rgb(227,31,34)" fg:x="253" fg:w="1"/><text x="20.2342%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.9842%" y="341" width="0.0790%" height="15" fill="rgb(216,19,18)" fg:x="253" fg:w="1"/><text x="20.2342%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.9842%" y="325" width="0.0790%" height="15" fill="rgb(211,133,42)" fg:x="253" fg:w="1"/><text x="20.2342%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.9842%" y="309" width="0.0790%" height="15" fill="rgb(244,66,13)" fg:x="253" fg:w="1"/><text x="20.2342%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.9842%" y="293" width="0.0790%" height="15" fill="rgb(218,185,50)" fg:x="253" fg:w="1"/><text x="20.2342%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9842%" y="277" width="0.0790%" height="15" fill="rgb(219,149,13)" fg:x="253" fg:w="1"/><text x="20.2342%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.0632%" y="453" width="0.0790%" height="15" fill="rgb(221,125,0)" fg:x="254" fg:w="1"/><text x="20.3132%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.1422%" y="453" width="0.0790%" height="15" fill="rgb(247,126,27)" fg:x="255" fg:w="1"/><text x="20.3922%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.1422%" y="437" width="0.0790%" height="15" fill="rgb(250,138,30)" fg:x="255" fg:w="1"/><text x="20.3922%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="20.1422%" y="421" width="0.0790%" height="15" fill="rgb(230,151,9)" fg:x="255" fg:w="1"/><text x="20.3922%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (5 samples, 0.39%)</title><rect x="19.9052%" y="469" width="0.3949%" height="15" fill="rgb(233,80,38)" fg:x="252" fg:w="5"/><text x="20.1552%" y="479.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="20.2212%" y="453" width="0.0790%" height="15" fill="rgb(232,68,43)" fg:x="256" fg:w="1"/><text x="20.4712%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.2212%" y="437" width="0.0790%" height="15" fill="rgb(254,5,50)" fg:x="256" fg:w="1"/><text x="20.4712%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="20.3002%" y="453" width="0.1580%" height="15" fill="rgb(225,45,5)" fg:x="257" fg:w="2"/><text x="20.5502%" y="463.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="20.3002%" y="437" width="0.1580%" height="15" fill="rgb(239,22,3)" fg:x="257" fg:w="2"/><text x="20.5502%" y="447.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="20.3002%" y="421" width="0.1580%" height="15" fill="rgb(243,129,0)" fg:x="257" fg:w="2"/><text x="20.5502%" y="431.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="20.3002%" y="405" width="0.1580%" height="15" fill="rgb(223,164,0)" fg:x="257" fg:w="2"/><text x="20.5502%" y="415.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="20.3002%" y="389" width="0.1580%" height="15" fill="rgb(221,46,29)" fg:x="257" fg:w="2"/><text x="20.5502%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="20.3002%" y="373" width="0.1580%" height="15" fill="rgb(205,97,47)" fg:x="257" fg:w="2"/><text x="20.5502%" y="383.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="20.3002%" y="357" width="0.1580%" height="15" fill="rgb(249,14,8)" fg:x="257" fg:w="2"/><text x="20.5502%" y="367.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="20.3002%" y="341" width="0.1580%" height="15" fill="rgb(216,77,3)" fg:x="257" fg:w="2"/><text x="20.5502%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="20.4581%" y="421" width="0.0790%" height="15" fill="rgb(206,168,54)" fg:x="259" fg:w="1"/><text x="20.7081%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.4581%" y="405" width="0.0790%" height="15" fill="rgb(236,3,41)" fg:x="259" fg:w="1"/><text x="20.7081%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.4581%" y="389" width="0.0790%" height="15" fill="rgb(231,132,24)" fg:x="259" fg:w="1"/><text x="20.7081%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.4581%" y="373" width="0.0790%" height="15" fill="rgb(227,221,40)" fg:x="259" fg:w="1"/><text x="20.7081%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="20.5371%" y="405" width="0.0790%" height="15" fill="rgb(233,151,11)" fg:x="260" fg:w="1"/><text x="20.7871%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="20.5371%" y="389" width="0.0790%" height="15" fill="rgb(247,81,35)" fg:x="260" fg:w="1"/><text x="20.7871%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="20.5371%" y="421" width="0.1580%" height="15" fill="rgb(243,128,48)" fg:x="260" fg:w="2"/><text x="20.7871%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6161%" y="405" width="0.0790%" height="15" fill="rgb(253,16,10)" fg:x="261" fg:w="1"/><text x="20.8661%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="20.6951%" y="373" width="0.0790%" height="15" fill="rgb(228,67,27)" fg:x="262" fg:w="1"/><text x="20.9451%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="20.6951%" y="357" width="0.0790%" height="15" fill="rgb(231,105,25)" fg:x="262" fg:w="1"/><text x="20.9451%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.7741%" y="357" width="0.0790%" height="15" fill="rgb(213,166,47)" fg:x="263" fg:w="1"/><text x="21.0241%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.39%)</title><rect x="20.8531%" y="357" width="0.3949%" height="15" fill="rgb(209,27,10)" fg:x="264" fg:w="5"/><text x="21.1031%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="20.9321%" y="341" width="0.3160%" height="15" fill="rgb(241,44,30)" fg:x="265" fg:w="4"/><text x="21.1821%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.0111%" y="325" width="0.2370%" height="15" fill="rgb(223,216,15)" fg:x="266" fg:w="3"/><text x="21.2611%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.0900%" y="309" width="0.1580%" height="15" fill="rgb(227,14,7)" fg:x="267" fg:w="2"/><text x="21.3400%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.0900%" y="293" width="0.1580%" height="15" fill="rgb(237,14,5)" fg:x="267" fg:w="2"/><text x="21.3400%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.55%)</title><rect x="21.4060%" y="341" width="0.5529%" height="15" fill="rgb(232,14,36)" fg:x="271" fg:w="7"/><text x="21.6560%" y="351.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.47%)</title><rect x="21.4850%" y="325" width="0.4739%" height="15" fill="rgb(234,0,38)" fg:x="272" fg:w="6"/><text x="21.7350%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="21.7220%" y="309" width="0.2370%" height="15" fill="rgb(207,170,14)" fg:x="275" fg:w="3"/><text x="21.9720%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.8009%" y="293" width="0.1580%" height="15" fill="rgb(252,45,13)" fg:x="276" fg:w="2"/><text x="22.0509%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.8799%" y="277" width="0.0790%" height="15" fill="rgb(213,142,7)" fg:x="277" fg:w="1"/><text x="22.1299%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="21.9589%" y="293" width="0.1580%" height="15" fill="rgb(216,157,23)" fg:x="278" fg:w="2"/><text x="22.2089%" y="303.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.9589%" y="277" width="0.1580%" height="15" fill="rgb(212,145,33)" fg:x="278" fg:w="2"/><text x="22.2089%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.9589%" y="261" width="0.1580%" height="15" fill="rgb(233,26,13)" fg:x="278" fg:w="2"/><text x="22.2089%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.9589%" y="245" width="0.1580%" height="15" fill="rgb(219,196,19)" fg:x="278" fg:w="2"/><text x="22.2089%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.0379%" y="229" width="0.0790%" height="15" fill="rgb(246,56,21)" fg:x="279" fg:w="1"/><text x="22.2879%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.0379%" y="213" width="0.0790%" height="15" fill="rgb(222,28,53)" fg:x="279" fg:w="1"/><text x="22.2879%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.0379%" y="197" width="0.0790%" height="15" fill="rgb(224,5,27)" fg:x="279" fg:w="1"/><text x="22.2879%" y="207.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="22.1169%" y="277" width="0.1580%" height="15" fill="rgb(220,153,33)" fg:x="280" fg:w="2"/><text x="22.3669%" y="287.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.1169%" y="261" width="0.1580%" height="15" fill="rgb(226,58,19)" fg:x="280" fg:w="2"/><text x="22.3669%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.1959%" y="245" width="0.0790%" height="15" fill="rgb(239,112,23)" fg:x="281" fg:w="1"/><text x="22.4459%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.1959%" y="229" width="0.0790%" height="15" fill="rgb(251,213,20)" fg:x="281" fg:w="1"/><text x="22.4459%" y="239.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="21.9589%" y="325" width="0.3949%" height="15" fill="rgb(215,181,21)" fg:x="278" fg:w="5"/><text x="22.2089%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="21.9589%" y="309" width="0.3949%" height="15" fill="rgb(240,8,35)" fg:x="278" fg:w="5"/><text x="22.2089%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="22.1169%" y="293" width="0.2370%" height="15" fill="rgb(232,203,3)" fg:x="280" fg:w="3"/><text x="22.3669%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="22.2749%" y="277" width="0.0790%" height="15" fill="rgb(214,202,43)" fg:x="282" fg:w="1"/><text x="22.5249%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="22.2749%" y="261" width="0.0790%" height="15" fill="rgb(254,35,11)" fg:x="282" fg:w="1"/><text x="22.5249%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.5118%" y="277" width="0.0790%" height="15" fill="rgb(239,173,13)" fg:x="285" fg:w="1"/><text x="22.7618%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="22.3539%" y="325" width="0.3160%" height="15" fill="rgb(220,141,0)" fg:x="283" fg:w="4"/><text x="22.6039%" y="335.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="22.3539%" y="309" width="0.3160%" height="15" fill="rgb(210,98,12)" fg:x="283" fg:w="4"/><text x="22.6039%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.5118%" y="293" width="0.1580%" height="15" fill="rgb(254,153,22)" fg:x="285" fg:w="2"/><text x="22.7618%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="22.5908%" y="277" width="0.0790%" height="15" fill="rgb(247,223,17)" fg:x="286" fg:w="1"/><text x="22.8408%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.8278%" y="309" width="0.0790%" height="15" fill="rgb(246,56,7)" fg:x="289" fg:w="1"/><text x="23.0778%" y="319.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="22.9068%" y="309" width="0.0790%" height="15" fill="rgb(240,226,12)" fg:x="290" fg:w="1"/><text x="23.1568%" y="319.50"></text></g><g><title>ryu::d2s::d2d (1 samples, 0.08%)</title><rect x="22.9068%" y="293" width="0.0790%" height="15" fill="rgb(205,87,46)" fg:x="290" fg:w="1"/><text x="23.1568%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="22.9858%" y="309" width="0.1580%" height="15" fill="rgb(245,214,51)" fg:x="291" fg:w="2"/><text x="23.2358%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.9858%" y="293" width="0.1580%" height="15" fill="rgb(223,172,33)" fg:x="291" fg:w="2"/><text x="23.2358%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.9858%" y="277" width="0.1580%" height="15" fill="rgb(227,203,34)" fg:x="291" fg:w="2"/><text x="23.2358%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="22.9858%" y="261" width="0.1580%" height="15" fill="rgb(248,143,44)" fg:x="291" fg:w="2"/><text x="23.2358%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="22.9858%" y="245" width="0.1580%" height="15" fill="rgb(226,162,5)" fg:x="291" fg:w="2"/><text x="23.2358%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="22.9858%" y="229" width="0.1580%" height="15" fill="rgb(211,143,1)" fg:x="291" fg:w="2"/><text x="23.2358%" y="239.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="22.9858%" y="213" width="0.1580%" height="15" fill="rgb(224,96,15)" fg:x="291" fg:w="2"/><text x="23.2358%" y="223.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="23.1438%" y="309" width="0.2370%" height="15" fill="rgb(222,4,38)" fg:x="293" fg:w="3"/><text x="23.3938%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="23.1438%" y="293" width="0.2370%" height="15" fill="rgb(253,228,15)" fg:x="293" fg:w="3"/><text x="23.3938%" y="303.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.2227%" y="277" width="0.1580%" height="15" fill="rgb(242,194,12)" fg:x="294" fg:w="2"/><text x="23.4727%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.2227%" y="261" width="0.1580%" height="15" fill="rgb(214,177,31)" fg:x="294" fg:w="2"/><text x="23.4727%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.3017%" y="245" width="0.0790%" height="15" fill="rgb(226,58,51)" fg:x="295" fg:w="1"/><text x="23.5517%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.3017%" y="229" width="0.0790%" height="15" fill="rgb(250,119,16)" fg:x="295" fg:w="1"/><text x="23.5517%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.3017%" y="213" width="0.0790%" height="15" fill="rgb(223,128,53)" fg:x="295" fg:w="1"/><text x="23.5517%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.3017%" y="197" width="0.0790%" height="15" fill="rgb(251,199,15)" fg:x="295" fg:w="1"/><text x="23.5517%" y="207.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.87%)</title><rect x="22.6698%" y="325" width="0.8689%" height="15" fill="rgb(235,168,42)" fg:x="287" fg:w="11"/><text x="22.9198%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.3807%" y="309" width="0.1580%" height="15" fill="rgb(250,210,17)" fg:x="296" fg:w="2"/><text x="23.6307%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.3807%" y="293" width="0.1580%" height="15" fill="rgb(226,36,41)" fg:x="296" fg:w="2"/><text x="23.6307%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.4597%" y="277" width="0.0790%" height="15" fill="rgb(225,87,10)" fg:x="297" fg:w="1"/><text x="23.7097%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.74%)</title><rect x="21.9589%" y="341" width="1.7378%" height="15" fill="rgb(228,83,9)" fg:x="278" fg:w="22"/><text x="22.2089%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.5387%" y="325" width="0.1580%" height="15" fill="rgb(225,16,36)" fg:x="298" fg:w="2"/><text x="23.7887%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.6177%" y="309" width="0.0790%" height="15" fill="rgb(242,198,13)" fg:x="299" fg:w="1"/><text x="23.8677%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.61%)</title><rect x="21.2480%" y="357" width="2.6066%" height="15" fill="rgb(239,25,51)" fg:x="269" fg:w="33"/><text x="21.4980%" y="367.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.6967%" y="341" width="0.1580%" height="15" fill="rgb(239,28,37)" fg:x="300" fg:w="2"/><text x="23.9467%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.6967%" y="325" width="0.1580%" height="15" fill="rgb(234,70,17)" fg:x="300" fg:w="2"/><text x="23.9467%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="23.6967%" y="309" width="0.1580%" height="15" fill="rgb(231,215,53)" fg:x="300" fg:w="2"/><text x="23.9467%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="23.9336%" y="325" width="0.1580%" height="15" fill="rgb(218,140,42)" fg:x="303" fg:w="2"/><text x="24.1836%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="23.9336%" y="309" width="0.1580%" height="15" fill="rgb(233,227,45)" fg:x="303" fg:w="2"/><text x="24.1836%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="23.9336%" y="293" width="0.1580%" height="15" fill="rgb(225,189,21)" fg:x="303" fg:w="2"/><text x="24.1836%" y="303.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (43 samples, 3.40%)</title><rect x="20.7741%" y="373" width="3.3965%" height="15" fill="rgb(237,176,54)" fg:x="263" fg:w="43"/><text x="21.0241%" y="383.50">&lt;se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="23.8547%" y="357" width="0.3160%" height="15" fill="rgb(215,131,46)" fg:x="302" fg:w="4"/><text x="24.1047%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="23.9336%" y="341" width="0.2370%" height="15" fill="rgb(218,95,20)" fg:x="303" fg:w="3"/><text x="24.1836%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="24.0916%" y="325" width="0.0790%" height="15" fill="rgb(208,198,12)" fg:x="305" fg:w="1"/><text x="24.3416%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="24.1706%" y="341" width="0.1580%" height="15" fill="rgb(239,107,50)" fg:x="306" fg:w="2"/><text x="24.4206%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.3286%" y="341" width="0.0790%" height="15" fill="rgb(240,217,37)" fg:x="308" fg:w="1"/><text x="24.5786%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.3286%" y="325" width="0.0790%" height="15" fill="rgb(242,197,49)" fg:x="308" fg:w="1"/><text x="24.5786%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.4076%" y="325" width="0.0790%" height="15" fill="rgb(219,171,17)" fg:x="309" fg:w="1"/><text x="24.6576%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="24.4866%" y="309" width="0.1580%" height="15" fill="rgb(209,81,40)" fg:x="310" fg:w="2"/><text x="24.7366%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="24.6445%" y="309" width="0.1580%" height="15" fill="rgb(237,156,30)" fg:x="312" fg:w="2"/><text x="24.8945%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.7235%" y="293" width="0.0790%" height="15" fill="rgb(212,127,16)" fg:x="313" fg:w="1"/><text x="24.9735%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="24.8025%" y="309" width="0.0790%" height="15" fill="rgb(226,66,32)" fg:x="314" fg:w="1"/><text x="25.0525%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="24.1706%" y="373" width="0.8689%" height="15" fill="rgb(245,22,46)" fg:x="306" fg:w="11"/><text x="24.4206%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.87%)</title><rect x="24.1706%" y="357" width="0.8689%" height="15" fill="rgb(210,112,21)" fg:x="306" fg:w="11"/><text x="24.4206%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="24.4076%" y="341" width="0.6319%" height="15" fill="rgb(207,118,39)" fg:x="309" fg:w="8"/><text x="24.6576%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="24.4866%" y="325" width="0.5529%" height="15" fill="rgb(205,206,35)" fg:x="310" fg:w="7"/><text x="24.7366%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.8815%" y="309" width="0.1580%" height="15" fill="rgb(222,120,2)" fg:x="315" fg:w="2"/><text x="25.1315%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.8815%" y="293" width="0.1580%" height="15" fill="rgb(205,38,18)" fg:x="315" fg:w="2"/><text x="25.1315%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="24.8815%" y="277" width="0.1580%" height="15" fill="rgb(226,61,2)" fg:x="315" fg:w="2"/><text x="25.1315%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.1185%" y="341" width="0.0790%" height="15" fill="rgb(242,161,23)" fg:x="318" fg:w="1"/><text x="25.3685%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="25.0395%" y="357" width="0.2370%" height="15" fill="rgb(213,13,52)" fg:x="317" fg:w="3"/><text x="25.2895%" y="367.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="25.1975%" y="341" width="0.0790%" height="15" fill="rgb(246,209,47)" fg:x="319" fg:w="1"/><text x="25.4475%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="25.1975%" y="325" width="0.0790%" height="15" fill="rgb(214,41,3)" fg:x="319" fg:w="1"/><text x="25.4475%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="25.5134%" y="325" width="0.3160%" height="15" fill="rgb(236,119,38)" fg:x="323" fg:w="4"/><text x="25.7634%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="25.8294%" y="325" width="0.0790%" height="15" fill="rgb(218,50,11)" fg:x="327" fg:w="1"/><text x="26.0794%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="25.9084%" y="325" width="0.1580%" height="15" fill="rgb(228,38,11)" fg:x="328" fg:w="2"/><text x="26.1584%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.9084%" y="309" width="0.1580%" height="15" fill="rgb(212,13,9)" fg:x="328" fg:w="2"/><text x="26.1584%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.9874%" y="293" width="0.0790%" height="15" fill="rgb(208,211,9)" fg:x="329" fg:w="1"/><text x="26.2374%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.5403%" y="293" width="0.0790%" height="15" fill="rgb(239,39,32)" fg:x="336" fg:w="1"/><text x="26.7903%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="26.6983%" y="261" width="0.0790%" height="15" fill="rgb(254,179,26)" fg:x="338" fg:w="1"/><text x="26.9483%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6983%" y="245" width="0.0790%" height="15" fill="rgb(249,165,28)" fg:x="338" fg:w="1"/><text x="26.9483%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="26.7773%" y="181" width="0.0790%" height="15" fill="rgb(225,59,50)" fg:x="339" fg:w="1"/><text x="27.0273%" y="191.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="26.6983%" y="277" width="0.2370%" height="15" fill="rgb(209,122,5)" fg:x="338" fg:w="3"/><text x="26.9483%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="26.7773%" y="261" width="0.1580%" height="15" fill="rgb(214,65,34)" fg:x="339" fg:w="2"/><text x="27.0273%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="26.7773%" y="245" width="0.1580%" height="15" fill="rgb(249,183,32)" fg:x="339" fg:w="2"/><text x="27.0273%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="26.7773%" y="229" width="0.1580%" height="15" fill="rgb(218,122,24)" fg:x="339" fg:w="2"/><text x="27.0273%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="26.7773%" y="213" width="0.1580%" height="15" fill="rgb(224,109,18)" fg:x="339" fg:w="2"/><text x="27.0273%" y="223.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="26.7773%" y="197" width="0.1580%" height="15" fill="rgb(210,68,50)" fg:x="339" fg:w="2"/><text x="27.0273%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.8562%" y="181" width="0.0790%" height="15" fill="rgb(212,184,34)" fg:x="340" fg:w="1"/><text x="27.1062%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.0142%" y="261" width="0.0790%" height="15" fill="rgb(238,105,48)" fg:x="342" fg:w="1"/><text x="27.2642%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="27.3302%" y="245" width="0.3160%" height="15" fill="rgb(222,134,54)" fg:x="346" fg:w="4"/><text x="27.5802%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="27.4092%" y="229" width="0.2370%" height="15" fill="rgb(246,24,43)" fg:x="347" fg:w="3"/><text x="27.6592%" y="239.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="27.4092%" y="213" width="0.2370%" height="15" fill="rgb(227,169,22)" fg:x="347" fg:w="3"/><text x="27.6592%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (3 samples, 0.24%)</title><rect x="27.9621%" y="229" width="0.2370%" height="15" fill="rgb(253,152,4)" fg:x="354" fg:w="3"/><text x="28.2121%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="28.2780%" y="213" width="0.2370%" height="15" fill="rgb(219,158,36)" fg:x="358" fg:w="3"/><text x="28.5280%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="28.2780%" y="197" width="0.2370%" height="15" fill="rgb(251,128,40)" fg:x="358" fg:w="3"/><text x="28.5280%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4360%" y="181" width="0.0790%" height="15" fill="rgb(254,101,39)" fg:x="360" fg:w="1"/><text x="28.6860%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (26 samples, 2.05%)</title><rect x="26.6193%" y="293" width="2.0537%" height="15" fill="rgb(221,168,40)" fg:x="337" fg:w="26"/><text x="26.8693%" y="303.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 1.74%)</title><rect x="26.9352%" y="277" width="1.7378%" height="15" fill="rgb(221,14,27)" fg:x="341" fg:w="22"/><text x="27.1852%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.58%)</title><rect x="27.0932%" y="261" width="1.5798%" height="15" fill="rgb(207,36,43)" fg:x="343" fg:w="20"/><text x="27.3432%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.03%)</title><rect x="27.6461%" y="245" width="1.0269%" height="15" fill="rgb(240,172,53)" fg:x="350" fg:w="13"/><text x="27.8961%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.47%)</title><rect x="28.1991%" y="229" width="0.4739%" height="15" fill="rgb(241,138,43)" fg:x="357" fg:w="6"/><text x="28.4491%" y="239.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="28.5150%" y="213" width="0.1580%" height="15" fill="rgb(227,78,19)" fg:x="361" fg:w="2"/><text x="28.7650%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.5940%" y="197" width="0.0790%" height="15" fill="rgb(215,127,44)" fg:x="362" fg:w="1"/><text x="28.8440%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.37%)</title><rect x="26.4613%" y="309" width="2.3697%" height="15" fill="rgb(227,13,10)" fg:x="335" fg:w="30"/><text x="26.7113%" y="319.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="28.6730%" y="293" width="0.1580%" height="15" fill="rgb(249,177,6)" fg:x="363" fg:w="2"/><text x="28.9230%" y="303.50"></text></g><g><title>engine::session::Session::flush (116 samples, 9.16%)</title><rect x="19.9052%" y="485" width="9.1627%" height="15" fill="rgb(215,154,26)" fg:x="252" fg:w="116"/><text x="20.1552%" y="495.50">engine::sessi..</text></g><g><title>engine::session::Session::save_changes (111 samples, 8.77%)</title><rect x="20.3002%" y="469" width="8.7678%" height="15" fill="rgb(250,168,20)" fg:x="257" fg:w="111"/><text x="20.5502%" y="479.50">engine::sess..</text></g><g><title>engine::session::state::State::close (109 samples, 8.61%)</title><rect x="20.4581%" y="453" width="8.6098%" height="15" fill="rgb(222,53,38)" fg:x="259" fg:w="109"/><text x="20.7081%" y="463.50">engine::sess..</text></g><g><title>engine::session::state::State::flush_entities (109 samples, 8.61%)</title><rect x="20.4581%" y="437" width="8.6098%" height="15" fill="rgb(245,154,5)" fg:x="259" fg:w="109"/><text x="20.7081%" y="447.50">engine::sess..</text></g><g><title>core::iter::adapters::try_process (106 samples, 8.37%)</title><rect x="20.6951%" y="421" width="8.3728%" height="15" fill="rgb(214,89,50)" fg:x="262" fg:w="106"/><text x="20.9451%" y="431.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106 samples, 8.37%)</title><rect x="20.6951%" y="405" width="8.3728%" height="15" fill="rgb(232,73,14)" fg:x="262" fg:w="106"/><text x="20.9451%" y="415.50">&lt;alloc::vec:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (106 samples, 8.37%)</title><rect x="20.6951%" y="389" width="8.3728%" height="15" fill="rgb(230,101,20)" fg:x="262" fg:w="106"/><text x="20.9451%" y="399.50">engine::sess..</text></g><g><title>kernel::model::any_entity_changes (51 samples, 4.03%)</title><rect x="25.0395%" y="373" width="4.0284%" height="15" fill="rgb(208,56,28)" fg:x="317" fg:w="51"/><text x="25.2895%" y="383.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (48 samples, 3.79%)</title><rect x="25.2765%" y="357" width="3.7915%" height="15" fill="rgb(247,205,22)" fg:x="320" fg:w="48"/><text x="25.5265%" y="367.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 3.79%)</title><rect x="25.2765%" y="341" width="3.7915%" height="15" fill="rgb(252,109,51)" fg:x="320" fg:w="48"/><text x="25.5265%" y="351.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 3.00%)</title><rect x="26.0664%" y="325" width="3.0016%" height="15" fill="rgb(220,40,24)" fg:x="330" fg:w="38"/><text x="26.3164%" y="335.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="28.8310%" y="309" width="0.2370%" height="15" fill="rgb(251,108,7)" fg:x="365" fg:w="3"/><text x="29.0810%" y="319.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="29.0679%" y="485" width="0.0790%" height="15" fill="rgb(238,102,51)" fg:x="368" fg:w="1"/><text x="29.3179%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="29.0679%" y="469" width="0.0790%" height="15" fill="rgb(219,149,34)" fg:x="368" fg:w="1"/><text x="29.3179%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="29.0679%" y="453" width="0.0790%" height="15" fill="rgb(239,70,0)" fg:x="368" fg:w="1"/><text x="29.3179%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="29.0679%" y="437" width="0.0790%" height="15" fill="rgb(246,214,23)" fg:x="368" fg:w="1"/><text x="29.3179%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.0679%" y="421" width="0.0790%" height="15" fill="rgb(239,221,51)" fg:x="368" fg:w="1"/><text x="29.3179%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="29.0679%" y="405" width="0.0790%" height="15" fill="rgb(254,62,14)" fg:x="368" fg:w="1"/><text x="29.3179%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="29.0679%" y="389" width="0.0790%" height="15" fill="rgb(253,57,33)" fg:x="368" fg:w="1"/><text x="29.3179%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.0679%" y="373" width="0.0790%" height="15" fill="rgb(229,34,6)" fg:x="368" fg:w="1"/><text x="29.3179%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="29.1469%" y="469" width="0.0790%" height="15" fill="rgb(235,191,23)" fg:x="369" fg:w="1"/><text x="29.3969%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="29.1469%" y="453" width="0.0790%" height="15" fill="rgb(217,207,27)" fg:x="369" fg:w="1"/><text x="29.3969%" y="463.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="29.1469%" y="437" width="0.0790%" height="15" fill="rgb(232,41,44)" fg:x="369" fg:w="1"/><text x="29.3969%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.1469%" y="421" width="0.0790%" height="15" fill="rgb(221,188,19)" fg:x="369" fg:w="1"/><text x="29.3969%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="29.2259%" y="453" width="0.1580%" height="15" fill="rgb(245,180,45)" fg:x="370" fg:w="2"/><text x="29.4759%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="29.3049%" y="437" width="0.0790%" height="15" fill="rgb(250,220,42)" fg:x="371" fg:w="1"/><text x="29.5549%" y="447.50"></text></g><g><title>plugins_core::build::Build::new (4 samples, 0.32%)</title><rect x="29.1469%" y="485" width="0.3160%" height="15" fill="rgb(234,16,34)" fg:x="369" fg:w="4"/><text x="29.3969%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="29.2259%" y="469" width="0.2370%" height="15" fill="rgb(233,217,23)" fg:x="370" fg:w="3"/><text x="29.4759%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="29.3839%" y="453" width="0.0790%" height="15" fill="rgb(209,22,46)" fg:x="372" fg:w="1"/><text x="29.6339%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="29.3839%" y="437" width="0.0790%" height="15" fill="rgb(213,101,18)" fg:x="372" fg:w="1"/><text x="29.6339%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.3839%" y="421" width="0.0790%" height="15" fill="rgb(215,179,52)" fg:x="372" fg:w="1"/><text x="29.6339%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5419%" y="405" width="0.0790%" height="15" fill="rgb(223,50,25)" fg:x="374" fg:w="1"/><text x="29.7919%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5419%" y="389" width="0.0790%" height="15" fill="rgb(224,51,44)" fg:x="374" fg:w="1"/><text x="29.7919%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.5419%" y="453" width="0.1580%" height="15" fill="rgb(224,13,54)" fg:x="374" fg:w="2"/><text x="29.7919%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.5419%" y="437" width="0.1580%" height="15" fill="rgb(219,58,47)" fg:x="374" fg:w="2"/><text x="29.7919%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="29.5419%" y="421" width="0.1580%" height="15" fill="rgb(246,124,34)" fg:x="374" fg:w="2"/><text x="29.7919%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.6209%" y="405" width="0.0790%" height="15" fill="rgb(245,109,25)" fg:x="375" fg:w="1"/><text x="29.8709%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6209%" y="389" width="0.0790%" height="15" fill="rgb(235,48,23)" fg:x="375" fg:w="1"/><text x="29.8709%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.6209%" y="373" width="0.0790%" height="15" fill="rgb(229,203,36)" fg:x="375" fg:w="1"/><text x="29.8709%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6209%" y="357" width="0.0790%" height="15" fill="rgb(234,180,9)" fg:x="375" fg:w="1"/><text x="29.8709%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.6209%" y="341" width="0.0790%" height="15" fill="rgb(228,98,45)" fg:x="375" fg:w="1"/><text x="29.8709%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6209%" y="325" width="0.0790%" height="15" fill="rgb(240,24,36)" fg:x="375" fg:w="1"/><text x="29.8709%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.6209%" y="309" width="0.0790%" height="15" fill="rgb(227,154,19)" fg:x="375" fg:w="1"/><text x="29.8709%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6998%" y="421" width="0.0790%" height="15" fill="rgb(231,2,48)" fg:x="376" fg:w="1"/><text x="29.9498%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6998%" y="405" width="0.0790%" height="15" fill="rgb(219,216,0)" fg:x="376" fg:w="1"/><text x="29.9498%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="29.6998%" y="437" width="0.3160%" height="15" fill="rgb(251,88,0)" fg:x="376" fg:w="4"/><text x="29.9498%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="29.7788%" y="421" width="0.2370%" height="15" fill="rgb(242,45,45)" fg:x="377" fg:w="3"/><text x="30.0288%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.7788%" y="405" width="0.2370%" height="15" fill="rgb(218,149,45)" fg:x="377" fg:w="3"/><text x="30.0288%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.8578%" y="389" width="0.1580%" height="15" fill="rgb(247,194,10)" fg:x="378" fg:w="2"/><text x="30.1078%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.8578%" y="373" width="0.1580%" height="15" fill="rgb(234,33,37)" fg:x="378" fg:w="2"/><text x="30.1078%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.0948%" y="373" width="0.0790%" height="15" fill="rgb(218,61,13)" fg:x="381" fg:w="1"/><text x="30.3448%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (3 samples, 0.24%)</title><rect x="30.0158%" y="421" width="0.2370%" height="15" fill="rgb(210,80,52)" fg:x="380" fg:w="3"/><text x="30.2658%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="30.0158%" y="405" width="0.2370%" height="15" fill="rgb(218,203,27)" fg:x="380" fg:w="3"/><text x="30.2658%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="30.0948%" y="389" width="0.1580%" height="15" fill="rgb(209,126,33)" fg:x="381" fg:w="2"/><text x="30.3448%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1738%" y="373" width="0.0790%" height="15" fill="rgb(234,173,41)" fg:x="382" fg:w="1"/><text x="30.4238%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2528%" y="357" width="0.0790%" height="15" fill="rgb(228,166,9)" fg:x="383" fg:w="1"/><text x="30.5028%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (9 samples, 0.71%)</title><rect x="29.6998%" y="453" width="0.7109%" height="15" fill="rgb(208,124,43)" fg:x="376" fg:w="9"/><text x="29.9498%" y="463.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.39%)</title><rect x="30.0158%" y="437" width="0.3949%" height="15" fill="rgb(212,154,38)" fg:x="380" fg:w="5"/><text x="30.2658%" y="447.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="30.2528%" y="421" width="0.1580%" height="15" fill="rgb(246,179,35)" fg:x="383" fg:w="2"/><text x="30.5028%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.2528%" y="405" width="0.1580%" height="15" fill="rgb(251,3,50)" fg:x="383" fg:w="2"/><text x="30.5028%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="30.2528%" y="389" width="0.1580%" height="15" fill="rgb(219,96,8)" fg:x="383" fg:w="2"/><text x="30.5028%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.2528%" y="373" width="0.1580%" height="15" fill="rgb(251,216,33)" fg:x="383" fg:w="2"/><text x="30.5028%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.3318%" y="357" width="0.0790%" height="15" fill="rgb(243,145,29)" fg:x="384" fg:w="1"/><text x="30.5818%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="30.4107%" y="453" width="0.0790%" height="15" fill="rgb(210,75,20)" fg:x="385" fg:w="1"/><text x="30.6607%" y="463.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="30.4107%" y="437" width="0.0790%" height="15" fill="rgb(235,56,8)" fg:x="385" fg:w="1"/><text x="30.6607%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.4897%" y="405" width="0.0790%" height="15" fill="rgb(226,175,49)" fg:x="386" fg:w="1"/><text x="30.7397%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="30.4897%" y="389" width="0.0790%" height="15" fill="rgb(242,204,23)" fg:x="386" fg:w="1"/><text x="30.7397%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4897%" y="373" width="0.0790%" height="15" fill="rgb(225,104,24)" fg:x="386" fg:w="1"/><text x="30.7397%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4897%" y="357" width="0.0790%" height="15" fill="rgb(253,34,1)" fg:x="386" fg:w="1"/><text x="30.7397%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4897%" y="341" width="0.0790%" height="15" fill="rgb(233,199,23)" fg:x="386" fg:w="1"/><text x="30.7397%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4897%" y="325" width="0.0790%" height="15" fill="rgb(247,7,51)" fg:x="386" fg:w="1"/><text x="30.7397%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4897%" y="309" width="0.0790%" height="15" fill="rgb(214,146,12)" fg:x="386" fg:w="1"/><text x="30.7397%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.4897%" y="293" width="0.0790%" height="15" fill="rgb(234,181,43)" fg:x="386" fg:w="1"/><text x="30.7397%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.4897%" y="277" width="0.0790%" height="15" fill="rgb(239,148,6)" fg:x="386" fg:w="1"/><text x="30.7397%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.4897%" y="261" width="0.0790%" height="15" fill="rgb(206,151,17)" fg:x="386" fg:w="1"/><text x="30.7397%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4897%" y="245" width="0.0790%" height="15" fill="rgb(213,215,10)" fg:x="386" fg:w="1"/><text x="30.7397%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4897%" y="229" width="0.0790%" height="15" fill="rgb(215,220,44)" fg:x="386" fg:w="1"/><text x="30.7397%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.4897%" y="213" width="0.0790%" height="15" fill="rgb(245,205,37)" fg:x="386" fg:w="1"/><text x="30.7397%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.4897%" y="197" width="0.0790%" height="15" fill="rgb(245,130,43)" fg:x="386" fg:w="1"/><text x="30.7397%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.4897%" y="181" width="0.0790%" height="15" fill="rgb(231,227,38)" fg:x="386" fg:w="1"/><text x="30.7397%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.4897%" y="165" width="0.0790%" height="15" fill="rgb(233,185,4)" fg:x="386" fg:w="1"/><text x="30.7397%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.4897%" y="149" width="0.0790%" height="15" fill="rgb(224,154,43)" fg:x="386" fg:w="1"/><text x="30.7397%" y="159.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="30.4897%" y="437" width="0.3160%" height="15" fill="rgb(235,156,15)" fg:x="386" fg:w="4"/><text x="30.7397%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="30.4897%" y="421" width="0.3160%" height="15" fill="rgb(211,55,43)" fg:x="386" fg:w="4"/><text x="30.7397%" y="431.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="30.5687%" y="405" width="0.2370%" height="15" fill="rgb(247,149,40)" fg:x="387" fg:w="3"/><text x="30.8187%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="30.6477%" y="389" width="0.1580%" height="15" fill="rgb(232,171,16)" fg:x="388" fg:w="2"/><text x="30.8977%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.6477%" y="373" width="0.1580%" height="15" fill="rgb(215,117,49)" fg:x="388" fg:w="2"/><text x="30.8977%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="30.6477%" y="357" width="0.1580%" height="15" fill="rgb(246,194,11)" fg:x="388" fg:w="2"/><text x="30.8977%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7267%" y="341" width="0.0790%" height="15" fill="rgb(242,101,44)" fg:x="389" fg:w="1"/><text x="30.9767%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7267%" y="325" width="0.0790%" height="15" fill="rgb(226,174,6)" fg:x="389" fg:w="1"/><text x="30.9767%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="30.7267%" y="309" width="0.0790%" height="15" fill="rgb(213,150,20)" fg:x="389" fg:w="1"/><text x="30.9767%" y="319.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.8057%" y="405" width="0.0790%" height="15" fill="rgb(222,124,42)" fg:x="390" fg:w="1"/><text x="31.0557%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.8057%" y="389" width="0.0790%" height="15" fill="rgb(250,19,47)" fg:x="390" fg:w="1"/><text x="31.0557%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.8057%" y="373" width="0.0790%" height="15" fill="rgb(241,217,19)" fg:x="390" fg:w="1"/><text x="31.0557%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.8057%" y="357" width="0.0790%" height="15" fill="rgb(207,210,34)" fg:x="390" fg:w="1"/><text x="31.0557%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8057%" y="341" width="0.0790%" height="15" fill="rgb(244,45,4)" fg:x="390" fg:w="1"/><text x="31.0557%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="30.8847%" y="405" width="0.1580%" height="15" fill="rgb(252,134,50)" fg:x="391" fg:w="2"/><text x="31.1347%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.9637%" y="389" width="0.0790%" height="15" fill="rgb(238,74,2)" fg:x="392" fg:w="1"/><text x="31.2137%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9637%" y="373" width="0.0790%" height="15" fill="rgb(226,58,46)" fg:x="392" fg:w="1"/><text x="31.2137%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.1216%" y="325" width="0.0790%" height="15" fill="rgb(232,83,35)" fg:x="394" fg:w="1"/><text x="31.3716%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="31.0427%" y="389" width="0.3160%" height="15" fill="rgb(212,148,47)" fg:x="393" fg:w="4"/><text x="31.2927%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="31.0427%" y="373" width="0.3160%" height="15" fill="rgb(235,29,1)" fg:x="393" fg:w="4"/><text x="31.2927%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="31.0427%" y="357" width="0.3160%" height="15" fill="rgb(247,55,37)" fg:x="393" fg:w="4"/><text x="31.2927%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="31.0427%" y="341" width="0.3160%" height="15" fill="rgb(222,48,3)" fg:x="393" fg:w="4"/><text x="31.2927%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="31.2006%" y="325" width="0.1580%" height="15" fill="rgb(234,21,33)" fg:x="395" fg:w="2"/><text x="31.4506%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="31.2006%" y="309" width="0.1580%" height="15" fill="rgb(247,178,53)" fg:x="395" fg:w="2"/><text x="31.4506%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="31.2006%" y="293" width="0.1580%" height="15" fill="rgb(225,75,7)" fg:x="395" fg:w="2"/><text x="31.4506%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.2006%" y="277" width="0.1580%" height="15" fill="rgb(219,199,7)" fg:x="395" fg:w="2"/><text x="31.4506%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.95%)</title><rect x="30.4897%" y="453" width="0.9479%" height="15" fill="rgb(209,93,42)" fg:x="386" fg:w="12"/><text x="30.7397%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.63%)</title><rect x="30.8057%" y="437" width="0.6319%" height="15" fill="rgb(240,175,17)" fg:x="390" fg:w="8"/><text x="31.0557%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.63%)</title><rect x="30.8057%" y="421" width="0.6319%" height="15" fill="rgb(232,106,7)" fg:x="390" fg:w="8"/><text x="31.0557%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.39%)</title><rect x="31.0427%" y="405" width="0.3949%" height="15" fill="rgb(242,106,43)" fg:x="393" fg:w="5"/><text x="31.2927%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.3586%" y="389" width="0.0790%" height="15" fill="rgb(242,61,37)" fg:x="397" fg:w="1"/><text x="31.6086%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (25 samples, 1.97%)</title><rect x="29.5419%" y="469" width="1.9747%" height="15" fill="rgb(205,72,10)" fg:x="374" fg:w="25"/><text x="29.7919%" y="479.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="31.4376%" y="453" width="0.0790%" height="15" fill="rgb(214,184,36)" fg:x="398" fg:w="1"/><text x="31.6876%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.5166%" y="469" width="0.1580%" height="15" fill="rgb(206,107,18)" fg:x="399" fg:w="2"/><text x="31.7666%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5166%" y="453" width="0.1580%" height="15" fill="rgb(210,75,5)" fg:x="399" fg:w="2"/><text x="31.7666%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5166%" y="437" width="0.1580%" height="15" fill="rgb(205,3,19)" fg:x="399" fg:w="2"/><text x="31.7666%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5956%" y="421" width="0.0790%" height="15" fill="rgb(207,181,42)" fg:x="400" fg:w="1"/><text x="31.8456%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="31.6746%" y="453" width="0.0790%" height="15" fill="rgb(229,179,43)" fg:x="401" fg:w="1"/><text x="31.9246%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.6746%" y="437" width="0.0790%" height="15" fill="rgb(246,95,30)" fg:x="401" fg:w="1"/><text x="31.9246%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.7536%" y="405" width="0.0790%" height="15" fill="rgb(234,144,45)" fg:x="402" fg:w="1"/><text x="32.0036%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7536%" y="389" width="0.0790%" height="15" fill="rgb(250,54,25)" fg:x="402" fg:w="1"/><text x="32.0036%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.7536%" y="421" width="0.1580%" height="15" fill="rgb(215,195,40)" fg:x="402" fg:w="2"/><text x="32.0036%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8325%" y="405" width="0.0790%" height="15" fill="rgb(233,188,42)" fg:x="403" fg:w="1"/><text x="32.0825%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9905%" y="357" width="0.0790%" height="15" fill="rgb(247,227,35)" fg:x="405" fg:w="1"/><text x="32.2405%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.9905%" y="341" width="0.0790%" height="15" fill="rgb(249,124,27)" fg:x="405" fg:w="1"/><text x="32.2405%" y="351.50"></text></g><g><title>plugins_core::build::Build::save (34 samples, 2.69%)</title><rect x="29.4629%" y="485" width="2.6856%" height="15" fill="rgb(219,207,25)" fg:x="373" fg:w="34"/><text x="29.7129%" y="495.50">pl..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.47%)</title><rect x="31.6746%" y="469" width="0.4739%" height="15" fill="rgb(241,216,47)" fg:x="401" fg:w="6"/><text x="31.9246%" y="479.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.39%)</title><rect x="31.7536%" y="453" width="0.3949%" height="15" fill="rgb(233,82,50)" fg:x="402" fg:w="5"/><text x="32.0036%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.39%)</title><rect x="31.7536%" y="437" width="0.3949%" height="15" fill="rgb(232,63,2)" fg:x="402" fg:w="5"/><text x="32.0036%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="31.9115%" y="421" width="0.2370%" height="15" fill="rgb(236,184,28)" fg:x="404" fg:w="3"/><text x="32.1615%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.9115%" y="405" width="0.2370%" height="15" fill="rgb(254,63,27)" fg:x="404" fg:w="3"/><text x="32.1615%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="31.9115%" y="389" width="0.2370%" height="15" fill="rgb(253,106,28)" fg:x="404" fg:w="3"/><text x="32.1615%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.9115%" y="373" width="0.2370%" height="15" fill="rgb(225,141,39)" fg:x="404" fg:w="3"/><text x="32.1615%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.0695%" y="357" width="0.0790%" height="15" fill="rgb(222,157,20)" fg:x="406" fg:w="1"/><text x="32.3195%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0695%" y="341" width="0.0790%" height="15" fill="rgb(210,190,9)" fg:x="406" fg:w="1"/><text x="32.3195%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.0695%" y="325" width="0.0790%" height="15" fill="rgb(242,167,7)" fg:x="406" fg:w="1"/><text x="32.3195%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.1485%" y="421" width="0.0790%" height="15" fill="rgb(227,82,41)" fg:x="407" fg:w="1"/><text x="32.3985%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="32.1485%" y="405" width="0.0790%" height="15" fill="rgb(222,131,13)" fg:x="407" fg:w="1"/><text x="32.3985%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="32.1485%" y="389" width="0.0790%" height="15" fill="rgb(221,98,26)" fg:x="407" fg:w="1"/><text x="32.3985%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.1485%" y="373" width="0.0790%" height="15" fill="rgb(251,63,52)" fg:x="407" fg:w="1"/><text x="32.3985%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1485%" y="357" width="0.0790%" height="15" fill="rgb(246,25,43)" fg:x="407" fg:w="1"/><text x="32.3985%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.3855%" y="293" width="0.0790%" height="15" fill="rgb(247,167,15)" fg:x="410" fg:w="1"/><text x="32.6355%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.3855%" y="277" width="0.0790%" height="15" fill="rgb(240,104,42)" fg:x="410" fg:w="1"/><text x="32.6355%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.3855%" y="309" width="0.1580%" height="15" fill="rgb(224,54,6)" fg:x="410" fg:w="2"/><text x="32.6355%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.4645%" y="293" width="0.0790%" height="15" fill="rgb(244,108,35)" fg:x="411" fg:w="1"/><text x="32.7145%" y="303.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.47%)</title><rect x="32.1485%" y="453" width="0.4739%" height="15" fill="rgb(216,154,2)" fg:x="407" fg:w="6"/><text x="32.3985%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.47%)</title><rect x="32.1485%" y="437" width="0.4739%" height="15" fill="rgb(222,8,47)" fg:x="407" fg:w="6"/><text x="32.3985%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="32.2275%" y="421" width="0.3949%" height="15" fill="rgb(252,93,1)" fg:x="408" fg:w="5"/><text x="32.4775%" y="431.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="32.3065%" y="405" width="0.3160%" height="15" fill="rgb(223,226,51)" fg:x="409" fg:w="4"/><text x="32.5565%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="32.3065%" y="389" width="0.3160%" height="15" fill="rgb(206,147,9)" fg:x="409" fg:w="4"/><text x="32.5565%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="32.3065%" y="373" width="0.3160%" height="15" fill="rgb(248,180,41)" fg:x="409" fg:w="4"/><text x="32.5565%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.3855%" y="357" width="0.2370%" height="15" fill="rgb(209,47,50)" fg:x="410" fg:w="3"/><text x="32.6355%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="32.3855%" y="341" width="0.2370%" height="15" fill="rgb(243,65,31)" fg:x="410" fg:w="3"/><text x="32.6355%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.3855%" y="325" width="0.2370%" height="15" fill="rgb(228,128,1)" fg:x="410" fg:w="3"/><text x="32.6355%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.5434%" y="309" width="0.0790%" height="15" fill="rgb(231,192,16)" fg:x="412" fg:w="1"/><text x="32.7934%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.5434%" y="293" width="0.0790%" height="15" fill="rgb(224,26,40)" fg:x="412" fg:w="1"/><text x="32.7934%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.5434%" y="277" width="0.0790%" height="15" fill="rgb(214,192,17)" fg:x="412" fg:w="1"/><text x="32.7934%" y="287.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="32.6224%" y="437" width="0.1580%" height="15" fill="rgb(225,147,18)" fg:x="413" fg:w="2"/><text x="32.8724%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.6224%" y="421" width="0.1580%" height="15" fill="rgb(205,35,11)" fg:x="413" fg:w="2"/><text x="32.8724%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.7014%" y="405" width="0.0790%" height="15" fill="rgb(242,40,42)" fg:x="414" fg:w="1"/><text x="32.9514%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="32.7014%" y="389" width="0.0790%" height="15" fill="rgb(250,170,13)" fg:x="414" fg:w="1"/><text x="32.9514%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (9 samples, 0.71%)</title><rect x="32.1485%" y="485" width="0.7109%" height="15" fill="rgb(240,161,28)" fg:x="407" fg:w="9"/><text x="32.3985%" y="495.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.71%)</title><rect x="32.1485%" y="469" width="0.7109%" height="15" fill="rgb(245,179,12)" fg:x="407" fg:w="9"/><text x="32.3985%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="32.6224%" y="453" width="0.2370%" height="15" fill="rgb(250,92,32)" fg:x="413" fg:w="3"/><text x="32.8724%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="32.7804%" y="437" width="0.0790%" height="15" fill="rgb(233,10,40)" fg:x="415" fg:w="1"/><text x="33.0304%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.7804%" y="421" width="0.0790%" height="15" fill="rgb(217,98,1)" fg:x="415" fg:w="1"/><text x="33.0304%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="32.7804%" y="405" width="0.0790%" height="15" fill="rgb(238,202,7)" fg:x="415" fg:w="1"/><text x="33.0304%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="32.8594%" y="469" width="0.0790%" height="15" fill="rgb(222,91,3)" fg:x="416" fg:w="1"/><text x="33.1094%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.8594%" y="453" width="0.0790%" height="15" fill="rgb(211,170,49)" fg:x="416" fg:w="1"/><text x="33.1094%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.8594%" y="437" width="0.0790%" height="15" fill="rgb(253,139,18)" fg:x="416" fg:w="1"/><text x="33.1094%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="33.0174%" y="373" width="0.0790%" height="15" fill="rgb(222,4,43)" fg:x="418" fg:w="1"/><text x="33.2674%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.39%)</title><rect x="32.9384%" y="405" width="0.3949%" height="15" fill="rgb(207,205,12)" fg:x="417" fg:w="5"/><text x="33.1884%" y="415.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (4 samples, 0.32%)</title><rect x="33.0174%" y="389" width="0.3160%" height="15" fill="rgb(216,159,46)" fg:x="418" fg:w="4"/><text x="33.2674%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="33.0964%" y="373" width="0.2370%" height="15" fill="rgb(236,115,1)" fg:x="419" fg:w="3"/><text x="33.3464%" y="383.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="33.0964%" y="357" width="0.2370%" height="15" fill="rgb(251,35,33)" fg:x="419" fg:w="3"/><text x="33.3464%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="33.0964%" y="341" width="0.2370%" height="15" fill="rgb(248,62,51)" fg:x="419" fg:w="3"/><text x="33.3464%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.0964%" y="325" width="0.2370%" height="15" fill="rgb(254,180,19)" fg:x="419" fg:w="3"/><text x="33.3464%" y="335.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (7 samples, 0.55%)</title><rect x="32.8594%" y="485" width="0.5529%" height="15" fill="rgb(217,100,32)" fg:x="416" fg:w="7"/><text x="33.1094%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (6 samples, 0.47%)</title><rect x="32.9384%" y="469" width="0.4739%" height="15" fill="rgb(224,71,22)" fg:x="417" fg:w="6"/><text x="33.1884%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (6 samples, 0.47%)</title><rect x="32.9384%" y="453" width="0.4739%" height="15" fill="rgb(251,185,33)" fg:x="417" fg:w="6"/><text x="33.1884%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.47%)</title><rect x="32.9384%" y="437" width="0.4739%" height="15" fill="rgb(209,75,48)" fg:x="417" fg:w="6"/><text x="33.1884%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.47%)</title><rect x="32.9384%" y="421" width="0.4739%" height="15" fill="rgb(253,190,16)" fg:x="417" fg:w="6"/><text x="33.1884%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="33.3333%" y="405" width="0.0790%" height="15" fill="rgb(226,140,1)" fg:x="422" fg:w="1"/><text x="33.5833%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3333%" y="389" width="0.0790%" height="15" fill="rgb(206,75,30)" fg:x="422" fg:w="1"/><text x="33.5833%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="33.4123%" y="469" width="0.0790%" height="15" fill="rgb(231,208,37)" fg:x="423" fg:w="1"/><text x="33.6623%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="33.4123%" y="453" width="0.0790%" height="15" fill="rgb(238,136,40)" fg:x="423" fg:w="1"/><text x="33.6623%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="33.4123%" y="437" width="0.0790%" height="15" fill="rgb(247,137,17)" fg:x="423" fg:w="1"/><text x="33.6623%" y="447.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="33.4913%" y="469" width="0.0790%" height="15" fill="rgb(240,60,40)" fg:x="424" fg:w="1"/><text x="33.7413%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="33.4913%" y="453" width="0.0790%" height="15" fill="rgb(236,68,50)" fg:x="424" fg:w="1"/><text x="33.7413%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.4913%" y="437" width="0.0790%" height="15" fill="rgb(230,42,12)" fg:x="424" fg:w="1"/><text x="33.7413%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.4913%" y="421" width="0.0790%" height="15" fill="rgb(219,16,16)" fg:x="424" fg:w="1"/><text x="33.7413%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="33.4913%" y="405" width="0.0790%" height="15" fill="rgb(220,38,35)" fg:x="424" fg:w="1"/><text x="33.7413%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.4913%" y="389" width="0.0790%" height="15" fill="rgb(228,33,1)" fg:x="424" fg:w="1"/><text x="33.7413%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4913%" y="373" width="0.0790%" height="15" fill="rgb(241,46,31)" fg:x="424" fg:w="1"/><text x="33.7413%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4913%" y="357" width="0.0790%" height="15" fill="rgb(232,58,20)" fg:x="424" fg:w="1"/><text x="33.7413%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4913%" y="341" width="0.0790%" height="15" fill="rgb(206,228,53)" fg:x="424" fg:w="1"/><text x="33.7413%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.5703%" y="437" width="0.0790%" height="15" fill="rgb(206,88,33)" fg:x="425" fg:w="1"/><text x="33.8203%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.5703%" y="421" width="0.0790%" height="15" fill="rgb(238,69,7)" fg:x="425" fg:w="1"/><text x="33.8203%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="33.6493%" y="437" width="0.0790%" height="15" fill="rgb(250,21,46)" fg:x="426" fg:w="1"/><text x="33.8993%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7283%" y="437" width="0.0790%" height="15" fill="rgb(215,212,21)" fg:x="427" fg:w="1"/><text x="33.9783%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="33.5703%" y="453" width="0.3160%" height="15" fill="rgb(211,35,12)" fg:x="425" fg:w="4"/><text x="33.8203%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.8073%" y="437" width="0.0790%" height="15" fill="rgb(231,184,16)" fg:x="428" fg:w="1"/><text x="34.0573%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.8073%" y="421" width="0.0790%" height="15" fill="rgb(242,140,15)" fg:x="428" fg:w="1"/><text x="34.0573%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8073%" y="405" width="0.0790%" height="15" fill="rgb(220,37,14)" fg:x="428" fg:w="1"/><text x="34.0573%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.8863%" y="373" width="0.0790%" height="15" fill="rgb(223,146,22)" fg:x="429" fg:w="1"/><text x="34.1363%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.8863%" y="357" width="0.0790%" height="15" fill="rgb(216,132,15)" fg:x="429" fg:w="1"/><text x="34.1363%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.8863%" y="341" width="0.0790%" height="15" fill="rgb(248,83,5)" fg:x="429" fg:w="1"/><text x="34.1363%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8863%" y="325" width="0.0790%" height="15" fill="rgb(231,206,48)" fg:x="429" fg:w="1"/><text x="34.1363%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8863%" y="309" width="0.0790%" height="15" fill="rgb(253,185,37)" fg:x="429" fg:w="1"/><text x="34.1363%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.8863%" y="293" width="0.0790%" height="15" fill="rgb(208,21,44)" fg:x="429" fg:w="1"/><text x="34.1363%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.8863%" y="277" width="0.0790%" height="15" fill="rgb(236,125,4)" fg:x="429" fg:w="1"/><text x="34.1363%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.8863%" y="261" width="0.0790%" height="15" fill="rgb(226,134,25)" fg:x="429" fg:w="1"/><text x="34.1363%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8863%" y="245" width="0.0790%" height="15" fill="rgb(250,201,12)" fg:x="429" fg:w="1"/><text x="34.1363%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8863%" y="229" width="0.0790%" height="15" fill="rgb(225,92,18)" fg:x="429" fg:w="1"/><text x="34.1363%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.8863%" y="213" width="0.0790%" height="15" fill="rgb(227,35,22)" fg:x="429" fg:w="1"/><text x="34.1363%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.8863%" y="197" width="0.0790%" height="15" fill="rgb(214,180,52)" fg:x="429" fg:w="1"/><text x="34.1363%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.8863%" y="181" width="0.0790%" height="15" fill="rgb(233,55,38)" fg:x="429" fg:w="1"/><text x="34.1363%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.8863%" y="165" width="0.0790%" height="15" fill="rgb(249,171,43)" fg:x="429" fg:w="1"/><text x="34.1363%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8863%" y="149" width="0.0790%" height="15" fill="rgb(239,87,2)" fg:x="429" fg:w="1"/><text x="34.1363%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="33.8863%" y="421" width="0.1580%" height="15" fill="rgb(248,141,5)" fg:x="429" fg:w="2"/><text x="34.1363%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="33.8863%" y="405" width="0.1580%" height="15" fill="rgb(238,33,42)" fg:x="429" fg:w="2"/><text x="34.1363%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="33.8863%" y="389" width="0.1580%" height="15" fill="rgb(231,57,19)" fg:x="429" fg:w="2"/><text x="34.1363%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="33.9652%" y="373" width="0.0790%" height="15" fill="rgb(214,78,53)" fg:x="430" fg:w="1"/><text x="34.2152%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.9652%" y="357" width="0.0790%" height="15" fill="rgb(206,132,29)" fg:x="430" fg:w="1"/><text x="34.2152%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0442%" y="373" width="0.0790%" height="15" fill="rgb(248,174,31)" fg:x="431" fg:w="1"/><text x="34.2942%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0442%" y="357" width="0.0790%" height="15" fill="rgb(221,87,13)" fg:x="431" fg:w="1"/><text x="34.2942%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0442%" y="341" width="0.0790%" height="15" fill="rgb(223,197,17)" fg:x="431" fg:w="1"/><text x="34.2942%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="34.0442%" y="325" width="0.0790%" height="15" fill="rgb(220,144,50)" fg:x="431" fg:w="1"/><text x="34.2942%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.0442%" y="309" width="0.0790%" height="15" fill="rgb(244,201,11)" fg:x="431" fg:w="1"/><text x="34.2942%" y="319.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.63%)</title><rect x="33.5703%" y="469" width="0.6319%" height="15" fill="rgb(249,81,34)" fg:x="425" fg:w="8"/><text x="33.8203%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="33.8863%" y="453" width="0.3160%" height="15" fill="rgb(205,161,12)" fg:x="429" fg:w="4"/><text x="34.1363%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="33.8863%" y="437" width="0.3160%" height="15" fill="rgb(252,139,50)" fg:x="429" fg:w="4"/><text x="34.1363%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="34.0442%" y="421" width="0.1580%" height="15" fill="rgb(205,169,14)" fg:x="431" fg:w="2"/><text x="34.2942%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="34.0442%" y="405" width="0.1580%" height="15" fill="rgb(248,198,33)" fg:x="431" fg:w="2"/><text x="34.2942%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="34.0442%" y="389" width="0.1580%" height="15" fill="rgb(236,23,21)" fg:x="431" fg:w="2"/><text x="34.2942%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="34.1232%" y="373" width="0.0790%" height="15" fill="rgb(231,13,38)" fg:x="432" fg:w="1"/><text x="34.3732%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.1232%" y="357" width="0.0790%" height="15" fill="rgb(239,139,21)" fg:x="432" fg:w="1"/><text x="34.3732%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="34.1232%" y="341" width="0.0790%" height="15" fill="rgb(222,164,45)" fg:x="432" fg:w="1"/><text x="34.3732%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.1232%" y="325" width="0.0790%" height="15" fill="rgb(230,52,27)" fg:x="432" fg:w="1"/><text x="34.3732%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="34.1232%" y="309" width="0.0790%" height="15" fill="rgb(227,143,42)" fg:x="432" fg:w="1"/><text x="34.3732%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.1232%" y="293" width="0.0790%" height="15" fill="rgb(249,127,1)" fg:x="432" fg:w="1"/><text x="34.3732%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.1232%" y="277" width="0.0790%" height="15" fill="rgb(243,107,26)" fg:x="432" fg:w="1"/><text x="34.3732%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="34.2022%" y="437" width="0.0790%" height="15" fill="rgb(225,7,45)" fg:x="433" fg:w="1"/><text x="34.4522%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2022%" y="421" width="0.0790%" height="15" fill="rgb(241,88,38)" fg:x="433" fg:w="1"/><text x="34.4522%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2022%" y="405" width="0.0790%" height="15" fill="rgb(226,121,9)" fg:x="433" fg:w="1"/><text x="34.4522%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="34.2022%" y="389" width="0.0790%" height="15" fill="rgb(253,60,29)" fg:x="433" fg:w="1"/><text x="34.4522%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.2022%" y="373" width="0.0790%" height="15" fill="rgb(244,181,39)" fg:x="433" fg:w="1"/><text x="34.4522%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (195 samples, 15.40%)</title><rect x="19.0363%" y="501" width="15.4028%" height="15" fill="rgb(252,203,31)" fg:x="241" fg:w="195"/><text x="19.2863%" y="511.50">plugins_core::build::Bui..</text></g><g><title>plugins_core::tools::set_container (13 samples, 1.03%)</title><rect x="33.4123%" y="485" width="1.0269%" height="15" fill="rgb(224,120,8)" fg:x="423" fg:w="13"/><text x="33.6623%" y="495.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="34.2022%" y="469" width="0.2370%" height="15" fill="rgb(205,171,54)" fg:x="433" fg:w="3"/><text x="34.4522%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="34.2022%" y="453" width="0.2370%" height="15" fill="rgb(235,89,11)" fg:x="433" fg:w="3"/><text x="34.4522%" y="463.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="34.2812%" y="437" width="0.1580%" height="15" fill="rgb(212,180,28)" fg:x="434" fg:w="2"/><text x="34.5312%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.2812%" y="421" width="0.1580%" height="15" fill="rgb(247,84,49)" fg:x="434" fg:w="2"/><text x="34.5312%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="34.2812%" y="405" width="0.1580%" height="15" fill="rgb(236,187,52)" fg:x="434" fg:w="2"/><text x="34.5312%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.2812%" y="389" width="0.1580%" height="15" fill="rgb(227,24,15)" fg:x="434" fg:w="2"/><text x="34.5312%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="34.2812%" y="373" width="0.1580%" height="15" fill="rgb(227,211,13)" fg:x="434" fg:w="2"/><text x="34.5312%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="34.2812%" y="357" width="0.1580%" height="15" fill="rgb(245,52,14)" fg:x="434" fg:w="2"/><text x="34.5312%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.3602%" y="341" width="0.0790%" height="15" fill="rgb(225,185,13)" fg:x="435" fg:w="1"/><text x="34.6102%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (4 samples, 0.32%)</title><rect x="34.4392%" y="501" width="0.3160%" height="15" fill="rgb(217,160,29)" fg:x="436" fg:w="4"/><text x="34.6892%" y="511.50"></text></g><g><title>plugins_core::build::Build::new (4 samples, 0.32%)</title><rect x="34.4392%" y="485" width="0.3160%" height="15" fill="rgb(216,115,53)" fg:x="436" fg:w="4"/><text x="34.6892%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="34.5182%" y="469" width="0.2370%" height="15" fill="rgb(236,99,5)" fg:x="437" fg:w="3"/><text x="34.7682%" y="479.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="34.5182%" y="453" width="0.2370%" height="15" fill="rgb(222,60,38)" fg:x="437" fg:w="3"/><text x="34.7682%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="34.5182%" y="437" width="0.2370%" height="15" fill="rgb(212,82,22)" fg:x="437" fg:w="3"/><text x="34.7682%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.5972%" y="421" width="0.1580%" height="15" fill="rgb(214,48,28)" fg:x="438" fg:w="2"/><text x="34.8472%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6761%" y="405" width="0.0790%" height="15" fill="rgb(245,196,50)" fg:x="439" fg:w="1"/><text x="34.9261%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6761%" y="389" width="0.0790%" height="15" fill="rgb(225,159,46)" fg:x="439" fg:w="1"/><text x="34.9261%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6761%" y="373" width="0.0790%" height="15" fill="rgb(207,195,48)" fg:x="439" fg:w="1"/><text x="34.9261%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="34.7551%" y="469" width="0.0790%" height="15" fill="rgb(240,73,3)" fg:x="440" fg:w="1"/><text x="35.0051%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="34.7551%" y="453" width="0.0790%" height="15" fill="rgb(245,57,23)" fg:x="440" fg:w="1"/><text x="35.0051%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="34.7551%" y="437" width="0.0790%" height="15" fill="rgb(240,75,18)" fg:x="440" fg:w="1"/><text x="35.0051%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="34.7551%" y="421" width="0.0790%" height="15" fill="rgb(238,168,12)" fg:x="440" fg:w="1"/><text x="35.0051%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="34.8341%" y="469" width="0.0790%" height="15" fill="rgb(226,20,40)" fg:x="441" fg:w="1"/><text x="35.0841%" y="479.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="34.9131%" y="469" width="0.0790%" height="15" fill="rgb(224,130,35)" fg:x="442" fg:w="1"/><text x="35.1631%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="34.9131%" y="453" width="0.0790%" height="15" fill="rgb(225,63,41)" fg:x="442" fg:w="1"/><text x="35.1631%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="34.9131%" y="437" width="0.0790%" height="15" fill="rgb(219,3,3)" fg:x="442" fg:w="1"/><text x="35.1631%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.9131%" y="421" width="0.0790%" height="15" fill="rgb(218,157,4)" fg:x="442" fg:w="1"/><text x="35.1631%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.9131%" y="405" width="0.0790%" height="15" fill="rgb(232,76,36)" fg:x="442" fg:w="1"/><text x="35.1631%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.9131%" y="389" width="0.0790%" height="15" fill="rgb(247,36,0)" fg:x="442" fg:w="1"/><text x="35.1631%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="34.9921%" y="437" width="0.0790%" height="15" fill="rgb(205,2,34)" fg:x="443" fg:w="1"/><text x="35.2421%" y="447.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="34.9921%" y="421" width="0.0790%" height="15" fill="rgb(239,136,13)" fg:x="443" fg:w="1"/><text x="35.2421%" y="431.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="34.9921%" y="405" width="0.0790%" height="15" fill="rgb(253,122,12)" fg:x="443" fg:w="1"/><text x="35.2421%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.9921%" y="389" width="0.0790%" height="15" fill="rgb(222,174,7)" fg:x="443" fg:w="1"/><text x="35.2421%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.9921%" y="373" width="0.0790%" height="15" fill="rgb(208,191,42)" fg:x="443" fg:w="1"/><text x="35.2421%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0711%" y="405" width="0.0790%" height="15" fill="rgb(237,212,15)" fg:x="444" fg:w="1"/><text x="35.3211%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0711%" y="389" width="0.0790%" height="15" fill="rgb(215,65,20)" fg:x="444" fg:w="1"/><text x="35.3211%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.0711%" y="373" width="0.0790%" height="15" fill="rgb(232,103,11)" fg:x="444" fg:w="1"/><text x="35.3211%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.0711%" y="357" width="0.0790%" height="15" fill="rgb(235,148,18)" fg:x="444" fg:w="1"/><text x="35.3211%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.0711%" y="341" width="0.0790%" height="15" fill="rgb(240,173,7)" fg:x="444" fg:w="1"/><text x="35.3211%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.0711%" y="325" width="0.0790%" height="15" fill="rgb(228,182,25)" fg:x="444" fg:w="1"/><text x="35.3211%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.0711%" y="309" width="0.0790%" height="15" fill="rgb(247,3,52)" fg:x="444" fg:w="1"/><text x="35.3211%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.0711%" y="293" width="0.0790%" height="15" fill="rgb(226,155,8)" fg:x="444" fg:w="1"/><text x="35.3211%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.0711%" y="277" width="0.0790%" height="15" fill="rgb(243,195,38)" fg:x="444" fg:w="1"/><text x="35.3211%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.0711%" y="261" width="0.0790%" height="15" fill="rgb(254,181,33)" fg:x="444" fg:w="1"/><text x="35.3211%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.0711%" y="245" width="0.0790%" height="15" fill="rgb(232,98,23)" fg:x="444" fg:w="1"/><text x="35.3211%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0711%" y="229" width="0.0790%" height="15" fill="rgb(205,23,10)" fg:x="444" fg:w="1"/><text x="35.3211%" y="239.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="35.1501%" y="389" width="0.0790%" height="15" fill="rgb(212,124,38)" fg:x="445" fg:w="1"/><text x="35.4001%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="35.1501%" y="373" width="0.0790%" height="15" fill="rgb(228,207,2)" fg:x="445" fg:w="1"/><text x="35.4001%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1501%" y="357" width="0.0790%" height="15" fill="rgb(215,120,22)" fg:x="445" fg:w="1"/><text x="35.4001%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1501%" y="341" width="0.0790%" height="15" fill="rgb(251,172,33)" fg:x="445" fg:w="1"/><text x="35.4001%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.1501%" y="325" width="0.0790%" height="15" fill="rgb(250,83,2)" fg:x="445" fg:w="1"/><text x="35.4001%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.1501%" y="309" width="0.0790%" height="15" fill="rgb(210,132,53)" fg:x="445" fg:w="1"/><text x="35.4001%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.1501%" y="293" width="0.0790%" height="15" fill="rgb(221,208,36)" fg:x="445" fg:w="1"/><text x="35.4001%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.1501%" y="277" width="0.0790%" height="15" fill="rgb(205,192,46)" fg:x="445" fg:w="1"/><text x="35.4001%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.1501%" y="261" width="0.0790%" height="15" fill="rgb(223,163,14)" fg:x="445" fg:w="1"/><text x="35.4001%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.1501%" y="245" width="0.0790%" height="15" fill="rgb(218,41,28)" fg:x="445" fg:w="1"/><text x="35.4001%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.1501%" y="229" width="0.0790%" height="15" fill="rgb(235,104,10)" fg:x="445" fg:w="1"/><text x="35.4001%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.1501%" y="213" width="0.0790%" height="15" fill="rgb(246,17,4)" fg:x="445" fg:w="1"/><text x="35.4001%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.1501%" y="197" width="0.0790%" height="15" fill="rgb(240,7,16)" fg:x="445" fg:w="1"/><text x="35.4001%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.1501%" y="181" width="0.0790%" height="15" fill="rgb(213,160,23)" fg:x="445" fg:w="1"/><text x="35.4001%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.1501%" y="165" width="0.0790%" height="15" fill="rgb(251,179,49)" fg:x="445" fg:w="1"/><text x="35.4001%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1501%" y="149" width="0.0790%" height="15" fill="rgb(247,198,10)" fg:x="445" fg:w="1"/><text x="35.4001%" y="159.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="35.2291%" y="309" width="0.0790%" height="15" fill="rgb(220,65,29)" fg:x="446" fg:w="1"/><text x="35.4791%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2291%" y="293" width="0.0790%" height="15" fill="rgb(237,171,28)" fg:x="446" fg:w="1"/><text x="35.4791%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2291%" y="277" width="0.0790%" height="15" fill="rgb(228,44,26)" fg:x="446" fg:w="1"/><text x="35.4791%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="35.2291%" y="261" width="0.0790%" height="15" fill="rgb(216,210,27)" fg:x="446" fg:w="1"/><text x="35.4791%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="35.0711%" y="421" width="0.3160%" height="15" fill="rgb(252,10,17)" fg:x="444" fg:w="4"/><text x="35.3211%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="35.1501%" y="405" width="0.2370%" height="15" fill="rgb(214,172,30)" fg:x="445" fg:w="3"/><text x="35.4001%" y="415.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="35.2291%" y="389" width="0.1580%" height="15" fill="rgb(253,130,48)" fg:x="446" fg:w="2"/><text x="35.4791%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="35.2291%" y="373" width="0.1580%" height="15" fill="rgb(226,99,43)" fg:x="446" fg:w="2"/><text x="35.4791%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.2291%" y="357" width="0.1580%" height="15" fill="rgb(239,111,26)" fg:x="446" fg:w="2"/><text x="35.4791%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="35.2291%" y="341" width="0.1580%" height="15" fill="rgb(240,27,53)" fg:x="446" fg:w="2"/><text x="35.4791%" y="351.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="35.2291%" y="325" width="0.1580%" height="15" fill="rgb(254,163,12)" fg:x="446" fg:w="2"/><text x="35.4791%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.3081%" y="309" width="0.0790%" height="15" fill="rgb(225,51,48)" fg:x="447" fg:w="1"/><text x="35.5581%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.3081%" y="293" width="0.0790%" height="15" fill="rgb(205,19,32)" fg:x="447" fg:w="1"/><text x="35.5581%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.3081%" y="277" width="0.0790%" height="15" fill="rgb(218,119,26)" fg:x="447" fg:w="1"/><text x="35.5581%" y="287.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="35.3870%" y="421" width="0.0790%" height="15" fill="rgb(231,173,33)" fg:x="448" fg:w="1"/><text x="35.6370%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.3870%" y="405" width="0.0790%" height="15" fill="rgb(241,100,29)" fg:x="448" fg:w="1"/><text x="35.6370%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.3870%" y="389" width="0.0790%" height="15" fill="rgb(250,194,34)" fg:x="448" fg:w="1"/><text x="35.6370%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (11 samples, 0.87%)</title><rect x="34.7551%" y="501" width="0.8689%" height="15" fill="rgb(215,23,50)" fg:x="440" fg:w="11"/><text x="35.0051%" y="511.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.87%)</title><rect x="34.7551%" y="485" width="0.8689%" height="15" fill="rgb(206,49,37)" fg:x="440" fg:w="11"/><text x="35.0051%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.63%)</title><rect x="34.9921%" y="469" width="0.6319%" height="15" fill="rgb(247,39,21)" fg:x="443" fg:w="8"/><text x="35.2421%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="34.9921%" y="453" width="0.6319%" height="15" fill="rgb(209,220,15)" fg:x="443" fg:w="8"/><text x="35.2421%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.55%)</title><rect x="35.0711%" y="437" width="0.5529%" height="15" fill="rgb(206,41,33)" fg:x="444" fg:w="7"/><text x="35.3211%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="35.4660%" y="421" width="0.1580%" height="15" fill="rgb(221,225,45)" fg:x="449" fg:w="2"/><text x="35.7160%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.5450%" y="405" width="0.0790%" height="15" fill="rgb(216,27,18)" fg:x="450" fg:w="1"/><text x="35.7950%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.5450%" y="389" width="0.0790%" height="15" fill="rgb(250,193,34)" fg:x="450" fg:w="1"/><text x="35.7950%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.6240%" y="485" width="0.0790%" height="15" fill="rgb(227,215,20)" fg:x="451" fg:w="1"/><text x="35.8740%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.6240%" y="469" width="0.0790%" height="15" fill="rgb(242,211,27)" fg:x="451" fg:w="1"/><text x="35.8740%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.6240%" y="453" width="0.0790%" height="15" fill="rgb(229,190,30)" fg:x="451" fg:w="1"/><text x="35.8740%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.6240%" y="437" width="0.0790%" height="15" fill="rgb(253,31,29)" fg:x="451" fg:w="1"/><text x="35.8740%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.6240%" y="421" width="0.0790%" height="15" fill="rgb(229,177,52)" fg:x="451" fg:w="1"/><text x="35.8740%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.6240%" y="405" width="0.0790%" height="15" fill="rgb(226,88,8)" fg:x="451" fg:w="1"/><text x="35.8740%" y="415.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="35.7030%" y="469" width="0.1580%" height="15" fill="rgb(214,55,27)" fg:x="452" fg:w="2"/><text x="35.9530%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.7030%" y="453" width="0.1580%" height="15" fill="rgb(233,202,5)" fg:x="452" fg:w="2"/><text x="35.9530%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.7030%" y="437" width="0.1580%" height="15" fill="rgb(251,49,30)" fg:x="452" fg:w="2"/><text x="35.9530%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="35.7820%" y="421" width="0.0790%" height="15" fill="rgb(235,18,52)" fg:x="453" fg:w="1"/><text x="36.0320%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="35.8610%" y="469" width="0.1580%" height="15" fill="rgb(250,111,51)" fg:x="454" fg:w="2"/><text x="36.1110%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="35.8610%" y="453" width="0.1580%" height="15" fill="rgb(218,13,25)" fg:x="454" fg:w="2"/><text x="36.1110%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="35.8610%" y="437" width="0.1580%" height="15" fill="rgb(248,96,7)" fg:x="454" fg:w="2"/><text x="36.1110%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.8610%" y="421" width="0.1580%" height="15" fill="rgb(217,31,15)" fg:x="454" fg:w="2"/><text x="36.1110%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.9400%" y="405" width="0.0790%" height="15" fill="rgb(228,59,49)" fg:x="455" fg:w="1"/><text x="36.1900%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9400%" y="389" width="0.0790%" height="15" fill="rgb(210,152,38)" fg:x="455" fg:w="1"/><text x="36.1900%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.9400%" y="373" width="0.0790%" height="15" fill="rgb(206,71,11)" fg:x="455" fg:w="1"/><text x="36.1900%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="36.0190%" y="453" width="0.0790%" height="15" fill="rgb(244,199,5)" fg:x="456" fg:w="1"/><text x="36.2690%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="36.0190%" y="437" width="0.0790%" height="15" fill="rgb(253,49,1)" fg:x="456" fg:w="1"/><text x="36.2690%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (6 samples, 0.47%)</title><rect x="35.7030%" y="485" width="0.4739%" height="15" fill="rgb(225,206,40)" fg:x="452" fg:w="6"/><text x="35.9530%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="36.0190%" y="469" width="0.1580%" height="15" fill="rgb(243,116,47)" fg:x="456" fg:w="2"/><text x="36.2690%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.0979%" y="453" width="0.0790%" height="15" fill="rgb(219,225,16)" fg:x="457" fg:w="1"/><text x="36.3479%" y="463.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="36.1769%" y="485" width="0.0790%" height="15" fill="rgb(233,29,47)" fg:x="458" fg:w="1"/><text x="36.4269%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="36.1769%" y="469" width="0.0790%" height="15" fill="rgb(250,179,18)" fg:x="458" fg:w="1"/><text x="36.4269%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="36.1769%" y="453" width="0.0790%" height="15" fill="rgb(215,176,6)" fg:x="458" fg:w="1"/><text x="36.4269%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="36.1769%" y="437" width="0.0790%" height="15" fill="rgb(214,117,39)" fg:x="458" fg:w="1"/><text x="36.4269%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5719%" y="405" width="0.0790%" height="15" fill="rgb(247,183,36)" fg:x="463" fg:w="1"/><text x="36.8219%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5719%" y="389" width="0.0790%" height="15" fill="rgb(237,200,3)" fg:x="463" fg:w="1"/><text x="36.8219%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5719%" y="373" width="0.0790%" height="15" fill="rgb(212,220,24)" fg:x="463" fg:w="1"/><text x="36.8219%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5719%" y="357" width="0.0790%" height="15" fill="rgb(245,216,20)" fg:x="463" fg:w="1"/><text x="36.8219%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.5719%" y="341" width="0.0790%" height="15" fill="rgb(219,124,7)" fg:x="463" fg:w="1"/><text x="36.8219%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.5719%" y="325" width="0.0790%" height="15" fill="rgb(227,167,8)" fg:x="463" fg:w="1"/><text x="36.8219%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.5719%" y="309" width="0.0790%" height="15" fill="rgb(241,37,2)" fg:x="463" fg:w="1"/><text x="36.8219%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5719%" y="293" width="0.0790%" height="15" fill="rgb(238,134,33)" fg:x="463" fg:w="1"/><text x="36.8219%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5719%" y="277" width="0.0790%" height="15" fill="rgb(248,48,27)" fg:x="463" fg:w="1"/><text x="36.8219%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.5719%" y="261" width="0.0790%" height="15" fill="rgb(212,14,16)" fg:x="463" fg:w="1"/><text x="36.8219%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.5719%" y="245" width="0.0790%" height="15" fill="rgb(217,205,37)" fg:x="463" fg:w="1"/><text x="36.8219%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.5719%" y="229" width="0.0790%" height="15" fill="rgb(233,185,47)" fg:x="463" fg:w="1"/><text x="36.8219%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.5719%" y="213" width="0.0790%" height="15" fill="rgb(244,88,8)" fg:x="463" fg:w="1"/><text x="36.8219%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5719%" y="197" width="0.0790%" height="15" fill="rgb(213,0,20)" fg:x="463" fg:w="1"/><text x="36.8219%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="36.4929%" y="453" width="0.2370%" height="15" fill="rgb(238,159,36)" fg:x="462" fg:w="3"/><text x="36.7429%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="36.5719%" y="437" width="0.1580%" height="15" fill="rgb(253,173,17)" fg:x="463" fg:w="2"/><text x="36.8219%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="36.5719%" y="421" width="0.1580%" height="15" fill="rgb(221,23,28)" fg:x="463" fg:w="2"/><text x="36.8219%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.6509%" y="405" width="0.0790%" height="15" fill="rgb(218,113,15)" fg:x="464" fg:w="1"/><text x="36.9009%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.6509%" y="389" width="0.0790%" height="15" fill="rgb(233,58,3)" fg:x="464" fg:w="1"/><text x="36.9009%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.6509%" y="373" width="0.0790%" height="15" fill="rgb(250,46,35)" fg:x="464" fg:w="1"/><text x="36.9009%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.6509%" y="357" width="0.0790%" height="15" fill="rgb(210,169,11)" fg:x="464" fg:w="1"/><text x="36.9009%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.6509%" y="341" width="0.0790%" height="15" fill="rgb(246,88,19)" fg:x="464" fg:w="1"/><text x="36.9009%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.6509%" y="325" width="0.0790%" height="15" fill="rgb(206,81,49)" fg:x="464" fg:w="1"/><text x="36.9009%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.8878%" y="309" width="0.0790%" height="15" fill="rgb(232,144,18)" fg:x="467" fg:w="1"/><text x="37.1378%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.8878%" y="293" width="0.0790%" height="15" fill="rgb(235,2,27)" fg:x="467" fg:w="1"/><text x="37.1378%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.8878%" y="277" width="0.0790%" height="15" fill="rgb(239,157,39)" fg:x="467" fg:w="1"/><text x="37.1378%" y="287.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="36.8088%" y="405" width="0.3160%" height="15" fill="rgb(220,11,17)" fg:x="466" fg:w="4"/><text x="37.0588%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="36.8878%" y="389" width="0.2370%" height="15" fill="rgb(243,94,50)" fg:x="467" fg:w="3"/><text x="37.1378%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="36.8878%" y="373" width="0.2370%" height="15" fill="rgb(218,22,0)" fg:x="467" fg:w="3"/><text x="37.1378%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="36.8878%" y="357" width="0.2370%" height="15" fill="rgb(249,70,21)" fg:x="467" fg:w="3"/><text x="37.1378%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="36.8878%" y="341" width="0.2370%" height="15" fill="rgb(245,111,46)" fg:x="467" fg:w="3"/><text x="37.1378%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="36.8878%" y="325" width="0.2370%" height="15" fill="rgb(244,183,12)" fg:x="467" fg:w="3"/><text x="37.1378%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.9668%" y="309" width="0.1580%" height="15" fill="rgb(207,117,0)" fg:x="468" fg:w="2"/><text x="37.2168%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.9668%" y="293" width="0.1580%" height="15" fill="rgb(206,20,43)" fg:x="468" fg:w="2"/><text x="37.2168%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="37.1248%" y="389" width="0.0790%" height="15" fill="rgb(221,104,11)" fg:x="470" fg:w="1"/><text x="37.3748%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.55%)</title><rect x="36.8088%" y="437" width="0.5529%" height="15" fill="rgb(254,36,50)" fg:x="466" fg:w="7"/><text x="37.0588%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.55%)</title><rect x="36.8088%" y="421" width="0.5529%" height="15" fill="rgb(252,17,15)" fg:x="466" fg:w="7"/><text x="37.0588%" y="431.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="37.1248%" y="405" width="0.2370%" height="15" fill="rgb(219,129,43)" fg:x="470" fg:w="3"/><text x="37.3748%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="37.2038%" y="389" width="0.1580%" height="15" fill="rgb(205,34,45)" fg:x="471" fg:w="2"/><text x="37.4538%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.2038%" y="373" width="0.1580%" height="15" fill="rgb(251,201,32)" fg:x="471" fg:w="2"/><text x="37.4538%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="37.2038%" y="357" width="0.1580%" height="15" fill="rgb(205,56,0)" fg:x="471" fg:w="2"/><text x="37.4538%" y="367.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="37.2828%" y="341" width="0.0790%" height="15" fill="rgb(211,193,27)" fg:x="472" fg:w="1"/><text x="37.5328%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.2828%" y="325" width="0.0790%" height="15" fill="rgb(231,100,42)" fg:x="472" fg:w="1"/><text x="37.5328%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.3618%" y="405" width="0.0790%" height="15" fill="rgb(245,85,27)" fg:x="473" fg:w="1"/><text x="37.6118%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.3618%" y="389" width="0.0790%" height="15" fill="rgb(241,76,24)" fg:x="473" fg:w="1"/><text x="37.6118%" y="399.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="37.3618%" y="437" width="0.1580%" height="15" fill="rgb(249,157,15)" fg:x="473" fg:w="2"/><text x="37.6118%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.3618%" y="421" width="0.1580%" height="15" fill="rgb(222,218,25)" fg:x="473" fg:w="2"/><text x="37.6118%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.4408%" y="405" width="0.0790%" height="15" fill="rgb(252,156,52)" fg:x="474" fg:w="1"/><text x="37.6908%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="37.5197%" y="421" width="0.0790%" height="15" fill="rgb(211,185,7)" fg:x="475" fg:w="1"/><text x="37.7697%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6777%" y="405" width="0.0790%" height="15" fill="rgb(234,108,24)" fg:x="477" fg:w="1"/><text x="37.9277%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6777%" y="389" width="0.0790%" height="15" fill="rgb(227,218,2)" fg:x="477" fg:w="1"/><text x="37.9277%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.6777%" y="373" width="0.0790%" height="15" fill="rgb(224,0,36)" fg:x="477" fg:w="1"/><text x="37.9277%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.58%)</title><rect x="36.3349%" y="469" width="1.5798%" height="15" fill="rgb(233,201,10)" fg:x="460" fg:w="20"/><text x="36.5849%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (15 samples, 1.18%)</title><rect x="36.7299%" y="453" width="1.1848%" height="15" fill="rgb(252,209,14)" fg:x="465" fg:w="15"/><text x="36.9799%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.39%)</title><rect x="37.5197%" y="437" width="0.3949%" height="15" fill="rgb(205,93,49)" fg:x="475" fg:w="5"/><text x="37.7697%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="37.5987%" y="421" width="0.3160%" height="15" fill="rgb(234,116,45)" fg:x="476" fg:w="4"/><text x="37.8487%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="37.7567%" y="405" width="0.1580%" height="15" fill="rgb(248,89,35)" fg:x="478" fg:w="2"/><text x="38.0067%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="37.7567%" y="389" width="0.1580%" height="15" fill="rgb(233,167,45)" fg:x="478" fg:w="2"/><text x="38.0067%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="37.8357%" y="373" width="0.0790%" height="15" fill="rgb(248,228,14)" fg:x="479" fg:w="1"/><text x="38.0857%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="37.8357%" y="357" width="0.0790%" height="15" fill="rgb(246,91,14)" fg:x="479" fg:w="1"/><text x="38.0857%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.9147%" y="469" width="0.1580%" height="15" fill="rgb(227,142,5)" fg:x="480" fg:w="2"/><text x="38.1647%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9937%" y="453" width="0.0790%" height="15" fill="rgb(221,63,33)" fg:x="481" fg:w="1"/><text x="38.2437%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9937%" y="437" width="0.0790%" height="15" fill="rgb(233,49,0)" fg:x="481" fg:w="1"/><text x="38.2437%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9937%" y="421" width="0.0790%" height="15" fill="rgb(251,115,38)" fg:x="481" fg:w="1"/><text x="38.2437%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.9937%" y="405" width="0.0790%" height="15" fill="rgb(231,214,32)" fg:x="481" fg:w="1"/><text x="38.2437%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.9937%" y="389" width="0.0790%" height="15" fill="rgb(248,73,46)" fg:x="481" fg:w="1"/><text x="38.2437%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.9937%" y="373" width="0.0790%" height="15" fill="rgb(237,156,4)" fg:x="481" fg:w="1"/><text x="38.2437%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.9937%" y="357" width="0.0790%" height="15" fill="rgb(227,132,2)" fg:x="481" fg:w="1"/><text x="38.2437%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.9937%" y="341" width="0.0790%" height="15" fill="rgb(248,161,9)" fg:x="481" fg:w="1"/><text x="38.2437%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.9937%" y="325" width="0.0790%" height="15" fill="rgb(238,77,38)" fg:x="481" fg:w="1"/><text x="38.2437%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.9937%" y="309" width="0.0790%" height="15" fill="rgb(222,166,40)" fg:x="481" fg:w="1"/><text x="38.2437%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.9937%" y="293" width="0.0790%" height="15" fill="rgb(214,168,45)" fg:x="481" fg:w="1"/><text x="38.2437%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.9937%" y="277" width="0.0790%" height="15" fill="rgb(226,64,37)" fg:x="481" fg:w="1"/><text x="38.2437%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9937%" y="261" width="0.0790%" height="15" fill="rgb(232,210,43)" fg:x="481" fg:w="1"/><text x="38.2437%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.0727%" y="421" width="0.0790%" height="15" fill="rgb(214,76,33)" fg:x="482" fg:w="1"/><text x="38.3227%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.0727%" y="405" width="0.0790%" height="15" fill="rgb(210,78,5)" fg:x="482" fg:w="1"/><text x="38.3227%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.0727%" y="389" width="0.0790%" height="15" fill="rgb(211,107,37)" fg:x="482" fg:w="1"/><text x="38.3227%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0727%" y="373" width="0.0790%" height="15" fill="rgb(249,67,16)" fg:x="482" fg:w="1"/><text x="38.3227%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0727%" y="357" width="0.0790%" height="15" fill="rgb(222,114,31)" fg:x="482" fg:w="1"/><text x="38.3227%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.0727%" y="341" width="0.0790%" height="15" fill="rgb(242,118,19)" fg:x="482" fg:w="1"/><text x="38.3227%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.0727%" y="325" width="0.0790%" height="15" fill="rgb(223,115,1)" fg:x="482" fg:w="1"/><text x="38.3227%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.0727%" y="309" width="0.0790%" height="15" fill="rgb(241,182,54)" fg:x="482" fg:w="1"/><text x="38.3227%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0727%" y="293" width="0.0790%" height="15" fill="rgb(244,166,36)" fg:x="482" fg:w="1"/><text x="38.3227%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0727%" y="277" width="0.0790%" height="15" fill="rgb(241,52,43)" fg:x="482" fg:w="1"/><text x="38.3227%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.0727%" y="261" width="0.0790%" height="15" fill="rgb(236,82,9)" fg:x="482" fg:w="1"/><text x="38.3227%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.0727%" y="245" width="0.0790%" height="15" fill="rgb(241,119,0)" fg:x="482" fg:w="1"/><text x="38.3227%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.0727%" y="229" width="0.0790%" height="15" fill="rgb(221,19,22)" fg:x="482" fg:w="1"/><text x="38.3227%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.0727%" y="213" width="0.0790%" height="15" fill="rgb(254,144,35)" fg:x="482" fg:w="1"/><text x="38.3227%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0727%" y="197" width="0.0790%" height="15" fill="rgb(246,132,30)" fg:x="482" fg:w="1"/><text x="38.3227%" y="207.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (388 samples, 30.65%)</title><rect x="7.5829%" y="517" width="30.6477%" height="15" fill="rgb(234,69,28)" fg:x="96" fg:w="388"/><text x="7.8329%" y="527.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (33 samples, 2.61%)</title><rect x="35.6240%" y="501" width="2.6066%" height="15" fill="rgb(219,106,47)" fg:x="451" fg:w="33"/><text x="35.8740%" y="511.50">pl..</text></g><g><title>plugins_core::build::Build::save (25 samples, 1.97%)</title><rect x="36.2559%" y="485" width="1.9747%" height="15" fill="rgb(218,79,24)" fg:x="459" fg:w="25"/><text x="36.5059%" y="495.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.0727%" y="469" width="0.1580%" height="15" fill="rgb(225,26,21)" fg:x="482" fg:w="2"/><text x="38.3227%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="38.0727%" y="453" width="0.1580%" height="15" fill="rgb(217,68,49)" fg:x="482" fg:w="2"/><text x="38.3227%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="38.0727%" y="437" width="0.1580%" height="15" fill="rgb(220,204,28)" fg:x="482" fg:w="2"/><text x="38.3227%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.1517%" y="421" width="0.0790%" height="15" fill="rgb(237,208,43)" fg:x="483" fg:w="1"/><text x="38.4017%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.1517%" y="405" width="0.0790%" height="15" fill="rgb(213,97,42)" fg:x="483" fg:w="1"/><text x="38.4017%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.1517%" y="389" width="0.0790%" height="15" fill="rgb(238,96,52)" fg:x="483" fg:w="1"/><text x="38.4017%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.1517%" y="373" width="0.0790%" height="15" fill="rgb(228,14,13)" fg:x="483" fg:w="1"/><text x="38.4017%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.1517%" y="357" width="0.0790%" height="15" fill="rgb(219,123,13)" fg:x="483" fg:w="1"/><text x="38.4017%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.1517%" y="341" width="0.0790%" height="15" fill="rgb(216,144,17)" fg:x="483" fg:w="1"/><text x="38.4017%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.1517%" y="325" width="0.0790%" height="15" fill="rgb(230,228,29)" fg:x="483" fg:w="1"/><text x="38.4017%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1517%" y="309" width="0.0790%" height="15" fill="rgb(233,18,5)" fg:x="483" fg:w="1"/><text x="38.4017%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="38.2306%" y="517" width="0.0790%" height="15" fill="rgb(233,197,12)" fg:x="484" fg:w="1"/><text x="38.4806%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.2306%" y="501" width="0.0790%" height="15" fill="rgb(234,140,29)" fg:x="484" fg:w="1"/><text x="38.4806%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3096%" y="485" width="0.0790%" height="15" fill="rgb(233,113,19)" fg:x="485" fg:w="1"/><text x="38.5596%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3096%" y="469" width="0.0790%" height="15" fill="rgb(246,209,13)" fg:x="485" fg:w="1"/><text x="38.5596%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.3096%" y="453" width="0.0790%" height="15" fill="rgb(242,79,54)" fg:x="485" fg:w="1"/><text x="38.5596%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.3096%" y="437" width="0.0790%" height="15" fill="rgb(219,73,16)" fg:x="485" fg:w="1"/><text x="38.5596%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.3096%" y="421" width="0.0790%" height="15" fill="rgb(224,52,10)" fg:x="485" fg:w="1"/><text x="38.5596%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3096%" y="405" width="0.0790%" height="15" fill="rgb(237,179,5)" fg:x="485" fg:w="1"/><text x="38.5596%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3096%" y="389" width="0.0790%" height="15" fill="rgb(231,20,6)" fg:x="485" fg:w="1"/><text x="38.5596%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.3096%" y="373" width="0.0790%" height="15" fill="rgb(253,171,45)" fg:x="485" fg:w="1"/><text x="38.5596%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.3096%" y="357" width="0.0790%" height="15" fill="rgb(230,75,49)" fg:x="485" fg:w="1"/><text x="38.5596%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.3096%" y="341" width="0.0790%" height="15" fill="rgb(216,83,46)" fg:x="485" fg:w="1"/><text x="38.5596%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.3096%" y="325" width="0.0790%" height="15" fill="rgb(236,56,9)" fg:x="485" fg:w="1"/><text x="38.5596%" y="335.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="38.3096%" y="309" width="0.0790%" height="15" fill="rgb(215,28,34)" fg:x="485" fg:w="1"/><text x="38.5596%" y="319.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.3096%" y="293" width="0.0790%" height="15" fill="rgb(230,222,20)" fg:x="485" fg:w="1"/><text x="38.5596%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="38.3096%" y="501" width="0.1580%" height="15" fill="rgb(235,209,51)" fg:x="485" fg:w="2"/><text x="38.5596%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3886%" y="485" width="0.0790%" height="15" fill="rgb(235,167,1)" fg:x="486" fg:w="1"/><text x="38.6386%" y="495.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="38.4676%" y="501" width="0.0790%" height="15" fill="rgb(248,220,0)" fg:x="487" fg:w="1"/><text x="38.7176%" y="511.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="38.4676%" y="485" width="0.0790%" height="15" fill="rgb(239,0,18)" fg:x="487" fg:w="1"/><text x="38.7176%" y="495.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="38.4676%" y="469" width="0.0790%" height="15" fill="rgb(229,179,11)" fg:x="487" fg:w="1"/><text x="38.7176%" y="479.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="38.4676%" y="453" width="0.0790%" height="15" fill="rgb(226,116,53)" fg:x="487" fg:w="1"/><text x="38.7176%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="38.4676%" y="437" width="0.0790%" height="15" fill="rgb(218,1,49)" fg:x="487" fg:w="1"/><text x="38.7176%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="38.4676%" y="421" width="0.0790%" height="15" fill="rgb(208,184,47)" fg:x="487" fg:w="1"/><text x="38.7176%" y="431.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="38.4676%" y="405" width="0.0790%" height="15" fill="rgb(238,174,3)" fg:x="487" fg:w="1"/><text x="38.7176%" y="415.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="38.4676%" y="389" width="0.0790%" height="15" fill="rgb(247,188,6)" fg:x="487" fg:w="1"/><text x="38.7176%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="38.5466%" y="469" width="0.0790%" height="15" fill="rgb(211,165,46)" fg:x="488" fg:w="1"/><text x="38.7966%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="38.5466%" y="453" width="0.0790%" height="15" fill="rgb(222,190,10)" fg:x="488" fg:w="1"/><text x="38.7966%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5466%" y="437" width="0.0790%" height="15" fill="rgb(206,185,3)" fg:x="488" fg:w="1"/><text x="38.7966%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="38.6256%" y="421" width="0.0790%" height="15" fill="rgb(244,125,37)" fg:x="489" fg:w="1"/><text x="38.8756%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.6256%" y="405" width="0.0790%" height="15" fill="rgb(211,43,7)" fg:x="489" fg:w="1"/><text x="38.8756%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.6256%" y="389" width="0.0790%" height="15" fill="rgb(250,41,42)" fg:x="489" fg:w="1"/><text x="38.8756%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.6256%" y="373" width="0.0790%" height="15" fill="rgb(254,54,42)" fg:x="489" fg:w="1"/><text x="38.8756%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.6256%" y="357" width="0.0790%" height="15" fill="rgb(213,71,43)" fg:x="489" fg:w="1"/><text x="38.8756%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.6256%" y="341" width="0.0790%" height="15" fill="rgb(249,3,44)" fg:x="489" fg:w="1"/><text x="38.8756%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.6256%" y="325" width="0.0790%" height="15" fill="rgb(229,80,41)" fg:x="489" fg:w="1"/><text x="38.8756%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6256%" y="309" width="0.0790%" height="15" fill="rgb(231,25,28)" fg:x="489" fg:w="1"/><text x="38.8756%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="38.7046%" y="389" width="0.1580%" height="15" fill="rgb(208,79,48)" fg:x="490" fg:w="2"/><text x="38.9546%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.7046%" y="373" width="0.1580%" height="15" fill="rgb(207,196,38)" fg:x="490" fg:w="2"/><text x="38.9546%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.7046%" y="357" width="0.1580%" height="15" fill="rgb(228,105,49)" fg:x="490" fg:w="2"/><text x="38.9546%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="38.7046%" y="341" width="0.1580%" height="15" fill="rgb(237,99,15)" fg:x="490" fg:w="2"/><text x="38.9546%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="38.7046%" y="325" width="0.1580%" height="15" fill="rgb(224,207,46)" fg:x="490" fg:w="2"/><text x="38.9546%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="38.7046%" y="309" width="0.1580%" height="15" fill="rgb(249,117,50)" fg:x="490" fg:w="2"/><text x="38.9546%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="38.7046%" y="293" width="0.1580%" height="15" fill="rgb(248,17,13)" fg:x="490" fg:w="2"/><text x="38.9546%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.39%)</title><rect x="38.7046%" y="405" width="0.3949%" height="15" fill="rgb(228,187,36)" fg:x="490" fg:w="5"/><text x="38.9546%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="38.8626%" y="389" width="0.2370%" height="15" fill="rgb(234,132,20)" fg:x="492" fg:w="3"/><text x="39.1126%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.9415%" y="373" width="0.1580%" height="15" fill="rgb(209,170,46)" fg:x="493" fg:w="2"/><text x="39.1915%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="39.0995%" y="389" width="0.0790%" height="15" fill="rgb(237,23,19)" fg:x="495" fg:w="1"/><text x="39.3495%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.0995%" y="373" width="0.0790%" height="15" fill="rgb(227,21,26)" fg:x="495" fg:w="1"/><text x="39.3495%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.0995%" y="357" width="0.0790%" height="15" fill="rgb(222,220,48)" fg:x="495" fg:w="1"/><text x="39.3495%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.0995%" y="341" width="0.0790%" height="15" fill="rgb(214,9,16)" fg:x="495" fg:w="1"/><text x="39.3495%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="39.1785%" y="389" width="0.1580%" height="15" fill="rgb(209,73,30)" fg:x="496" fg:w="2"/><text x="39.4285%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="39.1785%" y="373" width="0.1580%" height="15" fill="rgb(207,20,33)" fg:x="496" fg:w="2"/><text x="39.4285%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="39.5735%" y="373" width="0.2370%" height="15" fill="rgb(219,153,12)" fg:x="501" fg:w="3"/><text x="39.8235%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="39.5735%" y="357" width="0.2370%" height="15" fill="rgb(235,97,25)" fg:x="501" fg:w="3"/><text x="39.8235%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="39.6524%" y="341" width="0.1580%" height="15" fill="rgb(244,30,34)" fg:x="502" fg:w="2"/><text x="39.9024%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="39.6524%" y="325" width="0.1580%" height="15" fill="rgb(214,106,45)" fg:x="502" fg:w="2"/><text x="39.9024%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="39.8104%" y="373" width="0.3949%" height="15" fill="rgb(226,41,9)" fg:x="504" fg:w="5"/><text x="40.0604%" y="383.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="39.8104%" y="357" width="0.3949%" height="15" fill="rgb(253,139,29)" fg:x="504" fg:w="5"/><text x="40.0604%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="39.9684%" y="341" width="0.2370%" height="15" fill="rgb(213,205,39)" fg:x="506" fg:w="3"/><text x="40.2184%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="39.9684%" y="325" width="0.2370%" height="15" fill="rgb(209,27,10)" fg:x="506" fg:w="3"/><text x="40.2184%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="39.9684%" y="309" width="0.2370%" height="15" fill="rgb(249,142,16)" fg:x="506" fg:w="3"/><text x="40.2184%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="40.0474%" y="293" width="0.1580%" height="15" fill="rgb(242,65,12)" fg:x="507" fg:w="2"/><text x="40.2974%" y="303.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="40.0474%" y="277" width="0.1580%" height="15" fill="rgb(232,48,10)" fg:x="507" fg:w="2"/><text x="40.2974%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="40.2844%" y="357" width="0.4739%" height="15" fill="rgb(253,67,19)" fg:x="510" fg:w="6"/><text x="40.5344%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="40.4423%" y="341" width="0.3160%" height="15" fill="rgb(227,93,29)" fg:x="512" fg:w="4"/><text x="40.6923%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="40.4423%" y="325" width="0.3160%" height="15" fill="rgb(226,189,53)" fg:x="512" fg:w="4"/><text x="40.6923%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="40.4423%" y="309" width="0.3160%" height="15" fill="rgb(223,224,1)" fg:x="512" fg:w="4"/><text x="40.6923%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="40.5213%" y="293" width="0.2370%" height="15" fill="rgb(221,84,32)" fg:x="513" fg:w="3"/><text x="40.7713%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="40.5213%" y="277" width="0.2370%" height="15" fill="rgb(214,189,28)" fg:x="513" fg:w="3"/><text x="40.7713%" y="287.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="40.5213%" y="261" width="0.2370%" height="15" fill="rgb(234,7,52)" fg:x="513" fg:w="3"/><text x="40.7713%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="40.7583%" y="341" width="0.3949%" height="15" fill="rgb(249,73,31)" fg:x="516" fg:w="5"/><text x="41.0083%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="40.9163%" y="325" width="0.2370%" height="15" fill="rgb(253,153,41)" fg:x="518" fg:w="3"/><text x="41.1663%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="40.9953%" y="309" width="0.1580%" height="15" fill="rgb(249,52,34)" fg:x="519" fg:w="2"/><text x="41.2453%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="40.9953%" y="293" width="0.1580%" height="15" fill="rgb(236,177,47)" fg:x="519" fg:w="2"/><text x="41.2453%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.0742%" y="277" width="0.0790%" height="15" fill="rgb(252,185,45)" fg:x="520" fg:w="1"/><text x="41.3242%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.0742%" y="261" width="0.0790%" height="15" fill="rgb(251,15,30)" fg:x="520" fg:w="1"/><text x="41.3242%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.0742%" y="245" width="0.0790%" height="15" fill="rgb(233,31,4)" fg:x="520" fg:w="1"/><text x="41.3242%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="41.1532%" y="341" width="0.1580%" height="15" fill="rgb(254,44,24)" fg:x="521" fg:w="2"/><text x="41.4032%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="41.2322%" y="325" width="0.0790%" height="15" fill="rgb(218,54,1)" fg:x="522" fg:w="1"/><text x="41.4822%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.26%)</title><rect x="40.2054%" y="373" width="1.2638%" height="15" fill="rgb(243,209,39)" fg:x="509" fg:w="16"/><text x="40.4554%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.71%)</title><rect x="40.7583%" y="357" width="0.7109%" height="15" fill="rgb(206,75,33)" fg:x="516" fg:w="9"/><text x="41.0083%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.3112%" y="341" width="0.1580%" height="15" fill="rgb(223,108,18)" fg:x="523" fg:w="2"/><text x="41.5612%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.3902%" y="325" width="0.0790%" height="15" fill="rgb(244,89,31)" fg:x="524" fg:w="1"/><text x="41.6402%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.3902%" y="309" width="0.0790%" height="15" fill="rgb(222,167,27)" fg:x="524" fg:w="1"/><text x="41.6402%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.29%)</title><rect x="39.3365%" y="389" width="2.2907%" height="15" fill="rgb(247,41,16)" fg:x="498" fg:w="29"/><text x="39.5865%" y="399.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.4692%" y="373" width="0.1580%" height="15" fill="rgb(233,168,40)" fg:x="525" fg:w="2"/><text x="41.7192%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.69%)</title><rect x="39.0995%" y="405" width="2.6856%" height="15" fill="rgb(205,211,8)" fg:x="495" fg:w="34"/><text x="39.3495%" y="415.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.6272%" y="389" width="0.1580%" height="15" fill="rgb(238,105,11)" fg:x="527" fg:w="2"/><text x="41.8772%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="41.6272%" y="373" width="0.1580%" height="15" fill="rgb(223,142,52)" fg:x="527" fg:w="2"/><text x="41.8772%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="41.6272%" y="357" width="0.1580%" height="15" fill="rgb(238,51,33)" fg:x="527" fg:w="2"/><text x="41.8772%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="41.6272%" y="341" width="0.1580%" height="15" fill="rgb(231,188,43)" fg:x="527" fg:w="2"/><text x="41.8772%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="41.6272%" y="325" width="0.1580%" height="15" fill="rgb(216,92,17)" fg:x="527" fg:w="2"/><text x="41.8772%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="41.6272%" y="309" width="0.1580%" height="15" fill="rgb(228,2,40)" fg:x="527" fg:w="2"/><text x="41.8772%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (40 samples, 3.16%)</title><rect x="38.7046%" y="421" width="3.1596%" height="15" fill="rgb(226,73,15)" fg:x="490" fg:w="40"/><text x="38.9546%" y="431.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.7852%" y="405" width="0.0790%" height="15" fill="rgb(227,66,46)" fg:x="529" fg:w="1"/><text x="42.0352%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8641%" y="389" width="0.0790%" height="15" fill="rgb(209,71,6)" fg:x="530" fg:w="1"/><text x="42.1141%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="41.9431%" y="373" width="0.2370%" height="15" fill="rgb(246,100,25)" fg:x="531" fg:w="3"/><text x="42.1931%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.1801%" y="373" width="0.0790%" height="15" fill="rgb(248,185,27)" fg:x="534" fg:w="1"/><text x="42.4301%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1801%" y="357" width="0.0790%" height="15" fill="rgb(225,118,47)" fg:x="534" fg:w="1"/><text x="42.4301%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="42.2591%" y="357" width="0.1580%" height="15" fill="rgb(220,185,44)" fg:x="535" fg:w="2"/><text x="42.5091%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3381%" y="341" width="0.0790%" height="15" fill="rgb(227,95,24)" fg:x="536" fg:w="1"/><text x="42.5881%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="42.4171%" y="357" width="0.0790%" height="15" fill="rgb(252,84,24)" fg:x="537" fg:w="1"/><text x="42.6671%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5750%" y="341" width="0.0790%" height="15" fill="rgb(240,34,44)" fg:x="539" fg:w="1"/><text x="42.8250%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="41.8641%" y="421" width="0.8689%" height="15" fill="rgb(209,72,54)" fg:x="530" fg:w="11"/><text x="42.1141%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.87%)</title><rect x="41.8641%" y="405" width="0.8689%" height="15" fill="rgb(226,19,45)" fg:x="530" fg:w="11"/><text x="42.1141%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.79%)</title><rect x="41.9431%" y="389" width="0.7899%" height="15" fill="rgb(246,7,45)" fg:x="531" fg:w="10"/><text x="42.1931%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="42.2591%" y="373" width="0.4739%" height="15" fill="rgb(225,45,2)" fg:x="535" fg:w="6"/><text x="42.5091%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="42.4961%" y="357" width="0.2370%" height="15" fill="rgb(221,80,29)" fg:x="538" fg:w="3"/><text x="42.7461%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.6540%" y="341" width="0.0790%" height="15" fill="rgb(228,11,19)" fg:x="540" fg:w="1"/><text x="42.9040%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.6540%" y="325" width="0.0790%" height="15" fill="rgb(243,17,21)" fg:x="540" fg:w="1"/><text x="42.9040%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.9700%" y="357" width="0.1580%" height="15" fill="rgb(243,88,8)" fg:x="544" fg:w="2"/><text x="43.2200%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.1280%" y="341" width="0.1580%" height="15" fill="rgb(214,17,9)" fg:x="546" fg:w="2"/><text x="43.3780%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.3649%" y="325" width="0.0790%" height="15" fill="rgb(232,169,15)" fg:x="549" fg:w="1"/><text x="43.6149%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.4439%" y="309" width="0.0790%" height="15" fill="rgb(232,86,53)" fg:x="550" fg:w="1"/><text x="43.6939%" y="319.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="43.6019%" y="277" width="0.2370%" height="15" fill="rgb(222,100,4)" fg:x="552" fg:w="3"/><text x="43.8519%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5 samples, 0.39%)</title><rect x="43.5229%" y="309" width="0.3949%" height="15" fill="rgb(253,151,38)" fg:x="551" fg:w="5"/><text x="43.7729%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="43.5229%" y="293" width="0.3949%" height="15" fill="rgb(238,215,29)" fg:x="551" fg:w="5"/><text x="43.7729%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.8389%" y="277" width="0.0790%" height="15" fill="rgb(205,128,53)" fg:x="555" fg:w="1"/><text x="44.0889%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.8389%" y="261" width="0.0790%" height="15" fill="rgb(248,183,14)" fg:x="555" fg:w="1"/><text x="44.0889%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.8389%" y="245" width="0.0790%" height="15" fill="rgb(244,172,35)" fg:x="555" fg:w="1"/><text x="44.0889%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.9968%" y="293" width="0.0790%" height="15" fill="rgb(234,93,19)" fg:x="557" fg:w="1"/><text x="44.2468%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.26%)</title><rect x="42.8910%" y="389" width="1.2638%" height="15" fill="rgb(227,109,7)" fg:x="543" fg:w="16"/><text x="43.1410%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.26%)</title><rect x="42.8910%" y="373" width="1.2638%" height="15" fill="rgb(233,136,54)" fg:x="543" fg:w="16"/><text x="43.1410%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="43.1280%" y="357" width="1.0269%" height="15" fill="rgb(233,19,40)" fg:x="546" fg:w="13"/><text x="43.3780%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="43.2859%" y="341" width="0.8689%" height="15" fill="rgb(247,41,18)" fg:x="548" fg:w="11"/><text x="43.5359%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="43.4439%" y="325" width="0.7109%" height="15" fill="rgb(220,34,34)" fg:x="550" fg:w="9"/><text x="43.6939%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="43.9179%" y="309" width="0.2370%" height="15" fill="rgb(222,135,32)" fg:x="556" fg:w="3"/><text x="44.1679%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.0758%" y="293" width="0.0790%" height="15" fill="rgb(214,80,19)" fg:x="558" fg:w="1"/><text x="44.3258%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0758%" y="277" width="0.0790%" height="15" fill="rgb(234,54,46)" fg:x="558" fg:w="1"/><text x="44.3258%" y="287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.24%)</title><rect x="44.3918%" y="325" width="0.2370%" height="15" fill="rgb(251,48,23)" fg:x="562" fg:w="3"/><text x="44.6418%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="44.5498%" y="309" width="0.0790%" height="15" fill="rgb(254,109,52)" fg:x="564" fg:w="1"/><text x="44.7998%" y="319.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (25 samples, 1.97%)</title><rect x="42.7330%" y="405" width="1.9747%" height="15" fill="rgb(240,186,19)" fg:x="541" fg:w="25"/><text x="42.9830%" y="415.50">&lt;..</text></g><g><title>treediff::diff::diff (7 samples, 0.55%)</title><rect x="44.1548%" y="389" width="0.5529%" height="15" fill="rgb(246,187,17)" fg:x="559" fg:w="7"/><text x="44.4048%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.55%)</title><rect x="44.1548%" y="373" width="0.5529%" height="15" fill="rgb(212,21,5)" fg:x="559" fg:w="7"/><text x="44.4048%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.47%)</title><rect x="44.2338%" y="357" width="0.4739%" height="15" fill="rgb(225,185,18)" fg:x="560" fg:w="6"/><text x="44.4838%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="44.3918%" y="341" width="0.3160%" height="15" fill="rgb(245,114,17)" fg:x="562" fg:w="4"/><text x="44.6418%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="44.6288%" y="325" width="0.0790%" height="15" fill="rgb(223,164,24)" fg:x="565" fg:w="1"/><text x="44.8788%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="44.6288%" y="309" width="0.0790%" height="15" fill="rgb(211,228,3)" fg:x="565" fg:w="1"/><text x="44.8788%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.6288%" y="293" width="0.0790%" height="15" fill="rgb(223,16,38)" fg:x="565" fg:w="1"/><text x="44.8788%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.7077%" y="373" width="0.1580%" height="15" fill="rgb(207,31,54)" fg:x="566" fg:w="2"/><text x="44.9577%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.8657%" y="373" width="0.2370%" height="15" fill="rgb(220,39,11)" fg:x="568" fg:w="3"/><text x="45.1157%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.8657%" y="357" width="0.2370%" height="15" fill="rgb(235,185,0)" fg:x="568" fg:w="3"/><text x="45.1157%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.0237%" y="341" width="0.0790%" height="15" fill="rgb(249,39,18)" fg:x="570" fg:w="1"/><text x="45.2737%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="45.1027%" y="373" width="0.0790%" height="15" fill="rgb(240,110,33)" fg:x="571" fg:w="1"/><text x="45.3527%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.1027%" y="357" width="0.0790%" height="15" fill="rgb(210,92,42)" fg:x="571" fg:w="1"/><text x="45.3527%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="45.1027%" y="341" width="0.0790%" height="15" fill="rgb(218,215,28)" fg:x="571" fg:w="1"/><text x="45.3527%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="45.2607%" y="357" width="0.0790%" height="15" fill="rgb(238,215,36)" fg:x="573" fg:w="1"/><text x="45.5107%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (6 samples, 0.47%)</title><rect x="45.1817%" y="373" width="0.4739%" height="15" fill="rgb(220,31,10)" fg:x="572" fg:w="6"/><text x="45.4317%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="45.3397%" y="357" width="0.3160%" height="15" fill="rgb(212,93,14)" fg:x="574" fg:w="4"/><text x="45.5897%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.4976%" y="341" width="0.1580%" height="15" fill="rgb(254,207,2)" fg:x="576" fg:w="2"/><text x="45.7476%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.4976%" y="325" width="0.1580%" height="15" fill="rgb(205,57,44)" fg:x="576" fg:w="2"/><text x="45.7476%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.4976%" y="309" width="0.1580%" height="15" fill="rgb(226,151,19)" fg:x="576" fg:w="2"/><text x="45.7476%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6556%" y="341" width="0.0790%" height="15" fill="rgb(230,72,30)" fg:x="578" fg:w="1"/><text x="45.9056%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="45.6556%" y="373" width="0.3160%" height="15" fill="rgb(244,0,8)" fg:x="578" fg:w="4"/><text x="45.9056%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="45.6556%" y="357" width="0.3160%" height="15" fill="rgb(230,192,6)" fg:x="578" fg:w="4"/><text x="45.9056%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.7346%" y="341" width="0.2370%" height="15" fill="rgb(233,207,13)" fg:x="579" fg:w="3"/><text x="45.9846%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.2875%" y="341" width="0.0790%" height="15" fill="rgb(206,227,7)" fg:x="586" fg:w="1"/><text x="46.5375%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="46.3665%" y="325" width="0.3949%" height="15" fill="rgb(213,217,25)" fg:x="587" fg:w="5"/><text x="46.6165%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.4455%" y="309" width="0.3160%" height="15" fill="rgb(249,75,4)" fg:x="588" fg:w="4"/><text x="46.6955%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="46.5245%" y="293" width="0.2370%" height="15" fill="rgb(225,114,18)" fg:x="589" fg:w="3"/><text x="46.7745%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="46.8404%" y="293" width="0.3160%" height="15" fill="rgb(211,162,40)" fg:x="593" fg:w="4"/><text x="47.0904%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="46.9194%" y="277" width="0.2370%" height="15" fill="rgb(206,49,29)" fg:x="594" fg:w="3"/><text x="47.1694%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="46.9194%" y="261" width="0.2370%" height="15" fill="rgb(244,8,6)" fg:x="594" fg:w="3"/><text x="47.1694%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="46.9194%" y="245" width="0.2370%" height="15" fill="rgb(231,194,28)" fg:x="594" fg:w="3"/><text x="47.1694%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="46.9194%" y="229" width="0.2370%" height="15" fill="rgb(210,69,5)" fg:x="594" fg:w="3"/><text x="47.1694%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.9984%" y="213" width="0.1580%" height="15" fill="rgb(216,186,12)" fg:x="595" fg:w="2"/><text x="47.2484%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.47%)</title><rect x="46.7615%" y="325" width="0.4739%" height="15" fill="rgb(238,61,15)" fg:x="592" fg:w="6"/><text x="47.0115%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="46.8404%" y="309" width="0.3949%" height="15" fill="rgb(226,104,1)" fg:x="593" fg:w="5"/><text x="47.0904%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1564%" y="293" width="0.0790%" height="15" fill="rgb(229,128,15)" fg:x="597" fg:w="1"/><text x="47.4064%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.4724%" y="293" width="0.1580%" height="15" fill="rgb(247,110,15)" fg:x="601" fg:w="2"/><text x="47.7224%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.5513%" y="277" width="0.0790%" height="15" fill="rgb(210,74,48)" fg:x="602" fg:w="1"/><text x="47.8013%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5513%" y="261" width="0.0790%" height="15" fill="rgb(246,121,10)" fg:x="602" fg:w="1"/><text x="47.8013%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="47.6303%" y="293" width="0.0790%" height="15" fill="rgb(214,156,37)" fg:x="603" fg:w="1"/><text x="47.8803%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.9463%" y="277" width="0.0790%" height="15" fill="rgb(214,210,34)" fg:x="607" fg:w="1"/><text x="48.1963%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="48.0253%" y="261" width="0.3160%" height="15" fill="rgb(237,93,35)" fg:x="608" fg:w="4"/><text x="48.2753%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="48.1043%" y="245" width="0.2370%" height="15" fill="rgb(206,36,8)" fg:x="609" fg:w="3"/><text x="48.3543%" y="255.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="48.1043%" y="229" width="0.2370%" height="15" fill="rgb(208,151,12)" fg:x="609" fg:w="3"/><text x="48.3543%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.03%)</title><rect x="47.3934%" y="309" width="1.0269%" height="15" fill="rgb(225,133,52)" fg:x="600" fg:w="13"/><text x="47.6434%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.71%)</title><rect x="47.7093%" y="293" width="0.7109%" height="15" fill="rgb(231,71,53)" fg:x="604" fg:w="9"/><text x="47.9593%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="48.0253%" y="277" width="0.3949%" height="15" fill="rgb(243,76,21)" fg:x="608" fg:w="5"/><text x="48.2753%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="48.3412%" y="261" width="0.0790%" height="15" fill="rgb(252,144,3)" fg:x="612" fg:w="1"/><text x="48.5912%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3412%" y="245" width="0.0790%" height="15" fill="rgb(231,199,10)" fg:x="612" fg:w="1"/><text x="48.5912%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.13%)</title><rect x="46.3665%" y="341" width="2.1327%" height="15" fill="rgb(215,18,11)" fg:x="587" fg:w="27"/><text x="46.6165%" y="351.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.26%)</title><rect x="47.2354%" y="325" width="1.2638%" height="15" fill="rgb(241,65,24)" fg:x="598" fg:w="16"/><text x="47.4854%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4202%" y="309" width="0.0790%" height="15" fill="rgb(251,192,38)" fg:x="613" fg:w="1"/><text x="48.6702%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 2.61%)</title><rect x="46.1295%" y="357" width="2.6066%" height="15" fill="rgb(205,9,35)" fg:x="584" fg:w="33"/><text x="46.3795%" y="367.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="48.4992%" y="341" width="0.2370%" height="15" fill="rgb(229,225,49)" fg:x="614" fg:w="3"/><text x="48.7492%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6572%" y="325" width="0.0790%" height="15" fill="rgb(207,125,39)" fg:x="616" fg:w="1"/><text x="48.9072%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.7362%" y="357" width="0.1580%" height="15" fill="rgb(222,78,19)" fg:x="617" fg:w="2"/><text x="48.9862%" y="367.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (54 samples, 4.27%)</title><rect x="44.7077%" y="405" width="4.2654%" height="15" fill="rgb(248,207,20)" fg:x="566" fg:w="54"/><text x="44.9577%" y="415.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (54 samples, 4.27%)</title><rect x="44.7077%" y="389" width="4.2654%" height="15" fill="rgb(205,103,49)" fg:x="566" fg:w="54"/><text x="44.9577%" y="399.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 3.00%)</title><rect x="45.9716%" y="373" width="3.0016%" height="15" fill="rgb(216,42,28)" fg:x="582" fg:w="38"/><text x="46.2216%" y="383.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.8942%" y="357" width="0.0790%" height="15" fill="rgb(213,205,53)" fg:x="619" fg:w="1"/><text x="49.1442%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.8942%" y="341" width="0.0790%" height="15" fill="rgb(239,140,53)" fg:x="619" fg:w="1"/><text x="49.1442%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.8942%" y="325" width="0.0790%" height="15" fill="rgb(248,95,9)" fg:x="619" fg:w="1"/><text x="49.1442%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.2101%" y="261" width="0.0790%" height="15" fill="rgb(254,58,47)" fg:x="623" fg:w="1"/><text x="49.4601%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.2101%" y="245" width="0.0790%" height="15" fill="rgb(234,227,14)" fg:x="623" fg:w="1"/><text x="49.4601%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.2101%" y="229" width="0.0790%" height="15" fill="rgb(205,192,45)" fg:x="623" fg:w="1"/><text x="49.4601%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.2101%" y="213" width="0.0790%" height="15" fill="rgb(253,187,31)" fg:x="623" fg:w="1"/><text x="49.4601%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.2101%" y="197" width="0.0790%" height="15" fill="rgb(222,6,32)" fg:x="623" fg:w="1"/><text x="49.4601%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.2101%" y="181" width="0.0790%" height="15" fill="rgb(249,190,19)" fg:x="623" fg:w="1"/><text x="49.4601%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.2891%" y="229" width="0.1580%" height="15" fill="rgb(251,28,20)" fg:x="624" fg:w="2"/><text x="49.5391%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.2891%" y="213" width="0.1580%" height="15" fill="rgb(210,223,40)" fg:x="624" fg:w="2"/><text x="49.5391%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3681%" y="197" width="0.0790%" height="15" fill="rgb(216,137,22)" fg:x="625" fg:w="1"/><text x="49.6181%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="49.2891%" y="245" width="0.2370%" height="15" fill="rgb(247,39,34)" fg:x="624" fg:w="3"/><text x="49.5391%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="49.4471%" y="229" width="0.0790%" height="15" fill="rgb(239,43,50)" fg:x="626" fg:w="1"/><text x="49.6971%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="49.4471%" y="213" width="0.0790%" height="15" fill="rgb(241,212,9)" fg:x="626" fg:w="1"/><text x="49.6971%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="49.2101%" y="277" width="0.3949%" height="15" fill="rgb(205,8,2)" fg:x="623" fg:w="5"/><text x="49.4601%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="49.2891%" y="261" width="0.3160%" height="15" fill="rgb(217,173,54)" fg:x="624" fg:w="4"/><text x="49.5391%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5261%" y="245" width="0.0790%" height="15" fill="rgb(208,149,52)" fg:x="627" fg:w="1"/><text x="49.7761%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="49.6051%" y="277" width="0.1580%" height="15" fill="rgb(239,99,40)" fg:x="628" fg:w="2"/><text x="49.8551%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.87%)</title><rect x="49.0521%" y="309" width="0.8689%" height="15" fill="rgb(233,214,26)" fg:x="621" fg:w="11"/><text x="49.3021%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="49.1311%" y="293" width="0.7899%" height="15" fill="rgb(231,225,37)" fg:x="622" fg:w="10"/><text x="49.3811%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.7630%" y="277" width="0.1580%" height="15" fill="rgb(252,55,35)" fg:x="630" fg:w="2"/><text x="50.0130%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.7630%" y="261" width="0.1580%" height="15" fill="rgb(239,43,18)" fg:x="630" fg:w="2"/><text x="50.0130%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.7630%" y="245" width="0.1580%" height="15" fill="rgb(251,125,49)" fg:x="630" fg:w="2"/><text x="50.0130%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.9210%" y="309" width="0.0790%" height="15" fill="rgb(212,83,54)" fg:x="632" fg:w="1"/><text x="50.1710%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9210%" y="293" width="0.0790%" height="15" fill="rgb(250,75,6)" fg:x="632" fg:w="1"/><text x="50.1710%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.11%)</title><rect x="48.9731%" y="341" width="1.1058%" height="15" fill="rgb(252,36,40)" fg:x="620" fg:w="14"/><text x="49.2231%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.03%)</title><rect x="49.0521%" y="325" width="1.0269%" height="15" fill="rgb(230,91,51)" fg:x="621" fg:w="13"/><text x="49.3021%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.0000%" y="309" width="0.0790%" height="15" fill="rgb(212,92,28)" fg:x="633" fg:w="1"/><text x="50.2500%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.0000%" y="293" width="0.0790%" height="15" fill="rgb(227,13,22)" fg:x="633" fg:w="1"/><text x="50.2500%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.0790%" y="341" width="0.0790%" height="15" fill="rgb(239,204,32)" fg:x="634" fg:w="1"/><text x="50.3290%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.0790%" y="325" width="0.0790%" height="15" fill="rgb(228,49,41)" fg:x="634" fg:w="1"/><text x="50.3290%" y="335.50"></text></g><g><title>engine::session::state::State::close (149 samples, 11.77%)</title><rect x="38.5466%" y="501" width="11.7694%" height="15" fill="rgb(206,95,6)" fg:x="488" fg:w="149"/><text x="38.7966%" y="511.50">engine::session::..</text></g><g><title>engine::session::state::State::flush_entities (149 samples, 11.77%)</title><rect x="38.5466%" y="485" width="11.7694%" height="15" fill="rgb(251,20,14)" fg:x="488" fg:w="149"/><text x="38.7966%" y="495.50">engine::session::..</text></g><g><title>core::iter::adapters::try_process (148 samples, 11.69%)</title><rect x="38.6256%" y="469" width="11.6904%" height="15" fill="rgb(214,99,28)" fg:x="489" fg:w="148"/><text x="38.8756%" y="479.50">core::iter::adapt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (148 samples, 11.69%)</title><rect x="38.6256%" y="453" width="11.6904%" height="15" fill="rgb(239,122,54)" fg:x="489" fg:w="148"/><text x="38.8756%" y="463.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (148 samples, 11.69%)</title><rect x="38.6256%" y="437" width="11.6904%" height="15" fill="rgb(218,217,46)" fg:x="489" fg:w="148"/><text x="38.8756%" y="447.50">engine::session::..</text></g><g><title>kernel::model::any_entity_changes (96 samples, 7.58%)</title><rect x="42.7330%" y="421" width="7.5829%" height="15" fill="rgb(249,106,28)" fg:x="541" fg:w="96"/><text x="42.9830%" y="431.50">kernel::mo..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (17 samples, 1.34%)</title><rect x="48.9731%" y="405" width="1.3428%" height="15" fill="rgb(250,158,18)" fg:x="620" fg:w="17"/><text x="49.2231%" y="415.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 1.34%)</title><rect x="48.9731%" y="389" width="1.3428%" height="15" fill="rgb(226,137,29)" fg:x="620" fg:w="17"/><text x="49.2231%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.34%)</title><rect x="48.9731%" y="373" width="1.3428%" height="15" fill="rgb(210,188,1)" fg:x="620" fg:w="17"/><text x="49.2231%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.34%)</title><rect x="48.9731%" y="357" width="1.3428%" height="15" fill="rgb(227,84,42)" fg:x="620" fg:w="17"/><text x="49.2231%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.1580%" y="341" width="0.1580%" height="15" fill="rgb(222,147,48)" fg:x="635" fg:w="2"/><text x="50.4080%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2370%" y="325" width="0.0790%" height="15" fill="rgb(241,150,43)" fg:x="636" fg:w="1"/><text x="50.4870%" y="335.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="50.3160%" y="501" width="0.0790%" height="15" fill="rgb(206,139,52)" fg:x="637" fg:w="1"/><text x="50.5660%" y="511.50"></text></g><g><title>engine::session::Session::close (154 samples, 12.16%)</title><rect x="38.3096%" y="517" width="12.1643%" height="15" fill="rgb(230,63,14)" fg:x="485" fg:w="154"/><text x="38.5596%" y="527.50">engine::session::S..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="50.3949%" y="501" width="0.0790%" height="15" fill="rgb(247,8,20)" fg:x="638" fg:w="1"/><text x="50.6449%" y="511.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="50.3949%" y="485" width="0.0790%" height="15" fill="rgb(213,115,4)" fg:x="638" fg:w="1"/><text x="50.6449%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="50.3949%" y="469" width="0.0790%" height="15" fill="rgb(241,79,49)" fg:x="638" fg:w="1"/><text x="50.6449%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="50.3949%" y="453" width="0.0790%" height="15" fill="rgb(222,42,35)" fg:x="638" fg:w="1"/><text x="50.6449%" y="463.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="50.3949%" y="437" width="0.0790%" height="15" fill="rgb(247,59,23)" fg:x="638" fg:w="1"/><text x="50.6449%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="50.6319%" y="389" width="0.0790%" height="15" fill="rgb(247,93,18)" fg:x="641" fg:w="1"/><text x="50.8819%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.6319%" y="373" width="0.0790%" height="15" fill="rgb(249,107,47)" fg:x="641" fg:w="1"/><text x="50.8819%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.6319%" y="357" width="0.0790%" height="15" fill="rgb(219,27,1)" fg:x="641" fg:w="1"/><text x="50.8819%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.6319%" y="341" width="0.0790%" height="15" fill="rgb(217,82,32)" fg:x="641" fg:w="1"/><text x="50.8819%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.6319%" y="325" width="0.0790%" height="15" fill="rgb(250,129,47)" fg:x="641" fg:w="1"/><text x="50.8819%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.6319%" y="309" width="0.0790%" height="15" fill="rgb(253,88,35)" fg:x="641" fg:w="1"/><text x="50.8819%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.6319%" y="293" width="0.0790%" height="15" fill="rgb(245,221,14)" fg:x="641" fg:w="1"/><text x="50.8819%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.6319%" y="277" width="0.0790%" height="15" fill="rgb(217,119,54)" fg:x="641" fg:w="1"/><text x="50.8819%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="50.6319%" y="261" width="0.0790%" height="15" fill="rgb(247,128,31)" fg:x="641" fg:w="1"/><text x="50.8819%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="50.6319%" y="245" width="0.0790%" height="15" fill="rgb(211,99,22)" fg:x="641" fg:w="1"/><text x="50.8819%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.7899%" y="261" width="0.0790%" height="15" fill="rgb(212,20,17)" fg:x="643" fg:w="1"/><text x="51.0399%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.7899%" y="245" width="0.0790%" height="15" fill="rgb(209,159,29)" fg:x="643" fg:w="1"/><text x="51.0399%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.7899%" y="277" width="0.1580%" height="15" fill="rgb(222,177,53)" fg:x="643" fg:w="2"/><text x="51.0399%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.8689%" y="261" width="0.0790%" height="15" fill="rgb(234,46,43)" fg:x="644" fg:w="1"/><text x="51.1189%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9479%" y="229" width="0.0790%" height="15" fill="rgb(208,108,14)" fg:x="645" fg:w="1"/><text x="51.1979%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9479%" y="213" width="0.0790%" height="15" fill="rgb(226,78,53)" fg:x="645" fg:w="1"/><text x="51.1979%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9479%" y="197" width="0.0790%" height="15" fill="rgb(230,20,41)" fg:x="645" fg:w="1"/><text x="51.1979%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.9479%" y="181" width="0.0790%" height="15" fill="rgb(213,195,35)" fg:x="645" fg:w="1"/><text x="51.1979%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.9479%" y="165" width="0.0790%" height="15" fill="rgb(242,62,36)" fg:x="645" fg:w="1"/><text x="51.1979%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.9479%" y="149" width="0.0790%" height="15" fill="rgb(222,210,37)" fg:x="645" fg:w="1"/><text x="51.1979%" y="159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="50.9479%" y="133" width="0.0790%" height="15" fill="rgb(232,107,19)" fg:x="645" fg:w="1"/><text x="51.1979%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="50.9479%" y="117" width="0.0790%" height="15" fill="rgb(235,85,17)" fg:x="645" fg:w="1"/><text x="51.1979%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.7899%" y="325" width="0.3160%" height="15" fill="rgb(219,195,31)" fg:x="643" fg:w="4"/><text x="51.0399%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.7899%" y="309" width="0.3160%" height="15" fill="rgb(231,183,30)" fg:x="643" fg:w="4"/><text x="51.0399%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.7899%" y="293" width="0.3160%" height="15" fill="rgb(212,0,11)" fg:x="643" fg:w="4"/><text x="51.0399%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.9479%" y="277" width="0.1580%" height="15" fill="rgb(249,53,54)" fg:x="645" fg:w="2"/><text x="51.1979%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.9479%" y="261" width="0.1580%" height="15" fill="rgb(211,118,13)" fg:x="645" fg:w="2"/><text x="51.1979%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.9479%" y="245" width="0.1580%" height="15" fill="rgb(237,42,9)" fg:x="645" fg:w="2"/><text x="51.1979%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0269%" y="229" width="0.0790%" height="15" fill="rgb(227,68,32)" fg:x="646" fg:w="1"/><text x="51.2769%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0269%" y="213" width="0.0790%" height="15" fill="rgb(238,10,7)" fg:x="646" fg:w="1"/><text x="51.2769%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.0269%" y="197" width="0.0790%" height="15" fill="rgb(224,42,12)" fg:x="646" fg:w="1"/><text x="51.2769%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.0269%" y="181" width="0.0790%" height="15" fill="rgb(252,190,5)" fg:x="646" fg:w="1"/><text x="51.2769%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.0269%" y="165" width="0.0790%" height="15" fill="rgb(220,214,39)" fg:x="646" fg:w="1"/><text x="51.2769%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.0269%" y="149" width="0.0790%" height="15" fill="rgb(247,98,4)" fg:x="646" fg:w="1"/><text x="51.2769%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.0269%" y="133" width="0.0790%" height="15" fill="rgb(211,60,12)" fg:x="646" fg:w="1"/><text x="51.2769%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.0269%" y="117" width="0.0790%" height="15" fill="rgb(224,42,10)" fg:x="646" fg:w="1"/><text x="51.2769%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.0269%" y="101" width="0.0790%" height="15" fill="rgb(217,167,4)" fg:x="646" fg:w="1"/><text x="51.2769%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.0269%" y="85" width="0.0790%" height="15" fill="rgb(253,18,17)" fg:x="646" fg:w="1"/><text x="51.2769%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.0269%" y="69" width="0.0790%" height="15" fill="rgb(249,186,44)" fg:x="646" fg:w="1"/><text x="51.2769%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.0269%" y="53" width="0.0790%" height="15" fill="rgb(254,124,54)" fg:x="646" fg:w="1"/><text x="51.2769%" y="63.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="51.1058%" y="325" width="0.1580%" height="15" fill="rgb(220,124,39)" fg:x="647" fg:w="2"/><text x="51.3558%" y="335.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="51.1058%" y="309" width="0.1580%" height="15" fill="rgb(225,96,46)" fg:x="647" fg:w="2"/><text x="51.3558%" y="319.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="51.1058%" y="293" width="0.1580%" height="15" fill="rgb(221,106,12)" fg:x="647" fg:w="2"/><text x="51.3558%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="51.1058%" y="277" width="0.1580%" height="15" fill="rgb(227,133,23)" fg:x="647" fg:w="2"/><text x="51.3558%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.1058%" y="261" width="0.1580%" height="15" fill="rgb(216,44,52)" fg:x="647" fg:w="2"/><text x="51.3558%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.1848%" y="245" width="0.0790%" height="15" fill="rgb(239,149,7)" fg:x="648" fg:w="1"/><text x="51.4348%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.3428%" y="245" width="0.0790%" height="15" fill="rgb(211,157,31)" fg:x="650" fg:w="1"/><text x="51.5928%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.3428%" y="229" width="0.0790%" height="15" fill="rgb(206,215,22)" fg:x="650" fg:w="1"/><text x="51.5928%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="51.4218%" y="197" width="0.0790%" height="15" fill="rgb(208,113,15)" fg:x="651" fg:w="1"/><text x="51.6718%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.4218%" y="181" width="0.0790%" height="15" fill="rgb(207,189,15)" fg:x="651" fg:w="1"/><text x="51.6718%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="51.4218%" y="229" width="0.1580%" height="15" fill="rgb(231,115,4)" fg:x="651" fg:w="2"/><text x="51.6718%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="51.4218%" y="213" width="0.1580%" height="15" fill="rgb(253,117,2)" fg:x="651" fg:w="2"/><text x="51.6718%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="51.5008%" y="197" width="0.0790%" height="15" fill="rgb(248,48,24)" fg:x="652" fg:w="1"/><text x="51.7508%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.7378%" y="117" width="0.0790%" height="15" fill="rgb(241,28,46)" fg:x="655" fg:w="1"/><text x="51.9878%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.7378%" y="101" width="0.0790%" height="15" fill="rgb(216,165,52)" fg:x="655" fg:w="1"/><text x="51.9878%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.7378%" y="85" width="0.0790%" height="15" fill="rgb(220,222,34)" fg:x="655" fg:w="1"/><text x="51.9878%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.8167%" y="69" width="0.0790%" height="15" fill="rgb(247,222,49)" fg:x="656" fg:w="1"/><text x="52.0667%" y="79.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.63%)</title><rect x="51.3428%" y="277" width="0.6319%" height="15" fill="rgb(240,10,31)" fg:x="650" fg:w="8"/><text x="51.5928%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="51.3428%" y="261" width="0.6319%" height="15" fill="rgb(221,199,35)" fg:x="650" fg:w="8"/><text x="51.5928%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.55%)</title><rect x="51.4218%" y="245" width="0.5529%" height="15" fill="rgb(230,223,11)" fg:x="651" fg:w="7"/><text x="51.6718%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="51.5798%" y="229" width="0.3949%" height="15" fill="rgb(218,82,45)" fg:x="653" fg:w="5"/><text x="51.8298%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="51.5798%" y="213" width="0.3949%" height="15" fill="rgb(233,213,33)" fg:x="653" fg:w="5"/><text x="51.8298%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="51.6588%" y="197" width="0.3160%" height="15" fill="rgb(210,143,52)" fg:x="654" fg:w="4"/><text x="51.9088%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="51.6588%" y="181" width="0.3160%" height="15" fill="rgb(206,95,4)" fg:x="654" fg:w="4"/><text x="51.9088%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="51.6588%" y="165" width="0.3160%" height="15" fill="rgb(246,164,46)" fg:x="654" fg:w="4"/><text x="51.9088%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.7378%" y="149" width="0.2370%" height="15" fill="rgb(213,210,47)" fg:x="655" fg:w="3"/><text x="51.9878%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="51.7378%" y="133" width="0.2370%" height="15" fill="rgb(210,12,38)" fg:x="655" fg:w="3"/><text x="51.9878%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="51.8167%" y="117" width="0.1580%" height="15" fill="rgb(252,192,54)" fg:x="656" fg:w="2"/><text x="52.0667%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.8167%" y="101" width="0.1580%" height="15" fill="rgb(242,92,6)" fg:x="656" fg:w="2"/><text x="52.0667%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="51.8167%" y="85" width="0.1580%" height="15" fill="rgb(253,154,15)" fg:x="656" fg:w="2"/><text x="52.0667%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="51.8957%" y="69" width="0.0790%" height="15" fill="rgb(209,20,43)" fg:x="657" fg:w="1"/><text x="52.1457%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8957%" y="53" width="0.0790%" height="15" fill="rgb(232,28,49)" fg:x="657" fg:w="1"/><text x="52.1457%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.8957%" y="37" width="0.0790%" height="15" fill="rgb(248,131,53)" fg:x="657" fg:w="1"/><text x="52.1457%" y="47.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.79%)</title><rect x="51.2638%" y="325" width="0.7899%" height="15" fill="rgb(214,16,30)" fg:x="649" fg:w="10"/><text x="51.5138%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.79%)</title><rect x="51.2638%" y="309" width="0.7899%" height="15" fill="rgb(245,16,0)" fg:x="649" fg:w="10"/><text x="51.5138%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.79%)</title><rect x="51.2638%" y="293" width="0.7899%" height="15" fill="rgb(245,17,35)" fg:x="649" fg:w="10"/><text x="51.5138%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.9747%" y="277" width="0.0790%" height="15" fill="rgb(249,27,53)" fg:x="658" fg:w="1"/><text x="52.2247%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.9747%" y="261" width="0.0790%" height="15" fill="rgb(214,73,24)" fg:x="658" fg:w="1"/><text x="52.2247%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="52.2907%" y="181" width="0.0790%" height="15" fill="rgb(223,84,37)" fg:x="662" fg:w="1"/><text x="52.5407%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.2907%" y="165" width="0.0790%" height="15" fill="rgb(210,109,28)" fg:x="662" fg:w="1"/><text x="52.5407%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.2907%" y="149" width="0.0790%" height="15" fill="rgb(208,186,6)" fg:x="662" fg:w="1"/><text x="52.5407%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.2907%" y="133" width="0.0790%" height="15" fill="rgb(235,201,30)" fg:x="662" fg:w="1"/><text x="52.5407%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="52.2907%" y="197" width="0.2370%" height="15" fill="rgb(216,198,48)" fg:x="662" fg:w="3"/><text x="52.5407%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.3697%" y="181" width="0.1580%" height="15" fill="rgb(254,186,25)" fg:x="663" fg:w="2"/><text x="52.6197%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="52.3697%" y="165" width="0.1580%" height="15" fill="rgb(227,87,5)" fg:x="663" fg:w="2"/><text x="52.6197%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.3697%" y="149" width="0.1580%" height="15" fill="rgb(236,205,25)" fg:x="663" fg:w="2"/><text x="52.6197%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.4487%" y="133" width="0.0790%" height="15" fill="rgb(229,99,32)" fg:x="664" fg:w="1"/><text x="52.6987%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.4487%" y="117" width="0.0790%" height="15" fill="rgb(231,177,31)" fg:x="664" fg:w="1"/><text x="52.6987%" y="127.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.4487%" y="101" width="0.0790%" height="15" fill="rgb(246,15,2)" fg:x="664" fg:w="1"/><text x="52.6987%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="52.2117%" y="229" width="0.3949%" height="15" fill="rgb(207,39,15)" fg:x="661" fg:w="5"/><text x="52.4617%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="52.2907%" y="213" width="0.3160%" height="15" fill="rgb(207,44,9)" fg:x="662" fg:w="4"/><text x="52.5407%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.5276%" y="197" width="0.0790%" height="15" fill="rgb(225,224,33)" fg:x="665" fg:w="1"/><text x="52.7776%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.55%)</title><rect x="52.1327%" y="261" width="0.5529%" height="15" fill="rgb(252,151,3)" fg:x="660" fg:w="7"/><text x="52.3827%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="52.1327%" y="245" width="0.5529%" height="15" fill="rgb(211,140,13)" fg:x="660" fg:w="7"/><text x="52.3827%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.6066%" y="229" width="0.0790%" height="15" fill="rgb(239,225,17)" fg:x="666" fg:w="1"/><text x="52.8566%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.6066%" y="213" width="0.0790%" height="15" fill="rgb(223,170,52)" fg:x="666" fg:w="1"/><text x="52.8566%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="52.6856%" y="261" width="0.1580%" height="15" fill="rgb(212,64,21)" fg:x="667" fg:w="2"/><text x="52.9356%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="52.6856%" y="245" width="0.1580%" height="15" fill="rgb(236,126,48)" fg:x="667" fg:w="2"/><text x="52.9356%" y="255.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (28 samples, 2.21%)</title><rect x="50.7109%" y="389" width="2.2117%" height="15" fill="rgb(209,135,11)" fg:x="642" fg:w="28"/><text x="50.9609%" y="399.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (28 samples, 2.21%)</title><rect x="50.7109%" y="373" width="2.2117%" height="15" fill="rgb(228,126,40)" fg:x="642" fg:w="28"/><text x="50.9609%" y="383.50">k..</text></g><g><title>engine::session::Session::load_entity (28 samples, 2.21%)</title><rect x="50.7109%" y="357" width="2.2117%" height="15" fill="rgb(205,196,36)" fg:x="642" fg:w="28"/><text x="50.9609%" y="367.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (28 samples, 2.21%)</title><rect x="50.7109%" y="341" width="2.2117%" height="15" fill="rgb(243,160,33)" fg:x="642" fg:w="28"/><text x="50.9609%" y="351.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.87%)</title><rect x="52.0537%" y="325" width="0.8689%" height="15" fill="rgb(210,84,20)" fg:x="659" fg:w="11"/><text x="52.3037%" y="335.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.87%)</title><rect x="52.0537%" y="309" width="0.8689%" height="15" fill="rgb(228,213,30)" fg:x="659" fg:w="11"/><text x="52.3037%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.87%)</title><rect x="52.0537%" y="293" width="0.8689%" height="15" fill="rgb(252,33,45)" fg:x="659" fg:w="11"/><text x="52.3037%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.87%)</title><rect x="52.0537%" y="277" width="0.8689%" height="15" fill="rgb(254,227,20)" fg:x="659" fg:w="11"/><text x="52.3037%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.8436%" y="261" width="0.0790%" height="15" fill="rgb(228,192,2)" fg:x="669" fg:w="1"/><text x="53.0936%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.8436%" y="245" width="0.0790%" height="15" fill="rgb(233,32,8)" fg:x="669" fg:w="1"/><text x="53.0936%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.8436%" y="229" width="0.0790%" height="15" fill="rgb(220,146,47)" fg:x="669" fg:w="1"/><text x="53.0936%" y="239.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (32 samples, 2.53%)</title><rect x="50.4739%" y="421" width="2.5276%" height="15" fill="rgb(246,194,1)" fg:x="639" fg:w="32"/><text x="50.7239%" y="431.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (30 samples, 2.37%)</title><rect x="50.6319%" y="405" width="2.3697%" height="15" fill="rgb(218,203,9)" fg:x="641" fg:w="30"/><text x="50.8819%" y="415.50">&lt;p..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9226%" y="389" width="0.0790%" height="15" fill="rgb(237,97,14)" fg:x="670" fg:w="1"/><text x="53.1726%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.0016%" y="421" width="0.0790%" height="15" fill="rgb(239,76,15)" fg:x="671" fg:w="1"/><text x="53.2516%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (39 samples, 3.08%)</title><rect x="50.4739%" y="485" width="3.0806%" height="15" fill="rgb(222,53,45)" fg:x="639" fg:w="39"/><text x="50.7239%" y="495.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (39 samples, 3.08%)</title><rect x="50.4739%" y="469" width="3.0806%" height="15" fill="rgb(237,88,5)" fg:x="639" fg:w="39"/><text x="50.7239%" y="479.50">ker..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (39 samples, 3.08%)</title><rect x="50.4739%" y="453" width="3.0806%" height="15" fill="rgb(218,223,35)" fg:x="639" fg:w="39"/><text x="50.7239%" y="463.50">ker..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (39 samples, 3.08%)</title><rect x="50.4739%" y="437" width="3.0806%" height="15" fill="rgb(243,229,38)" fg:x="639" fg:w="39"/><text x="50.7239%" y="447.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (6 samples, 0.47%)</title><rect x="53.0806%" y="421" width="0.4739%" height="15" fill="rgb(240,75,41)" fg:x="672" fg:w="6"/><text x="53.3306%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (6 samples, 0.47%)</title><rect x="53.0806%" y="405" width="0.4739%" height="15" fill="rgb(209,110,37)" fg:x="672" fg:w="6"/><text x="53.3306%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.39%)</title><rect x="53.1596%" y="389" width="0.3949%" height="15" fill="rgb(221,130,46)" fg:x="673" fg:w="5"/><text x="53.4096%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="53.2385%" y="373" width="0.3160%" height="15" fill="rgb(237,160,20)" fg:x="674" fg:w="4"/><text x="53.4885%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="53.2385%" y="357" width="0.3160%" height="15" fill="rgb(234,126,24)" fg:x="674" fg:w="4"/><text x="53.4885%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="53.2385%" y="341" width="0.3160%" height="15" fill="rgb(207,177,9)" fg:x="674" fg:w="4"/><text x="53.4885%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.32%)</title><rect x="53.2385%" y="325" width="0.3160%" height="15" fill="rgb(231,191,33)" fg:x="674" fg:w="4"/><text x="53.4885%" y="335.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (4 samples, 0.32%)</title><rect x="53.2385%" y="309" width="0.3160%" height="15" fill="rgb(207,42,1)" fg:x="674" fg:w="4"/><text x="53.4885%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="53.3965%" y="293" width="0.1580%" height="15" fill="rgb(218,34,50)" fg:x="676" fg:w="2"/><text x="53.6465%" y="303.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="53.4755%" y="277" width="0.0790%" height="15" fill="rgb(254,126,39)" fg:x="677" fg:w="1"/><text x="53.7255%" y="287.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="53.4755%" y="261" width="0.0790%" height="15" fill="rgb(251,17,26)" fg:x="677" fg:w="1"/><text x="53.7255%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.7915%" y="421" width="0.0790%" height="15" fill="rgb(252,215,34)" fg:x="681" fg:w="1"/><text x="54.0415%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.7915%" y="405" width="0.0790%" height="15" fill="rgb(217,120,44)" fg:x="681" fg:w="1"/><text x="54.0415%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (5 samples, 0.39%)</title><rect x="53.5545%" y="485" width="0.3949%" height="15" fill="rgb(211,31,11)" fg:x="678" fg:w="5"/><text x="53.8045%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="53.6335%" y="469" width="0.3160%" height="15" fill="rgb(222,69,51)" fg:x="679" fg:w="4"/><text x="53.8835%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="53.7125%" y="453" width="0.2370%" height="15" fill="rgb(215,229,42)" fg:x="680" fg:w="3"/><text x="53.9625%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.7125%" y="437" width="0.2370%" height="15" fill="rgb(212,102,15)" fg:x="680" fg:w="3"/><text x="53.9625%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="53.8705%" y="421" width="0.0790%" height="15" fill="rgb(205,179,41)" fg:x="682" fg:w="1"/><text x="54.1205%" y="431.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.9494%" y="485" width="0.0790%" height="15" fill="rgb(219,148,46)" fg:x="683" fg:w="1"/><text x="54.1994%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="53.9494%" y="469" width="0.0790%" height="15" fill="rgb(243,40,19)" fg:x="683" fg:w="1"/><text x="54.1994%" y="479.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.9494%" y="453" width="0.0790%" height="15" fill="rgb(208,206,34)" fg:x="683" fg:w="1"/><text x="54.1994%" y="463.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="54.0284%" y="485" width="0.0790%" height="15" fill="rgb(244,184,38)" fg:x="684" fg:w="1"/><text x="54.2784%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.0284%" y="469" width="0.0790%" height="15" fill="rgb(244,151,47)" fg:x="684" fg:w="1"/><text x="54.2784%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (2 samples, 0.16%)</title><rect x="54.1074%" y="485" width="0.1580%" height="15" fill="rgb(236,134,42)" fg:x="685" fg:w="2"/><text x="54.3574%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="54.2654%" y="469" width="0.0790%" height="15" fill="rgb(233,93,22)" fg:x="687" fg:w="1"/><text x="54.5154%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.5024%" y="373" width="0.0790%" height="15" fill="rgb(211,202,10)" fg:x="690" fg:w="1"/><text x="54.7524%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.5024%" y="357" width="0.0790%" height="15" fill="rgb(240,63,8)" fg:x="690" fg:w="1"/><text x="54.7524%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.5024%" y="341" width="0.0790%" height="15" fill="rgb(214,9,4)" fg:x="690" fg:w="1"/><text x="54.7524%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.5024%" y="325" width="0.0790%" height="15" fill="rgb(243,66,45)" fg:x="690" fg:w="1"/><text x="54.7524%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.5024%" y="309" width="0.0790%" height="15" fill="rgb(220,50,42)" fg:x="690" fg:w="1"/><text x="54.7524%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.5024%" y="293" width="0.0790%" height="15" fill="rgb(220,134,27)" fg:x="690" fg:w="1"/><text x="54.7524%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="54.5024%" y="277" width="0.0790%" height="15" fill="rgb(246,151,50)" fg:x="690" fg:w="1"/><text x="54.7524%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.5024%" y="261" width="0.0790%" height="15" fill="rgb(238,216,27)" fg:x="690" fg:w="1"/><text x="54.7524%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="54.4234%" y="389" width="0.3949%" height="15" fill="rgb(250,92,11)" fg:x="689" fg:w="5"/><text x="54.6734%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="54.5814%" y="373" width="0.2370%" height="15" fill="rgb(248,183,6)" fg:x="691" fg:w="3"/><text x="54.8314%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="54.5814%" y="357" width="0.2370%" height="15" fill="rgb(211,204,50)" fg:x="691" fg:w="3"/><text x="54.8314%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="54.5814%" y="341" width="0.2370%" height="15" fill="rgb(252,55,47)" fg:x="691" fg:w="3"/><text x="54.8314%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="54.5814%" y="325" width="0.2370%" height="15" fill="rgb(240,198,32)" fg:x="691" fg:w="3"/><text x="54.8314%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="54.5814%" y="309" width="0.2370%" height="15" fill="rgb(224,203,19)" fg:x="691" fg:w="3"/><text x="54.8314%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="54.5814%" y="293" width="0.2370%" height="15" fill="rgb(205,27,16)" fg:x="691" fg:w="3"/><text x="54.8314%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="54.5814%" y="277" width="0.2370%" height="15" fill="rgb(224,226,17)" fg:x="691" fg:w="3"/><text x="54.8314%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="54.5814%" y="261" width="0.2370%" height="15" fill="rgb(205,216,54)" fg:x="691" fg:w="3"/><text x="54.8314%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="54.5814%" y="245" width="0.2370%" height="15" fill="rgb(248,168,46)" fg:x="691" fg:w="3"/><text x="54.8314%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="54.5814%" y="229" width="0.2370%" height="15" fill="rgb(226,111,45)" fg:x="691" fg:w="3"/><text x="54.8314%" y="239.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="54.5814%" y="213" width="0.2370%" height="15" fill="rgb(231,15,9)" fg:x="691" fg:w="3"/><text x="54.8314%" y="223.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="54.5814%" y="197" width="0.2370%" height="15" fill="rgb(243,168,3)" fg:x="691" fg:w="3"/><text x="54.8314%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.8183%" y="389" width="0.1580%" height="15" fill="rgb(221,220,54)" fg:x="694" fg:w="2"/><text x="55.0683%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.8973%" y="373" width="0.0790%" height="15" fill="rgb(232,174,38)" fg:x="695" fg:w="1"/><text x="55.1473%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.8973%" y="357" width="0.0790%" height="15" fill="rgb(205,14,38)" fg:x="695" fg:w="1"/><text x="55.1473%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.8973%" y="341" width="0.0790%" height="15" fill="rgb(234,89,19)" fg:x="695" fg:w="1"/><text x="55.1473%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.8973%" y="325" width="0.0790%" height="15" fill="rgb(216,68,51)" fg:x="695" fg:w="1"/><text x="55.1473%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.8973%" y="309" width="0.0790%" height="15" fill="rgb(213,49,2)" fg:x="695" fg:w="1"/><text x="55.1473%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.8973%" y="293" width="0.0790%" height="15" fill="rgb(242,146,30)" fg:x="695" fg:w="1"/><text x="55.1473%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.8973%" y="277" width="0.0790%" height="15" fill="rgb(224,188,11)" fg:x="695" fg:w="1"/><text x="55.1473%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.8973%" y="261" width="0.0790%" height="15" fill="rgb(213,159,11)" fg:x="695" fg:w="1"/><text x="55.1473%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.8973%" y="245" width="0.0790%" height="15" fill="rgb(229,13,31)" fg:x="695" fg:w="1"/><text x="55.1473%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.8973%" y="229" width="0.0790%" height="15" fill="rgb(209,103,11)" fg:x="695" fg:w="1"/><text x="55.1473%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.8973%" y="213" width="0.0790%" height="15" fill="rgb(206,3,4)" fg:x="695" fg:w="1"/><text x="55.1473%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.71%)</title><rect x="54.4234%" y="405" width="0.7109%" height="15" fill="rgb(252,10,49)" fg:x="689" fg:w="9"/><text x="54.6734%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.9763%" y="389" width="0.1580%" height="15" fill="rgb(217,160,32)" fg:x="696" fg:w="2"/><text x="55.2263%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.87%)</title><rect x="54.3444%" y="437" width="0.8689%" height="15" fill="rgb(249,196,0)" fg:x="688" fg:w="11"/><text x="54.5944%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.87%)</title><rect x="54.3444%" y="421" width="0.8689%" height="15" fill="rgb(213,17,48)" fg:x="688" fg:w="11"/><text x="54.5944%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1343%" y="405" width="0.0790%" height="15" fill="rgb(206,42,46)" fg:x="698" fg:w="1"/><text x="55.3843%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2133%" y="389" width="0.0790%" height="15" fill="rgb(212,105,24)" fg:x="699" fg:w="1"/><text x="55.4633%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2133%" y="373" width="0.0790%" height="15" fill="rgb(243,216,30)" fg:x="699" fg:w="1"/><text x="55.4633%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2133%" y="357" width="0.0790%" height="15" fill="rgb(207,121,3)" fg:x="699" fg:w="1"/><text x="55.4633%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2923%" y="341" width="0.0790%" height="15" fill="rgb(249,78,0)" fg:x="700" fg:w="1"/><text x="55.5423%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2923%" y="325" width="0.0790%" height="15" fill="rgb(244,151,32)" fg:x="700" fg:w="1"/><text x="55.5423%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.2923%" y="309" width="0.0790%" height="15" fill="rgb(228,63,25)" fg:x="700" fg:w="1"/><text x="55.5423%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.2923%" y="293" width="0.0790%" height="15" fill="rgb(231,158,23)" fg:x="700" fg:w="1"/><text x="55.5423%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.2923%" y="277" width="0.0790%" height="15" fill="rgb(248,107,23)" fg:x="700" fg:w="1"/><text x="55.5423%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.2923%" y="261" width="0.0790%" height="15" fill="rgb(215,168,21)" fg:x="700" fg:w="1"/><text x="55.5423%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.2923%" y="245" width="0.0790%" height="15" fill="rgb(227,83,22)" fg:x="700" fg:w="1"/><text x="55.5423%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.2923%" y="229" width="0.0790%" height="15" fill="rgb(217,118,43)" fg:x="700" fg:w="1"/><text x="55.5423%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.2923%" y="213" width="0.0790%" height="15" fill="rgb(229,220,41)" fg:x="700" fg:w="1"/><text x="55.5423%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.2923%" y="197" width="0.0790%" height="15" fill="rgb(254,146,46)" fg:x="700" fg:w="1"/><text x="55.5423%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.2923%" y="181" width="0.0790%" height="15" fill="rgb(233,208,31)" fg:x="700" fg:w="1"/><text x="55.5423%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.2923%" y="165" width="0.0790%" height="15" fill="rgb(222,162,7)" fg:x="700" fg:w="1"/><text x="55.5423%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.2923%" y="149" width="0.0790%" height="15" fill="rgb(230,117,45)" fg:x="700" fg:w="1"/><text x="55.5423%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="55.5292%" y="245" width="0.0790%" height="15" fill="rgb(239,163,6)" fg:x="703" fg:w="1"/><text x="55.7792%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="55.5292%" y="229" width="0.0790%" height="15" fill="rgb(246,130,17)" fg:x="703" fg:w="1"/><text x="55.7792%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="55.5292%" y="213" width="0.0790%" height="15" fill="rgb(216,84,5)" fg:x="703" fg:w="1"/><text x="55.7792%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="55.5292%" y="293" width="0.3160%" height="15" fill="rgb(230,200,21)" fg:x="703" fg:w="4"/><text x="55.7792%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="55.5292%" y="277" width="0.3160%" height="15" fill="rgb(224,2,8)" fg:x="703" fg:w="4"/><text x="55.7792%" y="287.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="55.5292%" y="261" width="0.3160%" height="15" fill="rgb(238,178,10)" fg:x="703" fg:w="4"/><text x="55.7792%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="55.6082%" y="245" width="0.2370%" height="15" fill="rgb(242,153,24)" fg:x="704" fg:w="3"/><text x="55.8582%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.6082%" y="229" width="0.2370%" height="15" fill="rgb(242,32,48)" fg:x="704" fg:w="3"/><text x="55.8582%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7662%" y="213" width="0.0790%" height="15" fill="rgb(227,36,0)" fg:x="706" fg:w="1"/><text x="56.0162%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.0032%" y="245" width="0.0790%" height="15" fill="rgb(251,33,35)" fg:x="709" fg:w="1"/><text x="56.2532%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.0032%" y="229" width="0.0790%" height="15" fill="rgb(232,168,51)" fg:x="709" fg:w="1"/><text x="56.2532%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="55.9242%" y="261" width="0.2370%" height="15" fill="rgb(228,56,10)" fg:x="708" fg:w="3"/><text x="56.1742%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.0821%" y="245" width="0.0790%" height="15" fill="rgb(231,10,26)" fg:x="710" fg:w="1"/><text x="56.3321%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="56.1611%" y="181" width="0.0790%" height="15" fill="rgb(226,202,12)" fg:x="711" fg:w="1"/><text x="56.4111%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="56.1611%" y="165" width="0.0790%" height="15" fill="rgb(251,49,21)" fg:x="711" fg:w="1"/><text x="56.4111%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.03%)</title><rect x="55.2923%" y="389" width="1.0269%" height="15" fill="rgb(206,228,28)" fg:x="700" fg:w="13"/><text x="55.5423%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.03%)</title><rect x="55.2923%" y="373" width="1.0269%" height="15" fill="rgb(205,198,31)" fg:x="700" fg:w="13"/><text x="55.5423%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (13 samples, 1.03%)</title><rect x="55.2923%" y="357" width="1.0269%" height="15" fill="rgb(213,69,1)" fg:x="700" fg:w="13"/><text x="55.5423%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.95%)</title><rect x="55.3712%" y="341" width="0.9479%" height="15" fill="rgb(209,177,9)" fg:x="701" fg:w="12"/><text x="55.6212%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.87%)</title><rect x="55.4502%" y="325" width="0.8689%" height="15" fill="rgb(227,119,30)" fg:x="702" fg:w="11"/><text x="55.7002%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.79%)</title><rect x="55.5292%" y="309" width="0.7899%" height="15" fill="rgb(234,106,41)" fg:x="703" fg:w="10"/><text x="55.7792%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="55.8452%" y="293" width="0.4739%" height="15" fill="rgb(244,103,47)" fg:x="707" fg:w="6"/><text x="56.0952%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="55.8452%" y="277" width="0.4739%" height="15" fill="rgb(212,211,25)" fg:x="707" fg:w="6"/><text x="56.0952%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="56.1611%" y="261" width="0.1580%" height="15" fill="rgb(208,63,53)" fg:x="711" fg:w="2"/><text x="56.4111%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="56.1611%" y="245" width="0.1580%" height="15" fill="rgb(213,176,21)" fg:x="711" fg:w="2"/><text x="56.4111%" y="255.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="56.1611%" y="229" width="0.1580%" height="15" fill="rgb(243,124,12)" fg:x="711" fg:w="2"/><text x="56.4111%" y="239.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="56.1611%" y="213" width="0.1580%" height="15" fill="rgb(239,2,35)" fg:x="711" fg:w="2"/><text x="56.4111%" y="223.50"></text></g><g><title>serde_json::error::make_error (2 samples, 0.16%)</title><rect x="56.1611%" y="197" width="0.1580%" height="15" fill="rgb(253,169,22)" fg:x="711" fg:w="2"/><text x="56.4111%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.08%)</title><rect x="56.2401%" y="181" width="0.0790%" height="15" fill="rgb(254,51,12)" fg:x="712" fg:w="1"/><text x="56.4901%" y="191.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.08%)</title><rect x="56.2401%" y="165" width="0.0790%" height="15" fill="rgb(244,17,47)" fg:x="712" fg:w="1"/><text x="56.4901%" y="175.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.08%)</title><rect x="56.2401%" y="149" width="0.0790%" height="15" fill="rgb(251,45,46)" fg:x="712" fg:w="1"/><text x="56.4901%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.34%)</title><rect x="55.2133%" y="437" width="1.3428%" height="15" fill="rgb(223,87,43)" fg:x="699" fg:w="17"/><text x="55.4633%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 1.34%)</title><rect x="55.2133%" y="421" width="1.3428%" height="15" fill="rgb(230,132,31)" fg:x="699" fg:w="17"/><text x="55.4633%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (17 samples, 1.34%)</title><rect x="55.2133%" y="405" width="1.3428%" height="15" fill="rgb(206,99,1)" fg:x="699" fg:w="17"/><text x="55.4633%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.3191%" y="389" width="0.2370%" height="15" fill="rgb(227,110,25)" fg:x="713" fg:w="3"/><text x="56.5691%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.3191%" y="373" width="0.2370%" height="15" fill="rgb(217,182,7)" fg:x="713" fg:w="3"/><text x="56.5691%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.4771%" y="357" width="0.0790%" height="15" fill="rgb(250,176,4)" fg:x="715" fg:w="1"/><text x="56.7271%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="56.4771%" y="341" width="0.0790%" height="15" fill="rgb(244,98,30)" fg:x="715" fg:w="1"/><text x="56.7271%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.4771%" y="325" width="0.0790%" height="15" fill="rgb(228,150,42)" fg:x="715" fg:w="1"/><text x="56.7271%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="56.4771%" y="309" width="0.0790%" height="15" fill="rgb(231,91,46)" fg:x="715" fg:w="1"/><text x="56.7271%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="56.4771%" y="293" width="0.0790%" height="15" fill="rgb(252,161,32)" fg:x="715" fg:w="1"/><text x="56.7271%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.4771%" y="277" width="0.0790%" height="15" fill="rgb(236,69,41)" fg:x="715" fg:w="1"/><text x="56.7271%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.5561%" y="437" width="0.0790%" height="15" fill="rgb(212,160,3)" fg:x="716" fg:w="1"/><text x="56.8061%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (32 samples, 2.53%)</title><rect x="54.3444%" y="469" width="2.5276%" height="15" fill="rgb(216,5,50)" fg:x="688" fg:w="32"/><text x="54.5944%" y="479.50">en..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (32 samples, 2.53%)</title><rect x="54.3444%" y="453" width="2.5276%" height="15" fill="rgb(241,138,25)" fg:x="688" fg:w="32"/><text x="54.5944%" y="463.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.6351%" y="437" width="0.2370%" height="15" fill="rgb(239,42,18)" fg:x="717" fg:w="3"/><text x="56.8851%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.6351%" y="421" width="0.2370%" height="15" fill="rgb(239,40,7)" fg:x="717" fg:w="3"/><text x="56.8851%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="56.7141%" y="405" width="0.1580%" height="15" fill="rgb(239,11,31)" fg:x="718" fg:w="2"/><text x="56.9641%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="56.7141%" y="389" width="0.1580%" height="15" fill="rgb(224,77,40)" fg:x="718" fg:w="2"/><text x="56.9641%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="56.7141%" y="373" width="0.1580%" height="15" fill="rgb(226,15,5)" fg:x="718" fg:w="2"/><text x="56.9641%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.7930%" y="357" width="0.0790%" height="15" fill="rgb(254,188,5)" fg:x="719" fg:w="1"/><text x="57.0430%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.7930%" y="341" width="0.0790%" height="15" fill="rgb(241,148,52)" fg:x="719" fg:w="1"/><text x="57.0430%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.0300%" y="405" width="0.0790%" height="15" fill="rgb(251,48,36)" fg:x="722" fg:w="1"/><text x="57.2800%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.0300%" y="389" width="0.0790%" height="15" fill="rgb(243,83,13)" fg:x="722" fg:w="1"/><text x="57.2800%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.0300%" y="373" width="0.0790%" height="15" fill="rgb(210,105,0)" fg:x="722" fg:w="1"/><text x="57.2800%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.0300%" y="357" width="0.0790%" height="15" fill="rgb(239,60,36)" fg:x="722" fg:w="1"/><text x="57.2800%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.0300%" y="341" width="0.0790%" height="15" fill="rgb(210,20,0)" fg:x="722" fg:w="1"/><text x="57.2800%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.0300%" y="325" width="0.0790%" height="15" fill="rgb(244,26,53)" fg:x="722" fg:w="1"/><text x="57.2800%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.0300%" y="309" width="0.0790%" height="15" fill="rgb(240,100,49)" fg:x="722" fg:w="1"/><text x="57.2800%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.0300%" y="293" width="0.0790%" height="15" fill="rgb(250,46,45)" fg:x="722" fg:w="1"/><text x="57.2800%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.0300%" y="277" width="0.0790%" height="15" fill="rgb(220,181,29)" fg:x="722" fg:w="1"/><text x="57.2800%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.0300%" y="261" width="0.0790%" height="15" fill="rgb(213,137,33)" fg:x="722" fg:w="1"/><text x="57.2800%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.0300%" y="245" width="0.0790%" height="15" fill="rgb(213,27,48)" fg:x="722" fg:w="1"/><text x="57.2800%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.0300%" y="229" width="0.0790%" height="15" fill="rgb(245,180,39)" fg:x="722" fg:w="1"/><text x="57.2800%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.0300%" y="213" width="0.0790%" height="15" fill="rgb(212,158,42)" fg:x="722" fg:w="1"/><text x="57.2800%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.0300%" y="197" width="0.0790%" height="15" fill="rgb(228,193,18)" fg:x="722" fg:w="1"/><text x="57.2800%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1090%" y="405" width="0.0790%" height="15" fill="rgb(245,172,29)" fg:x="723" fg:w="1"/><text x="57.3590%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1090%" y="389" width="0.0790%" height="15" fill="rgb(207,98,24)" fg:x="723" fg:w="1"/><text x="57.3590%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="56.8720%" y="453" width="0.3949%" height="15" fill="rgb(249,92,26)" fg:x="720" fg:w="5"/><text x="57.1220%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="56.9510%" y="437" width="0.3160%" height="15" fill="rgb(217,176,26)" fg:x="721" fg:w="4"/><text x="57.2010%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.0300%" y="421" width="0.2370%" height="15" fill="rgb(221,8,39)" fg:x="722" fg:w="3"/><text x="57.2800%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1880%" y="405" width="0.0790%" height="15" fill="rgb(208,90,18)" fg:x="724" fg:w="1"/><text x="57.4380%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="57.2670%" y="453" width="0.0790%" height="15" fill="rgb(207,202,30)" fg:x="725" fg:w="1"/><text x="57.5170%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="57.2670%" y="437" width="0.0790%" height="15" fill="rgb(231,124,22)" fg:x="725" fg:w="1"/><text x="57.5170%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="57.2670%" y="421" width="0.0790%" height="15" fill="rgb(206,15,5)" fg:x="725" fg:w="1"/><text x="57.5170%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="57.2670%" y="405" width="0.0790%" height="15" fill="rgb(239,16,52)" fg:x="725" fg:w="1"/><text x="57.5170%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.2670%" y="389" width="0.0790%" height="15" fill="rgb(245,213,29)" fg:x="725" fg:w="1"/><text x="57.5170%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.2670%" y="373" width="0.0790%" height="15" fill="rgb(213,203,36)" fg:x="725" fg:w="1"/><text x="57.5170%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.2670%" y="357" width="0.0790%" height="15" fill="rgb(209,55,18)" fg:x="725" fg:w="1"/><text x="57.5170%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.5829%" y="357" width="0.0790%" height="15" fill="rgb(207,133,49)" fg:x="729" fg:w="1"/><text x="57.8329%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.5829%" y="341" width="0.0790%" height="15" fill="rgb(240,33,46)" fg:x="729" fg:w="1"/><text x="57.8329%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.5829%" y="325" width="0.0790%" height="15" fill="rgb(212,35,2)" fg:x="729" fg:w="1"/><text x="57.8329%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.5829%" y="309" width="0.0790%" height="15" fill="rgb(231,119,28)" fg:x="729" fg:w="1"/><text x="57.8329%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.5829%" y="293" width="0.0790%" height="15" fill="rgb(252,178,7)" fg:x="729" fg:w="1"/><text x="57.8329%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.5829%" y="277" width="0.0790%" height="15" fill="rgb(251,91,4)" fg:x="729" fg:w="1"/><text x="57.8329%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="57.5829%" y="261" width="0.0790%" height="15" fill="rgb(233,122,19)" fg:x="729" fg:w="1"/><text x="57.8329%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.5829%" y="245" width="0.0790%" height="15" fill="rgb(231,208,46)" fg:x="729" fg:w="1"/><text x="57.8329%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="57.6619%" y="325" width="0.1580%" height="15" fill="rgb(243,15,41)" fg:x="730" fg:w="2"/><text x="57.9119%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="57.6619%" y="309" width="0.1580%" height="15" fill="rgb(210,32,43)" fg:x="730" fg:w="2"/><text x="57.9119%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.6619%" y="293" width="0.1580%" height="15" fill="rgb(222,177,15)" fg:x="730" fg:w="2"/><text x="57.9119%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="57.8199%" y="309" width="0.0790%" height="15" fill="rgb(244,121,34)" fg:x="732" fg:w="1"/><text x="58.0699%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="57.8199%" y="293" width="0.0790%" height="15" fill="rgb(234,138,4)" fg:x="732" fg:w="1"/><text x="58.0699%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8199%" y="277" width="0.0790%" height="15" fill="rgb(240,97,48)" fg:x="732" fg:w="1"/><text x="58.0699%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.63%)</title><rect x="57.4250%" y="405" width="0.6319%" height="15" fill="rgb(237,65,54)" fg:x="727" fg:w="8"/><text x="57.6750%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="57.4250%" y="389" width="0.6319%" height="15" fill="rgb(214,25,24)" fg:x="727" fg:w="8"/><text x="57.6750%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.63%)</title><rect x="57.4250%" y="373" width="0.6319%" height="15" fill="rgb(213,5,3)" fg:x="727" fg:w="8"/><text x="57.6750%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="57.6619%" y="357" width="0.3949%" height="15" fill="rgb(219,81,29)" fg:x="730" fg:w="5"/><text x="57.9119%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="57.6619%" y="341" width="0.3949%" height="15" fill="rgb(220,43,48)" fg:x="730" fg:w="5"/><text x="57.9119%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="57.8199%" y="325" width="0.2370%" height="15" fill="rgb(239,157,2)" fg:x="732" fg:w="3"/><text x="58.0699%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.8989%" y="309" width="0.1580%" height="15" fill="rgb(213,104,43)" fg:x="733" fg:w="2"/><text x="58.1489%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.8989%" y="293" width="0.1580%" height="15" fill="rgb(237,84,9)" fg:x="733" fg:w="2"/><text x="58.1489%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.79%)</title><rect x="57.3460%" y="453" width="0.7899%" height="15" fill="rgb(252,6,33)" fg:x="726" fg:w="10"/><text x="57.5960%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.79%)</title><rect x="57.3460%" y="437" width="0.7899%" height="15" fill="rgb(251,172,22)" fg:x="726" fg:w="10"/><text x="57.5960%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.79%)</title><rect x="57.3460%" y="421" width="0.7899%" height="15" fill="rgb(244,91,53)" fg:x="726" fg:w="10"/><text x="57.5960%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.0569%" y="405" width="0.0790%" height="15" fill="rgb(219,29,30)" fg:x="735" fg:w="1"/><text x="58.3069%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.2148%" y="373" width="0.0790%" height="15" fill="rgb(213,3,15)" fg:x="737" fg:w="1"/><text x="58.4648%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="58.3728%" y="325" width="0.1580%" height="15" fill="rgb(208,25,28)" fg:x="739" fg:w="2"/><text x="58.6228%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.3728%" y="309" width="0.1580%" height="15" fill="rgb(252,144,25)" fg:x="739" fg:w="2"/><text x="58.6228%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.4518%" y="293" width="0.0790%" height="15" fill="rgb(226,220,25)" fg:x="740" fg:w="1"/><text x="58.7018%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.4518%" y="277" width="0.0790%" height="15" fill="rgb(212,131,28)" fg:x="740" fg:w="1"/><text x="58.7018%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.5308%" y="325" width="0.0790%" height="15" fill="rgb(219,143,52)" fg:x="741" fg:w="1"/><text x="58.7808%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="58.5308%" y="309" width="0.0790%" height="15" fill="rgb(215,56,7)" fg:x="741" fg:w="1"/><text x="58.7808%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="58.5308%" y="293" width="0.0790%" height="15" fill="rgb(239,59,51)" fg:x="741" fg:w="1"/><text x="58.7808%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="58.2938%" y="357" width="0.3949%" height="15" fill="rgb(209,215,4)" fg:x="738" fg:w="5"/><text x="58.5438%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="58.3728%" y="341" width="0.3160%" height="15" fill="rgb(221,118,39)" fg:x="739" fg:w="4"/><text x="58.6228%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.6098%" y="325" width="0.0790%" height="15" fill="rgb(236,6,44)" fg:x="742" fg:w="1"/><text x="58.8598%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="58.2938%" y="373" width="0.5529%" height="15" fill="rgb(216,122,9)" fg:x="738" fg:w="7"/><text x="58.5438%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.6888%" y="357" width="0.1580%" height="15" fill="rgb(244,134,42)" fg:x="743" fg:w="2"/><text x="58.9388%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.6888%" y="341" width="0.1580%" height="15" fill="rgb(209,189,35)" fg:x="743" fg:w="2"/><text x="58.9388%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.05%)</title><rect x="56.8720%" y="469" width="2.0537%" height="15" fill="rgb(250,47,36)" fg:x="720" fg:w="26"/><text x="57.1220%" y="479.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.79%)</title><rect x="58.1359%" y="453" width="0.7899%" height="15" fill="rgb(252,112,4)" fg:x="736" fg:w="10"/><text x="58.3859%" y="463.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.79%)</title><rect x="58.1359%" y="437" width="0.7899%" height="15" fill="rgb(221,79,51)" fg:x="736" fg:w="10"/><text x="58.3859%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.79%)</title><rect x="58.1359%" y="421" width="0.7899%" height="15" fill="rgb(232,65,53)" fg:x="736" fg:w="10"/><text x="58.3859%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="58.1359%" y="405" width="0.7899%" height="15" fill="rgb(211,37,7)" fg:x="736" fg:w="10"/><text x="58.3859%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.71%)</title><rect x="58.2148%" y="389" width="0.7109%" height="15" fill="rgb(234,221,18)" fg:x="737" fg:w="9"/><text x="58.4648%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8468%" y="373" width="0.0790%" height="15" fill="rgb(220,158,26)" fg:x="745" fg:w="1"/><text x="59.0968%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (60 samples, 4.74%)</title><rect x="54.2654%" y="485" width="4.7393%" height="15" fill="rgb(220,70,6)" fg:x="687" fg:w="60"/><text x="54.5154%" y="495.50">engine..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="58.9258%" y="469" width="0.0790%" height="15" fill="rgb(250,39,48)" fg:x="746" fg:w="1"/><text x="59.1758%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.9258%" y="453" width="0.0790%" height="15" fill="rgb(206,40,27)" fg:x="746" fg:w="1"/><text x="59.1758%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1627%" y="373" width="0.0790%" height="15" fill="rgb(247,80,36)" fg:x="749" fg:w="1"/><text x="59.4127%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.1627%" y="357" width="0.0790%" height="15" fill="rgb(222,9,20)" fg:x="749" fg:w="1"/><text x="59.4127%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.1627%" y="341" width="0.0790%" height="15" fill="rgb(217,26,45)" fg:x="749" fg:w="1"/><text x="59.4127%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.1627%" y="325" width="0.0790%" height="15" fill="rgb(221,67,14)" fg:x="749" fg:w="1"/><text x="59.4127%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.1627%" y="309" width="0.0790%" height="15" fill="rgb(248,100,24)" fg:x="749" fg:w="1"/><text x="59.4127%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.1627%" y="293" width="0.0790%" height="15" fill="rgb(230,187,16)" fg:x="749" fg:w="1"/><text x="59.4127%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.1627%" y="277" width="0.0790%" height="15" fill="rgb(205,108,13)" fg:x="749" fg:w="1"/><text x="59.4127%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.1627%" y="261" width="0.0790%" height="15" fill="rgb(235,71,51)" fg:x="749" fg:w="1"/><text x="59.4127%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.1627%" y="245" width="0.0790%" height="15" fill="rgb(251,172,48)" fg:x="749" fg:w="1"/><text x="59.4127%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.1627%" y="229" width="0.0790%" height="15" fill="rgb(240,96,49)" fg:x="749" fg:w="1"/><text x="59.4127%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.1627%" y="213" width="0.0790%" height="15" fill="rgb(235,46,36)" fg:x="749" fg:w="1"/><text x="59.4127%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.1627%" y="197" width="0.0790%" height="15" fill="rgb(244,3,49)" fg:x="749" fg:w="1"/><text x="59.4127%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1627%" y="181" width="0.0790%" height="15" fill="rgb(206,78,54)" fg:x="749" fg:w="1"/><text x="59.4127%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.0837%" y="405" width="0.2370%" height="15" fill="rgb(208,85,42)" fg:x="748" fg:w="3"/><text x="59.3337%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.0837%" y="389" width="0.2370%" height="15" fill="rgb(219,196,21)" fg:x="748" fg:w="3"/><text x="59.3337%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2417%" y="373" width="0.0790%" height="15" fill="rgb(238,19,9)" fg:x="750" fg:w="1"/><text x="59.4917%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2417%" y="357" width="0.0790%" height="15" fill="rgb(206,86,13)" fg:x="750" fg:w="1"/><text x="59.4917%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2417%" y="341" width="0.0790%" height="15" fill="rgb(214,123,40)" fg:x="750" fg:w="1"/><text x="59.4917%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2417%" y="325" width="0.0790%" height="15" fill="rgb(243,53,5)" fg:x="750" fg:w="1"/><text x="59.4917%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2417%" y="309" width="0.0790%" height="15" fill="rgb(254,186,31)" fg:x="750" fg:w="1"/><text x="59.4917%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2417%" y="293" width="0.0790%" height="15" fill="rgb(221,216,25)" fg:x="750" fg:w="1"/><text x="59.4917%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2417%" y="277" width="0.0790%" height="15" fill="rgb(248,107,42)" fg:x="750" fg:w="1"/><text x="59.4917%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.2417%" y="261" width="0.0790%" height="15" fill="rgb(221,85,43)" fg:x="750" fg:w="1"/><text x="59.4917%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.2417%" y="245" width="0.0790%" height="15" fill="rgb(225,34,24)" fg:x="750" fg:w="1"/><text x="59.4917%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.2417%" y="229" width="0.0790%" height="15" fill="rgb(211,119,1)" fg:x="750" fg:w="1"/><text x="59.4917%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.2417%" y="213" width="0.0790%" height="15" fill="rgb(254,216,46)" fg:x="750" fg:w="1"/><text x="59.4917%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2417%" y="197" width="0.0790%" height="15" fill="rgb(238,11,38)" fg:x="750" fg:w="1"/><text x="59.4917%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3207%" y="405" width="0.0790%" height="15" fill="rgb(233,50,15)" fg:x="751" fg:w="1"/><text x="59.5707%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="59.0837%" y="437" width="0.3949%" height="15" fill="rgb(217,181,29)" fg:x="748" fg:w="5"/><text x="59.3337%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="59.0837%" y="421" width="0.3949%" height="15" fill="rgb(214,56,3)" fg:x="748" fg:w="5"/><text x="59.3337%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3997%" y="405" width="0.0790%" height="15" fill="rgb(230,69,45)" fg:x="752" fg:w="1"/><text x="59.6497%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.4787%" y="421" width="0.0790%" height="15" fill="rgb(224,201,50)" fg:x="753" fg:w="1"/><text x="59.7287%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5577%" y="389" width="0.0790%" height="15" fill="rgb(217,228,18)" fg:x="754" fg:w="1"/><text x="59.8077%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="59.4787%" y="437" width="0.3160%" height="15" fill="rgb(239,33,44)" fg:x="753" fg:w="4"/><text x="59.7287%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="59.5577%" y="421" width="0.2370%" height="15" fill="rgb(248,210,23)" fg:x="754" fg:w="3"/><text x="59.8077%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="59.5577%" y="405" width="0.2370%" height="15" fill="rgb(253,135,8)" fg:x="754" fg:w="3"/><text x="59.8077%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.6367%" y="389" width="0.1580%" height="15" fill="rgb(217,98,21)" fg:x="755" fg:w="2"/><text x="59.8867%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.6367%" y="373" width="0.1580%" height="15" fill="rgb(253,130,21)" fg:x="755" fg:w="2"/><text x="59.8867%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.6367%" y="357" width="0.1580%" height="15" fill="rgb(207,81,54)" fg:x="755" fg:w="2"/><text x="59.8867%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.6367%" y="341" width="0.1580%" height="15" fill="rgb(232,48,33)" fg:x="755" fg:w="2"/><text x="59.8867%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.6367%" y="325" width="0.1580%" height="15" fill="rgb(211,9,35)" fg:x="755" fg:w="2"/><text x="59.8867%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.6367%" y="309" width="0.1580%" height="15" fill="rgb(205,152,21)" fg:x="755" fg:w="2"/><text x="59.8867%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7946%" y="421" width="0.0790%" height="15" fill="rgb(249,21,27)" fg:x="757" fg:w="1"/><text x="60.0446%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7946%" y="405" width="0.0790%" height="15" fill="rgb(252,29,24)" fg:x="757" fg:w="1"/><text x="60.0446%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.7946%" y="389" width="0.0790%" height="15" fill="rgb(230,130,50)" fg:x="757" fg:w="1"/><text x="60.0446%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.7946%" y="373" width="0.0790%" height="15" fill="rgb(239,144,14)" fg:x="757" fg:w="1"/><text x="60.0446%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.7946%" y="357" width="0.0790%" height="15" fill="rgb(227,111,50)" fg:x="757" fg:w="1"/><text x="60.0446%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.7946%" y="341" width="0.0790%" height="15" fill="rgb(254,84,20)" fg:x="757" fg:w="1"/><text x="60.0446%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.7946%" y="325" width="0.0790%" height="15" fill="rgb(232,90,48)" fg:x="757" fg:w="1"/><text x="60.0446%" y="335.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="59.7946%" y="437" width="0.1580%" height="15" fill="rgb(253,63,47)" fg:x="757" fg:w="2"/><text x="60.0446%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.8736%" y="421" width="0.0790%" height="15" fill="rgb(251,146,35)" fg:x="758" fg:w="1"/><text x="60.1236%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.8736%" y="405" width="0.0790%" height="15" fill="rgb(229,192,35)" fg:x="758" fg:w="1"/><text x="60.1236%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.8736%" y="389" width="0.0790%" height="15" fill="rgb(225,68,9)" fg:x="758" fg:w="1"/><text x="60.1236%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.0316%" y="357" width="0.0790%" height="15" fill="rgb(214,97,34)" fg:x="760" fg:w="1"/><text x="60.2816%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.0316%" y="341" width="0.0790%" height="15" fill="rgb(253,31,26)" fg:x="760" fg:w="1"/><text x="60.2816%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.1106%" y="309" width="0.0790%" height="15" fill="rgb(225,151,47)" fg:x="761" fg:w="1"/><text x="60.3606%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.1106%" y="293" width="0.0790%" height="15" fill="rgb(206,185,9)" fg:x="761" fg:w="1"/><text x="60.3606%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.1106%" y="277" width="0.0790%" height="15" fill="rgb(249,65,17)" fg:x="761" fg:w="1"/><text x="60.3606%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.1106%" y="261" width="0.0790%" height="15" fill="rgb(220,110,10)" fg:x="761" fg:w="1"/><text x="60.3606%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.1106%" y="245" width="0.0790%" height="15" fill="rgb(222,198,49)" fg:x="761" fg:w="1"/><text x="60.3606%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.1106%" y="229" width="0.0790%" height="15" fill="rgb(239,81,13)" fg:x="761" fg:w="1"/><text x="60.3606%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.1106%" y="213" width="0.0790%" height="15" fill="rgb(216,128,11)" fg:x="761" fg:w="1"/><text x="60.3606%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="60.1896%" y="309" width="0.0790%" height="15" fill="rgb(247,156,8)" fg:x="762" fg:w="1"/><text x="60.4396%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="60.1106%" y="341" width="0.2370%" height="15" fill="rgb(219,173,1)" fg:x="761" fg:w="3"/><text x="60.3606%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.1106%" y="325" width="0.2370%" height="15" fill="rgb(227,42,24)" fg:x="761" fg:w="3"/><text x="60.3606%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.2686%" y="309" width="0.0790%" height="15" fill="rgb(253,219,50)" fg:x="763" fg:w="1"/><text x="60.5186%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.2686%" y="293" width="0.0790%" height="15" fill="rgb(215,191,54)" fg:x="763" fg:w="1"/><text x="60.5186%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.2686%" y="277" width="0.0790%" height="15" fill="rgb(238,83,12)" fg:x="763" fg:w="1"/><text x="60.5186%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="60.3476%" y="341" width="0.1580%" height="15" fill="rgb(205,124,9)" fg:x="764" fg:w="2"/><text x="60.5976%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="60.3476%" y="325" width="0.1580%" height="15" fill="rgb(253,174,7)" fg:x="764" fg:w="2"/><text x="60.5976%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.4265%" y="309" width="0.0790%" height="15" fill="rgb(206,134,49)" fg:x="765" fg:w="1"/><text x="60.6765%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.63%)</title><rect x="59.9526%" y="437" width="0.6319%" height="15" fill="rgb(221,89,20)" fg:x="759" fg:w="8"/><text x="60.2026%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="59.9526%" y="421" width="0.6319%" height="15" fill="rgb(240,205,13)" fg:x="759" fg:w="8"/><text x="60.2026%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="59.9526%" y="405" width="0.6319%" height="15" fill="rgb(237,174,32)" fg:x="759" fg:w="8"/><text x="60.2026%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.55%)</title><rect x="60.0316%" y="389" width="0.5529%" height="15" fill="rgb(226,12,15)" fg:x="760" fg:w="7"/><text x="60.2816%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="60.0316%" y="373" width="0.5529%" height="15" fill="rgb(245,160,52)" fg:x="760" fg:w="7"/><text x="60.2816%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.47%)</title><rect x="60.1106%" y="357" width="0.4739%" height="15" fill="rgb(253,80,21)" fg:x="761" fg:w="6"/><text x="60.3606%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5055%" y="341" width="0.0790%" height="15" fill="rgb(231,225,22)" fg:x="766" fg:w="1"/><text x="60.7555%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.5055%" y="325" width="0.0790%" height="15" fill="rgb(253,185,12)" fg:x="766" fg:w="1"/><text x="60.7555%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.5055%" y="309" width="0.0790%" height="15" fill="rgb(234,197,21)" fg:x="766" fg:w="1"/><text x="60.7555%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5055%" y="293" width="0.0790%" height="15" fill="rgb(210,47,30)" fg:x="766" fg:w="1"/><text x="60.7555%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.5055%" y="277" width="0.0790%" height="15" fill="rgb(246,139,27)" fg:x="766" fg:w="1"/><text x="60.7555%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.5055%" y="261" width="0.0790%" height="15" fill="rgb(226,130,16)" fg:x="766" fg:w="1"/><text x="60.7555%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.5055%" y="245" width="0.0790%" height="15" fill="rgb(237,208,20)" fg:x="766" fg:w="1"/><text x="60.7555%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.5055%" y="229" width="0.0790%" height="15" fill="rgb(245,186,28)" fg:x="766" fg:w="1"/><text x="60.7555%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.5845%" y="421" width="0.0790%" height="15" fill="rgb(238,105,39)" fg:x="767" fg:w="1"/><text x="60.8345%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="60.8215%" y="309" width="0.2370%" height="15" fill="rgb(253,228,11)" fg:x="770" fg:w="3"/><text x="61.0715%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.8215%" y="293" width="0.2370%" height="15" fill="rgb(224,136,38)" fg:x="770" fg:w="3"/><text x="61.0715%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.9005%" y="277" width="0.1580%" height="15" fill="rgb(211,3,25)" fg:x="771" fg:w="2"/><text x="61.1505%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.9005%" y="261" width="0.1580%" height="15" fill="rgb(238,66,34)" fg:x="771" fg:w="2"/><text x="61.1505%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.9005%" y="245" width="0.1580%" height="15" fill="rgb(223,188,11)" fg:x="771" fg:w="2"/><text x="61.1505%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9795%" y="229" width="0.0790%" height="15" fill="rgb(221,10,35)" fg:x="772" fg:w="1"/><text x="61.2295%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9795%" y="213" width="0.0790%" height="15" fill="rgb(223,18,44)" fg:x="772" fg:w="1"/><text x="61.2295%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="60.8215%" y="341" width="0.3160%" height="15" fill="rgb(220,97,41)" fg:x="770" fg:w="4"/><text x="61.0715%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="60.8215%" y="325" width="0.3160%" height="15" fill="rgb(206,95,45)" fg:x="770" fg:w="4"/><text x="61.0715%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0585%" y="309" width="0.0790%" height="15" fill="rgb(209,96,13)" fg:x="773" fg:w="1"/><text x="61.3085%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0585%" y="293" width="0.0790%" height="15" fill="rgb(237,39,34)" fg:x="773" fg:w="1"/><text x="61.3085%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.71%)</title><rect x="60.6635%" y="373" width="0.7109%" height="15" fill="rgb(213,49,47)" fg:x="768" fg:w="9"/><text x="60.9135%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="60.6635%" y="357" width="0.7109%" height="15" fill="rgb(205,107,27)" fg:x="768" fg:w="9"/><text x="60.9135%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="61.1374%" y="341" width="0.2370%" height="15" fill="rgb(212,142,9)" fg:x="774" fg:w="3"/><text x="61.3874%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="61.2164%" y="325" width="0.1580%" height="15" fill="rgb(226,182,0)" fg:x="775" fg:w="2"/><text x="61.4664%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.3744%" y="373" width="0.1580%" height="15" fill="rgb(231,3,53)" fg:x="777" fg:w="2"/><text x="61.6244%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.4534%" y="357" width="0.0790%" height="15" fill="rgb(246,111,28)" fg:x="778" fg:w="1"/><text x="61.7034%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (33 samples, 2.61%)</title><rect x="59.0047%" y="485" width="2.6066%" height="15" fill="rgb(254,183,7)" fg:x="747" fg:w="33"/><text x="59.2547%" y="495.50">ke..</text></g><g><title>engine::session::Session::load_entity (33 samples, 2.61%)</title><rect x="59.0047%" y="469" width="2.6066%" height="15" fill="rgb(247,177,28)" fg:x="747" fg:w="33"/><text x="59.2547%" y="479.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (33 samples, 2.61%)</title><rect x="59.0047%" y="453" width="2.6066%" height="15" fill="rgb(244,43,1)" fg:x="747" fg:w="33"/><text x="59.2547%" y="463.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (13 samples, 1.03%)</title><rect x="60.5845%" y="437" width="1.0269%" height="15" fill="rgb(207,2,35)" fg:x="767" fg:w="13"/><text x="60.8345%" y="447.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.95%)</title><rect x="60.6635%" y="421" width="0.9479%" height="15" fill="rgb(213,83,22)" fg:x="768" fg:w="12"/><text x="60.9135%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.95%)</title><rect x="60.6635%" y="405" width="0.9479%" height="15" fill="rgb(246,212,13)" fg:x="768" fg:w="12"/><text x="60.9135%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.95%)</title><rect x="60.6635%" y="389" width="0.9479%" height="15" fill="rgb(213,127,46)" fg:x="768" fg:w="12"/><text x="60.9135%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.5324%" y="373" width="0.0790%" height="15" fill="rgb(219,215,39)" fg:x="779" fg:w="1"/><text x="61.7824%" y="383.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (142 samples, 11.22%)</title><rect x="50.4739%" y="517" width="11.2164%" height="15" fill="rgb(227,99,17)" fg:x="639" fg:w="142"/><text x="50.7239%" y="527.50">engine::session::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (142 samples, 11.22%)</title><rect x="50.4739%" y="501" width="11.2164%" height="15" fill="rgb(208,155,18)" fg:x="639" fg:w="142"/><text x="50.7239%" y="511.50">engine::session::..</text></g><g><title>kernel::session::SetSession&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="61.6114%" y="485" width="0.0790%" height="15" fill="rgb(223,204,38)" fg:x="780" fg:w="1"/><text x="61.8614%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (782 samples, 61.77%)</title><rect x="0.0000%" y="565" width="61.7694%" height="15" fill="rgb(212,114,21)" fg:x="0" fg:w="782"/><text x="0.2500%" y="575.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (782 samples, 61.77%)</title><rect x="0.0000%" y="549" width="61.7694%" height="15" fill="rgb(250,74,13)" fg:x="0" fg:w="782"/><text x="0.2500%" y="559.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (782 samples, 61.77%)</title><rect x="0.0000%" y="533" width="61.7694%" height="15" fill="rgb(234,7,1)" fg:x="0" fg:w="782"/><text x="0.2500%" y="543.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="61.6904%" y="517" width="0.0790%" height="15" fill="rgb(207,138,31)" fg:x="781" fg:w="1"/><text x="61.9404%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="61.6904%" y="501" width="0.0790%" height="15" fill="rgb(215,186,42)" fg:x="781" fg:w="1"/><text x="61.9404%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="61.6904%" y="485" width="0.0790%" height="15" fill="rgb(229,205,49)" fg:x="781" fg:w="1"/><text x="61.9404%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.6904%" y="469" width="0.0790%" height="15" fill="rgb(216,156,32)" fg:x="781" fg:w="1"/><text x="61.9404%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="61.7694%" y="501" width="0.0790%" height="15" fill="rgb(238,7,21)" fg:x="782" fg:w="1"/><text x="62.0194%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.7694%" y="485" width="0.0790%" height="15" fill="rgb(249,190,22)" fg:x="782" fg:w="1"/><text x="62.0194%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="61.7694%" y="469" width="0.0790%" height="15" fill="rgb(253,51,31)" fg:x="782" fg:w="1"/><text x="62.0194%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.7694%" y="453" width="0.0790%" height="15" fill="rgb(237,90,54)" fg:x="782" fg:w="1"/><text x="62.0194%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.8483%" y="485" width="0.0790%" height="15" fill="rgb(250,214,33)" fg:x="783" fg:w="1"/><text x="62.0983%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.9273%" y="469" width="0.0790%" height="15" fill="rgb(237,10,49)" fg:x="784" fg:w="1"/><text x="62.1773%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.1643%" y="405" width="0.1580%" height="15" fill="rgb(241,56,36)" fg:x="787" fg:w="2"/><text x="62.4143%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.4013%" y="389" width="0.0790%" height="15" fill="rgb(227,164,12)" fg:x="790" fg:w="1"/><text x="62.6513%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4803%" y="373" width="0.0790%" height="15" fill="rgb(249,149,35)" fg:x="791" fg:w="1"/><text x="62.7303%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.5592%" y="373" width="0.0790%" height="15" fill="rgb(238,227,50)" fg:x="792" fg:w="1"/><text x="62.8092%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.5592%" y="357" width="0.0790%" height="15" fill="rgb(235,102,45)" fg:x="792" fg:w="1"/><text x="62.8092%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.71%)</title><rect x="62.0063%" y="437" width="0.7109%" height="15" fill="rgb(211,10,38)" fg:x="785" fg:w="9"/><text x="62.2563%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="62.0853%" y="421" width="0.6319%" height="15" fill="rgb(219,77,48)" fg:x="786" fg:w="8"/><text x="62.3353%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="62.3223%" y="405" width="0.3949%" height="15" fill="rgb(246,6,15)" fg:x="789" fg:w="5"/><text x="62.5723%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="62.4803%" y="389" width="0.2370%" height="15" fill="rgb(207,220,2)" fg:x="791" fg:w="3"/><text x="62.7303%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.6382%" y="373" width="0.0790%" height="15" fill="rgb(242,48,14)" fg:x="793" fg:w="1"/><text x="62.8882%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.6382%" y="357" width="0.0790%" height="15" fill="rgb(218,19,27)" fg:x="793" fg:w="1"/><text x="62.8882%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.9542%" y="405" width="0.1580%" height="15" fill="rgb(228,0,35)" fg:x="797" fg:w="2"/><text x="63.2042%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.1122%" y="405" width="0.0790%" height="15" fill="rgb(244,142,54)" fg:x="799" fg:w="1"/><text x="63.3622%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.1122%" y="389" width="0.0790%" height="15" fill="rgb(243,217,40)" fg:x="799" fg:w="1"/><text x="63.3622%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2701%" y="373" width="0.0790%" height="15" fill="rgb(207,114,16)" fg:x="801" fg:w="1"/><text x="63.5201%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="63.1912%" y="389" width="0.2370%" height="15" fill="rgb(224,33,25)" fg:x="800" fg:w="3"/><text x="63.4412%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.3491%" y="373" width="0.0790%" height="15" fill="rgb(230,93,54)" fg:x="802" fg:w="1"/><text x="63.5991%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.4281%" y="389" width="0.1580%" height="15" fill="rgb(224,56,24)" fg:x="803" fg:w="2"/><text x="63.6781%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.5861%" y="389" width="0.0790%" height="15" fill="rgb(235,189,50)" fg:x="805" fg:w="1"/><text x="63.8361%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.95%)</title><rect x="62.7962%" y="421" width="0.9479%" height="15" fill="rgb(242,173,8)" fg:x="795" fg:w="12"/><text x="63.0462%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="63.1912%" y="405" width="0.5529%" height="15" fill="rgb(209,206,10)" fg:x="800" fg:w="7"/><text x="63.4412%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.6651%" y="389" width="0.0790%" height="15" fill="rgb(213,182,44)" fg:x="806" fg:w="1"/><text x="63.9151%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.6651%" y="373" width="0.0790%" height="15" fill="rgb(243,51,15)" fg:x="806" fg:w="1"/><text x="63.9151%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.11%)</title><rect x="62.7172%" y="437" width="1.1058%" height="15" fill="rgb(241,13,14)" fg:x="794" fg:w="14"/><text x="62.9672%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.7441%" y="421" width="0.0790%" height="15" fill="rgb(239,147,24)" fg:x="807" fg:w="1"/><text x="63.9941%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (27 samples, 2.13%)</title><rect x="61.8483%" y="501" width="2.1327%" height="15" fill="rgb(223,129,16)" fg:x="783" fg:w="27"/><text x="62.0983%" y="511.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.05%)</title><rect x="61.9273%" y="485" width="2.0537%" height="15" fill="rgb(209,169,13)" fg:x="784" fg:w="26"/><text x="62.1773%" y="495.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (25 samples, 1.97%)</title><rect x="62.0063%" y="469" width="1.9747%" height="15" fill="rgb(235,159,41)" fg:x="785" fg:w="25"/><text x="62.2563%" y="479.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 1.97%)</title><rect x="62.0063%" y="453" width="1.9747%" height="15" fill="rgb(223,219,48)" fg:x="785" fg:w="25"/><text x="62.2563%" y="463.50">&lt;..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.8231%" y="437" width="0.1580%" height="15" fill="rgb(236,80,13)" fg:x="808" fg:w="2"/><text x="64.0731%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.29%)</title><rect x="61.7694%" y="517" width="2.2907%" height="15" fill="rgb(213,5,6)" fg:x="782" fg:w="29"/><text x="62.0194%" y="527.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="63.9810%" y="501" width="0.0790%" height="15" fill="rgb(205,59,21)" fg:x="810" fg:w="1"/><text x="64.2310%" y="511.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="64.0600%" y="469" width="0.0790%" height="15" fill="rgb(247,137,35)" fg:x="811" fg:w="1"/><text x="64.3100%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="64.2970%" y="421" width="0.0790%" height="15" fill="rgb(242,208,28)" fg:x="814" fg:w="1"/><text x="64.5470%" y="431.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="64.2970%" y="405" width="0.0790%" height="15" fill="rgb(245,62,25)" fg:x="814" fg:w="1"/><text x="64.5470%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="64.2970%" y="389" width="0.0790%" height="15" fill="rgb(233,99,54)" fg:x="814" fg:w="1"/><text x="64.5470%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2970%" y="373" width="0.0790%" height="15" fill="rgb(213,10,37)" fg:x="814" fg:w="1"/><text x="64.5470%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2970%" y="357" width="0.0790%" height="15" fill="rgb(235,143,30)" fg:x="814" fg:w="1"/><text x="64.5470%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.2970%" y="341" width="0.0790%" height="15" fill="rgb(250,146,33)" fg:x="814" fg:w="1"/><text x="64.5470%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.2970%" y="325" width="0.0790%" height="15" fill="rgb(226,198,42)" fg:x="814" fg:w="1"/><text x="64.5470%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.2970%" y="309" width="0.0790%" height="15" fill="rgb(222,55,6)" fg:x="814" fg:w="1"/><text x="64.5470%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.2970%" y="293" width="0.0790%" height="15" fill="rgb(213,224,31)" fg:x="814" fg:w="1"/><text x="64.5470%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2970%" y="277" width="0.0790%" height="15" fill="rgb(226,103,35)" fg:x="814" fg:w="1"/><text x="64.5470%" y="287.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="64.3760%" y="405" width="0.0790%" height="15" fill="rgb(205,66,45)" fg:x="815" fg:w="1"/><text x="64.6260%" y="415.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="64.3760%" y="389" width="0.0790%" height="15" fill="rgb(226,51,42)" fg:x="815" fg:w="1"/><text x="64.6260%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="64.3760%" y="373" width="0.0790%" height="15" fill="rgb(206,69,1)" fg:x="815" fg:w="1"/><text x="64.6260%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="64.3760%" y="357" width="0.0790%" height="15" fill="rgb(213,228,47)" fg:x="815" fg:w="1"/><text x="64.6260%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="64.3760%" y="341" width="0.0790%" height="15" fill="rgb(224,204,18)" fg:x="815" fg:w="1"/><text x="64.6260%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.3760%" y="325" width="0.0790%" height="15" fill="rgb(253,187,47)" fg:x="815" fg:w="1"/><text x="64.6260%" y="335.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="64.5340%" y="389" width="0.0790%" height="15" fill="rgb(232,61,2)" fg:x="817" fg:w="1"/><text x="64.7840%" y="399.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="64.4550%" y="405" width="0.2370%" height="15" fill="rgb(213,132,35)" fg:x="816" fg:w="3"/><text x="64.7050%" y="415.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="64.6130%" y="389" width="0.0790%" height="15" fill="rgb(247,33,21)" fg:x="818" fg:w="1"/><text x="64.8630%" y="399.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="65.7188%" y="325" width="0.0790%" height="15" fill="rgb(233,71,46)" fg:x="832" fg:w="1"/><text x="65.9688%" y="335.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (21 samples, 1.66%)</title><rect x="64.2180%" y="437" width="1.6588%" height="15" fill="rgb(222,173,43)" fg:x="813" fg:w="21"/><text x="64.4680%" y="447.50"></text></g><g><title>libloading::safe::Library::new (19 samples, 1.50%)</title><rect x="64.3760%" y="421" width="1.5008%" height="15" fill="rgb(249,218,47)" fg:x="815" fg:w="19"/><text x="64.6260%" y="431.50"></text></g><g><title>dlopen (15 samples, 1.18%)</title><rect x="64.6919%" y="405" width="1.1848%" height="15" fill="rgb(254,185,48)" fg:x="819" fg:w="15"/><text x="64.9419%" y="415.50"></text></g><g><title>_dl_catch_error (15 samples, 1.18%)</title><rect x="64.6919%" y="389" width="1.1848%" height="15" fill="rgb(252,165,50)" fg:x="819" fg:w="15"/><text x="64.9419%" y="399.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.18%)</title><rect x="64.6919%" y="373" width="1.1848%" height="15" fill="rgb(206,219,6)" fg:x="819" fg:w="15"/><text x="64.9419%" y="383.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.18%)</title><rect x="64.6919%" y="357" width="1.1848%" height="15" fill="rgb(212,212,45)" fg:x="819" fg:w="15"/><text x="64.9419%" y="367.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.18%)</title><rect x="64.6919%" y="341" width="1.1848%" height="15" fill="rgb(221,31,9)" fg:x="819" fg:w="15"/><text x="64.9419%" y="351.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="65.7978%" y="325" width="0.0790%" height="15" fill="rgb(234,198,39)" fg:x="833" fg:w="1"/><text x="66.0478%" y="335.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (24 samples, 1.90%)</title><rect x="64.1390%" y="453" width="1.8957%" height="15" fill="rgb(252,145,46)" fg:x="812" fg:w="24"/><text x="64.3890%" y="463.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="65.8768%" y="437" width="0.1580%" height="15" fill="rgb(237,149,0)" fg:x="834" fg:w="2"/><text x="66.1268%" y="447.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="65.8768%" y="421" width="0.1580%" height="15" fill="rgb(229,65,5)" fg:x="834" fg:w="2"/><text x="66.1268%" y="431.50"></text></g><g><title>engine::session::Session::initialize (25 samples, 1.97%)</title><rect x="64.1390%" y="469" width="1.9747%" height="15" fill="rgb(235,60,36)" fg:x="812" fg:w="25"/><text x="64.3890%" y="479.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="66.0348%" y="453" width="0.0790%" height="15" fill="rgb(222,47,18)" fg:x="836" fg:w="1"/><text x="66.2848%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.0348%" y="437" width="0.0790%" height="15" fill="rgb(235,114,22)" fg:x="836" fg:w="1"/><text x="66.2848%" y="447.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="66.1137%" y="469" width="0.2370%" height="15" fill="rgb(209,167,11)" fg:x="837" fg:w="3"/><text x="66.3637%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="66.1137%" y="453" width="0.2370%" height="15" fill="rgb(251,73,18)" fg:x="837" fg:w="3"/><text x="66.3637%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="66.1927%" y="437" width="0.1580%" height="15" fill="rgb(217,60,17)" fg:x="838" fg:w="2"/><text x="66.4427%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.2717%" y="421" width="0.0790%" height="15" fill="rgb(224,36,37)" fg:x="839" fg:w="1"/><text x="66.5217%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.2717%" y="405" width="0.0790%" height="15" fill="rgb(211,21,32)" fg:x="839" fg:w="1"/><text x="66.5217%" y="415.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (30 samples, 2.37%)</title><rect x="64.0600%" y="517" width="2.3697%" height="15" fill="rgb(231,55,48)" fg:x="811" fg:w="30"/><text x="64.3100%" y="527.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (30 samples, 2.37%)</title><rect x="64.0600%" y="501" width="2.3697%" height="15" fill="rgb(227,42,18)" fg:x="811" fg:w="30"/><text x="64.3100%" y="511.50">en..</text></g><g><title>engine::session::Session::new (30 samples, 2.37%)</title><rect x="64.0600%" y="485" width="2.3697%" height="15" fill="rgb(217,2,27)" fg:x="811" fg:w="30"/><text x="64.3100%" y="495.50">en..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="66.3507%" y="469" width="0.0790%" height="15" fill="rgb(251,138,23)" fg:x="840" fg:w="1"/><text x="66.6007%" y="479.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="66.3507%" y="453" width="0.0790%" height="15" fill="rgb(226,184,11)" fg:x="840" fg:w="1"/><text x="66.6007%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.4297%" y="501" width="0.0790%" height="15" fill="rgb(242,142,12)" fg:x="841" fg:w="1"/><text x="66.6797%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="66.5087%" y="485" width="0.1580%" height="15" fill="rgb(234,187,18)" fg:x="842" fg:w="2"/><text x="66.7587%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="66.5087%" y="469" width="0.1580%" height="15" fill="rgb(237,44,42)" fg:x="842" fg:w="2"/><text x="66.7587%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="66.5087%" y="501" width="0.2370%" height="15" fill="rgb(211,90,23)" fg:x="842" fg:w="3"/><text x="66.7587%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.6667%" y="485" width="0.0790%" height="15" fill="rgb(207,81,18)" fg:x="844" fg:w="1"/><text x="66.9167%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="66.7457%" y="501" width="0.0790%" height="15" fill="rgb(222,107,28)" fg:x="845" fg:w="1"/><text x="66.9957%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7457%" y="485" width="0.0790%" height="15" fill="rgb(237,83,52)" fg:x="845" fg:w="1"/><text x="66.9957%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="66.8246%" y="485" width="0.0790%" height="15" fill="rgb(208,67,11)" fg:x="846" fg:w="1"/><text x="67.0746%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.8246%" y="469" width="0.0790%" height="15" fill="rgb(249,157,49)" fg:x="846" fg:w="1"/><text x="67.0746%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="66.9036%" y="421" width="0.1580%" height="15" fill="rgb(243,200,1)" fg:x="847" fg:w="2"/><text x="67.1536%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9826%" y="405" width="0.0790%" height="15" fill="rgb(225,162,37)" fg:x="848" fg:w="1"/><text x="67.2326%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9826%" y="389" width="0.0790%" height="15" fill="rgb(242,92,13)" fg:x="848" fg:w="1"/><text x="67.2326%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.9826%" y="373" width="0.0790%" height="15" fill="rgb(220,43,36)" fg:x="848" fg:w="1"/><text x="67.2326%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.9826%" y="357" width="0.0790%" height="15" fill="rgb(213,165,48)" fg:x="848" fg:w="1"/><text x="67.2326%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.9826%" y="341" width="0.0790%" height="15" fill="rgb(227,200,9)" fg:x="848" fg:w="1"/><text x="67.2326%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9826%" y="325" width="0.0790%" height="15" fill="rgb(221,222,28)" fg:x="848" fg:w="1"/><text x="67.2326%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9826%" y="309" width="0.0790%" height="15" fill="rgb(223,142,26)" fg:x="848" fg:w="1"/><text x="67.2326%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.9826%" y="293" width="0.0790%" height="15" fill="rgb(243,46,9)" fg:x="848" fg:w="1"/><text x="67.2326%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.9826%" y="277" width="0.0790%" height="15" fill="rgb(250,56,11)" fg:x="848" fg:w="1"/><text x="67.2326%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.9826%" y="261" width="0.0790%" height="15" fill="rgb(229,113,5)" fg:x="848" fg:w="1"/><text x="67.2326%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.9826%" y="245" width="0.0790%" height="15" fill="rgb(244,108,28)" fg:x="848" fg:w="1"/><text x="67.2326%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.9826%" y="229" width="0.0790%" height="15" fill="rgb(242,119,50)" fg:x="848" fg:w="1"/><text x="67.2326%" y="239.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="66.9036%" y="453" width="0.2370%" height="15" fill="rgb(224,164,23)" fg:x="847" fg:w="3"/><text x="67.1536%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="66.9036%" y="437" width="0.2370%" height="15" fill="rgb(214,227,44)" fg:x="847" fg:w="3"/><text x="67.1536%" y="447.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="67.0616%" y="421" width="0.0790%" height="15" fill="rgb(238,202,4)" fg:x="849" fg:w="1"/><text x="67.3116%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0616%" y="405" width="0.0790%" height="15" fill="rgb(213,190,30)" fg:x="849" fg:w="1"/><text x="67.3116%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="67.2196%" y="373" width="0.1580%" height="15" fill="rgb(239,15,2)" fg:x="851" fg:w="2"/><text x="67.4696%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="67.2196%" y="357" width="0.1580%" height="15" fill="rgb(249,229,4)" fg:x="851" fg:w="2"/><text x="67.4696%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="67.2196%" y="341" width="0.1580%" height="15" fill="rgb(239,75,44)" fg:x="851" fg:w="2"/><text x="67.4696%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="67.2196%" y="325" width="0.1580%" height="15" fill="rgb(251,206,23)" fg:x="851" fg:w="2"/><text x="67.4696%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.2986%" y="309" width="0.0790%" height="15" fill="rgb(215,208,0)" fg:x="852" fg:w="1"/><text x="67.5486%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.2986%" y="293" width="0.0790%" height="15" fill="rgb(230,75,50)" fg:x="852" fg:w="1"/><text x="67.5486%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="67.2986%" y="277" width="0.0790%" height="15" fill="rgb(246,180,39)" fg:x="852" fg:w="1"/><text x="67.5486%" y="287.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="67.1406%" y="389" width="0.3160%" height="15" fill="rgb(249,175,24)" fg:x="850" fg:w="4"/><text x="67.3906%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.3776%" y="373" width="0.0790%" height="15" fill="rgb(247,176,22)" fg:x="853" fg:w="1"/><text x="67.6276%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.3776%" y="357" width="0.0790%" height="15" fill="rgb(241,100,24)" fg:x="853" fg:w="1"/><text x="67.6276%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.3776%" y="341" width="0.0790%" height="15" fill="rgb(233,4,35)" fg:x="853" fg:w="1"/><text x="67.6276%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="67.5355%" y="373" width="0.0790%" height="15" fill="rgb(211,164,46)" fg:x="855" fg:w="1"/><text x="67.7855%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.5355%" y="357" width="0.0790%" height="15" fill="rgb(242,99,53)" fg:x="855" fg:w="1"/><text x="67.7855%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="67.6145%" y="373" width="0.2370%" height="15" fill="rgb(243,45,33)" fg:x="856" fg:w="3"/><text x="67.8645%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="67.6935%" y="357" width="0.1580%" height="15" fill="rgb(217,55,21)" fg:x="857" fg:w="2"/><text x="67.9435%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="67.6935%" y="341" width="0.1580%" height="15" fill="rgb(245,145,46)" fg:x="857" fg:w="2"/><text x="67.9435%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.7725%" y="325" width="0.0790%" height="15" fill="rgb(215,112,45)" fg:x="858" fg:w="1"/><text x="68.0225%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.7725%" y="309" width="0.0790%" height="15" fill="rgb(228,104,16)" fg:x="858" fg:w="1"/><text x="68.0225%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="67.9305%" y="325" width="0.1580%" height="15" fill="rgb(239,186,38)" fg:x="860" fg:w="2"/><text x="68.1805%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="67.9305%" y="309" width="0.1580%" height="15" fill="rgb(228,38,35)" fg:x="860" fg:w="2"/><text x="68.1805%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.0095%" y="293" width="0.0790%" height="15" fill="rgb(251,42,40)" fg:x="861" fg:w="1"/><text x="68.2595%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.0095%" y="277" width="0.0790%" height="15" fill="rgb(210,51,19)" fg:x="861" fg:w="1"/><text x="68.2595%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.0095%" y="261" width="0.0790%" height="15" fill="rgb(236,94,42)" fg:x="861" fg:w="1"/><text x="68.2595%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.0095%" y="245" width="0.0790%" height="15" fill="rgb(239,167,16)" fg:x="861" fg:w="1"/><text x="68.2595%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.0885%" y="325" width="0.0790%" height="15" fill="rgb(252,175,31)" fg:x="862" fg:w="1"/><text x="68.3385%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.0885%" y="309" width="0.0790%" height="15" fill="rgb(206,166,30)" fg:x="862" fg:w="1"/><text x="68.3385%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.0885%" y="293" width="0.0790%" height="15" fill="rgb(206,209,37)" fg:x="862" fg:w="1"/><text x="68.3385%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.0885%" y="277" width="0.0790%" height="15" fill="rgb(226,91,4)" fg:x="862" fg:w="1"/><text x="68.3385%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="67.9305%" y="341" width="0.3160%" height="15" fill="rgb(222,167,0)" fg:x="860" fg:w="4"/><text x="68.1805%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.1675%" y="325" width="0.0790%" height="15" fill="rgb(211,70,14)" fg:x="863" fg:w="1"/><text x="68.4175%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.1675%" y="309" width="0.0790%" height="15" fill="rgb(214,84,42)" fg:x="863" fg:w="1"/><text x="68.4175%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="67.9305%" y="357" width="0.3949%" height="15" fill="rgb(235,157,37)" fg:x="860" fg:w="5"/><text x="68.1805%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.2464%" y="341" width="0.0790%" height="15" fill="rgb(225,13,6)" fg:x="864" fg:w="1"/><text x="68.4964%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="68.3254%" y="357" width="0.3949%" height="15" fill="rgb(205,202,1)" fg:x="865" fg:w="5"/><text x="68.5754%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="68.4044%" y="341" width="0.3160%" height="15" fill="rgb(232,195,26)" fg:x="866" fg:w="4"/><text x="68.6544%" y="351.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="68.7994%" y="341" width="0.0790%" height="15" fill="rgb(208,102,26)" fg:x="871" fg:w="1"/><text x="69.0494%" y="351.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (1 samples, 0.08%)</title><rect x="68.7994%" y="325" width="0.0790%" height="15" fill="rgb(215,41,39)" fg:x="871" fg:w="1"/><text x="69.0494%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="68.8784%" y="341" width="0.3949%" height="15" fill="rgb(247,139,11)" fg:x="872" fg:w="5"/><text x="69.1284%" y="351.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="68.9573%" y="325" width="0.3160%" height="15" fill="rgb(243,99,6)" fg:x="873" fg:w="4"/><text x="69.2073%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="68.9573%" y="309" width="0.3160%" height="15" fill="rgb(230,168,48)" fg:x="873" fg:w="4"/><text x="69.2073%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="69.1153%" y="293" width="0.1580%" height="15" fill="rgb(238,227,13)" fg:x="875" fg:w="2"/><text x="69.3653%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="69.1153%" y="277" width="0.1580%" height="15" fill="rgb(209,109,13)" fg:x="875" fg:w="2"/><text x="69.3653%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="69.1153%" y="261" width="0.1580%" height="15" fill="rgb(228,195,1)" fg:x="875" fg:w="2"/><text x="69.3653%" y="271.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="69.1153%" y="245" width="0.1580%" height="15" fill="rgb(230,218,0)" fg:x="875" fg:w="2"/><text x="69.3653%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="69.3523%" y="325" width="0.1580%" height="15" fill="rgb(206,1,45)" fg:x="878" fg:w="2"/><text x="69.6023%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="69.3523%" y="309" width="0.1580%" height="15" fill="rgb(209,124,26)" fg:x="878" fg:w="2"/><text x="69.6023%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.4313%" y="293" width="0.0790%" height="15" fill="rgb(220,59,8)" fg:x="879" fg:w="1"/><text x="69.6813%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.4313%" y="277" width="0.0790%" height="15" fill="rgb(251,41,37)" fg:x="879" fg:w="1"/><text x="69.6813%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.4313%" y="261" width="0.0790%" height="15" fill="rgb(239,152,21)" fg:x="879" fg:w="1"/><text x="69.6813%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.4313%" y="245" width="0.0790%" height="15" fill="rgb(226,32,1)" fg:x="879" fg:w="1"/><text x="69.6813%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="69.4313%" y="229" width="0.0790%" height="15" fill="rgb(230,154,36)" fg:x="879" fg:w="1"/><text x="69.6813%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="69.5103%" y="325" width="0.0790%" height="15" fill="rgb(208,228,43)" fg:x="880" fg:w="1"/><text x="69.7603%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.5103%" y="309" width="0.0790%" height="15" fill="rgb(214,203,3)" fg:x="880" fg:w="1"/><text x="69.7603%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.5103%" y="293" width="0.0790%" height="15" fill="rgb(207,149,29)" fg:x="880" fg:w="1"/><text x="69.7603%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="69.2733%" y="341" width="0.3949%" height="15" fill="rgb(250,105,7)" fg:x="877" fg:w="5"/><text x="69.5233%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.5893%" y="325" width="0.0790%" height="15" fill="rgb(232,222,16)" fg:x="881" fg:w="1"/><text x="69.8393%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.5893%" y="309" width="0.0790%" height="15" fill="rgb(209,32,24)" fg:x="881" fg:w="1"/><text x="69.8393%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.5893%" y="293" width="0.0790%" height="15" fill="rgb(225,13,6)" fg:x="881" fg:w="1"/><text x="69.8393%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.11%)</title><rect x="68.7204%" y="357" width="1.1058%" height="15" fill="rgb(245,226,26)" fg:x="870" fg:w="14"/><text x="68.9704%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="69.6682%" y="341" width="0.1580%" height="15" fill="rgb(229,178,27)" fg:x="882" fg:w="2"/><text x="69.9182%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="69.6682%" y="325" width="0.1580%" height="15" fill="rgb(205,227,28)" fg:x="882" fg:w="2"/><text x="69.9182%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.7472%" y="309" width="0.0790%" height="15" fill="rgb(210,191,45)" fg:x="883" fg:w="1"/><text x="69.9972%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.13%)</title><rect x="67.8515%" y="373" width="2.1327%" height="15" fill="rgb(206,124,16)" fg:x="859" fg:w="27"/><text x="68.1015%" y="383.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="69.8262%" y="357" width="0.1580%" height="15" fill="rgb(210,162,0)" fg:x="884" fg:w="2"/><text x="70.0762%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="69.8262%" y="341" width="0.1580%" height="15" fill="rgb(211,54,38)" fg:x="884" fg:w="2"/><text x="70.0762%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (37 samples, 2.92%)</title><rect x="67.1406%" y="405" width="2.9226%" height="15" fill="rgb(248,192,3)" fg:x="850" fg:w="37"/><text x="67.3906%" y="415.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.61%)</title><rect x="67.4566%" y="389" width="2.6066%" height="15" fill="rgb(233,187,18)" fg:x="854" fg:w="33"/><text x="67.7066%" y="399.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.9842%" y="373" width="0.0790%" height="15" fill="rgb(237,208,14)" fg:x="886" fg:w="1"/><text x="70.2342%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.9842%" y="357" width="0.0790%" height="15" fill="rgb(212,77,1)" fg:x="886" fg:w="1"/><text x="70.2342%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1422%" y="373" width="0.0790%" height="15" fill="rgb(210,163,22)" fg:x="888" fg:w="1"/><text x="70.3922%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="70.0632%" y="405" width="0.3160%" height="15" fill="rgb(250,58,28)" fg:x="887" fg:w="4"/><text x="70.3132%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="70.0632%" y="389" width="0.3160%" height="15" fill="rgb(254,28,41)" fg:x="887" fg:w="4"/><text x="70.3132%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.2212%" y="373" width="0.1580%" height="15" fill="rgb(237,162,36)" fg:x="889" fg:w="2"/><text x="70.4712%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.2212%" y="357" width="0.1580%" height="15" fill="rgb(232,56,6)" fg:x="889" fg:w="2"/><text x="70.4712%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.2212%" y="341" width="0.1580%" height="15" fill="rgb(216,127,42)" fg:x="889" fg:w="2"/><text x="70.4712%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.2212%" y="325" width="0.1580%" height="15" fill="rgb(241,69,15)" fg:x="889" fg:w="2"/><text x="70.4712%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.2212%" y="309" width="0.1580%" height="15" fill="rgb(227,180,19)" fg:x="889" fg:w="2"/><text x="70.4712%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4581%" y="357" width="0.0790%" height="15" fill="rgb(231,188,29)" fg:x="892" fg:w="1"/><text x="70.7081%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="70.5371%" y="341" width="0.0790%" height="15" fill="rgb(224,176,27)" fg:x="893" fg:w="1"/><text x="70.7871%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.6161%" y="309" width="0.1580%" height="15" fill="rgb(249,214,19)" fg:x="894" fg:w="2"/><text x="70.8661%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.6161%" y="293" width="0.1580%" height="15" fill="rgb(240,0,4)" fg:x="894" fg:w="2"/><text x="70.8661%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.6161%" y="277" width="0.1580%" height="15" fill="rgb(233,28,41)" fg:x="894" fg:w="2"/><text x="70.8661%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="70.7741%" y="309" width="0.0790%" height="15" fill="rgb(220,90,51)" fg:x="896" fg:w="1"/><text x="71.0241%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="70.7741%" y="293" width="0.0790%" height="15" fill="rgb(250,52,22)" fg:x="896" fg:w="1"/><text x="71.0241%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7741%" y="277" width="0.0790%" height="15" fill="rgb(231,152,36)" fg:x="896" fg:w="1"/><text x="71.0241%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="70.9321%" y="277" width="0.0790%" height="15" fill="rgb(250,218,4)" fg:x="898" fg:w="1"/><text x="71.1821%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="70.6161%" y="325" width="0.6319%" height="15" fill="rgb(210,38,21)" fg:x="894" fg:w="8"/><text x="70.8661%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="70.8531%" y="309" width="0.3949%" height="15" fill="rgb(230,75,13)" fg:x="897" fg:w="5"/><text x="71.1031%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="70.9321%" y="293" width="0.3160%" height="15" fill="rgb(250,68,53)" fg:x="898" fg:w="4"/><text x="71.1821%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="71.0111%" y="277" width="0.2370%" height="15" fill="rgb(250,210,16)" fg:x="899" fg:w="3"/><text x="71.2611%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="71.0900%" y="261" width="0.1580%" height="15" fill="rgb(240,132,5)" fg:x="900" fg:w="2"/><text x="71.3400%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.1690%" y="245" width="0.0790%" height="15" fill="rgb(222,148,48)" fg:x="901" fg:w="1"/><text x="71.4190%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.1690%" y="229" width="0.0790%" height="15" fill="rgb(247,181,24)" fg:x="901" fg:w="1"/><text x="71.4190%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.1690%" y="213" width="0.0790%" height="15" fill="rgb(239,5,31)" fg:x="901" fg:w="1"/><text x="71.4190%" y="223.50"></text></g><g><title>engine::session::Session::flush (57 samples, 4.50%)</title><rect x="66.8246%" y="501" width="4.5024%" height="15" fill="rgb(241,152,38)" fg:x="846" fg:w="57"/><text x="67.0746%" y="511.50">engin..</text></g><g><title>engine::session::state::State::close (56 samples, 4.42%)</title><rect x="66.9036%" y="485" width="4.4234%" height="15" fill="rgb(246,200,37)" fg:x="847" fg:w="56"/><text x="67.1536%" y="495.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (56 samples, 4.42%)</title><rect x="66.9036%" y="469" width="4.4234%" height="15" fill="rgb(243,210,26)" fg:x="847" fg:w="56"/><text x="67.1536%" y="479.50">engin..</text></g><g><title>core::iter::adapters::try_process (53 samples, 4.19%)</title><rect x="67.1406%" y="453" width="4.1864%" height="15" fill="rgb(222,22,22)" fg:x="850" fg:w="53"/><text x="67.3906%" y="463.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 4.19%)</title><rect x="67.1406%" y="437" width="4.1864%" height="15" fill="rgb(208,129,28)" fg:x="850" fg:w="53"/><text x="67.3906%" y="447.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (53 samples, 4.19%)</title><rect x="67.1406%" y="421" width="4.1864%" height="15" fill="rgb(254,169,28)" fg:x="850" fg:w="53"/><text x="67.3906%" y="431.50">engin..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.95%)</title><rect x="70.3791%" y="405" width="0.9479%" height="15" fill="rgb(225,45,17)" fg:x="891" fg:w="12"/><text x="70.6291%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.95%)</title><rect x="70.3791%" y="389" width="0.9479%" height="15" fill="rgb(232,199,2)" fg:x="891" fg:w="12"/><text x="70.6291%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.95%)</title><rect x="70.3791%" y="373" width="0.9479%" height="15" fill="rgb(235,33,40)" fg:x="891" fg:w="12"/><text x="70.6291%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.79%)</title><rect x="70.5371%" y="357" width="0.7899%" height="15" fill="rgb(237,89,50)" fg:x="893" fg:w="10"/><text x="70.7871%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.71%)</title><rect x="70.6161%" y="341" width="0.7109%" height="15" fill="rgb(238,126,5)" fg:x="894" fg:w="9"/><text x="70.8661%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="71.2480%" y="325" width="0.0790%" height="15" fill="rgb(247,214,42)" fg:x="902" fg:w="1"/><text x="71.4980%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="71.3270%" y="469" width="0.0790%" height="15" fill="rgb(238,60,45)" fg:x="903" fg:w="1"/><text x="71.5770%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="71.3270%" y="453" width="0.0790%" height="15" fill="rgb(225,69,44)" fg:x="903" fg:w="1"/><text x="71.5770%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3270%" y="437" width="0.0790%" height="15" fill="rgb(241,13,44)" fg:x="903" fg:w="1"/><text x="71.5770%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4060%" y="453" width="0.0790%" height="15" fill="rgb(227,121,22)" fg:x="904" fg:w="1"/><text x="71.6560%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="71.3270%" y="501" width="0.2370%" height="15" fill="rgb(231,160,23)" fg:x="903" fg:w="3"/><text x="71.5770%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="71.3270%" y="485" width="0.2370%" height="15" fill="rgb(250,179,43)" fg:x="903" fg:w="3"/><text x="71.5770%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="71.4060%" y="469" width="0.1580%" height="15" fill="rgb(233,54,46)" fg:x="904" fg:w="2"/><text x="71.6560%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="71.4850%" y="453" width="0.0790%" height="15" fill="rgb(247,120,42)" fg:x="905" fg:w="1"/><text x="71.7350%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4850%" y="437" width="0.0790%" height="15" fill="rgb(221,219,12)" fg:x="905" fg:w="1"/><text x="71.7350%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.5640%" y="437" width="0.0790%" height="15" fill="rgb(211,126,8)" fg:x="906" fg:w="1"/><text x="71.8140%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.5640%" y="421" width="0.0790%" height="15" fill="rgb(218,154,33)" fg:x="906" fg:w="1"/><text x="71.8140%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.5640%" y="405" width="0.0790%" height="15" fill="rgb(212,199,16)" fg:x="906" fg:w="1"/><text x="71.8140%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="71.5640%" y="453" width="0.1580%" height="15" fill="rgb(236,215,46)" fg:x="906" fg:w="2"/><text x="71.8140%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.6430%" y="437" width="0.0790%" height="15" fill="rgb(232,32,22)" fg:x="907" fg:w="1"/><text x="71.8930%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.6430%" y="421" width="0.0790%" height="15" fill="rgb(234,79,15)" fg:x="907" fg:w="1"/><text x="71.8930%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.6430%" y="405" width="0.0790%" height="15" fill="rgb(235,187,47)" fg:x="907" fg:w="1"/><text x="71.8930%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.6430%" y="389" width="0.0790%" height="15" fill="rgb(244,69,37)" fg:x="907" fg:w="1"/><text x="71.8930%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.6430%" y="373" width="0.0790%" height="15" fill="rgb(249,140,25)" fg:x="907" fg:w="1"/><text x="71.8930%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.7220%" y="421" width="0.0790%" height="15" fill="rgb(213,69,8)" fg:x="908" fg:w="1"/><text x="71.9720%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.7220%" y="405" width="0.0790%" height="15" fill="rgb(220,136,2)" fg:x="908" fg:w="1"/><text x="71.9720%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.7220%" y="389" width="0.0790%" height="15" fill="rgb(237,50,36)" fg:x="908" fg:w="1"/><text x="71.9720%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="71.7220%" y="437" width="0.1580%" height="15" fill="rgb(226,18,11)" fg:x="908" fg:w="2"/><text x="71.9720%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.8009%" y="421" width="0.0790%" height="15" fill="rgb(243,156,2)" fg:x="909" fg:w="1"/><text x="72.0509%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.8009%" y="405" width="0.0790%" height="15" fill="rgb(218,8,34)" fg:x="909" fg:w="1"/><text x="72.0509%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.8799%" y="405" width="0.0790%" height="15" fill="rgb(250,94,35)" fg:x="910" fg:w="1"/><text x="72.1299%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.47%)</title><rect x="71.5640%" y="469" width="0.4739%" height="15" fill="rgb(229,127,21)" fg:x="906" fg:w="6"/><text x="71.8140%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="71.7220%" y="453" width="0.3160%" height="15" fill="rgb(234,49,5)" fg:x="908" fg:w="4"/><text x="71.9720%" y="463.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="71.8799%" y="437" width="0.1580%" height="15" fill="rgb(248,12,16)" fg:x="910" fg:w="2"/><text x="72.1299%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="71.8799%" y="421" width="0.1580%" height="15" fill="rgb(208,220,31)" fg:x="910" fg:w="2"/><text x="72.1299%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.9589%" y="405" width="0.0790%" height="15" fill="rgb(243,184,0)" fg:x="911" fg:w="1"/><text x="72.2089%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.9589%" y="389" width="0.0790%" height="15" fill="rgb(217,38,21)" fg:x="911" fg:w="1"/><text x="72.2089%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="71.9589%" y="373" width="0.0790%" height="15" fill="rgb(239,120,45)" fg:x="911" fg:w="1"/><text x="72.2089%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.9589%" y="357" width="0.0790%" height="15" fill="rgb(235,33,2)" fg:x="911" fg:w="1"/><text x="72.2089%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0379%" y="389" width="0.0790%" height="15" fill="rgb(249,161,5)" fg:x="912" fg:w="1"/><text x="72.2879%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.1169%" y="389" width="0.0790%" height="15" fill="rgb(250,165,48)" fg:x="913" fg:w="1"/><text x="72.3669%" y="399.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="72.0379%" y="421" width="0.2370%" height="15" fill="rgb(221,23,45)" fg:x="912" fg:w="3"/><text x="72.2879%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="72.0379%" y="405" width="0.2370%" height="15" fill="rgb(217,108,46)" fg:x="912" fg:w="3"/><text x="72.2879%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.1959%" y="389" width="0.0790%" height="15" fill="rgb(254,26,35)" fg:x="914" fg:w="1"/><text x="72.4459%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1959%" y="373" width="0.0790%" height="15" fill="rgb(218,223,28)" fg:x="914" fg:w="1"/><text x="72.4459%" y="383.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="72.1959%" y="357" width="0.0790%" height="15" fill="rgb(242,27,47)" fg:x="914" fg:w="1"/><text x="72.4459%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.39%)</title><rect x="72.0379%" y="453" width="0.3949%" height="15" fill="rgb(218,39,35)" fg:x="912" fg:w="5"/><text x="72.2879%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.39%)</title><rect x="72.0379%" y="437" width="0.3949%" height="15" fill="rgb(232,127,16)" fg:x="912" fg:w="5"/><text x="72.2879%" y="447.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="72.2749%" y="421" width="0.1580%" height="15" fill="rgb(231,219,51)" fg:x="915" fg:w="2"/><text x="72.5249%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="72.2749%" y="405" width="0.1580%" height="15" fill="rgb(217,220,46)" fg:x="915" fg:w="2"/><text x="72.5249%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.2749%" y="389" width="0.1580%" height="15" fill="rgb(230,75,1)" fg:x="915" fg:w="2"/><text x="72.5249%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="72.3539%" y="373" width="0.0790%" height="15" fill="rgb(218,2,8)" fg:x="916" fg:w="1"/><text x="72.6039%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="72.4329%" y="453" width="0.0790%" height="15" fill="rgb(206,111,30)" fg:x="917" fg:w="1"/><text x="72.6829%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.4329%" y="437" width="0.0790%" height="15" fill="rgb(209,135,6)" fg:x="917" fg:w="1"/><text x="72.6829%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.4329%" y="421" width="0.0790%" height="15" fill="rgb(205,169,10)" fg:x="917" fg:w="1"/><text x="72.6829%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="72.4329%" y="405" width="0.0790%" height="15" fill="rgb(212,204,38)" fg:x="917" fg:w="1"/><text x="72.6829%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5118%" y="421" width="0.0790%" height="15" fill="rgb(205,199,14)" fg:x="918" fg:w="1"/><text x="72.7618%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5908%" y="373" width="0.0790%" height="15" fill="rgb(212,4,6)" fg:x="919" fg:w="1"/><text x="72.8408%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.26%)</title><rect x="71.5640%" y="485" width="1.2638%" height="15" fill="rgb(250,15,10)" fg:x="906" fg:w="16"/><text x="71.8140%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.79%)</title><rect x="72.0379%" y="469" width="0.7899%" height="15" fill="rgb(212,49,51)" fg:x="912" fg:w="10"/><text x="72.2879%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="72.5118%" y="453" width="0.3160%" height="15" fill="rgb(235,21,9)" fg:x="918" fg:w="4"/><text x="72.7618%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="72.5118%" y="437" width="0.3160%" height="15" fill="rgb(251,31,32)" fg:x="918" fg:w="4"/><text x="72.7618%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="72.5908%" y="421" width="0.2370%" height="15" fill="rgb(246,23,9)" fg:x="919" fg:w="3"/><text x="72.8408%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="72.5908%" y="405" width="0.2370%" height="15" fill="rgb(225,216,14)" fg:x="919" fg:w="3"/><text x="72.8408%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="72.5908%" y="389" width="0.2370%" height="15" fill="rgb(215,200,26)" fg:x="919" fg:w="3"/><text x="72.8408%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="72.6698%" y="373" width="0.1580%" height="15" fill="rgb(237,130,47)" fg:x="920" fg:w="2"/><text x="72.9198%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="72.6698%" y="357" width="0.1580%" height="15" fill="rgb(247,74,14)" fg:x="920" fg:w="2"/><text x="72.9198%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="72.6698%" y="341" width="0.1580%" height="15" fill="rgb(254,97,46)" fg:x="920" fg:w="2"/><text x="72.9198%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="72.7488%" y="325" width="0.0790%" height="15" fill="rgb(234,191,1)" fg:x="921" fg:w="1"/><text x="72.9988%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7488%" y="309" width="0.0790%" height="15" fill="rgb(215,165,14)" fg:x="921" fg:w="1"/><text x="72.9988%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7488%" y="293" width="0.0790%" height="15" fill="rgb(230,182,6)" fg:x="921" fg:w="1"/><text x="72.9988%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.7488%" y="277" width="0.0790%" height="15" fill="rgb(210,127,39)" fg:x="921" fg:w="1"/><text x="72.9988%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.8278%" y="469" width="0.0790%" height="15" fill="rgb(223,212,51)" fg:x="922" fg:w="1"/><text x="73.0778%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.9068%" y="437" width="0.0790%" height="15" fill="rgb(226,176,43)" fg:x="923" fg:w="1"/><text x="73.1568%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.9068%" y="421" width="0.0790%" height="15" fill="rgb(222,155,4)" fg:x="923" fg:w="1"/><text x="73.1568%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (19 samples, 1.50%)</title><rect x="71.5640%" y="501" width="1.5008%" height="15" fill="rgb(215,149,7)" fg:x="906" fg:w="19"/><text x="71.8140%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="72.8278%" y="485" width="0.2370%" height="15" fill="rgb(252,199,23)" fg:x="922" fg:w="3"/><text x="73.0778%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="72.9068%" y="469" width="0.1580%" height="15" fill="rgb(245,52,29)" fg:x="923" fg:w="2"/><text x="73.1568%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="72.9068%" y="453" width="0.1580%" height="15" fill="rgb(221,228,19)" fg:x="923" fg:w="2"/><text x="73.1568%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.9858%" y="437" width="0.0790%" height="15" fill="rgb(253,101,6)" fg:x="924" fg:w="1"/><text x="73.2358%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9858%" y="421" width="0.0790%" height="15" fill="rgb(211,130,8)" fg:x="924" fg:w="1"/><text x="73.2358%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.9858%" y="405" width="0.0790%" height="15" fill="rgb(238,37,53)" fg:x="924" fg:w="1"/><text x="73.2358%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9858%" y="389" width="0.0790%" height="15" fill="rgb(235,145,5)" fg:x="924" fg:w="1"/><text x="73.2358%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.9858%" y="373" width="0.0790%" height="15" fill="rgb(244,12,43)" fg:x="924" fg:w="1"/><text x="73.2358%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9858%" y="357" width="0.0790%" height="15" fill="rgb(246,195,24)" fg:x="924" fg:w="1"/><text x="73.2358%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="73.0648%" y="453" width="0.0790%" height="15" fill="rgb(235,163,6)" fg:x="925" fg:w="1"/><text x="73.3148%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="73.0648%" y="437" width="0.0790%" height="15" fill="rgb(236,218,17)" fg:x="925" fg:w="1"/><text x="73.3148%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="73.0648%" y="421" width="0.0790%" height="15" fill="rgb(235,12,38)" fg:x="925" fg:w="1"/><text x="73.3148%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (3 samples, 0.24%)</title><rect x="73.0648%" y="501" width="0.2370%" height="15" fill="rgb(225,195,33)" fg:x="925" fg:w="3"/><text x="73.3148%" y="511.50"></text></g><g><title>plugins_core::tools::set_quantity (3 samples, 0.24%)</title><rect x="73.0648%" y="485" width="0.2370%" height="15" fill="rgb(238,54,35)" fg:x="925" fg:w="3"/><text x="73.3148%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="73.0648%" y="469" width="0.2370%" height="15" fill="rgb(238,33,7)" fg:x="925" fg:w="3"/><text x="73.3148%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (2 samples, 0.16%)</title><rect x="73.1438%" y="453" width="0.1580%" height="15" fill="rgb(245,5,14)" fg:x="926" fg:w="2"/><text x="73.3938%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.1438%" y="437" width="0.1580%" height="15" fill="rgb(251,95,31)" fg:x="926" fg:w="2"/><text x="73.3938%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (2 samples, 0.16%)</title><rect x="73.1438%" y="421" width="0.1580%" height="15" fill="rgb(222,15,46)" fg:x="926" fg:w="2"/><text x="73.3938%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.1438%" y="405" width="0.1580%" height="15" fill="rgb(226,182,24)" fg:x="926" fg:w="2"/><text x="73.3938%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="73.1438%" y="389" width="0.1580%" height="15" fill="rgb(229,105,41)" fg:x="926" fg:w="2"/><text x="73.3938%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.1438%" y="373" width="0.1580%" height="15" fill="rgb(216,99,53)" fg:x="926" fg:w="2"/><text x="73.3938%" y="383.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="73.3017%" y="469" width="0.0790%" height="15" fill="rgb(253,26,20)" fg:x="928" fg:w="1"/><text x="73.5517%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="73.3017%" y="453" width="0.0790%" height="15" fill="rgb(249,155,28)" fg:x="928" fg:w="1"/><text x="73.5517%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.3017%" y="437" width="0.0790%" height="15" fill="rgb(241,221,2)" fg:x="928" fg:w="1"/><text x="73.5517%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="73.3017%" y="421" width="0.0790%" height="15" fill="rgb(219,124,6)" fg:x="928" fg:w="1"/><text x="73.5517%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.3807%" y="389" width="0.0790%" height="15" fill="rgb(233,37,6)" fg:x="929" fg:w="1"/><text x="73.6307%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3807%" y="373" width="0.0790%" height="15" fill="rgb(238,20,14)" fg:x="929" fg:w="1"/><text x="73.6307%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="73.3807%" y="469" width="0.1580%" height="15" fill="rgb(232,106,27)" fg:x="929" fg:w="2"/><text x="73.6307%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="73.3807%" y="453" width="0.1580%" height="15" fill="rgb(246,157,24)" fg:x="929" fg:w="2"/><text x="73.6307%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="73.3807%" y="437" width="0.1580%" height="15" fill="rgb(214,153,10)" fg:x="929" fg:w="2"/><text x="73.6307%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="73.3807%" y="421" width="0.1580%" height="15" fill="rgb(212,94,6)" fg:x="929" fg:w="2"/><text x="73.6307%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="73.3807%" y="405" width="0.1580%" height="15" fill="rgb(254,25,27)" fg:x="929" fg:w="2"/><text x="73.6307%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.4597%" y="389" width="0.0790%" height="15" fill="rgb(250,43,52)" fg:x="930" fg:w="1"/><text x="73.7097%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.4597%" y="373" width="0.0790%" height="15" fill="rgb(221,226,40)" fg:x="930" fg:w="1"/><text x="73.7097%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.4597%" y="357" width="0.0790%" height="15" fill="rgb(235,162,34)" fg:x="930" fg:w="1"/><text x="73.7097%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.4597%" y="341" width="0.0790%" height="15" fill="rgb(239,24,26)" fg:x="930" fg:w="1"/><text x="73.7097%" y="351.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="73.5387%" y="469" width="0.0790%" height="15" fill="rgb(244,226,11)" fg:x="931" fg:w="1"/><text x="73.7887%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5387%" y="453" width="0.0790%" height="15" fill="rgb(225,23,10)" fg:x="931" fg:w="1"/><text x="73.7887%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.5387%" y="437" width="0.0790%" height="15" fill="rgb(249,125,6)" fg:x="931" fg:w="1"/><text x="73.7887%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.5387%" y="421" width="0.0790%" height="15" fill="rgb(246,212,12)" fg:x="931" fg:w="1"/><text x="73.7887%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5387%" y="405" width="0.0790%" height="15" fill="rgb(230,43,32)" fg:x="931" fg:w="1"/><text x="73.7887%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.5387%" y="389" width="0.0790%" height="15" fill="rgb(210,95,23)" fg:x="931" fg:w="1"/><text x="73.7887%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5387%" y="373" width="0.0790%" height="15" fill="rgb(229,103,33)" fg:x="931" fg:w="1"/><text x="73.7887%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.6967%" y="405" width="0.0790%" height="15" fill="rgb(222,104,27)" fg:x="933" fg:w="1"/><text x="73.9467%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.6967%" y="389" width="0.0790%" height="15" fill="rgb(239,221,23)" fg:x="933" fg:w="1"/><text x="73.9467%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.6967%" y="373" width="0.0790%" height="15" fill="rgb(222,98,21)" fg:x="933" fg:w="1"/><text x="73.9467%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.6967%" y="357" width="0.0790%" height="15" fill="rgb(231,101,20)" fg:x="933" fg:w="1"/><text x="73.9467%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.6967%" y="341" width="0.0790%" height="15" fill="rgb(215,150,22)" fg:x="933" fg:w="1"/><text x="73.9467%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.6967%" y="325" width="0.0790%" height="15" fill="rgb(248,3,34)" fg:x="933" fg:w="1"/><text x="73.9467%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.6967%" y="309" width="0.0790%" height="15" fill="rgb(220,141,21)" fg:x="933" fg:w="1"/><text x="73.9467%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.6967%" y="293" width="0.0790%" height="15" fill="rgb(223,41,48)" fg:x="933" fg:w="1"/><text x="73.9467%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.6967%" y="277" width="0.0790%" height="15" fill="rgb(247,12,5)" fg:x="933" fg:w="1"/><text x="73.9467%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.6967%" y="261" width="0.0790%" height="15" fill="rgb(206,173,10)" fg:x="933" fg:w="1"/><text x="73.9467%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.6967%" y="245" width="0.0790%" height="15" fill="rgb(233,214,37)" fg:x="933" fg:w="1"/><text x="73.9467%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.6967%" y="229" width="0.0790%" height="15" fill="rgb(238,86,43)" fg:x="933" fg:w="1"/><text x="73.9467%" y="239.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="73.6967%" y="453" width="0.1580%" height="15" fill="rgb(212,182,8)" fg:x="933" fg:w="2"/><text x="73.9467%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.6967%" y="437" width="0.1580%" height="15" fill="rgb(240,91,47)" fg:x="933" fg:w="2"/><text x="73.9467%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.6967%" y="421" width="0.1580%" height="15" fill="rgb(209,138,26)" fg:x="933" fg:w="2"/><text x="73.9467%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7757%" y="405" width="0.0790%" height="15" fill="rgb(231,163,20)" fg:x="934" fg:w="1"/><text x="74.0257%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="73.8547%" y="453" width="0.0790%" height="15" fill="rgb(214,91,54)" fg:x="935" fg:w="1"/><text x="74.1047%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.9336%" y="405" width="0.0790%" height="15" fill="rgb(230,32,17)" fg:x="936" fg:w="1"/><text x="74.1836%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.9336%" y="389" width="0.0790%" height="15" fill="rgb(231,34,34)" fg:x="936" fg:w="1"/><text x="74.1836%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.9336%" y="373" width="0.0790%" height="15" fill="rgb(224,228,27)" fg:x="936" fg:w="1"/><text x="74.1836%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.9336%" y="357" width="0.0790%" height="15" fill="rgb(219,35,40)" fg:x="936" fg:w="1"/><text x="74.1836%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.9336%" y="341" width="0.0790%" height="15" fill="rgb(234,42,8)" fg:x="936" fg:w="1"/><text x="74.1836%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.9336%" y="325" width="0.0790%" height="15" fill="rgb(226,75,22)" fg:x="936" fg:w="1"/><text x="74.1836%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.9336%" y="309" width="0.0790%" height="15" fill="rgb(242,203,28)" fg:x="936" fg:w="1"/><text x="74.1836%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.9336%" y="293" width="0.0790%" height="15" fill="rgb(221,3,9)" fg:x="936" fg:w="1"/><text x="74.1836%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.9336%" y="277" width="0.0790%" height="15" fill="rgb(214,34,31)" fg:x="936" fg:w="1"/><text x="74.1836%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.9336%" y="261" width="0.0790%" height="15" fill="rgb(252,119,15)" fg:x="936" fg:w="1"/><text x="74.1836%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.9336%" y="245" width="0.0790%" height="15" fill="rgb(244,224,31)" fg:x="936" fg:w="1"/><text x="74.1836%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9336%" y="229" width="0.0790%" height="15" fill="rgb(215,8,51)" fg:x="936" fg:w="1"/><text x="74.1836%" y="239.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.47%)</title><rect x="73.6177%" y="469" width="0.4739%" height="15" fill="rgb(207,24,1)" fg:x="932" fg:w="6"/><text x="73.8677%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="73.9336%" y="453" width="0.1580%" height="15" fill="rgb(245,90,0)" fg:x="936" fg:w="2"/><text x="74.1836%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="73.9336%" y="437" width="0.1580%" height="15" fill="rgb(246,43,48)" fg:x="936" fg:w="2"/><text x="74.1836%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="73.9336%" y="421" width="0.1580%" height="15" fill="rgb(252,218,10)" fg:x="936" fg:w="2"/><text x="74.1836%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.0126%" y="405" width="0.0790%" height="15" fill="rgb(231,24,35)" fg:x="937" fg:w="1"/><text x="74.2626%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="74.0126%" y="389" width="0.0790%" height="15" fill="rgb(225,66,19)" fg:x="937" fg:w="1"/><text x="74.2626%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.0126%" y="373" width="0.0790%" height="15" fill="rgb(214,96,51)" fg:x="937" fg:w="1"/><text x="74.2626%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.0126%" y="357" width="0.0790%" height="15" fill="rgb(251,151,47)" fg:x="937" fg:w="1"/><text x="74.2626%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.0126%" y="341" width="0.0790%" height="15" fill="rgb(236,79,14)" fg:x="937" fg:w="1"/><text x="74.2626%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.0126%" y="325" width="0.0790%" height="15" fill="rgb(210,205,11)" fg:x="937" fg:w="1"/><text x="74.2626%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0126%" y="309" width="0.0790%" height="15" fill="rgb(233,142,53)" fg:x="937" fg:w="1"/><text x="74.2626%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0126%" y="293" width="0.0790%" height="15" fill="rgb(212,116,48)" fg:x="937" fg:w="1"/><text x="74.2626%" y="303.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (12 samples, 0.95%)</title><rect x="73.3017%" y="501" width="0.9479%" height="15" fill="rgb(234,55,33)" fg:x="928" fg:w="12"/><text x="73.5517%" y="511.50"></text></g><g><title>plugins_core::tools::set_container (12 samples, 0.95%)</title><rect x="73.3017%" y="485" width="0.9479%" height="15" fill="rgb(253,92,27)" fg:x="928" fg:w="12"/><text x="73.5517%" y="495.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="74.0916%" y="469" width="0.1580%" height="15" fill="rgb(220,7,35)" fg:x="938" fg:w="2"/><text x="74.3416%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="74.0916%" y="453" width="0.1580%" height="15" fill="rgb(246,124,6)" fg:x="938" fg:w="2"/><text x="74.3416%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="74.1706%" y="437" width="0.0790%" height="15" fill="rgb(212,111,51)" fg:x="939" fg:w="1"/><text x="74.4206%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.1706%" y="421" width="0.0790%" height="15" fill="rgb(253,116,7)" fg:x="939" fg:w="1"/><text x="74.4206%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.1706%" y="405" width="0.0790%" height="15" fill="rgb(213,145,18)" fg:x="939" fg:w="1"/><text x="74.4206%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.3286%" y="485" width="0.0790%" height="15" fill="rgb(219,149,7)" fg:x="941" fg:w="1"/><text x="74.5786%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.3286%" y="469" width="0.0790%" height="15" fill="rgb(225,156,20)" fg:x="941" fg:w="1"/><text x="74.5786%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.3286%" y="453" width="0.0790%" height="15" fill="rgb(211,98,19)" fg:x="941" fg:w="1"/><text x="74.5786%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.3286%" y="437" width="0.0790%" height="15" fill="rgb(231,192,31)" fg:x="941" fg:w="1"/><text x="74.5786%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.3286%" y="421" width="0.0790%" height="15" fill="rgb(249,95,19)" fg:x="941" fg:w="1"/><text x="74.5786%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.3286%" y="405" width="0.0790%" height="15" fill="rgb(247,101,36)" fg:x="941" fg:w="1"/><text x="74.5786%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="74.4076%" y="485" width="0.0790%" height="15" fill="rgb(221,45,43)" fg:x="942" fg:w="1"/><text x="74.6576%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="74.4866%" y="485" width="0.0790%" height="15" fill="rgb(220,42,1)" fg:x="943" fg:w="1"/><text x="74.7366%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.4866%" y="469" width="0.0790%" height="15" fill="rgb(236,19,24)" fg:x="943" fg:w="1"/><text x="74.7366%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="74.4866%" y="453" width="0.0790%" height="15" fill="rgb(225,192,6)" fg:x="943" fg:w="1"/><text x="74.7366%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4866%" y="437" width="0.0790%" height="15" fill="rgb(242,30,19)" fg:x="943" fg:w="1"/><text x="74.7366%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4866%" y="421" width="0.0790%" height="15" fill="rgb(240,36,6)" fg:x="943" fg:w="1"/><text x="74.7366%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.5656%" y="485" width="0.0790%" height="15" fill="rgb(246,40,28)" fg:x="944" fg:w="1"/><text x="74.8156%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6445%" y="357" width="0.0790%" height="15" fill="rgb(225,155,33)" fg:x="945" fg:w="1"/><text x="74.8945%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6445%" y="341" width="0.0790%" height="15" fill="rgb(240,65,18)" fg:x="945" fg:w="1"/><text x="74.8945%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6445%" y="325" width="0.0790%" height="15" fill="rgb(217,0,48)" fg:x="945" fg:w="1"/><text x="74.8945%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="74.6445%" y="405" width="0.2370%" height="15" fill="rgb(217,80,15)" fg:x="945" fg:w="3"/><text x="74.8945%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.6445%" y="389" width="0.2370%" height="15" fill="rgb(253,43,51)" fg:x="945" fg:w="3"/><text x="74.8945%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="74.6445%" y="373" width="0.2370%" height="15" fill="rgb(246,60,4)" fg:x="945" fg:w="3"/><text x="74.8945%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.7235%" y="357" width="0.1580%" height="15" fill="rgb(230,40,54)" fg:x="946" fg:w="2"/><text x="74.9735%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7235%" y="341" width="0.1580%" height="15" fill="rgb(208,20,44)" fg:x="946" fg:w="2"/><text x="74.9735%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.7235%" y="325" width="0.1580%" height="15" fill="rgb(230,22,22)" fg:x="946" fg:w="2"/><text x="74.9735%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7235%" y="309" width="0.1580%" height="15" fill="rgb(207,57,4)" fg:x="946" fg:w="2"/><text x="74.9735%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.7235%" y="293" width="0.1580%" height="15" fill="rgb(242,130,33)" fg:x="946" fg:w="2"/><text x="74.9735%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8025%" y="277" width="0.0790%" height="15" fill="rgb(218,66,43)" fg:x="947" fg:w="1"/><text x="75.0525%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8815%" y="325" width="0.0790%" height="15" fill="rgb(236,105,16)" fg:x="948" fg:w="1"/><text x="75.1315%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8815%" y="309" width="0.0790%" height="15" fill="rgb(230,46,15)" fg:x="948" fg:w="1"/><text x="75.1315%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.39%)</title><rect x="74.6445%" y="485" width="0.3949%" height="15" fill="rgb(251,172,40)" fg:x="945" fg:w="5"/><text x="74.8945%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.39%)</title><rect x="74.6445%" y="469" width="0.3949%" height="15" fill="rgb(225,217,32)" fg:x="945" fg:w="5"/><text x="74.8945%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.39%)</title><rect x="74.6445%" y="453" width="0.3949%" height="15" fill="rgb(243,10,29)" fg:x="945" fg:w="5"/><text x="74.8945%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.39%)</title><rect x="74.6445%" y="437" width="0.3949%" height="15" fill="rgb(207,102,10)" fg:x="945" fg:w="5"/><text x="74.8945%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.39%)</title><rect x="74.6445%" y="421" width="0.3949%" height="15" fill="rgb(241,125,5)" fg:x="945" fg:w="5"/><text x="74.8945%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="74.8815%" y="405" width="0.1580%" height="15" fill="rgb(230,125,29)" fg:x="948" fg:w="2"/><text x="75.1315%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.8815%" y="389" width="0.1580%" height="15" fill="rgb(223,65,44)" fg:x="948" fg:w="2"/><text x="75.1315%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="74.8815%" y="373" width="0.1580%" height="15" fill="rgb(224,188,28)" fg:x="948" fg:w="2"/><text x="75.1315%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.8815%" y="357" width="0.1580%" height="15" fill="rgb(254,197,27)" fg:x="948" fg:w="2"/><text x="75.1315%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.8815%" y="341" width="0.1580%" height="15" fill="rgb(220,200,25)" fg:x="948" fg:w="2"/><text x="75.1315%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9605%" y="325" width="0.0790%" height="15" fill="rgb(239,225,54)" fg:x="949" fg:w="1"/><text x="75.2105%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="75.0395%" y="453" width="0.2370%" height="15" fill="rgb(211,59,40)" fg:x="950" fg:w="3"/><text x="75.2895%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="75.0395%" y="437" width="0.2370%" height="15" fill="rgb(213,176,46)" fg:x="950" fg:w="3"/><text x="75.2895%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="75.1975%" y="421" width="0.0790%" height="15" fill="rgb(226,99,4)" fg:x="952" fg:w="1"/><text x="75.4475%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.1975%" y="405" width="0.0790%" height="15" fill="rgb(239,203,43)" fg:x="952" fg:w="1"/><text x="75.4475%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="75.0395%" y="469" width="0.3160%" height="15" fill="rgb(246,1,45)" fg:x="950" fg:w="4"/><text x="75.2895%" y="479.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="75.2765%" y="453" width="0.0790%" height="15" fill="rgb(231,42,52)" fg:x="953" fg:w="1"/><text x="75.5265%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="75.2765%" y="437" width="0.0790%" height="15" fill="rgb(240,13,50)" fg:x="953" fg:w="1"/><text x="75.5265%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="75.2765%" y="421" width="0.0790%" height="15" fill="rgb(225,81,14)" fg:x="953" fg:w="1"/><text x="75.5265%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.4344%" y="421" width="0.0790%" height="15" fill="rgb(216,182,23)" fg:x="955" fg:w="1"/><text x="75.6844%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="75.4344%" y="405" width="0.0790%" height="15" fill="rgb(233,137,19)" fg:x="955" fg:w="1"/><text x="75.6844%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="75.4344%" y="389" width="0.0790%" height="15" fill="rgb(242,61,46)" fg:x="955" fg:w="1"/><text x="75.6844%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.4344%" y="373" width="0.0790%" height="15" fill="rgb(221,168,51)" fg:x="955" fg:w="1"/><text x="75.6844%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.4344%" y="357" width="0.0790%" height="15" fill="rgb(238,48,15)" fg:x="955" fg:w="1"/><text x="75.6844%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.4344%" y="341" width="0.0790%" height="15" fill="rgb(216,13,16)" fg:x="955" fg:w="1"/><text x="75.6844%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.4344%" y="325" width="0.0790%" height="15" fill="rgb(223,185,34)" fg:x="955" fg:w="1"/><text x="75.6844%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.4344%" y="309" width="0.0790%" height="15" fill="rgb(228,94,42)" fg:x="955" fg:w="1"/><text x="75.6844%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.4344%" y="293" width="0.0790%" height="15" fill="rgb(218,166,43)" fg:x="955" fg:w="1"/><text x="75.6844%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.4344%" y="277" width="0.0790%" height="15" fill="rgb(232,30,50)" fg:x="955" fg:w="1"/><text x="75.6844%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.4344%" y="261" width="0.0790%" height="15" fill="rgb(245,206,45)" fg:x="955" fg:w="1"/><text x="75.6844%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.4344%" y="245" width="0.0790%" height="15" fill="rgb(220,56,22)" fg:x="955" fg:w="1"/><text x="75.6844%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.4344%" y="229" width="0.0790%" height="15" fill="rgb(239,129,38)" fg:x="955" fg:w="1"/><text x="75.6844%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.4344%" y="213" width="0.0790%" height="15" fill="rgb(207,68,41)" fg:x="955" fg:w="1"/><text x="75.6844%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.5134%" y="389" width="0.0790%" height="15" fill="rgb(221,21,7)" fg:x="956" fg:w="1"/><text x="75.7634%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.5134%" y="373" width="0.0790%" height="15" fill="rgb(240,33,25)" fg:x="956" fg:w="1"/><text x="75.7634%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.5134%" y="357" width="0.0790%" height="15" fill="rgb(242,119,10)" fg:x="956" fg:w="1"/><text x="75.7634%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.6714%" y="357" width="0.0790%" height="15" fill="rgb(214,149,40)" fg:x="958" fg:w="1"/><text x="75.9214%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="75.7504%" y="357" width="0.1580%" height="15" fill="rgb(228,25,36)" fg:x="959" fg:w="2"/><text x="76.0004%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.7504%" y="341" width="0.1580%" height="15" fill="rgb(222,59,15)" fg:x="959" fg:w="2"/><text x="76.0004%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.7504%" y="325" width="0.1580%" height="15" fill="rgb(218,170,0)" fg:x="959" fg:w="2"/><text x="76.0004%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.8294%" y="309" width="0.0790%" height="15" fill="rgb(232,173,23)" fg:x="960" fg:w="1"/><text x="76.0794%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.8294%" y="293" width="0.0790%" height="15" fill="rgb(218,116,1)" fg:x="960" fg:w="1"/><text x="76.0794%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.9084%" y="341" width="0.0790%" height="15" fill="rgb(207,34,4)" fg:x="961" fg:w="1"/><text x="76.1584%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.9874%" y="341" width="0.0790%" height="15" fill="rgb(229,54,52)" fg:x="962" fg:w="1"/><text x="76.2374%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.9874%" y="325" width="0.0790%" height="15" fill="rgb(211,86,23)" fg:x="962" fg:w="1"/><text x="76.2374%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="76.0664%" y="341" width="0.3160%" height="15" fill="rgb(254,153,34)" fg:x="963" fg:w="4"/><text x="76.3164%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.2243%" y="325" width="0.1580%" height="15" fill="rgb(219,220,14)" fg:x="965" fg:w="2"/><text x="76.4743%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="76.2243%" y="309" width="0.1580%" height="15" fill="rgb(247,8,26)" fg:x="965" fg:w="2"/><text x="76.4743%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.3033%" y="293" width="0.0790%" height="15" fill="rgb(213,129,42)" fg:x="966" fg:w="1"/><text x="76.5533%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.4613%" y="293" width="0.0790%" height="15" fill="rgb(225,95,41)" fg:x="968" fg:w="1"/><text x="76.7113%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.5403%" y="293" width="0.0790%" height="15" fill="rgb(215,134,24)" fg:x="969" fg:w="1"/><text x="76.7903%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.5403%" y="277" width="0.0790%" height="15" fill="rgb(235,23,54)" fg:x="969" fg:w="1"/><text x="76.7903%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.5403%" y="261" width="0.0790%" height="15" fill="rgb(229,96,31)" fg:x="969" fg:w="1"/><text x="76.7903%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="76.4613%" y="325" width="0.3160%" height="15" fill="rgb(206,111,12)" fg:x="968" fg:w="4"/><text x="76.7113%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="76.4613%" y="309" width="0.3160%" height="15" fill="rgb(222,177,8)" fg:x="968" fg:w="4"/><text x="76.7113%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="76.6193%" y="293" width="0.1580%" height="15" fill="rgb(251,36,52)" fg:x="970" fg:w="2"/><text x="76.8693%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="76.6193%" y="277" width="0.1580%" height="15" fill="rgb(216,182,29)" fg:x="970" fg:w="2"/><text x="76.8693%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.6983%" y="261" width="0.0790%" height="15" fill="rgb(241,145,50)" fg:x="971" fg:w="1"/><text x="76.9483%" y="271.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.6983%" y="245" width="0.0790%" height="15" fill="rgb(231,71,35)" fg:x="971" fg:w="1"/><text x="76.9483%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.7773%" y="325" width="0.1580%" height="15" fill="rgb(218,22,17)" fg:x="972" fg:w="2"/><text x="77.0273%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.7773%" y="309" width="0.1580%" height="15" fill="rgb(225,227,6)" fg:x="972" fg:w="2"/><text x="77.0273%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.8562%" y="293" width="0.0790%" height="15" fill="rgb(224,204,17)" fg:x="973" fg:w="1"/><text x="77.1062%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.0142%" y="309" width="0.2370%" height="15" fill="rgb(227,61,28)" fg:x="975" fg:w="3"/><text x="77.2642%" y="319.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="77.0142%" y="293" width="0.2370%" height="15" fill="rgb(242,148,23)" fg:x="975" fg:w="3"/><text x="77.2642%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.0932%" y="277" width="0.1580%" height="15" fill="rgb(237,105,33)" fg:x="976" fg:w="2"/><text x="77.3432%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.0932%" y="261" width="0.1580%" height="15" fill="rgb(238,218,40)" fg:x="976" fg:w="2"/><text x="77.3432%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="77.0932%" y="245" width="0.1580%" height="15" fill="rgb(209,126,11)" fg:x="976" fg:w="2"/><text x="77.3432%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="77.0932%" y="229" width="0.1580%" height="15" fill="rgb(245,90,11)" fg:x="976" fg:w="2"/><text x="77.3432%" y="239.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="77.0932%" y="213" width="0.1580%" height="15" fill="rgb(211,195,10)" fg:x="976" fg:w="2"/><text x="77.3432%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="77.2512%" y="293" width="0.0790%" height="15" fill="rgb(231,45,45)" fg:x="978" fg:w="1"/><text x="77.5012%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.3302%" y="293" width="0.1580%" height="15" fill="rgb(246,100,43)" fg:x="979" fg:w="2"/><text x="77.5802%" y="303.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.3302%" y="277" width="0.1580%" height="15" fill="rgb(241,193,8)" fg:x="979" fg:w="2"/><text x="77.5802%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.3302%" y="261" width="0.1580%" height="15" fill="rgb(208,76,19)" fg:x="979" fg:w="2"/><text x="77.5802%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.3302%" y="245" width="0.1580%" height="15" fill="rgb(223,69,40)" fg:x="979" fg:w="2"/><text x="77.5802%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.4092%" y="229" width="0.0790%" height="15" fill="rgb(207,120,39)" fg:x="980" fg:w="1"/><text x="77.6592%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.4092%" y="213" width="0.0790%" height="15" fill="rgb(212,209,28)" fg:x="980" fg:w="1"/><text x="77.6592%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.4092%" y="197" width="0.0790%" height="15" fill="rgb(246,82,29)" fg:x="980" fg:w="1"/><text x="77.6592%" y="207.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.5671%" y="277" width="0.0790%" height="15" fill="rgb(239,6,40)" fg:x="982" fg:w="1"/><text x="77.8171%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="77.4882%" y="293" width="0.2370%" height="15" fill="rgb(228,181,35)" fg:x="981" fg:w="3"/><text x="77.7382%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.6461%" y="277" width="0.0790%" height="15" fill="rgb(238,151,2)" fg:x="983" fg:w="1"/><text x="77.8961%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.87%)</title><rect x="76.9352%" y="325" width="0.8689%" height="15" fill="rgb(236,94,18)" fg:x="974" fg:w="11"/><text x="77.1852%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="77.2512%" y="309" width="0.5529%" height="15" fill="rgb(208,38,14)" fg:x="978" fg:w="7"/><text x="77.5012%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.7251%" y="293" width="0.0790%" height="15" fill="rgb(234,215,27)" fg:x="984" fg:w="1"/><text x="77.9751%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.7251%" y="277" width="0.0790%" height="15" fill="rgb(254,211,53)" fg:x="984" fg:w="1"/><text x="77.9751%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.7251%" y="261" width="0.0790%" height="15" fill="rgb(216,175,11)" fg:x="984" fg:w="1"/><text x="77.9751%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.8041%" y="293" width="0.1580%" height="15" fill="rgb(246,179,26)" fg:x="985" fg:w="2"/><text x="78.0541%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.66%)</title><rect x="76.3823%" y="341" width="1.6588%" height="15" fill="rgb(249,19,52)" fg:x="967" fg:w="21"/><text x="76.6323%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="77.8041%" y="325" width="0.2370%" height="15" fill="rgb(230,42,52)" fg:x="985" fg:w="3"/><text x="78.0541%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="77.8041%" y="309" width="0.2370%" height="15" fill="rgb(221,171,0)" fg:x="985" fg:w="3"/><text x="78.0541%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="77.9621%" y="293" width="0.0790%" height="15" fill="rgb(222,177,40)" fg:x="987" fg:w="1"/><text x="78.2121%" y="303.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.53%)</title><rect x="75.5924%" y="373" width="2.5276%" height="15" fill="rgb(247,34,16)" fg:x="957" fg:w="32"/><text x="75.8424%" y="383.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.21%)</title><rect x="75.9084%" y="357" width="2.2117%" height="15" fill="rgb(213,217,37)" fg:x="961" fg:w="28"/><text x="76.1584%" y="367.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.0411%" y="341" width="0.0790%" height="15" fill="rgb(231,189,24)" fg:x="988" fg:w="1"/><text x="78.2911%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.0411%" y="325" width="0.0790%" height="15" fill="rgb(214,22,9)" fg:x="988" fg:w="1"/><text x="78.2911%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.0411%" y="309" width="0.0790%" height="15" fill="rgb(212,70,22)" fg:x="988" fg:w="1"/><text x="78.2911%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="78.1201%" y="341" width="0.1580%" height="15" fill="rgb(249,64,51)" fg:x="989" fg:w="2"/><text x="78.3701%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1991%" y="325" width="0.0790%" height="15" fill="rgb(249,148,20)" fg:x="990" fg:w="1"/><text x="78.4491%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2780%" y="325" width="0.0790%" height="15" fill="rgb(246,46,48)" fg:x="991" fg:w="1"/><text x="78.5280%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4360%" y="293" width="0.0790%" height="15" fill="rgb(217,34,48)" fg:x="993" fg:w="1"/><text x="78.6860%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.5150%" y="293" width="0.0790%" height="15" fill="rgb(222,45,26)" fg:x="994" fg:w="1"/><text x="78.7650%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="78.5940%" y="293" width="0.0790%" height="15" fill="rgb(230,201,36)" fg:x="995" fg:w="1"/><text x="78.8440%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.5940%" y="277" width="0.0790%" height="15" fill="rgb(217,30,43)" fg:x="995" fg:w="1"/><text x="78.8440%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5940%" y="261" width="0.0790%" height="15" fill="rgb(230,197,40)" fg:x="995" fg:w="1"/><text x="78.8440%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6730%" y="277" width="0.0790%" height="15" fill="rgb(239,181,18)" fg:x="996" fg:w="1"/><text x="78.9230%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="78.1201%" y="373" width="0.8689%" height="15" fill="rgb(222,60,39)" fg:x="989" fg:w="11"/><text x="78.3701%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.87%)</title><rect x="78.1201%" y="357" width="0.8689%" height="15" fill="rgb(210,60,22)" fg:x="989" fg:w="11"/><text x="78.3701%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="78.2780%" y="341" width="0.7109%" height="15" fill="rgb(239,213,48)" fg:x="991" fg:w="9"/><text x="78.5280%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="78.3570%" y="325" width="0.6319%" height="15" fill="rgb(253,214,23)" fg:x="992" fg:w="8"/><text x="78.6070%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="78.3570%" y="309" width="0.6319%" height="15" fill="rgb(211,98,45)" fg:x="992" fg:w="8"/><text x="78.6070%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.6730%" y="293" width="0.3160%" height="15" fill="rgb(239,130,44)" fg:x="996" fg:w="4"/><text x="78.9230%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="78.7520%" y="277" width="0.2370%" height="15" fill="rgb(222,181,35)" fg:x="997" fg:w="3"/><text x="79.0020%" y="287.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.8310%" y="261" width="0.1580%" height="15" fill="rgb(219,219,49)" fg:x="998" fg:w="2"/><text x="79.0810%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0679%" y="293" width="0.0790%" height="15" fill="rgb(227,161,51)" fg:x="1001" fg:w="1"/><text x="79.3179%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0679%" y="277" width="0.0790%" height="15" fill="rgb(239,112,27)" fg:x="1001" fg:w="1"/><text x="79.3179%" y="287.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="79.0679%" y="325" width="0.1580%" height="15" fill="rgb(248,122,18)" fg:x="1001" fg:w="2"/><text x="79.3179%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="79.0679%" y="309" width="0.1580%" height="15" fill="rgb(245,130,23)" fg:x="1001" fg:w="2"/><text x="79.3179%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.1469%" y="293" width="0.0790%" height="15" fill="rgb(211,225,28)" fg:x="1002" fg:w="1"/><text x="79.3969%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.3839%" y="293" width="0.0790%" height="15" fill="rgb(242,105,44)" fg:x="1005" fg:w="1"/><text x="79.6339%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="79.4629%" y="293" width="0.0790%" height="15" fill="rgb(216,183,46)" fg:x="1006" fg:w="1"/><text x="79.7129%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6209%" y="277" width="0.0790%" height="15" fill="rgb(227,112,9)" fg:x="1008" fg:w="1"/><text x="79.8709%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6209%" y="261" width="0.0790%" height="15" fill="rgb(244,21,0)" fg:x="1008" fg:w="1"/><text x="79.8709%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6209%" y="245" width="0.0790%" height="15" fill="rgb(236,185,14)" fg:x="1008" fg:w="1"/><text x="79.8709%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="79.6998%" y="261" width="0.0790%" height="15" fill="rgb(236,170,30)" fg:x="1009" fg:w="1"/><text x="79.9498%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.7788%" y="245" width="0.0790%" height="15" fill="rgb(209,198,51)" fg:x="1010" fg:w="1"/><text x="80.0288%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8578%" y="229" width="0.0790%" height="15" fill="rgb(205,171,26)" fg:x="1011" fg:w="1"/><text x="80.1078%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8578%" y="213" width="0.0790%" height="15" fill="rgb(246,41,49)" fg:x="1011" fg:w="1"/><text x="80.1078%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8578%" y="197" width="0.0790%" height="15" fill="rgb(240,229,12)" fg:x="1011" fg:w="1"/><text x="80.1078%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.0948%" y="213" width="0.0790%" height="15" fill="rgb(212,8,54)" fg:x="1014" fg:w="1"/><text x="80.3448%" y="223.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.0948%" y="197" width="0.0790%" height="15" fill="rgb(230,114,13)" fg:x="1014" fg:w="1"/><text x="80.3448%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.0948%" y="181" width="0.0790%" height="15" fill="rgb(229,130,28)" fg:x="1014" fg:w="1"/><text x="80.3448%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.0948%" y="165" width="0.0790%" height="15" fill="rgb(206,139,15)" fg:x="1014" fg:w="1"/><text x="80.3448%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.0948%" y="149" width="0.0790%" height="15" fill="rgb(241,188,35)" fg:x="1014" fg:w="1"/><text x="80.3448%" y="159.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.0948%" y="133" width="0.0790%" height="15" fill="rgb(208,224,26)" fg:x="1014" fg:w="1"/><text x="80.3448%" y="143.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.55%)</title><rect x="79.6998%" y="277" width="0.5529%" height="15" fill="rgb(251,131,28)" fg:x="1009" fg:w="7"/><text x="79.9498%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="79.7788%" y="261" width="0.4739%" height="15" fill="rgb(208,153,1)" fg:x="1010" fg:w="6"/><text x="80.0288%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="79.8578%" y="245" width="0.3949%" height="15" fill="rgb(234,33,36)" fg:x="1011" fg:w="5"/><text x="80.1078%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="79.9368%" y="229" width="0.3160%" height="15" fill="rgb(246,42,29)" fg:x="1012" fg:w="4"/><text x="80.1868%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1738%" y="213" width="0.0790%" height="15" fill="rgb(251,114,16)" fg:x="1015" fg:w="1"/><text x="80.4238%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3318%" y="245" width="0.0790%" height="15" fill="rgb(233,13,38)" fg:x="1017" fg:w="1"/><text x="80.5818%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.4107%" y="181" width="0.0790%" height="15" fill="rgb(247,120,19)" fg:x="1018" fg:w="1"/><text x="80.6607%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.4107%" y="213" width="0.1580%" height="15" fill="rgb(205,11,16)" fg:x="1018" fg:w="2"/><text x="80.6607%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.4107%" y="197" width="0.1580%" height="15" fill="rgb(228,185,19)" fg:x="1018" fg:w="2"/><text x="80.6607%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.4897%" y="181" width="0.0790%" height="15" fill="rgb(239,88,52)" fg:x="1019" fg:w="1"/><text x="80.7397%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="80.4107%" y="229" width="0.2370%" height="15" fill="rgb(219,23,1)" fg:x="1018" fg:w="3"/><text x="80.6607%" y="239.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.5687%" y="213" width="0.0790%" height="15" fill="rgb(253,177,16)" fg:x="1020" fg:w="1"/><text x="80.8187%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5687%" y="197" width="0.0790%" height="15" fill="rgb(225,150,40)" fg:x="1020" fg:w="1"/><text x="80.8187%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 1.58%)</title><rect x="79.3839%" y="309" width="1.5798%" height="15" fill="rgb(208,108,30)" fg:x="1005" fg:w="20"/><text x="79.6339%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.42%)</title><rect x="79.5419%" y="293" width="1.4218%" height="15" fill="rgb(214,122,4)" fg:x="1007" fg:w="18"/><text x="79.7919%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.71%)</title><rect x="80.2528%" y="277" width="0.7109%" height="15" fill="rgb(229,74,37)" fg:x="1016" fg:w="9"/><text x="80.5028%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="80.3318%" y="261" width="0.6319%" height="15" fill="rgb(233,61,41)" fg:x="1017" fg:w="8"/><text x="80.5818%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="80.4107%" y="245" width="0.5529%" height="15" fill="rgb(238,191,5)" fg:x="1018" fg:w="7"/><text x="80.6607%" y="255.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="80.6477%" y="229" width="0.3160%" height="15" fill="rgb(233,78,24)" fg:x="1021" fg:w="4"/><text x="80.8977%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.9637%" y="309" width="0.1580%" height="15" fill="rgb(211,142,8)" fg:x="1025" fg:w="2"/><text x="81.2137%" y="319.50"></text></g><g><title>engine::session::Session::flush (78 samples, 6.16%)</title><rect x="75.0395%" y="485" width="6.1611%" height="15" fill="rgb(253,38,53)" fg:x="950" fg:w="78"/><text x="75.2895%" y="495.50">engine::..</text></g><g><title>engine::session::Session::save_changes (74 samples, 5.85%)</title><rect x="75.3555%" y="469" width="5.8452%" height="15" fill="rgb(234,63,51)" fg:x="954" fg:w="74"/><text x="75.6055%" y="479.50">engine:..</text></g><g><title>engine::session::state::State::close (74 samples, 5.85%)</title><rect x="75.3555%" y="453" width="5.8452%" height="15" fill="rgb(205,23,31)" fg:x="954" fg:w="74"/><text x="75.6055%" y="463.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (74 samples, 5.85%)</title><rect x="75.3555%" y="437" width="5.8452%" height="15" fill="rgb(210,184,50)" fg:x="954" fg:w="74"/><text x="75.6055%" y="447.50">engine:..</text></g><g><title>core::iter::adapters::try_process (72 samples, 5.69%)</title><rect x="75.5134%" y="421" width="5.6872%" height="15" fill="rgb(222,112,26)" fg:x="956" fg:w="72"/><text x="75.7634%" y="431.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (72 samples, 5.69%)</title><rect x="75.5134%" y="405" width="5.6872%" height="15" fill="rgb(250,98,18)" fg:x="956" fg:w="72"/><text x="75.7634%" y="415.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (71 samples, 5.61%)</title><rect x="75.5924%" y="389" width="5.6082%" height="15" fill="rgb(250,34,12)" fg:x="957" fg:w="71"/><text x="75.8424%" y="399.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (28 samples, 2.21%)</title><rect x="78.9889%" y="373" width="2.2117%" height="15" fill="rgb(236,141,30)" fg:x="1000" fg:w="28"/><text x="79.2389%" y="383.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (27 samples, 2.13%)</title><rect x="79.0679%" y="357" width="2.1327%" height="15" fill="rgb(246,134,38)" fg:x="1001" fg:w="27"/><text x="79.3179%" y="367.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.13%)</title><rect x="79.0679%" y="341" width="2.1327%" height="15" fill="rgb(240,114,4)" fg:x="1001" fg:w="27"/><text x="79.3179%" y="351.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (25 samples, 1.97%)</title><rect x="79.2259%" y="325" width="1.9747%" height="15" fill="rgb(243,113,39)" fg:x="1003" fg:w="25"/><text x="79.4759%" y="335.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1216%" y="309" width="0.0790%" height="15" fill="rgb(239,215,4)" fg:x="1027" fg:w="1"/><text x="81.3716%" y="319.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="81.2006%" y="485" width="0.0790%" height="15" fill="rgb(236,229,45)" fg:x="1028" fg:w="1"/><text x="81.4506%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.2006%" y="469" width="0.0790%" height="15" fill="rgb(242,2,6)" fg:x="1028" fg:w="1"/><text x="81.4506%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2796%" y="437" width="0.0790%" height="15" fill="rgb(239,108,21)" fg:x="1029" fg:w="1"/><text x="81.5296%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2796%" y="421" width="0.0790%" height="15" fill="rgb(215,168,34)" fg:x="1029" fg:w="1"/><text x="81.5296%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="81.2796%" y="405" width="0.0790%" height="15" fill="rgb(238,31,17)" fg:x="1029" fg:w="1"/><text x="81.5296%" y="415.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="81.2796%" y="453" width="0.1580%" height="15" fill="rgb(220,133,11)" fg:x="1029" fg:w="2"/><text x="81.5296%" y="463.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="81.3586%" y="437" width="0.0790%" height="15" fill="rgb(212,158,23)" fg:x="1030" fg:w="1"/><text x="81.6086%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="81.4376%" y="437" width="0.0790%" height="15" fill="rgb(223,172,7)" fg:x="1031" fg:w="1"/><text x="81.6876%" y="447.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="81.2796%" y="485" width="0.3160%" height="15" fill="rgb(244,3,52)" fg:x="1029" fg:w="4"/><text x="81.5296%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="81.2796%" y="469" width="0.3160%" height="15" fill="rgb(207,69,27)" fg:x="1029" fg:w="4"/><text x="81.5296%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="81.4376%" y="453" width="0.1580%" height="15" fill="rgb(213,136,45)" fg:x="1031" fg:w="2"/><text x="81.6876%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5166%" y="437" width="0.0790%" height="15" fill="rgb(218,79,17)" fg:x="1032" fg:w="1"/><text x="81.7666%" y="447.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="81.5956%" y="485" width="0.0790%" height="15" fill="rgb(216,106,36)" fg:x="1033" fg:w="1"/><text x="81.8456%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="81.5956%" y="469" width="0.0790%" height="15" fill="rgb(251,27,45)" fg:x="1033" fg:w="1"/><text x="81.8456%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="81.5956%" y="453" width="0.0790%" height="15" fill="rgb(232,21,34)" fg:x="1033" fg:w="1"/><text x="81.8456%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5956%" y="437" width="0.0790%" height="15" fill="rgb(249,191,16)" fg:x="1033" fg:w="1"/><text x="81.8456%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.6746%" y="453" width="0.0790%" height="15" fill="rgb(224,88,20)" fg:x="1034" fg:w="1"/><text x="81.9246%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.6746%" y="437" width="0.0790%" height="15" fill="rgb(237,93,27)" fg:x="1034" fg:w="1"/><text x="81.9246%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="81.6746%" y="421" width="0.0790%" height="15" fill="rgb(226,198,48)" fg:x="1034" fg:w="1"/><text x="81.9246%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.6746%" y="405" width="0.0790%" height="15" fill="rgb(207,162,53)" fg:x="1034" fg:w="1"/><text x="81.9246%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7536%" y="421" width="0.0790%" height="15" fill="rgb(207,169,9)" fg:x="1035" fg:w="1"/><text x="82.0036%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="81.7536%" y="453" width="0.1580%" height="15" fill="rgb(224,166,46)" fg:x="1035" fg:w="2"/><text x="82.0036%" y="463.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="81.7536%" y="437" width="0.1580%" height="15" fill="rgb(233,26,6)" fg:x="1035" fg:w="2"/><text x="82.0036%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8325%" y="421" width="0.0790%" height="15" fill="rgb(218,106,45)" fg:x="1036" fg:w="1"/><text x="82.0825%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8325%" y="405" width="0.0790%" height="15" fill="rgb(240,217,4)" fg:x="1036" fg:w="1"/><text x="82.0825%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8325%" y="389" width="0.0790%" height="15" fill="rgb(246,171,10)" fg:x="1036" fg:w="1"/><text x="82.0825%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8325%" y="373" width="0.0790%" height="15" fill="rgb(223,197,30)" fg:x="1036" fg:w="1"/><text x="82.0825%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.8325%" y="357" width="0.0790%" height="15" fill="rgb(207,92,16)" fg:x="1036" fg:w="1"/><text x="82.0825%" y="367.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.9115%" y="405" width="0.0790%" height="15" fill="rgb(211,6,44)" fg:x="1037" fg:w="1"/><text x="82.1615%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9115%" y="389" width="0.0790%" height="15" fill="rgb(219,139,2)" fg:x="1037" fg:w="1"/><text x="82.1615%" y="399.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.9905%" y="405" width="0.2370%" height="15" fill="rgb(224,103,21)" fg:x="1038" fg:w="3"/><text x="82.2405%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="82.0695%" y="389" width="0.1580%" height="15" fill="rgb(254,110,48)" fg:x="1039" fg:w="2"/><text x="82.3195%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="82.0695%" y="373" width="0.1580%" height="15" fill="rgb(212,88,19)" fg:x="1039" fg:w="2"/><text x="82.3195%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.0695%" y="357" width="0.1580%" height="15" fill="rgb(248,103,6)" fg:x="1039" fg:w="2"/><text x="82.3195%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.1485%" y="341" width="0.0790%" height="15" fill="rgb(214,53,46)" fg:x="1040" fg:w="1"/><text x="82.3985%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1485%" y="325" width="0.0790%" height="15" fill="rgb(236,190,24)" fg:x="1040" fg:w="1"/><text x="82.3985%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.1485%" y="309" width="0.0790%" height="15" fill="rgb(254,58,28)" fg:x="1040" fg:w="1"/><text x="82.3985%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.39%)</title><rect x="81.9115%" y="437" width="0.3949%" height="15" fill="rgb(243,63,27)" fg:x="1037" fg:w="5"/><text x="82.1615%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.39%)</title><rect x="81.9115%" y="421" width="0.3949%" height="15" fill="rgb(206,81,20)" fg:x="1037" fg:w="5"/><text x="82.1615%" y="431.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.2275%" y="405" width="0.0790%" height="15" fill="rgb(252,69,51)" fg:x="1041" fg:w="1"/><text x="82.4775%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2275%" y="389" width="0.0790%" height="15" fill="rgb(222,213,4)" fg:x="1041" fg:w="1"/><text x="82.4775%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2275%" y="373" width="0.0790%" height="15" fill="rgb(226,198,12)" fg:x="1041" fg:w="1"/><text x="82.4775%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.2275%" y="357" width="0.0790%" height="15" fill="rgb(248,115,11)" fg:x="1041" fg:w="1"/><text x="82.4775%" y="367.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="82.2275%" y="341" width="0.0790%" height="15" fill="rgb(221,148,54)" fg:x="1041" fg:w="1"/><text x="82.4775%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.2275%" y="325" width="0.0790%" height="15" fill="rgb(214,209,51)" fg:x="1041" fg:w="1"/><text x="82.4775%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2275%" y="309" width="0.0790%" height="15" fill="rgb(249,116,53)" fg:x="1041" fg:w="1"/><text x="82.4775%" y="319.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="82.3065%" y="437" width="0.0790%" height="15" fill="rgb(248,170,1)" fg:x="1042" fg:w="1"/><text x="82.5565%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="82.3855%" y="437" width="0.0790%" height="15" fill="rgb(244,105,10)" fg:x="1043" fg:w="1"/><text x="82.6355%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="82.4645%" y="405" width="0.0790%" height="15" fill="rgb(229,100,5)" fg:x="1044" fg:w="1"/><text x="82.7145%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.4645%" y="389" width="0.0790%" height="15" fill="rgb(233,221,39)" fg:x="1044" fg:w="1"/><text x="82.7145%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4645%" y="373" width="0.0790%" height="15" fill="rgb(233,88,21)" fg:x="1044" fg:w="1"/><text x="82.7145%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7014%" y="325" width="0.0790%" height="15" fill="rgb(206,13,0)" fg:x="1047" fg:w="1"/><text x="82.9514%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7014%" y="309" width="0.0790%" height="15" fill="rgb(242,15,35)" fg:x="1047" fg:w="1"/><text x="82.9514%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7804%" y="293" width="0.0790%" height="15" fill="rgb(247,142,41)" fg:x="1048" fg:w="1"/><text x="83.0304%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7804%" y="277" width="0.0790%" height="15" fill="rgb(245,51,29)" fg:x="1048" fg:w="1"/><text x="83.0304%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7804%" y="261" width="0.0790%" height="15" fill="rgb(228,209,43)" fg:x="1048" fg:w="1"/><text x="83.0304%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="82.6224%" y="389" width="0.3160%" height="15" fill="rgb(233,185,9)" fg:x="1046" fg:w="4"/><text x="82.8724%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="82.7014%" y="373" width="0.2370%" height="15" fill="rgb(226,93,0)" fg:x="1047" fg:w="3"/><text x="82.9514%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="82.7014%" y="357" width="0.2370%" height="15" fill="rgb(245,194,43)" fg:x="1047" fg:w="3"/><text x="82.9514%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="82.7014%" y="341" width="0.2370%" height="15" fill="rgb(211,145,34)" fg:x="1047" fg:w="3"/><text x="82.9514%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.7804%" y="325" width="0.1580%" height="15" fill="rgb(231,228,28)" fg:x="1048" fg:w="2"/><text x="83.0304%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="82.7804%" y="309" width="0.1580%" height="15" fill="rgb(236,149,4)" fg:x="1048" fg:w="2"/><text x="83.0304%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8594%" y="293" width="0.0790%" height="15" fill="rgb(234,114,38)" fg:x="1049" fg:w="1"/><text x="83.1094%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8594%" y="277" width="0.0790%" height="15" fill="rgb(246,132,51)" fg:x="1049" fg:w="1"/><text x="83.1094%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.34%)</title><rect x="81.6746%" y="469" width="1.3428%" height="15" fill="rgb(251,137,22)" fg:x="1034" fg:w="17"/><text x="81.9246%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (14 samples, 1.11%)</title><rect x="81.9115%" y="453" width="1.1058%" height="15" fill="rgb(243,59,52)" fg:x="1037" fg:w="14"/><text x="82.1615%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.55%)</title><rect x="82.4645%" y="437" width="0.5529%" height="15" fill="rgb(239,56,28)" fg:x="1044" fg:w="7"/><text x="82.7145%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.55%)</title><rect x="82.4645%" y="421" width="0.5529%" height="15" fill="rgb(218,168,27)" fg:x="1044" fg:w="7"/><text x="82.7145%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.47%)</title><rect x="82.5434%" y="405" width="0.4739%" height="15" fill="rgb(232,165,11)" fg:x="1045" fg:w="6"/><text x="82.7934%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9384%" y="389" width="0.0790%" height="15" fill="rgb(253,55,41)" fg:x="1050" fg:w="1"/><text x="83.1884%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.0174%" y="469" width="0.0790%" height="15" fill="rgb(233,206,24)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0174%" y="453" width="0.0790%" height="15" fill="rgb(220,199,8)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0174%" y="437" width="0.0790%" height="15" fill="rgb(254,65,26)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0174%" y="421" width="0.0790%" height="15" fill="rgb(253,102,23)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.0174%" y="405" width="0.0790%" height="15" fill="rgb(231,103,35)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.0174%" y="389" width="0.0790%" height="15" fill="rgb(238,26,10)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.0174%" y="373" width="0.0790%" height="15" fill="rgb(234,191,34)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.0174%" y="357" width="0.0790%" height="15" fill="rgb(206,210,9)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.0174%" y="341" width="0.0790%" height="15" fill="rgb(219,155,3)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.0174%" y="325" width="0.0790%" height="15" fill="rgb(221,62,52)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.0174%" y="309" width="0.0790%" height="15" fill="rgb(215,197,36)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.0174%" y="293" width="0.0790%" height="15" fill="rgb(226,222,6)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.0174%" y="277" width="0.0790%" height="15" fill="rgb(215,58,28)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.0174%" y="261" width="0.0790%" height="15" fill="rgb(212,148,2)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.0174%" y="245" width="0.0790%" height="15" fill="rgb(208,21,42)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0174%" y="229" width="0.0790%" height="15" fill="rgb(209,107,26)" fg:x="1051" fg:w="1"/><text x="83.2674%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0964%" y="453" width="0.0790%" height="15" fill="rgb(254,60,47)" fg:x="1052" fg:w="1"/><text x="83.3464%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="83.1754%" y="421" width="0.2370%" height="15" fill="rgb(207,226,45)" fg:x="1053" fg:w="3"/><text x="83.4254%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.2543%" y="405" width="0.1580%" height="15" fill="rgb(223,124,22)" fg:x="1054" fg:w="2"/><text x="83.5043%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.2543%" y="389" width="0.1580%" height="15" fill="rgb(240,162,13)" fg:x="1054" fg:w="2"/><text x="83.5043%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3333%" y="373" width="0.0790%" height="15" fill="rgb(244,199,31)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3333%" y="357" width="0.0790%" height="15" fill="rgb(207,92,16)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.3333%" y="341" width="0.0790%" height="15" fill="rgb(215,31,19)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.3333%" y="325" width="0.0790%" height="15" fill="rgb(245,118,14)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.3333%" y="309" width="0.0790%" height="15" fill="rgb(248,12,46)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3333%" y="293" width="0.0790%" height="15" fill="rgb(209,119,0)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3333%" y="277" width="0.0790%" height="15" fill="rgb(254,51,44)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.3333%" y="261" width="0.0790%" height="15" fill="rgb(253,182,35)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.3333%" y="245" width="0.0790%" height="15" fill="rgb(205,198,39)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.3333%" y="229" width="0.0790%" height="15" fill="rgb(251,175,48)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.3333%" y="213" width="0.0790%" height="15" fill="rgb(239,38,17)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3333%" y="197" width="0.0790%" height="15" fill="rgb(212,101,8)" fg:x="1055" fg:w="1"/><text x="83.5833%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4123%" y="421" width="0.0790%" height="15" fill="rgb(228,35,17)" fg:x="1056" fg:w="1"/><text x="83.6623%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (24 samples, 1.90%)</title><rect x="81.6746%" y="485" width="1.8957%" height="15" fill="rgb(214,95,8)" fg:x="1034" fg:w="24"/><text x="81.9246%" y="495.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.47%)</title><rect x="83.0964%" y="469" width="0.4739%" height="15" fill="rgb(210,176,35)" fg:x="1052" fg:w="6"/><text x="83.3464%" y="479.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.39%)</title><rect x="83.1754%" y="453" width="0.3949%" height="15" fill="rgb(226,4,3)" fg:x="1053" fg:w="5"/><text x="83.4254%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.39%)</title><rect x="83.1754%" y="437" width="0.3949%" height="15" fill="rgb(232,133,14)" fg:x="1053" fg:w="5"/><text x="83.4254%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.4913%" y="421" width="0.0790%" height="15" fill="rgb(250,191,8)" fg:x="1057" fg:w="1"/><text x="83.7413%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4913%" y="405" width="0.0790%" height="15" fill="rgb(213,12,45)" fg:x="1057" fg:w="1"/><text x="83.7413%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.4913%" y="389" width="0.0790%" height="15" fill="rgb(233,78,26)" fg:x="1057" fg:w="1"/><text x="83.7413%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4913%" y="373" width="0.0790%" height="15" fill="rgb(245,222,11)" fg:x="1057" fg:w="1"/><text x="83.7413%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.4913%" y="357" width="0.0790%" height="15" fill="rgb(216,174,12)" fg:x="1057" fg:w="1"/><text x="83.7413%" y="367.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="83.5703%" y="485" width="0.0790%" height="15" fill="rgb(213,15,9)" fg:x="1058" fg:w="1"/><text x="83.8203%" y="495.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="83.5703%" y="469" width="0.0790%" height="15" fill="rgb(238,103,32)" fg:x="1058" fg:w="1"/><text x="83.8203%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="83.5703%" y="453" width="0.0790%" height="15" fill="rgb(245,85,15)" fg:x="1058" fg:w="1"/><text x="83.8203%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="83.6493%" y="453" width="0.0790%" height="15" fill="rgb(254,204,5)" fg:x="1059" fg:w="1"/><text x="83.8993%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.7283%" y="421" width="0.1580%" height="15" fill="rgb(231,178,15)" fg:x="1060" fg:w="2"/><text x="83.9783%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.7283%" y="405" width="0.1580%" height="15" fill="rgb(248,151,3)" fg:x="1060" fg:w="2"/><text x="83.9783%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="83.7283%" y="389" width="0.1580%" height="15" fill="rgb(250,139,13)" fg:x="1060" fg:w="2"/><text x="83.9783%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="83.7283%" y="373" width="0.1580%" height="15" fill="rgb(243,107,53)" fg:x="1060" fg:w="2"/><text x="83.9783%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.7283%" y="357" width="0.1580%" height="15" fill="rgb(232,81,15)" fg:x="1060" fg:w="2"/><text x="83.9783%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.8073%" y="341" width="0.0790%" height="15" fill="rgb(225,187,48)" fg:x="1061" fg:w="1"/><text x="84.0573%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8073%" y="325" width="0.0790%" height="15" fill="rgb(205,116,12)" fg:x="1061" fg:w="1"/><text x="84.0573%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.8073%" y="309" width="0.0790%" height="15" fill="rgb(220,222,31)" fg:x="1061" fg:w="1"/><text x="84.0573%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8073%" y="293" width="0.0790%" height="15" fill="rgb(233,187,49)" fg:x="1061" fg:w="1"/><text x="84.0573%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.8073%" y="277" width="0.0790%" height="15" fill="rgb(211,168,53)" fg:x="1061" fg:w="1"/><text x="84.0573%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9652%" y="373" width="0.0790%" height="15" fill="rgb(206,160,16)" fg:x="1063" fg:w="1"/><text x="84.2152%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9652%" y="357" width="0.0790%" height="15" fill="rgb(254,164,13)" fg:x="1063" fg:w="1"/><text x="84.2152%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9652%" y="341" width="0.0790%" height="15" fill="rgb(229,45,30)" fg:x="1063" fg:w="1"/><text x="84.2152%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="83.9652%" y="325" width="0.0790%" height="15" fill="rgb(237,32,10)" fg:x="1063" fg:w="1"/><text x="84.2152%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.9652%" y="309" width="0.0790%" height="15" fill="rgb(251,20,47)" fg:x="1063" fg:w="1"/><text x="84.2152%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.0442%" y="373" width="0.0790%" height="15" fill="rgb(251,116,12)" fg:x="1064" fg:w="1"/><text x="84.2942%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.47%)</title><rect x="83.7283%" y="453" width="0.4739%" height="15" fill="rgb(214,227,27)" fg:x="1060" fg:w="6"/><text x="83.9783%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.47%)</title><rect x="83.7283%" y="437" width="0.4739%" height="15" fill="rgb(248,10,53)" fg:x="1060" fg:w="6"/><text x="83.9783%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="83.8863%" y="421" width="0.3160%" height="15" fill="rgb(221,176,25)" fg:x="1062" fg:w="4"/><text x="84.1363%" y="431.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="83.8863%" y="405" width="0.3160%" height="15" fill="rgb(205,70,46)" fg:x="1062" fg:w="4"/><text x="84.1363%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="83.8863%" y="389" width="0.3160%" height="15" fill="rgb(217,45,38)" fg:x="1062" fg:w="4"/><text x="84.1363%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.1232%" y="373" width="0.0790%" height="15" fill="rgb(243,6,54)" fg:x="1065" fg:w="1"/><text x="84.3732%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1232%" y="357" width="0.0790%" height="15" fill="rgb(242,76,23)" fg:x="1065" fg:w="1"/><text x="84.3732%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="84.2022%" y="437" width="0.0790%" height="15" fill="rgb(239,166,0)" fg:x="1066" fg:w="1"/><text x="84.4522%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2022%" y="421" width="0.0790%" height="15" fill="rgb(238,174,32)" fg:x="1066" fg:w="1"/><text x="84.4522%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2022%" y="405" width="0.0790%" height="15" fill="rgb(238,124,44)" fg:x="1066" fg:w="1"/><text x="84.4522%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="84.2022%" y="389" width="0.0790%" height="15" fill="rgb(206,185,9)" fg:x="1066" fg:w="1"/><text x="84.4522%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.2022%" y="373" width="0.0790%" height="15" fill="rgb(215,157,17)" fg:x="1066" fg:w="1"/><text x="84.4522%" y="383.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (9 samples, 0.71%)</title><rect x="83.6493%" y="485" width="0.7109%" height="15" fill="rgb(251,17,29)" fg:x="1059" fg:w="9"/><text x="83.8993%" y="495.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.71%)</title><rect x="83.6493%" y="469" width="0.7109%" height="15" fill="rgb(227,113,27)" fg:x="1059" fg:w="9"/><text x="83.8993%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="84.2022%" y="453" width="0.1580%" height="15" fill="rgb(217,226,24)" fg:x="1066" fg:w="2"/><text x="84.4522%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2812%" y="437" width="0.0790%" height="15" fill="rgb(251,99,38)" fg:x="1067" fg:w="1"/><text x="84.5312%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2812%" y="421" width="0.0790%" height="15" fill="rgb(231,147,19)" fg:x="1067" fg:w="1"/><text x="84.5312%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2812%" y="405" width="0.0790%" height="15" fill="rgb(230,86,8)" fg:x="1067" fg:w="1"/><text x="84.5312%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2812%" y="389" width="0.0790%" height="15" fill="rgb(237,159,39)" fg:x="1067" fg:w="1"/><text x="84.5312%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2812%" y="373" width="0.0790%" height="15" fill="rgb(247,179,47)" fg:x="1067" fg:w="1"/><text x="84.5312%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2812%" y="357" width="0.0790%" height="15" fill="rgb(253,152,26)" fg:x="1067" fg:w="1"/><text x="84.5312%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3602%" y="453" width="0.0790%" height="15" fill="rgb(222,211,15)" fg:x="1068" fg:w="1"/><text x="84.6102%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3602%" y="437" width="0.0790%" height="15" fill="rgb(236,193,6)" fg:x="1068" fg:w="1"/><text x="84.6102%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3602%" y="421" width="0.0790%" height="15" fill="rgb(226,206,10)" fg:x="1068" fg:w="1"/><text x="84.6102%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="84.3602%" y="469" width="0.1580%" height="15" fill="rgb(213,125,22)" fg:x="1068" fg:w="2"/><text x="84.6102%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4392%" y="453" width="0.0790%" height="15" fill="rgb(221,66,28)" fg:x="1069" fg:w="1"/><text x="84.6892%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4392%" y="437" width="0.0790%" height="15" fill="rgb(222,84,53)" fg:x="1069" fg:w="1"/><text x="84.6892%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="84.4392%" y="421" width="0.0790%" height="15" fill="rgb(243,50,15)" fg:x="1069" fg:w="1"/><text x="84.6892%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="84.4392%" y="405" width="0.0790%" height="15" fill="rgb(208,184,23)" fg:x="1069" fg:w="1"/><text x="84.6892%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="84.4392%" y="389" width="0.0790%" height="15" fill="rgb(221,83,2)" fg:x="1069" fg:w="1"/><text x="84.6892%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4392%" y="373" width="0.0790%" height="15" fill="rgb(236,53,24)" fg:x="1069" fg:w="1"/><text x="84.6892%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4392%" y="357" width="0.0790%" height="15" fill="rgb(244,171,29)" fg:x="1069" fg:w="1"/><text x="84.6892%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="84.4392%" y="341" width="0.0790%" height="15" fill="rgb(205,19,11)" fg:x="1069" fg:w="1"/><text x="84.6892%" y="351.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (3 samples, 0.24%)</title><rect x="84.3602%" y="485" width="0.2370%" height="15" fill="rgb(207,108,29)" fg:x="1068" fg:w="3"/><text x="84.6102%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.5182%" y="469" width="0.0790%" height="15" fill="rgb(236,215,43)" fg:x="1070" fg:w="1"/><text x="84.7682%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5182%" y="453" width="0.0790%" height="15" fill="rgb(213,58,35)" fg:x="1070" fg:w="1"/><text x="84.7682%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5182%" y="437" width="0.0790%" height="15" fill="rgb(220,211,46)" fg:x="1070" fg:w="1"/><text x="84.7682%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.5182%" y="421" width="0.0790%" height="15" fill="rgb(212,134,16)" fg:x="1070" fg:w="1"/><text x="84.7682%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5182%" y="405" width="0.0790%" height="15" fill="rgb(232,90,44)" fg:x="1070" fg:w="1"/><text x="84.7682%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5182%" y="389" width="0.0790%" height="15" fill="rgb(212,18,36)" fg:x="1070" fg:w="1"/><text x="84.7682%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="84.5972%" y="421" width="0.0790%" height="15" fill="rgb(206,112,24)" fg:x="1071" fg:w="1"/><text x="84.8472%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="84.5972%" y="469" width="0.1580%" height="15" fill="rgb(238,223,40)" fg:x="1071" fg:w="2"/><text x="84.8472%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.5972%" y="453" width="0.1580%" height="15" fill="rgb(226,169,20)" fg:x="1071" fg:w="2"/><text x="84.8472%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.5972%" y="437" width="0.1580%" height="15" fill="rgb(241,64,52)" fg:x="1071" fg:w="2"/><text x="84.8472%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.6761%" y="421" width="0.0790%" height="15" fill="rgb(228,120,25)" fg:x="1072" fg:w="1"/><text x="84.9261%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="84.6761%" y="405" width="0.0790%" height="15" fill="rgb(234,108,19)" fg:x="1072" fg:w="1"/><text x="84.9261%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.6761%" y="389" width="0.0790%" height="15" fill="rgb(236,133,29)" fg:x="1072" fg:w="1"/><text x="84.9261%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6761%" y="373" width="0.0790%" height="15" fill="rgb(246,174,53)" fg:x="1072" fg:w="1"/><text x="84.9261%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.6761%" y="357" width="0.0790%" height="15" fill="rgb(210,105,35)" fg:x="1072" fg:w="1"/><text x="84.9261%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6761%" y="341" width="0.0790%" height="15" fill="rgb(225,27,26)" fg:x="1072" fg:w="1"/><text x="84.9261%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.6761%" y="325" width="0.0790%" height="15" fill="rgb(233,2,39)" fg:x="1072" fg:w="1"/><text x="84.9261%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6761%" y="309" width="0.0790%" height="15" fill="rgb(219,164,26)" fg:x="1072" fg:w="1"/><text x="84.9261%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.6761%" y="293" width="0.0790%" height="15" fill="rgb(236,211,5)" fg:x="1072" fg:w="1"/><text x="84.9261%" y="303.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.7551%" y="469" width="0.0790%" height="15" fill="rgb(244,227,23)" fg:x="1073" fg:w="1"/><text x="85.0051%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7551%" y="453" width="0.0790%" height="15" fill="rgb(230,184,8)" fg:x="1073" fg:w="1"/><text x="85.0051%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.7551%" y="437" width="0.0790%" height="15" fill="rgb(217,125,48)" fg:x="1073" fg:w="1"/><text x="85.0051%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.7551%" y="421" width="0.0790%" height="15" fill="rgb(223,192,47)" fg:x="1073" fg:w="1"/><text x="85.0051%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7551%" y="405" width="0.0790%" height="15" fill="rgb(226,119,10)" fg:x="1073" fg:w="1"/><text x="85.0051%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.7551%" y="389" width="0.0790%" height="15" fill="rgb(221,49,29)" fg:x="1073" fg:w="1"/><text x="85.0051%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.7551%" y="373" width="0.0790%" height="15" fill="rgb(217,205,19)" fg:x="1073" fg:w="1"/><text x="85.0051%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.7551%" y="357" width="0.0790%" height="15" fill="rgb(242,104,7)" fg:x="1073" fg:w="1"/><text x="85.0051%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.7551%" y="341" width="0.0790%" height="15" fill="rgb(209,154,48)" fg:x="1073" fg:w="1"/><text x="85.0051%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="84.8341%" y="453" width="0.0790%" height="15" fill="rgb(219,213,46)" fg:x="1074" fg:w="1"/><text x="85.0841%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8341%" y="437" width="0.0790%" height="15" fill="rgb(229,105,38)" fg:x="1074" fg:w="1"/><text x="85.0841%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="84.9131%" y="405" width="0.0790%" height="15" fill="rgb(205,151,5)" fg:x="1075" fg:w="1"/><text x="85.1631%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.9131%" y="389" width="0.0790%" height="15" fill="rgb(248,115,40)" fg:x="1075" fg:w="1"/><text x="85.1631%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.9131%" y="421" width="0.1580%" height="15" fill="rgb(206,179,2)" fg:x="1075" fg:w="2"/><text x="85.1631%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.9921%" y="405" width="0.0790%" height="15" fill="rgb(230,103,24)" fg:x="1076" fg:w="1"/><text x="85.2421%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="84.9921%" y="389" width="0.0790%" height="15" fill="rgb(218,152,4)" fg:x="1076" fg:w="1"/><text x="85.2421%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.9921%" y="373" width="0.0790%" height="15" fill="rgb(236,161,54)" fg:x="1076" fg:w="1"/><text x="85.2421%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9921%" y="357" width="0.0790%" height="15" fill="rgb(226,65,17)" fg:x="1076" fg:w="1"/><text x="85.2421%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="84.8341%" y="469" width="0.3160%" height="15" fill="rgb(221,134,44)" fg:x="1074" fg:w="4"/><text x="85.0841%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="84.9131%" y="453" width="0.2370%" height="15" fill="rgb(251,129,4)" fg:x="1075" fg:w="3"/><text x="85.1631%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="84.9131%" y="437" width="0.2370%" height="15" fill="rgb(244,32,34)" fg:x="1075" fg:w="3"/><text x="85.1631%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.0711%" y="421" width="0.0790%" height="15" fill="rgb(251,224,37)" fg:x="1077" fg:w="1"/><text x="85.3211%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.0711%" y="405" width="0.0790%" height="15" fill="rgb(248,117,31)" fg:x="1077" fg:w="1"/><text x="85.3211%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="85.0711%" y="389" width="0.0790%" height="15" fill="rgb(222,208,37)" fg:x="1077" fg:w="1"/><text x="85.3211%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0711%" y="373" width="0.0790%" height="15" fill="rgb(234,211,25)" fg:x="1077" fg:w="1"/><text x="85.3211%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0711%" y="357" width="0.0790%" height="15" fill="rgb(211,72,6)" fg:x="1077" fg:w="1"/><text x="85.3211%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0711%" y="341" width="0.0790%" height="15" fill="rgb(249,198,38)" fg:x="1077" fg:w="1"/><text x="85.3211%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0711%" y="325" width="0.0790%" height="15" fill="rgb(221,86,51)" fg:x="1077" fg:w="1"/><text x="85.3211%" y="335.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.63%)</title><rect x="84.5972%" y="485" width="0.6319%" height="15" fill="rgb(226,178,43)" fg:x="1071" fg:w="8"/><text x="84.8472%" y="495.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="85.1501%" y="469" width="0.0790%" height="15" fill="rgb(215,145,7)" fg:x="1078" fg:w="1"/><text x="85.4001%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.1501%" y="453" width="0.0790%" height="15" fill="rgb(250,202,36)" fg:x="1078" fg:w="1"/><text x="85.4001%" y="463.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1501%" y="437" width="0.0790%" height="15" fill="rgb(215,86,13)" fg:x="1078" fg:w="1"/><text x="85.4001%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.1501%" y="421" width="0.0790%" height="15" fill="rgb(221,134,12)" fg:x="1078" fg:w="1"/><text x="85.4001%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1501%" y="405" width="0.0790%" height="15" fill="rgb(213,82,10)" fg:x="1078" fg:w="1"/><text x="85.4001%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.1501%" y="389" width="0.0790%" height="15" fill="rgb(214,142,0)" fg:x="1078" fg:w="1"/><text x="85.4001%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1501%" y="373" width="0.0790%" height="15" fill="rgb(205,145,9)" fg:x="1078" fg:w="1"/><text x="85.4001%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (141 samples, 11.14%)</title><rect x="74.2496%" y="501" width="11.1374%" height="15" fill="rgb(244,214,8)" fg:x="940" fg:w="141"/><text x="74.4996%" y="511.50">plugins_core::bu..</text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="85.2291%" y="485" width="0.1580%" height="15" fill="rgb(224,72,51)" fg:x="1079" fg:w="2"/><text x="85.4791%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="85.2291%" y="469" width="0.1580%" height="15" fill="rgb(233,137,37)" fg:x="1079" fg:w="2"/><text x="85.4791%" y="479.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (2 samples, 0.16%)</title><rect x="85.2291%" y="453" width="0.1580%" height="15" fill="rgb(208,71,28)" fg:x="1079" fg:w="2"/><text x="85.4791%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.3081%" y="437" width="0.0790%" height="15" fill="rgb(226,31,7)" fg:x="1080" fg:w="1"/><text x="85.5581%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="85.3870%" y="501" width="0.0790%" height="15" fill="rgb(229,62,18)" fg:x="1081" fg:w="1"/><text x="85.6370%" y="511.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="85.3870%" y="485" width="0.0790%" height="15" fill="rgb(226,74,28)" fg:x="1081" fg:w="1"/><text x="85.6370%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="85.3870%" y="469" width="0.0790%" height="15" fill="rgb(214,170,18)" fg:x="1081" fg:w="1"/><text x="85.6370%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="85.3870%" y="453" width="0.0790%" height="15" fill="rgb(227,229,35)" fg:x="1081" fg:w="1"/><text x="85.6370%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.3870%" y="437" width="0.0790%" height="15" fill="rgb(225,181,39)" fg:x="1081" fg:w="1"/><text x="85.6370%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.3870%" y="421" width="0.0790%" height="15" fill="rgb(253,124,44)" fg:x="1081" fg:w="1"/><text x="85.6370%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.3870%" y="405" width="0.0790%" height="15" fill="rgb(220,75,18)" fg:x="1081" fg:w="1"/><text x="85.6370%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.3870%" y="389" width="0.0790%" height="15" fill="rgb(239,175,43)" fg:x="1081" fg:w="1"/><text x="85.6370%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="85.4660%" y="501" width="0.0790%" height="15" fill="rgb(228,112,50)" fg:x="1082" fg:w="1"/><text x="85.7160%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.4660%" y="485" width="0.0790%" height="15" fill="rgb(232,105,36)" fg:x="1082" fg:w="1"/><text x="85.7160%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.4660%" y="469" width="0.0790%" height="15" fill="rgb(227,137,47)" fg:x="1082" fg:w="1"/><text x="85.7160%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4660%" y="453" width="0.0790%" height="15" fill="rgb(217,51,9)" fg:x="1082" fg:w="1"/><text x="85.7160%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.5450%" y="469" width="0.0790%" height="15" fill="rgb(245,117,0)" fg:x="1083" fg:w="1"/><text x="85.7950%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.5450%" y="453" width="0.0790%" height="15" fill="rgb(252,52,30)" fg:x="1083" fg:w="1"/><text x="85.7950%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.5450%" y="437" width="0.0790%" height="15" fill="rgb(227,85,33)" fg:x="1083" fg:w="1"/><text x="85.7950%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5450%" y="421" width="0.0790%" height="15" fill="rgb(220,157,20)" fg:x="1083" fg:w="1"/><text x="85.7950%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5450%" y="405" width="0.0790%" height="15" fill="rgb(254,14,34)" fg:x="1083" fg:w="1"/><text x="85.7950%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.5450%" y="389" width="0.0790%" height="15" fill="rgb(216,103,41)" fg:x="1083" fg:w="1"/><text x="85.7950%" y="399.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="85.6240%" y="469" width="0.0790%" height="15" fill="rgb(245,221,9)" fg:x="1084" fg:w="1"/><text x="85.8740%" y="479.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="85.6240%" y="453" width="0.0790%" height="15" fill="rgb(254,136,47)" fg:x="1084" fg:w="1"/><text x="85.8740%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.7030%" y="437" width="0.0790%" height="15" fill="rgb(235,71,46)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.7030%" y="421" width="0.0790%" height="15" fill="rgb(242,154,29)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="85.7030%" y="405" width="0.0790%" height="15" fill="rgb(210,65,31)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7030%" y="389" width="0.0790%" height="15" fill="rgb(244,9,50)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7030%" y="373" width="0.0790%" height="15" fill="rgb(215,141,38)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.7030%" y="357" width="0.0790%" height="15" fill="rgb(241,129,6)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.7030%" y="341" width="0.0790%" height="15" fill="rgb(253,169,4)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.7030%" y="325" width="0.0790%" height="15" fill="rgb(237,82,36)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.7030%" y="309" width="0.0790%" height="15" fill="rgb(209,171,11)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.7030%" y="293" width="0.0790%" height="15" fill="rgb(242,19,22)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.7030%" y="277" width="0.0790%" height="15" fill="rgb(251,122,24)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.7030%" y="261" width="0.0790%" height="15" fill="rgb(226,166,42)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.7030%" y="245" width="0.0790%" height="15" fill="rgb(244,101,48)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.7030%" y="229" width="0.0790%" height="15" fill="rgb(227,125,1)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.7030%" y="213" width="0.0790%" height="15" fill="rgb(206,79,43)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.7030%" y="197" width="0.0790%" height="15" fill="rgb(241,109,41)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.7030%" y="181" width="0.0790%" height="15" fill="rgb(219,73,4)" fg:x="1085" fg:w="1"/><text x="85.9530%" y="191.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="85.7820%" y="437" width="0.0790%" height="15" fill="rgb(239,25,41)" fg:x="1086" fg:w="1"/><text x="86.0320%" y="447.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.7820%" y="421" width="0.0790%" height="15" fill="rgb(208,88,46)" fg:x="1086" fg:w="1"/><text x="86.0320%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="85.7820%" y="405" width="0.0790%" height="15" fill="rgb(239,184,9)" fg:x="1086" fg:w="1"/><text x="86.0320%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.8610%" y="389" width="0.0790%" height="15" fill="rgb(223,114,13)" fg:x="1087" fg:w="1"/><text x="86.1110%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="85.7030%" y="453" width="0.3160%" height="15" fill="rgb(214,28,42)" fg:x="1085" fg:w="4"/><text x="85.9530%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="85.8610%" y="437" width="0.1580%" height="15" fill="rgb(252,32,44)" fg:x="1087" fg:w="2"/><text x="86.1110%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="85.8610%" y="421" width="0.1580%" height="15" fill="rgb(231,159,4)" fg:x="1087" fg:w="2"/><text x="86.1110%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.8610%" y="405" width="0.1580%" height="15" fill="rgb(210,35,26)" fg:x="1087" fg:w="2"/><text x="86.1110%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9400%" y="389" width="0.0790%" height="15" fill="rgb(208,190,37)" fg:x="1088" fg:w="1"/><text x="86.1900%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.9400%" y="373" width="0.0790%" height="15" fill="rgb(226,148,22)" fg:x="1088" fg:w="1"/><text x="86.1900%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9400%" y="357" width="0.0790%" height="15" fill="rgb(242,153,24)" fg:x="1088" fg:w="1"/><text x="86.1900%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9400%" y="341" width="0.0790%" height="15" fill="rgb(213,133,7)" fg:x="1088" fg:w="1"/><text x="86.1900%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9400%" y="325" width="0.0790%" height="15" fill="rgb(248,206,18)" fg:x="1088" fg:w="1"/><text x="86.1900%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0190%" y="405" width="0.0790%" height="15" fill="rgb(233,157,4)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0190%" y="389" width="0.0790%" height="15" fill="rgb(249,179,32)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0190%" y="373" width="0.0790%" height="15" fill="rgb(248,69,35)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0190%" y="357" width="0.0790%" height="15" fill="rgb(249,158,38)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0190%" y="341" width="0.0790%" height="15" fill="rgb(223,18,43)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.0190%" y="325" width="0.0790%" height="15" fill="rgb(238,42,45)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.0190%" y="309" width="0.0790%" height="15" fill="rgb(219,65,47)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.0190%" y="293" width="0.0790%" height="15" fill="rgb(248,153,12)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0190%" y="277" width="0.0790%" height="15" fill="rgb(240,118,4)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0190%" y="261" width="0.0790%" height="15" fill="rgb(250,96,34)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.0190%" y="245" width="0.0790%" height="15" fill="rgb(221,15,4)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.0190%" y="229" width="0.0790%" height="15" fill="rgb(217,149,33)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.0190%" y="213" width="0.0790%" height="15" fill="rgb(213,58,29)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.0190%" y="197" width="0.0790%" height="15" fill="rgb(236,218,9)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0190%" y="181" width="0.0790%" height="15" fill="rgb(248,40,19)" fg:x="1089" fg:w="1"/><text x="86.2690%" y="191.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.63%)</title><rect x="85.5450%" y="501" width="0.6319%" height="15" fill="rgb(212,17,6)" fg:x="1083" fg:w="8"/><text x="85.7950%" y="511.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.63%)</title><rect x="85.5450%" y="485" width="0.6319%" height="15" fill="rgb(206,212,20)" fg:x="1083" fg:w="8"/><text x="85.7950%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (6 samples, 0.47%)</title><rect x="85.7030%" y="469" width="0.4739%" height="15" fill="rgb(229,80,37)" fg:x="1085" fg:w="6"/><text x="85.9530%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.0190%" y="453" width="0.1580%" height="15" fill="rgb(253,8,37)" fg:x="1089" fg:w="2"/><text x="86.2690%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.0190%" y="437" width="0.1580%" height="15" fill="rgb(215,16,43)" fg:x="1089" fg:w="2"/><text x="86.2690%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="86.0190%" y="421" width="0.1580%" height="15" fill="rgb(236,219,16)" fg:x="1089" fg:w="2"/><text x="86.2690%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.0979%" y="405" width="0.0790%" height="15" fill="rgb(251,0,3)" fg:x="1090" fg:w="1"/><text x="86.3479%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0979%" y="389" width="0.0790%" height="15" fill="rgb(207,133,37)" fg:x="1090" fg:w="1"/><text x="86.3479%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.0979%" y="373" width="0.0790%" height="15" fill="rgb(250,143,20)" fg:x="1090" fg:w="1"/><text x="86.3479%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0979%" y="357" width="0.0790%" height="15" fill="rgb(242,19,50)" fg:x="1090" fg:w="1"/><text x="86.3479%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0979%" y="341" width="0.0790%" height="15" fill="rgb(206,124,43)" fg:x="1090" fg:w="1"/><text x="86.3479%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.0979%" y="325" width="0.0790%" height="15" fill="rgb(229,4,38)" fg:x="1090" fg:w="1"/><text x="86.3479%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.1769%" y="485" width="0.0790%" height="15" fill="rgb(247,220,45)" fg:x="1091" fg:w="1"/><text x="86.4269%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1769%" y="469" width="0.0790%" height="15" fill="rgb(247,195,0)" fg:x="1091" fg:w="1"/><text x="86.4269%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="86.2559%" y="485" width="0.0790%" height="15" fill="rgb(252,12,19)" fg:x="1092" fg:w="1"/><text x="86.5059%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.2559%" y="469" width="0.0790%" height="15" fill="rgb(222,49,50)" fg:x="1092" fg:w="1"/><text x="86.5059%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2559%" y="453" width="0.0790%" height="15" fill="rgb(209,157,28)" fg:x="1092" fg:w="1"/><text x="86.5059%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2559%" y="437" width="0.0790%" height="15" fill="rgb(238,174,24)" fg:x="1092" fg:w="1"/><text x="86.5059%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.2559%" y="421" width="0.0790%" height="15" fill="rgb(224,17,28)" fg:x="1092" fg:w="1"/><text x="86.5059%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2559%" y="405" width="0.0790%" height="15" fill="rgb(249,7,29)" fg:x="1092" fg:w="1"/><text x="86.5059%" y="415.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="86.3349%" y="485" width="0.1580%" height="15" fill="rgb(243,178,4)" fg:x="1093" fg:w="2"/><text x="86.5849%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="86.3349%" y="469" width="0.1580%" height="15" fill="rgb(246,138,35)" fg:x="1093" fg:w="2"/><text x="86.5849%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="86.4139%" y="453" width="0.0790%" height="15" fill="rgb(251,85,18)" fg:x="1094" fg:w="1"/><text x="86.6639%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="86.4139%" y="437" width="0.0790%" height="15" fill="rgb(254,55,9)" fg:x="1094" fg:w="1"/><text x="86.6639%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.5719%" y="389" width="0.0790%" height="15" fill="rgb(248,4,50)" fg:x="1096" fg:w="1"/><text x="86.8219%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="86.4929%" y="437" width="0.3160%" height="15" fill="rgb(215,208,14)" fg:x="1095" fg:w="4"/><text x="86.7429%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="86.4929%" y="421" width="0.3160%" height="15" fill="rgb(218,37,18)" fg:x="1095" fg:w="4"/><text x="86.7429%" y="431.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="86.4929%" y="405" width="0.3160%" height="15" fill="rgb(206,104,13)" fg:x="1095" fg:w="4"/><text x="86.7429%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="86.6509%" y="389" width="0.1580%" height="15" fill="rgb(248,94,22)" fg:x="1097" fg:w="2"/><text x="86.9009%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.6509%" y="373" width="0.1580%" height="15" fill="rgb(235,42,46)" fg:x="1097" fg:w="2"/><text x="86.9009%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="86.6509%" y="357" width="0.1580%" height="15" fill="rgb(220,228,48)" fg:x="1097" fg:w="2"/><text x="86.9009%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.7299%" y="341" width="0.0790%" height="15" fill="rgb(216,58,12)" fg:x="1098" fg:w="1"/><text x="86.9799%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.7299%" y="325" width="0.0790%" height="15" fill="rgb(223,97,52)" fg:x="1098" fg:w="1"/><text x="86.9799%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="86.7299%" y="309" width="0.0790%" height="15" fill="rgb(208,159,17)" fg:x="1098" fg:w="1"/><text x="86.9799%" y="319.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="86.8088%" y="437" width="0.0790%" height="15" fill="rgb(215,172,9)" fg:x="1099" fg:w="1"/><text x="87.0588%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8088%" y="421" width="0.0790%" height="15" fill="rgb(252,175,30)" fg:x="1099" fg:w="1"/><text x="87.0588%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8878%" y="405" width="0.0790%" height="15" fill="rgb(209,159,10)" fg:x="1100" fg:w="1"/><text x="87.1378%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8878%" y="389" width="0.0790%" height="15" fill="rgb(229,73,51)" fg:x="1100" fg:w="1"/><text x="87.1378%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="86.8878%" y="373" width="0.0790%" height="15" fill="rgb(208,212,43)" fg:x="1100" fg:w="1"/><text x="87.1378%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.55%)</title><rect x="86.4929%" y="469" width="0.5529%" height="15" fill="rgb(254,123,53)" fg:x="1095" fg:w="7"/><text x="86.7429%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.55%)</title><rect x="86.4929%" y="453" width="0.5529%" height="15" fill="rgb(254,128,49)" fg:x="1095" fg:w="7"/><text x="86.7429%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="86.8878%" y="437" width="0.1580%" height="15" fill="rgb(246,16,16)" fg:x="1100" fg:w="2"/><text x="87.1378%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.8878%" y="421" width="0.1580%" height="15" fill="rgb(209,200,1)" fg:x="1100" fg:w="2"/><text x="87.1378%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.9668%" y="405" width="0.0790%" height="15" fill="rgb(235,9,3)" fg:x="1101" fg:w="1"/><text x="87.2168%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="86.9668%" y="389" width="0.0790%" height="15" fill="rgb(233,121,54)" fg:x="1101" fg:w="1"/><text x="87.2168%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0458%" y="469" width="0.0790%" height="15" fill="rgb(236,80,25)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0458%" y="453" width="0.0790%" height="15" fill="rgb(220,44,24)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0458%" y="437" width="0.0790%" height="15" fill="rgb(236,225,16)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.0458%" y="421" width="0.0790%" height="15" fill="rgb(237,140,0)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.0458%" y="405" width="0.0790%" height="15" fill="rgb(243,225,53)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.0458%" y="389" width="0.0790%" height="15" fill="rgb(240,140,30)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0458%" y="373" width="0.0790%" height="15" fill="rgb(217,51,16)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0458%" y="357" width="0.0790%" height="15" fill="rgb(245,75,50)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.0458%" y="341" width="0.0790%" height="15" fill="rgb(208,174,22)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.0458%" y="325" width="0.0790%" height="15" fill="rgb(219,98,50)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.0458%" y="309" width="0.0790%" height="15" fill="rgb(243,138,3)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.0458%" y="293" width="0.0790%" height="15" fill="rgb(243,132,26)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0458%" y="277" width="0.0790%" height="15" fill="rgb(250,201,8)" fg:x="1102" fg:w="1"/><text x="87.2958%" y="287.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (263 samples, 20.77%)</title><rect x="66.4297%" y="517" width="20.7741%" height="15" fill="rgb(213,91,26)" fg:x="841" fg:w="263"/><text x="66.6797%" y="527.50">&lt;tests::HoldingKeyInVessel as tes..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (13 samples, 1.03%)</title><rect x="86.1769%" y="501" width="1.0269%" height="15" fill="rgb(229,117,1)" fg:x="1091" fg:w="13"/><text x="86.4269%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (9 samples, 0.71%)</title><rect x="86.4929%" y="485" width="0.7109%" height="15" fill="rgb(229,24,6)" fg:x="1095" fg:w="9"/><text x="86.7429%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.1248%" y="469" width="0.0790%" height="15" fill="rgb(206,69,11)" fg:x="1103" fg:w="1"/><text x="87.3748%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.1248%" y="453" width="0.0790%" height="15" fill="rgb(234,111,34)" fg:x="1103" fg:w="1"/><text x="87.3748%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="87.1248%" y="437" width="0.0790%" height="15" fill="rgb(213,187,51)" fg:x="1103" fg:w="1"/><text x="87.3748%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1248%" y="421" width="0.0790%" height="15" fill="rgb(207,45,11)" fg:x="1103" fg:w="1"/><text x="87.3748%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1248%" y="405" width="0.0790%" height="15" fill="rgb(225,151,47)" fg:x="1103" fg:w="1"/><text x="87.3748%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1248%" y="389" width="0.0790%" height="15" fill="rgb(211,226,5)" fg:x="1103" fg:w="1"/><text x="87.3748%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1248%" y="373" width="0.0790%" height="15" fill="rgb(214,83,52)" fg:x="1103" fg:w="1"/><text x="87.3748%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1248%" y="357" width="0.0790%" height="15" fill="rgb(229,49,53)" fg:x="1103" fg:w="1"/><text x="87.3748%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1248%" y="341" width="0.0790%" height="15" fill="rgb(246,8,28)" fg:x="1103" fg:w="1"/><text x="87.3748%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="87.2038%" y="517" width="0.0790%" height="15" fill="rgb(207,28,41)" fg:x="1104" fg:w="1"/><text x="87.4538%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2038%" y="501" width="0.0790%" height="15" fill="rgb(254,22,25)" fg:x="1104" fg:w="1"/><text x="87.4538%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="87.2828%" y="517" width="0.1580%" height="15" fill="rgb(209,120,42)" fg:x="1105" fg:w="2"/><text x="87.5328%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="87.2828%" y="501" width="0.1580%" height="15" fill="rgb(216,194,18)" fg:x="1105" fg:w="2"/><text x="87.5328%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="87.3618%" y="485" width="0.0790%" height="15" fill="rgb(213,70,17)" fg:x="1106" fg:w="1"/><text x="87.6118%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.3618%" y="469" width="0.0790%" height="15" fill="rgb(228,66,19)" fg:x="1106" fg:w="1"/><text x="87.6118%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3618%" y="453" width="0.0790%" height="15" fill="rgb(236,221,54)" fg:x="1106" fg:w="1"/><text x="87.6118%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="87.4408%" y="501" width="0.0790%" height="15" fill="rgb(207,175,15)" fg:x="1107" fg:w="1"/><text x="87.6908%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4408%" y="485" width="0.0790%" height="15" fill="rgb(234,76,8)" fg:x="1107" fg:w="1"/><text x="87.6908%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4408%" y="469" width="0.0790%" height="15" fill="rgb(243,106,0)" fg:x="1107" fg:w="1"/><text x="87.6908%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.4408%" y="453" width="0.0790%" height="15" fill="rgb(208,48,19)" fg:x="1107" fg:w="1"/><text x="87.6908%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.4408%" y="437" width="0.0790%" height="15" fill="rgb(251,50,29)" fg:x="1107" fg:w="1"/><text x="87.6908%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.4408%" y="421" width="0.0790%" height="15" fill="rgb(222,31,49)" fg:x="1107" fg:w="1"/><text x="87.6908%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="87.4408%" y="405" width="0.0790%" height="15" fill="rgb(232,33,18)" fg:x="1107" fg:w="1"/><text x="87.6908%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.4408%" y="389" width="0.0790%" height="15" fill="rgb(209,1,44)" fg:x="1107" fg:w="1"/><text x="87.6908%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.5197%" y="501" width="0.0790%" height="15" fill="rgb(211,7,1)" fg:x="1108" fg:w="1"/><text x="87.7697%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="87.6777%" y="469" width="0.2370%" height="15" fill="rgb(224,111,27)" fg:x="1110" fg:w="3"/><text x="87.9277%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="87.7567%" y="453" width="0.1580%" height="15" fill="rgb(252,195,39)" fg:x="1111" fg:w="2"/><text x="88.0067%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="87.7567%" y="437" width="0.1580%" height="15" fill="rgb(237,198,5)" fg:x="1111" fg:w="2"/><text x="88.0067%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="88.0727%" y="405" width="0.3160%" height="15" fill="rgb(232,148,1)" fg:x="1115" fg:w="4"/><text x="88.3227%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="88.0727%" y="389" width="0.3160%" height="15" fill="rgb(249,41,3)" fg:x="1115" fg:w="4"/><text x="88.3227%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="88.0727%" y="373" width="0.3160%" height="15" fill="rgb(215,14,33)" fg:x="1115" fg:w="4"/><text x="88.3227%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="88.2306%" y="357" width="0.1580%" height="15" fill="rgb(209,146,24)" fg:x="1117" fg:w="2"/><text x="88.4806%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.3096%" y="341" width="0.0790%" height="15" fill="rgb(219,51,47)" fg:x="1118" fg:w="1"/><text x="88.5596%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.3096%" y="325" width="0.0790%" height="15" fill="rgb(234,217,40)" fg:x="1118" fg:w="1"/><text x="88.5596%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.3096%" y="309" width="0.0790%" height="15" fill="rgb(228,34,26)" fg:x="1118" fg:w="1"/><text x="88.5596%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.3096%" y="293" width="0.0790%" height="15" fill="rgb(224,50,29)" fg:x="1118" fg:w="1"/><text x="88.5596%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.5466%" y="341" width="0.0790%" height="15" fill="rgb(205,79,51)" fg:x="1121" fg:w="1"/><text x="88.7966%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.5466%" y="325" width="0.0790%" height="15" fill="rgb(218,136,28)" fg:x="1121" fg:w="1"/><text x="88.7966%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.5466%" y="309" width="0.0790%" height="15" fill="rgb(220,150,10)" fg:x="1121" fg:w="1"/><text x="88.7966%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.5466%" y="293" width="0.0790%" height="15" fill="rgb(242,158,47)" fg:x="1121" fg:w="1"/><text x="88.7966%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="88.5466%" y="373" width="0.1580%" height="15" fill="rgb(209,68,0)" fg:x="1121" fg:w="2"/><text x="88.7966%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.5466%" y="357" width="0.1580%" height="15" fill="rgb(208,13,41)" fg:x="1121" fg:w="2"/><text x="88.7966%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.6256%" y="341" width="0.0790%" height="15" fill="rgb(226,201,7)" fg:x="1122" fg:w="1"/><text x="88.8756%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.6256%" y="325" width="0.0790%" height="15" fill="rgb(236,103,26)" fg:x="1122" fg:w="1"/><text x="88.8756%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.6256%" y="309" width="0.0790%" height="15" fill="rgb(243,162,8)" fg:x="1122" fg:w="1"/><text x="88.8756%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.6256%" y="293" width="0.0790%" height="15" fill="rgb(237,225,11)" fg:x="1122" fg:w="1"/><text x="88.8756%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.7046%" y="357" width="0.0790%" height="15" fill="rgb(247,186,32)" fg:x="1123" fg:w="1"/><text x="88.9546%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.7836%" y="357" width="0.0790%" height="15" fill="rgb(215,26,28)" fg:x="1124" fg:w="1"/><text x="89.0336%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.7836%" y="341" width="0.0790%" height="15" fill="rgb(208,121,6)" fg:x="1124" fg:w="1"/><text x="89.0336%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.8626%" y="341" width="0.0790%" height="15" fill="rgb(225,91,3)" fg:x="1125" fg:w="1"/><text x="89.1126%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.9415%" y="341" width="0.0790%" height="15" fill="rgb(246,119,36)" fg:x="1126" fg:w="1"/><text x="89.1915%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.9415%" y="325" width="0.0790%" height="15" fill="rgb(254,173,2)" fg:x="1126" fg:w="1"/><text x="89.1915%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.9415%" y="309" width="0.0790%" height="15" fill="rgb(209,87,54)" fg:x="1126" fg:w="1"/><text x="89.1915%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.9415%" y="293" width="0.0790%" height="15" fill="rgb(223,216,20)" fg:x="1126" fg:w="1"/><text x="89.1915%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.1785%" y="325" width="0.0790%" height="15" fill="rgb(220,31,8)" fg:x="1129" fg:w="1"/><text x="89.4285%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.1785%" y="309" width="0.0790%" height="15" fill="rgb(220,185,15)" fg:x="1129" fg:w="1"/><text x="89.4285%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.1785%" y="293" width="0.0790%" height="15" fill="rgb(247,190,50)" fg:x="1129" fg:w="1"/><text x="89.4285%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="89.0205%" y="341" width="0.3160%" height="15" fill="rgb(239,173,47)" fg:x="1127" fg:w="4"/><text x="89.2705%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.2575%" y="325" width="0.0790%" height="15" fill="rgb(218,190,42)" fg:x="1130" fg:w="1"/><text x="89.5075%" y="335.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.42%)</title><rect x="88.0727%" y="421" width="1.4218%" height="15" fill="rgb(251,207,16)" fg:x="1115" fg:w="18"/><text x="88.3227%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.11%)</title><rect x="88.3886%" y="405" width="1.1058%" height="15" fill="rgb(222,199,47)" fg:x="1119" fg:w="14"/><text x="88.6386%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.03%)</title><rect x="88.4676%" y="389" width="1.0269%" height="15" fill="rgb(245,190,7)" fg:x="1120" fg:w="13"/><text x="88.7176%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.79%)</title><rect x="88.7046%" y="373" width="0.7899%" height="15" fill="rgb(239,85,38)" fg:x="1123" fg:w="10"/><text x="88.9546%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="88.8626%" y="357" width="0.6319%" height="15" fill="rgb(229,69,51)" fg:x="1125" fg:w="8"/><text x="89.1126%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.3365%" y="341" width="0.1580%" height="15" fill="rgb(231,104,51)" fg:x="1131" fg:w="2"/><text x="89.5865%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="89.3365%" y="325" width="0.1580%" height="15" fill="rgb(235,49,4)" fg:x="1131" fg:w="2"/><text x="89.5865%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.5735%" y="373" width="0.0790%" height="15" fill="rgb(246,166,20)" fg:x="1134" fg:w="1"/><text x="89.8235%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6524%" y="341" width="0.0790%" height="15" fill="rgb(230,119,37)" fg:x="1135" fg:w="1"/><text x="89.9024%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.7314%" y="341" width="0.0790%" height="15" fill="rgb(234,77,34)" fg:x="1136" fg:w="1"/><text x="89.9814%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.7314%" y="325" width="0.0790%" height="15" fill="rgb(211,222,33)" fg:x="1136" fg:w="1"/><text x="89.9814%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7314%" y="309" width="0.0790%" height="15" fill="rgb(226,45,42)" fg:x="1136" fg:w="1"/><text x="89.9814%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="89.4945%" y="421" width="0.4739%" height="15" fill="rgb(215,174,28)" fg:x="1133" fg:w="6"/><text x="89.7445%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.47%)</title><rect x="89.4945%" y="405" width="0.4739%" height="15" fill="rgb(254,173,49)" fg:x="1133" fg:w="6"/><text x="89.7445%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="89.4945%" y="389" width="0.4739%" height="15" fill="rgb(229,191,6)" fg:x="1133" fg:w="6"/><text x="89.7445%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.6524%" y="373" width="0.3160%" height="15" fill="rgb(212,145,22)" fg:x="1135" fg:w="4"/><text x="89.9024%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.6524%" y="357" width="0.3160%" height="15" fill="rgb(226,6,51)" fg:x="1135" fg:w="4"/><text x="89.9024%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.8104%" y="341" width="0.1580%" height="15" fill="rgb(227,128,8)" fg:x="1137" fg:w="2"/><text x="90.0604%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.0474%" y="341" width="0.0790%" height="15" fill="rgb(205,24,10)" fg:x="1140" fg:w="1"/><text x="90.2974%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0474%" y="325" width="0.0790%" height="15" fill="rgb(217,147,27)" fg:x="1140" fg:w="1"/><text x="90.2974%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.0474%" y="389" width="0.2370%" height="15" fill="rgb(250,82,42)" fg:x="1140" fg:w="3"/><text x="90.2974%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="90.0474%" y="373" width="0.2370%" height="15" fill="rgb(248,93,17)" fg:x="1140" fg:w="3"/><text x="90.2974%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.0474%" y="357" width="0.2370%" height="15" fill="rgb(254,212,40)" fg:x="1140" fg:w="3"/><text x="90.2974%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.1264%" y="341" width="0.1580%" height="15" fill="rgb(229,209,2)" fg:x="1141" fg:w="2"/><text x="90.3764%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.1264%" y="325" width="0.1580%" height="15" fill="rgb(211,50,43)" fg:x="1141" fg:w="2"/><text x="90.3764%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.2054%" y="309" width="0.0790%" height="15" fill="rgb(245,196,29)" fg:x="1142" fg:w="1"/><text x="90.4554%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.2844%" y="357" width="0.1580%" height="15" fill="rgb(216,132,13)" fg:x="1143" fg:w="2"/><text x="90.5344%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.2844%" y="341" width="0.1580%" height="15" fill="rgb(251,108,21)" fg:x="1143" fg:w="2"/><text x="90.5344%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="90.2844%" y="325" width="0.1580%" height="15" fill="rgb(229,174,54)" fg:x="1143" fg:w="2"/><text x="90.5344%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.3633%" y="309" width="0.0790%" height="15" fill="rgb(211,175,47)" fg:x="1144" fg:w="1"/><text x="90.6133%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.3633%" y="293" width="0.0790%" height="15" fill="rgb(234,5,37)" fg:x="1144" fg:w="1"/><text x="90.6133%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="90.2844%" y="373" width="0.2370%" height="15" fill="rgb(244,150,43)" fg:x="1143" fg:w="3"/><text x="90.5344%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.4423%" y="357" width="0.0790%" height="15" fill="rgb(242,172,38)" fg:x="1145" fg:w="1"/><text x="90.6923%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.63%)</title><rect x="89.9684%" y="405" width="0.6319%" height="15" fill="rgb(205,27,8)" fg:x="1139" fg:w="8"/><text x="90.2184%" y="415.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="90.2844%" y="389" width="0.3160%" height="15" fill="rgb(217,57,3)" fg:x="1143" fg:w="4"/><text x="90.5344%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5213%" y="373" width="0.0790%" height="15" fill="rgb(242,21,38)" fg:x="1146" fg:w="1"/><text x="90.7713%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.7583%" y="373" width="0.1580%" height="15" fill="rgb(209,64,43)" fg:x="1149" fg:w="2"/><text x="91.0083%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.8373%" y="357" width="0.0790%" height="15" fill="rgb(222,2,46)" fg:x="1150" fg:w="1"/><text x="91.0873%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.8373%" y="341" width="0.0790%" height="15" fill="rgb(218,19,44)" fg:x="1150" fg:w="1"/><text x="91.0873%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="90.9163%" y="373" width="0.0790%" height="15" fill="rgb(240,203,42)" fg:x="1151" fg:w="1"/><text x="91.1663%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.9163%" y="357" width="0.0790%" height="15" fill="rgb(229,23,45)" fg:x="1151" fg:w="1"/><text x="91.1663%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.9163%" y="341" width="0.0790%" height="15" fill="rgb(205,228,51)" fg:x="1151" fg:w="1"/><text x="91.1663%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.9953%" y="373" width="0.0790%" height="15" fill="rgb(239,36,20)" fg:x="1152" fg:w="1"/><text x="91.2453%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.9953%" y="357" width="0.0790%" height="15" fill="rgb(248,172,27)" fg:x="1152" fg:w="1"/><text x="91.2453%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9953%" y="341" width="0.0790%" height="15" fill="rgb(244,55,32)" fg:x="1152" fg:w="1"/><text x="91.2453%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1532%" y="325" width="0.0790%" height="15" fill="rgb(215,97,16)" fg:x="1154" fg:w="1"/><text x="91.4032%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1532%" y="309" width="0.0790%" height="15" fill="rgb(224,80,29)" fg:x="1154" fg:w="1"/><text x="91.4032%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1532%" y="293" width="0.0790%" height="15" fill="rgb(216,93,47)" fg:x="1154" fg:w="1"/><text x="91.4032%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="91.2322%" y="261" width="0.0790%" height="15" fill="rgb(238,159,10)" fg:x="1155" fg:w="1"/><text x="91.4822%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2322%" y="245" width="0.0790%" height="15" fill="rgb(223,98,29)" fg:x="1155" fg:w="1"/><text x="91.4822%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="91.2322%" y="293" width="0.2370%" height="15" fill="rgb(210,176,23)" fg:x="1155" fg:w="3"/><text x="91.4822%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="91.2322%" y="277" width="0.2370%" height="15" fill="rgb(242,162,27)" fg:x="1155" fg:w="3"/><text x="91.4822%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.3112%" y="261" width="0.1580%" height="15" fill="rgb(245,109,32)" fg:x="1156" fg:w="2"/><text x="91.5612%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="91.2322%" y="325" width="0.3160%" height="15" fill="rgb(248,87,8)" fg:x="1155" fg:w="4"/><text x="91.4822%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="91.2322%" y="309" width="0.3160%" height="15" fill="rgb(250,160,50)" fg:x="1155" fg:w="4"/><text x="91.4822%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4692%" y="293" width="0.0790%" height="15" fill="rgb(246,165,25)" fg:x="1158" fg:w="1"/><text x="91.7192%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.5482%" y="309" width="0.0790%" height="15" fill="rgb(249,219,3)" fg:x="1159" fg:w="1"/><text x="91.7982%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="91.6272%" y="309" width="0.0790%" height="15" fill="rgb(226,66,5)" fg:x="1160" fg:w="1"/><text x="91.8772%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7062%" y="293" width="0.0790%" height="15" fill="rgb(250,220,43)" fg:x="1161" fg:w="1"/><text x="91.9562%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7062%" y="277" width="0.0790%" height="15" fill="rgb(225,111,31)" fg:x="1161" fg:w="1"/><text x="91.9562%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.7062%" y="261" width="0.0790%" height="15" fill="rgb(248,106,18)" fg:x="1161" fg:w="1"/><text x="91.9562%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.7852%" y="277" width="0.0790%" height="15" fill="rgb(220,226,45)" fg:x="1162" fg:w="1"/><text x="92.0352%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="91.8641%" y="277" width="0.0790%" height="15" fill="rgb(208,58,53)" fg:x="1163" fg:w="1"/><text x="92.1141%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.03%)</title><rect x="91.1532%" y="341" width="1.0269%" height="15" fill="rgb(209,133,1)" fg:x="1154" fg:w="13"/><text x="91.4032%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.63%)</title><rect x="91.5482%" y="325" width="0.6319%" height="15" fill="rgb(228,216,27)" fg:x="1159" fg:w="8"/><text x="91.7982%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.47%)</title><rect x="91.7062%" y="309" width="0.4739%" height="15" fill="rgb(238,155,2)" fg:x="1161" fg:w="6"/><text x="91.9562%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="91.7852%" y="293" width="0.3949%" height="15" fill="rgb(244,99,37)" fg:x="1162" fg:w="5"/><text x="92.0352%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="91.9431%" y="277" width="0.2370%" height="15" fill="rgb(254,32,3)" fg:x="1164" fg:w="3"/><text x="92.1931%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="91.9431%" y="261" width="0.2370%" height="15" fill="rgb(234,46,50)" fg:x="1164" fg:w="3"/><text x="92.1931%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1011%" y="245" width="0.0790%" height="15" fill="rgb(232,118,51)" fg:x="1166" fg:w="1"/><text x="92.3511%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1011%" y="229" width="0.0790%" height="15" fill="rgb(207,24,32)" fg:x="1166" fg:w="1"/><text x="92.3511%" y="239.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (21 samples, 1.66%)</title><rect x="90.6003%" y="405" width="1.6588%" height="15" fill="rgb(208,107,43)" fg:x="1147" fg:w="21"/><text x="90.8503%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.58%)</title><rect x="90.6793%" y="389" width="1.5798%" height="15" fill="rgb(231,28,9)" fg:x="1148" fg:w="20"/><text x="90.9293%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.18%)</title><rect x="91.0742%" y="373" width="1.1848%" height="15" fill="rgb(241,204,15)" fg:x="1153" fg:w="15"/><text x="91.3242%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (15 samples, 1.18%)</title><rect x="91.0742%" y="357" width="1.1848%" height="15" fill="rgb(214,54,15)" fg:x="1153" fg:w="15"/><text x="91.3242%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="92.1801%" y="341" width="0.0790%" height="15" fill="rgb(230,12,28)" fg:x="1167" fg:w="1"/><text x="92.4301%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1801%" y="325" width="0.0790%" height="15" fill="rgb(221,171,5)" fg:x="1167" fg:w="1"/><text x="92.4301%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.2591%" y="293" width="0.0790%" height="15" fill="rgb(207,72,25)" fg:x="1168" fg:w="1"/><text x="92.5091%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.3381%" y="261" width="0.0790%" height="15" fill="rgb(249,79,37)" fg:x="1169" fg:w="1"/><text x="92.5881%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.3381%" y="245" width="0.0790%" height="15" fill="rgb(209,98,49)" fg:x="1169" fg:w="1"/><text x="92.5881%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3381%" y="229" width="0.0790%" height="15" fill="rgb(221,62,13)" fg:x="1169" fg:w="1"/><text x="92.5881%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3381%" y="213" width="0.0790%" height="15" fill="rgb(223,39,6)" fg:x="1169" fg:w="1"/><text x="92.5881%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="92.3381%" y="197" width="0.0790%" height="15" fill="rgb(246,163,20)" fg:x="1169" fg:w="1"/><text x="92.5881%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.4171%" y="245" width="0.0790%" height="15" fill="rgb(211,111,29)" fg:x="1170" fg:w="1"/><text x="92.6671%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.4171%" y="229" width="0.0790%" height="15" fill="rgb(243,118,5)" fg:x="1170" fg:w="1"/><text x="92.6671%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="92.4961%" y="245" width="0.1580%" height="15" fill="rgb(240,144,52)" fg:x="1171" fg:w="2"/><text x="92.7461%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="92.4961%" y="229" width="0.1580%" height="15" fill="rgb(244,158,36)" fg:x="1171" fg:w="2"/><text x="92.7461%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.55%)</title><rect x="92.2591%" y="309" width="0.5529%" height="15" fill="rgb(241,109,37)" fg:x="1168" fg:w="7"/><text x="92.5091%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="92.3381%" y="293" width="0.4739%" height="15" fill="rgb(213,95,32)" fg:x="1169" fg:w="6"/><text x="92.5881%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="92.3381%" y="277" width="0.4739%" height="15" fill="rgb(252,193,9)" fg:x="1169" fg:w="6"/><text x="92.5881%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="92.4171%" y="261" width="0.3949%" height="15" fill="rgb(225,213,21)" fg:x="1170" fg:w="5"/><text x="92.6671%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.6540%" y="245" width="0.1580%" height="15" fill="rgb(220,172,46)" fg:x="1173" fg:w="2"/><text x="92.9040%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7330%" y="229" width="0.0790%" height="15" fill="rgb(235,75,41)" fg:x="1174" fg:w="1"/><text x="92.9830%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.63%)</title><rect x="92.2591%" y="341" width="0.6319%" height="15" fill="rgb(213,86,9)" fg:x="1168" fg:w="8"/><text x="92.5091%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="92.2591%" y="325" width="0.6319%" height="15" fill="rgb(238,127,51)" fg:x="1168" fg:w="8"/><text x="92.5091%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.8120%" y="309" width="0.0790%" height="15" fill="rgb(215,2,54)" fg:x="1175" fg:w="1"/><text x="93.0620%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.8120%" y="293" width="0.0790%" height="15" fill="rgb(245,80,6)" fg:x="1175" fg:w="1"/><text x="93.0620%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="92.8120%" y="277" width="0.0790%" height="15" fill="rgb(233,106,42)" fg:x="1175" fg:w="1"/><text x="93.0620%" y="287.50"></text></g><g><title>engine::session::state::State::close (69 samples, 5.45%)</title><rect x="87.5987%" y="501" width="5.4502%" height="15" fill="rgb(244,86,38)" fg:x="1109" fg:w="69"/><text x="87.8487%" y="511.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (69 samples, 5.45%)</title><rect x="87.5987%" y="485" width="5.4502%" height="15" fill="rgb(242,167,7)" fg:x="1109" fg:w="69"/><text x="87.8487%" y="495.50">engine:..</text></g><g><title>core::iter::adapters::try_process (65 samples, 5.13%)</title><rect x="87.9147%" y="469" width="5.1343%" height="15" fill="rgb(218,216,3)" fg:x="1113" fg:w="65"/><text x="88.1647%" y="479.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (64 samples, 5.06%)</title><rect x="87.9937%" y="453" width="5.0553%" height="15" fill="rgb(206,136,36)" fg:x="1114" fg:w="64"/><text x="88.2437%" y="463.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (64 samples, 5.06%)</title><rect x="87.9937%" y="437" width="5.0553%" height="15" fill="rgb(206,206,15)" fg:x="1114" fg:w="64"/><text x="88.2437%" y="447.50">engine..</text></g><g><title>kernel::model::any_entity_changes (39 samples, 3.08%)</title><rect x="89.9684%" y="421" width="3.0806%" height="15" fill="rgb(207,163,34)" fg:x="1139" fg:w="39"/><text x="90.2184%" y="431.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.79%)</title><rect x="92.2591%" y="405" width="0.7899%" height="15" fill="rgb(240,127,22)" fg:x="1168" fg:w="10"/><text x="92.5091%" y="415.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.79%)</title><rect x="92.2591%" y="389" width="0.7899%" height="15" fill="rgb(227,49,5)" fg:x="1168" fg:w="10"/><text x="92.5091%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.79%)</title><rect x="92.2591%" y="373" width="0.7899%" height="15" fill="rgb(231,8,6)" fg:x="1168" fg:w="10"/><text x="92.5091%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="92.2591%" y="357" width="0.7899%" height="15" fill="rgb(223,21,24)" fg:x="1168" fg:w="10"/><text x="92.5091%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="92.8910%" y="341" width="0.1580%" height="15" fill="rgb(244,44,52)" fg:x="1176" fg:w="2"/><text x="93.1410%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="92.8910%" y="325" width="0.1580%" height="15" fill="rgb(207,73,28)" fg:x="1176" fg:w="2"/><text x="93.1410%" y="335.50"></text></g><g><title>engine::session::Session::close (72 samples, 5.69%)</title><rect x="87.4408%" y="517" width="5.6872%" height="15" fill="rgb(234,215,10)" fg:x="1107" fg:w="72"/><text x="87.6908%" y="527.50">engine:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="93.0490%" y="501" width="0.0790%" height="15" fill="rgb(236,85,3)" fg:x="1178" fg:w="1"/><text x="93.2990%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (2 samples, 0.16%)</title><rect x="93.2070%" y="373" width="0.1580%" height="15" fill="rgb(236,102,39)" fg:x="1180" fg:w="2"/><text x="93.4570%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.2859%" y="357" width="0.0790%" height="15" fill="rgb(243,50,8)" fg:x="1181" fg:w="1"/><text x="93.5359%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="93.2859%" y="341" width="0.0790%" height="15" fill="rgb(207,111,4)" fg:x="1181" fg:w="1"/><text x="93.5359%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.3649%" y="341" width="0.0790%" height="15" fill="rgb(230,52,42)" fg:x="1182" fg:w="1"/><text x="93.6149%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.3649%" y="325" width="0.0790%" height="15" fill="rgb(252,178,50)" fg:x="1182" fg:w="1"/><text x="93.6149%" y="335.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.39%)</title><rect x="93.2070%" y="389" width="0.3949%" height="15" fill="rgb(234,46,35)" fg:x="1180" fg:w="5"/><text x="93.4570%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.3649%" y="373" width="0.2370%" height="15" fill="rgb(228,69,37)" fg:x="1182" fg:w="3"/><text x="93.6149%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.3649%" y="357" width="0.2370%" height="15" fill="rgb(221,21,11)" fg:x="1182" fg:w="3"/><text x="93.6149%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.4439%" y="341" width="0.1580%" height="15" fill="rgb(223,56,9)" fg:x="1183" fg:w="2"/><text x="93.6939%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.4439%" y="325" width="0.1580%" height="15" fill="rgb(234,30,19)" fg:x="1183" fg:w="2"/><text x="93.6939%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6809%" y="261" width="0.0790%" height="15" fill="rgb(211,64,54)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6809%" y="245" width="0.0790%" height="15" fill="rgb(250,189,5)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6809%" y="229" width="0.0790%" height="15" fill="rgb(214,180,13)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.6809%" y="213" width="0.0790%" height="15" fill="rgb(238,40,40)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.6809%" y="197" width="0.0790%" height="15" fill="rgb(214,101,38)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.6809%" y="181" width="0.0790%" height="15" fill="rgb(242,65,53)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6809%" y="165" width="0.0790%" height="15" fill="rgb(230,22,45)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6809%" y="149" width="0.0790%" height="15" fill="rgb(223,77,1)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.6809%" y="133" width="0.0790%" height="15" fill="rgb(227,33,37)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.6809%" y="117" width="0.0790%" height="15" fill="rgb(224,148,39)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.6809%" y="101" width="0.0790%" height="15" fill="rgb(232,212,39)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.6809%" y="85" width="0.0790%" height="15" fill="rgb(251,172,7)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6809%" y="69" width="0.0790%" height="15" fill="rgb(219,39,9)" fg:x="1186" fg:w="1"/><text x="93.9309%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.6019%" y="325" width="0.2370%" height="15" fill="rgb(228,118,14)" fg:x="1185" fg:w="3"/><text x="93.8519%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.6019%" y="309" width="0.2370%" height="15" fill="rgb(207,140,10)" fg:x="1185" fg:w="3"/><text x="93.8519%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.6019%" y="293" width="0.2370%" height="15" fill="rgb(227,111,53)" fg:x="1185" fg:w="3"/><text x="93.8519%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.6809%" y="277" width="0.1580%" height="15" fill="rgb(216,165,16)" fg:x="1186" fg:w="2"/><text x="93.9309%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7599%" y="261" width="0.0790%" height="15" fill="rgb(226,111,18)" fg:x="1187" fg:w="1"/><text x="94.0099%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="93.8389%" y="325" width="0.0790%" height="15" fill="rgb(251,27,17)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.8389%" y="309" width="0.0790%" height="15" fill="rgb(254,69,9)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="319.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="93.8389%" y="293" width="0.0790%" height="15" fill="rgb(234,140,37)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8389%" y="277" width="0.0790%" height="15" fill="rgb(220,93,8)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8389%" y="261" width="0.0790%" height="15" fill="rgb(236,113,3)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8389%" y="245" width="0.0790%" height="15" fill="rgb(234,108,23)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8389%" y="229" width="0.0790%" height="15" fill="rgb(205,114,34)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8389%" y="213" width="0.0790%" height="15" fill="rgb(236,200,45)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.8389%" y="197" width="0.0790%" height="15" fill="rgb(227,194,29)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.8389%" y="181" width="0.0790%" height="15" fill="rgb(250,76,42)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.8389%" y="165" width="0.0790%" height="15" fill="rgb(208,128,8)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8389%" y="149" width="0.0790%" height="15" fill="rgb(229,209,35)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8389%" y="133" width="0.0790%" height="15" fill="rgb(215,39,53)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.8389%" y="117" width="0.0790%" height="15" fill="rgb(219,123,41)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.8389%" y="101" width="0.0790%" height="15" fill="rgb(212,158,18)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.8389%" y="85" width="0.0790%" height="15" fill="rgb(234,196,53)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.8389%" y="69" width="0.0790%" height="15" fill="rgb(210,139,12)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8389%" y="53" width="0.0790%" height="15" fill="rgb(220,116,54)" fg:x="1188" fg:w="1"/><text x="94.0889%" y="63.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9179%" y="245" width="0.0790%" height="15" fill="rgb(247,103,28)" fg:x="1189" fg:w="1"/><text x="94.1679%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="94.0758%" y="229" width="0.1580%" height="15" fill="rgb(253,156,45)" fg:x="1191" fg:w="2"/><text x="94.3258%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="94.0758%" y="213" width="0.1580%" height="15" fill="rgb(237,157,52)" fg:x="1191" fg:w="2"/><text x="94.3258%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="94.0758%" y="197" width="0.1580%" height="15" fill="rgb(253,112,16)" fg:x="1191" fg:w="2"/><text x="94.3258%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.1548%" y="181" width="0.0790%" height="15" fill="rgb(234,70,18)" fg:x="1192" fg:w="1"/><text x="94.4048%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.2338%" y="117" width="0.0790%" height="15" fill="rgb(247,138,19)" fg:x="1193" fg:w="1"/><text x="94.4838%" y="127.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.47%)</title><rect x="93.9179%" y="325" width="0.4739%" height="15" fill="rgb(207,171,1)" fg:x="1189" fg:w="6"/><text x="94.1679%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="93.9179%" y="309" width="0.4739%" height="15" fill="rgb(239,213,3)" fg:x="1189" fg:w="6"/><text x="94.1679%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="93.9179%" y="293" width="0.4739%" height="15" fill="rgb(226,112,4)" fg:x="1189" fg:w="6"/><text x="94.1679%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.47%)</title><rect x="93.9179%" y="277" width="0.4739%" height="15" fill="rgb(252,170,12)" fg:x="1189" fg:w="6"/><text x="94.1679%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="93.9179%" y="261" width="0.4739%" height="15" fill="rgb(241,106,13)" fg:x="1189" fg:w="6"/><text x="94.1679%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.39%)</title><rect x="93.9968%" y="245" width="0.3949%" height="15" fill="rgb(225,73,23)" fg:x="1190" fg:w="5"/><text x="94.2468%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.2338%" y="229" width="0.1580%" height="15" fill="rgb(251,227,29)" fg:x="1193" fg:w="2"/><text x="94.4838%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.2338%" y="213" width="0.1580%" height="15" fill="rgb(237,144,13)" fg:x="1193" fg:w="2"/><text x="94.4838%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="94.2338%" y="197" width="0.1580%" height="15" fill="rgb(232,106,46)" fg:x="1193" fg:w="2"/><text x="94.4838%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="94.2338%" y="181" width="0.1580%" height="15" fill="rgb(245,154,53)" fg:x="1193" fg:w="2"/><text x="94.4838%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="94.2338%" y="165" width="0.1580%" height="15" fill="rgb(212,119,47)" fg:x="1193" fg:w="2"/><text x="94.4838%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.2338%" y="149" width="0.1580%" height="15" fill="rgb(253,135,25)" fg:x="1193" fg:w="2"/><text x="94.4838%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.2338%" y="133" width="0.1580%" height="15" fill="rgb(253,208,39)" fg:x="1193" fg:w="2"/><text x="94.4838%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.3128%" y="117" width="0.0790%" height="15" fill="rgb(226,64,12)" fg:x="1194" fg:w="1"/><text x="94.5628%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3128%" y="101" width="0.0790%" height="15" fill="rgb(214,162,37)" fg:x="1194" fg:w="1"/><text x="94.5628%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3128%" y="85" width="0.0790%" height="15" fill="rgb(250,104,5)" fg:x="1194" fg:w="1"/><text x="94.5628%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.3128%" y="69" width="0.0790%" height="15" fill="rgb(220,202,50)" fg:x="1194" fg:w="1"/><text x="94.5628%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3128%" y="53" width="0.0790%" height="15" fill="rgb(248,67,38)" fg:x="1194" fg:w="1"/><text x="94.5628%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3128%" y="37" width="0.0790%" height="15" fill="rgb(242,94,35)" fg:x="1194" fg:w="1"/><text x="94.5628%" y="47.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.3918%" y="229" width="0.2370%" height="15" fill="rgb(209,78,37)" fg:x="1195" fg:w="3"/><text x="94.6418%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.4708%" y="213" width="0.1580%" height="15" fill="rgb(230,126,47)" fg:x="1196" fg:w="2"/><text x="94.7208%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.5498%" y="197" width="0.0790%" height="15" fill="rgb(222,110,35)" fg:x="1197" fg:w="1"/><text x="94.7998%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.5498%" y="181" width="0.0790%" height="15" fill="rgb(233,154,20)" fg:x="1197" fg:w="1"/><text x="94.7998%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="94.3918%" y="261" width="0.3160%" height="15" fill="rgb(223,53,50)" fg:x="1195" fg:w="4"/><text x="94.6418%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="94.3918%" y="245" width="0.3160%" height="15" fill="rgb(251,27,26)" fg:x="1195" fg:w="4"/><text x="94.6418%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.6288%" y="229" width="0.0790%" height="15" fill="rgb(223,189,16)" fg:x="1198" fg:w="1"/><text x="94.8788%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.6288%" y="213" width="0.0790%" height="15" fill="rgb(207,5,54)" fg:x="1198" fg:w="1"/><text x="94.8788%" y="223.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (20 samples, 1.58%)</title><rect x="93.2070%" y="421" width="1.5798%" height="15" fill="rgb(254,124,50)" fg:x="1180" fg:w="20"/><text x="93.4570%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (20 samples, 1.58%)</title><rect x="93.2070%" y="405" width="1.5798%" height="15" fill="rgb(253,193,24)" fg:x="1180" fg:w="20"/><text x="93.4570%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (15 samples, 1.18%)</title><rect x="93.6019%" y="389" width="1.1848%" height="15" fill="rgb(235,170,24)" fg:x="1185" fg:w="15"/><text x="93.8519%" y="399.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (15 samples, 1.18%)</title><rect x="93.6019%" y="373" width="1.1848%" height="15" fill="rgb(222,212,52)" fg:x="1185" fg:w="15"/><text x="93.8519%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (15 samples, 1.18%)</title><rect x="93.6019%" y="357" width="1.1848%" height="15" fill="rgb(223,17,45)" fg:x="1185" fg:w="15"/><text x="93.8519%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.18%)</title><rect x="93.6019%" y="341" width="1.1848%" height="15" fill="rgb(227,103,26)" fg:x="1185" fg:w="15"/><text x="93.8519%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.39%)</title><rect x="94.3918%" y="325" width="0.3949%" height="15" fill="rgb(251,151,25)" fg:x="1195" fg:w="5"/><text x="94.6418%" y="335.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.39%)</title><rect x="94.3918%" y="309" width="0.3949%" height="15" fill="rgb(248,144,29)" fg:x="1195" fg:w="5"/><text x="94.6418%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="94.3918%" y="293" width="0.3949%" height="15" fill="rgb(245,97,16)" fg:x="1195" fg:w="5"/><text x="94.6418%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="94.3918%" y="277" width="0.3949%" height="15" fill="rgb(220,200,29)" fg:x="1195" fg:w="5"/><text x="94.6418%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.7077%" y="261" width="0.0790%" height="15" fill="rgb(206,38,29)" fg:x="1199" fg:w="1"/><text x="94.9577%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7077%" y="245" width="0.0790%" height="15" fill="rgb(245,19,52)" fg:x="1199" fg:w="1"/><text x="94.9577%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (23 samples, 1.82%)</title><rect x="93.2070%" y="485" width="1.8167%" height="15" fill="rgb(205,67,43)" fg:x="1180" fg:w="23"/><text x="93.4570%" y="495.50">&lt;..</text></g><g><title>kernel::plugins::mw::apply_middleware (23 samples, 1.82%)</title><rect x="93.2070%" y="469" width="1.8167%" height="15" fill="rgb(217,128,23)" fg:x="1180" fg:w="23"/><text x="93.4570%" y="479.50">k..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (23 samples, 1.82%)</title><rect x="93.2070%" y="453" width="1.8167%" height="15" fill="rgb(210,109,28)" fg:x="1180" fg:w="23"/><text x="93.4570%" y="463.50">k..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (23 samples, 1.82%)</title><rect x="93.2070%" y="437" width="1.8167%" height="15" fill="rgb(233,181,7)" fg:x="1180" fg:w="23"/><text x="93.4570%" y="447.50">&lt;..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="94.7867%" y="421" width="0.2370%" height="15" fill="rgb(244,11,22)" fg:x="1200" fg:w="3"/><text x="95.0367%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="94.7867%" y="405" width="0.2370%" height="15" fill="rgb(205,124,54)" fg:x="1200" fg:w="3"/><text x="95.0367%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="94.7867%" y="389" width="0.2370%" height="15" fill="rgb(218,21,27)" fg:x="1200" fg:w="3"/><text x="95.0367%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="94.7867%" y="373" width="0.2370%" height="15" fill="rgb(224,153,33)" fg:x="1200" fg:w="3"/><text x="95.0367%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="94.7867%" y="357" width="0.2370%" height="15" fill="rgb(240,219,28)" fg:x="1200" fg:w="3"/><text x="95.0367%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="94.7867%" y="341" width="0.2370%" height="15" fill="rgb(214,80,29)" fg:x="1200" fg:w="3"/><text x="95.0367%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="94.7867%" y="325" width="0.2370%" height="15" fill="rgb(247,148,44)" fg:x="1200" fg:w="3"/><text x="95.0367%" y="335.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="94.7867%" y="309" width="0.2370%" height="15" fill="rgb(243,110,30)" fg:x="1200" fg:w="3"/><text x="95.0367%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="94.8657%" y="293" width="0.1580%" height="15" fill="rgb(243,173,41)" fg:x="1201" fg:w="2"/><text x="95.1157%" y="303.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="94.9447%" y="277" width="0.0790%" height="15" fill="rgb(225,160,47)" fg:x="1202" fg:w="1"/><text x="95.1947%" y="287.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="94.9447%" y="261" width="0.0790%" height="15" fill="rgb(215,44,21)" fg:x="1202" fg:w="1"/><text x="95.1947%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="94.9447%" y="245" width="0.0790%" height="15" fill="rgb(248,90,3)" fg:x="1202" fg:w="1"/><text x="95.1947%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="94.9447%" y="229" width="0.0790%" height="15" fill="rgb(220,196,49)" fg:x="1202" fg:w="1"/><text x="95.1947%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="94.9447%" y="213" width="0.0790%" height="15" fill="rgb(217,138,14)" fg:x="1202" fg:w="1"/><text x="95.1947%" y="223.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="95.0237%" y="485" width="0.2370%" height="15" fill="rgb(219,111,20)" fg:x="1203" fg:w="3"/><text x="95.2737%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="95.1027%" y="469" width="0.1580%" height="15" fill="rgb(218,114,4)" fg:x="1204" fg:w="2"/><text x="95.3527%" y="479.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="95.1817%" y="453" width="0.0790%" height="15" fill="rgb(238,133,3)" fg:x="1205" fg:w="1"/><text x="95.4317%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.3397%" y="421" width="0.1580%" height="15" fill="rgb(224,95,0)" fg:x="1207" fg:w="2"/><text x="95.5897%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4186%" y="405" width="0.0790%" height="15" fill="rgb(220,169,35)" fg:x="1208" fg:w="1"/><text x="95.6686%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4186%" y="389" width="0.0790%" height="15" fill="rgb(242,116,47)" fg:x="1208" fg:w="1"/><text x="95.6686%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="95.3397%" y="437" width="0.3160%" height="15" fill="rgb(251,42,20)" fg:x="1207" fg:w="4"/><text x="95.5897%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.4976%" y="421" width="0.1580%" height="15" fill="rgb(234,7,34)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.4976%" y="405" width="0.1580%" height="15" fill="rgb(243,208,13)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="95.4976%" y="389" width="0.1580%" height="15" fill="rgb(227,33,28)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="95.4976%" y="373" width="0.1580%" height="15" fill="rgb(250,47,37)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="95.4976%" y="357" width="0.1580%" height="15" fill="rgb(235,111,52)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.4976%" y="341" width="0.1580%" height="15" fill="rgb(223,64,28)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.4976%" y="325" width="0.1580%" height="15" fill="rgb(236,67,22)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="95.4976%" y="309" width="0.1580%" height="15" fill="rgb(243,79,24)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="95.4976%" y="293" width="0.1580%" height="15" fill="rgb(241,225,22)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="95.4976%" y="277" width="0.1580%" height="15" fill="rgb(228,214,26)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="95.4976%" y="261" width="0.1580%" height="15" fill="rgb(219,84,52)" fg:x="1209" fg:w="2"/><text x="95.7476%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5766%" y="245" width="0.0790%" height="15" fill="rgb(220,12,22)" fg:x="1210" fg:w="1"/><text x="95.8266%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.6556%" y="309" width="0.0790%" height="15" fill="rgb(219,9,49)" fg:x="1211" fg:w="1"/><text x="95.9056%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="95.6556%" y="325" width="0.2370%" height="15" fill="rgb(237,40,43)" fg:x="1211" fg:w="3"/><text x="95.9056%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="95.7346%" y="309" width="0.1580%" height="15" fill="rgb(212,189,32)" fg:x="1212" fg:w="2"/><text x="95.9846%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.7346%" y="293" width="0.1580%" height="15" fill="rgb(247,48,9)" fg:x="1212" fg:w="2"/><text x="95.9846%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.7346%" y="277" width="0.1580%" height="15" fill="rgb(247,112,3)" fg:x="1212" fg:w="2"/><text x="95.9846%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.8136%" y="261" width="0.0790%" height="15" fill="rgb(243,110,18)" fg:x="1213" fg:w="1"/><text x="96.0636%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.8136%" y="245" width="0.0790%" height="15" fill="rgb(233,223,44)" fg:x="1213" fg:w="1"/><text x="96.0636%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.8136%" y="229" width="0.0790%" height="15" fill="rgb(245,160,20)" fg:x="1213" fg:w="1"/><text x="96.0636%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.6556%" y="389" width="0.3160%" height="15" fill="rgb(225,37,1)" fg:x="1211" fg:w="4"/><text x="95.9056%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="95.6556%" y="373" width="0.3160%" height="15" fill="rgb(253,227,39)" fg:x="1211" fg:w="4"/><text x="95.9056%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="95.6556%" y="357" width="0.3160%" height="15" fill="rgb(240,179,26)" fg:x="1211" fg:w="4"/><text x="95.9056%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.6556%" y="341" width="0.3160%" height="15" fill="rgb(237,212,23)" fg:x="1211" fg:w="4"/><text x="95.9056%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;core::iter::adapters::flatten::FlatMap&lt;serde_json::map::Iter,core::option::Option&lt;alloc::vec::Vec&lt;kernel::model::entity_ref::EntityRef&gt;&gt;,kernel::model::entity_ref::find_entity_refs::{{closure}}&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="95.8926%" y="325" width="0.0790%" height="15" fill="rgb(221,38,11)" fg:x="1214" fg:w="1"/><text x="96.1426%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.9716%" y="357" width="0.0790%" height="15" fill="rgb(215,85,6)" fg:x="1215" fg:w="1"/><text x="96.2216%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.47%)</title><rect x="95.6556%" y="437" width="0.4739%" height="15" fill="rgb(239,64,14)" fg:x="1211" fg:w="6"/><text x="95.9056%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.47%)</title><rect x="95.6556%" y="421" width="0.4739%" height="15" fill="rgb(215,150,32)" fg:x="1211" fg:w="6"/><text x="95.9056%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.47%)</title><rect x="95.6556%" y="405" width="0.4739%" height="15" fill="rgb(238,15,13)" fg:x="1211" fg:w="6"/><text x="95.9056%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.9716%" y="389" width="0.1580%" height="15" fill="rgb(251,87,8)" fg:x="1215" fg:w="2"/><text x="96.2216%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.9716%" y="373" width="0.1580%" height="15" fill="rgb(206,86,1)" fg:x="1215" fg:w="2"/><text x="96.2216%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0506%" y="357" width="0.0790%" height="15" fill="rgb(208,151,45)" fg:x="1216" fg:w="1"/><text x="96.3006%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.0506%" y="341" width="0.0790%" height="15" fill="rgb(231,181,24)" fg:x="1216" fg:w="1"/><text x="96.3006%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0506%" y="325" width="0.0790%" height="15" fill="rgb(240,106,29)" fg:x="1216" fg:w="1"/><text x="96.3006%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.0506%" y="309" width="0.0790%" height="15" fill="rgb(227,166,11)" fg:x="1216" fg:w="1"/><text x="96.3006%" y="319.50"></text></g><g><title>engine::session::internal::Added::find_refs (12 samples, 0.95%)</title><rect x="95.3397%" y="469" width="0.9479%" height="15" fill="rgb(254,14,34)" fg:x="1207" fg:w="12"/><text x="95.5897%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (12 samples, 0.95%)</title><rect x="95.3397%" y="453" width="0.9479%" height="15" fill="rgb(223,222,6)" fg:x="1207" fg:w="12"/><text x="95.5897%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.1295%" y="437" width="0.1580%" height="15" fill="rgb(245,69,24)" fg:x="1217" fg:w="2"/><text x="96.3795%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1295%" y="421" width="0.1580%" height="15" fill="rgb(213,193,7)" fg:x="1217" fg:w="2"/><text x="96.3795%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.1295%" y="405" width="0.1580%" height="15" fill="rgb(237,92,51)" fg:x="1217" fg:w="2"/><text x="96.3795%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="96.1295%" y="389" width="0.1580%" height="15" fill="rgb(225,194,6)" fg:x="1217" fg:w="2"/><text x="96.3795%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.1295%" y="373" width="0.1580%" height="15" fill="rgb(205,159,49)" fg:x="1217" fg:w="2"/><text x="96.3795%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.1295%" y="357" width="0.1580%" height="15" fill="rgb(219,69,2)" fg:x="1217" fg:w="2"/><text x="96.3795%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.1295%" y="341" width="0.1580%" height="15" fill="rgb(215,107,24)" fg:x="1217" fg:w="2"/><text x="96.3795%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="96.1295%" y="325" width="0.1580%" height="15" fill="rgb(249,208,29)" fg:x="1217" fg:w="2"/><text x="96.3795%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.2875%" y="437" width="0.2370%" height="15" fill="rgb(213,147,10)" fg:x="1219" fg:w="3"/><text x="96.5375%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.3665%" y="421" width="0.1580%" height="15" fill="rgb(254,140,42)" fg:x="1220" fg:w="2"/><text x="96.6165%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.3665%" y="405" width="0.1580%" height="15" fill="rgb(249,9,15)" fg:x="1220" fg:w="2"/><text x="96.6165%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4455%" y="389" width="0.0790%" height="15" fill="rgb(210,19,33)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4455%" y="373" width="0.0790%" height="15" fill="rgb(241,121,22)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.4455%" y="357" width="0.0790%" height="15" fill="rgb(244,69,52)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.4455%" y="341" width="0.0790%" height="15" fill="rgb(244,191,54)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.4455%" y="325" width="0.0790%" height="15" fill="rgb(250,3,53)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4455%" y="309" width="0.0790%" height="15" fill="rgb(205,77,3)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4455%" y="293" width="0.0790%" height="15" fill="rgb(207,155,3)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.4455%" y="277" width="0.0790%" height="15" fill="rgb(224,79,2)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.4455%" y="261" width="0.0790%" height="15" fill="rgb(243,172,5)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.4455%" y="245" width="0.0790%" height="15" fill="rgb(217,23,43)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.4455%" y="229" width="0.0790%" height="15" fill="rgb(223,109,20)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4455%" y="213" width="0.0790%" height="15" fill="rgb(232,159,21)" fg:x="1221" fg:w="1"/><text x="96.6955%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="96.2875%" y="453" width="0.3160%" height="15" fill="rgb(219,58,2)" fg:x="1219" fg:w="4"/><text x="96.5375%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5245%" y="437" width="0.0790%" height="15" fill="rgb(241,56,8)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5245%" y="421" width="0.0790%" height="15" fill="rgb(249,10,27)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.5245%" y="405" width="0.0790%" height="15" fill="rgb(248,177,5)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.5245%" y="389" width="0.0790%" height="15" fill="rgb(239,12,30)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.5245%" y="373" width="0.0790%" height="15" fill="rgb(229,164,25)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.5245%" y="357" width="0.0790%" height="15" fill="rgb(231,217,50)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.5245%" y="341" width="0.0790%" height="15" fill="rgb(247,99,32)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.5245%" y="325" width="0.0790%" height="15" fill="rgb(240,74,50)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.5245%" y="309" width="0.0790%" height="15" fill="rgb(218,54,8)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.5245%" y="293" width="0.0790%" height="15" fill="rgb(227,132,20)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.5245%" y="277" width="0.0790%" height="15" fill="rgb(232,134,12)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5245%" y="261" width="0.0790%" height="15" fill="rgb(250,129,18)" fg:x="1222" fg:w="1"/><text x="96.7745%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.6035%" y="405" width="0.1580%" height="15" fill="rgb(232,129,47)" fg:x="1223" fg:w="2"/><text x="96.8535%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6825%" y="389" width="0.0790%" height="15" fill="rgb(230,31,40)" fg:x="1224" fg:w="1"/><text x="96.9325%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="96.6035%" y="453" width="0.2370%" height="15" fill="rgb(232,126,10)" fg:x="1223" fg:w="3"/><text x="96.8535%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="96.6035%" y="437" width="0.2370%" height="15" fill="rgb(205,46,31)" fg:x="1223" fg:w="3"/><text x="96.8535%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="96.6035%" y="421" width="0.2370%" height="15" fill="rgb(232,37,37)" fg:x="1223" fg:w="3"/><text x="96.8535%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.7615%" y="405" width="0.0790%" height="15" fill="rgb(240,91,16)" fg:x="1225" fg:w="1"/><text x="97.0115%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7615%" y="389" width="0.0790%" height="15" fill="rgb(224,160,9)" fg:x="1225" fg:w="1"/><text x="97.0115%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7615%" y="373" width="0.0790%" height="15" fill="rgb(215,116,14)" fg:x="1225" fg:w="1"/><text x="97.0115%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.9194%" y="357" width="0.0790%" height="15" fill="rgb(235,46,36)" fg:x="1227" fg:w="1"/><text x="97.1694%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9194%" y="341" width="0.0790%" height="15" fill="rgb(238,39,28)" fg:x="1227" fg:w="1"/><text x="97.1694%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.9194%" y="325" width="0.0790%" height="15" fill="rgb(242,125,29)" fg:x="1227" fg:w="1"/><text x="97.1694%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.9194%" y="309" width="0.0790%" height="15" fill="rgb(238,211,30)" fg:x="1227" fg:w="1"/><text x="97.1694%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.9194%" y="293" width="0.0790%" height="15" fill="rgb(227,201,28)" fg:x="1227" fg:w="1"/><text x="97.1694%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9194%" y="277" width="0.0790%" height="15" fill="rgb(238,77,29)" fg:x="1227" fg:w="1"/><text x="97.1694%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.9194%" y="261" width="0.0790%" height="15" fill="rgb(213,221,40)" fg:x="1227" fg:w="1"/><text x="97.1694%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.9194%" y="245" width="0.0790%" height="15" fill="rgb(226,220,44)" fg:x="1227" fg:w="1"/><text x="97.1694%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9194%" y="229" width="0.0790%" height="15" fill="rgb(228,90,23)" fg:x="1227" fg:w="1"/><text x="97.1694%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9984%" y="309" width="0.0790%" height="15" fill="rgb(235,72,29)" fg:x="1228" fg:w="1"/><text x="97.2484%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="96.9984%" y="357" width="0.1580%" height="15" fill="rgb(248,117,39)" fg:x="1228" fg:w="2"/><text x="97.2484%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="96.9984%" y="341" width="0.1580%" height="15" fill="rgb(225,43,28)" fg:x="1228" fg:w="2"/><text x="97.2484%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="96.9984%" y="325" width="0.1580%" height="15" fill="rgb(240,93,4)" fg:x="1228" fg:w="2"/><text x="97.2484%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.0774%" y="309" width="0.0790%" height="15" fill="rgb(234,178,27)" fg:x="1229" fg:w="1"/><text x="97.3274%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.0774%" y="293" width="0.0790%" height="15" fill="rgb(254,88,22)" fg:x="1229" fg:w="1"/><text x="97.3274%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.1564%" y="325" width="0.0790%" height="15" fill="rgb(240,206,50)" fg:x="1230" fg:w="1"/><text x="97.4064%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="97.2354%" y="309" width="0.1580%" height="15" fill="rgb(249,103,8)" fg:x="1231" fg:w="2"/><text x="97.4854%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="97.2354%" y="293" width="0.1580%" height="15" fill="rgb(241,178,36)" fg:x="1231" fg:w="2"/><text x="97.4854%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.2354%" y="277" width="0.1580%" height="15" fill="rgb(246,110,15)" fg:x="1231" fg:w="2"/><text x="97.4854%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.2354%" y="261" width="0.1580%" height="15" fill="rgb(207,14,43)" fg:x="1231" fg:w="2"/><text x="97.4854%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.3144%" y="245" width="0.0790%" height="15" fill="rgb(253,219,19)" fg:x="1232" fg:w="1"/><text x="97.5644%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.63%)</title><rect x="96.8404%" y="405" width="0.6319%" height="15" fill="rgb(216,126,5)" fg:x="1226" fg:w="8"/><text x="97.0904%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="96.8404%" y="389" width="0.6319%" height="15" fill="rgb(218,78,42)" fg:x="1226" fg:w="8"/><text x="97.0904%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.63%)</title><rect x="96.8404%" y="373" width="0.6319%" height="15" fill="rgb(215,154,40)" fg:x="1226" fg:w="8"/><text x="97.0904%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.1564%" y="357" width="0.3160%" height="15" fill="rgb(235,129,32)" fg:x="1230" fg:w="4"/><text x="97.4064%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.1564%" y="341" width="0.3160%" height="15" fill="rgb(218,51,8)" fg:x="1230" fg:w="4"/><text x="97.4064%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="97.2354%" y="325" width="0.2370%" height="15" fill="rgb(245,48,4)" fg:x="1231" fg:w="3"/><text x="97.4854%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3934%" y="309" width="0.0790%" height="15" fill="rgb(250,175,12)" fg:x="1233" fg:w="1"/><text x="97.6434%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.3934%" y="293" width="0.0790%" height="15" fill="rgb(237,95,40)" fg:x="1233" fg:w="1"/><text x="97.6434%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.71%)</title><rect x="96.8404%" y="453" width="0.7109%" height="15" fill="rgb(244,120,0)" fg:x="1226" fg:w="9"/><text x="97.0904%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.71%)</title><rect x="96.8404%" y="437" width="0.7109%" height="15" fill="rgb(241,19,42)" fg:x="1226" fg:w="9"/><text x="97.0904%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.71%)</title><rect x="96.8404%" y="421" width="0.7109%" height="15" fill="rgb(217,174,48)" fg:x="1226" fg:w="9"/><text x="97.0904%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4724%" y="405" width="0.0790%" height="15" fill="rgb(239,36,38)" fg:x="1234" fg:w="1"/><text x="97.7224%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4724%" y="389" width="0.0790%" height="15" fill="rgb(220,63,49)" fg:x="1234" fg:w="1"/><text x="97.7224%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.4724%" y="373" width="0.0790%" height="15" fill="rgb(240,101,13)" fg:x="1234" fg:w="1"/><text x="97.7224%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.7883%" y="309" width="0.0790%" height="15" fill="rgb(209,184,51)" fg:x="1238" fg:w="1"/><text x="98.0383%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7883%" y="293" width="0.0790%" height="15" fill="rgb(206,136,39)" fg:x="1238" fg:w="1"/><text x="98.0383%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7883%" y="277" width="0.0790%" height="15" fill="rgb(254,47,45)" fg:x="1238" fg:w="1"/><text x="98.0383%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7883%" y="261" width="0.0790%" height="15" fill="rgb(252,103,20)" fg:x="1238" fg:w="1"/><text x="98.0383%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7883%" y="245" width="0.0790%" height="15" fill="rgb(230,69,12)" fg:x="1238" fg:w="1"/><text x="98.0383%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.7883%" y="325" width="0.1580%" height="15" fill="rgb(219,2,28)" fg:x="1238" fg:w="2"/><text x="98.0383%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="97.8673%" y="309" width="0.0790%" height="15" fill="rgb(210,9,12)" fg:x="1239" fg:w="1"/><text x="98.1173%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="97.8673%" y="293" width="0.0790%" height="15" fill="rgb(235,99,33)" fg:x="1239" fg:w="1"/><text x="98.1173%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8673%" y="277" width="0.0790%" height="15" fill="rgb(230,11,38)" fg:x="1239" fg:w="1"/><text x="98.1173%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.7883%" y="357" width="0.2370%" height="15" fill="rgb(217,129,0)" fg:x="1238" fg:w="3"/><text x="98.0383%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.7883%" y="341" width="0.2370%" height="15" fill="rgb(222,198,4)" fg:x="1238" fg:w="3"/><text x="98.0383%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9463%" y="325" width="0.0790%" height="15" fill="rgb(246,170,27)" fg:x="1240" fg:w="1"/><text x="98.1963%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9463%" y="309" width="0.0790%" height="15" fill="rgb(229,17,28)" fg:x="1240" fg:w="1"/><text x="98.1963%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9463%" y="293" width="0.0790%" height="15" fill="rgb(233,198,48)" fg:x="1240" fg:w="1"/><text x="98.1963%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="97.6303%" y="389" width="0.4739%" height="15" fill="rgb(238,103,23)" fg:x="1236" fg:w="6"/><text x="97.8803%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="97.6303%" y="373" width="0.4739%" height="15" fill="rgb(206,91,41)" fg:x="1236" fg:w="6"/><text x="97.8803%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.0253%" y="357" width="0.0790%" height="15" fill="rgb(227,34,25)" fg:x="1241" fg:w="1"/><text x="98.2753%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.0253%" y="341" width="0.0790%" height="15" fill="rgb(210,110,44)" fg:x="1241" fg:w="1"/><text x="98.2753%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (37 samples, 2.92%)</title><rect x="95.2607%" y="485" width="2.9226%" height="15" fill="rgb(216,189,8)" fg:x="1206" fg:w="37"/><text x="95.5107%" y="495.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.90%)</title><rect x="96.2875%" y="469" width="1.8957%" height="15" fill="rgb(234,9,46)" fg:x="1219" fg:w="24"/><text x="96.5375%" y="479.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.63%)</title><rect x="97.5513%" y="453" width="0.6319%" height="15" fill="rgb(251,200,5)" fg:x="1235" fg:w="8"/><text x="97.8013%" y="463.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.63%)</title><rect x="97.5513%" y="437" width="0.6319%" height="15" fill="rgb(238,165,37)" fg:x="1235" fg:w="8"/><text x="97.8013%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.63%)</title><rect x="97.5513%" y="421" width="0.6319%" height="15" fill="rgb(232,77,38)" fg:x="1235" fg:w="8"/><text x="97.8013%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="97.5513%" y="405" width="0.6319%" height="15" fill="rgb(253,179,33)" fg:x="1235" fg:w="8"/><text x="97.8013%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.1043%" y="389" width="0.0790%" height="15" fill="rgb(240,13,35)" fg:x="1242" fg:w="1"/><text x="98.3543%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2622%" y="405" width="0.0790%" height="15" fill="rgb(242,150,49)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2622%" y="389" width="0.0790%" height="15" fill="rgb(237,176,28)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2622%" y="373" width="0.0790%" height="15" fill="rgb(214,176,33)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.2622%" y="357" width="0.0790%" height="15" fill="rgb(214,25,12)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.2622%" y="341" width="0.0790%" height="15" fill="rgb(238,190,20)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.2622%" y="325" width="0.0790%" height="15" fill="rgb(208,11,19)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2622%" y="309" width="0.0790%" height="15" fill="rgb(239,90,4)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2622%" y="293" width="0.0790%" height="15" fill="rgb(248,110,3)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.2622%" y="277" width="0.0790%" height="15" fill="rgb(210,41,30)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.2622%" y="261" width="0.0790%" height="15" fill="rgb(239,36,8)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.2622%" y="245" width="0.0790%" height="15" fill="rgb(237,201,47)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.2622%" y="229" width="0.0790%" height="15" fill="rgb(224,140,29)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2622%" y="213" width="0.0790%" height="15" fill="rgb(231,209,17)" fg:x="1244" fg:w="1"/><text x="98.5122%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="98.2622%" y="437" width="0.2370%" height="15" fill="rgb(249,196,1)" fg:x="1244" fg:w="3"/><text x="98.5122%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="98.2622%" y="421" width="0.2370%" height="15" fill="rgb(223,207,51)" fg:x="1244" fg:w="3"/><text x="98.5122%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.3412%" y="405" width="0.1580%" height="15" fill="rgb(210,14,40)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.3412%" y="389" width="0.1580%" height="15" fill="rgb(250,20,52)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="98.3412%" y="373" width="0.1580%" height="15" fill="rgb(241,46,11)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="98.3412%" y="357" width="0.1580%" height="15" fill="rgb(219,105,5)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="98.3412%" y="341" width="0.1580%" height="15" fill="rgb(252,77,35)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="98.3412%" y="325" width="0.1580%" height="15" fill="rgb(243,119,2)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="98.3412%" y="309" width="0.1580%" height="15" fill="rgb(206,82,28)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="98.3412%" y="293" width="0.1580%" height="15" fill="rgb(227,120,12)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="98.3412%" y="277" width="0.1580%" height="15" fill="rgb(229,134,41)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="98.3412%" y="261" width="0.1580%" height="15" fill="rgb(239,96,32)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="98.3412%" y="245" width="0.1580%" height="15" fill="rgb(225,46,27)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.3412%" y="229" width="0.1580%" height="15" fill="rgb(215,168,2)" fg:x="1245" fg:w="2"/><text x="98.5912%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4992%" y="357" width="0.0790%" height="15" fill="rgb(207,170,52)" fg:x="1247" fg:w="1"/><text x="98.7492%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.5782%" y="357" width="0.0790%" height="15" fill="rgb(237,198,36)" fg:x="1248" fg:w="1"/><text x="98.8282%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="98.4992%" y="437" width="0.2370%" height="15" fill="rgb(213,27,14)" fg:x="1247" fg:w="3"/><text x="98.7492%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="98.4992%" y="421" width="0.2370%" height="15" fill="rgb(218,77,5)" fg:x="1247" fg:w="3"/><text x="98.7492%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="98.4992%" y="405" width="0.2370%" height="15" fill="rgb(230,219,39)" fg:x="1247" fg:w="3"/><text x="98.7492%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4992%" y="389" width="0.2370%" height="15" fill="rgb(245,177,7)" fg:x="1247" fg:w="3"/><text x="98.7492%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.4992%" y="373" width="0.2370%" height="15" fill="rgb(246,44,46)" fg:x="1247" fg:w="3"/><text x="98.7492%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6572%" y="357" width="0.0790%" height="15" fill="rgb(207,173,15)" fg:x="1249" fg:w="1"/><text x="98.9072%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6572%" y="341" width="0.0790%" height="15" fill="rgb(245,170,50)" fg:x="1249" fg:w="1"/><text x="98.9072%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6572%" y="325" width="0.0790%" height="15" fill="rgb(233,156,21)" fg:x="1249" fg:w="1"/><text x="98.9072%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6572%" y="309" width="0.0790%" height="15" fill="rgb(253,146,27)" fg:x="1249" fg:w="1"/><text x="98.9072%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.6572%" y="293" width="0.0790%" height="15" fill="rgb(247,66,29)" fg:x="1249" fg:w="1"/><text x="98.9072%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8942%" y="357" width="0.0790%" height="15" fill="rgb(218,207,26)" fg:x="1252" fg:w="1"/><text x="99.1442%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.8942%" y="341" width="0.0790%" height="15" fill="rgb(234,93,26)" fg:x="1252" fg:w="1"/><text x="99.1442%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9731%" y="357" width="0.0790%" height="15" fill="rgb(214,75,48)" fg:x="1253" fg:w="1"/><text x="99.2231%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.9731%" y="341" width="0.0790%" height="15" fill="rgb(229,119,22)" fg:x="1253" fg:w="1"/><text x="99.2231%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2101%" y="309" width="0.0790%" height="15" fill="rgb(226,153,19)" fg:x="1256" fg:w="1"/><text x="99.4601%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2101%" y="293" width="0.0790%" height="15" fill="rgb(220,204,36)" fg:x="1256" fg:w="1"/><text x="99.4601%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2101%" y="277" width="0.0790%" height="15" fill="rgb(253,181,43)" fg:x="1256" fg:w="1"/><text x="99.4601%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2101%" y="261" width="0.0790%" height="15" fill="rgb(211,41,51)" fg:x="1256" fg:w="1"/><text x="99.4601%" y="271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.2101%" y="245" width="0.0790%" height="15" fill="rgb(207,215,0)" fg:x="1256" fg:w="1"/><text x="99.4601%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.0521%" y="341" width="0.3160%" height="15" fill="rgb(212,153,10)" fg:x="1254" fg:w="4"/><text x="99.3021%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2101%" y="325" width="0.1580%" height="15" fill="rgb(251,171,36)" fg:x="1256" fg:w="2"/><text x="99.4601%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.2891%" y="309" width="0.0790%" height="15" fill="rgb(225,219,41)" fg:x="1257" fg:w="1"/><text x="99.5391%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3681%" y="341" width="0.0790%" height="15" fill="rgb(208,200,1)" fg:x="1258" fg:w="1"/><text x="99.6181%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.71%)</title><rect x="98.8152%" y="389" width="0.7109%" height="15" fill="rgb(206,75,47)" fg:x="1251" fg:w="9"/><text x="99.0652%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.71%)</title><rect x="98.8152%" y="373" width="0.7109%" height="15" fill="rgb(248,3,16)" fg:x="1251" fg:w="9"/><text x="99.0652%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.47%)</title><rect x="99.0521%" y="357" width="0.4739%" height="15" fill="rgb(242,157,36)" fg:x="1254" fg:w="6"/><text x="99.3021%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4471%" y="341" width="0.0790%" height="15" fill="rgb(215,175,11)" fg:x="1259" fg:w="1"/><text x="99.6971%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4471%" y="325" width="0.0790%" height="15" fill="rgb(252,222,22)" fg:x="1259" fg:w="1"/><text x="99.6971%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4471%" y="309" width="0.0790%" height="15" fill="rgb(250,121,35)" fg:x="1259" fg:w="1"/><text x="99.6971%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4471%" y="293" width="0.0790%" height="15" fill="rgb(233,120,49)" fg:x="1259" fg:w="1"/><text x="99.6971%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4471%" y="277" width="0.0790%" height="15" fill="rgb(205,201,14)" fg:x="1259" fg:w="1"/><text x="99.6971%" y="287.50"></text></g><g><title>kernel::model::entity::Entity::from_value (12 samples, 0.95%)</title><rect x="98.7362%" y="437" width="0.9479%" height="15" fill="rgb(219,58,45)" fg:x="1250" fg:w="12"/><text x="98.9862%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.95%)</title><rect x="98.7362%" y="421" width="0.9479%" height="15" fill="rgb(251,65,12)" fg:x="1250" fg:w="12"/><text x="98.9862%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.95%)</title><rect x="98.7362%" y="405" width="0.9479%" height="15" fill="rgb(224,47,31)" fg:x="1250" fg:w="12"/><text x="98.9862%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5261%" y="389" width="0.1580%" height="15" fill="rgb(233,74,26)" fg:x="1260" fg:w="2"/><text x="99.7761%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5261%" y="373" width="0.1580%" height="15" fill="rgb(231,211,31)" fg:x="1260" fg:w="2"/><text x="99.7761%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.6051%" y="357" width="0.0790%" height="15" fill="rgb(239,167,5)" fg:x="1261" fg:w="1"/><text x="99.8551%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.6840%" y="277" width="0.1580%" height="15" fill="rgb(241,85,0)" fg:x="1262" fg:w="2"/><text x="99.9340%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6840%" y="261" width="0.1580%" height="15" fill="rgb(229,130,21)" fg:x="1262" fg:w="2"/><text x="99.9340%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.6840%" y="245" width="0.1580%" height="15" fill="rgb(254,84,49)" fg:x="1262" fg:w="2"/><text x="99.9340%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.6840%" y="229" width="0.1580%" height="15" fill="rgb(235,85,21)" fg:x="1262" fg:w="2"/><text x="99.9340%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="99.6840%" y="213" width="0.1580%" height="15" fill="rgb(246,128,52)" fg:x="1262" fg:w="2"/><text x="99.9340%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.6840%" y="309" width="0.2370%" height="15" fill="rgb(243,114,49)" fg:x="1262" fg:w="3"/><text x="99.9340%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.6840%" y="293" width="0.2370%" height="15" fill="rgb(240,224,22)" fg:x="1262" fg:w="3"/><text x="99.9340%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8420%" y="277" width="0.0790%" height="15" fill="rgb(247,201,52)" fg:x="1264" fg:w="1"/><text x="100.0920%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8420%" y="261" width="0.0790%" height="15" fill="rgb(231,70,45)" fg:x="1264" fg:w="1"/><text x="100.0920%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8420%" y="245" width="0.0790%" height="15" fill="rgb(217,215,20)" fg:x="1264" fg:w="1"/><text x="100.0920%" y="255.50"></text></g><g><title>all (1,266 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(226,170,30)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="879.50"></text></g><g><title>simple-ce10f71d (1,266 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(220,190,43)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="863.50">simple-ce10f71d</text></g><g><title>_start (1,266 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(218,20,18)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="847.50">_start</text></g><g><title>__libc_start_main (1,266 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(245,37,26)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="831.50">__libc_start_main</text></g><g><title>main (1,266 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(241,127,29)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (1,266 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(241,33,26)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,266 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(220,106,21)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,266 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(225,125,35)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,266 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(248,80,22)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,266 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(231,117,39)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="735.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,266 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(239,183,16)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,266 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(221,61,19)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,266 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(239,196,44)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,266 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(206,113,19)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="671.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,266 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(245,114,12)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="655.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,266 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(247,89,39)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,266 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(213,85,14)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="623.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,266 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(249,206,33)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="607.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,266 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(235,167,47)" fg:x="0" fg:w="1266"/><text x="0.2500%" y="591.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (484 samples, 38.23%)</title><rect x="61.7694%" y="565" width="38.2306%" height="15" fill="rgb(217,177,16)" fg:x="782" fg:w="484"/><text x="62.0194%" y="575.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Ro..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (484 samples, 38.23%)</title><rect x="61.7694%" y="549" width="38.2306%" height="15" fill="rgb(250,228,29)" fg:x="782" fg:w="484"/><text x="62.0194%" y="559.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (484 samples, 38.23%)</title><rect x="61.7694%" y="533" width="38.2306%" height="15" fill="rgb(216,195,42)" fg:x="782" fg:w="484"/><text x="62.0194%" y="543.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (87 samples, 6.87%)</title><rect x="93.1280%" y="517" width="6.8720%" height="15" fill="rgb(232,192,32)" fg:x="1179" fg:w="87"/><text x="93.3780%" y="527.50">engine::s..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (87 samples, 6.87%)</title><rect x="93.1280%" y="501" width="6.8720%" height="15" fill="rgb(211,8,47)" fg:x="1179" fg:w="87"/><text x="93.3780%" y="511.50">engine::s..</text></g><g><title>kernel::model::EntityPtrResolver::world (23 samples, 1.82%)</title><rect x="98.1833%" y="485" width="1.8167%" height="15" fill="rgb(251,201,9)" fg:x="1243" fg:w="23"/><text x="98.4333%" y="495.50">k..</text></g><g><title>engine::session::Session::load_entity (23 samples, 1.82%)</title><rect x="98.1833%" y="469" width="1.8167%" height="15" fill="rgb(206,185,47)" fg:x="1243" fg:w="23"/><text x="98.4333%" y="479.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (23 samples, 1.82%)</title><rect x="98.1833%" y="453" width="1.8167%" height="15" fill="rgb(245,54,32)" fg:x="1243" fg:w="23"/><text x="98.4333%" y="463.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="99.6840%" y="437" width="0.3160%" height="15" fill="rgb(208,1,8)" fg:x="1262" fg:w="4"/><text x="99.9340%" y="447.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="99.6840%" y="421" width="0.3160%" height="15" fill="rgb(228,57,24)" fg:x="1262" fg:w="4"/><text x="99.9340%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.6840%" y="405" width="0.3160%" height="15" fill="rgb(251,24,8)" fg:x="1262" fg:w="4"/><text x="99.9340%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.6840%" y="389" width="0.3160%" height="15" fill="rgb(236,196,50)" fg:x="1262" fg:w="4"/><text x="99.9340%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.6840%" y="373" width="0.3160%" height="15" fill="rgb(246,222,29)" fg:x="1262" fg:w="4"/><text x="99.9340%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.6840%" y="357" width="0.3160%" height="15" fill="rgb(211,34,40)" fg:x="1262" fg:w="4"/><text x="99.9340%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.6840%" y="341" width="0.3160%" height="15" fill="rgb(210,66,51)" fg:x="1262" fg:w="4"/><text x="99.9340%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.6840%" y="325" width="0.3160%" height="15" fill="rgb(250,56,43)" fg:x="1262" fg:w="4"/><text x="99.9340%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.9210%" y="309" width="0.0790%" height="15" fill="rgb(240,111,50)" fg:x="1265" fg:w="1"/><text x="100.1710%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.9210%" y="293" width="0.0790%" height="15" fill="rgb(209,117,13)" fg:x="1265" fg:w="1"/><text x="100.1710%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9210%" y="277" width="0.0790%" height="15" fill="rgb(232,164,45)" fg:x="1265" fg:w="1"/><text x="100.1710%" y="287.50"></text></g></svg></svg>