<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1251"><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.2398%" y="501" width="0.1599%" height="15" fill="rgb(226,29,2)" fg:x="3" fg:w="2"/><text x="0.4898%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.3997%" y="485" width="0.2398%" height="15" fill="rgb(237,104,14)" fg:x="5" fg:w="3"/><text x="0.6497%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.72%)</title><rect x="0.0000%" y="533" width="0.7194%" height="15" fill="rgb(245,207,31)" fg:x="0" fg:w="9"/><text x="0.2500%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (9 samples, 0.72%)</title><rect x="0.0000%" y="517" width="0.7194%" height="15" fill="rgb(229,211,45)" fg:x="0" fg:w="9"/><text x="0.2500%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (4 samples, 0.32%)</title><rect x="0.3997%" y="501" width="0.3197%" height="15" fill="rgb(229,113,15)" fg:x="5" fg:w="4"/><text x="0.6497%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::plugins::ArgumentType&gt; (1 samples, 0.08%)</title><rect x="0.6395%" y="485" width="0.0799%" height="15" fill="rgb(237,147,15)" fg:x="8" fg:w="1"/><text x="0.8895%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::plugins::ArgumentType&gt; (1 samples, 0.08%)</title><rect x="0.6395%" y="469" width="0.0799%" height="15" fill="rgb(244,120,12)" fg:x="8" fg:w="1"/><text x="0.8895%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::cell::RefCell&lt;kernel::plugins::SessionPlugins&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="0.7194%" y="533" width="0.0799%" height="15" fill="rgb(205,120,12)" fg:x="9" fg:w="1"/><text x="0.9694%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="0.0000%" y="549" width="0.8793%" height="15" fill="rgb(231,26,45)" fg:x="0" fg:w="11"/><text x="0.2500%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.7994%" y="533" width="0.0799%" height="15" fill="rgb(246,98,1)" fg:x="10" fg:w="1"/><text x="1.0494%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7994%" y="517" width="0.0799%" height="15" fill="rgb(207,68,45)" fg:x="10" fg:w="1"/><text x="1.0494%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.96%)</title><rect x="0.0000%" y="565" width="0.9592%" height="15" fill="rgb(231,27,38)" fg:x="0" fg:w="12"/><text x="0.2500%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8793%" y="549" width="0.0799%" height="15" fill="rgb(214,223,3)" fg:x="11" fg:w="1"/><text x="1.1293%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.1990%" y="453" width="0.1599%" height="15" fill="rgb(228,195,46)" fg:x="15" fg:w="2"/><text x="1.4490%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.3589%" y="453" width="0.0799%" height="15" fill="rgb(231,100,42)" fg:x="17" fg:w="1"/><text x="1.6089%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5987%" y="437" width="0.1599%" height="15" fill="rgb(236,53,4)" fg:x="20" fg:w="2"/><text x="1.8487%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7586%" y="437" width="0.0799%" height="15" fill="rgb(230,152,12)" fg:x="22" fg:w="1"/><text x="2.0086%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7586%" y="421" width="0.0799%" height="15" fill="rgb(226,101,19)" fg:x="22" fg:w="1"/><text x="2.0086%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8385%" y="405" width="0.0799%" height="15" fill="rgb(250,149,32)" fg:x="23" fg:w="1"/><text x="2.0885%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9185%" y="405" width="0.0799%" height="15" fill="rgb(232,178,12)" fg:x="24" fg:w="1"/><text x="2.1685%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9185%" y="389" width="0.0799%" height="15" fill="rgb(246,151,17)" fg:x="24" fg:w="1"/><text x="2.1685%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="1.8385%" y="437" width="0.2398%" height="15" fill="rgb(252,17,51)" fg:x="23" fg:w="3"/><text x="2.0885%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="1.8385%" y="421" width="0.2398%" height="15" fill="rgb(250,207,23)" fg:x="23" fg:w="3"/><text x="2.0885%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.9984%" y="405" width="0.0799%" height="15" fill="rgb(205,27,5)" fg:x="25" fg:w="1"/><text x="2.2484%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.9984%" y="389" width="0.0799%" height="15" fill="rgb(224,32,19)" fg:x="25" fg:w="1"/><text x="2.2484%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9984%" y="373" width="0.0799%" height="15" fill="rgb(247,214,40)" fg:x="25" fg:w="1"/><text x="2.2484%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.1583%" y="421" width="0.1599%" height="15" fill="rgb(239,199,17)" fg:x="27" fg:w="2"/><text x="2.4083%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.9592%" y="501" width="1.5188%" height="15" fill="rgb(251,159,9)" fg:x="12" fg:w="19"/><text x="1.2092%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (18 samples, 1.44%)</title><rect x="1.0392%" y="485" width="1.4388%" height="15" fill="rgb(225,78,32)" fg:x="13" fg:w="18"/><text x="1.2892%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.44%)</title><rect x="1.0392%" y="469" width="1.4388%" height="15" fill="rgb(206,97,47)" fg:x="13" fg:w="18"/><text x="1.2892%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="1.4388%" y="453" width="1.0392%" height="15" fill="rgb(227,107,4)" fg:x="18" fg:w="13"/><text x="1.6888%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="2.0783%" y="437" width="0.3997%" height="15" fill="rgb(241,146,50)" fg:x="26" fg:w="5"/><text x="2.3283%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.3181%" y="421" width="0.1599%" height="15" fill="rgb(232,92,30)" fg:x="29" fg:w="2"/><text x="2.5681%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.4780%" y="501" width="0.1599%" height="15" fill="rgb(222,0,40)" fg:x="31" fg:w="2"/><text x="2.7280%" y="511.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="2.6379%" y="485" width="0.3997%" height="15" fill="rgb(219,54,33)" fg:x="33" fg:w="5"/><text x="2.8879%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.1175%" y="469" width="0.2398%" height="15" fill="rgb(226,209,28)" fg:x="39" fg:w="3"/><text x="3.3675%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.3573%" y="469" width="0.1599%" height="15" fill="rgb(254,205,35)" fg:x="42" fg:w="2"/><text x="3.6073%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.4373%" y="453" width="0.0799%" height="15" fill="rgb(230,159,3)" fg:x="43" fg:w="1"/><text x="3.6873%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.5172%" y="453" width="0.0799%" height="15" fill="rgb(232,190,24)" fg:x="44" fg:w="1"/><text x="3.7672%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.7570%" y="437" width="0.2398%" height="15" fill="rgb(217,227,44)" fg:x="47" fg:w="3"/><text x="4.0070%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.9968%" y="437" width="0.0799%" height="15" fill="rgb(236,211,1)" fg:x="50" fg:w="1"/><text x="4.2468%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9968%" y="421" width="0.0799%" height="15" fill="rgb(250,127,46)" fg:x="50" fg:w="1"/><text x="4.2468%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 3.28%)</title><rect x="0.9592%" y="517" width="3.2774%" height="15" fill="rgb(229,213,6)" fg:x="12" fg:w="41"/><text x="1.2092%" y="527.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.60%)</title><rect x="2.6379%" y="501" width="1.5987%" height="15" fill="rgb(237,15,36)" fg:x="33" fg:w="20"/><text x="2.8879%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="3.0376%" y="485" width="1.1990%" height="15" fill="rgb(213,131,41)" fg:x="38" fg:w="15"/><text x="3.2876%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="3.5172%" y="469" width="0.7194%" height="15" fill="rgb(225,82,44)" fg:x="44" fg:w="9"/><text x="3.7672%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="3.5971%" y="453" width="0.6395%" height="15" fill="rgb(249,42,11)" fg:x="45" fg:w="8"/><text x="3.8471%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="4.0767%" y="437" width="0.1599%" height="15" fill="rgb(253,11,29)" fg:x="51" fg:w="2"/><text x="4.3267%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.1567%" y="421" width="0.0799%" height="15" fill="rgb(206,8,54)" fg:x="52" fg:w="1"/><text x="4.4067%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (42 samples, 3.36%)</title><rect x="0.9592%" y="565" width="3.3573%" height="15" fill="rgb(222,186,2)" fg:x="12" fg:w="42"/><text x="1.2092%" y="575.50">cor..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 3.36%)</title><rect x="0.9592%" y="549" width="3.3573%" height="15" fill="rgb(221,206,53)" fg:x="12" fg:w="42"/><text x="1.2092%" y="559.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (42 samples, 3.36%)</title><rect x="0.9592%" y="533" width="3.3573%" height="15" fill="rgb(230,150,21)" fg:x="12" fg:w="42"/><text x="1.2092%" y="543.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.2366%" y="517" width="0.0799%" height="15" fill="rgb(253,202,10)" fg:x="53" fg:w="1"/><text x="4.4866%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 4.48%)</title><rect x="0.0000%" y="581" width="4.4764%" height="15" fill="rgb(238,109,40)" fg:x="0" fg:w="56"/><text x="0.2500%" y="591.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (2 samples, 0.16%)</title><rect x="4.3165%" y="565" width="0.1599%" height="15" fill="rgb(247,120,22)" fg:x="54" fg:w="2"/><text x="4.5665%" y="575.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="4.4764%" y="533" width="0.0799%" height="15" fill="rgb(207,43,30)" fg:x="56" fg:w="1"/><text x="4.7264%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.4764%" y="517" width="0.0799%" height="15" fill="rgb(213,211,24)" fg:x="56" fg:w="1"/><text x="4.7264%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.6363%" y="517" width="0.0799%" height="15" fill="rgb(239,73,39)" fg:x="58" fg:w="1"/><text x="4.8863%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.6363%" y="501" width="0.0799%" height="15" fill="rgb(245,182,19)" fg:x="58" fg:w="1"/><text x="4.8863%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.6363%" y="485" width="0.0799%" height="15" fill="rgb(247,143,26)" fg:x="58" fg:w="1"/><text x="4.8863%" y="495.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="4.9560%" y="453" width="0.1599%" height="15" fill="rgb(228,191,23)" fg:x="62" fg:w="2"/><text x="5.2060%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.0360%" y="437" width="0.0799%" height="15" fill="rgb(253,165,31)" fg:x="63" fg:w="1"/><text x="5.2860%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.0360%" y="421" width="0.0799%" height="15" fill="rgb(234,138,20)" fg:x="63" fg:w="1"/><text x="5.2860%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0360%" y="405" width="0.0799%" height="15" fill="rgb(218,191,29)" fg:x="63" fg:w="1"/><text x="5.2860%" y="415.50"></text></g><g><title>kernel::plugins::ActionSchema::new (2 samples, 0.16%)</title><rect x="5.1159%" y="453" width="0.1599%" height="15" fill="rgb(221,157,19)" fg:x="64" fg:w="2"/><text x="5.3659%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="5.1159%" y="437" width="0.1599%" height="15" fill="rgb(237,26,42)" fg:x="64" fg:w="2"/><text x="5.3659%" y="447.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (7 samples, 0.56%)</title><rect x="4.8761%" y="485" width="0.5596%" height="15" fill="rgb(220,163,24)" fg:x="61" fg:w="7"/><text x="5.1261%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (7 samples, 0.56%)</title><rect x="4.8761%" y="469" width="0.5596%" height="15" fill="rgb(242,115,20)" fg:x="61" fg:w="7"/><text x="5.1261%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="5.2758%" y="453" width="0.1599%" height="15" fill="rgb(210,206,9)" fg:x="66" fg:w="2"/><text x="5.5258%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.3557%" y="437" width="0.0799%" height="15" fill="rgb(208,71,17)" fg:x="67" fg:w="1"/><text x="5.6057%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.3557%" y="421" width="0.0799%" height="15" fill="rgb(233,7,5)" fg:x="67" fg:w="1"/><text x="5.6057%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.3557%" y="405" width="0.0799%" height="15" fill="rgb(207,92,33)" fg:x="67" fg:w="1"/><text x="5.6057%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="5.4357%" y="453" width="0.0799%" height="15" fill="rgb(218,87,9)" fg:x="68" fg:w="1"/><text x="5.6857%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="5.4357%" y="437" width="0.0799%" height="15" fill="rgb(219,47,37)" fg:x="68" fg:w="1"/><text x="5.6857%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.4357%" y="421" width="0.0799%" height="15" fill="rgb(221,152,34)" fg:x="68" fg:w="1"/><text x="5.6857%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.4357%" y="405" width="0.0799%" height="15" fill="rgb(235,176,21)" fg:x="68" fg:w="1"/><text x="5.6857%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.4357%" y="389" width="0.0799%" height="15" fill="rgb(232,212,21)" fg:x="68" fg:w="1"/><text x="5.6857%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::TakeOutAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="5.5156%" y="453" width="0.0799%" height="15" fill="rgb(245,82,39)" fg:x="69" fg:w="1"/><text x="5.7656%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="5.5156%" y="437" width="0.0799%" height="15" fill="rgb(241,52,51)" fg:x="69" fg:w="1"/><text x="5.7656%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.5955%" y="453" width="0.0799%" height="15" fill="rgb(219,91,24)" fg:x="70" fg:w="1"/><text x="5.8455%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="5.6755%" y="453" width="0.1599%" height="15" fill="rgb(241,142,12)" fg:x="71" fg:w="2"/><text x="5.9255%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.6755%" y="437" width="0.1599%" height="15" fill="rgb(230,27,9)" fg:x="71" fg:w="2"/><text x="5.9255%" y="447.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.6755%" y="421" width="0.1599%" height="15" fill="rgb(249,181,32)" fg:x="71" fg:w="2"/><text x="5.9255%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="5.8353%" y="453" width="0.0799%" height="15" fill="rgb(230,107,3)" fg:x="73" fg:w="1"/><text x="6.0853%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.8353%" y="437" width="0.0799%" height="15" fill="rgb(246,204,14)" fg:x="73" fg:w="1"/><text x="6.0853%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (7 samples, 0.56%)</title><rect x="5.4357%" y="485" width="0.5596%" height="15" fill="rgb(213,192,47)" fg:x="68" fg:w="7"/><text x="5.6857%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (7 samples, 0.56%)</title><rect x="5.4357%" y="469" width="0.5596%" height="15" fill="rgb(240,44,36)" fg:x="68" fg:w="7"/><text x="5.6857%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="5.9153%" y="453" width="0.0799%" height="15" fill="rgb(244,209,38)" fg:x="74" fg:w="1"/><text x="6.1653%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.9153%" y="437" width="0.0799%" height="15" fill="rgb(219,34,37)" fg:x="74" fg:w="1"/><text x="6.1653%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.9153%" y="421" width="0.0799%" height="15" fill="rgb(210,28,6)" fg:x="74" fg:w="1"/><text x="6.1653%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.9153%" y="405" width="0.0799%" height="15" fill="rgb(244,110,52)" fg:x="74" fg:w="1"/><text x="6.1653%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.9153%" y="389" width="0.0799%" height="15" fill="rgb(254,124,47)" fg:x="74" fg:w="1"/><text x="6.1653%" y="399.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="5.9952%" y="485" width="0.0799%" height="15" fill="rgb(254,110,13)" fg:x="75" fg:w="1"/><text x="6.2452%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="5.9952%" y="469" width="0.0799%" height="15" fill="rgb(252,57,21)" fg:x="75" fg:w="1"/><text x="6.2452%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.9952%" y="453" width="0.0799%" height="15" fill="rgb(242,60,45)" fg:x="75" fg:w="1"/><text x="6.2452%" y="463.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="6.0751%" y="485" width="0.0799%" height="15" fill="rgb(234,49,30)" fg:x="76" fg:w="1"/><text x="6.3251%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="6.0751%" y="469" width="0.0799%" height="15" fill="rgb(218,98,6)" fg:x="76" fg:w="1"/><text x="6.3251%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.0751%" y="453" width="0.0799%" height="15" fill="rgb(220,174,29)" fg:x="76" fg:w="1"/><text x="6.3251%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.0751%" y="437" width="0.0799%" height="15" fill="rgb(236,163,23)" fg:x="76" fg:w="1"/><text x="6.3251%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.2350%" y="421" width="0.0799%" height="15" fill="rgb(242,114,45)" fg:x="78" fg:w="1"/><text x="6.4850%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="6.2350%" y="453" width="0.1599%" height="15" fill="rgb(232,10,53)" fg:x="78" fg:w="2"/><text x="6.4850%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="6.2350%" y="437" width="0.1599%" height="15" fill="rgb(245,108,29)" fg:x="78" fg:w="2"/><text x="6.4850%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.3149%" y="421" width="0.0799%" height="15" fill="rgb(240,89,53)" fg:x="79" fg:w="1"/><text x="6.5649%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.3149%" y="405" width="0.0799%" height="15" fill="rgb(226,60,45)" fg:x="79" fg:w="1"/><text x="6.5649%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.3149%" y="389" width="0.0799%" height="15" fill="rgb(230,41,44)" fg:x="79" fg:w="1"/><text x="6.5649%" y="399.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="6.3949%" y="453" width="0.0799%" height="15" fill="rgb(230,26,20)" fg:x="80" fg:w="1"/><text x="6.6449%" y="463.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.40%)</title><rect x="6.1551%" y="485" width="0.3997%" height="15" fill="rgb(237,170,32)" fg:x="77" fg:w="5"/><text x="6.4051%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.32%)</title><rect x="6.2350%" y="469" width="0.3197%" height="15" fill="rgb(212,35,42)" fg:x="78" fg:w="4"/><text x="6.4850%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="6.4748%" y="453" width="0.0799%" height="15" fill="rgb(227,31,34)" fg:x="81" fg:w="1"/><text x="6.7248%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.4748%" y="437" width="0.0799%" height="15" fill="rgb(216,19,18)" fg:x="81" fg:w="1"/><text x="6.7248%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.4748%" y="421" width="0.0799%" height="15" fill="rgb(211,133,42)" fg:x="81" fg:w="1"/><text x="6.7248%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.4748%" y="405" width="0.0799%" height="15" fill="rgb(244,66,13)" fg:x="81" fg:w="1"/><text x="6.7248%" y="415.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="6.5548%" y="485" width="0.0799%" height="15" fill="rgb(218,185,50)" fg:x="82" fg:w="1"/><text x="6.8048%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="6.5548%" y="469" width="0.0799%" height="15" fill="rgb(219,149,13)" fg:x="82" fg:w="1"/><text x="6.8048%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="6.5548%" y="453" width="0.0799%" height="15" fill="rgb(221,125,0)" fg:x="82" fg:w="1"/><text x="6.8048%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.5548%" y="437" width="0.0799%" height="15" fill="rgb(247,126,27)" fg:x="82" fg:w="1"/><text x="6.8048%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::actions::AddRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="6.7146%" y="453" width="0.1599%" height="15" fill="rgb(250,138,30)" fg:x="84" fg:w="2"/><text x="6.9646%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="6.7146%" y="437" width="0.1599%" height="15" fill="rgb(230,151,9)" fg:x="84" fg:w="2"/><text x="6.9646%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.7946%" y="421" width="0.0799%" height="15" fill="rgb(233,80,38)" fg:x="85" fg:w="1"/><text x="7.0446%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.32%)</title><rect x="6.6347%" y="485" width="0.3197%" height="15" fill="rgb(232,68,43)" fg:x="83" fg:w="4"/><text x="6.8847%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.32%)</title><rect x="6.6347%" y="469" width="0.3197%" height="15" fill="rgb(254,5,50)" fg:x="83" fg:w="4"/><text x="6.8847%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.8745%" y="453" width="0.0799%" height="15" fill="rgb(225,45,5)" fg:x="86" fg:w="1"/><text x="7.1245%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.8745%" y="437" width="0.0799%" height="15" fill="rgb(239,22,3)" fg:x="86" fg:w="1"/><text x="7.1245%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.8745%" y="421" width="0.0799%" height="15" fill="rgb(243,129,0)" fg:x="86" fg:w="1"/><text x="7.1245%" y="431.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="6.9544%" y="485" width="0.1599%" height="15" fill="rgb(223,164,0)" fg:x="87" fg:w="2"/><text x="7.2044%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="7.0344%" y="469" width="0.0799%" height="15" fill="rgb(221,46,29)" fg:x="88" fg:w="1"/><text x="7.2844%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="7.0344%" y="453" width="0.0799%" height="15" fill="rgb(205,97,47)" fg:x="88" fg:w="1"/><text x="7.2844%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="7.0344%" y="437" width="0.0799%" height="15" fill="rgb(249,14,8)" fg:x="88" fg:w="1"/><text x="7.2844%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (30 samples, 2.40%)</title><rect x="4.7962%" y="501" width="2.3981%" height="15" fill="rgb(216,77,3)" fg:x="60" fg:w="30"/><text x="5.0462%" y="511.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="7.1143%" y="485" width="0.0799%" height="15" fill="rgb(206,168,54)" fg:x="89" fg:w="1"/><text x="7.3643%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="7.2742%" y="485" width="0.1599%" height="15" fill="rgb(236,3,41)" fg:x="91" fg:w="2"/><text x="7.5242%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="7.2742%" y="469" width="0.1599%" height="15" fill="rgb(231,132,24)" fg:x="91" fg:w="2"/><text x="7.5242%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="7.2742%" y="453" width="0.1599%" height="15" fill="rgb(227,221,40)" fg:x="91" fg:w="2"/><text x="7.5242%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="7.2742%" y="437" width="0.1599%" height="15" fill="rgb(233,151,11)" fg:x="91" fg:w="2"/><text x="7.5242%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="7.2742%" y="421" width="0.1599%" height="15" fill="rgb(247,81,35)" fg:x="91" fg:w="2"/><text x="7.5242%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (10 samples, 0.80%)</title><rect x="7.1942%" y="501" width="0.7994%" height="15" fill="rgb(243,128,48)" fg:x="90" fg:w="10"/><text x="7.4442%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (7 samples, 0.56%)</title><rect x="7.4341%" y="485" width="0.5596%" height="15" fill="rgb(253,16,10)" fg:x="93" fg:w="7"/><text x="7.6841%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (7 samples, 0.56%)</title><rect x="7.4341%" y="469" width="0.5596%" height="15" fill="rgb(228,67,27)" fg:x="93" fg:w="7"/><text x="7.6841%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (7 samples, 0.56%)</title><rect x="7.4341%" y="453" width="0.5596%" height="15" fill="rgb(231,105,25)" fg:x="93" fg:w="7"/><text x="7.6841%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (7 samples, 0.56%)</title><rect x="7.4341%" y="437" width="0.5596%" height="15" fill="rgb(213,166,47)" fg:x="93" fg:w="7"/><text x="7.6841%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (7 samples, 0.56%)</title><rect x="7.4341%" y="421" width="0.5596%" height="15" fill="rgb(209,27,10)" fg:x="93" fg:w="7"/><text x="7.6841%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (7 samples, 0.56%)</title><rect x="7.4341%" y="405" width="0.5596%" height="15" fill="rgb(241,44,30)" fg:x="93" fg:w="7"/><text x="7.6841%" y="415.50"></text></g><g><title>statx (7 samples, 0.56%)</title><rect x="7.4341%" y="389" width="0.5596%" height="15" fill="rgb(223,216,15)" fg:x="93" fg:w="7"/><text x="7.6841%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.9936%" y="453" width="0.0799%" height="15" fill="rgb(227,14,7)" fg:x="100" fg:w="1"/><text x="8.2436%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="8.1535%" y="437" width="0.3197%" height="15" fill="rgb(237,14,5)" fg:x="102" fg:w="4"/><text x="8.4035%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="8.2334%" y="421" width="0.2398%" height="15" fill="rgb(232,14,36)" fg:x="103" fg:w="3"/><text x="8.4834%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="8.2334%" y="405" width="0.2398%" height="15" fill="rgb(234,0,38)" fg:x="103" fg:w="3"/><text x="8.4834%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="8.2334%" y="389" width="0.2398%" height="15" fill="rgb(207,170,14)" fg:x="103" fg:w="3"/><text x="8.4834%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="8.2334%" y="373" width="0.2398%" height="15" fill="rgb(252,45,13)" fg:x="103" fg:w="3"/><text x="8.4834%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="8.2334%" y="357" width="0.2398%" height="15" fill="rgb(213,142,7)" fg:x="103" fg:w="3"/><text x="8.4834%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="8.2334%" y="341" width="0.2398%" height="15" fill="rgb(216,157,23)" fg:x="103" fg:w="3"/><text x="8.4834%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="8.2334%" y="325" width="0.2398%" height="15" fill="rgb(212,145,33)" fg:x="103" fg:w="3"/><text x="8.4834%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="8.2334%" y="309" width="0.2398%" height="15" fill="rgb(233,26,13)" fg:x="103" fg:w="3"/><text x="8.4834%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="8.2334%" y="293" width="0.2398%" height="15" fill="rgb(219,196,19)" fg:x="103" fg:w="3"/><text x="8.4834%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="8.2334%" y="277" width="0.2398%" height="15" fill="rgb(246,56,21)" fg:x="103" fg:w="3"/><text x="8.4834%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="8.2334%" y="261" width="0.2398%" height="15" fill="rgb(222,28,53)" fg:x="103" fg:w="3"/><text x="8.4834%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.4732%" y="437" width="0.0799%" height="15" fill="rgb(224,5,27)" fg:x="106" fg:w="1"/><text x="8.7232%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="8.5532%" y="437" width="0.0799%" height="15" fill="rgb(220,153,33)" fg:x="107" fg:w="1"/><text x="8.8032%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="8.5532%" y="421" width="0.0799%" height="15" fill="rgb(226,58,19)" fg:x="107" fg:w="1"/><text x="8.8032%" y="431.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (9 samples, 0.72%)</title><rect x="7.9936%" y="485" width="0.7194%" height="15" fill="rgb(239,112,23)" fg:x="100" fg:w="9"/><text x="8.2436%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.72%)</title><rect x="7.9936%" y="469" width="0.7194%" height="15" fill="rgb(251,213,20)" fg:x="100" fg:w="9"/><text x="8.2436%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.64%)</title><rect x="8.0735%" y="453" width="0.6395%" height="15" fill="rgb(215,181,21)" fg:x="101" fg:w="8"/><text x="8.3235%" y="463.50"></text></g><g><title>rune::runtime::vec::&lt;impl rune::runtime::to_value::ToValue for alloc::vec::Vec&lt;T&gt;&gt;::to_value (1 samples, 0.08%)</title><rect x="8.6331%" y="437" width="0.0799%" height="15" fill="rgb(240,8,35)" fg:x="108" fg:w="1"/><text x="8.8831%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.08%)</title><rect x="8.9528%" y="341" width="0.0799%" height="15" fill="rgb(232,203,3)" fg:x="112" fg:w="1"/><text x="9.2028%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.08%)</title><rect x="8.9528%" y="325" width="0.0799%" height="15" fill="rgb(214,202,43)" fg:x="112" fg:w="1"/><text x="9.2028%" y="335.50"></text></g><g><title>glob::is_dir (16 samples, 1.28%)</title><rect x="8.9528%" y="437" width="1.2790%" height="15" fill="rgb(254,35,11)" fg:x="112" fg:w="16"/><text x="9.2028%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (16 samples, 1.28%)</title><rect x="8.9528%" y="421" width="1.2790%" height="15" fill="rgb(239,173,13)" fg:x="112" fg:w="16"/><text x="9.2028%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (16 samples, 1.28%)</title><rect x="8.9528%" y="405" width="1.2790%" height="15" fill="rgb(220,141,0)" fg:x="112" fg:w="16"/><text x="9.2028%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (16 samples, 1.28%)</title><rect x="8.9528%" y="389" width="1.2790%" height="15" fill="rgb(210,98,12)" fg:x="112" fg:w="16"/><text x="9.2028%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (16 samples, 1.28%)</title><rect x="8.9528%" y="373" width="1.2790%" height="15" fill="rgb(254,153,22)" fg:x="112" fg:w="16"/><text x="9.2028%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (16 samples, 1.28%)</title><rect x="8.9528%" y="357" width="1.2790%" height="15" fill="rgb(247,223,17)" fg:x="112" fg:w="16"/><text x="9.2028%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (15 samples, 1.20%)</title><rect x="9.0328%" y="341" width="1.1990%" height="15" fill="rgb(246,56,7)" fg:x="113" fg:w="15"/><text x="9.2828%" y="351.50"></text></g><g><title>statx (15 samples, 1.20%)</title><rect x="9.0328%" y="325" width="1.1990%" height="15" fill="rgb(240,226,12)" fg:x="113" fg:w="15"/><text x="9.2828%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 2.00%)</title><rect x="8.7130%" y="469" width="1.9984%" height="15" fill="rgb(205,87,46)" fg:x="109" fg:w="25"/><text x="8.9630%" y="479.50">&lt;..</text></g><g><title>glob::fill_todo (25 samples, 2.00%)</title><rect x="8.7130%" y="453" width="1.9984%" height="15" fill="rgb(245,214,51)" fg:x="109" fg:w="25"/><text x="8.9630%" y="463.50">g..</text></g><g><title>std::sys::unix::fs::stat (6 samples, 0.48%)</title><rect x="10.2318%" y="437" width="0.4796%" height="15" fill="rgb(223,172,33)" fg:x="128" fg:w="6"/><text x="10.4818%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (6 samples, 0.48%)</title><rect x="10.2318%" y="421" width="0.4796%" height="15" fill="rgb(227,203,34)" fg:x="128" fg:w="6"/><text x="10.4818%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (6 samples, 0.48%)</title><rect x="10.2318%" y="405" width="0.4796%" height="15" fill="rgb(248,143,44)" fg:x="128" fg:w="6"/><text x="10.4818%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (6 samples, 0.48%)</title><rect x="10.2318%" y="389" width="0.4796%" height="15" fill="rgb(226,162,5)" fg:x="128" fg:w="6"/><text x="10.4818%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (6 samples, 0.48%)</title><rect x="10.2318%" y="373" width="0.4796%" height="15" fill="rgb(211,143,1)" fg:x="128" fg:w="6"/><text x="10.4818%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (6 samples, 0.48%)</title><rect x="10.2318%" y="357" width="0.4796%" height="15" fill="rgb(224,96,15)" fg:x="128" fg:w="6"/><text x="10.4818%" y="367.50"></text></g><g><title>statx (6 samples, 0.48%)</title><rect x="10.2318%" y="341" width="0.4796%" height="15" fill="rgb(222,4,38)" fg:x="128" fg:w="6"/><text x="10.4818%" y="351.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="10.7914%" y="437" width="0.1599%" height="15" fill="rgb(253,228,15)" fg:x="135" fg:w="2"/><text x="11.0414%" y="447.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="10.8713%" y="421" width="0.0799%" height="15" fill="rgb(242,194,12)" fg:x="136" fg:w="1"/><text x="11.1213%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="10.8713%" y="405" width="0.0799%" height="15" fill="rgb(214,177,31)" fg:x="136" fg:w="1"/><text x="11.1213%" y="415.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="10.8713%" y="389" width="0.0799%" height="15" fill="rgb(226,58,51)" fg:x="136" fg:w="1"/><text x="11.1213%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="10.8713%" y="373" width="0.0799%" height="15" fill="rgb(250,119,16)" fg:x="136" fg:w="1"/><text x="11.1213%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="10.8713%" y="357" width="0.0799%" height="15" fill="rgb(223,128,53)" fg:x="136" fg:w="1"/><text x="11.1213%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="10.8713%" y="341" width="0.0799%" height="15" fill="rgb(251,199,15)" fg:x="136" fg:w="1"/><text x="11.1213%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.8713%" y="325" width="0.0799%" height="15" fill="rgb(235,168,42)" fg:x="136" fg:w="1"/><text x="11.1213%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.8713%" y="309" width="0.0799%" height="15" fill="rgb(250,210,17)" fg:x="136" fg:w="1"/><text x="11.1213%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.8713%" y="293" width="0.0799%" height="15" fill="rgb(226,36,41)" fg:x="136" fg:w="1"/><text x="11.1213%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="10.8713%" y="277" width="0.0799%" height="15" fill="rgb(225,87,10)" fg:x="136" fg:w="1"/><text x="11.1213%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.8713%" y="261" width="0.0799%" height="15" fill="rgb(228,83,9)" fg:x="136" fg:w="1"/><text x="11.1213%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="10.8713%" y="245" width="0.0799%" height="15" fill="rgb(225,16,36)" fg:x="136" fg:w="1"/><text x="11.1213%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="10.8713%" y="229" width="0.0799%" height="15" fill="rgb(242,198,13)" fg:x="136" fg:w="1"/><text x="11.1213%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="10.8713%" y="213" width="0.0799%" height="15" fill="rgb(239,25,51)" fg:x="136" fg:w="1"/><text x="11.1213%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.8713%" y="197" width="0.0799%" height="15" fill="rgb(239,28,37)" fg:x="136" fg:w="1"/><text x="11.1213%" y="207.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (38 samples, 3.04%)</title><rect x="7.9936%" y="501" width="3.0376%" height="15" fill="rgb(234,70,17)" fg:x="100" fg:w="38"/><text x="8.2436%" y="511.50">&lt;pl..</text></g><g><title>plugins_rune::sources::load_directory_sources (29 samples, 2.32%)</title><rect x="8.7130%" y="485" width="2.3181%" height="15" fill="rgb(231,215,53)" fg:x="109" fg:w="29"/><text x="8.9630%" y="495.50">p..</text></g><g><title>glob::glob (4 samples, 0.32%)</title><rect x="10.7114%" y="469" width="0.3197%" height="15" fill="rgb(218,140,42)" fg:x="134" fg:w="4"/><text x="10.9614%" y="479.50"></text></g><g><title>glob::glob_with (4 samples, 0.32%)</title><rect x="10.7114%" y="453" width="0.3197%" height="15" fill="rgb(233,227,45)" fg:x="134" fg:w="4"/><text x="10.9614%" y="463.50"></text></g><g><title>std::ffi::os_str::&lt;impl core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt; for &amp;str&gt;::try_from (1 samples, 0.08%)</title><rect x="10.9512%" y="437" width="0.0799%" height="15" fill="rgb(225,189,21)" fg:x="137" fg:w="1"/><text x="11.2012%" y="447.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.08%)</title><rect x="10.9512%" y="421" width="0.0799%" height="15" fill="rgb(237,176,54)" fg:x="137" fg:w="1"/><text x="11.2012%" y="431.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.08%)</title><rect x="10.9512%" y="405" width="0.0799%" height="15" fill="rgb(215,131,46)" fg:x="137" fg:w="1"/><text x="11.2012%" y="415.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.08%)</title><rect x="10.9512%" y="389" width="0.0799%" height="15" fill="rgb(218,95,20)" fg:x="137" fg:w="1"/><text x="11.2012%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.0312%" y="501" width="0.1599%" height="15" fill="rgb(208,198,12)" fg:x="138" fg:w="2"/><text x="11.2812%" y="511.50"></text></g><g><title>__libc_free (7 samples, 0.56%)</title><rect x="11.3509%" y="485" width="0.5596%" height="15" fill="rgb(239,107,50)" fg:x="142" fg:w="7"/><text x="11.6009%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (12 samples, 0.96%)</title><rect x="11.1910%" y="501" width="0.9592%" height="15" fill="rgb(240,217,37)" fg:x="140" fg:w="12"/><text x="11.4410%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.24%)</title><rect x="11.9105%" y="485" width="0.2398%" height="15" fill="rgb(242,197,49)" fg:x="149" fg:w="3"/><text x="12.1605%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.9904%" y="469" width="0.1599%" height="15" fill="rgb(219,171,17)" fg:x="150" fg:w="2"/><text x="12.2404%" y="479.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="12.1503%" y="485" width="0.0799%" height="15" fill="rgb(209,81,40)" fg:x="152" fg:w="1"/><text x="12.4003%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (96 samples, 7.67%)</title><rect x="4.7162%" y="517" width="7.6739%" height="15" fill="rgb(237,156,30)" fg:x="59" fg:w="96"/><text x="4.9662%" y="527.50">kernel::plu..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.24%)</title><rect x="12.1503%" y="501" width="0.2398%" height="15" fill="rgb(212,127,16)" fg:x="152" fg:w="3"/><text x="12.4003%" y="511.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="12.2302%" y="485" width="0.1599%" height="15" fill="rgb(226,66,32)" fg:x="153" fg:w="2"/><text x="12.4802%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.3901%" y="485" width="0.0799%" height="15" fill="rgb(245,22,46)" fg:x="155" fg:w="1"/><text x="12.6401%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.3901%" y="469" width="0.0799%" height="15" fill="rgb(210,112,21)" fg:x="155" fg:w="1"/><text x="12.6401%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="12.4700%" y="485" width="0.0799%" height="15" fill="rgb(207,118,39)" fg:x="156" fg:w="1"/><text x="12.7200%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4700%" y="469" width="0.0799%" height="15" fill="rgb(205,206,35)" fg:x="156" fg:w="1"/><text x="12.7200%" y="479.50"></text></g><g><title>engine::session::Session::initialize (101 samples, 8.07%)</title><rect x="4.5564%" y="533" width="8.0735%" height="15" fill="rgb(222,120,2)" fg:x="57" fg:w="101"/><text x="4.8064%" y="543.50">engine::ses..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="12.3901%" y="517" width="0.2398%" height="15" fill="rgb(205,38,18)" fg:x="155" fg:w="3"/><text x="12.6401%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="12.3901%" y="501" width="0.2398%" height="15" fill="rgb(226,61,2)" fg:x="155" fg:w="3"/><text x="12.6401%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.5500%" y="485" width="0.0799%" height="15" fill="rgb(242,161,23)" fg:x="157" fg:w="1"/><text x="12.8000%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.5500%" y="469" width="0.0799%" height="15" fill="rgb(213,13,52)" fg:x="157" fg:w="1"/><text x="12.8000%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.5500%" y="453" width="0.0799%" height="15" fill="rgb(246,209,47)" fg:x="157" fg:w="1"/><text x="12.8000%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (105 samples, 8.39%)</title><rect x="4.4764%" y="581" width="8.3933%" height="15" fill="rgb(214,41,3)" fg:x="56" fg:w="105"/><text x="4.7264%" y="591.50">&lt;engine::dom..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (105 samples, 8.39%)</title><rect x="4.4764%" y="565" width="8.3933%" height="15" fill="rgb(236,119,38)" fg:x="56" fg:w="105"/><text x="4.7264%" y="575.50">engine::doma..</text></g><g><title>engine::session::Session::new (105 samples, 8.39%)</title><rect x="4.4764%" y="549" width="8.3933%" height="15" fill="rgb(218,50,11)" fg:x="56" fg:w="105"/><text x="4.7264%" y="559.50">engine::sess..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="12.6299%" y="533" width="0.2398%" height="15" fill="rgb(228,38,11)" fg:x="158" fg:w="3"/><text x="12.8799%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="12.6299%" y="517" width="0.2398%" height="15" fill="rgb(212,13,9)" fg:x="158" fg:w="3"/><text x="12.8799%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="12.7098%" y="501" width="0.1599%" height="15" fill="rgb(208,211,9)" fg:x="159" fg:w="2"/><text x="12.9598%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="12.7098%" y="485" width="0.1599%" height="15" fill="rgb(239,39,32)" fg:x="159" fg:w="2"/><text x="12.9598%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="12.7098%" y="469" width="0.1599%" height="15" fill="rgb(254,179,26)" fg:x="159" fg:w="2"/><text x="12.9598%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.8697%" y="565" width="0.0799%" height="15" fill="rgb(249,165,28)" fg:x="161" fg:w="1"/><text x="13.1197%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="12.8697%" y="549" width="0.0799%" height="15" fill="rgb(225,59,50)" fg:x="161" fg:w="1"/><text x="13.1197%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="12.9496%" y="549" width="0.0799%" height="15" fill="rgb(209,122,5)" fg:x="162" fg:w="1"/><text x="13.1996%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.1095%" y="533" width="0.0799%" height="15" fill="rgb(214,65,34)" fg:x="164" fg:w="1"/><text x="13.3595%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="13.0296%" y="549" width="0.2398%" height="15" fill="rgb(249,183,32)" fg:x="163" fg:w="3"/><text x="13.2796%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1894%" y="533" width="0.0799%" height="15" fill="rgb(218,122,24)" fg:x="165" fg:w="1"/><text x="13.4394%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.1894%" y="517" width="0.0799%" height="15" fill="rgb(224,109,18)" fg:x="165" fg:w="1"/><text x="13.4394%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="13.2694%" y="549" width="0.0799%" height="15" fill="rgb(210,68,50)" fg:x="166" fg:w="1"/><text x="13.5194%" y="559.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="13.2694%" y="533" width="0.0799%" height="15" fill="rgb(212,184,34)" fg:x="166" fg:w="1"/><text x="13.5194%" y="543.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="13.2694%" y="517" width="0.0799%" height="15" fill="rgb(238,105,48)" fg:x="166" fg:w="1"/><text x="13.5194%" y="527.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="13.2694%" y="501" width="0.0799%" height="15" fill="rgb(222,134,54)" fg:x="166" fg:w="1"/><text x="13.5194%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="13.2694%" y="485" width="0.0799%" height="15" fill="rgb(246,24,43)" fg:x="166" fg:w="1"/><text x="13.5194%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="13.2694%" y="469" width="0.0799%" height="15" fill="rgb(227,169,22)" fg:x="166" fg:w="1"/><text x="13.5194%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="13.2694%" y="453" width="0.0799%" height="15" fill="rgb(253,152,4)" fg:x="166" fg:w="1"/><text x="13.5194%" y="463.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="13.2694%" y="437" width="0.0799%" height="15" fill="rgb(219,158,36)" fg:x="166" fg:w="1"/><text x="13.5194%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="13.4293%" y="485" width="0.0799%" height="15" fill="rgb(251,128,40)" fg:x="168" fg:w="1"/><text x="13.6793%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4293%" y="469" width="0.0799%" height="15" fill="rgb(254,101,39)" fg:x="168" fg:w="1"/><text x="13.6793%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4293%" y="453" width="0.0799%" height="15" fill="rgb(221,168,40)" fg:x="168" fg:w="1"/><text x="13.6793%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.4293%" y="437" width="0.0799%" height="15" fill="rgb(221,14,27)" fg:x="168" fg:w="1"/><text x="13.6793%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.4293%" y="421" width="0.0799%" height="15" fill="rgb(207,36,43)" fg:x="168" fg:w="1"/><text x="13.6793%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.4293%" y="405" width="0.0799%" height="15" fill="rgb(240,172,53)" fg:x="168" fg:w="1"/><text x="13.6793%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.4293%" y="389" width="0.0799%" height="15" fill="rgb(241,138,43)" fg:x="168" fg:w="1"/><text x="13.6793%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.4293%" y="373" width="0.0799%" height="15" fill="rgb(227,78,19)" fg:x="168" fg:w="1"/><text x="13.6793%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="13.4293%" y="517" width="0.1599%" height="15" fill="rgb(215,127,44)" fg:x="168" fg:w="2"/><text x="13.6793%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="13.4293%" y="501" width="0.1599%" height="15" fill="rgb(227,13,10)" fg:x="168" fg:w="2"/><text x="13.6793%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5092%" y="485" width="0.0799%" height="15" fill="rgb(249,177,6)" fg:x="169" fg:w="1"/><text x="13.7592%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="13.5891%" y="469" width="0.1599%" height="15" fill="rgb(215,154,26)" fg:x="170" fg:w="2"/><text x="13.8391%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="13.5891%" y="453" width="0.1599%" height="15" fill="rgb(250,168,20)" fg:x="170" fg:w="2"/><text x="13.8391%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="13.5891%" y="437" width="0.1599%" height="15" fill="rgb(222,53,38)" fg:x="170" fg:w="2"/><text x="13.8391%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.5891%" y="421" width="0.1599%" height="15" fill="rgb(245,154,5)" fg:x="170" fg:w="2"/><text x="13.8391%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.5891%" y="405" width="0.1599%" height="15" fill="rgb(214,89,50)" fg:x="170" fg:w="2"/><text x="13.8391%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.5891%" y="389" width="0.1599%" height="15" fill="rgb(232,73,14)" fg:x="170" fg:w="2"/><text x="13.8391%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="13.5891%" y="373" width="0.1599%" height="15" fill="rgb(230,101,20)" fg:x="170" fg:w="2"/><text x="13.8391%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.5891%" y="357" width="0.1599%" height="15" fill="rgb(208,56,28)" fg:x="170" fg:w="2"/><text x="13.8391%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="13.7490%" y="437" width="0.3197%" height="15" fill="rgb(247,205,22)" fg:x="172" fg:w="4"/><text x="13.9990%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="13.8289%" y="421" width="0.2398%" height="15" fill="rgb(252,109,51)" fg:x="173" fg:w="3"/><text x="14.0789%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="13.8289%" y="405" width="0.2398%" height="15" fill="rgb(220,40,24)" fg:x="173" fg:w="3"/><text x="14.0789%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="13.8289%" y="389" width="0.2398%" height="15" fill="rgb(251,108,7)" fg:x="173" fg:w="3"/><text x="14.0789%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.9089%" y="373" width="0.1599%" height="15" fill="rgb(238,102,51)" fg:x="174" fg:w="2"/><text x="14.1589%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="13.9089%" y="357" width="0.1599%" height="15" fill="rgb(219,149,34)" fg:x="174" fg:w="2"/><text x="14.1589%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="13.9089%" y="341" width="0.1599%" height="15" fill="rgb(239,70,0)" fg:x="174" fg:w="2"/><text x="14.1589%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="13.7490%" y="453" width="0.3997%" height="15" fill="rgb(246,214,23)" fg:x="172" fg:w="5"/><text x="13.9990%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.0687%" y="437" width="0.0799%" height="15" fill="rgb(239,221,51)" fg:x="176" fg:w="1"/><text x="14.3187%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.0687%" y="421" width="0.0799%" height="15" fill="rgb(254,62,14)" fg:x="176" fg:w="1"/><text x="14.3187%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.0687%" y="405" width="0.0799%" height="15" fill="rgb(253,57,33)" fg:x="176" fg:w="1"/><text x="14.3187%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.2286%" y="437" width="0.0799%" height="15" fill="rgb(229,34,6)" fg:x="178" fg:w="1"/><text x="14.4786%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="14.3086%" y="437" width="0.3997%" height="15" fill="rgb(235,191,23)" fg:x="179" fg:w="5"/><text x="14.5586%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="14.3885%" y="421" width="0.3197%" height="15" fill="rgb(217,207,27)" fg:x="180" fg:w="4"/><text x="14.6385%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.6283%" y="405" width="0.0799%" height="15" fill="rgb(232,41,44)" fg:x="183" fg:w="1"/><text x="14.8783%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.6283%" y="389" width="0.0799%" height="15" fill="rgb(221,188,19)" fg:x="183" fg:w="1"/><text x="14.8783%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.6283%" y="373" width="0.0799%" height="15" fill="rgb(245,180,45)" fg:x="183" fg:w="1"/><text x="14.8783%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.6283%" y="357" width="0.0799%" height="15" fill="rgb(250,220,42)" fg:x="183" fg:w="1"/><text x="14.8783%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.6283%" y="341" width="0.0799%" height="15" fill="rgb(234,16,34)" fg:x="183" fg:w="1"/><text x="14.8783%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="14.7882%" y="421" width="0.1599%" height="15" fill="rgb(233,217,23)" fg:x="185" fg:w="2"/><text x="15.0382%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="14.7882%" y="405" width="0.1599%" height="15" fill="rgb(209,22,46)" fg:x="185" fg:w="2"/><text x="15.0382%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="14.7882%" y="389" width="0.1599%" height="15" fill="rgb(213,101,18)" fg:x="185" fg:w="2"/><text x="15.0382%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.8681%" y="373" width="0.0799%" height="15" fill="rgb(215,179,52)" fg:x="186" fg:w="1"/><text x="15.1181%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="14.9480%" y="421" width="0.3197%" height="15" fill="rgb(223,50,25)" fg:x="187" fg:w="4"/><text x="15.1980%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.1079%" y="405" width="0.1599%" height="15" fill="rgb(224,51,44)" fg:x="189" fg:w="2"/><text x="15.3579%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.1878%" y="389" width="0.0799%" height="15" fill="rgb(224,13,54)" fg:x="190" fg:w="1"/><text x="15.4378%" y="399.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="15.3477%" y="405" width="0.0799%" height="15" fill="rgb(219,58,47)" fg:x="192" fg:w="1"/><text x="15.5977%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="15.4277%" y="405" width="0.2398%" height="15" fill="rgb(246,124,34)" fg:x="193" fg:w="3"/><text x="15.6777%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.5076%" y="389" width="0.1599%" height="15" fill="rgb(245,109,25)" fg:x="194" fg:w="2"/><text x="15.7576%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.5875%" y="373" width="0.0799%" height="15" fill="rgb(235,48,23)" fg:x="195" fg:w="1"/><text x="15.8375%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.5875%" y="357" width="0.0799%" height="15" fill="rgb(229,203,36)" fg:x="195" fg:w="1"/><text x="15.8375%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.6675%" y="389" width="0.1599%" height="15" fill="rgb(234,180,9)" fg:x="196" fg:w="2"/><text x="15.9175%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.7474%" y="373" width="0.0799%" height="15" fill="rgb(228,98,45)" fg:x="197" fg:w="1"/><text x="15.9974%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.7474%" y="357" width="0.0799%" height="15" fill="rgb(240,24,36)" fg:x="197" fg:w="1"/><text x="15.9974%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8273%" y="389" width="0.0799%" height="15" fill="rgb(227,154,19)" fg:x="198" fg:w="1"/><text x="16.0773%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.8273%" y="373" width="0.0799%" height="15" fill="rgb(231,2,48)" fg:x="198" fg:w="1"/><text x="16.0773%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.8273%" y="357" width="0.0799%" height="15" fill="rgb(219,216,0)" fg:x="198" fg:w="1"/><text x="16.0773%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.8273%" y="341" width="0.0799%" height="15" fill="rgb(251,88,0)" fg:x="198" fg:w="1"/><text x="16.0773%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="15.6675%" y="405" width="0.3197%" height="15" fill="rgb(242,45,45)" fg:x="196" fg:w="4"/><text x="15.9175%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.9073%" y="389" width="0.0799%" height="15" fill="rgb(218,149,45)" fg:x="199" fg:w="1"/><text x="16.1573%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.9073%" y="373" width="0.0799%" height="15" fill="rgb(247,194,10)" fg:x="199" fg:w="1"/><text x="16.1573%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.9073%" y="357" width="0.0799%" height="15" fill="rgb(234,33,37)" fg:x="199" fg:w="1"/><text x="16.1573%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="15.2678%" y="421" width="0.7994%" height="15" fill="rgb(218,61,13)" fg:x="191" fg:w="10"/><text x="15.5178%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.9872%" y="405" width="0.0799%" height="15" fill="rgb(210,80,52)" fg:x="200" fg:w="1"/><text x="16.2372%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.9872%" y="389" width="0.0799%" height="15" fill="rgb(218,203,27)" fg:x="200" fg:w="1"/><text x="16.2372%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.9872%" y="373" width="0.0799%" height="15" fill="rgb(209,126,33)" fg:x="200" fg:w="1"/><text x="16.2372%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="14.7082%" y="437" width="1.4388%" height="15" fill="rgb(234,173,41)" fg:x="184" fg:w="18"/><text x="14.9582%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.0671%" y="421" width="0.0799%" height="15" fill="rgb(228,166,9)" fg:x="201" fg:w="1"/><text x="16.3171%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.72%)</title><rect x="13.7490%" y="469" width="2.7178%" height="15" fill="rgb(208,124,43)" fg:x="172" fg:w="34"/><text x="13.9990%" y="479.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.32%)</title><rect x="14.1487%" y="453" width="2.3181%" height="15" fill="rgb(212,154,38)" fg:x="177" fg:w="29"/><text x="14.3987%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="16.1471%" y="437" width="0.3197%" height="15" fill="rgb(246,179,35)" fg:x="202" fg:w="4"/><text x="16.3971%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.3070%" y="421" width="0.1599%" height="15" fill="rgb(251,3,50)" fg:x="204" fg:w="2"/><text x="16.5570%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.3070%" y="405" width="0.1599%" height="15" fill="rgb(219,96,8)" fg:x="204" fg:w="2"/><text x="16.5570%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="16.3070%" y="389" width="0.1599%" height="15" fill="rgb(251,216,33)" fg:x="204" fg:w="2"/><text x="16.5570%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="16.3070%" y="373" width="0.1599%" height="15" fill="rgb(243,145,29)" fg:x="204" fg:w="2"/><text x="16.5570%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.3869%" y="357" width="0.0799%" height="15" fill="rgb(210,75,20)" fg:x="205" fg:w="1"/><text x="16.6369%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.4668%" y="437" width="0.0799%" height="15" fill="rgb(235,56,8)" fg:x="206" fg:w="1"/><text x="16.7168%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="16.6267%" y="421" width="0.1599%" height="15" fill="rgb(226,175,49)" fg:x="208" fg:w="2"/><text x="16.8767%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.7866%" y="405" width="0.0799%" height="15" fill="rgb(242,204,23)" fg:x="210" fg:w="1"/><text x="17.0366%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.8665%" y="405" width="0.1599%" height="15" fill="rgb(225,104,24)" fg:x="211" fg:w="2"/><text x="17.1165%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.9464%" y="389" width="0.0799%" height="15" fill="rgb(253,34,1)" fg:x="212" fg:w="1"/><text x="17.1964%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.0264%" y="389" width="0.0799%" height="15" fill="rgb(233,199,23)" fg:x="213" fg:w="1"/><text x="17.2764%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="17.1063%" y="389" width="0.0799%" height="15" fill="rgb(247,7,51)" fg:x="214" fg:w="1"/><text x="17.3563%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="16.4668%" y="469" width="0.7994%" height="15" fill="rgb(214,146,12)" fg:x="206" fg:w="10"/><text x="16.7168%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="16.4668%" y="453" width="0.7994%" height="15" fill="rgb(234,181,43)" fg:x="206" fg:w="10"/><text x="16.7168%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="16.5468%" y="437" width="0.7194%" height="15" fill="rgb(239,148,6)" fg:x="207" fg:w="9"/><text x="16.7968%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="16.7866%" y="421" width="0.4796%" height="15" fill="rgb(206,151,17)" fg:x="210" fg:w="6"/><text x="17.0366%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="17.0264%" y="405" width="0.2398%" height="15" fill="rgb(213,215,10)" fg:x="213" fg:w="3"/><text x="17.2764%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.1863%" y="389" width="0.0799%" height="15" fill="rgb(215,220,44)" fg:x="215" fg:w="1"/><text x="17.4363%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.1863%" y="373" width="0.0799%" height="15" fill="rgb(245,205,37)" fg:x="215" fg:w="1"/><text x="17.4363%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.1863%" y="357" width="0.0799%" height="15" fill="rgb(245,130,43)" fg:x="215" fg:w="1"/><text x="17.4363%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.2662%" y="437" width="0.0799%" height="15" fill="rgb(231,227,38)" fg:x="216" fg:w="1"/><text x="17.5162%" y="447.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (4 samples, 0.32%)</title><rect x="17.3461%" y="437" width="0.3197%" height="15" fill="rgb(233,185,4)" fg:x="217" fg:w="4"/><text x="17.5961%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="17.3461%" y="421" width="0.3197%" height="15" fill="rgb(224,154,43)" fg:x="217" fg:w="4"/><text x="17.5961%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="17.4261%" y="405" width="0.2398%" height="15" fill="rgb(235,156,15)" fg:x="218" fg:w="3"/><text x="17.6761%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.24%)</title><rect x="17.4261%" y="389" width="0.2398%" height="15" fill="rgb(211,55,43)" fg:x="218" fg:w="3"/><text x="17.6761%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (6 samples, 0.48%)</title><rect x="17.2662%" y="453" width="0.4796%" height="15" fill="rgb(247,149,40)" fg:x="216" fg:w="6"/><text x="17.5162%" y="463.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="17.6659%" y="437" width="0.0799%" height="15" fill="rgb(232,171,16)" fg:x="221" fg:w="1"/><text x="17.9159%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="17.6659%" y="421" width="0.0799%" height="15" fill="rgb(215,117,49)" fg:x="221" fg:w="1"/><text x="17.9159%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="17.8257%" y="421" width="0.2398%" height="15" fill="rgb(246,194,11)" fg:x="223" fg:w="3"/><text x="18.0757%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="18.0655%" y="421" width="0.0799%" height="15" fill="rgb(242,101,44)" fg:x="226" fg:w="1"/><text x="18.3155%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1455%" y="421" width="0.0799%" height="15" fill="rgb(226,174,6)" fg:x="227" fg:w="1"/><text x="18.3955%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.1455%" y="405" width="0.0799%" height="15" fill="rgb(213,150,20)" fg:x="227" fg:w="1"/><text x="18.3955%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1455%" y="389" width="0.0799%" height="15" fill="rgb(222,124,42)" fg:x="227" fg:w="1"/><text x="18.3955%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="18.4652%" y="389" width="0.1599%" height="15" fill="rgb(250,19,47)" fg:x="231" fg:w="2"/><text x="18.7152%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="18.6251%" y="389" width="0.0799%" height="15" fill="rgb(241,217,19)" fg:x="233" fg:w="1"/><text x="18.8751%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.7850%" y="373" width="0.0799%" height="15" fill="rgb(207,210,34)" fg:x="235" fg:w="1"/><text x="19.0350%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9448%" y="293" width="0.0799%" height="15" fill="rgb(244,45,4)" fg:x="237" fg:w="1"/><text x="19.1948%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9448%" y="277" width="0.0799%" height="15" fill="rgb(252,134,50)" fg:x="237" fg:w="1"/><text x="19.1948%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="18.9448%" y="341" width="0.1599%" height="15" fill="rgb(238,74,2)" fg:x="237" fg:w="2"/><text x="19.1948%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="18.9448%" y="325" width="0.1599%" height="15" fill="rgb(226,58,46)" fg:x="237" fg:w="2"/><text x="19.1948%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="18.9448%" y="309" width="0.1599%" height="15" fill="rgb(232,83,35)" fg:x="237" fg:w="2"/><text x="19.1948%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.0248%" y="293" width="0.0799%" height="15" fill="rgb(212,148,47)" fg:x="238" fg:w="1"/><text x="19.2748%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.0248%" y="277" width="0.0799%" height="15" fill="rgb(235,29,1)" fg:x="238" fg:w="1"/><text x="19.2748%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="18.8649%" y="373" width="0.3997%" height="15" fill="rgb(247,55,37)" fg:x="236" fg:w="5"/><text x="19.1149%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="18.8649%" y="357" width="0.3997%" height="15" fill="rgb(222,48,3)" fg:x="236" fg:w="5"/><text x="19.1149%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.1047%" y="341" width="0.1599%" height="15" fill="rgb(234,21,33)" fg:x="239" fg:w="2"/><text x="19.3547%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.3445%" y="357" width="0.0799%" height="15" fill="rgb(247,178,53)" fg:x="242" fg:w="1"/><text x="19.5945%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.4245%" y="341" width="0.1599%" height="15" fill="rgb(225,75,7)" fg:x="243" fg:w="2"/><text x="19.6745%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5044%" y="325" width="0.0799%" height="15" fill="rgb(219,199,7)" fg:x="244" fg:w="1"/><text x="19.7544%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.6643%" y="293" width="0.1599%" height="15" fill="rgb(209,93,42)" fg:x="246" fg:w="2"/><text x="19.9143%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="19.6643%" y="325" width="0.2398%" height="15" fill="rgb(240,175,17)" fg:x="246" fg:w="3"/><text x="19.9143%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.6643%" y="309" width="0.2398%" height="15" fill="rgb(232,106,7)" fg:x="246" fg:w="3"/><text x="19.9143%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.8241%" y="293" width="0.0799%" height="15" fill="rgb(242,106,43)" fg:x="248" fg:w="1"/><text x="20.0741%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="18.7050%" y="389" width="1.2790%" height="15" fill="rgb(242,61,37)" fg:x="234" fg:w="16"/><text x="18.9550%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="19.2646%" y="373" width="0.7194%" height="15" fill="rgb(205,72,10)" fg:x="241" fg:w="9"/><text x="19.5146%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="19.4245%" y="357" width="0.5596%" height="15" fill="rgb(214,184,36)" fg:x="243" fg:w="7"/><text x="19.6745%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="19.5843%" y="341" width="0.3997%" height="15" fill="rgb(206,107,18)" fg:x="245" fg:w="5"/><text x="19.8343%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9041%" y="325" width="0.0799%" height="15" fill="rgb(210,75,5)" fg:x="249" fg:w="1"/><text x="20.1541%" y="335.50"></text></g><g><title>engine::session::Session::flush (89 samples, 7.11%)</title><rect x="12.9496%" y="565" width="7.1143%" height="15" fill="rgb(205,3,19)" fg:x="162" fg:w="89"/><text x="13.1996%" y="575.50">engine::se..</text></g><g><title>engine::session::state::State::close (84 samples, 6.71%)</title><rect x="13.3493%" y="549" width="6.7146%" height="15" fill="rgb(207,181,42)" fg:x="167" fg:w="84"/><text x="13.5993%" y="559.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (84 samples, 6.71%)</title><rect x="13.3493%" y="533" width="6.7146%" height="15" fill="rgb(229,179,43)" fg:x="167" fg:w="84"/><text x="13.5993%" y="543.50">engine::s..</text></g><g><title>core::iter::adapters::try_process (81 samples, 6.47%)</title><rect x="13.5891%" y="517" width="6.4748%" height="15" fill="rgb(246,95,30)" fg:x="170" fg:w="81"/><text x="13.8391%" y="527.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (81 samples, 6.47%)</title><rect x="13.5891%" y="501" width="6.4748%" height="15" fill="rgb(234,144,45)" fg:x="170" fg:w="81"/><text x="13.8391%" y="511.50">&lt;alloc::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (81 samples, 6.47%)</title><rect x="13.5891%" y="485" width="6.4748%" height="15" fill="rgb(250,54,25)" fg:x="170" fg:w="81"/><text x="13.8391%" y="495.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (35 samples, 2.80%)</title><rect x="17.2662%" y="469" width="2.7978%" height="15" fill="rgb(215,195,40)" fg:x="216" fg:w="35"/><text x="17.5162%" y="479.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (29 samples, 2.32%)</title><rect x="17.7458%" y="453" width="2.3181%" height="15" fill="rgb(233,188,42)" fg:x="222" fg:w="29"/><text x="17.9958%" y="463.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.32%)</title><rect x="17.7458%" y="437" width="2.3181%" height="15" fill="rgb(247,227,35)" fg:x="222" fg:w="29"/><text x="17.9958%" y="447.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.84%)</title><rect x="18.2254%" y="421" width="1.8385%" height="15" fill="rgb(249,124,27)" fg:x="228" fg:w="23"/><text x="18.4754%" y="431.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 1.76%)</title><rect x="18.3054%" y="405" width="1.7586%" height="15" fill="rgb(219,207,25)" fg:x="229" fg:w="22"/><text x="18.5554%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="19.9840%" y="389" width="0.0799%" height="15" fill="rgb(241,216,47)" fg:x="250" fg:w="1"/><text x="20.2340%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9840%" y="373" width="0.0799%" height="15" fill="rgb(233,82,50)" fg:x="250" fg:w="1"/><text x="20.2340%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="20.0639%" y="533" width="0.1599%" height="15" fill="rgb(232,63,2)" fg:x="251" fg:w="2"/><text x="20.3139%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1439%" y="517" width="0.0799%" height="15" fill="rgb(236,184,28)" fg:x="252" fg:w="1"/><text x="20.3939%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2238%" y="533" width="0.0799%" height="15" fill="rgb(254,63,27)" fg:x="253" fg:w="1"/><text x="20.4738%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="20.0639%" y="565" width="0.3997%" height="15" fill="rgb(253,106,28)" fg:x="251" fg:w="5"/><text x="20.3139%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (5 samples, 0.40%)</title><rect x="20.0639%" y="549" width="0.3997%" height="15" fill="rgb(225,141,39)" fg:x="251" fg:w="5"/><text x="20.3139%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="20.3038%" y="533" width="0.1599%" height="15" fill="rgb(222,157,20)" fg:x="254" fg:w="2"/><text x="20.5538%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.3038%" y="517" width="0.1599%" height="15" fill="rgb(210,190,9)" fg:x="254" fg:w="2"/><text x="20.5538%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="20.3038%" y="501" width="0.1599%" height="15" fill="rgb(242,167,7)" fg:x="254" fg:w="2"/><text x="20.5538%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3837%" y="485" width="0.0799%" height="15" fill="rgb(227,82,41)" fg:x="255" fg:w="1"/><text x="20.6337%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.3837%" y="469" width="0.0799%" height="15" fill="rgb(222,131,13)" fg:x="255" fg:w="1"/><text x="20.6337%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3837%" y="453" width="0.0799%" height="15" fill="rgb(221,98,26)" fg:x="255" fg:w="1"/><text x="20.6337%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="20.4636%" y="549" width="0.0799%" height="15" fill="rgb(251,63,52)" fg:x="256" fg:w="1"/><text x="20.7136%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="20.4636%" y="533" width="0.0799%" height="15" fill="rgb(246,25,43)" fg:x="256" fg:w="1"/><text x="20.7136%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4636%" y="517" width="0.0799%" height="15" fill="rgb(247,167,15)" fg:x="256" fg:w="1"/><text x="20.7136%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4636%" y="501" width="0.0799%" height="15" fill="rgb(240,104,42)" fg:x="256" fg:w="1"/><text x="20.7136%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.4636%" y="485" width="0.0799%" height="15" fill="rgb(224,54,6)" fg:x="256" fg:w="1"/><text x="20.7136%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6235%" y="517" width="0.0799%" height="15" fill="rgb(244,108,35)" fg:x="258" fg:w="1"/><text x="20.8735%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6235%" y="501" width="0.0799%" height="15" fill="rgb(216,154,2)" fg:x="258" fg:w="1"/><text x="20.8735%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6235%" y="485" width="0.0799%" height="15" fill="rgb(222,8,47)" fg:x="258" fg:w="1"/><text x="20.8735%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6235%" y="469" width="0.0799%" height="15" fill="rgb(252,93,1)" fg:x="258" fg:w="1"/><text x="20.8735%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.6235%" y="453" width="0.0799%" height="15" fill="rgb(223,226,51)" fg:x="258" fg:w="1"/><text x="20.8735%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.6235%" y="437" width="0.0799%" height="15" fill="rgb(206,147,9)" fg:x="258" fg:w="1"/><text x="20.8735%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.6235%" y="421" width="0.0799%" height="15" fill="rgb(248,180,41)" fg:x="258" fg:w="1"/><text x="20.8735%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6235%" y="405" width="0.0799%" height="15" fill="rgb(209,47,50)" fg:x="258" fg:w="1"/><text x="20.8735%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6235%" y="389" width="0.0799%" height="15" fill="rgb(243,65,31)" fg:x="258" fg:w="1"/><text x="20.8735%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.6235%" y="373" width="0.0799%" height="15" fill="rgb(228,128,1)" fg:x="258" fg:w="1"/><text x="20.8735%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.6235%" y="357" width="0.0799%" height="15" fill="rgb(231,192,16)" fg:x="258" fg:w="1"/><text x="20.8735%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.6235%" y="341" width="0.0799%" height="15" fill="rgb(224,26,40)" fg:x="258" fg:w="1"/><text x="20.8735%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.6235%" y="325" width="0.0799%" height="15" fill="rgb(214,192,17)" fg:x="258" fg:w="1"/><text x="20.8735%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6235%" y="309" width="0.0799%" height="15" fill="rgb(225,147,18)" fg:x="258" fg:w="1"/><text x="20.8735%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="20.7034%" y="453" width="0.1599%" height="15" fill="rgb(205,35,11)" fg:x="259" fg:w="2"/><text x="20.9534%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="20.7034%" y="437" width="0.1599%" height="15" fill="rgb(242,40,42)" fg:x="259" fg:w="2"/><text x="20.9534%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.8633%" y="421" width="0.0799%" height="15" fill="rgb(250,170,13)" fg:x="261" fg:w="1"/><text x="21.1133%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="20.6235%" y="533" width="0.3997%" height="15" fill="rgb(240,161,28)" fg:x="258" fg:w="5"/><text x="20.8735%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="20.7034%" y="517" width="0.3197%" height="15" fill="rgb(245,179,12)" fg:x="259" fg:w="4"/><text x="20.9534%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="20.7034%" y="501" width="0.3197%" height="15" fill="rgb(250,92,32)" fg:x="259" fg:w="4"/><text x="20.9534%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="20.7034%" y="485" width="0.3197%" height="15" fill="rgb(233,10,40)" fg:x="259" fg:w="4"/><text x="20.9534%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="20.7034%" y="469" width="0.3197%" height="15" fill="rgb(217,98,1)" fg:x="259" fg:w="4"/><text x="20.9534%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.8633%" y="453" width="0.1599%" height="15" fill="rgb(238,202,7)" fg:x="261" fg:w="2"/><text x="21.1133%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8633%" y="437" width="0.1599%" height="15" fill="rgb(222,91,3)" fg:x="261" fg:w="2"/><text x="21.1133%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.9432%" y="421" width="0.0799%" height="15" fill="rgb(211,170,49)" fg:x="262" fg:w="1"/><text x="21.1932%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9432%" y="405" width="0.0799%" height="15" fill="rgb(253,139,18)" fg:x="262" fg:w="1"/><text x="21.1932%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="21.0232%" y="517" width="0.1599%" height="15" fill="rgb(222,4,43)" fg:x="263" fg:w="2"/><text x="21.2732%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1031%" y="501" width="0.0799%" height="15" fill="rgb(207,205,12)" fg:x="264" fg:w="1"/><text x="21.3531%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="21.0232%" y="533" width="0.2398%" height="15" fill="rgb(216,159,46)" fg:x="263" fg:w="3"/><text x="21.2732%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="21.1831%" y="517" width="0.0799%" height="15" fill="rgb(236,115,1)" fg:x="265" fg:w="1"/><text x="21.4331%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="21.1831%" y="501" width="0.0799%" height="15" fill="rgb(251,35,33)" fg:x="265" fg:w="1"/><text x="21.4331%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.1831%" y="485" width="0.0799%" height="15" fill="rgb(248,62,51)" fg:x="265" fg:w="1"/><text x="21.4331%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1831%" y="469" width="0.0799%" height="15" fill="rgb(254,180,19)" fg:x="265" fg:w="1"/><text x="21.4331%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1831%" y="453" width="0.0799%" height="15" fill="rgb(217,100,32)" fg:x="265" fg:w="1"/><text x="21.4331%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.1831%" y="437" width="0.0799%" height="15" fill="rgb(224,71,22)" fg:x="265" fg:w="1"/><text x="21.4331%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="21.2630%" y="517" width="0.1599%" height="15" fill="rgb(251,185,33)" fg:x="266" fg:w="2"/><text x="21.5130%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="21.2630%" y="501" width="0.1599%" height="15" fill="rgb(209,75,48)" fg:x="266" fg:w="2"/><text x="21.5130%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="21.2630%" y="485" width="0.1599%" height="15" fill="rgb(253,190,16)" fg:x="266" fg:w="2"/><text x="21.5130%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="21.2630%" y="469" width="0.1599%" height="15" fill="rgb(226,140,1)" fg:x="266" fg:w="2"/><text x="21.5130%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="21.2630%" y="453" width="0.1599%" height="15" fill="rgb(206,75,30)" fg:x="266" fg:w="2"/><text x="21.5130%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.3429%" y="437" width="0.0799%" height="15" fill="rgb(231,208,37)" fg:x="267" fg:w="1"/><text x="21.5929%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.3429%" y="421" width="0.0799%" height="15" fill="rgb(238,136,40)" fg:x="267" fg:w="1"/><text x="21.5929%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="21.4229%" y="517" width="0.0799%" height="15" fill="rgb(247,137,17)" fg:x="268" fg:w="1"/><text x="21.6729%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.4229%" y="501" width="0.0799%" height="15" fill="rgb(240,60,40)" fg:x="268" fg:w="1"/><text x="21.6729%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="21.4229%" y="485" width="0.0799%" height="15" fill="rgb(236,68,50)" fg:x="268" fg:w="1"/><text x="21.6729%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="21.5028%" y="485" width="0.3197%" height="15" fill="rgb(230,42,12)" fg:x="269" fg:w="4"/><text x="21.7528%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7426%" y="469" width="0.0799%" height="15" fill="rgb(219,16,16)" fg:x="272" fg:w="1"/><text x="21.9926%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.7426%" y="453" width="0.0799%" height="15" fill="rgb(220,38,35)" fg:x="272" fg:w="1"/><text x="21.9926%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="21.2630%" y="533" width="0.6395%" height="15" fill="rgb(228,33,1)" fg:x="266" fg:w="8"/><text x="21.5130%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="21.5028%" y="517" width="0.3997%" height="15" fill="rgb(241,46,31)" fg:x="269" fg:w="5"/><text x="21.7528%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="21.5028%" y="501" width="0.3997%" height="15" fill="rgb(232,58,20)" fg:x="269" fg:w="5"/><text x="21.7528%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.8225%" y="485" width="0.0799%" height="15" fill="rgb(206,228,53)" fg:x="273" fg:w="1"/><text x="22.0725%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="21.8225%" y="469" width="0.0799%" height="15" fill="rgb(206,88,33)" fg:x="273" fg:w="1"/><text x="22.0725%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.8225%" y="453" width="0.0799%" height="15" fill="rgb(238,69,7)" fg:x="273" fg:w="1"/><text x="22.0725%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.8225%" y="437" width="0.0799%" height="15" fill="rgb(250,21,46)" fg:x="273" fg:w="1"/><text x="22.0725%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.8225%" y="421" width="0.0799%" height="15" fill="rgb(215,212,21)" fg:x="273" fg:w="1"/><text x="22.0725%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.8225%" y="405" width="0.0799%" height="15" fill="rgb(211,35,12)" fg:x="273" fg:w="1"/><text x="22.0725%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.8225%" y="389" width="0.0799%" height="15" fill="rgb(231,184,16)" fg:x="273" fg:w="1"/><text x="22.0725%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.8225%" y="373" width="0.0799%" height="15" fill="rgb(242,140,15)" fg:x="273" fg:w="1"/><text x="22.0725%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.8225%" y="357" width="0.0799%" height="15" fill="rgb(220,37,14)" fg:x="273" fg:w="1"/><text x="22.0725%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.44%)</title><rect x="20.5436%" y="549" width="1.4388%" height="15" fill="rgb(223,146,22)" fg:x="257" fg:w="18"/><text x="20.7936%" y="559.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="21.9025%" y="533" width="0.0799%" height="15" fill="rgb(216,132,15)" fg:x="274" fg:w="1"/><text x="22.1525%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="21.9025%" y="517" width="0.0799%" height="15" fill="rgb(248,83,5)" fg:x="274" fg:w="1"/><text x="22.1525%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="21.9025%" y="501" width="0.0799%" height="15" fill="rgb(231,206,48)" fg:x="274" fg:w="1"/><text x="22.1525%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (21 samples, 1.68%)</title><rect x="20.4636%" y="565" width="1.6787%" height="15" fill="rgb(253,185,37)" fg:x="256" fg:w="21"/><text x="20.7136%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.9824%" y="549" width="0.1599%" height="15" fill="rgb(208,21,44)" fg:x="275" fg:w="2"/><text x="22.2324%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.9824%" y="533" width="0.1599%" height="15" fill="rgb(236,125,4)" fg:x="275" fg:w="2"/><text x="22.2324%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.0624%" y="517" width="0.0799%" height="15" fill="rgb(226,134,25)" fg:x="276" fg:w="1"/><text x="22.3124%" y="527.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (2 samples, 0.16%)</title><rect x="22.1423%" y="565" width="0.1599%" height="15" fill="rgb(250,201,12)" fg:x="277" fg:w="2"/><text x="22.3923%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (2 samples, 0.16%)</title><rect x="22.1423%" y="549" width="0.1599%" height="15" fill="rgb(225,92,18)" fg:x="277" fg:w="2"/><text x="22.3923%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="22.1423%" y="533" width="0.1599%" height="15" fill="rgb(227,35,22)" fg:x="277" fg:w="2"/><text x="22.3923%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (2 samples, 0.16%)</title><rect x="22.1423%" y="517" width="0.1599%" height="15" fill="rgb(214,180,52)" fg:x="277" fg:w="2"/><text x="22.3923%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.1423%" y="501" width="0.1599%" height="15" fill="rgb(233,55,38)" fg:x="277" fg:w="2"/><text x="22.3923%" y="511.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;f32&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="22.2222%" y="485" width="0.0799%" height="15" fill="rgb(249,171,43)" fg:x="278" fg:w="1"/><text x="22.4722%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.3022%" y="501" width="0.1599%" height="15" fill="rgb(239,87,2)" fg:x="279" fg:w="2"/><text x="22.5522%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="22.3022%" y="485" width="0.1599%" height="15" fill="rgb(248,141,5)" fg:x="279" fg:w="2"/><text x="22.5522%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.3022%" y="469" width="0.1599%" height="15" fill="rgb(238,33,42)" fg:x="279" fg:w="2"/><text x="22.5522%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.3022%" y="453" width="0.1599%" height="15" fill="rgb(231,57,19)" fg:x="279" fg:w="2"/><text x="22.5522%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.5420%" y="405" width="0.0799%" height="15" fill="rgb(214,78,53)" fg:x="282" fg:w="1"/><text x="22.7920%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.40%)</title><rect x="22.3022%" y="533" width="0.3997%" height="15" fill="rgb(206,132,29)" fg:x="279" fg:w="5"/><text x="22.5522%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="22.3022%" y="517" width="0.3997%" height="15" fill="rgb(248,174,31)" fg:x="279" fg:w="5"/><text x="22.5522%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="22.4620%" y="501" width="0.2398%" height="15" fill="rgb(221,87,13)" fg:x="281" fg:w="3"/><text x="22.7120%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="22.4620%" y="485" width="0.2398%" height="15" fill="rgb(223,197,17)" fg:x="281" fg:w="3"/><text x="22.7120%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.5420%" y="469" width="0.1599%" height="15" fill="rgb(220,144,50)" fg:x="282" fg:w="2"/><text x="22.7920%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.5420%" y="453" width="0.1599%" height="15" fill="rgb(244,201,11)" fg:x="282" fg:w="2"/><text x="22.7920%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="22.5420%" y="437" width="0.1599%" height="15" fill="rgb(249,81,34)" fg:x="282" fg:w="2"/><text x="22.7920%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.5420%" y="421" width="0.1599%" height="15" fill="rgb(205,161,12)" fg:x="282" fg:w="2"/><text x="22.7920%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6219%" y="405" width="0.0799%" height="15" fill="rgb(252,139,50)" fg:x="283" fg:w="1"/><text x="22.8719%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6219%" y="389" width="0.0799%" height="15" fill="rgb(205,169,14)" fg:x="283" fg:w="1"/><text x="22.8719%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.6219%" y="373" width="0.0799%" height="15" fill="rgb(248,198,33)" fg:x="283" fg:w="1"/><text x="22.8719%" y="383.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="22.7018%" y="533" width="0.0799%" height="15" fill="rgb(236,23,21)" fg:x="284" fg:w="1"/><text x="22.9518%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="22.7018%" y="517" width="0.0799%" height="15" fill="rgb(231,13,38)" fg:x="284" fg:w="1"/><text x="22.9518%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.7018%" y="501" width="0.0799%" height="15" fill="rgb(239,139,21)" fg:x="284" fg:w="1"/><text x="22.9518%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.7018%" y="485" width="0.0799%" height="15" fill="rgb(222,164,45)" fg:x="284" fg:w="1"/><text x="22.9518%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="22.7018%" y="469" width="0.0799%" height="15" fill="rgb(230,52,27)" fg:x="284" fg:w="1"/><text x="22.9518%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="22.8617%" y="501" width="0.0799%" height="15" fill="rgb(227,143,42)" fg:x="286" fg:w="1"/><text x="23.1117%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="22.7818%" y="517" width="0.2398%" height="15" fill="rgb(249,127,1)" fg:x="285" fg:w="3"/><text x="23.0318%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9416%" y="501" width="0.0799%" height="15" fill="rgb(243,107,26)" fg:x="287" fg:w="1"/><text x="23.1916%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9416%" y="485" width="0.0799%" height="15" fill="rgb(225,7,45)" fg:x="287" fg:w="1"/><text x="23.1916%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9416%" y="469" width="0.0799%" height="15" fill="rgb(241,88,38)" fg:x="287" fg:w="1"/><text x="23.1916%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9416%" y="453" width="0.0799%" height="15" fill="rgb(226,121,9)" fg:x="287" fg:w="1"/><text x="23.1916%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9416%" y="437" width="0.0799%" height="15" fill="rgb(253,60,29)" fg:x="287" fg:w="1"/><text x="23.1916%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9416%" y="421" width="0.0799%" height="15" fill="rgb(244,181,39)" fg:x="287" fg:w="1"/><text x="23.1916%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9416%" y="405" width="0.0799%" height="15" fill="rgb(252,203,31)" fg:x="287" fg:w="1"/><text x="23.1916%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.0216%" y="517" width="0.0799%" height="15" fill="rgb(224,120,8)" fg:x="288" fg:w="1"/><text x="23.2716%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="23.1015%" y="389" width="0.0799%" height="15" fill="rgb(205,171,54)" fg:x="289" fg:w="1"/><text x="23.3515%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.1015%" y="373" width="0.0799%" height="15" fill="rgb(235,89,11)" fg:x="289" fg:w="1"/><text x="23.3515%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="22.7818%" y="533" width="0.4796%" height="15" fill="rgb(212,180,28)" fg:x="285" fg:w="6"/><text x="23.0318%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="23.1015%" y="517" width="0.1599%" height="15" fill="rgb(247,84,49)" fg:x="289" fg:w="2"/><text x="23.3515%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="23.1015%" y="501" width="0.1599%" height="15" fill="rgb(236,187,52)" fg:x="289" fg:w="2"/><text x="23.3515%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.1015%" y="485" width="0.1599%" height="15" fill="rgb(227,24,15)" fg:x="289" fg:w="2"/><text x="23.3515%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="23.1015%" y="469" width="0.1599%" height="15" fill="rgb(227,211,13)" fg:x="289" fg:w="2"/><text x="23.3515%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.1015%" y="453" width="0.1599%" height="15" fill="rgb(245,52,14)" fg:x="289" fg:w="2"/><text x="23.3515%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.1015%" y="437" width="0.1599%" height="15" fill="rgb(225,185,13)" fg:x="289" fg:w="2"/><text x="23.3515%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="23.1015%" y="421" width="0.1599%" height="15" fill="rgb(217,160,29)" fg:x="289" fg:w="2"/><text x="23.3515%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.1015%" y="405" width="0.1599%" height="15" fill="rgb(216,115,53)" fg:x="289" fg:w="2"/><text x="23.3515%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.1815%" y="389" width="0.0799%" height="15" fill="rgb(236,99,5)" fg:x="290" fg:w="1"/><text x="23.4315%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1815%" y="373" width="0.0799%" height="15" fill="rgb(222,60,38)" fg:x="290" fg:w="1"/><text x="23.4315%" y="383.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="23.2614%" y="517" width="0.0799%" height="15" fill="rgb(212,82,22)" fg:x="291" fg:w="1"/><text x="23.5114%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="23.2614%" y="501" width="0.0799%" height="15" fill="rgb(214,48,28)" fg:x="291" fg:w="1"/><text x="23.5114%" y="511.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (14 samples, 1.12%)</title><rect x="22.3022%" y="565" width="1.1191%" height="15" fill="rgb(245,196,50)" fg:x="279" fg:w="14"/><text x="22.5522%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (14 samples, 1.12%)</title><rect x="22.3022%" y="549" width="1.1191%" height="15" fill="rgb(225,159,46)" fg:x="279" fg:w="14"/><text x="22.5522%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="23.2614%" y="533" width="0.1599%" height="15" fill="rgb(207,195,48)" fg:x="291" fg:w="2"/><text x="23.5114%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="23.3413%" y="517" width="0.0799%" height="15" fill="rgb(240,73,3)" fg:x="292" fg:w="1"/><text x="23.5913%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="23.3413%" y="501" width="0.0799%" height="15" fill="rgb(245,57,23)" fg:x="292" fg:w="1"/><text x="23.5913%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.3413%" y="485" width="0.0799%" height="15" fill="rgb(240,75,18)" fg:x="292" fg:w="1"/><text x="23.5913%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="23.3413%" y="469" width="0.0799%" height="15" fill="rgb(238,168,12)" fg:x="292" fg:w="1"/><text x="23.5913%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.3413%" y="453" width="0.0799%" height="15" fill="rgb(226,20,40)" fg:x="292" fg:w="1"/><text x="23.5913%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="23.5012%" y="533" width="0.0799%" height="15" fill="rgb(224,130,35)" fg:x="294" fg:w="1"/><text x="23.7512%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5012%" y="517" width="0.0799%" height="15" fill="rgb(225,63,41)" fg:x="294" fg:w="1"/><text x="23.7512%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.5012%" y="501" width="0.0799%" height="15" fill="rgb(219,3,3)" fg:x="294" fg:w="1"/><text x="23.7512%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.5012%" y="485" width="0.0799%" height="15" fill="rgb(218,157,4)" fg:x="294" fg:w="1"/><text x="23.7512%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.5012%" y="469" width="0.0799%" height="15" fill="rgb(232,76,36)" fg:x="294" fg:w="1"/><text x="23.7512%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.5012%" y="453" width="0.0799%" height="15" fill="rgb(247,36,0)" fg:x="294" fg:w="1"/><text x="23.7512%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.5012%" y="437" width="0.0799%" height="15" fill="rgb(205,2,34)" fg:x="294" fg:w="1"/><text x="23.7512%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.5012%" y="421" width="0.0799%" height="15" fill="rgb(239,136,13)" fg:x="294" fg:w="1"/><text x="23.7512%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.5012%" y="405" width="0.0799%" height="15" fill="rgb(253,122,12)" fg:x="294" fg:w="1"/><text x="23.7512%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.5012%" y="389" width="0.0799%" height="15" fill="rgb(222,174,7)" fg:x="294" fg:w="1"/><text x="23.7512%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.5012%" y="373" width="0.0799%" height="15" fill="rgb(208,191,42)" fg:x="294" fg:w="1"/><text x="23.7512%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.5012%" y="357" width="0.0799%" height="15" fill="rgb(237,212,15)" fg:x="294" fg:w="1"/><text x="23.7512%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.5012%" y="341" width="0.0799%" height="15" fill="rgb(215,65,20)" fg:x="294" fg:w="1"/><text x="23.7512%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5012%" y="325" width="0.0799%" height="15" fill="rgb(232,103,11)" fg:x="294" fg:w="1"/><text x="23.7512%" y="335.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="23.5012%" y="549" width="0.1599%" height="15" fill="rgb(235,148,18)" fg:x="294" fg:w="2"/><text x="23.7512%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.5811%" y="533" width="0.0799%" height="15" fill="rgb(240,173,7)" fg:x="295" fg:w="1"/><text x="23.8311%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5811%" y="517" width="0.0799%" height="15" fill="rgb(228,182,25)" fg:x="295" fg:w="1"/><text x="23.8311%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.5811%" y="501" width="0.0799%" height="15" fill="rgb(247,3,52)" fg:x="295" fg:w="1"/><text x="23.8311%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="23.5811%" y="485" width="0.0799%" height="15" fill="rgb(226,155,8)" fg:x="295" fg:w="1"/><text x="23.8311%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="23.6611%" y="549" width="0.1599%" height="15" fill="rgb(243,195,38)" fg:x="296" fg:w="2"/><text x="23.9111%" y="559.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="23.6611%" y="533" width="0.1599%" height="15" fill="rgb(254,181,33)" fg:x="296" fg:w="2"/><text x="23.9111%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="23.7410%" y="517" width="0.0799%" height="15" fill="rgb(232,98,23)" fg:x="297" fg:w="1"/><text x="23.9910%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="23.8209%" y="549" width="0.0799%" height="15" fill="rgb(205,23,10)" fg:x="298" fg:w="1"/><text x="24.0709%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.9009%" y="469" width="0.0799%" height="15" fill="rgb(212,124,38)" fg:x="299" fg:w="1"/><text x="24.1509%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="23.9009%" y="453" width="0.0799%" height="15" fill="rgb(228,207,2)" fg:x="299" fg:w="1"/><text x="24.1509%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9009%" y="437" width="0.0799%" height="15" fill="rgb(215,120,22)" fg:x="299" fg:w="1"/><text x="24.1509%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9009%" y="421" width="0.0799%" height="15" fill="rgb(251,172,33)" fg:x="299" fg:w="1"/><text x="24.1509%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.9009%" y="405" width="0.0799%" height="15" fill="rgb(250,83,2)" fg:x="299" fg:w="1"/><text x="24.1509%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9009%" y="389" width="0.0799%" height="15" fill="rgb(210,132,53)" fg:x="299" fg:w="1"/><text x="24.1509%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9009%" y="373" width="0.0799%" height="15" fill="rgb(221,208,36)" fg:x="299" fg:w="1"/><text x="24.1509%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9808%" y="405" width="0.0799%" height="15" fill="rgb(205,192,46)" fg:x="300" fg:w="1"/><text x="24.2308%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.9808%" y="389" width="0.0799%" height="15" fill="rgb(223,163,14)" fg:x="300" fg:w="1"/><text x="24.2308%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.9808%" y="373" width="0.0799%" height="15" fill="rgb(218,41,28)" fg:x="300" fg:w="1"/><text x="24.2308%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.9808%" y="357" width="0.0799%" height="15" fill="rgb(235,104,10)" fg:x="300" fg:w="1"/><text x="24.2308%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.9808%" y="341" width="0.0799%" height="15" fill="rgb(246,17,4)" fg:x="300" fg:w="1"/><text x="24.2308%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.9808%" y="325" width="0.0799%" height="15" fill="rgb(240,7,16)" fg:x="300" fg:w="1"/><text x="24.2308%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.9808%" y="309" width="0.0799%" height="15" fill="rgb(213,160,23)" fg:x="300" fg:w="1"/><text x="24.2308%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.9808%" y="293" width="0.0799%" height="15" fill="rgb(251,179,49)" fg:x="300" fg:w="1"/><text x="24.2308%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.9808%" y="277" width="0.0799%" height="15" fill="rgb(247,198,10)" fg:x="300" fg:w="1"/><text x="24.2308%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.9808%" y="261" width="0.0799%" height="15" fill="rgb(220,65,29)" fg:x="300" fg:w="1"/><text x="24.2308%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.9808%" y="245" width="0.0799%" height="15" fill="rgb(237,171,28)" fg:x="300" fg:w="1"/><text x="24.2308%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.9808%" y="229" width="0.0799%" height="15" fill="rgb(228,44,26)" fg:x="300" fg:w="1"/><text x="24.2308%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9808%" y="213" width="0.0799%" height="15" fill="rgb(216,210,27)" fg:x="300" fg:w="1"/><text x="24.2308%" y="223.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="23.9009%" y="549" width="0.2398%" height="15" fill="rgb(252,10,17)" fg:x="299" fg:w="3"/><text x="24.1509%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="23.9009%" y="533" width="0.2398%" height="15" fill="rgb(214,172,30)" fg:x="299" fg:w="3"/><text x="24.1509%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="23.9009%" y="517" width="0.2398%" height="15" fill="rgb(253,130,48)" fg:x="299" fg:w="3"/><text x="24.1509%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="23.9009%" y="501" width="0.2398%" height="15" fill="rgb(226,99,43)" fg:x="299" fg:w="3"/><text x="24.1509%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="23.9009%" y="485" width="0.2398%" height="15" fill="rgb(239,111,26)" fg:x="299" fg:w="3"/><text x="24.1509%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.9808%" y="469" width="0.1599%" height="15" fill="rgb(240,27,53)" fg:x="300" fg:w="2"/><text x="24.2308%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="23.9808%" y="453" width="0.1599%" height="15" fill="rgb(254,163,12)" fg:x="300" fg:w="2"/><text x="24.2308%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.9808%" y="437" width="0.1599%" height="15" fill="rgb(225,51,48)" fg:x="300" fg:w="2"/><text x="24.2308%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.9808%" y="421" width="0.1599%" height="15" fill="rgb(205,19,32)" fg:x="300" fg:w="2"/><text x="24.2308%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0608%" y="405" width="0.0799%" height="15" fill="rgb(218,119,26)" fg:x="301" fg:w="1"/><text x="24.3108%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::EntityPtr&gt;&gt; (1 samples, 0.08%)</title><rect x="24.1407%" y="549" width="0.0799%" height="15" fill="rgb(231,173,33)" fg:x="302" fg:w="1"/><text x="24.3907%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="24.2206%" y="533" width="0.0799%" height="15" fill="rgb(241,100,29)" fg:x="303" fg:w="1"/><text x="24.4706%" y="543.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="24.3006%" y="517" width="0.1599%" height="15" fill="rgb(250,194,34)" fg:x="304" fg:w="2"/><text x="24.5506%" y="527.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="24.3006%" y="501" width="0.1599%" height="15" fill="rgb(215,23,50)" fg:x="304" fg:w="2"/><text x="24.5506%" y="511.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="24.3006%" y="485" width="0.1599%" height="15" fill="rgb(206,49,37)" fg:x="304" fg:w="2"/><text x="24.5506%" y="495.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="24.3006%" y="469" width="0.1599%" height="15" fill="rgb(247,39,21)" fg:x="304" fg:w="2"/><text x="24.5506%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="24.3006%" y="453" width="0.1599%" height="15" fill="rgb(209,220,15)" fg:x="304" fg:w="2"/><text x="24.5506%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="24.3006%" y="437" width="0.1599%" height="15" fill="rgb(206,41,33)" fg:x="304" fg:w="2"/><text x="24.5506%" y="447.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="24.3006%" y="421" width="0.1599%" height="15" fill="rgb(221,225,45)" fg:x="304" fg:w="2"/><text x="24.5506%" y="431.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="24.3006%" y="405" width="0.1599%" height="15" fill="rgb(216,27,18)" fg:x="304" fg:w="2"/><text x="24.5506%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.5404%" y="453" width="0.0799%" height="15" fill="rgb(250,193,34)" fg:x="307" fg:w="1"/><text x="24.7904%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.5404%" y="437" width="0.0799%" height="15" fill="rgb(227,215,20)" fg:x="307" fg:w="1"/><text x="24.7904%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.5404%" y="421" width="0.0799%" height="15" fill="rgb(242,211,27)" fg:x="307" fg:w="1"/><text x="24.7904%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="24.7002%" y="437" width="0.1599%" height="15" fill="rgb(229,190,30)" fg:x="309" fg:w="2"/><text x="24.9502%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="24.7002%" y="421" width="0.1599%" height="15" fill="rgb(253,31,29)" fg:x="309" fg:w="2"/><text x="24.9502%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.7802%" y="405" width="0.0799%" height="15" fill="rgb(229,177,52)" fg:x="310" fg:w="1"/><text x="25.0302%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.7802%" y="389" width="0.0799%" height="15" fill="rgb(226,88,8)" fg:x="310" fg:w="1"/><text x="25.0302%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.7802%" y="373" width="0.0799%" height="15" fill="rgb(214,55,27)" fg:x="310" fg:w="1"/><text x="25.0302%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.0200%" y="405" width="0.0799%" height="15" fill="rgb(233,202,5)" fg:x="313" fg:w="1"/><text x="25.2700%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.0200%" y="389" width="0.0799%" height="15" fill="rgb(251,49,30)" fg:x="313" fg:w="1"/><text x="25.2700%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.0200%" y="373" width="0.0799%" height="15" fill="rgb(235,18,52)" fg:x="313" fg:w="1"/><text x="25.2700%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.0200%" y="357" width="0.0799%" height="15" fill="rgb(250,111,51)" fg:x="313" fg:w="1"/><text x="25.2700%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="24.9400%" y="421" width="0.2398%" height="15" fill="rgb(218,13,25)" fg:x="312" fg:w="3"/><text x="25.1900%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.0999%" y="405" width="0.0799%" height="15" fill="rgb(248,96,7)" fg:x="314" fg:w="1"/><text x="25.3499%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.0999%" y="389" width="0.0799%" height="15" fill="rgb(217,31,15)" fg:x="314" fg:w="1"/><text x="25.3499%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.0999%" y="373" width="0.0799%" height="15" fill="rgb(228,59,49)" fg:x="314" fg:w="1"/><text x="25.3499%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.2598%" y="405" width="0.0799%" height="15" fill="rgb(210,152,38)" fg:x="316" fg:w="1"/><text x="25.5098%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.2598%" y="389" width="0.0799%" height="15" fill="rgb(206,71,11)" fg:x="316" fg:w="1"/><text x="25.5098%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.2598%" y="373" width="0.0799%" height="15" fill="rgb(244,199,5)" fg:x="316" fg:w="1"/><text x="25.5098%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.2598%" y="357" width="0.0799%" height="15" fill="rgb(253,49,1)" fg:x="316" fg:w="1"/><text x="25.5098%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.2598%" y="341" width="0.0799%" height="15" fill="rgb(225,206,40)" fg:x="316" fg:w="1"/><text x="25.5098%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.2598%" y="325" width="0.0799%" height="15" fill="rgb(243,116,47)" fg:x="316" fg:w="1"/><text x="25.5098%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.2598%" y="309" width="0.0799%" height="15" fill="rgb(219,225,16)" fg:x="316" fg:w="1"/><text x="25.5098%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.3397%" y="389" width="0.0799%" height="15" fill="rgb(233,29,47)" fg:x="317" fg:w="1"/><text x="25.5897%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="25.3397%" y="373" width="0.0799%" height="15" fill="rgb(250,179,18)" fg:x="317" fg:w="1"/><text x="25.5897%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="25.3397%" y="357" width="0.0799%" height="15" fill="rgb(215,176,6)" fg:x="317" fg:w="1"/><text x="25.5897%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="25.4197%" y="389" width="0.4796%" height="15" fill="rgb(214,117,39)" fg:x="318" fg:w="6"/><text x="25.6697%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="25.6595%" y="373" width="0.2398%" height="15" fill="rgb(247,183,36)" fg:x="321" fg:w="3"/><text x="25.9095%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.8193%" y="357" width="0.0799%" height="15" fill="rgb(237,200,3)" fg:x="323" fg:w="1"/><text x="26.0693%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.8193%" y="341" width="0.0799%" height="15" fill="rgb(212,220,24)" fg:x="323" fg:w="1"/><text x="26.0693%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.8993%" y="373" width="0.1599%" height="15" fill="rgb(245,216,20)" fg:x="324" fg:w="2"/><text x="26.1493%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.8993%" y="357" width="0.1599%" height="15" fill="rgb(219,124,7)" fg:x="324" fg:w="2"/><text x="26.1493%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="25.8993%" y="341" width="0.1599%" height="15" fill="rgb(227,167,8)" fg:x="324" fg:w="2"/><text x="26.1493%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.9792%" y="325" width="0.0799%" height="15" fill="rgb(241,37,2)" fg:x="325" fg:w="1"/><text x="26.2292%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="26.0592%" y="357" width="0.3197%" height="15" fill="rgb(238,134,33)" fg:x="326" fg:w="4"/><text x="26.3092%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="26.0592%" y="341" width="0.3197%" height="15" fill="rgb(248,48,27)" fg:x="326" fg:w="4"/><text x="26.3092%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.1391%" y="325" width="0.2398%" height="15" fill="rgb(212,14,16)" fg:x="327" fg:w="3"/><text x="26.3891%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.2190%" y="309" width="0.1599%" height="15" fill="rgb(217,205,37)" fg:x="328" fg:w="2"/><text x="26.4690%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.2990%" y="293" width="0.0799%" height="15" fill="rgb(233,185,47)" fg:x="329" fg:w="1"/><text x="26.5490%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.2990%" y="277" width="0.0799%" height="15" fill="rgb(244,88,8)" fg:x="329" fg:w="1"/><text x="26.5490%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.2990%" y="261" width="0.0799%" height="15" fill="rgb(213,0,20)" fg:x="329" fg:w="1"/><text x="26.5490%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.4588%" y="341" width="0.1599%" height="15" fill="rgb(238,159,36)" fg:x="331" fg:w="2"/><text x="26.7088%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.5388%" y="325" width="0.0799%" height="15" fill="rgb(253,173,17)" fg:x="332" fg:w="1"/><text x="26.7888%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.5388%" y="309" width="0.0799%" height="15" fill="rgb(221,23,28)" fg:x="332" fg:w="1"/><text x="26.7888%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="26.3789%" y="357" width="0.3197%" height="15" fill="rgb(218,113,15)" fg:x="330" fg:w="4"/><text x="26.6289%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.6187%" y="341" width="0.0799%" height="15" fill="rgb(233,58,3)" fg:x="333" fg:w="1"/><text x="26.8687%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.6187%" y="325" width="0.0799%" height="15" fill="rgb(250,46,35)" fg:x="333" fg:w="1"/><text x="26.8687%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.6187%" y="309" width="0.0799%" height="15" fill="rgb(210,169,11)" fg:x="333" fg:w="1"/><text x="26.8687%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="26.0592%" y="373" width="0.7994%" height="15" fill="rgb(246,88,19)" fg:x="326" fg:w="10"/><text x="26.3092%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.6986%" y="357" width="0.1599%" height="15" fill="rgb(206,81,49)" fg:x="334" fg:w="2"/><text x="26.9486%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.7786%" y="341" width="0.0799%" height="15" fill="rgb(232,144,18)" fg:x="335" fg:w="1"/><text x="27.0286%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="25.8993%" y="389" width="1.1191%" height="15" fill="rgb(235,2,27)" fg:x="324" fg:w="14"/><text x="26.1493%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.8585%" y="373" width="0.1599%" height="15" fill="rgb(239,157,39)" fg:x="336" fg:w="2"/><text x="27.1085%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.9384%" y="357" width="0.0799%" height="15" fill="rgb(220,11,17)" fg:x="337" fg:w="1"/><text x="27.1884%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="26.9384%" y="341" width="0.0799%" height="15" fill="rgb(243,94,50)" fg:x="337" fg:w="1"/><text x="27.1884%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="25.3397%" y="405" width="1.8385%" height="15" fill="rgb(218,22,0)" fg:x="317" fg:w="23"/><text x="25.5897%" y="415.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.0184%" y="389" width="0.1599%" height="15" fill="rgb(249,70,21)" fg:x="338" fg:w="2"/><text x="27.2684%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.0983%" y="373" width="0.0799%" height="15" fill="rgb(245,111,46)" fg:x="339" fg:w="1"/><text x="27.3483%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.56%)</title><rect x="24.8601%" y="437" width="2.5580%" height="15" fill="rgb(244,183,12)" fg:x="311" fg:w="32"/><text x="25.1101%" y="447.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.24%)</title><rect x="25.1799%" y="421" width="2.2382%" height="15" fill="rgb(207,117,0)" fg:x="315" fg:w="28"/><text x="25.4299%" y="431.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.1783%" y="405" width="0.2398%" height="15" fill="rgb(206,20,43)" fg:x="340" fg:w="3"/><text x="27.4283%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.1783%" y="389" width="0.2398%" height="15" fill="rgb(221,104,11)" fg:x="340" fg:w="3"/><text x="27.4283%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="27.1783%" y="373" width="0.2398%" height="15" fill="rgb(254,36,50)" fg:x="340" fg:w="3"/><text x="27.4283%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="27.1783%" y="357" width="0.2398%" height="15" fill="rgb(252,17,15)" fg:x="340" fg:w="3"/><text x="27.4283%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="27.1783%" y="341" width="0.2398%" height="15" fill="rgb(219,129,43)" fg:x="340" fg:w="3"/><text x="27.4283%" y="351.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="27.1783%" y="325" width="0.2398%" height="15" fill="rgb(205,34,45)" fg:x="340" fg:w="3"/><text x="27.4283%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.4181%" y="389" width="0.1599%" height="15" fill="rgb(251,201,32)" fg:x="343" fg:w="2"/><text x="27.6681%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.5779%" y="373" width="0.0799%" height="15" fill="rgb(205,56,0)" fg:x="345" fg:w="1"/><text x="27.8279%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.5779%" y="357" width="0.0799%" height="15" fill="rgb(211,193,27)" fg:x="345" fg:w="1"/><text x="27.8279%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.6579%" y="357" width="0.0799%" height="15" fill="rgb(231,100,42)" fg:x="346" fg:w="1"/><text x="27.9079%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="27.4181%" y="437" width="0.3997%" height="15" fill="rgb(245,85,27)" fg:x="343" fg:w="5"/><text x="27.6681%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="27.4181%" y="421" width="0.3997%" height="15" fill="rgb(241,76,24)" fg:x="343" fg:w="5"/><text x="27.6681%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="27.4181%" y="405" width="0.3997%" height="15" fill="rgb(249,157,15)" fg:x="343" fg:w="5"/><text x="27.6681%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="27.5779%" y="389" width="0.2398%" height="15" fill="rgb(222,218,25)" fg:x="345" fg:w="3"/><text x="27.8279%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.6579%" y="373" width="0.1599%" height="15" fill="rgb(252,156,52)" fg:x="346" fg:w="2"/><text x="27.9079%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="27.7378%" y="357" width="0.0799%" height="15" fill="rgb(211,185,7)" fg:x="347" fg:w="1"/><text x="27.9878%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.7378%" y="341" width="0.0799%" height="15" fill="rgb(234,108,24)" fg:x="347" fg:w="1"/><text x="27.9878%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.7378%" y="325" width="0.0799%" height="15" fill="rgb(227,218,2)" fg:x="347" fg:w="1"/><text x="27.9878%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.7378%" y="309" width="0.0799%" height="15" fill="rgb(224,0,36)" fg:x="347" fg:w="1"/><text x="27.9878%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8977%" y="405" width="0.0799%" height="15" fill="rgb(233,201,10)" fg:x="349" fg:w="1"/><text x="28.1477%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="27.9776%" y="405" width="0.0799%" height="15" fill="rgb(252,209,14)" fg:x="350" fg:w="1"/><text x="28.2276%" y="415.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (3 samples, 0.24%)</title><rect x="28.0576%" y="405" width="0.2398%" height="15" fill="rgb(205,93,49)" fg:x="351" fg:w="3"/><text x="28.3076%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="28.1375%" y="389" width="0.1599%" height="15" fill="rgb(234,116,45)" fg:x="352" fg:w="2"/><text x="28.3875%" y="399.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="28.1375%" y="373" width="0.1599%" height="15" fill="rgb(248,89,35)" fg:x="352" fg:w="2"/><text x="28.3875%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="28.2174%" y="357" width="0.0799%" height="15" fill="rgb(233,167,45)" fg:x="353" fg:w="1"/><text x="28.4674%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (6 samples, 0.48%)</title><rect x="27.8977%" y="421" width="0.4796%" height="15" fill="rgb(248,228,14)" fg:x="349" fg:w="6"/><text x="28.1477%" y="431.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="28.2974%" y="405" width="0.0799%" height="15" fill="rgb(246,91,14)" fg:x="354" fg:w="1"/><text x="28.5474%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="28.4572%" y="389" width="0.5596%" height="15" fill="rgb(227,142,5)" fg:x="356" fg:w="7"/><text x="28.7072%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="28.9369%" y="373" width="0.0799%" height="15" fill="rgb(221,63,33)" fg:x="362" fg:w="1"/><text x="29.1869%" y="383.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="29.0168%" y="389" width="0.1599%" height="15" fill="rgb(233,49,0)" fg:x="363" fg:w="2"/><text x="29.2668%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.0168%" y="373" width="0.1599%" height="15" fill="rgb(251,115,38)" fg:x="363" fg:w="2"/><text x="29.2668%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.0967%" y="357" width="0.0799%" height="15" fill="rgb(231,214,32)" fg:x="364" fg:w="1"/><text x="29.3467%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.4165%" y="357" width="0.0799%" height="15" fill="rgb(248,73,46)" fg:x="368" fg:w="1"/><text x="29.6665%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.4964%" y="341" width="0.0799%" height="15" fill="rgb(237,156,4)" fg:x="369" fg:w="1"/><text x="29.7464%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4964%" y="325" width="0.0799%" height="15" fill="rgb(227,132,2)" fg:x="369" fg:w="1"/><text x="29.7464%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="29.5763%" y="325" width="0.0799%" height="15" fill="rgb(248,161,9)" fg:x="370" fg:w="1"/><text x="29.8263%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.6563%" y="309" width="0.0799%" height="15" fill="rgb(238,77,38)" fg:x="371" fg:w="1"/><text x="29.9063%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="29.5763%" y="341" width="0.2398%" height="15" fill="rgb(222,166,40)" fg:x="370" fg:w="3"/><text x="29.8263%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="29.6563%" y="325" width="0.1599%" height="15" fill="rgb(214,168,45)" fg:x="371" fg:w="2"/><text x="29.9063%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="29.7362%" y="309" width="0.0799%" height="15" fill="rgb(226,64,37)" fg:x="372" fg:w="1"/><text x="29.9862%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.7362%" y="293" width="0.0799%" height="15" fill="rgb(232,210,43)" fg:x="372" fg:w="1"/><text x="29.9862%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7362%" y="277" width="0.0799%" height="15" fill="rgb(214,76,33)" fg:x="372" fg:w="1"/><text x="29.9862%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.0560%" y="309" width="0.1599%" height="15" fill="rgb(210,78,5)" fg:x="376" fg:w="2"/><text x="30.3060%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1359%" y="293" width="0.0799%" height="15" fill="rgb(211,107,37)" fg:x="377" fg:w="1"/><text x="30.3859%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="30.0560%" y="325" width="0.3197%" height="15" fill="rgb(249,67,16)" fg:x="376" fg:w="4"/><text x="30.3060%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="30.2158%" y="309" width="0.1599%" height="15" fill="rgb(222,114,31)" fg:x="378" fg:w="2"/><text x="30.4658%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="29.4964%" y="357" width="0.9592%" height="15" fill="rgb(242,118,19)" fg:x="369" fg:w="12"/><text x="29.7464%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="29.8161%" y="341" width="0.6395%" height="15" fill="rgb(223,115,1)" fg:x="373" fg:w="8"/><text x="30.0661%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3757%" y="325" width="0.0799%" height="15" fill="rgb(241,182,54)" fg:x="380" fg:w="1"/><text x="30.6257%" y="335.50"></text></g><g><title>engine::session::Session::flush (80 samples, 6.39%)</title><rect x="24.2206%" y="549" width="6.3949%" height="15" fill="rgb(244,166,36)" fg:x="303" fg:w="80"/><text x="24.4706%" y="559.50">engine::..</text></g><g><title>engine::session::Session::save_changes (79 samples, 6.31%)</title><rect x="24.3006%" y="533" width="6.3149%" height="15" fill="rgb(241,52,43)" fg:x="304" fg:w="79"/><text x="24.5506%" y="543.50">engine::..</text></g><g><title>engine::session::state::State::close (77 samples, 6.16%)</title><rect x="24.4604%" y="517" width="6.1551%" height="15" fill="rgb(236,82,9)" fg:x="306" fg:w="77"/><text x="24.7104%" y="527.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (77 samples, 6.16%)</title><rect x="24.4604%" y="501" width="6.1551%" height="15" fill="rgb(241,119,0)" fg:x="306" fg:w="77"/><text x="24.7104%" y="511.50">engine::..</text></g><g><title>core::iter::adapters::try_process (76 samples, 6.08%)</title><rect x="24.5404%" y="485" width="6.0751%" height="15" fill="rgb(221,19,22)" fg:x="307" fg:w="76"/><text x="24.7904%" y="495.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (76 samples, 6.08%)</title><rect x="24.5404%" y="469" width="6.0751%" height="15" fill="rgb(254,144,35)" fg:x="307" fg:w="76"/><text x="24.7904%" y="479.50">&lt;alloc::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (75 samples, 6.00%)</title><rect x="24.6203%" y="453" width="5.9952%" height="15" fill="rgb(246,132,30)" fg:x="308" fg:w="75"/><text x="24.8703%" y="463.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (35 samples, 2.80%)</title><rect x="27.8177%" y="437" width="2.7978%" height="15" fill="rgb(234,69,28)" fg:x="348" fg:w="35"/><text x="28.0677%" y="447.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.24%)</title><rect x="28.3773%" y="421" width="2.2382%" height="15" fill="rgb(219,106,47)" fg:x="355" fg:w="28"/><text x="28.6273%" y="431.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.16%)</title><rect x="28.4572%" y="405" width="2.1583%" height="15" fill="rgb(218,79,24)" fg:x="356" fg:w="27"/><text x="28.7072%" y="415.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.44%)</title><rect x="29.1767%" y="389" width="1.4388%" height="15" fill="rgb(225,26,21)" fg:x="365" fg:w="18"/><text x="29.4267%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (15 samples, 1.20%)</title><rect x="29.4165%" y="373" width="1.1990%" height="15" fill="rgb(217,68,49)" fg:x="368" fg:w="15"/><text x="29.6665%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="30.4556%" y="357" width="0.1599%" height="15" fill="rgb(220,204,28)" fg:x="381" fg:w="2"/><text x="30.7056%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5356%" y="341" width="0.0799%" height="15" fill="rgb(237,208,43)" fg:x="382" fg:w="1"/><text x="30.7856%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="30.6155%" y="533" width="0.0799%" height="15" fill="rgb(213,97,42)" fg:x="383" fg:w="1"/><text x="30.8655%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="30.6155%" y="517" width="0.0799%" height="15" fill="rgb(238,96,52)" fg:x="383" fg:w="1"/><text x="30.8655%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.6155%" y="501" width="0.0799%" height="15" fill="rgb(228,14,13)" fg:x="383" fg:w="1"/><text x="30.8655%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.6155%" y="485" width="0.0799%" height="15" fill="rgb(219,123,13)" fg:x="383" fg:w="1"/><text x="30.8655%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.6155%" y="469" width="0.0799%" height="15" fill="rgb(216,144,17)" fg:x="383" fg:w="1"/><text x="30.8655%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="30.7754%" y="517" width="0.0799%" height="15" fill="rgb(230,228,29)" fg:x="385" fg:w="1"/><text x="31.0254%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="30.7754%" y="501" width="0.0799%" height="15" fill="rgb(233,18,5)" fg:x="385" fg:w="1"/><text x="31.0254%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.7754%" y="485" width="0.0799%" height="15" fill="rgb(233,197,12)" fg:x="385" fg:w="1"/><text x="31.0254%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.7754%" y="469" width="0.0799%" height="15" fill="rgb(234,140,29)" fg:x="385" fg:w="1"/><text x="31.0254%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.7754%" y="453" width="0.0799%" height="15" fill="rgb(233,113,19)" fg:x="385" fg:w="1"/><text x="31.0254%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.7754%" y="437" width="0.0799%" height="15" fill="rgb(246,209,13)" fg:x="385" fg:w="1"/><text x="31.0254%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="30.7754%" y="421" width="0.0799%" height="15" fill="rgb(242,79,54)" fg:x="385" fg:w="1"/><text x="31.0254%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="30.7754%" y="405" width="0.0799%" height="15" fill="rgb(219,73,16)" fg:x="385" fg:w="1"/><text x="31.0254%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="30.7754%" y="389" width="0.0799%" height="15" fill="rgb(224,52,10)" fg:x="385" fg:w="1"/><text x="31.0254%" y="399.50"></text></g><g><title>plugins_core::build::Build::new (4 samples, 0.32%)</title><rect x="30.6155%" y="549" width="0.3197%" height="15" fill="rgb(237,179,5)" fg:x="383" fg:w="4"/><text x="30.8655%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="30.6954%" y="533" width="0.2398%" height="15" fill="rgb(231,20,6)" fg:x="384" fg:w="3"/><text x="30.9454%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="30.8553%" y="517" width="0.0799%" height="15" fill="rgb(253,171,45)" fg:x="386" fg:w="1"/><text x="31.1053%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8553%" y="501" width="0.0799%" height="15" fill="rgb(230,75,49)" fg:x="386" fg:w="1"/><text x="31.1053%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.0152%" y="469" width="0.0799%" height="15" fill="rgb(216,83,46)" fg:x="388" fg:w="1"/><text x="31.2652%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0152%" y="453" width="0.0799%" height="15" fill="rgb(236,56,9)" fg:x="388" fg:w="1"/><text x="31.2652%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0152%" y="437" width="0.0799%" height="15" fill="rgb(215,28,34)" fg:x="388" fg:w="1"/><text x="31.2652%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.0152%" y="421" width="0.0799%" height="15" fill="rgb(230,222,20)" fg:x="388" fg:w="1"/><text x="31.2652%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.0152%" y="405" width="0.0799%" height="15" fill="rgb(235,209,51)" fg:x="388" fg:w="1"/><text x="31.2652%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.0152%" y="389" width="0.0799%" height="15" fill="rgb(235,167,1)" fg:x="388" fg:w="1"/><text x="31.2652%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0152%" y="373" width="0.0799%" height="15" fill="rgb(248,220,0)" fg:x="388" fg:w="1"/><text x="31.2652%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0152%" y="357" width="0.0799%" height="15" fill="rgb(239,0,18)" fg:x="388" fg:w="1"/><text x="31.2652%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.0152%" y="341" width="0.0799%" height="15" fill="rgb(229,179,11)" fg:x="388" fg:w="1"/><text x="31.2652%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.0152%" y="325" width="0.0799%" height="15" fill="rgb(226,116,53)" fg:x="388" fg:w="1"/><text x="31.2652%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.0152%" y="309" width="0.0799%" height="15" fill="rgb(218,1,49)" fg:x="388" fg:w="1"/><text x="31.2652%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.0152%" y="293" width="0.0799%" height="15" fill="rgb(208,184,47)" fg:x="388" fg:w="1"/><text x="31.2652%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.0152%" y="277" width="0.0799%" height="15" fill="rgb(238,174,3)" fg:x="388" fg:w="1"/><text x="31.2652%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.0152%" y="501" width="0.1599%" height="15" fill="rgb(247,188,6)" fg:x="388" fg:w="2"/><text x="31.2652%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.0152%" y="485" width="0.1599%" height="15" fill="rgb(211,165,46)" fg:x="388" fg:w="2"/><text x="31.2652%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0951%" y="469" width="0.0799%" height="15" fill="rgb(222,190,10)" fg:x="389" fg:w="1"/><text x="31.3451%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0951%" y="453" width="0.0799%" height="15" fill="rgb(206,185,3)" fg:x="389" fg:w="1"/><text x="31.3451%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.0951%" y="437" width="0.0799%" height="15" fill="rgb(244,125,37)" fg:x="389" fg:w="1"/><text x="31.3451%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.0951%" y="421" width="0.0799%" height="15" fill="rgb(211,43,7)" fg:x="389" fg:w="1"/><text x="31.3451%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.0951%" y="405" width="0.0799%" height="15" fill="rgb(250,41,42)" fg:x="389" fg:w="1"/><text x="31.3451%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0951%" y="389" width="0.0799%" height="15" fill="rgb(254,54,42)" fg:x="389" fg:w="1"/><text x="31.3451%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0951%" y="373" width="0.0799%" height="15" fill="rgb(213,71,43)" fg:x="389" fg:w="1"/><text x="31.3451%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.0951%" y="357" width="0.0799%" height="15" fill="rgb(249,3,44)" fg:x="389" fg:w="1"/><text x="31.3451%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.0951%" y="341" width="0.0799%" height="15" fill="rgb(229,80,41)" fg:x="389" fg:w="1"/><text x="31.3451%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.0951%" y="325" width="0.0799%" height="15" fill="rgb(231,25,28)" fg:x="389" fg:w="1"/><text x="31.3451%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.0951%" y="309" width="0.0799%" height="15" fill="rgb(208,79,48)" fg:x="389" fg:w="1"/><text x="31.3451%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="31.0951%" y="293" width="0.0799%" height="15" fill="rgb(207,196,38)" fg:x="389" fg:w="1"/><text x="31.3451%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="31.0951%" y="277" width="0.0799%" height="15" fill="rgb(228,105,49)" fg:x="389" fg:w="1"/><text x="31.3451%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1751%" y="485" width="0.0799%" height="15" fill="rgb(237,99,15)" fg:x="390" fg:w="1"/><text x="31.4251%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1751%" y="469" width="0.0799%" height="15" fill="rgb(224,207,46)" fg:x="390" fg:w="1"/><text x="31.4251%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.1751%" y="453" width="0.0799%" height="15" fill="rgb(249,117,50)" fg:x="390" fg:w="1"/><text x="31.4251%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.1751%" y="437" width="0.0799%" height="15" fill="rgb(248,17,13)" fg:x="390" fg:w="1"/><text x="31.4251%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.1751%" y="421" width="0.0799%" height="15" fill="rgb(228,187,36)" fg:x="390" fg:w="1"/><text x="31.4251%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1751%" y="405" width="0.0799%" height="15" fill="rgb(234,132,20)" fg:x="390" fg:w="1"/><text x="31.4251%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1751%" y="389" width="0.0799%" height="15" fill="rgb(209,170,46)" fg:x="390" fg:w="1"/><text x="31.4251%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.1751%" y="373" width="0.0799%" height="15" fill="rgb(237,23,19)" fg:x="390" fg:w="1"/><text x="31.4251%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.1751%" y="357" width="0.0799%" height="15" fill="rgb(227,21,26)" fg:x="390" fg:w="1"/><text x="31.4251%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.1751%" y="341" width="0.0799%" height="15" fill="rgb(222,220,48)" fg:x="390" fg:w="1"/><text x="31.4251%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.1751%" y="325" width="0.0799%" height="15" fill="rgb(214,9,16)" fg:x="390" fg:w="1"/><text x="31.4251%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.1751%" y="501" width="0.1599%" height="15" fill="rgb(209,73,30)" fg:x="390" fg:w="2"/><text x="31.4251%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2550%" y="485" width="0.0799%" height="15" fill="rgb(207,20,33)" fg:x="391" fg:w="1"/><text x="31.5050%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3349%" y="501" width="0.0799%" height="15" fill="rgb(219,153,12)" fg:x="392" fg:w="1"/><text x="31.5849%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.4948%" y="437" width="0.0799%" height="15" fill="rgb(235,97,25)" fg:x="394" fg:w="1"/><text x="31.7448%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.4948%" y="421" width="0.0799%" height="15" fill="rgb(244,30,34)" fg:x="394" fg:w="1"/><text x="31.7448%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="31.0152%" y="533" width="0.6395%" height="15" fill="rgb(214,106,45)" fg:x="388" fg:w="8"/><text x="31.2652%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (8 samples, 0.64%)</title><rect x="31.0152%" y="517" width="0.6395%" height="15" fill="rgb(226,41,9)" fg:x="388" fg:w="8"/><text x="31.2652%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="31.4149%" y="501" width="0.2398%" height="15" fill="rgb(253,139,29)" fg:x="393" fg:w="3"/><text x="31.6649%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.4149%" y="485" width="0.2398%" height="15" fill="rgb(213,205,39)" fg:x="393" fg:w="3"/><text x="31.6649%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="31.4149%" y="469" width="0.2398%" height="15" fill="rgb(209,27,10)" fg:x="393" fg:w="3"/><text x="31.6649%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.4149%" y="453" width="0.2398%" height="15" fill="rgb(249,142,16)" fg:x="393" fg:w="3"/><text x="31.6649%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.5747%" y="437" width="0.0799%" height="15" fill="rgb(242,65,12)" fg:x="395" fg:w="1"/><text x="31.8247%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5747%" y="421" width="0.0799%" height="15" fill="rgb(232,48,10)" fg:x="395" fg:w="1"/><text x="31.8247%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5747%" y="405" width="0.0799%" height="15" fill="rgb(253,67,19)" fg:x="395" fg:w="1"/><text x="31.8247%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="31.6547%" y="517" width="0.1599%" height="15" fill="rgb(227,93,29)" fg:x="396" fg:w="2"/><text x="31.9047%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.7346%" y="501" width="0.0799%" height="15" fill="rgb(226,189,53)" fg:x="397" fg:w="1"/><text x="31.9846%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.7346%" y="485" width="0.0799%" height="15" fill="rgb(223,224,1)" fg:x="397" fg:w="1"/><text x="31.9846%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.7346%" y="469" width="0.0799%" height="15" fill="rgb(221,84,32)" fg:x="397" fg:w="1"/><text x="31.9846%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.7346%" y="453" width="0.0799%" height="15" fill="rgb(214,189,28)" fg:x="397" fg:w="1"/><text x="31.9846%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.7346%" y="437" width="0.0799%" height="15" fill="rgb(234,7,52)" fg:x="397" fg:w="1"/><text x="31.9846%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.7346%" y="421" width="0.0799%" height="15" fill="rgb(249,73,31)" fg:x="397" fg:w="1"/><text x="31.9846%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.7346%" y="405" width="0.0799%" height="15" fill="rgb(253,153,41)" fg:x="397" fg:w="1"/><text x="31.9846%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.7346%" y="389" width="0.0799%" height="15" fill="rgb(249,52,34)" fg:x="397" fg:w="1"/><text x="31.9846%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="31.8145%" y="517" width="0.0799%" height="15" fill="rgb(236,177,47)" fg:x="398" fg:w="1"/><text x="32.0645%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="31.8145%" y="501" width="0.0799%" height="15" fill="rgb(252,185,45)" fg:x="398" fg:w="1"/><text x="32.0645%" y="511.50"></text></g><g><title>engine::session::Session::load_entity (2 samples, 0.16%)</title><rect x="31.8945%" y="517" width="0.1599%" height="15" fill="rgb(251,15,30)" fg:x="399" fg:w="2"/><text x="32.1445%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="31.8945%" y="501" width="0.1599%" height="15" fill="rgb(233,31,4)" fg:x="399" fg:w="2"/><text x="32.1445%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.9744%" y="485" width="0.0799%" height="15" fill="rgb(254,44,24)" fg:x="400" fg:w="1"/><text x="32.2244%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.0544%" y="453" width="0.0799%" height="15" fill="rgb(218,54,1)" fg:x="401" fg:w="1"/><text x="32.3044%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.0544%" y="437" width="0.0799%" height="15" fill="rgb(243,209,39)" fg:x="401" fg:w="1"/><text x="32.3044%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.0544%" y="421" width="0.0799%" height="15" fill="rgb(206,75,33)" fg:x="401" fg:w="1"/><text x="32.3044%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.0544%" y="405" width="0.0799%" height="15" fill="rgb(223,108,18)" fg:x="401" fg:w="1"/><text x="32.3044%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.0544%" y="389" width="0.0799%" height="15" fill="rgb(244,89,31)" fg:x="401" fg:w="1"/><text x="32.3044%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.0544%" y="373" width="0.0799%" height="15" fill="rgb(222,167,27)" fg:x="401" fg:w="1"/><text x="32.3044%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.0544%" y="357" width="0.0799%" height="15" fill="rgb(247,41,16)" fg:x="401" fg:w="1"/><text x="32.3044%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.0544%" y="341" width="0.0799%" height="15" fill="rgb(233,168,40)" fg:x="401" fg:w="1"/><text x="32.3044%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.0544%" y="325" width="0.0799%" height="15" fill="rgb(205,211,8)" fg:x="401" fg:w="1"/><text x="32.3044%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.0544%" y="309" width="0.0799%" height="15" fill="rgb(238,105,11)" fg:x="401" fg:w="1"/><text x="32.3044%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.0544%" y="293" width="0.0799%" height="15" fill="rgb(223,142,52)" fg:x="401" fg:w="1"/><text x="32.3044%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.0544%" y="277" width="0.0799%" height="15" fill="rgb(238,51,33)" fg:x="401" fg:w="1"/><text x="32.3044%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.0544%" y="261" width="0.0799%" height="15" fill="rgb(231,188,43)" fg:x="401" fg:w="1"/><text x="32.3044%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.0544%" y="245" width="0.0799%" height="15" fill="rgb(216,92,17)" fg:x="401" fg:w="1"/><text x="32.3044%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0544%" y="229" width="0.0799%" height="15" fill="rgb(228,2,40)" fg:x="401" fg:w="1"/><text x="32.3044%" y="239.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="32.0544%" y="469" width="0.1599%" height="15" fill="rgb(226,73,15)" fg:x="401" fg:w="2"/><text x="32.3044%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.1343%" y="453" width="0.0799%" height="15" fill="rgb(227,66,46)" fg:x="402" fg:w="1"/><text x="32.3843%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1343%" y="437" width="0.0799%" height="15" fill="rgb(209,71,6)" fg:x="402" fg:w="1"/><text x="32.3843%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.1343%" y="421" width="0.0799%" height="15" fill="rgb(246,100,25)" fg:x="402" fg:w="1"/><text x="32.3843%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1343%" y="405" width="0.0799%" height="15" fill="rgb(248,185,27)" fg:x="402" fg:w="1"/><text x="32.3843%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.1343%" y="389" width="0.0799%" height="15" fill="rgb(225,118,47)" fg:x="402" fg:w="1"/><text x="32.3843%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="32.0544%" y="501" width="0.3197%" height="15" fill="rgb(220,185,44)" fg:x="401" fg:w="4"/><text x="32.3044%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.32%)</title><rect x="32.0544%" y="485" width="0.3197%" height="15" fill="rgb(227,95,24)" fg:x="401" fg:w="4"/><text x="32.3044%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="32.2142%" y="469" width="0.1599%" height="15" fill="rgb(252,84,24)" fg:x="403" fg:w="2"/><text x="32.4642%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="32.2142%" y="453" width="0.1599%" height="15" fill="rgb(240,34,44)" fg:x="403" fg:w="2"/><text x="32.4642%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="32.2142%" y="437" width="0.1599%" height="15" fill="rgb(209,72,54)" fg:x="403" fg:w="2"/><text x="32.4642%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.2142%" y="421" width="0.1599%" height="15" fill="rgb(226,19,45)" fg:x="403" fg:w="2"/><text x="32.4642%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3741%" y="485" width="0.0799%" height="15" fill="rgb(246,7,45)" fg:x="405" fg:w="1"/><text x="32.6241%" y="495.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="32.3741%" y="501" width="0.1599%" height="15" fill="rgb(225,45,2)" fg:x="405" fg:w="2"/><text x="32.6241%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.4540%" y="485" width="0.0799%" height="15" fill="rgb(221,80,29)" fg:x="406" fg:w="1"/><text x="32.7040%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.4540%" y="469" width="0.0799%" height="15" fill="rgb(228,11,19)" fg:x="406" fg:w="1"/><text x="32.7040%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.5340%" y="469" width="0.0799%" height="15" fill="rgb(243,17,21)" fg:x="407" fg:w="1"/><text x="32.7840%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.5340%" y="453" width="0.0799%" height="15" fill="rgb(243,88,8)" fg:x="407" fg:w="1"/><text x="32.7840%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.5340%" y="437" width="0.0799%" height="15" fill="rgb(214,17,9)" fg:x="407" fg:w="1"/><text x="32.7840%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.5340%" y="421" width="0.0799%" height="15" fill="rgb(232,169,15)" fg:x="407" fg:w="1"/><text x="32.7840%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5340%" y="405" width="0.0799%" height="15" fill="rgb(232,86,53)" fg:x="407" fg:w="1"/><text x="32.7840%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="32.6139%" y="469" width="0.1599%" height="15" fill="rgb(222,100,4)" fg:x="408" fg:w="2"/><text x="32.8639%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.6139%" y="453" width="0.1599%" height="15" fill="rgb(253,151,38)" fg:x="408" fg:w="2"/><text x="32.8639%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.6139%" y="437" width="0.1599%" height="15" fill="rgb(238,215,29)" fg:x="408" fg:w="2"/><text x="32.8639%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="32.8537%" y="453" width="0.0799%" height="15" fill="rgb(205,128,53)" fg:x="411" fg:w="1"/><text x="33.1037%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="32.8537%" y="437" width="0.0799%" height="15" fill="rgb(248,183,14)" fg:x="411" fg:w="1"/><text x="33.1037%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.8537%" y="421" width="0.0799%" height="15" fill="rgb(244,172,35)" fg:x="411" fg:w="1"/><text x="33.1037%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.8537%" y="405" width="0.0799%" height="15" fill="rgb(234,93,19)" fg:x="411" fg:w="1"/><text x="33.1037%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.96%)</title><rect x="32.0544%" y="517" width="0.9592%" height="15" fill="rgb(227,109,7)" fg:x="401" fg:w="12"/><text x="32.3044%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="32.5340%" y="501" width="0.4796%" height="15" fill="rgb(233,136,54)" fg:x="407" fg:w="6"/><text x="32.7840%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="32.5340%" y="485" width="0.4796%" height="15" fill="rgb(233,19,40)" fg:x="407" fg:w="6"/><text x="32.7840%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="32.7738%" y="469" width="0.2398%" height="15" fill="rgb(247,41,18)" fg:x="410" fg:w="3"/><text x="33.0238%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9337%" y="453" width="0.0799%" height="15" fill="rgb(220,34,34)" fg:x="412" fg:w="1"/><text x="33.1837%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.44%)</title><rect x="31.6547%" y="533" width="1.4388%" height="15" fill="rgb(222,135,32)" fg:x="396" fg:w="18"/><text x="31.9047%" y="543.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="33.0136%" y="517" width="0.0799%" height="15" fill="rgb(214,80,19)" fg:x="413" fg:w="1"/><text x="33.2636%" y="527.50"></text></g><g><title>plugins_core::build::Build::save (29 samples, 2.32%)</title><rect x="30.9353%" y="549" width="2.3181%" height="15" fill="rgb(234,54,46)" fg:x="387" fg:w="29"/><text x="31.1853%" y="559.50">p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.0935%" y="533" width="0.1599%" height="15" fill="rgb(251,48,23)" fg:x="414" fg:w="2"/><text x="33.3435%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.0935%" y="517" width="0.1599%" height="15" fill="rgb(254,109,52)" fg:x="414" fg:w="2"/><text x="33.3435%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.0935%" y="501" width="0.1599%" height="15" fill="rgb(240,186,19)" fg:x="414" fg:w="2"/><text x="33.3435%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1735%" y="485" width="0.0799%" height="15" fill="rgb(246,187,17)" fg:x="415" fg:w="1"/><text x="33.4235%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1735%" y="469" width="0.0799%" height="15" fill="rgb(212,21,5)" fg:x="415" fg:w="1"/><text x="33.4235%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1735%" y="453" width="0.0799%" height="15" fill="rgb(225,185,18)" fg:x="415" fg:w="1"/><text x="33.4235%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.1735%" y="437" width="0.0799%" height="15" fill="rgb(245,114,17)" fg:x="415" fg:w="1"/><text x="33.4235%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.1735%" y="421" width="0.0799%" height="15" fill="rgb(223,164,24)" fg:x="415" fg:w="1"/><text x="33.4235%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.1735%" y="405" width="0.0799%" height="15" fill="rgb(211,228,3)" fg:x="415" fg:w="1"/><text x="33.4235%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.1735%" y="389" width="0.0799%" height="15" fill="rgb(223,16,38)" fg:x="415" fg:w="1"/><text x="33.4235%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.1735%" y="373" width="0.0799%" height="15" fill="rgb(207,31,54)" fg:x="415" fg:w="1"/><text x="33.4235%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.1735%" y="357" width="0.0799%" height="15" fill="rgb(220,39,11)" fg:x="415" fg:w="1"/><text x="33.4235%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.1735%" y="341" width="0.0799%" height="15" fill="rgb(235,185,0)" fg:x="415" fg:w="1"/><text x="33.4235%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.1735%" y="325" width="0.0799%" height="15" fill="rgb(249,39,18)" fg:x="415" fg:w="1"/><text x="33.4235%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.1735%" y="309" width="0.0799%" height="15" fill="rgb(240,110,33)" fg:x="415" fg:w="1"/><text x="33.4235%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.1735%" y="293" width="0.0799%" height="15" fill="rgb(210,92,42)" fg:x="415" fg:w="1"/><text x="33.4235%" y="303.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="33.2534%" y="549" width="0.0799%" height="15" fill="rgb(218,215,28)" fg:x="416" fg:w="1"/><text x="33.5034%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="33.2534%" y="533" width="0.0799%" height="15" fill="rgb(238,215,36)" fg:x="416" fg:w="1"/><text x="33.5034%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="33.2534%" y="517" width="0.0799%" height="15" fill="rgb(220,31,10)" fg:x="416" fg:w="1"/><text x="33.5034%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="33.2534%" y="501" width="0.0799%" height="15" fill="rgb(212,93,14)" fg:x="416" fg:w="1"/><text x="33.5034%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="33.5731%" y="485" width="0.0799%" height="15" fill="rgb(254,207,2)" fg:x="420" fg:w="1"/><text x="33.8231%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="33.5731%" y="469" width="0.0799%" height="15" fill="rgb(205,57,44)" fg:x="420" fg:w="1"/><text x="33.8231%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="33.5731%" y="453" width="0.0799%" height="15" fill="rgb(226,151,19)" fg:x="420" fg:w="1"/><text x="33.8231%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.5731%" y="437" width="0.0799%" height="15" fill="rgb(230,72,30)" fg:x="420" fg:w="1"/><text x="33.8231%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6531%" y="453" width="0.0799%" height="15" fill="rgb(244,0,8)" fg:x="421" fg:w="1"/><text x="33.9031%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6531%" y="437" width="0.0799%" height="15" fill="rgb(230,192,6)" fg:x="421" fg:w="1"/><text x="33.9031%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="33.6531%" y="469" width="0.1599%" height="15" fill="rgb(233,207,13)" fg:x="421" fg:w="2"/><text x="33.9031%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7330%" y="453" width="0.0799%" height="15" fill="rgb(206,227,7)" fg:x="422" fg:w="1"/><text x="33.9830%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7330%" y="437" width="0.0799%" height="15" fill="rgb(213,217,25)" fg:x="422" fg:w="1"/><text x="33.9830%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.7330%" y="421" width="0.0799%" height="15" fill="rgb(249,75,4)" fg:x="422" fg:w="1"/><text x="33.9830%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7330%" y="405" width="0.0799%" height="15" fill="rgb(225,114,18)" fg:x="422" fg:w="1"/><text x="33.9830%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="33.5731%" y="517" width="0.3197%" height="15" fill="rgb(211,162,40)" fg:x="420" fg:w="4"/><text x="33.8231%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="33.5731%" y="501" width="0.3197%" height="15" fill="rgb(206,49,29)" fg:x="420" fg:w="4"/><text x="33.8231%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="33.6531%" y="485" width="0.2398%" height="15" fill="rgb(244,8,6)" fg:x="421" fg:w="3"/><text x="33.9031%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="33.8129%" y="469" width="0.0799%" height="15" fill="rgb(231,194,28)" fg:x="423" fg:w="1"/><text x="34.0629%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8129%" y="453" width="0.0799%" height="15" fill="rgb(210,69,5)" fg:x="423" fg:w="1"/><text x="34.0629%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="33.8929%" y="501" width="0.1599%" height="15" fill="rgb(216,186,12)" fg:x="424" fg:w="2"/><text x="34.1429%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.8929%" y="485" width="0.1599%" height="15" fill="rgb(238,61,15)" fg:x="424" fg:w="2"/><text x="34.1429%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="33.8929%" y="469" width="0.1599%" height="15" fill="rgb(226,104,1)" fg:x="424" fg:w="2"/><text x="34.1429%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="33.8929%" y="453" width="0.1599%" height="15" fill="rgb(229,128,15)" fg:x="424" fg:w="2"/><text x="34.1429%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.8929%" y="437" width="0.1599%" height="15" fill="rgb(247,110,15)" fg:x="424" fg:w="2"/><text x="34.1429%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.8929%" y="421" width="0.1599%" height="15" fill="rgb(210,74,48)" fg:x="424" fg:w="2"/><text x="34.1429%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (11 samples, 0.88%)</title><rect x="33.3333%" y="549" width="0.8793%" height="15" fill="rgb(246,121,10)" fg:x="417" fg:w="11"/><text x="33.5833%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (10 samples, 0.80%)</title><rect x="33.4133%" y="533" width="0.7994%" height="15" fill="rgb(214,156,37)" fg:x="418" fg:w="10"/><text x="33.6633%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="33.8929%" y="517" width="0.3197%" height="15" fill="rgb(214,210,34)" fg:x="424" fg:w="4"/><text x="34.1429%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="34.0528%" y="501" width="0.1599%" height="15" fill="rgb(237,93,35)" fg:x="426" fg:w="2"/><text x="34.3028%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.0528%" y="485" width="0.1599%" height="15" fill="rgb(206,36,8)" fg:x="426" fg:w="2"/><text x="34.3028%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="34.1327%" y="469" width="0.0799%" height="15" fill="rgb(208,151,12)" fg:x="427" fg:w="1"/><text x="34.3827%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.1327%" y="453" width="0.0799%" height="15" fill="rgb(225,133,52)" fg:x="427" fg:w="1"/><text x="34.3827%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1327%" y="437" width="0.0799%" height="15" fill="rgb(231,71,53)" fg:x="427" fg:w="1"/><text x="34.3827%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.2126%" y="517" width="0.0799%" height="15" fill="rgb(243,76,21)" fg:x="428" fg:w="1"/><text x="34.4626%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.2126%" y="501" width="0.0799%" height="15" fill="rgb(252,144,3)" fg:x="428" fg:w="1"/><text x="34.4626%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.4524%" y="485" width="0.0799%" height="15" fill="rgb(231,199,10)" fg:x="431" fg:w="1"/><text x="34.7024%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (6 samples, 0.48%)</title><rect x="34.2126%" y="533" width="0.4796%" height="15" fill="rgb(215,18,11)" fg:x="428" fg:w="6"/><text x="34.4626%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="34.2926%" y="517" width="0.3997%" height="15" fill="rgb(241,65,24)" fg:x="429" fg:w="5"/><text x="34.5426%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="34.2926%" y="501" width="0.3997%" height="15" fill="rgb(251,192,38)" fg:x="429" fg:w="5"/><text x="34.5426%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="34.5324%" y="485" width="0.1599%" height="15" fill="rgb(205,9,35)" fg:x="432" fg:w="2"/><text x="34.7824%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="34.5324%" y="469" width="0.1599%" height="15" fill="rgb(229,225,49)" fg:x="432" fg:w="2"/><text x="34.7824%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="34.5324%" y="453" width="0.1599%" height="15" fill="rgb(207,125,39)" fg:x="432" fg:w="2"/><text x="34.7824%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.5324%" y="437" width="0.1599%" height="15" fill="rgb(222,78,19)" fg:x="432" fg:w="2"/><text x="34.7824%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6123%" y="421" width="0.0799%" height="15" fill="rgb(248,207,20)" fg:x="433" fg:w="1"/><text x="34.8623%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (8 samples, 0.64%)</title><rect x="34.2126%" y="549" width="0.6395%" height="15" fill="rgb(205,103,49)" fg:x="428" fg:w="8"/><text x="34.4626%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="34.6922%" y="533" width="0.1599%" height="15" fill="rgb(216,42,28)" fg:x="434" fg:w="2"/><text x="34.9422%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="34.6922%" y="517" width="0.1599%" height="15" fill="rgb(213,205,53)" fg:x="434" fg:w="2"/><text x="34.9422%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.7722%" y="501" width="0.0799%" height="15" fill="rgb(239,140,53)" fg:x="435" fg:w="1"/><text x="35.0222%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.7722%" y="485" width="0.0799%" height="15" fill="rgb(248,95,9)" fg:x="435" fg:w="1"/><text x="35.0222%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="34.7722%" y="469" width="0.0799%" height="15" fill="rgb(254,58,47)" fg:x="435" fg:w="1"/><text x="35.0222%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.7722%" y="453" width="0.0799%" height="15" fill="rgb(234,227,14)" fg:x="435" fg:w="1"/><text x="35.0222%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7722%" y="437" width="0.0799%" height="15" fill="rgb(205,192,45)" fg:x="435" fg:w="1"/><text x="35.0222%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7722%" y="421" width="0.0799%" height="15" fill="rgb(253,187,31)" fg:x="435" fg:w="1"/><text x="35.0222%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.7722%" y="405" width="0.0799%" height="15" fill="rgb(222,6,32)" fg:x="435" fg:w="1"/><text x="35.0222%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="34.8521%" y="533" width="0.0799%" height="15" fill="rgb(249,190,19)" fg:x="436" fg:w="1"/><text x="35.1021%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="34.9321%" y="533" width="0.1599%" height="15" fill="rgb(251,28,20)" fg:x="437" fg:w="2"/><text x="35.1821%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="34.9321%" y="517" width="0.1599%" height="15" fill="rgb(210,223,40)" fg:x="437" fg:w="2"/><text x="35.1821%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="34.9321%" y="501" width="0.1599%" height="15" fill="rgb(216,137,22)" fg:x="437" fg:w="2"/><text x="35.1821%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="34.9321%" y="485" width="0.1599%" height="15" fill="rgb(247,39,34)" fg:x="437" fg:w="2"/><text x="35.1821%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (2 samples, 0.16%)</title><rect x="34.9321%" y="469" width="0.1599%" height="15" fill="rgb(239,43,50)" fg:x="437" fg:w="2"/><text x="35.1821%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="35.0919%" y="485" width="0.0799%" height="15" fill="rgb(241,212,9)" fg:x="439" fg:w="1"/><text x="35.3419%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="35.0919%" y="469" width="0.0799%" height="15" fill="rgb(205,8,2)" fg:x="439" fg:w="1"/><text x="35.3419%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.0919%" y="453" width="0.0799%" height="15" fill="rgb(217,173,54)" fg:x="439" fg:w="1"/><text x="35.3419%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.0919%" y="437" width="0.0799%" height="15" fill="rgb(208,149,52)" fg:x="439" fg:w="1"/><text x="35.3419%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0919%" y="421" width="0.0799%" height="15" fill="rgb(239,99,40)" fg:x="439" fg:w="1"/><text x="35.3419%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (148 samples, 11.83%)</title><rect x="23.4213%" y="565" width="11.8305%" height="15" fill="rgb(233,214,26)" fg:x="293" fg:w="148"/><text x="23.6713%" y="575.50">plugins_core::buil..</text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="34.8521%" y="549" width="0.3997%" height="15" fill="rgb(231,225,37)" fg:x="436" fg:w="5"/><text x="35.1021%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="35.0919%" y="533" width="0.1599%" height="15" fill="rgb(252,55,35)" fg:x="439" fg:w="2"/><text x="35.3419%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="35.0919%" y="517" width="0.1599%" height="15" fill="rgb(239,43,18)" fg:x="439" fg:w="2"/><text x="35.3419%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="35.0919%" y="501" width="0.1599%" height="15" fill="rgb(251,125,49)" fg:x="439" fg:w="2"/><text x="35.3419%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="35.1719%" y="485" width="0.0799%" height="15" fill="rgb(212,83,54)" fg:x="440" fg:w="1"/><text x="35.4219%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="35.1719%" y="469" width="0.0799%" height="15" fill="rgb(250,75,6)" fg:x="440" fg:w="1"/><text x="35.4219%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1719%" y="453" width="0.0799%" height="15" fill="rgb(252,36,40)" fg:x="440" fg:w="1"/><text x="35.4219%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.2518%" y="485" width="0.0799%" height="15" fill="rgb(230,91,51)" fg:x="441" fg:w="1"/><text x="35.5018%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="35.2518%" y="533" width="0.1599%" height="15" fill="rgb(212,92,28)" fg:x="441" fg:w="2"/><text x="35.5018%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.2518%" y="517" width="0.1599%" height="15" fill="rgb(227,13,22)" fg:x="441" fg:w="2"/><text x="35.5018%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="35.2518%" y="501" width="0.1599%" height="15" fill="rgb(239,204,32)" fg:x="441" fg:w="2"/><text x="35.5018%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.3317%" y="485" width="0.0799%" height="15" fill="rgb(228,49,41)" fg:x="442" fg:w="1"/><text x="35.5817%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.3317%" y="469" width="0.0799%" height="15" fill="rgb(206,95,6)" fg:x="442" fg:w="1"/><text x="35.5817%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="35.4117%" y="533" width="0.0799%" height="15" fill="rgb(251,20,14)" fg:x="443" fg:w="1"/><text x="35.6617%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="35.4916%" y="517" width="0.0799%" height="15" fill="rgb(214,99,28)" fg:x="444" fg:w="1"/><text x="35.7416%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="35.4916%" y="501" width="0.0799%" height="15" fill="rgb(239,122,54)" fg:x="444" fg:w="1"/><text x="35.7416%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="35.4916%" y="485" width="0.0799%" height="15" fill="rgb(218,217,46)" fg:x="444" fg:w="1"/><text x="35.7416%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="35.4916%" y="469" width="0.0799%" height="15" fill="rgb(249,106,28)" fg:x="444" fg:w="1"/><text x="35.7416%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.4916%" y="453" width="0.0799%" height="15" fill="rgb(250,158,18)" fg:x="444" fg:w="1"/><text x="35.7416%" y="463.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="35.4916%" y="533" width="0.1599%" height="15" fill="rgb(226,137,29)" fg:x="444" fg:w="2"/><text x="35.7416%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="35.5715%" y="517" width="0.0799%" height="15" fill="rgb(210,188,1)" fg:x="445" fg:w="1"/><text x="35.8215%" y="527.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="35.5715%" y="501" width="0.0799%" height="15" fill="rgb(227,84,42)" fg:x="445" fg:w="1"/><text x="35.8215%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.5715%" y="485" width="0.0799%" height="15" fill="rgb(222,147,48)" fg:x="445" fg:w="1"/><text x="35.8215%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6515%" y="485" width="0.0799%" height="15" fill="rgb(241,150,43)" fg:x="446" fg:w="1"/><text x="35.9015%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6515%" y="469" width="0.0799%" height="15" fill="rgb(206,139,52)" fg:x="446" fg:w="1"/><text x="35.9015%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6515%" y="453" width="0.0799%" height="15" fill="rgb(230,63,14)" fg:x="446" fg:w="1"/><text x="35.9015%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.6515%" y="437" width="0.0799%" height="15" fill="rgb(247,8,20)" fg:x="446" fg:w="1"/><text x="35.9015%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.6515%" y="421" width="0.0799%" height="15" fill="rgb(213,115,4)" fg:x="446" fg:w="1"/><text x="35.9015%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.6515%" y="405" width="0.0799%" height="15" fill="rgb(241,79,49)" fg:x="446" fg:w="1"/><text x="35.9015%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6515%" y="389" width="0.0799%" height="15" fill="rgb(222,42,35)" fg:x="446" fg:w="1"/><text x="35.9015%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6515%" y="373" width="0.0799%" height="15" fill="rgb(247,59,23)" fg:x="446" fg:w="1"/><text x="35.9015%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.6515%" y="357" width="0.0799%" height="15" fill="rgb(247,93,18)" fg:x="446" fg:w="1"/><text x="35.9015%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.6515%" y="341" width="0.0799%" height="15" fill="rgb(249,107,47)" fg:x="446" fg:w="1"/><text x="35.9015%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.6515%" y="325" width="0.0799%" height="15" fill="rgb(219,27,1)" fg:x="446" fg:w="1"/><text x="35.9015%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.6515%" y="309" width="0.0799%" height="15" fill="rgb(217,82,32)" fg:x="446" fg:w="1"/><text x="35.9015%" y="319.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="35.6515%" y="517" width="0.1599%" height="15" fill="rgb(250,129,47)" fg:x="446" fg:w="2"/><text x="35.9015%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="35.6515%" y="501" width="0.1599%" height="15" fill="rgb(253,88,35)" fg:x="446" fg:w="2"/><text x="35.9015%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.7314%" y="485" width="0.0799%" height="15" fill="rgb(245,221,14)" fg:x="447" fg:w="1"/><text x="35.9814%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7314%" y="469" width="0.0799%" height="15" fill="rgb(217,119,54)" fg:x="447" fg:w="1"/><text x="35.9814%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.7314%" y="453" width="0.0799%" height="15" fill="rgb(247,128,31)" fg:x="447" fg:w="1"/><text x="35.9814%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7314%" y="437" width="0.0799%" height="15" fill="rgb(211,99,22)" fg:x="447" fg:w="1"/><text x="35.9814%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.7314%" y="421" width="0.0799%" height="15" fill="rgb(212,20,17)" fg:x="447" fg:w="1"/><text x="35.9814%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7314%" y="405" width="0.0799%" height="15" fill="rgb(209,159,29)" fg:x="447" fg:w="1"/><text x="35.9814%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="35.8913%" y="501" width="0.0799%" height="15" fill="rgb(222,177,53)" fg:x="449" fg:w="1"/><text x="36.1413%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="35.8913%" y="485" width="0.0799%" height="15" fill="rgb(234,46,43)" fg:x="449" fg:w="1"/><text x="36.1413%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="35.8913%" y="469" width="0.0799%" height="15" fill="rgb(208,108,14)" fg:x="449" fg:w="1"/><text x="36.1413%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.8913%" y="453" width="0.0799%" height="15" fill="rgb(226,78,53)" fg:x="449" fg:w="1"/><text x="36.1413%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="35.9712%" y="501" width="0.0799%" height="15" fill="rgb(230,20,41)" fg:x="450" fg:w="1"/><text x="36.2212%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="35.9712%" y="485" width="0.0799%" height="15" fill="rgb(213,195,35)" fg:x="450" fg:w="1"/><text x="36.2212%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="36.0512%" y="485" width="0.0799%" height="15" fill="rgb(242,62,36)" fg:x="451" fg:w="1"/><text x="36.3012%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="36.0512%" y="469" width="0.0799%" height="15" fill="rgb(222,210,37)" fg:x="451" fg:w="1"/><text x="36.3012%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0512%" y="453" width="0.0799%" height="15" fill="rgb(232,107,19)" fg:x="451" fg:w="1"/><text x="36.3012%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0512%" y="437" width="0.0799%" height="15" fill="rgb(235,85,17)" fg:x="451" fg:w="1"/><text x="36.3012%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0512%" y="421" width="0.0799%" height="15" fill="rgb(219,195,31)" fg:x="451" fg:w="1"/><text x="36.3012%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="36.0512%" y="405" width="0.0799%" height="15" fill="rgb(231,183,30)" fg:x="451" fg:w="1"/><text x="36.3012%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0512%" y="389" width="0.0799%" height="15" fill="rgb(212,0,11)" fg:x="451" fg:w="1"/><text x="36.3012%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.1311%" y="453" width="0.0799%" height="15" fill="rgb(249,53,54)" fg:x="452" fg:w="1"/><text x="36.3811%" y="463.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.64%)</title><rect x="35.6515%" y="533" width="0.6395%" height="15" fill="rgb(211,118,13)" fg:x="446" fg:w="8"/><text x="35.9015%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="35.8114%" y="517" width="0.4796%" height="15" fill="rgb(237,42,9)" fg:x="448" fg:w="6"/><text x="36.0614%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="36.0512%" y="501" width="0.2398%" height="15" fill="rgb(227,68,32)" fg:x="451" fg:w="3"/><text x="36.3012%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="36.1311%" y="485" width="0.1599%" height="15" fill="rgb(238,10,7)" fg:x="452" fg:w="2"/><text x="36.3811%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.1311%" y="469" width="0.1599%" height="15" fill="rgb(224,42,12)" fg:x="452" fg:w="2"/><text x="36.3811%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="36.2110%" y="453" width="0.0799%" height="15" fill="rgb(252,190,5)" fg:x="453" fg:w="1"/><text x="36.4610%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.2110%" y="437" width="0.0799%" height="15" fill="rgb(220,214,39)" fg:x="453" fg:w="1"/><text x="36.4610%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2110%" y="421" width="0.0799%" height="15" fill="rgb(247,98,4)" fg:x="453" fg:w="1"/><text x="36.4610%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2110%" y="405" width="0.0799%" height="15" fill="rgb(211,60,12)" fg:x="453" fg:w="1"/><text x="36.4610%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="36.2910%" y="517" width="0.0799%" height="15" fill="rgb(224,42,10)" fg:x="454" fg:w="1"/><text x="36.5410%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="36.2910%" y="501" width="0.0799%" height="15" fill="rgb(217,167,4)" fg:x="454" fg:w="1"/><text x="36.5410%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.2910%" y="485" width="0.0799%" height="15" fill="rgb(253,18,17)" fg:x="454" fg:w="1"/><text x="36.5410%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="36.2910%" y="469" width="0.0799%" height="15" fill="rgb(249,186,44)" fg:x="454" fg:w="1"/><text x="36.5410%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.4508%" y="485" width="0.0799%" height="15" fill="rgb(254,124,54)" fg:x="456" fg:w="1"/><text x="36.7008%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="36.4508%" y="469" width="0.0799%" height="15" fill="rgb(220,124,39)" fg:x="456" fg:w="1"/><text x="36.7008%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="36.4508%" y="453" width="0.0799%" height="15" fill="rgb(225,96,46)" fg:x="456" fg:w="1"/><text x="36.7008%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (17 samples, 1.36%)</title><rect x="35.2518%" y="565" width="1.3589%" height="15" fill="rgb(221,106,12)" fg:x="441" fg:w="17"/><text x="35.5018%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.36%)</title><rect x="35.2518%" y="549" width="1.3589%" height="15" fill="rgb(227,133,23)" fg:x="441" fg:w="17"/><text x="35.5018%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (4 samples, 0.32%)</title><rect x="36.2910%" y="533" width="0.3197%" height="15" fill="rgb(216,44,52)" fg:x="454" fg:w="4"/><text x="36.5410%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="36.3709%" y="517" width="0.2398%" height="15" fill="rgb(239,149,7)" fg:x="455" fg:w="3"/><text x="36.6209%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="36.3709%" y="501" width="0.2398%" height="15" fill="rgb(211,157,31)" fg:x="455" fg:w="3"/><text x="36.6209%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5308%" y="485" width="0.0799%" height="15" fill="rgb(206,215,22)" fg:x="457" fg:w="1"/><text x="36.7808%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="36.6107%" y="533" width="0.1599%" height="15" fill="rgb(208,113,15)" fg:x="458" fg:w="2"/><text x="36.8607%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.6107%" y="517" width="0.1599%" height="15" fill="rgb(207,189,15)" fg:x="458" fg:w="2"/><text x="36.8607%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.6107%" y="501" width="0.1599%" height="15" fill="rgb(231,115,4)" fg:x="458" fg:w="2"/><text x="36.8607%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.6906%" y="485" width="0.0799%" height="15" fill="rgb(253,117,2)" fg:x="459" fg:w="1"/><text x="36.9406%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="36.7706%" y="533" width="0.0799%" height="15" fill="rgb(248,48,24)" fg:x="460" fg:w="1"/><text x="37.0206%" y="543.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="36.7706%" y="517" width="0.0799%" height="15" fill="rgb(241,28,46)" fg:x="460" fg:w="1"/><text x="37.0206%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7706%" y="501" width="0.0799%" height="15" fill="rgb(216,165,52)" fg:x="460" fg:w="1"/><text x="37.0206%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (5 samples, 0.40%)</title><rect x="36.6107%" y="549" width="0.3997%" height="15" fill="rgb(220,222,34)" fg:x="458" fg:w="5"/><text x="36.8607%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="36.8505%" y="533" width="0.1599%" height="15" fill="rgb(247,222,49)" fg:x="461" fg:w="2"/><text x="37.1005%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.9305%" y="517" width="0.0799%" height="15" fill="rgb(240,10,31)" fg:x="462" fg:w="1"/><text x="37.1805%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9305%" y="501" width="0.0799%" height="15" fill="rgb(221,199,35)" fg:x="462" fg:w="1"/><text x="37.1805%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9305%" y="485" width="0.0799%" height="15" fill="rgb(230,223,11)" fg:x="462" fg:w="1"/><text x="37.1805%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.0104%" y="549" width="0.0799%" height="15" fill="rgb(218,82,45)" fg:x="463" fg:w="1"/><text x="37.2604%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="37.0903%" y="549" width="0.1599%" height="15" fill="rgb(233,213,33)" fg:x="464" fg:w="2"/><text x="37.3403%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="37.0903%" y="533" width="0.1599%" height="15" fill="rgb(210,143,52)" fg:x="464" fg:w="2"/><text x="37.3403%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="37.0903%" y="517" width="0.1599%" height="15" fill="rgb(206,95,4)" fg:x="464" fg:w="2"/><text x="37.3403%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="37.0903%" y="501" width="0.1599%" height="15" fill="rgb(246,164,46)" fg:x="464" fg:w="2"/><text x="37.3403%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.1703%" y="485" width="0.0799%" height="15" fill="rgb(213,210,47)" fg:x="465" fg:w="1"/><text x="37.4203%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="37.2502%" y="533" width="0.0799%" height="15" fill="rgb(210,12,38)" fg:x="466" fg:w="1"/><text x="37.5002%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="37.4101%" y="517" width="0.0799%" height="15" fill="rgb(252,192,54)" fg:x="468" fg:w="1"/><text x="37.6601%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.4101%" y="501" width="0.0799%" height="15" fill="rgb(242,92,6)" fg:x="468" fg:w="1"/><text x="37.6601%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.4101%" y="485" width="0.0799%" height="15" fill="rgb(253,154,15)" fg:x="468" fg:w="1"/><text x="37.6601%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.4101%" y="469" width="0.0799%" height="15" fill="rgb(209,20,43)" fg:x="468" fg:w="1"/><text x="37.6601%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.4101%" y="453" width="0.0799%" height="15" fill="rgb(232,28,49)" fg:x="468" fg:w="1"/><text x="37.6601%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.4101%" y="437" width="0.0799%" height="15" fill="rgb(248,131,53)" fg:x="468" fg:w="1"/><text x="37.6601%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="37.4101%" y="421" width="0.0799%" height="15" fill="rgb(214,16,30)" fg:x="468" fg:w="1"/><text x="37.6601%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="37.4101%" y="405" width="0.0799%" height="15" fill="rgb(245,16,0)" fg:x="468" fg:w="1"/><text x="37.6601%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.4101%" y="389" width="0.0799%" height="15" fill="rgb(245,17,35)" fg:x="468" fg:w="1"/><text x="37.6601%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.4101%" y="373" width="0.0799%" height="15" fill="rgb(249,27,53)" fg:x="468" fg:w="1"/><text x="37.6601%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.4101%" y="357" width="0.0799%" height="15" fill="rgb(214,73,24)" fg:x="468" fg:w="1"/><text x="37.6601%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.4101%" y="341" width="0.0799%" height="15" fill="rgb(223,84,37)" fg:x="468" fg:w="1"/><text x="37.6601%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.4101%" y="325" width="0.0799%" height="15" fill="rgb(210,109,28)" fg:x="468" fg:w="1"/><text x="37.6601%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.4101%" y="309" width="0.0799%" height="15" fill="rgb(208,186,6)" fg:x="468" fg:w="1"/><text x="37.6601%" y="319.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="37.3301%" y="533" width="0.2398%" height="15" fill="rgb(235,201,30)" fg:x="467" fg:w="3"/><text x="37.5801%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="37.4900%" y="517" width="0.0799%" height="15" fill="rgb(216,198,48)" fg:x="469" fg:w="1"/><text x="37.7400%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.4900%" y="501" width="0.0799%" height="15" fill="rgb(254,186,25)" fg:x="469" fg:w="1"/><text x="37.7400%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.4900%" y="485" width="0.0799%" height="15" fill="rgb(227,87,5)" fg:x="469" fg:w="1"/><text x="37.7400%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4900%" y="469" width="0.0799%" height="15" fill="rgb(236,205,25)" fg:x="469" fg:w="1"/><text x="37.7400%" y="479.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="37.5699%" y="533" width="0.0799%" height="15" fill="rgb(229,99,32)" fg:x="470" fg:w="1"/><text x="37.8199%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="37.5699%" y="517" width="0.0799%" height="15" fill="rgb(231,177,31)" fg:x="470" fg:w="1"/><text x="37.8199%" y="527.50"></text></g><g><title>plugins_core::build::Build::new_world (6 samples, 0.48%)</title><rect x="37.2502%" y="549" width="0.4796%" height="15" fill="rgb(246,15,2)" fg:x="466" fg:w="6"/><text x="37.5002%" y="559.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="37.6499%" y="533" width="0.0799%" height="15" fill="rgb(207,39,15)" fg:x="471" fg:w="1"/><text x="37.8999%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.7298%" y="501" width="0.0799%" height="15" fill="rgb(207,44,9)" fg:x="472" fg:w="1"/><text x="37.9798%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.7298%" y="485" width="0.0799%" height="15" fill="rgb(225,224,33)" fg:x="472" fg:w="1"/><text x="37.9798%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.7298%" y="469" width="0.0799%" height="15" fill="rgb(252,151,3)" fg:x="472" fg:w="1"/><text x="37.9798%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7298%" y="453" width="0.0799%" height="15" fill="rgb(211,140,13)" fg:x="472" fg:w="1"/><text x="37.9798%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="37.8098%" y="437" width="0.0799%" height="15" fill="rgb(239,225,17)" fg:x="473" fg:w="1"/><text x="38.0598%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.8098%" y="421" width="0.0799%" height="15" fill="rgb(223,170,52)" fg:x="473" fg:w="1"/><text x="38.0598%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="37.7298%" y="533" width="0.2398%" height="15" fill="rgb(212,64,21)" fg:x="472" fg:w="3"/><text x="37.9798%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="37.7298%" y="517" width="0.2398%" height="15" fill="rgb(236,126,48)" fg:x="472" fg:w="3"/><text x="37.9798%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.8098%" y="501" width="0.1599%" height="15" fill="rgb(209,135,11)" fg:x="473" fg:w="2"/><text x="38.0598%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.8098%" y="485" width="0.1599%" height="15" fill="rgb(228,126,40)" fg:x="473" fg:w="2"/><text x="38.0598%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="37.8098%" y="469" width="0.1599%" height="15" fill="rgb(205,196,36)" fg:x="473" fg:w="2"/><text x="38.0598%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.8098%" y="453" width="0.1599%" height="15" fill="rgb(243,160,33)" fg:x="473" fg:w="2"/><text x="38.0598%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.8897%" y="437" width="0.0799%" height="15" fill="rgb(210,84,20)" fg:x="474" fg:w="1"/><text x="38.1397%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.8897%" y="421" width="0.0799%" height="15" fill="rgb(228,213,30)" fg:x="474" fg:w="1"/><text x="38.1397%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="38.0496%" y="517" width="0.2398%" height="15" fill="rgb(252,33,45)" fg:x="476" fg:w="3"/><text x="38.2996%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.2094%" y="501" width="0.0799%" height="15" fill="rgb(254,227,20)" fg:x="478" fg:w="1"/><text x="38.4594%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="38.3693%" y="469" width="0.1599%" height="15" fill="rgb(228,192,2)" fg:x="480" fg:w="2"/><text x="38.6193%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.3693%" y="453" width="0.1599%" height="15" fill="rgb(233,32,8)" fg:x="480" fg:w="2"/><text x="38.6193%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4492%" y="437" width="0.0799%" height="15" fill="rgb(220,146,47)" fg:x="481" fg:w="1"/><text x="38.6992%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.4492%" y="421" width="0.0799%" height="15" fill="rgb(246,194,1)" fg:x="481" fg:w="1"/><text x="38.6992%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="38.5292%" y="469" width="0.0799%" height="15" fill="rgb(218,203,9)" fg:x="482" fg:w="1"/><text x="38.7792%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.5292%" y="453" width="0.0799%" height="15" fill="rgb(237,97,14)" fg:x="482" fg:w="1"/><text x="38.7792%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5292%" y="437" width="0.0799%" height="15" fill="rgb(239,76,15)" fg:x="482" fg:w="1"/><text x="38.7792%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="38.3693%" y="501" width="0.3197%" height="15" fill="rgb(222,53,45)" fg:x="480" fg:w="4"/><text x="38.6193%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.32%)</title><rect x="38.3693%" y="485" width="0.3197%" height="15" fill="rgb(237,88,5)" fg:x="480" fg:w="4"/><text x="38.6193%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.6091%" y="469" width="0.0799%" height="15" fill="rgb(218,223,35)" fg:x="483" fg:w="1"/><text x="38.8591%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="38.6091%" y="453" width="0.0799%" height="15" fill="rgb(243,229,38)" fg:x="483" fg:w="1"/><text x="38.8591%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="38.6091%" y="437" width="0.0799%" height="15" fill="rgb(240,75,41)" fg:x="483" fg:w="1"/><text x="38.8591%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="38.6091%" y="421" width="0.0799%" height="15" fill="rgb(209,110,37)" fg:x="483" fg:w="1"/><text x="38.8591%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.6091%" y="405" width="0.0799%" height="15" fill="rgb(221,130,46)" fg:x="483" fg:w="1"/><text x="38.8591%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="38.6890%" y="501" width="0.0799%" height="15" fill="rgb(237,160,20)" fg:x="484" fg:w="1"/><text x="38.9390%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6890%" y="485" width="0.0799%" height="15" fill="rgb(234,126,24)" fg:x="484" fg:w="1"/><text x="38.9390%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8489%" y="469" width="0.0799%" height="15" fill="rgb(207,177,9)" fg:x="486" fg:w="1"/><text x="39.0989%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8489%" y="453" width="0.0799%" height="15" fill="rgb(231,191,33)" fg:x="486" fg:w="1"/><text x="39.0989%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="38.8489%" y="437" width="0.0799%" height="15" fill="rgb(207,42,1)" fg:x="486" fg:w="1"/><text x="39.0989%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="38.9289%" y="469" width="0.0799%" height="15" fill="rgb(218,34,50)" fg:x="487" fg:w="1"/><text x="39.1789%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.9289%" y="453" width="0.0799%" height="15" fill="rgb(254,126,39)" fg:x="487" fg:w="1"/><text x="39.1789%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="38.9289%" y="437" width="0.0799%" height="15" fill="rgb(251,17,26)" fg:x="487" fg:w="1"/><text x="39.1789%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="38.9289%" y="421" width="0.0799%" height="15" fill="rgb(252,215,34)" fg:x="487" fg:w="1"/><text x="39.1789%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="38.2894%" y="517" width="0.7994%" height="15" fill="rgb(217,120,44)" fg:x="479" fg:w="10"/><text x="38.5394%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="38.7690%" y="501" width="0.3197%" height="15" fill="rgb(211,31,11)" fg:x="485" fg:w="4"/><text x="39.0190%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="38.7690%" y="485" width="0.3197%" height="15" fill="rgb(222,69,51)" fg:x="485" fg:w="4"/><text x="39.0190%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="39.0088%" y="469" width="0.0799%" height="15" fill="rgb(215,229,42)" fg:x="488" fg:w="1"/><text x="39.2588%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.0088%" y="453" width="0.0799%" height="15" fill="rgb(212,102,15)" fg:x="488" fg:w="1"/><text x="39.2588%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (329 samples, 26.30%)</title><rect x="12.8697%" y="581" width="26.2990%" height="15" fill="rgb(205,179,41)" fg:x="161" fg:w="329"/><text x="13.1197%" y="591.50">&lt;tests::HoldingKeyInVessel as tests::World..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (32 samples, 2.56%)</title><rect x="36.6107%" y="565" width="2.5580%" height="15" fill="rgb(219,148,46)" fg:x="458" fg:w="32"/><text x="36.8607%" y="575.50">pl..</text></g><g><title>plugins_core::build::Build::save (18 samples, 1.44%)</title><rect x="37.7298%" y="549" width="1.4388%" height="15" fill="rgb(243,40,19)" fg:x="472" fg:w="18"/><text x="37.9798%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="37.9696%" y="533" width="1.1990%" height="15" fill="rgb(208,206,34)" fg:x="475" fg:w="15"/><text x="38.2196%" y="543.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="39.0887%" y="517" width="0.0799%" height="15" fill="rgb(244,184,38)" fg:x="489" fg:w="1"/><text x="39.3387%" y="527.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="39.0887%" y="501" width="0.0799%" height="15" fill="rgb(244,151,47)" fg:x="489" fg:w="1"/><text x="39.3387%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="39.2486%" y="565" width="0.2398%" height="15" fill="rgb(236,134,42)" fg:x="491" fg:w="3"/><text x="39.4986%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.4085%" y="549" width="0.0799%" height="15" fill="rgb(233,93,22)" fg:x="493" fg:w="1"/><text x="39.6585%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.4085%" y="533" width="0.0799%" height="15" fill="rgb(211,202,10)" fg:x="493" fg:w="1"/><text x="39.6585%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.4085%" y="517" width="0.0799%" height="15" fill="rgb(240,63,8)" fg:x="493" fg:w="1"/><text x="39.6585%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.4085%" y="501" width="0.0799%" height="15" fill="rgb(214,9,4)" fg:x="493" fg:w="1"/><text x="39.6585%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.4085%" y="485" width="0.0799%" height="15" fill="rgb(243,66,45)" fg:x="493" fg:w="1"/><text x="39.6585%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.4085%" y="469" width="0.0799%" height="15" fill="rgb(220,50,42)" fg:x="493" fg:w="1"/><text x="39.6585%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.4085%" y="453" width="0.0799%" height="15" fill="rgb(220,134,27)" fg:x="493" fg:w="1"/><text x="39.6585%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.4085%" y="437" width="0.0799%" height="15" fill="rgb(246,151,50)" fg:x="493" fg:w="1"/><text x="39.6585%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.4085%" y="421" width="0.0799%" height="15" fill="rgb(238,216,27)" fg:x="493" fg:w="1"/><text x="39.6585%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.4085%" y="405" width="0.0799%" height="15" fill="rgb(250,92,11)" fg:x="493" fg:w="1"/><text x="39.6585%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.4085%" y="389" width="0.0799%" height="15" fill="rgb(248,183,6)" fg:x="493" fg:w="1"/><text x="39.6585%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4085%" y="373" width="0.0799%" height="15" fill="rgb(211,204,50)" fg:x="493" fg:w="1"/><text x="39.6585%" y="383.50"></text></g><g><title>engine::session::Session::save_logs (1 samples, 0.08%)</title><rect x="39.4884%" y="565" width="0.0799%" height="15" fill="rgb(252,55,47)" fg:x="494" fg:w="1"/><text x="39.7384%" y="575.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="39.5683%" y="565" width="0.1599%" height="15" fill="rgb(240,198,32)" fg:x="495" fg:w="2"/><text x="39.8183%" y="575.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="39.5683%" y="549" width="0.1599%" height="15" fill="rgb(224,203,19)" fg:x="495" fg:w="2"/><text x="39.8183%" y="559.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="39.5683%" y="533" width="0.1599%" height="15" fill="rgb(205,27,16)" fg:x="495" fg:w="2"/><text x="39.8183%" y="543.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="39.5683%" y="517" width="0.1599%" height="15" fill="rgb(224,226,17)" fg:x="495" fg:w="2"/><text x="39.8183%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="39.5683%" y="501" width="0.1599%" height="15" fill="rgb(205,216,54)" fg:x="495" fg:w="2"/><text x="39.8183%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="39.5683%" y="485" width="0.1599%" height="15" fill="rgb(248,168,46)" fg:x="495" fg:w="2"/><text x="39.8183%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="39.5683%" y="469" width="0.1599%" height="15" fill="rgb(226,111,45)" fg:x="495" fg:w="2"/><text x="39.8183%" y="479.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="39.5683%" y="453" width="0.1599%" height="15" fill="rgb(231,15,9)" fg:x="495" fg:w="2"/><text x="39.8183%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.8881%" y="501" width="0.0799%" height="15" fill="rgb(243,168,3)" fg:x="499" fg:w="1"/><text x="40.1381%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.8881%" y="485" width="0.0799%" height="15" fill="rgb(221,220,54)" fg:x="499" fg:w="1"/><text x="40.1381%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.8881%" y="469" width="0.0799%" height="15" fill="rgb(232,174,38)" fg:x="499" fg:w="1"/><text x="40.1381%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="40.2078%" y="485" width="0.1599%" height="15" fill="rgb(205,14,38)" fg:x="503" fg:w="2"/><text x="40.4578%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="40.2078%" y="469" width="0.1599%" height="15" fill="rgb(234,89,19)" fg:x="503" fg:w="2"/><text x="40.4578%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="40.2078%" y="453" width="0.1599%" height="15" fill="rgb(216,68,51)" fg:x="503" fg:w="2"/><text x="40.4578%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="40.2078%" y="437" width="0.1599%" height="15" fill="rgb(213,49,2)" fg:x="503" fg:w="2"/><text x="40.4578%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="40.2078%" y="421" width="0.1599%" height="15" fill="rgb(242,146,30)" fg:x="503" fg:w="2"/><text x="40.4578%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="40.2078%" y="405" width="0.1599%" height="15" fill="rgb(224,188,11)" fg:x="503" fg:w="2"/><text x="40.4578%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="40.2078%" y="389" width="0.1599%" height="15" fill="rgb(213,159,11)" fg:x="503" fg:w="2"/><text x="40.4578%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.2078%" y="373" width="0.1599%" height="15" fill="rgb(229,13,31)" fg:x="503" fg:w="2"/><text x="40.4578%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="40.3677%" y="469" width="0.1599%" height="15" fill="rgb(209,103,11)" fg:x="505" fg:w="2"/><text x="40.6177%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="40.5276%" y="453" width="0.2398%" height="15" fill="rgb(206,3,4)" fg:x="507" fg:w="3"/><text x="40.7776%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.6875%" y="437" width="0.0799%" height="15" fill="rgb(252,10,49)" fg:x="509" fg:w="1"/><text x="40.9375%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="40.5276%" y="469" width="0.3197%" height="15" fill="rgb(217,160,32)" fg:x="507" fg:w="4"/><text x="40.7776%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.7674%" y="453" width="0.0799%" height="15" fill="rgb(249,196,0)" fg:x="510" fg:w="1"/><text x="41.0174%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="40.9273%" y="453" width="0.3997%" height="15" fill="rgb(213,17,48)" fg:x="512" fg:w="5"/><text x="41.1773%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.1671%" y="437" width="0.1599%" height="15" fill="rgb(206,42,46)" fg:x="515" fg:w="2"/><text x="41.4171%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.2470%" y="421" width="0.0799%" height="15" fill="rgb(212,105,24)" fg:x="516" fg:w="1"/><text x="41.4970%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.2470%" y="405" width="0.0799%" height="15" fill="rgb(243,216,30)" fg:x="516" fg:w="1"/><text x="41.4970%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="41.3269%" y="437" width="0.4796%" height="15" fill="rgb(207,121,3)" fg:x="517" fg:w="6"/><text x="41.5769%" y="447.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="41.3269%" y="421" width="0.4796%" height="15" fill="rgb(249,78,0)" fg:x="517" fg:w="6"/><text x="41.5769%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="41.4868%" y="405" width="0.3197%" height="15" fill="rgb(244,151,32)" fg:x="519" fg:w="4"/><text x="41.7368%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="41.6467%" y="389" width="0.1599%" height="15" fill="rgb(228,63,25)" fg:x="521" fg:w="2"/><text x="41.8967%" y="399.50"></text></g><g><title>ryu::pretty::format64 (3 samples, 0.24%)</title><rect x="41.8066%" y="421" width="0.2398%" height="15" fill="rgb(231,158,23)" fg:x="523" fg:w="3"/><text x="42.0566%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.0464%" y="421" width="0.0799%" height="15" fill="rgb(248,107,23)" fg:x="526" fg:w="1"/><text x="42.2964%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="42.0464%" y="405" width="0.0799%" height="15" fill="rgb(215,168,21)" fg:x="526" fg:w="1"/><text x="42.2964%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="42.1263%" y="421" width="0.3197%" height="15" fill="rgb(227,83,22)" fg:x="527" fg:w="4"/><text x="42.3763%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="42.1263%" y="405" width="0.3197%" height="15" fill="rgb(217,118,43)" fg:x="527" fg:w="4"/><text x="42.3763%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="42.1263%" y="389" width="0.3197%" height="15" fill="rgb(229,220,41)" fg:x="527" fg:w="4"/><text x="42.3763%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="42.2862%" y="373" width="0.1599%" height="15" fill="rgb(254,146,46)" fg:x="529" fg:w="2"/><text x="42.5362%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.6059%" y="405" width="0.0799%" height="15" fill="rgb(233,208,31)" fg:x="533" fg:w="1"/><text x="42.8559%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.7658%" y="357" width="0.0799%" height="15" fill="rgb(222,162,7)" fg:x="535" fg:w="1"/><text x="43.0158%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.7658%" y="341" width="0.0799%" height="15" fill="rgb(230,117,45)" fg:x="535" fg:w="1"/><text x="43.0158%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.7658%" y="325" width="0.0799%" height="15" fill="rgb(239,163,6)" fg:x="535" fg:w="1"/><text x="43.0158%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="42.7658%" y="309" width="0.0799%" height="15" fill="rgb(246,130,17)" fg:x="535" fg:w="1"/><text x="43.0158%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="42.6859%" y="405" width="0.2398%" height="15" fill="rgb(216,84,5)" fg:x="534" fg:w="3"/><text x="42.9359%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="42.6859%" y="389" width="0.2398%" height="15" fill="rgb(230,200,21)" fg:x="534" fg:w="3"/><text x="42.9359%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="42.6859%" y="373" width="0.2398%" height="15" fill="rgb(224,2,8)" fg:x="534" fg:w="3"/><text x="42.9359%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="42.8457%" y="357" width="0.0799%" height="15" fill="rgb(238,178,10)" fg:x="536" fg:w="1"/><text x="43.0957%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="41.8066%" y="437" width="1.2790%" height="15" fill="rgb(242,153,24)" fg:x="523" fg:w="16"/><text x="42.0566%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="42.4460%" y="421" width="0.6395%" height="15" fill="rgb(242,32,48)" fg:x="531" fg:w="8"/><text x="42.6960%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="42.9257%" y="405" width="0.1599%" height="15" fill="rgb(227,36,0)" fg:x="537" fg:w="2"/><text x="43.1757%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="42.9257%" y="389" width="0.1599%" height="15" fill="rgb(251,33,35)" fg:x="537" fg:w="2"/><text x="43.1757%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="42.9257%" y="373" width="0.1599%" height="15" fill="rgb(232,168,51)" fg:x="537" fg:w="2"/><text x="43.1757%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.0056%" y="357" width="0.0799%" height="15" fill="rgb(228,56,10)" fg:x="538" fg:w="1"/><text x="43.2556%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.0056%" y="341" width="0.0799%" height="15" fill="rgb(231,10,26)" fg:x="538" fg:w="1"/><text x="43.2556%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.16%)</title><rect x="41.3269%" y="453" width="2.1583%" height="15" fill="rgb(226,202,12)" fg:x="517" fg:w="27"/><text x="41.5769%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="43.0855%" y="437" width="0.3997%" height="15" fill="rgb(251,49,21)" fg:x="539" fg:w="5"/><text x="43.3355%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.4053%" y="421" width="0.0799%" height="15" fill="rgb(206,228,28)" fg:x="543" fg:w="1"/><text x="43.6553%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.52%)</title><rect x="40.3677%" y="485" width="3.5172%" height="15" fill="rgb(205,198,31)" fg:x="505" fg:w="44"/><text x="40.6177%" y="495.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.04%)</title><rect x="40.8473%" y="469" width="3.0376%" height="15" fill="rgb(213,69,1)" fg:x="511" fg:w="38"/><text x="41.0973%" y="479.50">ser..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="43.4852%" y="453" width="0.3997%" height="15" fill="rgb(209,177,9)" fg:x="544" fg:w="5"/><text x="43.7352%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="43.7250%" y="437" width="0.1599%" height="15" fill="rgb(227,119,30)" fg:x="547" fg:w="2"/><text x="43.9750%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.7250%" y="421" width="0.1599%" height="15" fill="rgb(234,106,41)" fg:x="547" fg:w="2"/><text x="43.9750%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="43.7250%" y="405" width="0.1599%" height="15" fill="rgb(244,103,47)" fg:x="547" fg:w="2"/><text x="43.9750%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.8050%" y="389" width="0.0799%" height="15" fill="rgb(212,211,25)" fg:x="548" fg:w="1"/><text x="44.0550%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.8849%" y="453" width="0.1599%" height="15" fill="rgb(208,63,53)" fg:x="549" fg:w="2"/><text x="44.1349%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.0448%" y="437" width="0.1599%" height="15" fill="rgb(213,176,21)" fg:x="551" fg:w="2"/><text x="44.2948%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.2046%" y="437" width="0.0799%" height="15" fill="rgb(243,124,12)" fg:x="553" fg:w="1"/><text x="44.4546%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.2046%" y="421" width="0.0799%" height="15" fill="rgb(239,2,35)" fg:x="553" fg:w="1"/><text x="44.4546%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3645%" y="421" width="0.0799%" height="15" fill="rgb(253,169,22)" fg:x="555" fg:w="1"/><text x="44.6145%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.4444%" y="405" width="0.1599%" height="15" fill="rgb(254,51,12)" fg:x="556" fg:w="2"/><text x="44.6944%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.6043%" y="405" width="0.1599%" height="15" fill="rgb(244,17,47)" fg:x="558" fg:w="2"/><text x="44.8543%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.6043%" y="389" width="0.1599%" height="15" fill="rgb(251,45,46)" fg:x="558" fg:w="2"/><text x="44.8543%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="43.8849%" y="485" width="0.9592%" height="15" fill="rgb(223,87,43)" fg:x="549" fg:w="12"/><text x="44.1349%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="43.8849%" y="469" width="0.9592%" height="15" fill="rgb(230,132,31)" fg:x="549" fg:w="12"/><text x="44.1349%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="44.0448%" y="453" width="0.7994%" height="15" fill="rgb(206,99,1)" fg:x="551" fg:w="10"/><text x="44.2948%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="44.2846%" y="437" width="0.5596%" height="15" fill="rgb(227,110,25)" fg:x="554" fg:w="7"/><text x="44.5346%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="44.4444%" y="421" width="0.3997%" height="15" fill="rgb(217,182,7)" fg:x="556" fg:w="5"/><text x="44.6944%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.7642%" y="405" width="0.0799%" height="15" fill="rgb(250,176,4)" fg:x="560" fg:w="1"/><text x="45.0142%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.7642%" y="389" width="0.0799%" height="15" fill="rgb(244,98,30)" fg:x="560" fg:w="1"/><text x="45.0142%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.8441%" y="437" width="0.0799%" height="15" fill="rgb(228,150,42)" fg:x="561" fg:w="1"/><text x="45.0941%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.0040%" y="421" width="0.1599%" height="15" fill="rgb(231,91,46)" fg:x="563" fg:w="2"/><text x="45.2540%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.1639%" y="421" width="0.0799%" height="15" fill="rgb(252,161,32)" fg:x="565" fg:w="1"/><text x="45.4139%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="45.3237%" y="405" width="0.1599%" height="15" fill="rgb(236,69,41)" fg:x="567" fg:w="2"/><text x="45.5737%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.4836%" y="389" width="0.1599%" height="15" fill="rgb(212,160,3)" fg:x="569" fg:w="2"/><text x="45.7336%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.6435%" y="389" width="0.0799%" height="15" fill="rgb(216,5,50)" fg:x="571" fg:w="1"/><text x="45.8935%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.7234%" y="357" width="0.1599%" height="15" fill="rgb(241,138,25)" fg:x="572" fg:w="2"/><text x="45.9734%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="45.7234%" y="389" width="0.2398%" height="15" fill="rgb(239,42,18)" fg:x="572" fg:w="3"/><text x="45.9734%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="45.7234%" y="373" width="0.2398%" height="15" fill="rgb(239,40,7)" fg:x="572" fg:w="3"/><text x="45.9734%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.8833%" y="357" width="0.0799%" height="15" fill="rgb(239,11,31)" fg:x="574" fg:w="1"/><text x="46.1333%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.28%)</title><rect x="44.8441%" y="453" width="1.2790%" height="15" fill="rgb(224,77,40)" fg:x="561" fg:w="16"/><text x="45.0941%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="44.9241%" y="437" width="1.1990%" height="15" fill="rgb(226,15,5)" fg:x="562" fg:w="15"/><text x="45.1741%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="45.2438%" y="421" width="0.8793%" height="15" fill="rgb(254,188,5)" fg:x="566" fg:w="11"/><text x="45.4938%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="45.4836%" y="405" width="0.6395%" height="15" fill="rgb(241,148,52)" fg:x="569" fg:w="8"/><text x="45.7336%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="45.9632%" y="389" width="0.1599%" height="15" fill="rgb(251,48,36)" fg:x="575" fg:w="2"/><text x="46.2132%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.0432%" y="373" width="0.0799%" height="15" fill="rgb(243,83,13)" fg:x="576" fg:w="1"/><text x="46.2932%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.1231%" y="453" width="0.0799%" height="15" fill="rgb(210,105,0)" fg:x="577" fg:w="1"/><text x="46.3731%" y="463.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPath as core::convert::From&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::from (1 samples, 0.08%)</title><rect x="46.1231%" y="437" width="0.0799%" height="15" fill="rgb(239,60,36)" fg:x="577" fg:w="1"/><text x="46.3731%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.1231%" y="421" width="0.0799%" height="15" fill="rgb(210,20,0)" fg:x="577" fg:w="1"/><text x="46.3731%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2030%" y="453" width="0.0799%" height="15" fill="rgb(244,26,53)" fg:x="578" fg:w="1"/><text x="46.4530%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="46.2830%" y="453" width="0.0799%" height="15" fill="rgb(240,100,49)" fg:x="579" fg:w="1"/><text x="46.5330%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.2830%" y="437" width="0.0799%" height="15" fill="rgb(250,46,45)" fg:x="579" fg:w="1"/><text x="46.5330%" y="447.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.2830%" y="421" width="0.0799%" height="15" fill="rgb(220,181,29)" fg:x="579" fg:w="1"/><text x="46.5330%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="46.4428%" y="389" width="0.0799%" height="15" fill="rgb(213,137,33)" fg:x="581" fg:w="1"/><text x="46.6928%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="46.4428%" y="373" width="0.0799%" height="15" fill="rgb(213,27,48)" fg:x="581" fg:w="1"/><text x="46.6928%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.4428%" y="357" width="0.0799%" height="15" fill="rgb(245,180,39)" fg:x="581" fg:w="1"/><text x="46.6928%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="46.5228%" y="389" width="0.0799%" height="15" fill="rgb(212,158,42)" fg:x="582" fg:w="1"/><text x="46.7728%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="46.5228%" y="373" width="0.0799%" height="15" fill="rgb(228,193,18)" fg:x="582" fg:w="1"/><text x="46.7728%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.5228%" y="357" width="0.0799%" height="15" fill="rgb(245,172,29)" fg:x="582" fg:w="1"/><text x="46.7728%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="46.3629%" y="437" width="0.3197%" height="15" fill="rgb(207,98,24)" fg:x="580" fg:w="4"/><text x="46.6129%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="46.4428%" y="421" width="0.2398%" height="15" fill="rgb(249,92,26)" fg:x="581" fg:w="3"/><text x="46.6928%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="46.4428%" y="405" width="0.2398%" height="15" fill="rgb(217,176,26)" fg:x="581" fg:w="3"/><text x="46.6928%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.6027%" y="389" width="0.0799%" height="15" fill="rgb(221,8,39)" fg:x="583" fg:w="1"/><text x="46.8527%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.6827%" y="437" width="0.0799%" height="15" fill="rgb(208,90,18)" fg:x="584" fg:w="1"/><text x="46.9327%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (25 samples, 2.00%)</title><rect x="44.8441%" y="469" width="1.9984%" height="15" fill="rgb(207,202,30)" fg:x="561" fg:w="25"/><text x="45.0941%" y="479.50">&lt;..</text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="46.3629%" y="453" width="0.4796%" height="15" fill="rgb(231,124,22)" fg:x="580" fg:w="6"/><text x="46.6129%" y="463.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="46.7626%" y="437" width="0.0799%" height="15" fill="rgb(206,15,5)" fg:x="585" fg:w="1"/><text x="47.0126%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7626%" y="421" width="0.0799%" height="15" fill="rgb(239,16,52)" fg:x="585" fg:w="1"/><text x="47.0126%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="47.0024%" y="437" width="0.4796%" height="15" fill="rgb(245,213,29)" fg:x="588" fg:w="6"/><text x="47.2524%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="47.3221%" y="421" width="0.1599%" height="15" fill="rgb(213,203,36)" fg:x="592" fg:w="2"/><text x="47.5721%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.5620%" y="405" width="0.0799%" height="15" fill="rgb(209,55,18)" fg:x="595" fg:w="1"/><text x="47.8120%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="47.4820%" y="437" width="0.2398%" height="15" fill="rgb(207,133,49)" fg:x="594" fg:w="3"/><text x="47.7320%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="47.5620%" y="421" width="0.1599%" height="15" fill="rgb(240,33,46)" fg:x="595" fg:w="2"/><text x="47.8120%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="47.6419%" y="405" width="0.0799%" height="15" fill="rgb(212,35,2)" fg:x="596" fg:w="1"/><text x="47.8919%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="47.7218%" y="437" width="0.0799%" height="15" fill="rgb(231,119,28)" fg:x="597" fg:w="1"/><text x="47.9718%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.7218%" y="421" width="0.0799%" height="15" fill="rgb(252,178,7)" fg:x="597" fg:w="1"/><text x="47.9718%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.7218%" y="405" width="0.0799%" height="15" fill="rgb(251,91,4)" fg:x="597" fg:w="1"/><text x="47.9718%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="48.3613%" y="405" width="0.1599%" height="15" fill="rgb(233,122,19)" fg:x="605" fg:w="2"/><text x="48.6113%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="48.5212%" y="405" width="0.0799%" height="15" fill="rgb(231,208,46)" fg:x="607" fg:w="1"/><text x="48.7712%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.6811%" y="389" width="0.1599%" height="15" fill="rgb(243,15,41)" fg:x="609" fg:w="2"/><text x="48.9311%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7610%" y="373" width="0.0799%" height="15" fill="rgb(210,32,43)" fg:x="610" fg:w="1"/><text x="49.0110%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="48.8409%" y="373" width="0.0799%" height="15" fill="rgb(222,177,15)" fg:x="611" fg:w="1"/><text x="49.0909%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.8409%" y="357" width="0.0799%" height="15" fill="rgb(244,121,34)" fg:x="611" fg:w="1"/><text x="49.0909%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.0008%" y="357" width="0.0799%" height="15" fill="rgb(234,138,4)" fg:x="613" fg:w="1"/><text x="49.2508%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.0807%" y="309" width="0.0799%" height="15" fill="rgb(240,97,48)" fg:x="614" fg:w="1"/><text x="49.3307%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0807%" y="293" width="0.0799%" height="15" fill="rgb(237,65,54)" fg:x="614" fg:w="1"/><text x="49.3307%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="48.8409%" y="389" width="0.4796%" height="15" fill="rgb(214,25,24)" fg:x="611" fg:w="6"/><text x="49.0909%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="48.9209%" y="373" width="0.3997%" height="15" fill="rgb(213,5,3)" fg:x="612" fg:w="5"/><text x="49.1709%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="49.0807%" y="357" width="0.2398%" height="15" fill="rgb(219,81,29)" fg:x="614" fg:w="3"/><text x="49.3307%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="49.0807%" y="341" width="0.2398%" height="15" fill="rgb(220,43,48)" fg:x="614" fg:w="3"/><text x="49.3307%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="49.0807%" y="325" width="0.2398%" height="15" fill="rgb(239,157,2)" fg:x="614" fg:w="3"/><text x="49.3307%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="49.1607%" y="309" width="0.1599%" height="15" fill="rgb(213,104,43)" fg:x="615" fg:w="2"/><text x="49.4107%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="49.2406%" y="293" width="0.0799%" height="15" fill="rgb(237,84,9)" fg:x="616" fg:w="1"/><text x="49.4906%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.4804%" y="373" width="0.0799%" height="15" fill="rgb(252,6,33)" fg:x="619" fg:w="1"/><text x="49.7304%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.6403%" y="357" width="0.1599%" height="15" fill="rgb(251,172,22)" fg:x="621" fg:w="2"/><text x="49.8903%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.6403%" y="341" width="0.1599%" height="15" fill="rgb(244,91,53)" fg:x="621" fg:w="2"/><text x="49.8903%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="50.1199%" y="341" width="0.0799%" height="15" fill="rgb(219,29,30)" fg:x="627" fg:w="1"/><text x="50.3699%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.4396%" y="309" width="0.1599%" height="15" fill="rgb(213,3,15)" fg:x="631" fg:w="2"/><text x="50.6896%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="50.1998%" y="325" width="0.4796%" height="15" fill="rgb(208,25,28)" fg:x="628" fg:w="6"/><text x="50.4498%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.5995%" y="309" width="0.0799%" height="15" fill="rgb(252,144,25)" fg:x="633" fg:w="1"/><text x="50.8495%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.16%)</title><rect x="48.6011%" y="405" width="2.1583%" height="15" fill="rgb(226,220,25)" fg:x="608" fg:w="27"/><text x="48.8511%" y="415.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.44%)</title><rect x="49.3205%" y="389" width="1.4388%" height="15" fill="rgb(212,131,28)" fg:x="617" fg:w="18"/><text x="49.5705%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="49.5604%" y="373" width="1.1990%" height="15" fill="rgb(219,143,52)" fg:x="620" fg:w="15"/><text x="49.8104%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="49.8002%" y="357" width="0.9592%" height="15" fill="rgb(215,56,7)" fg:x="623" fg:w="12"/><text x="50.0502%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="50.1998%" y="341" width="0.5596%" height="15" fill="rgb(239,59,51)" fg:x="628" fg:w="7"/><text x="50.4498%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="50.6795%" y="325" width="0.0799%" height="15" fill="rgb(209,215,4)" fg:x="634" fg:w="1"/><text x="50.9295%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6795%" y="309" width="0.0799%" height="15" fill="rgb(221,118,39)" fg:x="634" fg:w="1"/><text x="50.9295%" y="319.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (52 samples, 4.16%)</title><rect x="46.8425%" y="469" width="4.1567%" height="15" fill="rgb(236,6,44)" fg:x="586" fg:w="52"/><text x="47.0925%" y="479.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (52 samples, 4.16%)</title><rect x="46.8425%" y="453" width="4.1567%" height="15" fill="rgb(216,122,9)" fg:x="586" fg:w="52"/><text x="47.0925%" y="463.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (40 samples, 3.20%)</title><rect x="47.8018%" y="437" width="3.1974%" height="15" fill="rgb(244,134,42)" fg:x="598" fg:w="40"/><text x="48.0518%" y="447.50">ser..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (35 samples, 2.80%)</title><rect x="48.2014%" y="421" width="2.7978%" height="15" fill="rgb(209,189,35)" fg:x="603" fg:w="35"/><text x="48.4514%" y="431.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="50.7594%" y="405" width="0.2398%" height="15" fill="rgb(250,47,36)" fg:x="635" fg:w="3"/><text x="51.0094%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.8393%" y="389" width="0.1599%" height="15" fill="rgb(252,112,4)" fg:x="636" fg:w="2"/><text x="51.0893%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="51.4788%" y="293" width="0.1599%" height="15" fill="rgb(221,79,51)" fg:x="644" fg:w="2"/><text x="51.7288%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="51.4788%" y="277" width="0.1599%" height="15" fill="rgb(232,65,53)" fg:x="644" fg:w="2"/><text x="51.7288%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="51.4788%" y="261" width="0.1599%" height="15" fill="rgb(211,37,7)" fg:x="644" fg:w="2"/><text x="51.7288%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="51.4788%" y="245" width="0.1599%" height="15" fill="rgb(234,221,18)" fg:x="644" fg:w="2"/><text x="51.7288%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.5588%" y="229" width="0.0799%" height="15" fill="rgb(220,158,26)" fg:x="645" fg:w="1"/><text x="51.8088%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.5588%" y="213" width="0.0799%" height="15" fill="rgb(220,70,6)" fg:x="645" fg:w="1"/><text x="51.8088%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="51.4788%" y="325" width="0.2398%" height="15" fill="rgb(250,39,48)" fg:x="644" fg:w="3"/><text x="51.7288%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="51.4788%" y="309" width="0.2398%" height="15" fill="rgb(206,40,27)" fg:x="644" fg:w="3"/><text x="51.7288%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.6387%" y="293" width="0.0799%" height="15" fill="rgb(247,80,36)" fg:x="646" fg:w="1"/><text x="51.8887%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.6387%" y="277" width="0.0799%" height="15" fill="rgb(222,9,20)" fg:x="646" fg:w="1"/><text x="51.8887%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="51.7986%" y="293" width="0.2398%" height="15" fill="rgb(217,26,45)" fg:x="648" fg:w="3"/><text x="52.0486%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.9584%" y="277" width="0.0799%" height="15" fill="rgb(221,67,14)" fg:x="650" fg:w="1"/><text x="52.2084%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.9584%" y="261" width="0.0799%" height="15" fill="rgb(248,100,24)" fg:x="650" fg:w="1"/><text x="52.2084%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="51.7186%" y="309" width="0.3997%" height="15" fill="rgb(230,187,16)" fg:x="647" fg:w="5"/><text x="51.9686%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.0384%" y="293" width="0.0799%" height="15" fill="rgb(205,108,13)" fg:x="651" fg:w="1"/><text x="52.2884%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="51.3189%" y="341" width="1.0392%" height="15" fill="rgb(235,71,51)" fg:x="642" fg:w="13"/><text x="51.5689%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="51.7186%" y="325" width="0.6395%" height="15" fill="rgb(251,172,48)" fg:x="647" fg:w="8"/><text x="51.9686%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.1183%" y="309" width="0.2398%" height="15" fill="rgb(240,96,49)" fg:x="652" fg:w="3"/><text x="52.3683%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.1183%" y="293" width="0.2398%" height="15" fill="rgb(235,46,36)" fg:x="652" fg:w="3"/><text x="52.3683%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="52.1183%" y="277" width="0.2398%" height="15" fill="rgb(244,3,49)" fg:x="652" fg:w="3"/><text x="52.3683%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.3581%" y="341" width="0.0799%" height="15" fill="rgb(206,78,54)" fg:x="655" fg:w="1"/><text x="52.6081%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.3581%" y="325" width="0.0799%" height="15" fill="rgb(208,85,42)" fg:x="655" fg:w="1"/><text x="52.6081%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="51.0791%" y="373" width="1.4388%" height="15" fill="rgb(219,196,21)" fg:x="639" fg:w="18"/><text x="51.3291%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.28%)</title><rect x="51.2390%" y="357" width="1.2790%" height="15" fill="rgb(238,19,9)" fg:x="641" fg:w="16"/><text x="51.4890%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.4380%" y="341" width="0.0799%" height="15" fill="rgb(206,86,13)" fg:x="656" fg:w="1"/><text x="52.6880%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.4380%" y="325" width="0.0799%" height="15" fill="rgb(214,123,40)" fg:x="656" fg:w="1"/><text x="52.6880%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4380%" y="309" width="0.0799%" height="15" fill="rgb(243,53,5)" fg:x="656" fg:w="1"/><text x="52.6880%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="52.5180%" y="373" width="0.1599%" height="15" fill="rgb(254,186,31)" fg:x="657" fg:w="2"/><text x="52.7680%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.5979%" y="357" width="0.0799%" height="15" fill="rgb(221,216,25)" fg:x="658" fg:w="1"/><text x="52.8479%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.76%)</title><rect x="50.9992%" y="405" width="1.7586%" height="15" fill="rgb(248,107,42)" fg:x="638" fg:w="22"/><text x="51.2492%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.76%)</title><rect x="50.9992%" y="389" width="1.7586%" height="15" fill="rgb(221,85,43)" fg:x="638" fg:w="22"/><text x="51.2492%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6779%" y="373" width="0.0799%" height="15" fill="rgb(225,34,24)" fg:x="659" fg:w="1"/><text x="52.9279%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="52.7578%" y="405" width="0.1599%" height="15" fill="rgb(211,119,1)" fg:x="660" fg:w="2"/><text x="53.0078%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8377%" y="389" width="0.0799%" height="15" fill="rgb(254,216,46)" fg:x="661" fg:w="1"/><text x="53.0877%" y="399.50"></text></g><g><title>engine::session::Session::close (176 samples, 14.07%)</title><rect x="39.1687%" y="581" width="14.0687%" height="15" fill="rgb(238,11,38)" fg:x="490" fg:w="176"/><text x="39.4187%" y="591.50">engine::session::Sess..</text></g><g><title>engine::session::state::State::close (169 samples, 13.51%)</title><rect x="39.7282%" y="565" width="13.5092%" height="15" fill="rgb(233,50,15)" fg:x="497" fg:w="169"/><text x="39.9782%" y="575.50">engine::session::sta..</text></g><g><title>engine::session::state::State::flush_entities (168 samples, 13.43%)</title><rect x="39.8082%" y="549" width="13.4293%" height="15" fill="rgb(217,181,29)" fg:x="498" fg:w="168"/><text x="40.0582%" y="559.50">engine::session::sta..</text></g><g><title>core::iter::adapters::try_process (168 samples, 13.43%)</title><rect x="39.8082%" y="533" width="13.4293%" height="15" fill="rgb(214,56,3)" fg:x="498" fg:w="168"/><text x="40.0582%" y="543.50">core::iter::adapters..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (167 samples, 13.35%)</title><rect x="39.8881%" y="517" width="13.3493%" height="15" fill="rgb(230,69,45)" fg:x="499" fg:w="167"/><text x="40.1381%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (166 samples, 13.27%)</title><rect x="39.9680%" y="501" width="13.2694%" height="15" fill="rgb(224,201,50)" fg:x="500" fg:w="166"/><text x="40.2180%" y="511.50">engine::session::sta..</text></g><g><title>kernel::model::any_entity_changes (105 samples, 8.39%)</title><rect x="44.8441%" y="485" width="8.3933%" height="15" fill="rgb(217,228,18)" fg:x="561" fg:w="105"/><text x="45.0941%" y="495.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (28 samples, 2.24%)</title><rect x="50.9992%" y="469" width="2.2382%" height="15" fill="rgb(239,33,44)" fg:x="638" fg:w="28"/><text x="51.2492%" y="479.50">s..</text></g><g><title>serde_json::de::from_trait (28 samples, 2.24%)</title><rect x="50.9992%" y="453" width="2.2382%" height="15" fill="rgb(248,210,23)" fg:x="638" fg:w="28"/><text x="51.2492%" y="463.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.24%)</title><rect x="50.9992%" y="437" width="2.2382%" height="15" fill="rgb(253,135,8)" fg:x="638" fg:w="28"/><text x="51.2492%" y="447.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.24%)</title><rect x="50.9992%" y="421" width="2.2382%" height="15" fill="rgb(217,98,21)" fg:x="638" fg:w="28"/><text x="51.2492%" y="431.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="52.9177%" y="405" width="0.3197%" height="15" fill="rgb(253,130,21)" fg:x="662" fg:w="4"/><text x="53.1677%" y="415.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.3173%" y="517" width="0.0799%" height="15" fill="rgb(207,81,54)" fg:x="667" fg:w="1"/><text x="53.5673%" y="527.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="53.3173%" y="549" width="0.1599%" height="15" fill="rgb(232,48,33)" fg:x="667" fg:w="2"/><text x="53.5673%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="53.3173%" y="533" width="0.1599%" height="15" fill="rgb(211,9,35)" fg:x="667" fg:w="2"/><text x="53.5673%" y="543.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.3973%" y="517" width="0.0799%" height="15" fill="rgb(205,152,21)" fg:x="668" fg:w="1"/><text x="53.6473%" y="527.50"></text></g><g><title>&lt;plugins_rune::parser::RegisterActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="53.3973%" y="501" width="0.0799%" height="15" fill="rgb(249,21,27)" fg:x="668" fg:w="1"/><text x="53.6473%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="53.7170%" y="517" width="0.1599%" height="15" fill="rgb(252,29,24)" fg:x="672" fg:w="2"/><text x="53.9670%" y="527.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (2 samples, 0.16%)</title><rect x="53.8769%" y="517" width="0.1599%" height="15" fill="rgb(230,130,50)" fg:x="674" fg:w="2"/><text x="54.1269%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (2 samples, 0.16%)</title><rect x="53.8769%" y="501" width="0.1599%" height="15" fill="rgb(239,144,14)" fg:x="674" fg:w="2"/><text x="54.1269%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (2 samples, 0.16%)</title><rect x="53.8769%" y="485" width="0.1599%" height="15" fill="rgb(227,111,50)" fg:x="674" fg:w="2"/><text x="54.1269%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (2 samples, 0.16%)</title><rect x="53.8769%" y="469" width="0.1599%" height="15" fill="rgb(254,84,20)" fg:x="674" fg:w="2"/><text x="54.1269%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1966%" y="485" width="0.0799%" height="15" fill="rgb(232,90,48)" fg:x="678" fg:w="1"/><text x="54.4466%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="54.2766%" y="485" width="0.0799%" height="15" fill="rgb(253,63,47)" fg:x="679" fg:w="1"/><text x="54.5266%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="54.2766%" y="469" width="0.0799%" height="15" fill="rgb(251,146,35)" fg:x="679" fg:w="1"/><text x="54.5266%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.3565%" y="453" width="0.0799%" height="15" fill="rgb(229,192,35)" fg:x="680" fg:w="1"/><text x="54.6065%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.5164%" y="389" width="0.1599%" height="15" fill="rgb(225,68,9)" fg:x="682" fg:w="2"/><text x="54.7664%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.5164%" y="373" width="0.1599%" height="15" fill="rgb(214,97,34)" fg:x="682" fg:w="2"/><text x="54.7664%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.5164%" y="357" width="0.1599%" height="15" fill="rgb(253,31,26)" fg:x="682" fg:w="2"/><text x="54.7664%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.5164%" y="341" width="0.1599%" height="15" fill="rgb(225,151,47)" fg:x="682" fg:w="2"/><text x="54.7664%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="54.5164%" y="325" width="0.1599%" height="15" fill="rgb(206,185,9)" fg:x="682" fg:w="2"/><text x="54.7664%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="54.5164%" y="309" width="0.1599%" height="15" fill="rgb(249,65,17)" fg:x="682" fg:w="2"/><text x="54.7664%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="54.5164%" y="293" width="0.1599%" height="15" fill="rgb(220,110,10)" fg:x="682" fg:w="2"/><text x="54.7664%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.5164%" y="277" width="0.1599%" height="15" fill="rgb(222,198,49)" fg:x="682" fg:w="2"/><text x="54.7664%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.5164%" y="261" width="0.1599%" height="15" fill="rgb(239,81,13)" fg:x="682" fg:w="2"/><text x="54.7664%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="54.5164%" y="245" width="0.1599%" height="15" fill="rgb(216,128,11)" fg:x="682" fg:w="2"/><text x="54.7664%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="54.5164%" y="229" width="0.1599%" height="15" fill="rgb(247,156,8)" fg:x="682" fg:w="2"/><text x="54.7664%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="54.5164%" y="213" width="0.1599%" height="15" fill="rgb(219,173,1)" fg:x="682" fg:w="2"/><text x="54.7664%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="54.5164%" y="197" width="0.1599%" height="15" fill="rgb(227,42,24)" fg:x="682" fg:w="2"/><text x="54.7664%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.5164%" y="181" width="0.1599%" height="15" fill="rgb(253,219,50)" fg:x="682" fg:w="2"/><text x="54.7664%" y="191.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="54.5164%" y="405" width="0.2398%" height="15" fill="rgb(215,191,54)" fg:x="682" fg:w="3"/><text x="54.7664%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.6763%" y="389" width="0.0799%" height="15" fill="rgb(238,83,12)" fg:x="684" fg:w="1"/><text x="54.9263%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6763%" y="373" width="0.0799%" height="15" fill="rgb(205,124,9)" fg:x="684" fg:w="1"/><text x="54.9263%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.6763%" y="357" width="0.0799%" height="15" fill="rgb(253,174,7)" fg:x="684" fg:w="1"/><text x="54.9263%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6763%" y="341" width="0.0799%" height="15" fill="rgb(206,134,49)" fg:x="684" fg:w="1"/><text x="54.9263%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="54.7562%" y="341" width="0.3197%" height="15" fill="rgb(221,89,20)" fg:x="685" fg:w="4"/><text x="55.0062%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.8361%" y="325" width="0.2398%" height="15" fill="rgb(240,205,13)" fg:x="686" fg:w="3"/><text x="55.0861%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.8361%" y="309" width="0.2398%" height="15" fill="rgb(237,174,32)" fg:x="686" fg:w="3"/><text x="55.0861%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9960%" y="293" width="0.0799%" height="15" fill="rgb(226,12,15)" fg:x="688" fg:w="1"/><text x="55.2460%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.9960%" y="277" width="0.0799%" height="15" fill="rgb(245,160,52)" fg:x="688" fg:w="1"/><text x="55.2460%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.9960%" y="261" width="0.0799%" height="15" fill="rgb(253,80,21)" fg:x="688" fg:w="1"/><text x="55.2460%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9960%" y="245" width="0.0799%" height="15" fill="rgb(231,225,22)" fg:x="688" fg:w="1"/><text x="55.2460%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9960%" y="229" width="0.0799%" height="15" fill="rgb(253,185,12)" fg:x="688" fg:w="1"/><text x="55.2460%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.9960%" y="213" width="0.0799%" height="15" fill="rgb(234,197,21)" fg:x="688" fg:w="1"/><text x="55.2460%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.9960%" y="197" width="0.0799%" height="15" fill="rgb(210,47,30)" fg:x="688" fg:w="1"/><text x="55.2460%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.9960%" y="181" width="0.0799%" height="15" fill="rgb(246,139,27)" fg:x="688" fg:w="1"/><text x="55.2460%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9960%" y="165" width="0.0799%" height="15" fill="rgb(226,130,16)" fg:x="688" fg:w="1"/><text x="55.2460%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9960%" y="149" width="0.0799%" height="15" fill="rgb(237,208,20)" fg:x="688" fg:w="1"/><text x="55.2460%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.9960%" y="133" width="0.0799%" height="15" fill="rgb(245,186,28)" fg:x="688" fg:w="1"/><text x="55.2460%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.9960%" y="117" width="0.0799%" height="15" fill="rgb(238,105,39)" fg:x="688" fg:w="1"/><text x="55.2460%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.9960%" y="101" width="0.0799%" height="15" fill="rgb(253,228,11)" fg:x="688" fg:w="1"/><text x="55.2460%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.9960%" y="85" width="0.0799%" height="15" fill="rgb(224,136,38)" fg:x="688" fg:w="1"/><text x="55.2460%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9960%" y="69" width="0.0799%" height="15" fill="rgb(211,3,25)" fg:x="688" fg:w="1"/><text x="55.2460%" y="79.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.1559%" y="293" width="0.0799%" height="15" fill="rgb(238,66,34)" fg:x="690" fg:w="1"/><text x="55.4059%" y="303.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.2358%" y="293" width="0.0799%" height="15" fill="rgb(223,188,11)" fg:x="691" fg:w="1"/><text x="55.4858%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2358%" y="277" width="0.0799%" height="15" fill="rgb(221,10,35)" fg:x="691" fg:w="1"/><text x="55.4858%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.2358%" y="261" width="0.0799%" height="15" fill="rgb(223,18,44)" fg:x="691" fg:w="1"/><text x="55.4858%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.4756%" y="213" width="0.1599%" height="15" fill="rgb(220,97,41)" fg:x="694" fg:w="2"/><text x="55.7256%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.4756%" y="197" width="0.1599%" height="15" fill="rgb(206,95,45)" fg:x="694" fg:w="2"/><text x="55.7256%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.5556%" y="181" width="0.0799%" height="15" fill="rgb(209,96,13)" fg:x="695" fg:w="1"/><text x="55.8056%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.5556%" y="165" width="0.0799%" height="15" fill="rgb(237,39,34)" fg:x="695" fg:w="1"/><text x="55.8056%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.7154%" y="149" width="0.0799%" height="15" fill="rgb(213,49,47)" fg:x="697" fg:w="1"/><text x="55.9654%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.7154%" y="133" width="0.0799%" height="15" fill="rgb(205,107,27)" fg:x="697" fg:w="1"/><text x="55.9654%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.7154%" y="117" width="0.0799%" height="15" fill="rgb(212,142,9)" fg:x="697" fg:w="1"/><text x="55.9654%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="55.7154%" y="101" width="0.0799%" height="15" fill="rgb(226,182,0)" fg:x="697" fg:w="1"/><text x="55.9654%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7154%" y="85" width="0.0799%" height="15" fill="rgb(231,3,53)" fg:x="697" fg:w="1"/><text x="55.9654%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="55.3157%" y="245" width="0.5596%" height="15" fill="rgb(246,111,28)" fg:x="692" fg:w="7"/><text x="55.5657%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="55.3957%" y="229" width="0.4796%" height="15" fill="rgb(254,183,7)" fg:x="693" fg:w="6"/><text x="55.6457%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="55.6355%" y="213" width="0.2398%" height="15" fill="rgb(247,177,28)" fg:x="696" fg:w="3"/><text x="55.8855%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.7154%" y="197" width="0.1599%" height="15" fill="rgb(244,43,1)" fg:x="697" fg:w="2"/><text x="55.9654%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.7154%" y="181" width="0.1599%" height="15" fill="rgb(207,2,35)" fg:x="697" fg:w="2"/><text x="55.9654%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.7154%" y="165" width="0.1599%" height="15" fill="rgb(213,83,22)" fg:x="697" fg:w="2"/><text x="55.9654%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="55.7954%" y="149" width="0.0799%" height="15" fill="rgb(246,212,13)" fg:x="698" fg:w="1"/><text x="56.0454%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="55.8753%" y="245" width="0.1599%" height="15" fill="rgb(213,127,46)" fg:x="699" fg:w="2"/><text x="56.1253%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="55.8753%" y="229" width="0.1599%" height="15" fill="rgb(219,215,39)" fg:x="699" fg:w="2"/><text x="56.1253%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.9552%" y="213" width="0.0799%" height="15" fill="rgb(227,99,17)" fg:x="700" fg:w="1"/><text x="56.2052%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.9552%" y="197" width="0.0799%" height="15" fill="rgb(208,155,18)" fg:x="700" fg:w="1"/><text x="56.2052%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.9552%" y="181" width="0.0799%" height="15" fill="rgb(223,204,38)" fg:x="700" fg:w="1"/><text x="56.2052%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.9552%" y="165" width="0.0799%" height="15" fill="rgb(212,114,21)" fg:x="700" fg:w="1"/><text x="56.2052%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.9552%" y="149" width="0.0799%" height="15" fill="rgb(250,74,13)" fg:x="700" fg:w="1"/><text x="56.2052%" y="159.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.0352%" y="197" width="0.0799%" height="15" fill="rgb(234,7,1)" fg:x="701" fg:w="1"/><text x="56.2852%" y="207.50"></text></g><g><title>kernel::model::entity::Entity::from_value (14 samples, 1.12%)</title><rect x="55.0759%" y="341" width="1.1191%" height="15" fill="rgb(207,138,31)" fg:x="689" fg:w="14"/><text x="55.3259%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.12%)</title><rect x="55.0759%" y="325" width="1.1191%" height="15" fill="rgb(215,186,42)" fg:x="689" fg:w="14"/><text x="55.3259%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="55.0759%" y="309" width="1.1191%" height="15" fill="rgb(229,205,49)" fg:x="689" fg:w="14"/><text x="55.3259%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="55.3157%" y="293" width="0.8793%" height="15" fill="rgb(216,156,32)" fg:x="692" fg:w="11"/><text x="55.5657%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="55.3157%" y="277" width="0.8793%" height="15" fill="rgb(238,7,21)" fg:x="692" fg:w="11"/><text x="55.5657%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.88%)</title><rect x="55.3157%" y="261" width="0.8793%" height="15" fill="rgb(249,190,22)" fg:x="692" fg:w="11"/><text x="55.5657%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.0352%" y="245" width="0.1599%" height="15" fill="rgb(253,51,31)" fg:x="701" fg:w="2"/><text x="56.2852%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.0352%" y="229" width="0.1599%" height="15" fill="rgb(237,90,54)" fg:x="701" fg:w="2"/><text x="56.2852%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.0352%" y="213" width="0.1599%" height="15" fill="rgb(250,214,33)" fg:x="701" fg:w="2"/><text x="56.2852%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1151%" y="197" width="0.0799%" height="15" fill="rgb(237,10,49)" fg:x="702" fg:w="1"/><text x="56.3651%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.1151%" y="181" width="0.0799%" height="15" fill="rgb(241,56,36)" fg:x="702" fg:w="1"/><text x="56.3651%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="56.1950%" y="165" width="0.2398%" height="15" fill="rgb(227,164,12)" fg:x="703" fg:w="3"/><text x="56.4450%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="56.1950%" y="149" width="0.2398%" height="15" fill="rgb(249,149,35)" fg:x="703" fg:w="3"/><text x="56.4450%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="56.1950%" y="133" width="0.2398%" height="15" fill="rgb(238,227,50)" fg:x="703" fg:w="3"/><text x="56.4450%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.3549%" y="117" width="0.0799%" height="15" fill="rgb(235,102,45)" fg:x="705" fg:w="1"/><text x="56.6049%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3549%" y="101" width="0.0799%" height="15" fill="rgb(211,10,38)" fg:x="705" fg:w="1"/><text x="56.6049%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3549%" y="85" width="0.0799%" height="15" fill="rgb(219,77,48)" fg:x="705" fg:w="1"/><text x="56.6049%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="56.1950%" y="197" width="0.3197%" height="15" fill="rgb(246,6,15)" fg:x="703" fg:w="4"/><text x="56.4450%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="56.1950%" y="181" width="0.3197%" height="15" fill="rgb(207,220,2)" fg:x="703" fg:w="4"/><text x="56.4450%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.4349%" y="165" width="0.0799%" height="15" fill="rgb(242,48,14)" fg:x="706" fg:w="1"/><text x="56.6849%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.4349%" y="149" width="0.0799%" height="15" fill="rgb(218,19,27)" fg:x="706" fg:w="1"/><text x="56.6849%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="56.1950%" y="213" width="0.4796%" height="15" fill="rgb(228,0,35)" fg:x="703" fg:w="6"/><text x="56.4450%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.5148%" y="197" width="0.1599%" height="15" fill="rgb(244,142,54)" fg:x="707" fg:w="2"/><text x="56.7648%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="56.5148%" y="181" width="0.1599%" height="15" fill="rgb(243,217,40)" fg:x="707" fg:w="2"/><text x="56.7648%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.5148%" y="165" width="0.1599%" height="15" fill="rgb(207,114,16)" fg:x="707" fg:w="2"/><text x="56.7648%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.5148%" y="149" width="0.1599%" height="15" fill="rgb(224,33,25)" fg:x="707" fg:w="2"/><text x="56.7648%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="56.5148%" y="133" width="0.1599%" height="15" fill="rgb(230,93,54)" fg:x="707" fg:w="2"/><text x="56.7648%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="56.1950%" y="277" width="0.5596%" height="15" fill="rgb(224,56,24)" fg:x="703" fg:w="7"/><text x="56.4450%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="56.1950%" y="261" width="0.5596%" height="15" fill="rgb(235,189,50)" fg:x="703" fg:w="7"/><text x="56.4450%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="56.1950%" y="245" width="0.5596%" height="15" fill="rgb(242,173,8)" fg:x="703" fg:w="7"/><text x="56.4450%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="56.1950%" y="229" width="0.5596%" height="15" fill="rgb(209,206,10)" fg:x="703" fg:w="7"/><text x="56.4450%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.6747%" y="213" width="0.0799%" height="15" fill="rgb(213,182,44)" fg:x="709" fg:w="1"/><text x="56.9247%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6747%" y="197" width="0.0799%" height="15" fill="rgb(243,51,15)" fg:x="709" fg:w="1"/><text x="56.9247%" y="207.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (30 samples, 2.40%)</title><rect x="54.4365%" y="437" width="2.3981%" height="15" fill="rgb(241,13,14)" fg:x="681" fg:w="30"/><text x="54.6865%" y="447.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (30 samples, 2.40%)</title><rect x="54.4365%" y="421" width="2.3981%" height="15" fill="rgb(239,147,24)" fg:x="681" fg:w="30"/><text x="54.6865%" y="431.50">&lt;p..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (26 samples, 2.08%)</title><rect x="54.7562%" y="405" width="2.0783%" height="15" fill="rgb(223,129,16)" fg:x="685" fg:w="26"/><text x="55.0062%" y="415.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (26 samples, 2.08%)</title><rect x="54.7562%" y="389" width="2.0783%" height="15" fill="rgb(209,169,13)" fg:x="685" fg:w="26"/><text x="55.0062%" y="399.50">k..</text></g><g><title>engine::session::Session::load_entity (26 samples, 2.08%)</title><rect x="54.7562%" y="373" width="2.0783%" height="15" fill="rgb(235,159,41)" fg:x="685" fg:w="26"/><text x="55.0062%" y="383.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.08%)</title><rect x="54.7562%" y="357" width="2.0783%" height="15" fill="rgb(223,219,48)" fg:x="685" fg:w="26"/><text x="55.0062%" y="367.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="56.1950%" y="341" width="0.6395%" height="15" fill="rgb(236,80,13)" fg:x="703" fg:w="8"/><text x="56.4450%" y="351.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="56.1950%" y="325" width="0.6395%" height="15" fill="rgb(213,5,6)" fg:x="703" fg:w="8"/><text x="56.4450%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="56.1950%" y="309" width="0.6395%" height="15" fill="rgb(205,59,21)" fg:x="703" fg:w="8"/><text x="56.4450%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="56.1950%" y="293" width="0.6395%" height="15" fill="rgb(247,137,35)" fg:x="703" fg:w="8"/><text x="56.4450%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.7546%" y="277" width="0.0799%" height="15" fill="rgb(242,208,28)" fg:x="710" fg:w="1"/><text x="57.0046%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.7546%" y="261" width="0.0799%" height="15" fill="rgb(245,62,25)" fg:x="710" fg:w="1"/><text x="57.0046%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="56.8345%" y="437" width="0.0799%" height="15" fill="rgb(233,99,54)" fg:x="711" fg:w="1"/><text x="57.0845%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="56.8345%" y="421" width="0.0799%" height="15" fill="rgb(213,10,37)" fg:x="711" fg:w="1"/><text x="57.0845%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="57.1543%" y="277" width="0.0799%" height="15" fill="rgb(235,143,30)" fg:x="715" fg:w="1"/><text x="57.4043%" y="287.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="57.1543%" y="261" width="0.0799%" height="15" fill="rgb(250,146,33)" fg:x="715" fg:w="1"/><text x="57.4043%" y="271.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="57.1543%" y="245" width="0.0799%" height="15" fill="rgb(226,198,42)" fg:x="715" fg:w="1"/><text x="57.4043%" y="255.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="57.1543%" y="229" width="0.0799%" height="15" fill="rgb(222,55,6)" fg:x="715" fg:w="1"/><text x="57.4043%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.1543%" y="213" width="0.0799%" height="15" fill="rgb(213,224,31)" fg:x="715" fg:w="1"/><text x="57.4043%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.1543%" y="197" width="0.0799%" height="15" fill="rgb(226,103,35)" fg:x="715" fg:w="1"/><text x="57.4043%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="57.1543%" y="181" width="0.0799%" height="15" fill="rgb(205,66,45)" fg:x="715" fg:w="1"/><text x="57.4043%" y="191.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="57.0743%" y="405" width="0.2398%" height="15" fill="rgb(226,51,42)" fg:x="714" fg:w="3"/><text x="57.3243%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="57.0743%" y="389" width="0.2398%" height="15" fill="rgb(206,69,1)" fg:x="714" fg:w="3"/><text x="57.3243%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="57.0743%" y="373" width="0.2398%" height="15" fill="rgb(213,228,47)" fg:x="714" fg:w="3"/><text x="57.3243%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="57.0743%" y="357" width="0.2398%" height="15" fill="rgb(224,204,18)" fg:x="714" fg:w="3"/><text x="57.3243%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="57.0743%" y="341" width="0.2398%" height="15" fill="rgb(253,187,47)" fg:x="714" fg:w="3"/><text x="57.3243%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="57.0743%" y="325" width="0.2398%" height="15" fill="rgb(232,61,2)" fg:x="714" fg:w="3"/><text x="57.3243%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="57.0743%" y="309" width="0.2398%" height="15" fill="rgb(213,132,35)" fg:x="714" fg:w="3"/><text x="57.3243%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="57.0743%" y="293" width="0.2398%" height="15" fill="rgb(247,33,21)" fg:x="714" fg:w="3"/><text x="57.3243%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="57.2342%" y="277" width="0.0799%" height="15" fill="rgb(233,71,46)" fg:x="716" fg:w="1"/><text x="57.4842%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.3941%" y="373" width="0.0799%" height="15" fill="rgb(222,173,43)" fg:x="718" fg:w="1"/><text x="57.6441%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.4740%" y="373" width="0.0799%" height="15" fill="rgb(249,218,47)" fg:x="719" fg:w="1"/><text x="57.7240%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.4740%" y="357" width="0.0799%" height="15" fill="rgb(254,185,48)" fg:x="719" fg:w="1"/><text x="57.7240%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="57.4740%" y="341" width="0.0799%" height="15" fill="rgb(252,165,50)" fg:x="719" fg:w="1"/><text x="57.7240%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="57.5540%" y="373" width="0.0799%" height="15" fill="rgb(206,219,6)" fg:x="720" fg:w="1"/><text x="57.8040%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.8737%" y="341" width="0.0799%" height="15" fill="rgb(212,212,45)" fg:x="724" fg:w="1"/><text x="58.1237%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.9536%" y="341" width="0.0799%" height="15" fill="rgb(221,31,9)" fg:x="725" fg:w="1"/><text x="58.2036%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="57.8737%" y="357" width="0.3997%" height="15" fill="rgb(234,198,39)" fg:x="724" fg:w="5"/><text x="58.1237%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.0336%" y="341" width="0.2398%" height="15" fill="rgb(252,145,46)" fg:x="726" fg:w="3"/><text x="58.2836%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.0336%" y="325" width="0.2398%" height="15" fill="rgb(237,149,0)" fg:x="726" fg:w="3"/><text x="58.2836%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1934%" y="309" width="0.0799%" height="15" fill="rgb(229,65,5)" fg:x="728" fg:w="1"/><text x="58.4434%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.2734%" y="277" width="0.0799%" height="15" fill="rgb(235,60,36)" fg:x="729" fg:w="1"/><text x="58.5234%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.2734%" y="261" width="0.0799%" height="15" fill="rgb(222,47,18)" fg:x="729" fg:w="1"/><text x="58.5234%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.2734%" y="245" width="0.0799%" height="15" fill="rgb(235,114,22)" fg:x="729" fg:w="1"/><text x="58.5234%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.2734%" y="293" width="0.1599%" height="15" fill="rgb(209,167,11)" fg:x="729" fg:w="2"/><text x="58.5234%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.3533%" y="277" width="0.0799%" height="15" fill="rgb(251,73,18)" fg:x="730" fg:w="1"/><text x="58.6033%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.3533%" y="261" width="0.0799%" height="15" fill="rgb(217,60,17)" fg:x="730" fg:w="1"/><text x="58.6033%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.3533%" y="245" width="0.0799%" height="15" fill="rgb(224,36,37)" fg:x="730" fg:w="1"/><text x="58.6033%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.3533%" y="229" width="0.0799%" height="15" fill="rgb(211,21,32)" fg:x="730" fg:w="1"/><text x="58.6033%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.3533%" y="213" width="0.0799%" height="15" fill="rgb(231,55,48)" fg:x="730" fg:w="1"/><text x="58.6033%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.3533%" y="197" width="0.0799%" height="15" fill="rgb(227,42,18)" fg:x="730" fg:w="1"/><text x="58.6033%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.3533%" y="181" width="0.0799%" height="15" fill="rgb(217,2,27)" fg:x="730" fg:w="1"/><text x="58.6033%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.3533%" y="165" width="0.0799%" height="15" fill="rgb(251,138,23)" fg:x="730" fg:w="1"/><text x="58.6033%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.3533%" y="149" width="0.0799%" height="15" fill="rgb(226,184,11)" fg:x="730" fg:w="1"/><text x="58.6033%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.3533%" y="133" width="0.0799%" height="15" fill="rgb(242,142,12)" fg:x="730" fg:w="1"/><text x="58.6033%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.3533%" y="117" width="0.0799%" height="15" fill="rgb(234,187,18)" fg:x="730" fg:w="1"/><text x="58.6033%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="58.4333%" y="293" width="0.0799%" height="15" fill="rgb(237,44,42)" fg:x="731" fg:w="1"/><text x="58.6833%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.4333%" y="277" width="0.0799%" height="15" fill="rgb(211,90,23)" fg:x="731" fg:w="1"/><text x="58.6833%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4333%" y="261" width="0.0799%" height="15" fill="rgb(207,81,18)" fg:x="731" fg:w="1"/><text x="58.6833%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.4333%" y="245" width="0.0799%" height="15" fill="rgb(222,107,28)" fg:x="731" fg:w="1"/><text x="58.6833%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4333%" y="229" width="0.0799%" height="15" fill="rgb(237,83,52)" fg:x="731" fg:w="1"/><text x="58.6833%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.4333%" y="213" width="0.0799%" height="15" fill="rgb(208,67,11)" fg:x="731" fg:w="1"/><text x="58.6833%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.4333%" y="197" width="0.0799%" height="15" fill="rgb(249,157,49)" fg:x="731" fg:w="1"/><text x="58.6833%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.4333%" y="181" width="0.0799%" height="15" fill="rgb(243,200,1)" fg:x="731" fg:w="1"/><text x="58.6833%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5132%" y="277" width="0.0799%" height="15" fill="rgb(225,162,37)" fg:x="732" fg:w="1"/><text x="58.7632%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5132%" y="261" width="0.0799%" height="15" fill="rgb(242,92,13)" fg:x="732" fg:w="1"/><text x="58.7632%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.5132%" y="245" width="0.0799%" height="15" fill="rgb(220,43,36)" fg:x="732" fg:w="1"/><text x="58.7632%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.5132%" y="229" width="0.0799%" height="15" fill="rgb(213,165,48)" fg:x="732" fg:w="1"/><text x="58.7632%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.5132%" y="213" width="0.0799%" height="15" fill="rgb(227,200,9)" fg:x="732" fg:w="1"/><text x="58.7632%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.5132%" y="197" width="0.0799%" height="15" fill="rgb(221,222,28)" fg:x="732" fg:w="1"/><text x="58.7632%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.5132%" y="181" width="0.0799%" height="15" fill="rgb(223,142,26)" fg:x="732" fg:w="1"/><text x="58.7632%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.5132%" y="165" width="0.0799%" height="15" fill="rgb(243,46,9)" fg:x="732" fg:w="1"/><text x="58.7632%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.5132%" y="149" width="0.0799%" height="15" fill="rgb(250,56,11)" fg:x="732" fg:w="1"/><text x="58.7632%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.5132%" y="133" width="0.0799%" height="15" fill="rgb(229,113,5)" fg:x="732" fg:w="1"/><text x="58.7632%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.5132%" y="117" width="0.0799%" height="15" fill="rgb(244,108,28)" fg:x="732" fg:w="1"/><text x="58.7632%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5132%" y="101" width="0.0799%" height="15" fill="rgb(242,119,50)" fg:x="732" fg:w="1"/><text x="58.7632%" y="111.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="58.5132%" y="293" width="0.1599%" height="15" fill="rgb(224,164,23)" fg:x="732" fg:w="2"/><text x="58.7632%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.5931%" y="277" width="0.0799%" height="15" fill="rgb(214,227,44)" fg:x="733" fg:w="1"/><text x="58.8431%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="58.5931%" y="261" width="0.0799%" height="15" fill="rgb(238,202,4)" fg:x="733" fg:w="1"/><text x="58.8431%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.6731%" y="213" width="0.1599%" height="15" fill="rgb(213,190,30)" fg:x="734" fg:w="2"/><text x="58.9231%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.8329%" y="213" width="0.0799%" height="15" fill="rgb(239,15,2)" fg:x="736" fg:w="1"/><text x="59.0829%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.8329%" y="197" width="0.0799%" height="15" fill="rgb(249,229,4)" fg:x="736" fg:w="1"/><text x="59.0829%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.8329%" y="181" width="0.0799%" height="15" fill="rgb(239,75,44)" fg:x="736" fg:w="1"/><text x="59.0829%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="58.9928%" y="85" width="0.0799%" height="15" fill="rgb(251,206,23)" fg:x="738" fg:w="1"/><text x="59.2428%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.9928%" y="69" width="0.0799%" height="15" fill="rgb(215,208,0)" fg:x="738" fg:w="1"/><text x="59.2428%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9928%" y="53" width="0.0799%" height="15" fill="rgb(230,75,50)" fg:x="738" fg:w="1"/><text x="59.2428%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="58.9129%" y="197" width="0.2398%" height="15" fill="rgb(246,180,39)" fg:x="737" fg:w="3"/><text x="59.1629%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.9129%" y="181" width="0.2398%" height="15" fill="rgb(249,175,24)" fg:x="737" fg:w="3"/><text x="59.1629%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="58.9129%" y="165" width="0.2398%" height="15" fill="rgb(247,176,22)" fg:x="737" fg:w="3"/><text x="59.1629%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.9129%" y="149" width="0.2398%" height="15" fill="rgb(241,100,24)" fg:x="737" fg:w="3"/><text x="59.1629%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="58.9129%" y="133" width="0.2398%" height="15" fill="rgb(233,4,35)" fg:x="737" fg:w="3"/><text x="59.1629%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="58.9928%" y="117" width="0.1599%" height="15" fill="rgb(211,164,46)" fg:x="738" fg:w="2"/><text x="59.2428%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.9928%" y="101" width="0.1599%" height="15" fill="rgb(242,99,53)" fg:x="738" fg:w="2"/><text x="59.2428%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0727%" y="85" width="0.0799%" height="15" fill="rgb(243,45,33)" fg:x="739" fg:w="1"/><text x="59.3227%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="59.1527%" y="197" width="0.1599%" height="15" fill="rgb(217,55,21)" fg:x="740" fg:w="2"/><text x="59.4027%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="59.1527%" y="181" width="0.1599%" height="15" fill="rgb(245,145,46)" fg:x="740" fg:w="2"/><text x="59.4027%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="59.1527%" y="165" width="0.1599%" height="15" fill="rgb(215,112,45)" fg:x="740" fg:w="2"/><text x="59.4027%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="59.1527%" y="149" width="0.1599%" height="15" fill="rgb(228,104,16)" fg:x="740" fg:w="2"/><text x="59.4027%" y="159.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="59.1527%" y="133" width="0.1599%" height="15" fill="rgb(239,186,38)" fg:x="740" fg:w="2"/><text x="59.4027%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.3125%" y="165" width="0.0799%" height="15" fill="rgb(228,38,35)" fg:x="742" fg:w="1"/><text x="59.5625%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.3125%" y="149" width="0.0799%" height="15" fill="rgb(251,42,40)" fg:x="742" fg:w="1"/><text x="59.5625%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.3125%" y="133" width="0.0799%" height="15" fill="rgb(210,51,19)" fg:x="742" fg:w="1"/><text x="59.5625%" y="143.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.3925%" y="149" width="0.0799%" height="15" fill="rgb(236,94,42)" fg:x="743" fg:w="1"/><text x="59.6425%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="59.3925%" y="133" width="0.0799%" height="15" fill="rgb(239,167,16)" fg:x="743" fg:w="1"/><text x="59.6425%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.3925%" y="117" width="0.0799%" height="15" fill="rgb(252,175,31)" fg:x="743" fg:w="1"/><text x="59.6425%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.3925%" y="101" width="0.0799%" height="15" fill="rgb(206,166,30)" fg:x="743" fg:w="1"/><text x="59.6425%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.6323%" y="133" width="0.0799%" height="15" fill="rgb(206,209,37)" fg:x="746" fg:w="1"/><text x="59.8823%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.6323%" y="117" width="0.0799%" height="15" fill="rgb(226,91,4)" fg:x="746" fg:w="1"/><text x="59.8823%" y="127.50"></text></g><g><title>kernel::model::entity::Entity::from_value (14 samples, 1.12%)</title><rect x="58.6731%" y="293" width="1.1191%" height="15" fill="rgb(222,167,0)" fg:x="734" fg:w="14"/><text x="58.9231%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.12%)</title><rect x="58.6731%" y="277" width="1.1191%" height="15" fill="rgb(211,70,14)" fg:x="734" fg:w="14"/><text x="58.9231%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="58.6731%" y="261" width="1.1191%" height="15" fill="rgb(214,84,42)" fg:x="734" fg:w="14"/><text x="58.9231%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.12%)</title><rect x="58.6731%" y="245" width="1.1191%" height="15" fill="rgb(235,157,37)" fg:x="734" fg:w="14"/><text x="58.9231%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="58.6731%" y="229" width="1.1191%" height="15" fill="rgb(225,13,6)" fg:x="734" fg:w="14"/><text x="58.9231%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.88%)</title><rect x="58.9129%" y="213" width="0.8793%" height="15" fill="rgb(205,202,1)" fg:x="737" fg:w="11"/><text x="59.1629%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="59.3125%" y="197" width="0.4796%" height="15" fill="rgb(232,195,26)" fg:x="742" fg:w="6"/><text x="59.5625%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="59.3125%" y="181" width="0.4796%" height="15" fill="rgb(208,102,26)" fg:x="742" fg:w="6"/><text x="59.5625%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="59.3925%" y="165" width="0.3997%" height="15" fill="rgb(215,41,39)" fg:x="743" fg:w="5"/><text x="59.6425%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="59.4724%" y="149" width="0.3197%" height="15" fill="rgb(247,139,11)" fg:x="744" fg:w="4"/><text x="59.7224%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.7122%" y="133" width="0.0799%" height="15" fill="rgb(243,99,6)" fg:x="747" fg:w="1"/><text x="59.9622%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.1918%" y="117" width="0.0799%" height="15" fill="rgb(230,168,48)" fg:x="753" fg:w="1"/><text x="60.4418%" y="127.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.2718%" y="85" width="0.0799%" height="15" fill="rgb(238,227,13)" fg:x="754" fg:w="1"/><text x="60.5218%" y="95.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (28 samples, 2.24%)</title><rect x="58.2734%" y="357" width="2.2382%" height="15" fill="rgb(209,109,13)" fg:x="729" fg:w="28"/><text x="58.5234%" y="367.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (28 samples, 2.24%)</title><rect x="58.2734%" y="341" width="2.2382%" height="15" fill="rgb(228,195,1)" fg:x="729" fg:w="28"/><text x="58.5234%" y="351.50">k..</text></g><g><title>engine::session::Session::load_entity (28 samples, 2.24%)</title><rect x="58.2734%" y="325" width="2.2382%" height="15" fill="rgb(230,218,0)" fg:x="729" fg:w="28"/><text x="58.5234%" y="335.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (28 samples, 2.24%)</title><rect x="58.2734%" y="309" width="2.2382%" height="15" fill="rgb(206,1,45)" fg:x="729" fg:w="28"/><text x="58.5234%" y="319.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="59.7922%" y="293" width="0.7194%" height="15" fill="rgb(209,124,26)" fg:x="748" fg:w="9"/><text x="60.0422%" y="303.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="59.7922%" y="277" width="0.7194%" height="15" fill="rgb(220,59,8)" fg:x="748" fg:w="9"/><text x="60.0422%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="59.7922%" y="261" width="0.7194%" height="15" fill="rgb(251,41,37)" fg:x="748" fg:w="9"/><text x="60.0422%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="59.7922%" y="245" width="0.7194%" height="15" fill="rgb(239,152,21)" fg:x="748" fg:w="9"/><text x="60.0422%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="59.7922%" y="229" width="0.7194%" height="15" fill="rgb(226,32,1)" fg:x="748" fg:w="9"/><text x="60.0422%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="59.7922%" y="213" width="0.7194%" height="15" fill="rgb(230,154,36)" fg:x="748" fg:w="9"/><text x="60.0422%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="59.8721%" y="197" width="0.6395%" height="15" fill="rgb(208,228,43)" fg:x="749" fg:w="8"/><text x="60.1221%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="59.8721%" y="181" width="0.6395%" height="15" fill="rgb(214,203,3)" fg:x="749" fg:w="8"/><text x="60.1221%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.1119%" y="165" width="0.3997%" height="15" fill="rgb(207,149,29)" fg:x="752" fg:w="5"/><text x="60.3619%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.1119%" y="149" width="0.3997%" height="15" fill="rgb(250,105,7)" fg:x="752" fg:w="5"/><text x="60.3619%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.1119%" y="133" width="0.3997%" height="15" fill="rgb(232,222,16)" fg:x="752" fg:w="5"/><text x="60.3619%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.2718%" y="117" width="0.2398%" height="15" fill="rgb(209,32,24)" fg:x="754" fg:w="3"/><text x="60.5218%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="60.2718%" y="101" width="0.2398%" height="15" fill="rgb(225,13,6)" fg:x="754" fg:w="3"/><text x="60.5218%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.3517%" y="85" width="0.1599%" height="15" fill="rgb(245,226,26)" fg:x="755" fg:w="2"/><text x="60.6017%" y="95.50"></text></g><g><title>plugins_core::tools::contained_by (37 samples, 2.96%)</title><rect x="57.6339%" y="373" width="2.9576%" height="15" fill="rgb(229,178,27)" fg:x="721" fg:w="37"/><text x="57.8839%" y="383.50">plu..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="60.5116%" y="357" width="0.0799%" height="15" fill="rgb(205,227,28)" fg:x="757" fg:w="1"/><text x="60.7616%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.5116%" y="341" width="0.0799%" height="15" fill="rgb(210,191,45)" fg:x="757" fg:w="1"/><text x="60.7616%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5915%" y="325" width="0.0799%" height="15" fill="rgb(206,124,16)" fg:x="758" fg:w="1"/><text x="60.8415%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5915%" y="309" width="0.0799%" height="15" fill="rgb(210,162,0)" fg:x="758" fg:w="1"/><text x="60.8415%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.5915%" y="293" width="0.0799%" height="15" fill="rgb(211,54,38)" fg:x="758" fg:w="1"/><text x="60.8415%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.5915%" y="277" width="0.0799%" height="15" fill="rgb(248,192,3)" fg:x="758" fg:w="1"/><text x="60.8415%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.5915%" y="261" width="0.0799%" height="15" fill="rgb(233,187,18)" fg:x="758" fg:w="1"/><text x="60.8415%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5915%" y="245" width="0.0799%" height="15" fill="rgb(237,208,14)" fg:x="758" fg:w="1"/><text x="60.8415%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5915%" y="229" width="0.0799%" height="15" fill="rgb(212,77,1)" fg:x="758" fg:w="1"/><text x="60.8415%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.5915%" y="213" width="0.0799%" height="15" fill="rgb(210,163,22)" fg:x="758" fg:w="1"/><text x="60.8415%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="60.5915%" y="197" width="0.0799%" height="15" fill="rgb(250,58,28)" fg:x="758" fg:w="1"/><text x="60.8415%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="60.5915%" y="181" width="0.0799%" height="15" fill="rgb(254,28,41)" fg:x="758" fg:w="1"/><text x="60.8415%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.5915%" y="341" width="0.1599%" height="15" fill="rgb(237,162,36)" fg:x="758" fg:w="2"/><text x="60.8415%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6715%" y="325" width="0.0799%" height="15" fill="rgb(232,56,6)" fg:x="759" fg:w="1"/><text x="60.9215%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.6715%" y="309" width="0.0799%" height="15" fill="rgb(216,127,42)" fg:x="759" fg:w="1"/><text x="60.9215%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.6715%" y="293" width="0.0799%" height="15" fill="rgb(241,69,15)" fg:x="759" fg:w="1"/><text x="60.9215%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.6715%" y="277" width="0.0799%" height="15" fill="rgb(227,180,19)" fg:x="759" fg:w="1"/><text x="60.9215%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6715%" y="261" width="0.0799%" height="15" fill="rgb(231,188,29)" fg:x="759" fg:w="1"/><text x="60.9215%" y="271.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="60.9113%" y="261" width="0.0799%" height="15" fill="rgb(224,176,27)" fg:x="762" fg:w="1"/><text x="61.1613%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.9113%" y="245" width="0.0799%" height="15" fill="rgb(249,214,19)" fg:x="762" fg:w="1"/><text x="61.1613%" y="255.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="60.9113%" y="277" width="0.2398%" height="15" fill="rgb(240,0,4)" fg:x="762" fg:w="3"/><text x="61.1613%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.9912%" y="261" width="0.1599%" height="15" fill="rgb(233,28,41)" fg:x="763" fg:w="2"/><text x="61.2412%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.9912%" y="245" width="0.1599%" height="15" fill="rgb(220,90,51)" fg:x="763" fg:w="2"/><text x="61.2412%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="61.0711%" y="229" width="0.0799%" height="15" fill="rgb(250,52,22)" fg:x="764" fg:w="1"/><text x="61.3211%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="60.9113%" y="309" width="0.3197%" height="15" fill="rgb(231,152,36)" fg:x="762" fg:w="4"/><text x="61.1613%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="60.9113%" y="293" width="0.3197%" height="15" fill="rgb(250,218,4)" fg:x="762" fg:w="4"/><text x="61.1613%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.1511%" y="277" width="0.0799%" height="15" fill="rgb(210,38,21)" fg:x="765" fg:w="1"/><text x="61.4011%" y="287.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (10 samples, 0.80%)</title><rect x="60.5915%" y="357" width="0.7994%" height="15" fill="rgb(230,75,13)" fg:x="758" fg:w="10"/><text x="60.8415%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="60.7514%" y="341" width="0.6395%" height="15" fill="rgb(250,68,53)" fg:x="760" fg:w="8"/><text x="61.0014%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="60.7514%" y="325" width="0.6395%" height="15" fill="rgb(250,210,16)" fg:x="760" fg:w="8"/><text x="61.0014%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.2310%" y="309" width="0.1599%" height="15" fill="rgb(240,132,5)" fg:x="766" fg:w="2"/><text x="61.4810%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.2310%" y="293" width="0.1599%" height="15" fill="rgb(222,148,48)" fg:x="766" fg:w="2"/><text x="61.4810%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.3110%" y="277" width="0.0799%" height="15" fill="rgb(247,181,24)" fg:x="767" fg:w="1"/><text x="61.5610%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3909%" y="357" width="0.0799%" height="15" fill="rgb(239,5,31)" fg:x="768" fg:w="1"/><text x="61.6409%" y="367.50"></text></g><g><title>plugins_core::tools::occupied_by (12 samples, 0.96%)</title><rect x="60.5915%" y="373" width="0.9592%" height="15" fill="rgb(241,152,38)" fg:x="758" fg:w="12"/><text x="60.8415%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="61.4708%" y="357" width="0.0799%" height="15" fill="rgb(246,200,37)" fg:x="769" fg:w="1"/><text x="61.7208%" y="367.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (54 samples, 4.32%)</title><rect x="57.3141%" y="389" width="4.3165%" height="15" fill="rgb(243,210,26)" fg:x="717" fg:w="54"/><text x="57.5641%" y="399.50">plugi..</text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="61.5508%" y="373" width="0.0799%" height="15" fill="rgb(222,22,22)" fg:x="770" fg:w="1"/><text x="61.8008%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="61.5508%" y="357" width="0.0799%" height="15" fill="rgb(208,129,28)" fg:x="770" fg:w="1"/><text x="61.8008%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.5508%" y="341" width="0.0799%" height="15" fill="rgb(254,169,28)" fg:x="770" fg:w="1"/><text x="61.8008%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.5508%" y="325" width="0.0799%" height="15" fill="rgb(225,45,17)" fg:x="770" fg:w="1"/><text x="61.8008%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::iter (1 samples, 0.08%)</title><rect x="61.6307%" y="389" width="0.0799%" height="15" fill="rgb(232,199,2)" fg:x="771" fg:w="1"/><text x="61.8807%" y="399.50"></text></g><g><title>engine::session::Session::captured (105 samples, 8.39%)</title><rect x="53.4772%" y="549" width="8.3933%" height="15" fill="rgb(235,33,40)" fg:x="669" fg:w="105"/><text x="53.7272%" y="559.50">engine::sess..</text></g><g><title>engine::session::logs::capture (103 samples, 8.23%)</title><rect x="53.6371%" y="533" width="8.2334%" height="15" fill="rgb(237,89,50)" fg:x="671" fg:w="103"/><text x="53.8871%" y="543.50">engine::ses..</text></g><g><title>tracing_core::dispatcher::with_default (98 samples, 7.83%)</title><rect x="54.0368%" y="517" width="7.8337%" height="15" fill="rgb(238,126,5)" fg:x="676" fg:w="98"/><text x="54.2868%" y="527.50">tracing_cor..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (97 samples, 7.75%)</title><rect x="54.1167%" y="501" width="7.7538%" height="15" fill="rgb(247,214,42)" fg:x="677" fg:w="97"/><text x="54.3667%" y="511.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::apply_middleware (94 samples, 7.51%)</title><rect x="54.3565%" y="485" width="7.5140%" height="15" fill="rgb(238,60,45)" fg:x="680" fg:w="94"/><text x="54.6065%" y="495.50">kernel::pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (94 samples, 7.51%)</title><rect x="54.3565%" y="469" width="7.5140%" height="15" fill="rgb(225,69,44)" fg:x="680" fg:w="94"/><text x="54.6065%" y="479.50">kernel::pl..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (93 samples, 7.43%)</title><rect x="54.4365%" y="453" width="7.4341%" height="15" fill="rgb(241,13,44)" fg:x="681" fg:w="93"/><text x="54.6865%" y="463.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (62 samples, 4.96%)</title><rect x="56.9145%" y="437" width="4.9560%" height="15" fill="rgb(227,121,22)" fg:x="712" fg:w="62"/><text x="57.1645%" y="447.50">kernel..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (62 samples, 4.96%)</title><rect x="56.9145%" y="421" width="4.9560%" height="15" fill="rgb(231,160,23)" fg:x="712" fg:w="62"/><text x="57.1645%" y="431.50">&lt;plugi..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (57 samples, 4.56%)</title><rect x="57.3141%" y="405" width="4.5564%" height="15" fill="rgb(250,179,43)" fg:x="717" fg:w="57"/><text x="57.5641%" y="415.50">plugi..</text></g><g><title>plugins_rune::sources::load_sources_from_entity (2 samples, 0.16%)</title><rect x="61.7106%" y="389" width="0.1599%" height="15" fill="rgb(233,54,46)" fg:x="772" fg:w="2"/><text x="61.9606%" y="399.50"></text></g><g><title>plugins_rune::sources::get_script (2 samples, 0.16%)</title><rect x="61.7106%" y="373" width="0.1599%" height="15" fill="rgb(247,120,42)" fg:x="772" fg:w="2"/><text x="61.9606%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="61.7106%" y="357" width="0.1599%" height="15" fill="rgb(221,219,12)" fg:x="772" fg:w="2"/><text x="61.9606%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (2 samples, 0.16%)</title><rect x="61.7106%" y="341" width="0.1599%" height="15" fill="rgb(211,126,8)" fg:x="772" fg:w="2"/><text x="61.9606%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.7906%" y="325" width="0.0799%" height="15" fill="rgb(218,154,33)" fg:x="773" fg:w="1"/><text x="62.0406%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="61.8705%" y="533" width="0.0799%" height="15" fill="rgb(212,199,16)" fg:x="774" fg:w="1"/><text x="62.1205%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9504%" y="453" width="0.0799%" height="15" fill="rgb(236,215,46)" fg:x="775" fg:w="1"/><text x="62.2004%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9504%" y="437" width="0.0799%" height="15" fill="rgb(232,32,22)" fg:x="775" fg:w="1"/><text x="62.2004%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9504%" y="421" width="0.0799%" height="15" fill="rgb(234,79,15)" fg:x="775" fg:w="1"/><text x="62.2004%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9504%" y="405" width="0.0799%" height="15" fill="rgb(235,187,47)" fg:x="775" fg:w="1"/><text x="62.2004%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9504%" y="389" width="0.0799%" height="15" fill="rgb(244,69,37)" fg:x="775" fg:w="1"/><text x="62.2004%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9504%" y="373" width="0.0799%" height="15" fill="rgb(249,140,25)" fg:x="775" fg:w="1"/><text x="62.2004%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9504%" y="357" width="0.0799%" height="15" fill="rgb(213,69,8)" fg:x="775" fg:w="1"/><text x="62.2004%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.9504%" y="341" width="0.0799%" height="15" fill="rgb(220,136,2)" fg:x="775" fg:w="1"/><text x="62.2004%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.9504%" y="325" width="0.0799%" height="15" fill="rgb(237,50,36)" fg:x="775" fg:w="1"/><text x="62.2004%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.9504%" y="309" width="0.0799%" height="15" fill="rgb(226,18,11)" fg:x="775" fg:w="1"/><text x="62.2004%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.9504%" y="293" width="0.0799%" height="15" fill="rgb(243,156,2)" fg:x="775" fg:w="1"/><text x="62.2004%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="61.9504%" y="277" width="0.0799%" height="15" fill="rgb(218,8,34)" fg:x="775" fg:w="1"/><text x="62.2004%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="61.9504%" y="261" width="0.0799%" height="15" fill="rgb(250,94,35)" fg:x="775" fg:w="1"/><text x="62.2004%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.0304%" y="453" width="0.0799%" height="15" fill="rgb(229,127,21)" fg:x="776" fg:w="1"/><text x="62.2804%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.0304%" y="437" width="0.0799%" height="15" fill="rgb(234,49,5)" fg:x="776" fg:w="1"/><text x="62.2804%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.9504%" y="469" width="0.2398%" height="15" fill="rgb(248,12,16)" fg:x="775" fg:w="3"/><text x="62.2004%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1103%" y="453" width="0.0799%" height="15" fill="rgb(208,220,31)" fg:x="777" fg:w="1"/><text x="62.3603%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1902%" y="469" width="0.0799%" height="15" fill="rgb(243,184,0)" fg:x="778" fg:w="1"/><text x="62.4402%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="61.9504%" y="485" width="0.4796%" height="15" fill="rgb(217,38,21)" fg:x="775" fg:w="6"/><text x="62.2004%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.2702%" y="469" width="0.1599%" height="15" fill="rgb(239,120,45)" fg:x="779" fg:w="2"/><text x="62.5202%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.4301%" y="405" width="0.0799%" height="15" fill="rgb(235,33,2)" fg:x="781" fg:w="1"/><text x="62.6801%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.4301%" y="389" width="0.0799%" height="15" fill="rgb(249,161,5)" fg:x="781" fg:w="1"/><text x="62.6801%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.4301%" y="373" width="0.0799%" height="15" fill="rgb(250,165,48)" fg:x="781" fg:w="1"/><text x="62.6801%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.4301%" y="357" width="0.0799%" height="15" fill="rgb(221,23,45)" fg:x="781" fg:w="1"/><text x="62.6801%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.4301%" y="341" width="0.0799%" height="15" fill="rgb(217,108,46)" fg:x="781" fg:w="1"/><text x="62.6801%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.4301%" y="325" width="0.0799%" height="15" fill="rgb(254,26,35)" fg:x="781" fg:w="1"/><text x="62.6801%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.4301%" y="309" width="0.0799%" height="15" fill="rgb(218,223,28)" fg:x="781" fg:w="1"/><text x="62.6801%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="61.9504%" y="501" width="0.6395%" height="15" fill="rgb(242,27,47)" fg:x="775" fg:w="8"/><text x="62.2004%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.4301%" y="485" width="0.1599%" height="15" fill="rgb(218,39,35)" fg:x="781" fg:w="2"/><text x="62.6801%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.4301%" y="469" width="0.1599%" height="15" fill="rgb(232,127,16)" fg:x="781" fg:w="2"/><text x="62.6801%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="62.4301%" y="453" width="0.1599%" height="15" fill="rgb(231,219,51)" fg:x="781" fg:w="2"/><text x="62.6801%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="62.4301%" y="437" width="0.1599%" height="15" fill="rgb(217,220,46)" fg:x="781" fg:w="2"/><text x="62.6801%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="62.4301%" y="421" width="0.1599%" height="15" fill="rgb(230,75,1)" fg:x="781" fg:w="2"/><text x="62.6801%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.5100%" y="405" width="0.0799%" height="15" fill="rgb(218,2,8)" fg:x="782" fg:w="1"/><text x="62.7600%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.5100%" y="389" width="0.0799%" height="15" fill="rgb(206,111,30)" fg:x="782" fg:w="1"/><text x="62.7600%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.6699%" y="453" width="0.2398%" height="15" fill="rgb(209,135,6)" fg:x="784" fg:w="3"/><text x="62.9199%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.7498%" y="437" width="0.1599%" height="15" fill="rgb(205,169,10)" fg:x="785" fg:w="2"/><text x="62.9998%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8297%" y="421" width="0.0799%" height="15" fill="rgb(212,204,38)" fg:x="786" fg:w="1"/><text x="63.0797%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8297%" y="405" width="0.0799%" height="15" fill="rgb(205,199,14)" fg:x="786" fg:w="1"/><text x="63.0797%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9097%" y="405" width="0.0799%" height="15" fill="rgb(212,4,6)" fg:x="787" fg:w="1"/><text x="63.1597%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9097%" y="389" width="0.0799%" height="15" fill="rgb(250,15,10)" fg:x="787" fg:w="1"/><text x="63.1597%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9097%" y="373" width="0.0799%" height="15" fill="rgb(212,49,51)" fg:x="787" fg:w="1"/><text x="63.1597%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.9097%" y="357" width="0.0799%" height="15" fill="rgb(235,21,9)" fg:x="787" fg:w="1"/><text x="63.1597%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.9097%" y="341" width="0.0799%" height="15" fill="rgb(251,31,32)" fg:x="787" fg:w="1"/><text x="63.1597%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.9097%" y="325" width="0.0799%" height="15" fill="rgb(246,23,9)" fg:x="787" fg:w="1"/><text x="63.1597%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.9097%" y="309" width="0.0799%" height="15" fill="rgb(225,216,14)" fg:x="787" fg:w="1"/><text x="63.1597%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.9097%" y="293" width="0.0799%" height="15" fill="rgb(215,200,26)" fg:x="787" fg:w="1"/><text x="63.1597%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9896%" y="357" width="0.0799%" height="15" fill="rgb(237,130,47)" fg:x="788" fg:w="1"/><text x="63.2396%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9896%" y="341" width="0.0799%" height="15" fill="rgb(247,74,14)" fg:x="788" fg:w="1"/><text x="63.2396%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9896%" y="325" width="0.0799%" height="15" fill="rgb(254,97,46)" fg:x="788" fg:w="1"/><text x="63.2396%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.9896%" y="309" width="0.0799%" height="15" fill="rgb(234,191,1)" fg:x="788" fg:w="1"/><text x="63.2396%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.9896%" y="293" width="0.0799%" height="15" fill="rgb(215,165,14)" fg:x="788" fg:w="1"/><text x="63.2396%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.9896%" y="277" width="0.0799%" height="15" fill="rgb(230,182,6)" fg:x="788" fg:w="1"/><text x="63.2396%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.9896%" y="261" width="0.0799%" height="15" fill="rgb(210,127,39)" fg:x="788" fg:w="1"/><text x="63.2396%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.9896%" y="245" width="0.0799%" height="15" fill="rgb(223,212,51)" fg:x="788" fg:w="1"/><text x="63.2396%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.9896%" y="229" width="0.0799%" height="15" fill="rgb(226,176,43)" fg:x="788" fg:w="1"/><text x="63.2396%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.9896%" y="213" width="0.0799%" height="15" fill="rgb(222,155,4)" fg:x="788" fg:w="1"/><text x="63.2396%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.9896%" y="197" width="0.0799%" height="15" fill="rgb(215,149,7)" fg:x="788" fg:w="1"/><text x="63.2396%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.9896%" y="181" width="0.0799%" height="15" fill="rgb(252,199,23)" fg:x="788" fg:w="1"/><text x="63.2396%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.9896%" y="165" width="0.0799%" height="15" fill="rgb(245,52,29)" fg:x="788" fg:w="1"/><text x="63.2396%" y="175.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.0695%" y="325" width="0.0799%" height="15" fill="rgb(221,228,19)" fg:x="789" fg:w="1"/><text x="63.3195%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.1495%" y="309" width="0.0799%" height="15" fill="rgb(253,101,6)" fg:x="790" fg:w="1"/><text x="63.3995%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1495%" y="293" width="0.0799%" height="15" fill="rgb(211,130,8)" fg:x="790" fg:w="1"/><text x="63.3995%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1495%" y="277" width="0.0799%" height="15" fill="rgb(238,37,53)" fg:x="790" fg:w="1"/><text x="63.3995%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.1495%" y="261" width="0.0799%" height="15" fill="rgb(235,145,5)" fg:x="790" fg:w="1"/><text x="63.3995%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.1495%" y="245" width="0.0799%" height="15" fill="rgb(244,12,43)" fg:x="790" fg:w="1"/><text x="63.3995%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.1495%" y="229" width="0.0799%" height="15" fill="rgb(246,195,24)" fg:x="790" fg:w="1"/><text x="63.3995%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1495%" y="213" width="0.0799%" height="15" fill="rgb(235,163,6)" fg:x="790" fg:w="1"/><text x="63.3995%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1495%" y="197" width="0.0799%" height="15" fill="rgb(236,218,17)" fg:x="790" fg:w="1"/><text x="63.3995%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.1495%" y="181" width="0.0799%" height="15" fill="rgb(235,12,38)" fg:x="790" fg:w="1"/><text x="63.3995%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.1495%" y="165" width="0.0799%" height="15" fill="rgb(225,195,33)" fg:x="790" fg:w="1"/><text x="63.3995%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.1495%" y="149" width="0.0799%" height="15" fill="rgb(238,54,35)" fg:x="790" fg:w="1"/><text x="63.3995%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.1495%" y="133" width="0.0799%" height="15" fill="rgb(238,33,7)" fg:x="790" fg:w="1"/><text x="63.3995%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.1495%" y="117" width="0.0799%" height="15" fill="rgb(245,5,14)" fg:x="790" fg:w="1"/><text x="63.3995%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="63.0695%" y="357" width="0.2398%" height="15" fill="rgb(251,95,31)" fg:x="789" fg:w="3"/><text x="63.3195%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="63.0695%" y="341" width="0.2398%" height="15" fill="rgb(222,15,46)" fg:x="789" fg:w="3"/><text x="63.3195%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="63.1495%" y="325" width="0.1599%" height="15" fill="rgb(226,182,24)" fg:x="790" fg:w="2"/><text x="63.3995%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.2294%" y="309" width="0.0799%" height="15" fill="rgb(229,105,41)" fg:x="791" fg:w="1"/><text x="63.4794%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2294%" y="293" width="0.0799%" height="15" fill="rgb(216,99,53)" fg:x="791" fg:w="1"/><text x="63.4794%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.3094%" y="325" width="0.0799%" height="15" fill="rgb(253,26,20)" fg:x="792" fg:w="1"/><text x="63.5594%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.3094%" y="309" width="0.0799%" height="15" fill="rgb(249,155,28)" fg:x="792" fg:w="1"/><text x="63.5594%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.3094%" y="293" width="0.0799%" height="15" fill="rgb(241,221,2)" fg:x="792" fg:w="1"/><text x="63.5594%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="62.9896%" y="405" width="0.5596%" height="15" fill="rgb(219,124,6)" fg:x="788" fg:w="7"/><text x="63.2396%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.56%)</title><rect x="62.9896%" y="389" width="0.5596%" height="15" fill="rgb(233,37,6)" fg:x="788" fg:w="7"/><text x="63.2396%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="62.9896%" y="373" width="0.5596%" height="15" fill="rgb(238,20,14)" fg:x="788" fg:w="7"/><text x="63.2396%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.3094%" y="357" width="0.2398%" height="15" fill="rgb(232,106,27)" fg:x="792" fg:w="3"/><text x="63.5594%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.3094%" y="341" width="0.2398%" height="15" fill="rgb(246,157,24)" fg:x="792" fg:w="3"/><text x="63.5594%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="63.3893%" y="325" width="0.1599%" height="15" fill="rgb(214,153,10)" fg:x="793" fg:w="2"/><text x="63.6393%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="63.3893%" y="309" width="0.1599%" height="15" fill="rgb(212,94,6)" fg:x="793" fg:w="2"/><text x="63.6393%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="63.3893%" y="293" width="0.1599%" height="15" fill="rgb(254,25,27)" fg:x="793" fg:w="2"/><text x="63.6393%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="63.3893%" y="277" width="0.1599%" height="15" fill="rgb(250,43,52)" fg:x="793" fg:w="2"/><text x="63.6393%" y="287.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="63.4692%" y="261" width="0.0799%" height="15" fill="rgb(221,226,40)" fg:x="794" fg:w="1"/><text x="63.7192%" y="271.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.08%)</title><rect x="63.4692%" y="245" width="0.0799%" height="15" fill="rgb(235,162,34)" fg:x="794" fg:w="1"/><text x="63.7192%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.08%)</title><rect x="63.4692%" y="229" width="0.0799%" height="15" fill="rgb(239,24,26)" fg:x="794" fg:w="1"/><text x="63.7192%" y="239.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.08%)</title><rect x="63.4692%" y="213" width="0.0799%" height="15" fill="rgb(244,226,11)" fg:x="794" fg:w="1"/><text x="63.7192%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="63.4692%" y="197" width="0.0799%" height="15" fill="rgb(225,23,10)" fg:x="794" fg:w="1"/><text x="63.7192%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="62.9097%" y="453" width="0.7194%" height="15" fill="rgb(249,125,6)" fg:x="787" fg:w="9"/><text x="63.1597%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.72%)</title><rect x="62.9097%" y="437" width="0.7194%" height="15" fill="rgb(246,212,12)" fg:x="787" fg:w="9"/><text x="63.1597%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.72%)</title><rect x="62.9097%" y="421" width="0.7194%" height="15" fill="rgb(230,43,32)" fg:x="787" fg:w="9"/><text x="63.1597%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.5492%" y="405" width="0.0799%" height="15" fill="rgb(210,95,23)" fg:x="795" fg:w="1"/><text x="63.7992%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.5492%" y="389" width="0.0799%" height="15" fill="rgb(229,103,33)" fg:x="795" fg:w="1"/><text x="63.7992%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.5492%" y="373" width="0.0799%" height="15" fill="rgb(222,104,27)" fg:x="795" fg:w="1"/><text x="63.7992%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.7090%" y="421" width="0.0799%" height="15" fill="rgb(239,221,23)" fg:x="797" fg:w="1"/><text x="63.9590%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="62.5899%" y="501" width="1.2790%" height="15" fill="rgb(222,98,21)" fg:x="783" fg:w="16"/><text x="62.8399%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.28%)</title><rect x="62.5899%" y="485" width="1.2790%" height="15" fill="rgb(231,101,20)" fg:x="783" fg:w="16"/><text x="62.8399%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (16 samples, 1.28%)</title><rect x="62.5899%" y="469" width="1.2790%" height="15" fill="rgb(215,150,22)" fg:x="783" fg:w="16"/><text x="62.8399%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.6291%" y="453" width="0.2398%" height="15" fill="rgb(248,3,34)" fg:x="796" fg:w="3"/><text x="63.8791%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.6291%" y="437" width="0.2398%" height="15" fill="rgb(220,141,21)" fg:x="796" fg:w="3"/><text x="63.8791%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.7890%" y="421" width="0.0799%" height="15" fill="rgb(223,41,48)" fg:x="798" fg:w="1"/><text x="64.0390%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.8689%" y="453" width="0.0799%" height="15" fill="rgb(247,12,5)" fg:x="799" fg:w="1"/><text x="64.1189%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.8689%" y="437" width="0.0799%" height="15" fill="rgb(206,173,10)" fg:x="799" fg:w="1"/><text x="64.1189%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (26 samples, 2.08%)</title><rect x="61.9504%" y="533" width="2.0783%" height="15" fill="rgb(233,214,37)" fg:x="775" fg:w="26"/><text x="62.2004%" y="543.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (26 samples, 2.08%)</title><rect x="61.9504%" y="517" width="2.0783%" height="15" fill="rgb(238,86,43)" fg:x="775" fg:w="26"/><text x="62.2004%" y="527.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.8689%" y="501" width="0.1599%" height="15" fill="rgb(212,182,8)" fg:x="799" fg:w="2"/><text x="64.1189%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.8689%" y="485" width="0.1599%" height="15" fill="rgb(240,91,47)" fg:x="799" fg:w="2"/><text x="64.1189%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="63.8689%" y="469" width="0.1599%" height="15" fill="rgb(209,138,26)" fg:x="799" fg:w="2"/><text x="64.1189%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.9488%" y="453" width="0.0799%" height="15" fill="rgb(231,163,20)" fg:x="800" fg:w="1"/><text x="64.1988%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.9488%" y="437" width="0.0799%" height="15" fill="rgb(214,91,54)" fg:x="800" fg:w="1"/><text x="64.1988%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="63.9488%" y="421" width="0.0799%" height="15" fill="rgb(230,32,17)" fg:x="800" fg:w="1"/><text x="64.1988%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="63.9488%" y="405" width="0.0799%" height="15" fill="rgb(231,34,34)" fg:x="800" fg:w="1"/><text x="64.1988%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9488%" y="389" width="0.0799%" height="15" fill="rgb(224,228,27)" fg:x="800" fg:w="1"/><text x="64.1988%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.0288%" y="501" width="0.1599%" height="15" fill="rgb(219,35,40)" fg:x="801" fg:w="2"/><text x="64.2788%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.0288%" y="485" width="0.1599%" height="15" fill="rgb(234,42,8)" fg:x="801" fg:w="2"/><text x="64.2788%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.0288%" y="469" width="0.1599%" height="15" fill="rgb(226,75,22)" fg:x="801" fg:w="2"/><text x="64.2788%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.0288%" y="453" width="0.1599%" height="15" fill="rgb(242,203,28)" fg:x="801" fg:w="2"/><text x="64.2788%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.1087%" y="437" width="0.0799%" height="15" fill="rgb(221,3,9)" fg:x="802" fg:w="1"/><text x="64.3587%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.1087%" y="421" width="0.0799%" height="15" fill="rgb(214,34,31)" fg:x="802" fg:w="1"/><text x="64.3587%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.1087%" y="405" width="0.0799%" height="15" fill="rgb(252,119,15)" fg:x="802" fg:w="1"/><text x="64.3587%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.1087%" y="389" width="0.0799%" height="15" fill="rgb(244,224,31)" fg:x="802" fg:w="1"/><text x="64.3587%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.1087%" y="373" width="0.0799%" height="15" fill="rgb(215,8,51)" fg:x="802" fg:w="1"/><text x="64.3587%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.1087%" y="357" width="0.0799%" height="15" fill="rgb(207,24,1)" fg:x="802" fg:w="1"/><text x="64.3587%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.1087%" y="341" width="0.0799%" height="15" fill="rgb(245,90,0)" fg:x="802" fg:w="1"/><text x="64.3587%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.1087%" y="325" width="0.0799%" height="15" fill="rgb(246,43,48)" fg:x="802" fg:w="1"/><text x="64.3587%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.1087%" y="309" width="0.0799%" height="15" fill="rgb(252,218,10)" fg:x="802" fg:w="1"/><text x="64.3587%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.1087%" y="293" width="0.0799%" height="15" fill="rgb(231,24,35)" fg:x="802" fg:w="1"/><text x="64.3587%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.1087%" y="277" width="0.0799%" height="15" fill="rgb(225,66,19)" fg:x="802" fg:w="1"/><text x="64.3587%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1087%" y="261" width="0.0799%" height="15" fill="rgb(214,96,51)" fg:x="802" fg:w="1"/><text x="64.3587%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="64.0288%" y="517" width="0.3197%" height="15" fill="rgb(251,151,47)" fg:x="801" fg:w="4"/><text x="64.2788%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.1886%" y="501" width="0.1599%" height="15" fill="rgb(236,79,14)" fg:x="803" fg:w="2"/><text x="64.4386%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.1886%" y="485" width="0.1599%" height="15" fill="rgb(210,205,11)" fg:x="803" fg:w="2"/><text x="64.4386%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.1886%" y="469" width="0.1599%" height="15" fill="rgb(233,142,53)" fg:x="803" fg:w="2"/><text x="64.4386%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.1886%" y="453" width="0.1599%" height="15" fill="rgb(212,116,48)" fg:x="803" fg:w="2"/><text x="64.4386%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.1886%" y="437" width="0.1599%" height="15" fill="rgb(234,55,33)" fg:x="803" fg:w="2"/><text x="64.4386%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.1886%" y="421" width="0.1599%" height="15" fill="rgb(253,92,27)" fg:x="803" fg:w="2"/><text x="64.4386%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.1886%" y="405" width="0.1599%" height="15" fill="rgb(220,7,35)" fg:x="803" fg:w="2"/><text x="64.4386%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.1886%" y="389" width="0.1599%" height="15" fill="rgb(246,124,6)" fg:x="803" fg:w="2"/><text x="64.4386%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.1886%" y="373" width="0.1599%" height="15" fill="rgb(212,111,51)" fg:x="803" fg:w="2"/><text x="64.4386%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.1886%" y="357" width="0.1599%" height="15" fill="rgb(253,116,7)" fg:x="803" fg:w="2"/><text x="64.4386%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.1886%" y="341" width="0.1599%" height="15" fill="rgb(213,145,18)" fg:x="803" fg:w="2"/><text x="64.4386%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.1886%" y="325" width="0.1599%" height="15" fill="rgb(219,149,7)" fg:x="803" fg:w="2"/><text x="64.4386%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.3485%" y="501" width="0.0799%" height="15" fill="rgb(225,156,20)" fg:x="805" fg:w="1"/><text x="64.5985%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.3485%" y="485" width="0.0799%" height="15" fill="rgb(211,98,19)" fg:x="805" fg:w="1"/><text x="64.5985%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="64.3485%" y="517" width="0.1599%" height="15" fill="rgb(231,192,31)" fg:x="805" fg:w="2"/><text x="64.5985%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.4285%" y="501" width="0.0799%" height="15" fill="rgb(249,95,19)" fg:x="806" fg:w="1"/><text x="64.6785%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.4285%" y="485" width="0.0799%" height="15" fill="rgb(247,101,36)" fg:x="806" fg:w="1"/><text x="64.6785%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="64.4285%" y="469" width="0.0799%" height="15" fill="rgb(221,45,43)" fg:x="806" fg:w="1"/><text x="64.6785%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.4285%" y="453" width="0.0799%" height="15" fill="rgb(220,42,1)" fg:x="806" fg:w="1"/><text x="64.6785%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4285%" y="437" width="0.0799%" height="15" fill="rgb(236,19,24)" fg:x="806" fg:w="1"/><text x="64.6785%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5084%" y="517" width="0.0799%" height="15" fill="rgb(225,192,6)" fg:x="807" fg:w="1"/><text x="64.7584%" y="527.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="64.5883%" y="517" width="0.0799%" height="15" fill="rgb(242,30,19)" fg:x="808" fg:w="1"/><text x="64.8383%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5883%" y="501" width="0.0799%" height="15" fill="rgb(240,36,6)" fg:x="808" fg:w="1"/><text x="64.8383%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="64.7482%" y="469" width="0.0799%" height="15" fill="rgb(246,40,28)" fg:x="810" fg:w="1"/><text x="64.9982%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.8281%" y="469" width="0.0799%" height="15" fill="rgb(225,155,33)" fg:x="811" fg:w="1"/><text x="65.0781%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.8281%" y="453" width="0.0799%" height="15" fill="rgb(240,65,18)" fg:x="811" fg:w="1"/><text x="65.0781%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="64.8281%" y="437" width="0.0799%" height="15" fill="rgb(217,0,48)" fg:x="811" fg:w="1"/><text x="65.0781%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="64.8281%" y="421" width="0.0799%" height="15" fill="rgb(217,80,15)" fg:x="811" fg:w="1"/><text x="65.0781%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9081%" y="437" width="0.0799%" height="15" fill="rgb(253,43,51)" fg:x="812" fg:w="1"/><text x="65.1581%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.9081%" y="421" width="0.0799%" height="15" fill="rgb(246,60,4)" fg:x="812" fg:w="1"/><text x="65.1581%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.9081%" y="405" width="0.0799%" height="15" fill="rgb(230,40,54)" fg:x="812" fg:w="1"/><text x="65.1581%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.9880%" y="421" width="0.0799%" height="15" fill="rgb(208,20,44)" fg:x="813" fg:w="1"/><text x="65.2380%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9880%" y="405" width="0.0799%" height="15" fill="rgb(230,22,22)" fg:x="813" fg:w="1"/><text x="65.2380%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.9880%" y="389" width="0.0799%" height="15" fill="rgb(207,57,4)" fg:x="813" fg:w="1"/><text x="65.2380%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.9880%" y="373" width="0.0799%" height="15" fill="rgb(242,130,33)" fg:x="813" fg:w="1"/><text x="65.2380%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.9880%" y="357" width="0.0799%" height="15" fill="rgb(218,66,43)" fg:x="813" fg:w="1"/><text x="65.2380%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9880%" y="341" width="0.0799%" height="15" fill="rgb(236,105,16)" fg:x="813" fg:w="1"/><text x="65.2380%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9880%" y="325" width="0.0799%" height="15" fill="rgb(230,46,15)" fg:x="813" fg:w="1"/><text x="65.2380%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.0679%" y="421" width="0.1599%" height="15" fill="rgb(251,172,40)" fg:x="814" fg:w="2"/><text x="65.3179%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.0679%" y="405" width="0.1599%" height="15" fill="rgb(225,217,32)" fg:x="814" fg:w="2"/><text x="65.3179%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.0679%" y="389" width="0.1599%" height="15" fill="rgb(243,10,29)" fg:x="814" fg:w="2"/><text x="65.3179%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="65.2278%" y="357" width="0.1599%" height="15" fill="rgb(207,102,10)" fg:x="816" fg:w="2"/><text x="65.4778%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.2278%" y="341" width="0.1599%" height="15" fill="rgb(241,125,5)" fg:x="816" fg:w="2"/><text x="65.4778%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.2278%" y="325" width="0.1599%" height="15" fill="rgb(230,125,29)" fg:x="816" fg:w="2"/><text x="65.4778%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.3078%" y="309" width="0.0799%" height="15" fill="rgb(223,65,44)" fg:x="817" fg:w="1"/><text x="65.5578%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="65.2278%" y="373" width="0.2398%" height="15" fill="rgb(224,188,28)" fg:x="816" fg:w="3"/><text x="65.4778%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.3877%" y="357" width="0.0799%" height="15" fill="rgb(254,197,27)" fg:x="818" fg:w="1"/><text x="65.6377%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (11 samples, 0.88%)</title><rect x="64.6683%" y="517" width="0.8793%" height="15" fill="rgb(220,200,25)" fg:x="809" fg:w="11"/><text x="64.9183%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="64.6683%" y="501" width="0.8793%" height="15" fill="rgb(239,225,54)" fg:x="809" fg:w="11"/><text x="64.9183%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="64.6683%" y="485" width="0.8793%" height="15" fill="rgb(211,59,40)" fg:x="809" fg:w="11"/><text x="64.9183%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="64.9081%" y="469" width="0.6395%" height="15" fill="rgb(213,176,46)" fg:x="812" fg:w="8"/><text x="65.1581%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="64.9081%" y="453" width="0.6395%" height="15" fill="rgb(226,99,4)" fg:x="812" fg:w="8"/><text x="65.1581%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="64.9880%" y="437" width="0.5596%" height="15" fill="rgb(239,203,43)" fg:x="813" fg:w="7"/><text x="65.2380%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.2278%" y="421" width="0.3197%" height="15" fill="rgb(246,1,45)" fg:x="816" fg:w="4"/><text x="65.4778%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="65.2278%" y="405" width="0.3197%" height="15" fill="rgb(231,42,52)" fg:x="816" fg:w="4"/><text x="65.4778%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="65.2278%" y="389" width="0.3197%" height="15" fill="rgb(240,13,50)" fg:x="816" fg:w="4"/><text x="65.4778%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.4676%" y="373" width="0.0799%" height="15" fill="rgb(225,81,14)" fg:x="819" fg:w="1"/><text x="65.7176%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.4676%" y="357" width="0.0799%" height="15" fill="rgb(216,182,23)" fg:x="819" fg:w="1"/><text x="65.7176%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.6275%" y="389" width="0.1599%" height="15" fill="rgb(233,137,19)" fg:x="821" fg:w="2"/><text x="65.8775%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.7074%" y="373" width="0.0799%" height="15" fill="rgb(242,61,46)" fg:x="822" fg:w="1"/><text x="65.9574%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.7074%" y="357" width="0.0799%" height="15" fill="rgb(221,168,51)" fg:x="822" fg:w="1"/><text x="65.9574%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="65.7874%" y="389" width="0.1599%" height="15" fill="rgb(238,48,15)" fg:x="823" fg:w="2"/><text x="66.0374%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.8673%" y="373" width="0.0799%" height="15" fill="rgb(216,13,16)" fg:x="824" fg:w="1"/><text x="66.1173%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (52 samples, 4.16%)</title><rect x="61.8705%" y="549" width="4.1567%" height="15" fill="rgb(223,185,34)" fg:x="774" fg:w="52"/><text x="62.1205%" y="559.50">engin..</text></g><g><title>engine::session::internal::Entities::add_persisted (25 samples, 2.00%)</title><rect x="64.0288%" y="533" width="1.9984%" height="15" fill="rgb(228,94,42)" fg:x="801" fg:w="25"/><text x="64.2788%" y="543.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="65.5476%" y="517" width="0.4796%" height="15" fill="rgb(218,166,43)" fg:x="820" fg:w="6"/><text x="65.7976%" y="527.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="65.5476%" y="501" width="0.4796%" height="15" fill="rgb(232,30,50)" fg:x="820" fg:w="6"/><text x="65.7976%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="65.5476%" y="485" width="0.4796%" height="15" fill="rgb(245,206,45)" fg:x="820" fg:w="6"/><text x="65.7976%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="65.5476%" y="469" width="0.4796%" height="15" fill="rgb(220,56,22)" fg:x="820" fg:w="6"/><text x="65.7976%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="65.5476%" y="453" width="0.4796%" height="15" fill="rgb(239,129,38)" fg:x="820" fg:w="6"/><text x="65.7976%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="65.5476%" y="437" width="0.4796%" height="15" fill="rgb(207,68,41)" fg:x="820" fg:w="6"/><text x="65.7976%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="65.6275%" y="421" width="0.3997%" height="15" fill="rgb(221,21,7)" fg:x="821" fg:w="5"/><text x="65.8775%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="65.6275%" y="405" width="0.3997%" height="15" fill="rgb(240,33,25)" fg:x="821" fg:w="5"/><text x="65.8775%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9472%" y="389" width="0.0799%" height="15" fill="rgb(242,119,10)" fg:x="825" fg:w="1"/><text x="66.1972%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9472%" y="373" width="0.0799%" height="15" fill="rgb(214,149,40)" fg:x="825" fg:w="1"/><text x="66.1972%" y="383.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="66.0272%" y="549" width="0.2398%" height="15" fill="rgb(228,25,36)" fg:x="826" fg:w="3"/><text x="66.2772%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="66.1071%" y="533" width="0.1599%" height="15" fill="rgb(222,59,15)" fg:x="827" fg:w="2"/><text x="66.3571%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1871%" y="517" width="0.0799%" height="15" fill="rgb(218,170,0)" fg:x="828" fg:w="1"/><text x="66.4371%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.5068%" y="501" width="0.0799%" height="15" fill="rgb(232,173,23)" fg:x="832" fg:w="1"/><text x="66.7568%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.5867%" y="485" width="0.0799%" height="15" fill="rgb(218,116,1)" fg:x="833" fg:w="1"/><text x="66.8367%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5867%" y="469" width="0.0799%" height="15" fill="rgb(207,34,4)" fg:x="833" fg:w="1"/><text x="66.8367%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="66.5867%" y="501" width="0.3197%" height="15" fill="rgb(229,54,52)" fg:x="833" fg:w="4"/><text x="66.8367%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.6667%" y="485" width="0.2398%" height="15" fill="rgb(211,86,23)" fg:x="834" fg:w="3"/><text x="66.9167%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.6667%" y="469" width="0.2398%" height="15" fill="rgb(254,153,34)" fg:x="834" fg:w="3"/><text x="66.9167%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="66.6667%" y="453" width="0.2398%" height="15" fill="rgb(219,220,14)" fg:x="834" fg:w="3"/><text x="66.9167%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.6667%" y="437" width="0.2398%" height="15" fill="rgb(247,8,26)" fg:x="834" fg:w="3"/><text x="66.9167%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.8265%" y="421" width="0.0799%" height="15" fill="rgb(213,129,42)" fg:x="836" fg:w="1"/><text x="67.0765%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="67.1463%" y="421" width="0.0799%" height="15" fill="rgb(225,95,41)" fg:x="840" fg:w="1"/><text x="67.3963%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.1463%" y="405" width="0.0799%" height="15" fill="rgb(215,134,24)" fg:x="840" fg:w="1"/><text x="67.3963%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="67.1463%" y="389" width="0.0799%" height="15" fill="rgb(235,23,54)" fg:x="840" fg:w="1"/><text x="67.3963%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.1463%" y="453" width="0.1599%" height="15" fill="rgb(229,96,31)" fg:x="840" fg:w="2"/><text x="67.3963%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.1463%" y="437" width="0.1599%" height="15" fill="rgb(206,111,12)" fg:x="840" fg:w="2"/><text x="67.3963%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="67.2262%" y="421" width="0.0799%" height="15" fill="rgb(222,177,8)" fg:x="841" fg:w="1"/><text x="67.4762%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="67.3861%" y="405" width="0.2398%" height="15" fill="rgb(251,36,52)" fg:x="843" fg:w="3"/><text x="67.6361%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.4660%" y="389" width="0.1599%" height="15" fill="rgb(216,182,29)" fg:x="844" fg:w="2"/><text x="67.7160%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.4660%" y="373" width="0.1599%" height="15" fill="rgb(241,145,50)" fg:x="844" fg:w="2"/><text x="67.7160%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.4660%" y="357" width="0.1599%" height="15" fill="rgb(231,71,35)" fg:x="844" fg:w="2"/><text x="67.7160%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.5460%" y="341" width="0.0799%" height="15" fill="rgb(218,22,17)" fg:x="845" fg:w="1"/><text x="67.7960%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.5460%" y="325" width="0.0799%" height="15" fill="rgb(225,227,6)" fg:x="845" fg:w="1"/><text x="67.7960%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.5460%" y="309" width="0.0799%" height="15" fill="rgb(224,204,17)" fg:x="845" fg:w="1"/><text x="67.7960%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.6259%" y="405" width="0.0799%" height="15" fill="rgb(227,61,28)" fg:x="846" fg:w="1"/><text x="67.8759%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.6259%" y="389" width="0.0799%" height="15" fill="rgb(242,148,23)" fg:x="846" fg:w="1"/><text x="67.8759%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.6259%" y="373" width="0.0799%" height="15" fill="rgb(237,105,33)" fg:x="846" fg:w="1"/><text x="67.8759%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.6259%" y="357" width="0.0799%" height="15" fill="rgb(238,218,40)" fg:x="846" fg:w="1"/><text x="67.8759%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (12 samples, 0.96%)</title><rect x="66.9065%" y="501" width="0.9592%" height="15" fill="rgb(209,126,11)" fg:x="837" fg:w="12"/><text x="67.1565%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="66.9065%" y="485" width="0.9592%" height="15" fill="rgb(245,90,11)" fg:x="837" fg:w="12"/><text x="67.1565%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="66.9065%" y="469" width="0.9592%" height="15" fill="rgb(211,195,10)" fg:x="837" fg:w="12"/><text x="67.1565%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="67.3062%" y="453" width="0.5596%" height="15" fill="rgb(231,45,45)" fg:x="842" fg:w="7"/><text x="67.5562%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="67.3062%" y="437" width="0.5596%" height="15" fill="rgb(246,100,43)" fg:x="842" fg:w="7"/><text x="67.5562%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="67.3861%" y="421" width="0.4796%" height="15" fill="rgb(241,193,8)" fg:x="843" fg:w="6"/><text x="67.6361%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.7058%" y="405" width="0.1599%" height="15" fill="rgb(208,76,19)" fg:x="847" fg:w="2"/><text x="67.9558%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.7858%" y="389" width="0.0799%" height="15" fill="rgb(223,69,40)" fg:x="848" fg:w="1"/><text x="68.0358%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="67.7858%" y="373" width="0.0799%" height="15" fill="rgb(207,120,39)" fg:x="848" fg:w="1"/><text x="68.0358%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7858%" y="357" width="0.0799%" height="15" fill="rgb(212,209,28)" fg:x="848" fg:w="1"/><text x="68.0358%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.7858%" y="341" width="0.0799%" height="15" fill="rgb(246,82,29)" fg:x="848" fg:w="1"/><text x="68.0358%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="67.7858%" y="325" width="0.0799%" height="15" fill="rgb(239,6,40)" fg:x="848" fg:w="1"/><text x="68.0358%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7858%" y="309" width="0.0799%" height="15" fill="rgb(228,181,35)" fg:x="848" fg:w="1"/><text x="68.0358%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.7858%" y="293" width="0.0799%" height="15" fill="rgb(238,151,2)" fg:x="848" fg:w="1"/><text x="68.0358%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.0256%" y="341" width="0.0799%" height="15" fill="rgb(236,94,18)" fg:x="851" fg:w="1"/><text x="68.2756%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.0256%" y="325" width="0.0799%" height="15" fill="rgb(208,38,14)" fg:x="851" fg:w="1"/><text x="68.2756%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.0256%" y="309" width="0.0799%" height="15" fill="rgb(234,215,27)" fg:x="851" fg:w="1"/><text x="68.2756%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.0256%" y="293" width="0.0799%" height="15" fill="rgb(254,211,53)" fg:x="851" fg:w="1"/><text x="68.2756%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.0256%" y="277" width="0.0799%" height="15" fill="rgb(216,175,11)" fg:x="851" fg:w="1"/><text x="68.2756%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.1055%" y="341" width="0.0799%" height="15" fill="rgb(246,179,26)" fg:x="852" fg:w="1"/><text x="68.3555%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1055%" y="325" width="0.0799%" height="15" fill="rgb(249,19,52)" fg:x="852" fg:w="1"/><text x="68.3555%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="67.8657%" y="405" width="0.3997%" height="15" fill="rgb(230,42,52)" fg:x="849" fg:w="5"/><text x="68.1157%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="67.8657%" y="389" width="0.3997%" height="15" fill="rgb(221,171,0)" fg:x="849" fg:w="5"/><text x="68.1157%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="67.9456%" y="373" width="0.3197%" height="15" fill="rgb(222,177,40)" fg:x="850" fg:w="4"/><text x="68.1956%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.0256%" y="357" width="0.2398%" height="15" fill="rgb(247,34,16)" fg:x="851" fg:w="3"/><text x="68.2756%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.1855%" y="341" width="0.0799%" height="15" fill="rgb(213,217,37)" fg:x="853" fg:w="1"/><text x="68.4355%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="67.8657%" y="437" width="0.4796%" height="15" fill="rgb(231,189,24)" fg:x="849" fg:w="6"/><text x="68.1157%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="67.8657%" y="421" width="0.4796%" height="15" fill="rgb(214,22,9)" fg:x="849" fg:w="6"/><text x="68.1157%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.2654%" y="405" width="0.0799%" height="15" fill="rgb(212,70,22)" fg:x="854" fg:w="1"/><text x="68.5154%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.2654%" y="389" width="0.0799%" height="15" fill="rgb(249,64,51)" fg:x="854" fg:w="1"/><text x="68.5154%" y="399.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (191 samples, 15.27%)</title><rect x="53.2374%" y="581" width="15.2678%" height="15" fill="rgb(249,148,20)" fg:x="666" fg:w="191"/><text x="53.4874%" y="591.50">engine::session::Sessio..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (191 samples, 15.27%)</title><rect x="53.2374%" y="565" width="15.2678%" height="15" fill="rgb(246,46,48)" fg:x="666" fg:w="191"/><text x="53.4874%" y="575.50">engine::session::Sessio..</text></g><g><title>kernel::model::EntityPtrResolver::world (28 samples, 2.24%)</title><rect x="66.2670%" y="549" width="2.2382%" height="15" fill="rgb(217,34,48)" fg:x="829" fg:w="28"/><text x="66.5170%" y="559.50">k..</text></g><g><title>engine::session::Session::load_entity (27 samples, 2.16%)</title><rect x="66.3469%" y="533" width="2.1583%" height="15" fill="rgb(222,45,26)" fg:x="830" fg:w="27"/><text x="66.5969%" y="543.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.08%)</title><rect x="66.4269%" y="517" width="2.0783%" height="15" fill="rgb(230,201,36)" fg:x="831" fg:w="26"/><text x="66.6769%" y="527.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="67.8657%" y="501" width="0.6395%" height="15" fill="rgb(217,30,43)" fg:x="849" fg:w="8"/><text x="68.1157%" y="511.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="67.8657%" y="485" width="0.6395%" height="15" fill="rgb(230,197,40)" fg:x="849" fg:w="8"/><text x="68.1157%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="67.8657%" y="469" width="0.6395%" height="15" fill="rgb(239,181,18)" fg:x="849" fg:w="8"/><text x="68.1157%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="67.8657%" y="453" width="0.6395%" height="15" fill="rgb(222,60,39)" fg:x="849" fg:w="8"/><text x="68.1157%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.3453%" y="437" width="0.1599%" height="15" fill="rgb(210,60,22)" fg:x="855" fg:w="2"/><text x="68.5953%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.3453%" y="421" width="0.1599%" height="15" fill="rgb(239,213,48)" fg:x="855" fg:w="2"/><text x="68.5953%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="68.3453%" y="405" width="0.1599%" height="15" fill="rgb(253,214,23)" fg:x="855" fg:w="2"/><text x="68.5953%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (859 samples, 68.67%)</title><rect x="0.0000%" y="629" width="68.6651%" height="15" fill="rgb(211,98,45)" fg:x="0" fg:w="859"/><text x="0.2500%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (859 samples, 68.67%)</title><rect x="0.0000%" y="613" width="68.6651%" height="15" fill="rgb(239,130,44)" fg:x="0" fg:w="859"/><text x="0.2500%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (859 samples, 68.67%)</title><rect x="0.0000%" y="597" width="68.6651%" height="15" fill="rgb(222,181,35)" fg:x="0" fg:w="859"/><text x="0.2500%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="68.5052%" y="581" width="0.1599%" height="15" fill="rgb(219,219,49)" fg:x="857" fg:w="2"/><text x="68.7552%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="68.5052%" y="565" width="0.1599%" height="15" fill="rgb(227,161,51)" fg:x="857" fg:w="2"/><text x="68.7552%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="68.5052%" y="549" width="0.1599%" height="15" fill="rgb(239,112,27)" fg:x="857" fg:w="2"/><text x="68.7552%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="68.5052%" y="533" width="0.1599%" height="15" fill="rgb(248,122,18)" fg:x="857" fg:w="2"/><text x="68.7552%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.6651%" y="485" width="0.0799%" height="15" fill="rgb(245,130,23)" fg:x="859" fg:w="1"/><text x="68.9151%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="68.6651%" y="533" width="0.1599%" height="15" fill="rgb(211,225,28)" fg:x="859" fg:w="2"/><text x="68.9151%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.16%)</title><rect x="68.6651%" y="517" width="0.1599%" height="15" fill="rgb(242,105,44)" fg:x="859" fg:w="2"/><text x="68.9151%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (2 samples, 0.16%)</title><rect x="68.6651%" y="501" width="0.1599%" height="15" fill="rgb(216,183,46)" fg:x="859" fg:w="2"/><text x="68.9151%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::plugins::ArgumentType&gt; (1 samples, 0.08%)</title><rect x="68.7450%" y="485" width="0.0799%" height="15" fill="rgb(227,112,9)" fg:x="860" fg:w="1"/><text x="68.9950%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="68.6651%" y="565" width="0.2398%" height="15" fill="rgb(244,21,0)" fg:x="859" fg:w="3"/><text x="68.9151%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="68.6651%" y="549" width="0.2398%" height="15" fill="rgb(236,185,14)" fg:x="859" fg:w="3"/><text x="68.9151%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="68.8249%" y="533" width="0.0799%" height="15" fill="rgb(236,170,30)" fg:x="861" fg:w="1"/><text x="69.0749%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.8249%" y="517" width="0.0799%" height="15" fill="rgb(209,198,51)" fg:x="861" fg:w="1"/><text x="69.0749%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2246%" y="453" width="0.0799%" height="15" fill="rgb(205,171,26)" fg:x="866" fg:w="1"/><text x="69.4746%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.3046%" y="453" width="0.0799%" height="15" fill="rgb(246,41,49)" fg:x="867" fg:w="1"/><text x="69.5546%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="69.3845%" y="437" width="0.2398%" height="15" fill="rgb(240,229,12)" fg:x="868" fg:w="3"/><text x="69.6345%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.7042%" y="421" width="0.0799%" height="15" fill="rgb(212,8,54)" fg:x="872" fg:w="1"/><text x="69.9542%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="68.9049%" y="501" width="0.9592%" height="15" fill="rgb(230,114,13)" fg:x="862" fg:w="12"/><text x="69.1549%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (11 samples, 0.88%)</title><rect x="68.9848%" y="485" width="0.8793%" height="15" fill="rgb(229,130,28)" fg:x="863" fg:w="11"/><text x="69.2348%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="69.0647%" y="469" width="0.7994%" height="15" fill="rgb(206,139,15)" fg:x="864" fg:w="10"/><text x="69.3147%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="69.3845%" y="453" width="0.4796%" height="15" fill="rgb(241,188,35)" fg:x="868" fg:w="6"/><text x="69.6345%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="69.6243%" y="437" width="0.2398%" height="15" fill="rgb(208,224,26)" fg:x="871" fg:w="3"/><text x="69.8743%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.7842%" y="421" width="0.0799%" height="15" fill="rgb(251,131,28)" fg:x="873" fg:w="1"/><text x="70.0342%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.7842%" y="405" width="0.0799%" height="15" fill="rgb(208,153,1)" fg:x="873" fg:w="1"/><text x="70.0342%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8641%" y="501" width="0.0799%" height="15" fill="rgb(234,33,36)" fg:x="874" fg:w="1"/><text x="70.1141%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.9440%" y="469" width="0.0799%" height="15" fill="rgb(246,42,29)" fg:x="875" fg:w="1"/><text x="70.1940%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.0240%" y="469" width="0.0799%" height="15" fill="rgb(251,114,16)" fg:x="876" fg:w="1"/><text x="70.2740%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0240%" y="453" width="0.0799%" height="15" fill="rgb(233,13,38)" fg:x="876" fg:w="1"/><text x="70.2740%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1839%" y="453" width="0.0799%" height="15" fill="rgb(247,120,19)" fg:x="878" fg:w="1"/><text x="70.4339%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.92%)</title><rect x="68.6651%" y="581" width="1.9185%" height="15" fill="rgb(205,11,16)" fg:x="859" fg:w="24"/><text x="68.9151%" y="591.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (21 samples, 1.68%)</title><rect x="68.9049%" y="565" width="1.6787%" height="15" fill="rgb(228,185,19)" fg:x="862" fg:w="21"/><text x="69.1549%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="68.9049%" y="549" width="1.6787%" height="15" fill="rgb(239,88,52)" fg:x="862" fg:w="21"/><text x="69.1549%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (21 samples, 1.68%)</title><rect x="68.9049%" y="533" width="1.6787%" height="15" fill="rgb(219,23,1)" fg:x="862" fg:w="21"/><text x="69.1549%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="68.9049%" y="517" width="1.6787%" height="15" fill="rgb(253,177,16)" fg:x="862" fg:w="21"/><text x="69.1549%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="69.9440%" y="501" width="0.6395%" height="15" fill="rgb(225,150,40)" fg:x="875" fg:w="8"/><text x="70.1940%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="69.9440%" y="485" width="0.6395%" height="15" fill="rgb(208,108,30)" fg:x="875" fg:w="8"/><text x="70.1940%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="70.1039%" y="469" width="0.4796%" height="15" fill="rgb(214,122,4)" fg:x="877" fg:w="6"/><text x="70.3539%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="70.2638%" y="453" width="0.3197%" height="15" fill="rgb(229,74,37)" fg:x="879" fg:w="4"/><text x="70.5138%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="70.3437%" y="437" width="0.2398%" height="15" fill="rgb(233,61,41)" fg:x="880" fg:w="3"/><text x="70.5937%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.4237%" y="421" width="0.1599%" height="15" fill="rgb(238,191,5)" fg:x="881" fg:w="2"/><text x="70.6737%" y="431.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="70.7434%" y="533" width="0.0799%" height="15" fill="rgb(233,78,24)" fg:x="885" fg:w="1"/><text x="70.9934%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7434%" y="517" width="0.0799%" height="15" fill="rgb(211,142,8)" fg:x="885" fg:w="1"/><text x="70.9934%" y="527.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="70.9832%" y="453" width="0.0799%" height="15" fill="rgb(253,38,53)" fg:x="888" fg:w="1"/><text x="71.2332%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="70.9832%" y="437" width="0.0799%" height="15" fill="rgb(234,63,51)" fg:x="888" fg:w="1"/><text x="71.2332%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="70.9832%" y="421" width="0.0799%" height="15" fill="rgb(205,23,31)" fg:x="888" fg:w="1"/><text x="71.2332%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.9832%" y="405" width="0.0799%" height="15" fill="rgb(210,184,50)" fg:x="888" fg:w="1"/><text x="71.2332%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9832%" y="389" width="0.0799%" height="15" fill="rgb(222,112,26)" fg:x="888" fg:w="1"/><text x="71.2332%" y="399.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="70.9832%" y="485" width="0.1599%" height="15" fill="rgb(250,98,18)" fg:x="888" fg:w="2"/><text x="71.2332%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="70.9832%" y="469" width="0.1599%" height="15" fill="rgb(250,34,12)" fg:x="888" fg:w="2"/><text x="71.2332%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="71.0631%" y="453" width="0.0799%" height="15" fill="rgb(236,141,30)" fg:x="889" fg:w="1"/><text x="71.3131%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.0631%" y="437" width="0.0799%" height="15" fill="rgb(246,134,38)" fg:x="889" fg:w="1"/><text x="71.3131%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3030%" y="421" width="0.0799%" height="15" fill="rgb(240,114,4)" fg:x="892" fg:w="1"/><text x="71.5530%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.32%)</title><rect x="71.1431%" y="485" width="0.3197%" height="15" fill="rgb(243,113,39)" fg:x="890" fg:w="4"/><text x="71.3931%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="71.2230%" y="469" width="0.2398%" height="15" fill="rgb(239,215,4)" fg:x="891" fg:w="3"/><text x="71.4730%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::plugins::HasActionSchema&gt;::action_schema (3 samples, 0.24%)</title><rect x="71.2230%" y="453" width="0.2398%" height="15" fill="rgb(236,229,45)" fg:x="891" fg:w="3"/><text x="71.4730%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (3 samples, 0.24%)</title><rect x="71.2230%" y="437" width="0.2398%" height="15" fill="rgb(242,2,6)" fg:x="891" fg:w="3"/><text x="71.4730%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="71.3829%" y="421" width="0.0799%" height="15" fill="rgb(239,108,21)" fg:x="893" fg:w="1"/><text x="71.6329%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.3829%" y="405" width="0.0799%" height="15" fill="rgb(215,168,34)" fg:x="893" fg:w="1"/><text x="71.6329%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3829%" y="389" width="0.0799%" height="15" fill="rgb(238,31,17)" fg:x="893" fg:w="1"/><text x="71.6329%" y="399.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="71.4628%" y="485" width="0.0799%" height="15" fill="rgb(220,133,11)" fg:x="894" fg:w="1"/><text x="71.7128%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="71.4628%" y="469" width="0.0799%" height="15" fill="rgb(212,158,23)" fg:x="894" fg:w="1"/><text x="71.7128%" y="479.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="71.5428%" y="485" width="0.0799%" height="15" fill="rgb(223,172,7)" fg:x="895" fg:w="1"/><text x="71.7928%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="71.5428%" y="469" width="0.0799%" height="15" fill="rgb(244,3,52)" fg:x="895" fg:w="1"/><text x="71.7928%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="71.5428%" y="453" width="0.0799%" height="15" fill="rgb(207,69,27)" fg:x="895" fg:w="1"/><text x="71.7928%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.5428%" y="437" width="0.0799%" height="15" fill="rgb(213,136,45)" fg:x="895" fg:w="1"/><text x="71.7928%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::actions::AddRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="71.6227%" y="453" width="0.0799%" height="15" fill="rgb(218,79,17)" fg:x="896" fg:w="1"/><text x="71.8727%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="71.6227%" y="437" width="0.0799%" height="15" fill="rgb(216,106,36)" fg:x="896" fg:w="1"/><text x="71.8727%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="71.7026%" y="453" width="0.0799%" height="15" fill="rgb(251,27,45)" fg:x="897" fg:w="1"/><text x="71.9526%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.7026%" y="437" width="0.0799%" height="15" fill="rgb(232,21,34)" fg:x="897" fg:w="1"/><text x="71.9526%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.7026%" y="421" width="0.0799%" height="15" fill="rgb(249,191,16)" fg:x="897" fg:w="1"/><text x="71.9526%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="71.6227%" y="485" width="0.2398%" height="15" fill="rgb(224,88,20)" fg:x="896" fg:w="3"/><text x="71.8727%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="71.6227%" y="469" width="0.2398%" height="15" fill="rgb(237,93,27)" fg:x="896" fg:w="3"/><text x="71.8727%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="71.7826%" y="453" width="0.0799%" height="15" fill="rgb(226,198,48)" fg:x="898" fg:w="1"/><text x="72.0326%" y="463.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="71.8625%" y="485" width="0.0799%" height="15" fill="rgb(207,162,53)" fg:x="899" fg:w="1"/><text x="72.1125%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="71.8625%" y="469" width="0.0799%" height="15" fill="rgb(207,169,9)" fg:x="899" fg:w="1"/><text x="72.1125%" y="479.50"></text></g><g><title>&lt;plugins_rune::actions::RuneAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="71.8625%" y="453" width="0.0799%" height="15" fill="rgb(224,166,46)" fg:x="899" fg:w="1"/><text x="72.1125%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (15 samples, 1.20%)</title><rect x="70.9033%" y="501" width="1.1990%" height="15" fill="rgb(233,26,6)" fg:x="887" fg:w="15"/><text x="71.1533%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.9424%" y="485" width="0.1599%" height="15" fill="rgb(218,106,45)" fg:x="900" fg:w="2"/><text x="72.1924%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.1823%" y="437" width="0.0799%" height="15" fill="rgb(240,217,4)" fg:x="903" fg:w="1"/><text x="72.4323%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.1823%" y="421" width="0.0799%" height="15" fill="rgb(246,171,10)" fg:x="903" fg:w="1"/><text x="72.4323%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.1823%" y="405" width="0.0799%" height="15" fill="rgb(223,197,30)" fg:x="903" fg:w="1"/><text x="72.4323%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.1823%" y="389" width="0.0799%" height="15" fill="rgb(207,92,16)" fg:x="903" fg:w="1"/><text x="72.4323%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.1823%" y="373" width="0.0799%" height="15" fill="rgb(211,6,44)" fg:x="903" fg:w="1"/><text x="72.4323%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.1823%" y="357" width="0.0799%" height="15" fill="rgb(219,139,2)" fg:x="903" fg:w="1"/><text x="72.4323%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.1823%" y="341" width="0.0799%" height="15" fill="rgb(224,103,21)" fg:x="903" fg:w="1"/><text x="72.4323%" y="351.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="72.1823%" y="485" width="0.1599%" height="15" fill="rgb(254,110,48)" fg:x="903" fg:w="2"/><text x="72.4323%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="72.1823%" y="469" width="0.1599%" height="15" fill="rgb(212,88,19)" fg:x="903" fg:w="2"/><text x="72.4323%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="72.1823%" y="453" width="0.1599%" height="15" fill="rgb(248,103,6)" fg:x="903" fg:w="2"/><text x="72.4323%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.2622%" y="437" width="0.0799%" height="15" fill="rgb(214,53,46)" fg:x="904" fg:w="1"/><text x="72.5122%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2622%" y="421" width="0.0799%" height="15" fill="rgb(236,190,24)" fg:x="904" fg:w="1"/><text x="72.5122%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2622%" y="405" width="0.0799%" height="15" fill="rgb(254,58,28)" fg:x="904" fg:w="1"/><text x="72.5122%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.2622%" y="389" width="0.0799%" height="15" fill="rgb(243,63,27)" fg:x="904" fg:w="1"/><text x="72.5122%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.2622%" y="373" width="0.0799%" height="15" fill="rgb(206,81,20)" fg:x="904" fg:w="1"/><text x="72.5122%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.2622%" y="357" width="0.0799%" height="15" fill="rgb(252,69,51)" fg:x="904" fg:w="1"/><text x="72.5122%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.2622%" y="341" width="0.0799%" height="15" fill="rgb(222,213,4)" fg:x="904" fg:w="1"/><text x="72.5122%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.2622%" y="325" width="0.0799%" height="15" fill="rgb(226,198,12)" fg:x="904" fg:w="1"/><text x="72.5122%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.2622%" y="309" width="0.0799%" height="15" fill="rgb(248,115,11)" fg:x="904" fg:w="1"/><text x="72.5122%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.2622%" y="293" width="0.0799%" height="15" fill="rgb(221,148,54)" fg:x="904" fg:w="1"/><text x="72.5122%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="72.2622%" y="277" width="0.0799%" height="15" fill="rgb(214,209,51)" fg:x="904" fg:w="1"/><text x="72.5122%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.2622%" y="261" width="0.0799%" height="15" fill="rgb(249,116,53)" fg:x="904" fg:w="1"/><text x="72.5122%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="72.2622%" y="245" width="0.0799%" height="15" fill="rgb(248,170,1)" fg:x="904" fg:w="1"/><text x="72.5122%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="72.2622%" y="229" width="0.0799%" height="15" fill="rgb(244,105,10)" fg:x="904" fg:w="1"/><text x="72.5122%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="72.2622%" y="213" width="0.0799%" height="15" fill="rgb(229,100,5)" fg:x="904" fg:w="1"/><text x="72.5122%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.2622%" y="197" width="0.0799%" height="15" fill="rgb(233,221,39)" fg:x="904" fg:w="1"/><text x="72.5122%" y="207.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="72.1023%" y="501" width="0.3197%" height="15" fill="rgb(233,88,21)" fg:x="902" fg:w="4"/><text x="72.3523%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="72.3421%" y="485" width="0.0799%" height="15" fill="rgb(206,13,0)" fg:x="905" fg:w="1"/><text x="72.5921%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="72.3421%" y="469" width="0.0799%" height="15" fill="rgb(242,15,35)" fg:x="905" fg:w="1"/><text x="72.5921%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="72.3421%" y="453" width="0.0799%" height="15" fill="rgb(247,142,41)" fg:x="905" fg:w="1"/><text x="72.5921%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="72.3421%" y="437" width="0.0799%" height="15" fill="rgb(245,51,29)" fg:x="905" fg:w="1"/><text x="72.5921%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="72.3421%" y="421" width="0.0799%" height="15" fill="rgb(228,209,43)" fg:x="905" fg:w="1"/><text x="72.5921%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="72.3421%" y="405" width="0.0799%" height="15" fill="rgb(233,185,9)" fg:x="905" fg:w="1"/><text x="72.5921%" y="415.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="72.3421%" y="389" width="0.0799%" height="15" fill="rgb(226,93,0)" fg:x="905" fg:w="1"/><text x="72.5921%" y="399.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (4 samples, 0.32%)</title><rect x="72.5020%" y="485" width="0.3197%" height="15" fill="rgb(245,194,43)" fg:x="907" fg:w="4"/><text x="72.7520%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="72.5020%" y="469" width="0.3197%" height="15" fill="rgb(211,145,34)" fg:x="907" fg:w="4"/><text x="72.7520%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="72.5020%" y="453" width="0.3197%" height="15" fill="rgb(231,228,28)" fg:x="907" fg:w="4"/><text x="72.7520%" y="463.50"></text></g><g><title>glob::is_dir (7 samples, 0.56%)</title><rect x="72.8217%" y="437" width="0.5596%" height="15" fill="rgb(236,149,4)" fg:x="911" fg:w="7"/><text x="73.0717%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (6 samples, 0.48%)</title><rect x="72.9017%" y="421" width="0.4796%" height="15" fill="rgb(234,114,38)" fg:x="912" fg:w="6"/><text x="73.1517%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (6 samples, 0.48%)</title><rect x="72.9017%" y="405" width="0.4796%" height="15" fill="rgb(246,132,51)" fg:x="912" fg:w="6"/><text x="73.1517%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (6 samples, 0.48%)</title><rect x="72.9017%" y="389" width="0.4796%" height="15" fill="rgb(251,137,22)" fg:x="912" fg:w="6"/><text x="73.1517%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (6 samples, 0.48%)</title><rect x="72.9017%" y="373" width="0.4796%" height="15" fill="rgb(243,59,52)" fg:x="912" fg:w="6"/><text x="73.1517%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (6 samples, 0.48%)</title><rect x="72.9017%" y="357" width="0.4796%" height="15" fill="rgb(239,56,28)" fg:x="912" fg:w="6"/><text x="73.1517%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (6 samples, 0.48%)</title><rect x="72.9017%" y="341" width="0.4796%" height="15" fill="rgb(218,168,27)" fg:x="912" fg:w="6"/><text x="73.1517%" y="351.50"></text></g><g><title>statx (6 samples, 0.48%)</title><rect x="72.9017%" y="325" width="0.4796%" height="15" fill="rgb(232,165,11)" fg:x="912" fg:w="6"/><text x="73.1517%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.80%)</title><rect x="72.8217%" y="469" width="0.7994%" height="15" fill="rgb(253,55,41)" fg:x="911" fg:w="10"/><text x="73.0717%" y="479.50"></text></g><g><title>glob::fill_todo (10 samples, 0.80%)</title><rect x="72.8217%" y="453" width="0.7994%" height="15" fill="rgb(233,206,24)" fg:x="911" fg:w="10"/><text x="73.0717%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.24%)</title><rect x="73.3813%" y="437" width="0.2398%" height="15" fill="rgb(220,199,8)" fg:x="918" fg:w="3"/><text x="73.6313%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.24%)</title><rect x="73.3813%" y="421" width="0.2398%" height="15" fill="rgb(254,65,26)" fg:x="918" fg:w="3"/><text x="73.6313%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="73.3813%" y="405" width="0.2398%" height="15" fill="rgb(253,102,23)" fg:x="918" fg:w="3"/><text x="73.6313%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.24%)</title><rect x="73.3813%" y="389" width="0.2398%" height="15" fill="rgb(231,103,35)" fg:x="918" fg:w="3"/><text x="73.6313%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.24%)</title><rect x="73.3813%" y="373" width="0.2398%" height="15" fill="rgb(238,26,10)" fg:x="918" fg:w="3"/><text x="73.6313%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.24%)</title><rect x="73.3813%" y="357" width="0.2398%" height="15" fill="rgb(234,191,34)" fg:x="918" fg:w="3"/><text x="73.6313%" y="367.50"></text></g><g><title>statx (3 samples, 0.24%)</title><rect x="73.3813%" y="341" width="0.2398%" height="15" fill="rgb(206,210,9)" fg:x="918" fg:w="3"/><text x="73.6313%" y="351.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.6211%" y="437" width="0.0799%" height="15" fill="rgb(219,155,3)" fg:x="921" fg:w="1"/><text x="73.8711%" y="447.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (17 samples, 1.36%)</title><rect x="72.4221%" y="501" width="1.3589%" height="15" fill="rgb(221,62,52)" fg:x="906" fg:w="17"/><text x="72.6721%" y="511.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (12 samples, 0.96%)</title><rect x="72.8217%" y="485" width="0.9592%" height="15" fill="rgb(215,197,36)" fg:x="911" fg:w="12"/><text x="73.0717%" y="495.50"></text></g><g><title>glob::glob (2 samples, 0.16%)</title><rect x="73.6211%" y="469" width="0.1599%" height="15" fill="rgb(226,222,6)" fg:x="921" fg:w="2"/><text x="73.8711%" y="479.50"></text></g><g><title>glob::glob_with (2 samples, 0.16%)</title><rect x="73.6211%" y="453" width="0.1599%" height="15" fill="rgb(215,58,28)" fg:x="921" fg:w="2"/><text x="73.8711%" y="463.50"></text></g><g><title>glob::Pattern::new (1 samples, 0.08%)</title><rect x="73.7010%" y="437" width="0.0799%" height="15" fill="rgb(212,148,2)" fg:x="922" fg:w="1"/><text x="73.9510%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.7010%" y="421" width="0.0799%" height="15" fill="rgb(208,21,42)" fg:x="922" fg:w="1"/><text x="73.9510%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.7010%" y="405" width="0.0799%" height="15" fill="rgb(209,107,26)" fg:x="922" fg:w="1"/><text x="73.9510%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (2 samples, 0.16%)</title><rect x="73.7810%" y="501" width="0.1599%" height="15" fill="rgb(254,60,47)" fg:x="923" fg:w="2"/><text x="74.0310%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.7810%" y="485" width="0.1599%" height="15" fill="rgb(207,226,45)" fg:x="923" fg:w="2"/><text x="74.0310%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (41 samples, 3.28%)</title><rect x="70.8233%" y="517" width="3.2774%" height="15" fill="rgb(223,124,22)" fg:x="886" fg:w="41"/><text x="71.0733%" y="527.50">ker..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="73.9408%" y="501" width="0.1599%" height="15" fill="rgb(240,162,13)" fg:x="925" fg:w="2"/><text x="74.1908%" y="511.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="73.9408%" y="485" width="0.1599%" height="15" fill="rgb(244,199,31)" fg:x="925" fg:w="2"/><text x="74.1908%" y="495.50"></text></g><g><title>engine::session::Session::initialize (42 samples, 3.36%)</title><rect x="70.8233%" y="533" width="3.3573%" height="15" fill="rgb(207,92,16)" fg:x="886" fg:w="42"/><text x="71.0733%" y="543.50">eng..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="74.1007%" y="517" width="0.0799%" height="15" fill="rgb(215,31,19)" fg:x="927" fg:w="1"/><text x="74.3507%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.1007%" y="501" width="0.0799%" height="15" fill="rgb(245,118,14)" fg:x="927" fg:w="1"/><text x="74.3507%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="74.1807%" y="501" width="0.0799%" height="15" fill="rgb(248,12,46)" fg:x="928" fg:w="1"/><text x="74.4307%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1807%" y="485" width="0.0799%" height="15" fill="rgb(209,119,0)" fg:x="928" fg:w="1"/><text x="74.4307%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (47 samples, 3.76%)</title><rect x="70.5835%" y="581" width="3.7570%" height="15" fill="rgb(254,51,44)" fg:x="883" fg:w="47"/><text x="70.8335%" y="591.50">&lt;eng..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (47 samples, 3.76%)</title><rect x="70.5835%" y="565" width="3.7570%" height="15" fill="rgb(253,182,35)" fg:x="883" fg:w="47"/><text x="70.8335%" y="575.50">engi..</text></g><g><title>engine::session::Session::new (46 samples, 3.68%)</title><rect x="70.6635%" y="549" width="3.6771%" height="15" fill="rgb(205,198,39)" fg:x="884" fg:w="46"/><text x="70.9135%" y="559.50">engi..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="74.1807%" y="533" width="0.1599%" height="15" fill="rgb(251,175,48)" fg:x="928" fg:w="2"/><text x="74.4307%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="74.1807%" y="517" width="0.1599%" height="15" fill="rgb(239,38,17)" fg:x="928" fg:w="2"/><text x="74.4307%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.2606%" y="501" width="0.0799%" height="15" fill="rgb(212,101,8)" fg:x="929" fg:w="1"/><text x="74.5106%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.2606%" y="485" width="0.0799%" height="15" fill="rgb(228,35,17)" fg:x="929" fg:w="1"/><text x="74.5106%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.2606%" y="469" width="0.0799%" height="15" fill="rgb(214,95,8)" fg:x="929" fg:w="1"/><text x="74.5106%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="74.4205%" y="565" width="0.0799%" height="15" fill="rgb(210,176,35)" fg:x="931" fg:w="1"/><text x="74.6705%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="74.5004%" y="549" width="0.0799%" height="15" fill="rgb(226,4,3)" fg:x="932" fg:w="1"/><text x="74.7504%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.5004%" y="533" width="0.0799%" height="15" fill="rgb(232,133,14)" fg:x="932" fg:w="1"/><text x="74.7504%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.5004%" y="517" width="0.0799%" height="15" fill="rgb(250,191,8)" fg:x="932" fg:w="1"/><text x="74.7504%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.5004%" y="501" width="0.0799%" height="15" fill="rgb(213,12,45)" fg:x="932" fg:w="1"/><text x="74.7504%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.5004%" y="485" width="0.0799%" height="15" fill="rgb(233,78,26)" fg:x="932" fg:w="1"/><text x="74.7504%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.5004%" y="469" width="0.0799%" height="15" fill="rgb(245,222,11)" fg:x="932" fg:w="1"/><text x="74.7504%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.5004%" y="453" width="0.0799%" height="15" fill="rgb(216,174,12)" fg:x="932" fg:w="1"/><text x="74.7504%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.5004%" y="437" width="0.0799%" height="15" fill="rgb(213,15,9)" fg:x="932" fg:w="1"/><text x="74.7504%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.5004%" y="421" width="0.0799%" height="15" fill="rgb(238,103,32)" fg:x="932" fg:w="1"/><text x="74.7504%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.5004%" y="405" width="0.0799%" height="15" fill="rgb(245,85,15)" fg:x="932" fg:w="1"/><text x="74.7504%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.5004%" y="389" width="0.0799%" height="15" fill="rgb(254,204,5)" fg:x="932" fg:w="1"/><text x="74.7504%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.5004%" y="373" width="0.0799%" height="15" fill="rgb(231,178,15)" fg:x="932" fg:w="1"/><text x="74.7504%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.5004%" y="357" width="0.0799%" height="15" fill="rgb(248,151,3)" fg:x="932" fg:w="1"/><text x="74.7504%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.5803%" y="517" width="0.0799%" height="15" fill="rgb(250,139,13)" fg:x="933" fg:w="1"/><text x="74.8303%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="74.5803%" y="501" width="0.0799%" height="15" fill="rgb(243,107,53)" fg:x="933" fg:w="1"/><text x="74.8303%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="74.5803%" y="485" width="0.0799%" height="15" fill="rgb(232,81,15)" fg:x="933" fg:w="1"/><text x="74.8303%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.7402%" y="437" width="0.1599%" height="15" fill="rgb(225,187,48)" fg:x="935" fg:w="2"/><text x="74.9902%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.7402%" y="421" width="0.1599%" height="15" fill="rgb(205,116,12)" fg:x="935" fg:w="2"/><text x="74.9902%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.7402%" y="405" width="0.1599%" height="15" fill="rgb(220,222,31)" fg:x="935" fg:w="2"/><text x="74.9902%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.8201%" y="389" width="0.0799%" height="15" fill="rgb(233,187,49)" fg:x="936" fg:w="1"/><text x="75.0701%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="74.7402%" y="453" width="0.3997%" height="15" fill="rgb(211,168,53)" fg:x="935" fg:w="5"/><text x="74.9902%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="74.9001%" y="437" width="0.2398%" height="15" fill="rgb(206,160,16)" fg:x="937" fg:w="3"/><text x="75.1501%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.0600%" y="421" width="0.0799%" height="15" fill="rgb(254,164,13)" fg:x="939" fg:w="1"/><text x="75.3100%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.0600%" y="405" width="0.0799%" height="15" fill="rgb(229,45,30)" fg:x="939" fg:w="1"/><text x="75.3100%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.1399%" y="437" width="0.0799%" height="15" fill="rgb(237,32,10)" fg:x="940" fg:w="1"/><text x="75.3899%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.2198%" y="389" width="0.0799%" height="15" fill="rgb(251,20,47)" fg:x="941" fg:w="1"/><text x="75.4698%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.2198%" y="373" width="0.0799%" height="15" fill="rgb(251,116,12)" fg:x="941" fg:w="1"/><text x="75.4698%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="75.2198%" y="421" width="0.1599%" height="15" fill="rgb(214,227,27)" fg:x="941" fg:w="2"/><text x="75.4698%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.2198%" y="405" width="0.1599%" height="15" fill="rgb(248,10,53)" fg:x="941" fg:w="2"/><text x="75.4698%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.2998%" y="389" width="0.0799%" height="15" fill="rgb(221,176,25)" fg:x="942" fg:w="1"/><text x="75.5498%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.2998%" y="373" width="0.0799%" height="15" fill="rgb(205,70,46)" fg:x="942" fg:w="1"/><text x="75.5498%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.2998%" y="357" width="0.0799%" height="15" fill="rgb(217,45,38)" fg:x="942" fg:w="1"/><text x="75.5498%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.3797%" y="405" width="0.1599%" height="15" fill="rgb(243,6,54)" fg:x="943" fg:w="2"/><text x="75.6297%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.3797%" y="389" width="0.1599%" height="15" fill="rgb(242,76,23)" fg:x="943" fg:w="2"/><text x="75.6297%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="75.3797%" y="373" width="0.1599%" height="15" fill="rgb(239,166,0)" fg:x="943" fg:w="2"/><text x="75.6297%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.4596%" y="357" width="0.0799%" height="15" fill="rgb(238,174,32)" fg:x="944" fg:w="1"/><text x="75.7096%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="75.5396%" y="389" width="0.3197%" height="15" fill="rgb(238,124,44)" fg:x="945" fg:w="4"/><text x="75.7896%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="75.5396%" y="373" width="0.3197%" height="15" fill="rgb(206,185,9)" fg:x="945" fg:w="4"/><text x="75.7896%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="75.6195%" y="357" width="0.2398%" height="15" fill="rgb(215,157,17)" fg:x="946" fg:w="3"/><text x="75.8695%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="75.6994%" y="341" width="0.1599%" height="15" fill="rgb(251,17,29)" fg:x="947" fg:w="2"/><text x="75.9494%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.7794%" y="325" width="0.0799%" height="15" fill="rgb(227,113,27)" fg:x="948" fg:w="1"/><text x="76.0294%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.7794%" y="309" width="0.0799%" height="15" fill="rgb(217,226,24)" fg:x="948" fg:w="1"/><text x="76.0294%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.7794%" y="293" width="0.0799%" height="15" fill="rgb(251,99,38)" fg:x="948" fg:w="1"/><text x="76.0294%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.8593%" y="373" width="0.0799%" height="15" fill="rgb(231,147,19)" fg:x="949" fg:w="1"/><text x="76.1093%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.8593%" y="357" width="0.0799%" height="15" fill="rgb(230,86,8)" fg:x="949" fg:w="1"/><text x="76.1093%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="75.2198%" y="437" width="0.7994%" height="15" fill="rgb(237,159,39)" fg:x="941" fg:w="10"/><text x="75.4698%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="75.3797%" y="421" width="0.6395%" height="15" fill="rgb(247,179,47)" fg:x="943" fg:w="8"/><text x="75.6297%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="75.5396%" y="405" width="0.4796%" height="15" fill="rgb(253,152,26)" fg:x="945" fg:w="6"/><text x="75.7896%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.8593%" y="389" width="0.1599%" height="15" fill="rgb(222,211,15)" fg:x="949" fg:w="2"/><text x="76.1093%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.9392%" y="373" width="0.0799%" height="15" fill="rgb(236,193,6)" fg:x="950" fg:w="1"/><text x="76.1892%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.36%)</title><rect x="74.7402%" y="469" width="1.3589%" height="15" fill="rgb(226,206,10)" fg:x="935" fg:w="17"/><text x="74.9902%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="75.1399%" y="453" width="0.9592%" height="15" fill="rgb(213,125,22)" fg:x="940" fg:w="12"/><text x="75.3899%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.0192%" y="437" width="0.0799%" height="15" fill="rgb(221,66,28)" fg:x="951" fg:w="1"/><text x="76.2692%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.0192%" y="421" width="0.0799%" height="15" fill="rgb(222,84,53)" fg:x="951" fg:w="1"/><text x="76.2692%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.0192%" y="405" width="0.0799%" height="15" fill="rgb(243,50,15)" fg:x="951" fg:w="1"/><text x="76.2692%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0991%" y="437" width="0.0799%" height="15" fill="rgb(208,184,23)" fg:x="952" fg:w="1"/><text x="76.3491%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.1791%" y="437" width="0.0799%" height="15" fill="rgb(221,83,2)" fg:x="953" fg:w="1"/><text x="76.4291%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="76.2590%" y="421" width="0.2398%" height="15" fill="rgb(236,53,24)" fg:x="954" fg:w="3"/><text x="76.5090%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4189%" y="405" width="0.0799%" height="15" fill="rgb(244,171,29)" fg:x="956" fg:w="1"/><text x="76.6689%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5787%" y="405" width="0.0799%" height="15" fill="rgb(205,19,11)" fg:x="958" fg:w="1"/><text x="76.8287%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.6587%" y="405" width="0.0799%" height="15" fill="rgb(207,108,29)" fg:x="959" fg:w="1"/><text x="76.9087%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="76.0991%" y="469" width="0.7194%" height="15" fill="rgb(236,215,43)" fg:x="952" fg:w="9"/><text x="76.3491%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="76.0991%" y="453" width="0.7194%" height="15" fill="rgb(213,58,35)" fg:x="952" fg:w="9"/><text x="76.3491%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="76.2590%" y="437" width="0.5596%" height="15" fill="rgb(220,211,46)" fg:x="954" fg:w="7"/><text x="76.5090%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="76.4988%" y="421" width="0.3197%" height="15" fill="rgb(212,134,16)" fg:x="957" fg:w="4"/><text x="76.7488%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.7386%" y="405" width="0.0799%" height="15" fill="rgb(232,90,44)" fg:x="960" fg:w="1"/><text x="76.9886%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8985%" y="421" width="0.0799%" height="15" fill="rgb(212,18,36)" fg:x="962" fg:w="1"/><text x="77.1485%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.8985%" y="405" width="0.0799%" height="15" fill="rgb(206,112,24)" fg:x="962" fg:w="1"/><text x="77.1485%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0584%" y="341" width="0.0799%" height="15" fill="rgb(238,223,40)" fg:x="964" fg:w="1"/><text x="77.3084%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="76.9784%" y="389" width="0.3997%" height="15" fill="rgb(226,169,20)" fg:x="963" fg:w="5"/><text x="77.2284%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="76.9784%" y="373" width="0.3997%" height="15" fill="rgb(241,64,52)" fg:x="963" fg:w="5"/><text x="77.2284%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="77.0584%" y="357" width="0.3197%" height="15" fill="rgb(228,120,25)" fg:x="964" fg:w="4"/><text x="77.3084%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="77.1383%" y="341" width="0.2398%" height="15" fill="rgb(234,108,19)" fg:x="965" fg:w="3"/><text x="77.3883%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="77.2182%" y="325" width="0.1599%" height="15" fill="rgb(236,133,29)" fg:x="966" fg:w="2"/><text x="77.4682%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.2182%" y="309" width="0.1599%" height="15" fill="rgb(246,174,53)" fg:x="966" fg:w="2"/><text x="77.4682%" y="319.50"></text></g><g><title>engine::session::Session::flush (38 samples, 3.04%)</title><rect x="74.5004%" y="565" width="3.0376%" height="15" fill="rgb(210,105,35)" fg:x="932" fg:w="38"/><text x="74.7504%" y="575.50">eng..</text></g><g><title>engine::session::state::State::close (37 samples, 2.96%)</title><rect x="74.5803%" y="549" width="2.9576%" height="15" fill="rgb(225,27,26)" fg:x="933" fg:w="37"/><text x="74.8303%" y="559.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (37 samples, 2.96%)</title><rect x="74.5803%" y="533" width="2.9576%" height="15" fill="rgb(233,2,39)" fg:x="933" fg:w="37"/><text x="74.8303%" y="543.50">eng..</text></g><g><title>core::iter::adapters::try_process (36 samples, 2.88%)</title><rect x="74.6603%" y="517" width="2.8777%" height="15" fill="rgb(219,164,26)" fg:x="934" fg:w="36"/><text x="74.9103%" y="527.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.88%)</title><rect x="74.6603%" y="501" width="2.8777%" height="15" fill="rgb(236,211,5)" fg:x="934" fg:w="36"/><text x="74.9103%" y="511.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (36 samples, 2.88%)</title><rect x="74.6603%" y="485" width="2.8777%" height="15" fill="rgb(244,227,23)" fg:x="934" fg:w="36"/><text x="74.9103%" y="495.50">en..</text></g><g><title>kernel::model::any_entity_changes (9 samples, 0.72%)</title><rect x="76.8185%" y="469" width="0.7194%" height="15" fill="rgb(230,184,8)" fg:x="961" fg:w="9"/><text x="77.0685%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="76.8185%" y="453" width="0.7194%" height="15" fill="rgb(217,125,48)" fg:x="961" fg:w="9"/><text x="77.0685%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="76.8185%" y="437" width="0.7194%" height="15" fill="rgb(223,192,47)" fg:x="961" fg:w="9"/><text x="77.0685%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="76.9784%" y="421" width="0.5596%" height="15" fill="rgb(226,119,10)" fg:x="963" fg:w="7"/><text x="77.2284%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="76.9784%" y="405" width="0.5596%" height="15" fill="rgb(221,49,29)" fg:x="963" fg:w="7"/><text x="77.2284%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="77.3781%" y="389" width="0.1599%" height="15" fill="rgb(217,205,19)" fg:x="968" fg:w="2"/><text x="77.6281%" y="399.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="77.5380%" y="565" width="0.0799%" height="15" fill="rgb(242,104,7)" fg:x="970" fg:w="1"/><text x="77.7880%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="77.5380%" y="549" width="0.0799%" height="15" fill="rgb(209,154,48)" fg:x="970" fg:w="1"/><text x="77.7880%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="77.5380%" y="533" width="0.0799%" height="15" fill="rgb(219,213,46)" fg:x="970" fg:w="1"/><text x="77.7880%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5380%" y="517" width="0.0799%" height="15" fill="rgb(229,105,38)" fg:x="970" fg:w="1"/><text x="77.7880%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.6179%" y="517" width="0.0799%" height="15" fill="rgb(205,151,5)" fg:x="971" fg:w="1"/><text x="77.8679%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.6179%" y="501" width="0.0799%" height="15" fill="rgb(248,115,40)" fg:x="971" fg:w="1"/><text x="77.8679%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6179%" y="485" width="0.0799%" height="15" fill="rgb(206,179,2)" fg:x="971" fg:w="1"/><text x="77.8679%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.6179%" y="549" width="0.1599%" height="15" fill="rgb(230,103,24)" fg:x="971" fg:w="2"/><text x="77.8679%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="77.6179%" y="533" width="0.1599%" height="15" fill="rgb(218,152,4)" fg:x="971" fg:w="2"/><text x="77.8679%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="77.6978%" y="517" width="0.0799%" height="15" fill="rgb(236,161,54)" fg:x="972" fg:w="1"/><text x="77.9478%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="77.7778%" y="533" width="0.0799%" height="15" fill="rgb(226,65,17)" fg:x="973" fg:w="1"/><text x="78.0278%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7778%" y="517" width="0.0799%" height="15" fill="rgb(221,134,44)" fg:x="973" fg:w="1"/><text x="78.0278%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7778%" y="501" width="0.0799%" height="15" fill="rgb(251,129,4)" fg:x="973" fg:w="1"/><text x="78.0278%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.7778%" y="485" width="0.0799%" height="15" fill="rgb(244,32,34)" fg:x="973" fg:w="1"/><text x="78.0278%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7778%" y="469" width="0.0799%" height="15" fill="rgb(251,224,37)" fg:x="973" fg:w="1"/><text x="78.0278%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="77.8577%" y="533" width="0.0799%" height="15" fill="rgb(248,117,31)" fg:x="974" fg:w="1"/><text x="78.1077%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="77.8577%" y="517" width="0.0799%" height="15" fill="rgb(222,208,37)" fg:x="974" fg:w="1"/><text x="78.1077%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0176%" y="469" width="0.0799%" height="15" fill="rgb(234,211,25)" fg:x="976" fg:w="1"/><text x="78.2676%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0176%" y="453" width="0.0799%" height="15" fill="rgb(211,72,6)" fg:x="976" fg:w="1"/><text x="78.2676%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0176%" y="437" width="0.0799%" height="15" fill="rgb(249,198,38)" fg:x="976" fg:w="1"/><text x="78.2676%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0176%" y="421" width="0.0799%" height="15" fill="rgb(221,86,51)" fg:x="976" fg:w="1"/><text x="78.2676%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0176%" y="405" width="0.0799%" height="15" fill="rgb(226,178,43)" fg:x="976" fg:w="1"/><text x="78.2676%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.0176%" y="389" width="0.0799%" height="15" fill="rgb(215,145,7)" fg:x="976" fg:w="1"/><text x="78.2676%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.0176%" y="373" width="0.0799%" height="15" fill="rgb(250,202,36)" fg:x="976" fg:w="1"/><text x="78.2676%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.0176%" y="357" width="0.0799%" height="15" fill="rgb(215,86,13)" fg:x="976" fg:w="1"/><text x="78.2676%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="78.0176%" y="341" width="0.0799%" height="15" fill="rgb(221,134,12)" fg:x="976" fg:w="1"/><text x="78.2676%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.0176%" y="325" width="0.0799%" height="15" fill="rgb(213,82,10)" fg:x="976" fg:w="1"/><text x="78.2676%" y="335.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="77.9376%" y="485" width="0.3197%" height="15" fill="rgb(214,142,0)" fg:x="975" fg:w="4"/><text x="78.1876%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="78.0975%" y="469" width="0.1599%" height="15" fill="rgb(205,145,9)" fg:x="977" fg:w="2"/><text x="78.3475%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.0975%" y="453" width="0.1599%" height="15" fill="rgb(244,214,8)" fg:x="977" fg:w="2"/><text x="78.3475%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="78.0975%" y="437" width="0.1599%" height="15" fill="rgb(224,72,51)" fg:x="977" fg:w="2"/><text x="78.3475%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.0975%" y="421" width="0.1599%" height="15" fill="rgb(233,137,37)" fg:x="977" fg:w="2"/><text x="78.3475%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="78.0975%" y="405" width="0.1599%" height="15" fill="rgb(208,71,28)" fg:x="977" fg:w="2"/><text x="78.3475%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.0975%" y="389" width="0.1599%" height="15" fill="rgb(226,31,7)" fg:x="977" fg:w="2"/><text x="78.3475%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.1775%" y="373" width="0.0799%" height="15" fill="rgb(229,62,18)" fg:x="978" fg:w="1"/><text x="78.4275%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1775%" y="357" width="0.0799%" height="15" fill="rgb(226,74,28)" fg:x="978" fg:w="1"/><text x="78.4275%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="78.2574%" y="485" width="0.0799%" height="15" fill="rgb(214,170,18)" fg:x="979" fg:w="1"/><text x="78.5074%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2574%" y="469" width="0.0799%" height="15" fill="rgb(227,229,35)" fg:x="979" fg:w="1"/><text x="78.5074%" y="479.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="78.3373%" y="485" width="0.0799%" height="15" fill="rgb(225,181,39)" fg:x="980" fg:w="1"/><text x="78.5873%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.3373%" y="469" width="0.0799%" height="15" fill="rgb(253,124,44)" fg:x="980" fg:w="1"/><text x="78.5873%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="78.4173%" y="485" width="0.0799%" height="15" fill="rgb(220,75,18)" fg:x="981" fg:w="1"/><text x="78.6673%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.64%)</title><rect x="77.9376%" y="517" width="0.6395%" height="15" fill="rgb(239,175,43)" fg:x="975" fg:w="8"/><text x="78.1876%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (8 samples, 0.64%)</title><rect x="77.9376%" y="501" width="0.6395%" height="15" fill="rgb(228,112,50)" fg:x="975" fg:w="8"/><text x="78.1876%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="78.4972%" y="485" width="0.0799%" height="15" fill="rgb(232,105,36)" fg:x="982" fg:w="1"/><text x="78.7472%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="78.4972%" y="469" width="0.0799%" height="15" fill="rgb(227,137,47)" fg:x="982" fg:w="1"/><text x="78.7472%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4972%" y="453" width="0.0799%" height="15" fill="rgb(217,51,9)" fg:x="982" fg:w="1"/><text x="78.7472%" y="463.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="78.5771%" y="517" width="0.1599%" height="15" fill="rgb(245,117,0)" fg:x="983" fg:w="2"/><text x="78.8271%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.6571%" y="501" width="0.0799%" height="15" fill="rgb(252,52,30)" fg:x="984" fg:w="1"/><text x="78.9071%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="78.6571%" y="485" width="0.0799%" height="15" fill="rgb(227,85,33)" fg:x="984" fg:w="1"/><text x="78.9071%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="77.7778%" y="549" width="1.0392%" height="15" fill="rgb(220,157,20)" fg:x="973" fg:w="13"/><text x="78.0278%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.88%)</title><rect x="77.9376%" y="533" width="0.8793%" height="15" fill="rgb(254,14,34)" fg:x="975" fg:w="11"/><text x="78.1876%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7370%" y="517" width="0.0799%" height="15" fill="rgb(216,103,41)" fg:x="985" fg:w="1"/><text x="78.9870%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.7370%" y="501" width="0.0799%" height="15" fill="rgb(245,221,9)" fg:x="985" fg:w="1"/><text x="78.9870%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="78.7370%" y="485" width="0.0799%" height="15" fill="rgb(254,136,47)" fg:x="985" fg:w="1"/><text x="78.9870%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="78.7370%" y="469" width="0.0799%" height="15" fill="rgb(235,71,46)" fg:x="985" fg:w="1"/><text x="78.9870%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.7370%" y="453" width="0.0799%" height="15" fill="rgb(242,154,29)" fg:x="985" fg:w="1"/><text x="78.9870%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7370%" y="437" width="0.0799%" height="15" fill="rgb(210,65,31)" fg:x="985" fg:w="1"/><text x="78.9870%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.7370%" y="421" width="0.0799%" height="15" fill="rgb(244,9,50)" fg:x="985" fg:w="1"/><text x="78.9870%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7370%" y="405" width="0.0799%" height="15" fill="rgb(215,141,38)" fg:x="985" fg:w="1"/><text x="78.9870%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="78.7370%" y="389" width="0.0799%" height="15" fill="rgb(241,129,6)" fg:x="985" fg:w="1"/><text x="78.9870%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.8169%" y="533" width="0.0799%" height="15" fill="rgb(253,169,4)" fg:x="986" fg:w="1"/><text x="79.0669%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.8169%" y="517" width="0.0799%" height="15" fill="rgb(237,82,36)" fg:x="986" fg:w="1"/><text x="79.0669%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.8169%" y="501" width="0.0799%" height="15" fill="rgb(209,171,11)" fg:x="986" fg:w="1"/><text x="79.0669%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.8169%" y="485" width="0.0799%" height="15" fill="rgb(242,19,22)" fg:x="986" fg:w="1"/><text x="79.0669%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.8169%" y="469" width="0.0799%" height="15" fill="rgb(251,122,24)" fg:x="986" fg:w="1"/><text x="79.0669%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.8169%" y="453" width="0.0799%" height="15" fill="rgb(226,166,42)" fg:x="986" fg:w="1"/><text x="79.0669%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.8169%" y="437" width="0.0799%" height="15" fill="rgb(244,101,48)" fg:x="986" fg:w="1"/><text x="79.0669%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.8169%" y="421" width="0.0799%" height="15" fill="rgb(227,125,1)" fg:x="986" fg:w="1"/><text x="79.0669%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.8169%" y="405" width="0.0799%" height="15" fill="rgb(206,79,43)" fg:x="986" fg:w="1"/><text x="79.0669%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.8169%" y="389" width="0.0799%" height="15" fill="rgb(241,109,41)" fg:x="986" fg:w="1"/><text x="79.0669%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.8169%" y="373" width="0.0799%" height="15" fill="rgb(219,73,4)" fg:x="986" fg:w="1"/><text x="79.0669%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8169%" y="357" width="0.0799%" height="15" fill="rgb(239,25,41)" fg:x="986" fg:w="1"/><text x="79.0669%" y="367.50"></text></g><g><title>plugins_core::build::Build::save (17 samples, 1.36%)</title><rect x="77.6179%" y="565" width="1.3589%" height="15" fill="rgb(208,88,46)" fg:x="971" fg:w="17"/><text x="77.8679%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="78.8169%" y="549" width="0.1599%" height="15" fill="rgb(239,184,9)" fg:x="986" fg:w="2"/><text x="79.0669%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="78.8969%" y="533" width="0.0799%" height="15" fill="rgb(223,114,13)" fg:x="987" fg:w="1"/><text x="79.1469%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="78.8969%" y="517" width="0.0799%" height="15" fill="rgb(214,28,42)" fg:x="987" fg:w="1"/><text x="79.1469%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.9768%" y="485" width="0.0799%" height="15" fill="rgb(252,32,44)" fg:x="988" fg:w="1"/><text x="79.2268%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.9768%" y="469" width="0.0799%" height="15" fill="rgb(231,159,4)" fg:x="988" fg:w="1"/><text x="79.2268%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (2 samples, 0.16%)</title><rect x="78.9768%" y="565" width="0.1599%" height="15" fill="rgb(210,35,26)" fg:x="988" fg:w="2"/><text x="79.2268%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (2 samples, 0.16%)</title><rect x="78.9768%" y="549" width="0.1599%" height="15" fill="rgb(208,190,37)" fg:x="988" fg:w="2"/><text x="79.2268%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="78.9768%" y="533" width="0.1599%" height="15" fill="rgb(226,148,22)" fg:x="988" fg:w="2"/><text x="79.2268%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (2 samples, 0.16%)</title><rect x="78.9768%" y="517" width="0.1599%" height="15" fill="rgb(242,153,24)" fg:x="988" fg:w="2"/><text x="79.2268%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="78.9768%" y="501" width="0.1599%" height="15" fill="rgb(213,133,7)" fg:x="988" fg:w="2"/><text x="79.2268%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0568%" y="485" width="0.0799%" height="15" fill="rgb(248,206,18)" fg:x="989" fg:w="1"/><text x="79.3068%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0568%" y="469" width="0.0799%" height="15" fill="rgb(233,157,4)" fg:x="989" fg:w="1"/><text x="79.3068%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0568%" y="453" width="0.0799%" height="15" fill="rgb(249,179,32)" fg:x="989" fg:w="1"/><text x="79.3068%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0568%" y="437" width="0.0799%" height="15" fill="rgb(248,69,35)" fg:x="989" fg:w="1"/><text x="79.3068%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="79.1367%" y="533" width="0.0799%" height="15" fill="rgb(249,158,38)" fg:x="990" fg:w="1"/><text x="79.3867%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="79.1367%" y="517" width="0.0799%" height="15" fill="rgb(223,18,43)" fg:x="990" fg:w="1"/><text x="79.3867%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.1367%" y="501" width="0.0799%" height="15" fill="rgb(238,42,45)" fg:x="990" fg:w="1"/><text x="79.3867%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="79.1367%" y="485" width="0.0799%" height="15" fill="rgb(219,65,47)" fg:x="990" fg:w="1"/><text x="79.3867%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.1367%" y="469" width="0.0799%" height="15" fill="rgb(248,153,12)" fg:x="990" fg:w="1"/><text x="79.3867%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="79.2166%" y="533" width="0.0799%" height="15" fill="rgb(240,118,4)" fg:x="991" fg:w="1"/><text x="79.4666%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="79.2166%" y="517" width="0.0799%" height="15" fill="rgb(250,96,34)" fg:x="991" fg:w="1"/><text x="79.4666%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.2166%" y="501" width="0.0799%" height="15" fill="rgb(221,15,4)" fg:x="991" fg:w="1"/><text x="79.4666%" y="511.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (4 samples, 0.32%)</title><rect x="79.1367%" y="565" width="0.3197%" height="15" fill="rgb(217,149,33)" fg:x="990" fg:w="4"/><text x="79.3867%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="79.1367%" y="549" width="0.3197%" height="15" fill="rgb(213,58,29)" fg:x="990" fg:w="4"/><text x="79.3867%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="79.2966%" y="533" width="0.1599%" height="15" fill="rgb(236,218,9)" fg:x="992" fg:w="2"/><text x="79.5466%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="79.3765%" y="517" width="0.0799%" height="15" fill="rgb(248,40,19)" fg:x="993" fg:w="1"/><text x="79.6265%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="79.3765%" y="501" width="0.0799%" height="15" fill="rgb(212,17,6)" fg:x="993" fg:w="1"/><text x="79.6265%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.3765%" y="485" width="0.0799%" height="15" fill="rgb(206,212,20)" fg:x="993" fg:w="1"/><text x="79.6265%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="79.5364%" y="549" width="0.0799%" height="15" fill="rgb(229,80,37)" fg:x="995" fg:w="1"/><text x="79.7864%" y="559.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="79.5364%" y="533" width="0.0799%" height="15" fill="rgb(253,8,37)" fg:x="995" fg:w="1"/><text x="79.7864%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5364%" y="517" width="0.0799%" height="15" fill="rgb(215,16,43)" fg:x="995" fg:w="1"/><text x="79.7864%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="79.6163%" y="437" width="0.0799%" height="15" fill="rgb(236,219,16)" fg:x="996" fg:w="1"/><text x="79.8663%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.6163%" y="469" width="0.1599%" height="15" fill="rgb(251,0,3)" fg:x="996" fg:w="2"/><text x="79.8663%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="79.6163%" y="453" width="0.1599%" height="15" fill="rgb(207,133,37)" fg:x="996" fg:w="2"/><text x="79.8663%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.6962%" y="437" width="0.0799%" height="15" fill="rgb(250,143,20)" fg:x="997" fg:w="1"/><text x="79.9462%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.6962%" y="421" width="0.0799%" height="15" fill="rgb(242,19,50)" fg:x="997" fg:w="1"/><text x="79.9462%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.6962%" y="405" width="0.0799%" height="15" fill="rgb(206,124,43)" fg:x="997" fg:w="1"/><text x="79.9462%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.6962%" y="389" width="0.0799%" height="15" fill="rgb(229,4,38)" fg:x="997" fg:w="1"/><text x="79.9462%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.6962%" y="373" width="0.0799%" height="15" fill="rgb(247,220,45)" fg:x="997" fg:w="1"/><text x="79.9462%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.6962%" y="357" width="0.0799%" height="15" fill="rgb(247,195,0)" fg:x="997" fg:w="1"/><text x="79.9462%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.6962%" y="341" width="0.0799%" height="15" fill="rgb(252,12,19)" fg:x="997" fg:w="1"/><text x="79.9462%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="79.6163%" y="549" width="0.2398%" height="15" fill="rgb(222,49,50)" fg:x="996" fg:w="3"/><text x="79.8663%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="79.6163%" y="533" width="0.2398%" height="15" fill="rgb(209,157,28)" fg:x="996" fg:w="3"/><text x="79.8663%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="79.6163%" y="517" width="0.2398%" height="15" fill="rgb(238,174,24)" fg:x="996" fg:w="3"/><text x="79.8663%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="79.6163%" y="501" width="0.2398%" height="15" fill="rgb(224,17,28)" fg:x="996" fg:w="3"/><text x="79.8663%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="79.6163%" y="485" width="0.2398%" height="15" fill="rgb(249,7,29)" fg:x="996" fg:w="3"/><text x="79.8663%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.7762%" y="469" width="0.0799%" height="15" fill="rgb(243,178,4)" fg:x="998" fg:w="1"/><text x="80.0262%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="79.7762%" y="453" width="0.0799%" height="15" fill="rgb(246,138,35)" fg:x="998" fg:w="1"/><text x="80.0262%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7762%" y="437" width="0.0799%" height="15" fill="rgb(251,85,18)" fg:x="998" fg:w="1"/><text x="80.0262%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.7762%" y="421" width="0.0799%" height="15" fill="rgb(254,55,9)" fg:x="998" fg:w="1"/><text x="80.0262%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.8561%" y="517" width="0.0799%" height="15" fill="rgb(248,4,50)" fg:x="999" fg:w="1"/><text x="80.1061%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.8561%" y="501" width="0.0799%" height="15" fill="rgb(215,208,14)" fg:x="999" fg:w="1"/><text x="80.1061%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.8561%" y="485" width="0.0799%" height="15" fill="rgb(218,37,18)" fg:x="999" fg:w="1"/><text x="80.1061%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.8561%" y="469" width="0.0799%" height="15" fill="rgb(206,104,13)" fg:x="999" fg:w="1"/><text x="80.1061%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.8561%" y="453" width="0.0799%" height="15" fill="rgb(248,94,22)" fg:x="999" fg:w="1"/><text x="80.1061%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.8561%" y="437" width="0.0799%" height="15" fill="rgb(235,42,46)" fg:x="999" fg:w="1"/><text x="80.1061%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.8561%" y="421" width="0.0799%" height="15" fill="rgb(220,228,48)" fg:x="999" fg:w="1"/><text x="80.1061%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.8561%" y="405" width="0.0799%" height="15" fill="rgb(216,58,12)" fg:x="999" fg:w="1"/><text x="80.1061%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.8561%" y="389" width="0.0799%" height="15" fill="rgb(223,97,52)" fg:x="999" fg:w="1"/><text x="80.1061%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.8561%" y="373" width="0.0799%" height="15" fill="rgb(208,159,17)" fg:x="999" fg:w="1"/><text x="80.1061%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.8561%" y="357" width="0.0799%" height="15" fill="rgb(215,172,9)" fg:x="999" fg:w="1"/><text x="80.1061%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8561%" y="341" width="0.0799%" height="15" fill="rgb(252,175,30)" fg:x="999" fg:w="1"/><text x="80.1061%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="79.8561%" y="533" width="0.1599%" height="15" fill="rgb(209,159,10)" fg:x="999" fg:w="2"/><text x="80.1061%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9361%" y="517" width="0.0799%" height="15" fill="rgb(229,73,51)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="80.0959%" y="485" width="0.1599%" height="15" fill="rgb(208,212,43)" fg:x="1002" fg:w="2"/><text x="80.3459%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="80.0959%" y="469" width="0.1599%" height="15" fill="rgb(254,123,53)" fg:x="1002" fg:w="2"/><text x="80.3459%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="80.0959%" y="453" width="0.1599%" height="15" fill="rgb(254,128,49)" fg:x="1002" fg:w="2"/><text x="80.3459%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.1759%" y="437" width="0.0799%" height="15" fill="rgb(246,16,16)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.1759%" y="421" width="0.0799%" height="15" fill="rgb(209,200,1)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.1759%" y="405" width="0.0799%" height="15" fill="rgb(235,9,3)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.1759%" y="389" width="0.0799%" height="15" fill="rgb(233,121,54)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.1759%" y="373" width="0.0799%" height="15" fill="rgb(236,80,25)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.1759%" y="357" width="0.0799%" height="15" fill="rgb(220,44,24)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.1759%" y="341" width="0.0799%" height="15" fill="rgb(236,225,16)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.1759%" y="325" width="0.0799%" height="15" fill="rgb(237,140,0)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.1759%" y="309" width="0.0799%" height="15" fill="rgb(243,225,53)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.1759%" y="293" width="0.0799%" height="15" fill="rgb(240,140,30)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.1759%" y="277" width="0.0799%" height="15" fill="rgb(217,51,16)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1759%" y="261" width="0.0799%" height="15" fill="rgb(245,75,50)" fg:x="1003" fg:w="1"/><text x="80.4259%" y="271.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.2558%" y="421" width="0.0799%" height="15" fill="rgb(208,174,22)" fg:x="1004" fg:w="1"/><text x="80.5058%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.2558%" y="405" width="0.0799%" height="15" fill="rgb(219,98,50)" fg:x="1004" fg:w="1"/><text x="80.5058%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.2558%" y="389" width="0.0799%" height="15" fill="rgb(243,138,3)" fg:x="1004" fg:w="1"/><text x="80.5058%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.2558%" y="373" width="0.0799%" height="15" fill="rgb(243,132,26)" fg:x="1004" fg:w="1"/><text x="80.5058%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.4157%" y="405" width="0.0799%" height="15" fill="rgb(250,201,8)" fg:x="1006" fg:w="1"/><text x="80.6657%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4157%" y="389" width="0.0799%" height="15" fill="rgb(213,91,26)" fg:x="1006" fg:w="1"/><text x="80.6657%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4157%" y="373" width="0.0799%" height="15" fill="rgb(229,117,1)" fg:x="1006" fg:w="1"/><text x="80.6657%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.4956%" y="357" width="0.0799%" height="15" fill="rgb(229,24,6)" fg:x="1007" fg:w="1"/><text x="80.7456%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4956%" y="341" width="0.0799%" height="15" fill="rgb(206,69,11)" fg:x="1007" fg:w="1"/><text x="80.7456%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.5755%" y="341" width="0.0799%" height="15" fill="rgb(234,111,34)" fg:x="1008" fg:w="1"/><text x="80.8255%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.5755%" y="325" width="0.0799%" height="15" fill="rgb(213,187,51)" fg:x="1008" fg:w="1"/><text x="80.8255%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.5755%" y="309" width="0.0799%" height="15" fill="rgb(207,45,11)" fg:x="1008" fg:w="1"/><text x="80.8255%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.5755%" y="293" width="0.0799%" height="15" fill="rgb(225,151,47)" fg:x="1008" fg:w="1"/><text x="80.8255%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="80.4956%" y="389" width="0.2398%" height="15" fill="rgb(211,226,5)" fg:x="1007" fg:w="3"/><text x="80.7456%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.4956%" y="373" width="0.2398%" height="15" fill="rgb(214,83,52)" fg:x="1007" fg:w="3"/><text x="80.7456%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.5755%" y="357" width="0.1599%" height="15" fill="rgb(229,49,53)" fg:x="1008" fg:w="2"/><text x="80.8255%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.6555%" y="341" width="0.0799%" height="15" fill="rgb(246,8,28)" fg:x="1009" fg:w="1"/><text x="80.9055%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.6555%" y="325" width="0.0799%" height="15" fill="rgb(207,28,41)" fg:x="1009" fg:w="1"/><text x="80.9055%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.6555%" y="309" width="0.0799%" height="15" fill="rgb(254,22,25)" fg:x="1009" fg:w="1"/><text x="80.9055%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7354%" y="389" width="0.0799%" height="15" fill="rgb(209,120,42)" fg:x="1010" fg:w="1"/><text x="80.9854%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7354%" y="373" width="0.0799%" height="15" fill="rgb(216,194,18)" fg:x="1010" fg:w="1"/><text x="80.9854%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7354%" y="357" width="0.0799%" height="15" fill="rgb(213,70,17)" fg:x="1010" fg:w="1"/><text x="80.9854%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7354%" y="341" width="0.0799%" height="15" fill="rgb(228,66,19)" fg:x="1010" fg:w="1"/><text x="80.9854%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.8153%" y="373" width="0.0799%" height="15" fill="rgb(236,221,54)" fg:x="1011" fg:w="1"/><text x="81.0653%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8153%" y="357" width="0.0799%" height="15" fill="rgb(207,175,15)" fg:x="1011" fg:w="1"/><text x="81.0653%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8153%" y="341" width="0.0799%" height="15" fill="rgb(234,76,8)" fg:x="1011" fg:w="1"/><text x="81.0653%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8153%" y="325" width="0.0799%" height="15" fill="rgb(243,106,0)" fg:x="1011" fg:w="1"/><text x="81.0653%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="80.8153%" y="389" width="0.3997%" height="15" fill="rgb(208,48,19)" fg:x="1011" fg:w="5"/><text x="81.0653%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="80.8953%" y="373" width="0.3197%" height="15" fill="rgb(251,50,29)" fg:x="1012" fg:w="4"/><text x="81.1453%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="80.9752%" y="357" width="0.2398%" height="15" fill="rgb(222,31,49)" fg:x="1013" fg:w="3"/><text x="81.2252%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="80.9752%" y="341" width="0.2398%" height="15" fill="rgb(232,33,18)" fg:x="1013" fg:w="3"/><text x="81.2252%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="80.9752%" y="325" width="0.2398%" height="15" fill="rgb(209,1,44)" fg:x="1013" fg:w="3"/><text x="81.2252%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="80.9752%" y="309" width="0.2398%" height="15" fill="rgb(211,7,1)" fg:x="1013" fg:w="3"/><text x="81.2252%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="80.9752%" y="293" width="0.2398%" height="15" fill="rgb(224,111,27)" fg:x="1013" fg:w="3"/><text x="81.2252%" y="303.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="80.9752%" y="277" width="0.2398%" height="15" fill="rgb(252,195,39)" fg:x="1013" fg:w="3"/><text x="81.2252%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="80.4956%" y="405" width="0.7994%" height="15" fill="rgb(237,198,5)" fg:x="1007" fg:w="10"/><text x="80.7456%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.2150%" y="389" width="0.0799%" height="15" fill="rgb(232,148,1)" fg:x="1016" fg:w="1"/><text x="81.4650%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.2150%" y="373" width="0.0799%" height="15" fill="rgb(249,41,3)" fg:x="1016" fg:w="1"/><text x="81.4650%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.2150%" y="357" width="0.0799%" height="15" fill="rgb(215,14,33)" fg:x="1016" fg:w="1"/><text x="81.4650%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="80.3357%" y="421" width="1.0392%" height="15" fill="rgb(209,146,24)" fg:x="1005" fg:w="13"/><text x="80.5857%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.2950%" y="405" width="0.0799%" height="15" fill="rgb(219,51,47)" fg:x="1017" fg:w="1"/><text x="81.5450%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.20%)</title><rect x="80.2558%" y="437" width="1.1990%" height="15" fill="rgb(234,217,40)" fg:x="1004" fg:w="15"/><text x="80.5058%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3749%" y="421" width="0.0799%" height="15" fill="rgb(228,34,26)" fg:x="1018" fg:w="1"/><text x="81.6249%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="81.5348%" y="389" width="0.1599%" height="15" fill="rgb(224,50,29)" fg:x="1020" fg:w="2"/><text x="81.7848%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6946%" y="389" width="0.0799%" height="15" fill="rgb(205,79,51)" fg:x="1022" fg:w="1"/><text x="81.9446%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.7746%" y="373" width="0.0799%" height="15" fill="rgb(218,136,28)" fg:x="1023" fg:w="1"/><text x="82.0246%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.8545%" y="357" width="0.0799%" height="15" fill="rgb(220,150,10)" fg:x="1024" fg:w="1"/><text x="82.1045%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.9345%" y="325" width="0.0799%" height="15" fill="rgb(242,158,47)" fg:x="1025" fg:w="1"/><text x="82.1845%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="81.9345%" y="357" width="0.1599%" height="15" fill="rgb(209,68,0)" fg:x="1025" fg:w="2"/><text x="82.1845%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.9345%" y="341" width="0.1599%" height="15" fill="rgb(208,13,41)" fg:x="1025" fg:w="2"/><text x="82.1845%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.0144%" y="325" width="0.0799%" height="15" fill="rgb(226,201,7)" fg:x="1026" fg:w="1"/><text x="82.2644%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="81.4548%" y="437" width="0.7194%" height="15" fill="rgb(236,103,26)" fg:x="1019" fg:w="9"/><text x="81.7048%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="81.4548%" y="421" width="0.7194%" height="15" fill="rgb(243,162,8)" fg:x="1019" fg:w="9"/><text x="81.7048%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="81.4548%" y="405" width="0.7194%" height="15" fill="rgb(237,225,11)" fg:x="1019" fg:w="9"/><text x="81.7048%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.7746%" y="389" width="0.3997%" height="15" fill="rgb(247,186,32)" fg:x="1023" fg:w="5"/><text x="82.0246%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="81.8545%" y="373" width="0.3197%" height="15" fill="rgb(215,26,28)" fg:x="1024" fg:w="4"/><text x="82.1045%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.0943%" y="357" width="0.0799%" height="15" fill="rgb(208,121,6)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.0943%" y="341" width="0.0799%" height="15" fill="rgb(225,91,3)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0943%" y="325" width="0.0799%" height="15" fill="rgb(246,119,36)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="82.1743%" y="421" width="0.0799%" height="15" fill="rgb(254,173,2)" fg:x="1028" fg:w="1"/><text x="82.4243%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.1743%" y="405" width="0.0799%" height="15" fill="rgb(209,87,54)" fg:x="1028" fg:w="1"/><text x="82.4243%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1743%" y="389" width="0.0799%" height="15" fill="rgb(223,216,20)" fg:x="1028" fg:w="1"/><text x="82.4243%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.2542%" y="389" width="0.1599%" height="15" fill="rgb(220,31,8)" fg:x="1029" fg:w="2"/><text x="82.5042%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.5739%" y="357" width="0.0799%" height="15" fill="rgb(220,185,15)" fg:x="1033" fg:w="1"/><text x="82.8239%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.6539%" y="341" width="0.0799%" height="15" fill="rgb(247,190,50)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6539%" y="325" width="0.0799%" height="15" fill="rgb(239,173,47)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.6539%" y="309" width="0.0799%" height="15" fill="rgb(218,190,42)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6539%" y="293" width="0.0799%" height="15" fill="rgb(251,207,16)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.8137%" y="325" width="0.0799%" height="15" fill="rgb(222,199,47)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8137%" y="309" width="0.0799%" height="15" fill="rgb(245,190,7)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8137%" y="293" width="0.0799%" height="15" fill="rgb(239,85,38)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="82.6539%" y="357" width="0.3197%" height="15" fill="rgb(229,69,51)" fg:x="1034" fg:w="4"/><text x="82.9039%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="82.7338%" y="341" width="0.2398%" height="15" fill="rgb(231,104,51)" fg:x="1035" fg:w="3"/><text x="82.9838%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8937%" y="325" width="0.0799%" height="15" fill="rgb(235,49,4)" fg:x="1037" fg:w="1"/><text x="83.1437%" y="335.50"></text></g><g><title>engine::session::Session::flush (40 samples, 3.20%)</title><rect x="79.8561%" y="549" width="3.1974%" height="15" fill="rgb(246,166,20)" fg:x="999" fg:w="40"/><text x="80.1061%" y="559.50">eng..</text></g><g><title>engine::session::Session::save_changes (38 samples, 3.04%)</title><rect x="80.0160%" y="533" width="3.0376%" height="15" fill="rgb(230,119,37)" fg:x="1001" fg:w="38"/><text x="80.2660%" y="543.50">eng..</text></g><g><title>engine::session::state::State::close (38 samples, 3.04%)</title><rect x="80.0160%" y="517" width="3.0376%" height="15" fill="rgb(234,77,34)" fg:x="1001" fg:w="38"/><text x="80.2660%" y="527.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (38 samples, 3.04%)</title><rect x="80.0160%" y="501" width="3.0376%" height="15" fill="rgb(211,222,33)" fg:x="1001" fg:w="38"/><text x="80.2660%" y="511.50">eng..</text></g><g><title>core::iter::adapters::try_process (35 samples, 2.80%)</title><rect x="80.2558%" y="485" width="2.7978%" height="15" fill="rgb(226,45,42)" fg:x="1004" fg:w="35"/><text x="80.5058%" y="495.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 2.80%)</title><rect x="80.2558%" y="469" width="2.7978%" height="15" fill="rgb(215,174,28)" fg:x="1004" fg:w="35"/><text x="80.5058%" y="479.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (35 samples, 2.80%)</title><rect x="80.2558%" y="453" width="2.7978%" height="15" fill="rgb(254,173,49)" fg:x="1004" fg:w="35"/><text x="80.5058%" y="463.50">en..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.88%)</title><rect x="82.1743%" y="437" width="0.8793%" height="15" fill="rgb(229,191,6)" fg:x="1028" fg:w="11"/><text x="82.4243%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.80%)</title><rect x="82.2542%" y="421" width="0.7994%" height="15" fill="rgb(212,145,22)" fg:x="1029" fg:w="10"/><text x="82.5042%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.80%)</title><rect x="82.2542%" y="405" width="0.7994%" height="15" fill="rgb(226,6,51)" fg:x="1029" fg:w="10"/><text x="82.5042%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="82.4141%" y="389" width="0.6395%" height="15" fill="rgb(227,128,8)" fg:x="1031" fg:w="8"/><text x="82.6641%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="82.5739%" y="373" width="0.4796%" height="15" fill="rgb(205,24,10)" fg:x="1033" fg:w="6"/><text x="82.8239%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.9736%" y="357" width="0.0799%" height="15" fill="rgb(217,147,27)" fg:x="1038" fg:w="1"/><text x="83.2236%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9736%" y="341" width="0.0799%" height="15" fill="rgb(250,82,42)" fg:x="1038" fg:w="1"/><text x="83.2236%" y="351.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="83.0536%" y="549" width="0.0799%" height="15" fill="rgb(248,93,17)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="83.0536%" y="533" width="0.0799%" height="15" fill="rgb(254,212,40)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="83.0536%" y="517" width="0.0799%" height="15" fill="rgb(229,209,2)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0536%" y="501" width="0.0799%" height="15" fill="rgb(211,50,43)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0536%" y="485" width="0.0799%" height="15" fill="rgb(245,196,29)" fg:x="1039" fg:w="1"/><text x="83.3036%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="83.1335%" y="533" width="0.0799%" height="15" fill="rgb(216,132,13)" fg:x="1040" fg:w="1"/><text x="83.3835%" y="543.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="83.1335%" y="549" width="0.1599%" height="15" fill="rgb(251,108,21)" fg:x="1040" fg:w="2"/><text x="83.3835%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="83.2134%" y="533" width="0.0799%" height="15" fill="rgb(229,174,54)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="83.2134%" y="517" width="0.0799%" height="15" fill="rgb(211,175,47)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2134%" y="501" width="0.0799%" height="15" fill="rgb(234,5,37)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.2934%" y="501" width="0.0799%" height="15" fill="rgb(244,150,43)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.2934%" y="485" width="0.0799%" height="15" fill="rgb(242,172,38)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.2934%" y="469" width="0.0799%" height="15" fill="rgb(205,27,8)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2934%" y="453" width="0.0799%" height="15" fill="rgb(217,57,3)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.2934%" y="533" width="0.1599%" height="15" fill="rgb(242,21,38)" fg:x="1042" fg:w="2"/><text x="83.5434%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="83.2934%" y="517" width="0.1599%" height="15" fill="rgb(209,64,43)" fg:x="1042" fg:w="2"/><text x="83.5434%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.3733%" y="501" width="0.0799%" height="15" fill="rgb(222,2,46)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.3733%" y="485" width="0.0799%" height="15" fill="rgb(218,19,44)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.4532%" y="517" width="0.0799%" height="15" fill="rgb(240,203,42)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="83.4532%" y="501" width="0.0799%" height="15" fill="rgb(229,23,45)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.4532%" y="485" width="0.0799%" height="15" fill="rgb(205,228,51)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="83.5332%" y="485" width="0.1599%" height="15" fill="rgb(239,36,20)" fg:x="1045" fg:w="2"/><text x="83.7832%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.6131%" y="469" width="0.0799%" height="15" fill="rgb(248,172,27)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.6131%" y="453" width="0.0799%" height="15" fill="rgb(244,55,32)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="83.5332%" y="517" width="0.2398%" height="15" fill="rgb(215,97,16)" fg:x="1045" fg:w="3"/><text x="83.7832%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="83.5332%" y="501" width="0.2398%" height="15" fill="rgb(224,80,29)" fg:x="1045" fg:w="3"/><text x="83.7832%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="83.6930%" y="485" width="0.0799%" height="15" fill="rgb(216,93,47)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.6930%" y="469" width="0.0799%" height="15" fill="rgb(238,159,10)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6930%" y="453" width="0.0799%" height="15" fill="rgb(223,98,29)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="83.7730%" y="517" width="0.0799%" height="15" fill="rgb(210,176,23)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="527.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="83.8529%" y="469" width="0.0799%" height="15" fill="rgb(242,162,27)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8529%" y="453" width="0.0799%" height="15" fill="rgb(245,109,32)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8529%" y="437" width="0.0799%" height="15" fill="rgb(248,87,8)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.8529%" y="421" width="0.0799%" height="15" fill="rgb(250,160,50)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8529%" y="405" width="0.0799%" height="15" fill="rgb(246,165,25)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8529%" y="389" width="0.0799%" height="15" fill="rgb(249,219,3)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8529%" y="373" width="0.0799%" height="15" fill="rgb(226,66,5)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="83.8529%" y="501" width="0.2398%" height="15" fill="rgb(250,220,43)" fg:x="1049" fg:w="3"/><text x="84.1029%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.24%)</title><rect x="83.8529%" y="485" width="0.2398%" height="15" fill="rgb(225,111,31)" fg:x="1049" fg:w="3"/><text x="84.1029%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="83.9329%" y="469" width="0.1599%" height="15" fill="rgb(248,106,18)" fg:x="1050" fg:w="2"/><text x="84.1829%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="83.9329%" y="453" width="0.1599%" height="15" fill="rgb(220,226,45)" fg:x="1050" fg:w="2"/><text x="84.1829%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="83.9329%" y="437" width="0.1599%" height="15" fill="rgb(208,58,53)" fg:x="1050" fg:w="2"/><text x="84.1829%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.9329%" y="421" width="0.1599%" height="15" fill="rgb(209,133,1)" fg:x="1050" fg:w="2"/><text x="84.1829%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.9329%" y="405" width="0.1599%" height="15" fill="rgb(228,216,27)" fg:x="1050" fg:w="2"/><text x="84.1829%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0927%" y="469" width="0.0799%" height="15" fill="rgb(238,155,2)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0927%" y="453" width="0.0799%" height="15" fill="rgb(244,99,37)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.0927%" y="437" width="0.0799%" height="15" fill="rgb(254,32,3)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1727%" y="469" width="0.0799%" height="15" fill="rgb(234,46,50)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="83.4532%" y="533" width="0.8793%" height="15" fill="rgb(232,118,51)" fg:x="1044" fg:w="11"/><text x="83.7032%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="83.8529%" y="517" width="0.4796%" height="15" fill="rgb(207,24,32)" fg:x="1049" fg:w="6"/><text x="84.1029%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="84.0927%" y="501" width="0.2398%" height="15" fill="rgb(208,107,43)" fg:x="1052" fg:w="3"/><text x="84.3427%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="84.0927%" y="485" width="0.2398%" height="15" fill="rgb(231,28,9)" fg:x="1052" fg:w="3"/><text x="84.3427%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.2526%" y="469" width="0.0799%" height="15" fill="rgb(241,204,15)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="84.2526%" y="453" width="0.0799%" height="15" fill="rgb(214,54,15)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.2526%" y="437" width="0.0799%" height="15" fill="rgb(230,12,28)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2526%" y="421" width="0.0799%" height="15" fill="rgb(221,171,5)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.2526%" y="405" width="0.0799%" height="15" fill="rgb(207,72,25)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2526%" y="389" width="0.0799%" height="15" fill="rgb(249,79,37)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2526%" y="373" width="0.0799%" height="15" fill="rgb(209,98,49)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="383.50"></text></g><g><title>plugins_core::build::Build::save (15 samples, 1.20%)</title><rect x="83.2934%" y="549" width="1.1990%" height="15" fill="rgb(221,62,13)" fg:x="1042" fg:w="15"/><text x="83.5434%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="84.3325%" y="533" width="0.1599%" height="15" fill="rgb(223,39,6)" fg:x="1055" fg:w="2"/><text x="84.5825%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.3325%" y="517" width="0.1599%" height="15" fill="rgb(246,163,20)" fg:x="1055" fg:w="2"/><text x="84.5825%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.3325%" y="501" width="0.1599%" height="15" fill="rgb(211,111,29)" fg:x="1055" fg:w="2"/><text x="84.5825%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.3325%" y="485" width="0.1599%" height="15" fill="rgb(243,118,5)" fg:x="1055" fg:w="2"/><text x="84.5825%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="84.3325%" y="469" width="0.1599%" height="15" fill="rgb(240,144,52)" fg:x="1055" fg:w="2"/><text x="84.5825%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.4924%" y="485" width="0.1599%" height="15" fill="rgb(244,158,36)" fg:x="1057" fg:w="2"/><text x="84.7424%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="84.4924%" y="469" width="0.1599%" height="15" fill="rgb(241,109,37)" fg:x="1057" fg:w="2"/><text x="84.7424%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5723%" y="453" width="0.0799%" height="15" fill="rgb(213,95,32)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5723%" y="437" width="0.0799%" height="15" fill="rgb(252,193,9)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.5723%" y="421" width="0.0799%" height="15" fill="rgb(225,213,21)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6523%" y="421" width="0.0799%" height="15" fill="rgb(220,172,46)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.6523%" y="453" width="0.1599%" height="15" fill="rgb(235,75,41)" fg:x="1059" fg:w="2"/><text x="84.9023%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.6523%" y="437" width="0.1599%" height="15" fill="rgb(213,86,9)" fg:x="1059" fg:w="2"/><text x="84.9023%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7322%" y="421" width="0.0799%" height="15" fill="rgb(238,127,51)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7322%" y="405" width="0.0799%" height="15" fill="rgb(215,2,54)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.7322%" y="389" width="0.0799%" height="15" fill="rgb(245,80,6)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.7322%" y="373" width="0.0799%" height="15" fill="rgb(233,106,42)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.7322%" y="357" width="0.0799%" height="15" fill="rgb(244,86,38)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7322%" y="341" width="0.0799%" height="15" fill="rgb(242,167,7)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7322%" y="325" width="0.0799%" height="15" fill="rgb(218,216,3)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.7322%" y="309" width="0.0799%" height="15" fill="rgb(206,136,36)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.7322%" y="293" width="0.0799%" height="15" fill="rgb(206,206,15)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.7322%" y="277" width="0.0799%" height="15" fill="rgb(207,163,34)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.7322%" y="261" width="0.0799%" height="15" fill="rgb(240,127,22)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7322%" y="245" width="0.0799%" height="15" fill="rgb(227,49,5)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="255.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.40%)</title><rect x="84.4924%" y="517" width="0.3997%" height="15" fill="rgb(231,8,6)" fg:x="1057" fg:w="5"/><text x="84.7424%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="84.4924%" y="501" width="0.3997%" height="15" fill="rgb(223,21,24)" fg:x="1057" fg:w="5"/><text x="84.7424%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="84.6523%" y="485" width="0.2398%" height="15" fill="rgb(244,44,52)" fg:x="1059" fg:w="3"/><text x="84.9023%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="84.6523%" y="469" width="0.2398%" height="15" fill="rgb(207,73,28)" fg:x="1059" fg:w="3"/><text x="84.9023%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8122%" y="453" width="0.0799%" height="15" fill="rgb(234,215,10)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8122%" y="437" width="0.0799%" height="15" fill="rgb(236,85,3)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.8122%" y="421" width="0.0799%" height="15" fill="rgb(236,102,39)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8122%" y="405" width="0.0799%" height="15" fill="rgb(243,50,8)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8122%" y="389" width="0.0799%" height="15" fill="rgb(207,111,4)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8122%" y="373" width="0.0799%" height="15" fill="rgb(230,52,42)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8122%" y="357" width="0.0799%" height="15" fill="rgb(252,178,50)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="367.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (6 samples, 0.48%)</title><rect x="84.4924%" y="549" width="0.4796%" height="15" fill="rgb(234,46,35)" fg:x="1057" fg:w="6"/><text x="84.7424%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.48%)</title><rect x="84.4924%" y="533" width="0.4796%" height="15" fill="rgb(228,69,37)" fg:x="1057" fg:w="6"/><text x="84.7424%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.8921%" y="517" width="0.0799%" height="15" fill="rgb(221,21,11)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8921%" y="501" width="0.0799%" height="15" fill="rgb(223,56,9)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.8921%" y="485" width="0.0799%" height="15" fill="rgb(234,30,19)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8921%" y="469" width="0.0799%" height="15" fill="rgb(211,64,54)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.8921%" y="453" width="0.0799%" height="15" fill="rgb(250,189,5)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8921%" y="437" width="0.0799%" height="15" fill="rgb(214,180,13)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8921%" y="421" width="0.0799%" height="15" fill="rgb(238,40,40)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.8921%" y="405" width="0.0799%" height="15" fill="rgb(214,101,38)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.8921%" y="389" width="0.0799%" height="15" fill="rgb(242,65,53)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="84.9720%" y="533" width="0.0799%" height="15" fill="rgb(230,22,45)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.9720%" y="517" width="0.0799%" height="15" fill="rgb(223,77,1)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.9720%" y="501" width="0.0799%" height="15" fill="rgb(227,33,37)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.9720%" y="485" width="0.0799%" height="15" fill="rgb(224,148,39)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9720%" y="469" width="0.0799%" height="15" fill="rgb(232,212,39)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9720%" y="453" width="0.0799%" height="15" fill="rgb(251,172,7)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="85.0520%" y="517" width="0.0799%" height="15" fill="rgb(219,39,9)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0520%" y="501" width="0.0799%" height="15" fill="rgb(228,118,14)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0520%" y="485" width="0.0799%" height="15" fill="rgb(207,140,10)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0520%" y="469" width="0.0799%" height="15" fill="rgb(227,111,53)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="85.0520%" y="533" width="0.1599%" height="15" fill="rgb(216,165,16)" fg:x="1064" fg:w="2"/><text x="85.3020%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="85.1319%" y="517" width="0.0799%" height="15" fill="rgb(226,111,18)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.1319%" y="501" width="0.0799%" height="15" fill="rgb(251,27,17)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.1319%" y="485" width="0.0799%" height="15" fill="rgb(254,69,9)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.1319%" y="469" width="0.0799%" height="15" fill="rgb(234,140,37)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1319%" y="453" width="0.0799%" height="15" fill="rgb(220,93,8)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1319%" y="437" width="0.0799%" height="15" fill="rgb(236,113,3)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.1319%" y="421" width="0.0799%" height="15" fill="rgb(234,108,23)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1319%" y="405" width="0.0799%" height="15" fill="rgb(205,114,34)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1319%" y="389" width="0.0799%" height="15" fill="rgb(236,200,45)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2118%" y="485" width="0.0799%" height="15" fill="rgb(227,194,29)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2118%" y="469" width="0.0799%" height="15" fill="rgb(250,76,42)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2118%" y="453" width="0.0799%" height="15" fill="rgb(208,128,8)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2118%" y="437" width="0.0799%" height="15" fill="rgb(229,209,35)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (74 samples, 5.92%)</title><rect x="79.4564%" y="565" width="5.9153%" height="15" fill="rgb(215,39,53)" fg:x="994" fg:w="74"/><text x="79.7064%" y="575.50">plugins_..</text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="84.9720%" y="549" width="0.3997%" height="15" fill="rgb(219,123,41)" fg:x="1063" fg:w="5"/><text x="85.2220%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="85.2118%" y="533" width="0.1599%" height="15" fill="rgb(212,158,18)" fg:x="1066" fg:w="2"/><text x="85.4618%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="85.2118%" y="517" width="0.1599%" height="15" fill="rgb(234,196,53)" fg:x="1066" fg:w="2"/><text x="85.4618%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="85.2118%" y="501" width="0.1599%" height="15" fill="rgb(210,139,12)" fg:x="1066" fg:w="2"/><text x="85.4618%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="85.2918%" y="485" width="0.0799%" height="15" fill="rgb(220,116,54)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="85.3717%" y="565" width="0.0799%" height="15" fill="rgb(247,103,28)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="85.3717%" y="549" width="0.0799%" height="15" fill="rgb(253,156,45)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="85.3717%" y="533" width="0.0799%" height="15" fill="rgb(237,157,52)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="85.3717%" y="517" width="0.0799%" height="15" fill="rgb(253,112,16)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="85.4516%" y="501" width="0.1599%" height="15" fill="rgb(234,70,18)" fg:x="1069" fg:w="2"/><text x="85.7016%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5316%" y="485" width="0.0799%" height="15" fill="rgb(247,138,19)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="85.6115%" y="501" width="0.0799%" height="15" fill="rgb(207,171,1)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.6115%" y="485" width="0.0799%" height="15" fill="rgb(239,213,3)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="85.6115%" y="469" width="0.0799%" height="15" fill="rgb(226,112,4)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.6115%" y="453" width="0.0799%" height="15" fill="rgb(252,170,12)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6914%" y="437" width="0.0799%" height="15" fill="rgb(241,106,13)" fg:x="1072" fg:w="1"/><text x="85.9414%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6914%" y="421" width="0.0799%" height="15" fill="rgb(225,73,23)" fg:x="1072" fg:w="1"/><text x="85.9414%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6914%" y="405" width="0.0799%" height="15" fill="rgb(251,227,29)" fg:x="1072" fg:w="1"/><text x="85.9414%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="85.6914%" y="485" width="0.1599%" height="15" fill="rgb(237,144,13)" fg:x="1072" fg:w="2"/><text x="85.9414%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="85.6914%" y="469" width="0.1599%" height="15" fill="rgb(232,106,46)" fg:x="1072" fg:w="2"/><text x="85.9414%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="85.6914%" y="453" width="0.1599%" height="15" fill="rgb(245,154,53)" fg:x="1072" fg:w="2"/><text x="85.9414%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7714%" y="437" width="0.0799%" height="15" fill="rgb(212,119,47)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7714%" y="421" width="0.0799%" height="15" fill="rgb(253,135,25)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.7714%" y="405" width="0.0799%" height="15" fill="rgb(253,208,39)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7714%" y="389" width="0.0799%" height="15" fill="rgb(226,64,12)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7714%" y="373" width="0.0799%" height="15" fill="rgb(214,162,37)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="85.4516%" y="517" width="0.4796%" height="15" fill="rgb(250,104,5)" fg:x="1069" fg:w="6"/><text x="85.7016%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="85.6914%" y="501" width="0.2398%" height="15" fill="rgb(220,202,50)" fg:x="1072" fg:w="3"/><text x="85.9414%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.8513%" y="485" width="0.0799%" height="15" fill="rgb(248,67,38)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.8513%" y="469" width="0.0799%" height="15" fill="rgb(242,94,35)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.8513%" y="453" width="0.0799%" height="15" fill="rgb(209,78,37)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="85.8513%" y="437" width="0.0799%" height="15" fill="rgb(230,126,47)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.8513%" y="421" width="0.0799%" height="15" fill="rgb(222,110,35)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.8513%" y="405" width="0.0799%" height="15" fill="rgb(233,154,20)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.8513%" y="389" width="0.0799%" height="15" fill="rgb(223,53,50)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.8513%" y="373" width="0.0799%" height="15" fill="rgb(251,27,26)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.8513%" y="357" width="0.0799%" height="15" fill="rgb(223,189,16)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8513%" y="341" width="0.0799%" height="15" fill="rgb(207,5,54)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.56%)</title><rect x="85.4516%" y="565" width="0.5596%" height="15" fill="rgb(254,124,50)" fg:x="1069" fg:w="7"/><text x="85.7016%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="85.4516%" y="549" width="0.5596%" height="15" fill="rgb(253,193,24)" fg:x="1069" fg:w="7"/><text x="85.7016%" y="559.50"></text></g><g><title>plugins_core::build::Build::save (7 samples, 0.56%)</title><rect x="85.4516%" y="533" width="0.5596%" height="15" fill="rgb(235,170,24)" fg:x="1069" fg:w="7"/><text x="85.7016%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9313%" y="517" width="0.0799%" height="15" fill="rgb(222,212,52)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9313%" y="501" width="0.0799%" height="15" fill="rgb(223,17,45)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9313%" y="485" width="0.0799%" height="15" fill="rgb(227,103,26)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="86.0911%" y="533" width="0.0799%" height="15" fill="rgb(251,151,25)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="86.0911%" y="549" width="0.1599%" height="15" fill="rgb(248,144,29)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1711%" y="533" width="0.0799%" height="15" fill="rgb(245,97,16)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1711%" y="517" width="0.0799%" height="15" fill="rgb(220,200,29)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.1711%" y="501" width="0.0799%" height="15" fill="rgb(206,38,29)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1711%" y="485" width="0.0799%" height="15" fill="rgb(245,19,52)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1711%" y="469" width="0.0799%" height="15" fill="rgb(205,67,43)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1711%" y="453" width="0.0799%" height="15" fill="rgb(217,128,23)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.2510%" y="549" width="0.0799%" height="15" fill="rgb(210,109,28)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="86.3309%" y="517" width="0.0799%" height="15" fill="rgb(233,181,7)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="86.3309%" y="501" width="0.0799%" height="15" fill="rgb(244,11,22)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.3309%" y="485" width="0.0799%" height="15" fill="rgb(205,124,54)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.3309%" y="469" width="0.0799%" height="15" fill="rgb(218,21,27)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.3309%" y="453" width="0.0799%" height="15" fill="rgb(224,153,33)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.3309%" y="437" width="0.0799%" height="15" fill="rgb(240,219,28)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="86.3309%" y="421" width="0.0799%" height="15" fill="rgb(214,80,29)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="86.3309%" y="405" width="0.0799%" height="15" fill="rgb(247,148,44)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="86.3309%" y="389" width="0.0799%" height="15" fill="rgb(243,110,30)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="399.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="86.3309%" y="549" width="0.1599%" height="15" fill="rgb(243,173,41)" fg:x="1080" fg:w="2"/><text x="86.5809%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="86.3309%" y="533" width="0.1599%" height="15" fill="rgb(225,160,47)" fg:x="1080" fg:w="2"/><text x="86.5809%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="86.4109%" y="517" width="0.0799%" height="15" fill="rgb(215,44,21)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="86.4109%" y="501" width="0.0799%" height="15" fill="rgb(248,90,3)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="86.4908%" y="517" width="0.0799%" height="15" fill="rgb(220,196,49)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.4908%" y="501" width="0.0799%" height="15" fill="rgb(217,138,14)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.4908%" y="485" width="0.0799%" height="15" fill="rgb(219,111,20)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.4908%" y="533" width="0.1599%" height="15" fill="rgb(218,114,4)" fg:x="1082" fg:w="2"/><text x="86.7408%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="86.5707%" y="517" width="0.0799%" height="15" fill="rgb(238,133,3)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5707%" y="501" width="0.0799%" height="15" fill="rgb(224,95,0)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="86.6507%" y="517" width="0.0799%" height="15" fill="rgb(220,169,35)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6507%" y="501" width="0.0799%" height="15" fill="rgb(242,116,47)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6507%" y="485" width="0.0799%" height="15" fill="rgb(251,42,20)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6507%" y="469" width="0.0799%" height="15" fill="rgb(234,7,34)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6507%" y="453" width="0.0799%" height="15" fill="rgb(243,208,13)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="86.7306%" y="469" width="0.1599%" height="15" fill="rgb(227,33,28)" fg:x="1085" fg:w="2"/><text x="86.9806%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.7306%" y="453" width="0.1599%" height="15" fill="rgb(250,47,37)" fg:x="1085" fg:w="2"/><text x="86.9806%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.7306%" y="437" width="0.1599%" height="15" fill="rgb(235,111,52)" fg:x="1085" fg:w="2"/><text x="86.9806%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="86.7306%" y="421" width="0.1599%" height="15" fill="rgb(223,64,28)" fg:x="1085" fg:w="2"/><text x="86.9806%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8106%" y="405" width="0.0799%" height="15" fill="rgb(236,67,22)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.8106%" y="389" width="0.0799%" height="15" fill="rgb(243,79,24)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8106%" y="373" width="0.0799%" height="15" fill="rgb(241,225,22)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="86.7306%" y="501" width="0.2398%" height="15" fill="rgb(228,214,26)" fg:x="1085" fg:w="3"/><text x="86.9806%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.24%)</title><rect x="86.7306%" y="485" width="0.2398%" height="15" fill="rgb(219,84,52)" fg:x="1085" fg:w="3"/><text x="86.9806%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="86.8905%" y="469" width="0.0799%" height="15" fill="rgb(220,12,22)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="86.8905%" y="453" width="0.0799%" height="15" fill="rgb(219,9,49)" fg:x="1087" fg:w="1"/><text x="87.1405%" y="463.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="86.9704%" y="501" width="0.0799%" height="15" fill="rgb(237,40,43)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.0504%" y="469" width="0.0799%" height="15" fill="rgb(212,189,32)" fg:x="1089" fg:w="1"/><text x="87.3004%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="86.7306%" y="517" width="0.4796%" height="15" fill="rgb(247,48,9)" fg:x="1085" fg:w="6"/><text x="86.9806%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="87.0504%" y="501" width="0.1599%" height="15" fill="rgb(247,112,3)" fg:x="1089" fg:w="2"/><text x="87.3004%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.0504%" y="485" width="0.1599%" height="15" fill="rgb(243,110,18)" fg:x="1089" fg:w="2"/><text x="87.3004%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1303%" y="469" width="0.0799%" height="15" fill="rgb(233,223,44)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.1303%" y="453" width="0.0799%" height="15" fill="rgb(245,160,20)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1303%" y="437" width="0.0799%" height="15" fill="rgb(225,37,1)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="447.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (162 samples, 12.95%)</title><rect x="74.3405%" y="581" width="12.9496%" height="15" fill="rgb(253,227,39)" fg:x="930" fg:w="162"/><text x="74.5905%" y="591.50">&lt;tests::HoldingKeyI..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (16 samples, 1.28%)</title><rect x="86.0112%" y="565" width="1.2790%" height="15" fill="rgb(240,179,26)" fg:x="1076" fg:w="16"/><text x="86.2612%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (10 samples, 0.80%)</title><rect x="86.4908%" y="549" width="0.7994%" height="15" fill="rgb(237,212,23)" fg:x="1082" fg:w="10"/><text x="86.7408%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="86.6507%" y="533" width="0.6395%" height="15" fill="rgb(221,38,11)" fg:x="1084" fg:w="8"/><text x="86.9007%" y="543.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="87.2102%" y="517" width="0.0799%" height="15" fill="rgb(215,85,6)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="527.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="87.2102%" y="501" width="0.0799%" height="15" fill="rgb(239,64,14)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::FutureStorage&gt;::query_futures_before (1 samples, 0.08%)</title><rect x="87.2102%" y="485" width="0.0799%" height="15" fill="rgb(215,150,32)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="87.2902%" y="581" width="0.0799%" height="15" fill="rgb(238,15,13)" fg:x="1092" fg:w="1"/><text x="87.5402%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="87.4500%" y="565" width="0.2398%" height="15" fill="rgb(251,87,8)" fg:x="1094" fg:w="3"/><text x="87.7000%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.5300%" y="549" width="0.1599%" height="15" fill="rgb(206,86,1)" fg:x="1095" fg:w="2"/><text x="87.7800%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.6898%" y="533" width="0.0799%" height="15" fill="rgb(208,151,45)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="87.6898%" y="517" width="0.0799%" height="15" fill="rgb(231,181,24)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="87.6898%" y="501" width="0.0799%" height="15" fill="rgb(240,106,29)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="87.9297%" y="469" width="0.0799%" height="15" fill="rgb(227,166,11)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.9297%" y="453" width="0.0799%" height="15" fill="rgb(254,14,34)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.9297%" y="437" width="0.0799%" height="15" fill="rgb(223,222,6)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.9297%" y="421" width="0.0799%" height="15" fill="rgb(245,69,24)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.9297%" y="405" width="0.0799%" height="15" fill="rgb(213,193,7)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.9297%" y="389" width="0.0799%" height="15" fill="rgb(237,92,51)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1695%" y="405" width="0.0799%" height="15" fill="rgb(225,194,6)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1695%" y="389" width="0.0799%" height="15" fill="rgb(205,159,49)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1695%" y="373" width="0.0799%" height="15" fill="rgb(219,69,2)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="88.1695%" y="437" width="0.1599%" height="15" fill="rgb(215,107,24)" fg:x="1103" fg:w="2"/><text x="88.4195%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.1695%" y="421" width="0.1599%" height="15" fill="rgb(249,208,29)" fg:x="1103" fg:w="2"/><text x="88.4195%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.2494%" y="405" width="0.0799%" height="15" fill="rgb(213,147,10)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.2494%" y="389" width="0.0799%" height="15" fill="rgb(254,140,42)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.3293%" y="437" width="0.0799%" height="15" fill="rgb(249,9,15)" fg:x="1105" fg:w="1"/><text x="88.5793%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.4093%" y="421" width="0.0799%" height="15" fill="rgb(210,19,33)" fg:x="1106" fg:w="1"/><text x="88.6593%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.4093%" y="405" width="0.0799%" height="15" fill="rgb(241,121,22)" fg:x="1106" fg:w="1"/><text x="88.6593%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.4093%" y="389" width="0.0799%" height="15" fill="rgb(244,69,52)" fg:x="1106" fg:w="1"/><text x="88.6593%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.4093%" y="373" width="0.0799%" height="15" fill="rgb(244,191,54)" fg:x="1106" fg:w="1"/><text x="88.6593%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.5691%" y="405" width="0.0799%" height="15" fill="rgb(250,3,53)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.4093%" y="437" width="0.3197%" height="15" fill="rgb(205,77,3)" fg:x="1106" fg:w="4"/><text x="88.6593%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="88.4892%" y="421" width="0.2398%" height="15" fill="rgb(207,155,3)" fg:x="1107" fg:w="3"/><text x="88.7392%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.6491%" y="405" width="0.0799%" height="15" fill="rgb(224,79,2)" fg:x="1109" fg:w="1"/><text x="88.8991%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.6491%" y="389" width="0.0799%" height="15" fill="rgb(243,172,5)" fg:x="1109" fg:w="1"/><text x="88.8991%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.6491%" y="373" width="0.0799%" height="15" fill="rgb(217,23,43)" fg:x="1109" fg:w="1"/><text x="88.8991%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.6491%" y="357" width="0.0799%" height="15" fill="rgb(223,109,20)" fg:x="1109" fg:w="1"/><text x="88.8991%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="87.9297%" y="485" width="0.8793%" height="15" fill="rgb(232,159,21)" fg:x="1100" fg:w="11"/><text x="88.1797%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="88.0096%" y="469" width="0.7994%" height="15" fill="rgb(219,58,2)" fg:x="1101" fg:w="10"/><text x="88.2596%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="88.0895%" y="453" width="0.7194%" height="15" fill="rgb(241,56,8)" fg:x="1102" fg:w="9"/><text x="88.3395%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.7290%" y="437" width="0.0799%" height="15" fill="rgb(249,10,27)" fg:x="1110" fg:w="1"/><text x="88.9790%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.7290%" y="421" width="0.0799%" height="15" fill="rgb(248,177,5)" fg:x="1110" fg:w="1"/><text x="88.9790%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.08%)</title><rect x="88.8090%" y="485" width="0.0799%" height="15" fill="rgb(239,12,30)" fg:x="1111" fg:w="1"/><text x="89.0590%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.8889%" y="453" width="0.0799%" height="15" fill="rgb(229,164,25)" fg:x="1112" fg:w="1"/><text x="89.1389%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="89.0488%" y="421" width="0.1599%" height="15" fill="rgb(231,217,50)" fg:x="1114" fg:w="2"/><text x="89.2988%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1287%" y="405" width="0.0799%" height="15" fill="rgb(247,99,32)" fg:x="1115" fg:w="1"/><text x="89.3787%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="88.8889%" y="485" width="0.3997%" height="15" fill="rgb(240,74,50)" fg:x="1112" fg:w="5"/><text x="89.1389%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="88.8889%" y="469" width="0.3997%" height="15" fill="rgb(218,54,8)" fg:x="1112" fg:w="5"/><text x="89.1389%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="88.9688%" y="453" width="0.3197%" height="15" fill="rgb(227,132,20)" fg:x="1113" fg:w="4"/><text x="89.2188%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.0488%" y="437" width="0.2398%" height="15" fill="rgb(232,134,12)" fg:x="1114" fg:w="3"/><text x="89.2988%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.2086%" y="421" width="0.0799%" height="15" fill="rgb(250,129,18)" fg:x="1116" fg:w="1"/><text x="89.4586%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.3685%" y="437" width="0.0799%" height="15" fill="rgb(232,129,47)" fg:x="1118" fg:w="1"/><text x="89.6185%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.4484%" y="421" width="0.0799%" height="15" fill="rgb(230,31,40)" fg:x="1119" fg:w="1"/><text x="89.6984%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5284%" y="405" width="0.0799%" height="15" fill="rgb(232,126,10)" fg:x="1120" fg:w="1"/><text x="89.7784%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.6083%" y="405" width="0.0799%" height="15" fill="rgb(205,46,31)" fg:x="1121" fg:w="1"/><text x="89.8583%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6083%" y="389" width="0.0799%" height="15" fill="rgb(232,37,37)" fg:x="1121" fg:w="1"/><text x="89.8583%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.6882%" y="389" width="0.0799%" height="15" fill="rgb(240,91,16)" fg:x="1122" fg:w="1"/><text x="89.9382%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6882%" y="373" width="0.0799%" height="15" fill="rgb(224,160,9)" fg:x="1122" fg:w="1"/><text x="89.9382%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.7682%" y="389" width="0.0799%" height="15" fill="rgb(215,116,14)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.7682%" y="373" width="0.0799%" height="15" fill="rgb(235,46,36)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.7682%" y="357" width="0.0799%" height="15" fill="rgb(238,39,28)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7682%" y="341" width="0.0799%" height="15" fill="rgb(242,125,29)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8481%" y="373" width="0.0799%" height="15" fill="rgb(238,211,30)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="89.3685%" y="453" width="0.7194%" height="15" fill="rgb(227,201,28)" fg:x="1118" fg:w="9"/><text x="89.6185%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="89.4484%" y="437" width="0.6395%" height="15" fill="rgb(238,77,29)" fg:x="1119" fg:w="8"/><text x="89.6984%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="89.5284%" y="421" width="0.5596%" height="15" fill="rgb(213,221,40)" fg:x="1120" fg:w="7"/><text x="89.7784%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="89.6882%" y="405" width="0.3997%" height="15" fill="rgb(226,220,44)" fg:x="1122" fg:w="5"/><text x="89.9382%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.8481%" y="389" width="0.2398%" height="15" fill="rgb(228,90,23)" fg:x="1124" fg:w="3"/><text x="90.0981%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="89.9281%" y="373" width="0.1599%" height="15" fill="rgb(235,72,29)" fg:x="1125" fg:w="2"/><text x="90.1781%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.9281%" y="357" width="0.1599%" height="15" fill="rgb(248,117,39)" fg:x="1125" fg:w="2"/><text x="90.1781%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0879%" y="453" width="0.0799%" height="15" fill="rgb(225,43,28)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.1679%" y="453" width="0.0799%" height="15" fill="rgb(240,93,4)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="90.2478%" y="453" width="0.1599%" height="15" fill="rgb(234,178,27)" fg:x="1129" fg:w="2"/><text x="90.4978%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="90.2478%" y="437" width="0.1599%" height="15" fill="rgb(254,88,22)" fg:x="1129" fg:w="2"/><text x="90.4978%" y="447.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="90.2478%" y="421" width="0.1599%" height="15" fill="rgb(240,206,50)" fg:x="1129" fg:w="2"/><text x="90.4978%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.16%)</title><rect x="90.2478%" y="405" width="0.1599%" height="15" fill="rgb(249,103,8)" fg:x="1129" fg:w="2"/><text x="90.4978%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="90.2478%" y="389" width="0.1599%" height="15" fill="rgb(241,178,36)" fg:x="1129" fg:w="2"/><text x="90.4978%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="90.4876%" y="389" width="0.1599%" height="15" fill="rgb(246,110,15)" fg:x="1132" fg:w="2"/><text x="90.7376%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.4876%" y="373" width="0.1599%" height="15" fill="rgb(207,14,43)" fg:x="1132" fg:w="2"/><text x="90.7376%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.5675%" y="357" width="0.0799%" height="15" fill="rgb(253,219,19)" fg:x="1133" fg:w="1"/><text x="90.8175%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="90.4876%" y="405" width="0.3197%" height="15" fill="rgb(216,126,5)" fg:x="1132" fg:w="4"/><text x="90.7376%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.6475%" y="389" width="0.1599%" height="15" fill="rgb(218,78,42)" fg:x="1134" fg:w="2"/><text x="90.8975%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.7274%" y="373" width="0.0799%" height="15" fill="rgb(215,154,40)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="90.4077%" y="437" width="0.4796%" height="15" fill="rgb(235,129,32)" fg:x="1131" fg:w="6"/><text x="90.6577%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="90.4876%" y="421" width="0.3997%" height="15" fill="rgb(218,51,8)" fg:x="1132" fg:w="5"/><text x="90.7376%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.8074%" y="405" width="0.0799%" height="15" fill="rgb(245,48,4)" fg:x="1136" fg:w="1"/><text x="91.0574%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (21 samples, 1.68%)</title><rect x="89.2886%" y="469" width="1.6787%" height="15" fill="rgb(250,175,12)" fg:x="1117" fg:w="21"/><text x="89.5386%" y="479.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="90.4077%" y="453" width="0.5596%" height="15" fill="rgb(237,95,40)" fg:x="1131" fg:w="7"/><text x="90.6577%" y="463.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="90.8873%" y="437" width="0.0799%" height="15" fill="rgb(244,120,0)" fg:x="1137" fg:w="1"/><text x="91.1373%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.9672%" y="437" width="0.0799%" height="15" fill="rgb(241,19,42)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.9672%" y="421" width="0.0799%" height="15" fill="rgb(217,174,48)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="91.0472%" y="437" width="0.1599%" height="15" fill="rgb(239,36,38)" fg:x="1139" fg:w="2"/><text x="91.2972%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="91.2070%" y="389" width="0.2398%" height="15" fill="rgb(220,63,49)" fg:x="1141" fg:w="3"/><text x="91.4570%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.3669%" y="373" width="0.0799%" height="15" fill="rgb(240,101,13)" fg:x="1143" fg:w="1"/><text x="91.6169%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="91.4468%" y="389" width="0.2398%" height="15" fill="rgb(209,184,51)" fg:x="1144" fg:w="3"/><text x="91.6968%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="91.4468%" y="373" width="0.2398%" height="15" fill="rgb(206,136,39)" fg:x="1144" fg:w="3"/><text x="91.6968%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.5268%" y="357" width="0.1599%" height="15" fill="rgb(254,47,45)" fg:x="1145" fg:w="2"/><text x="91.7768%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.5268%" y="341" width="0.1599%" height="15" fill="rgb(252,103,20)" fg:x="1145" fg:w="2"/><text x="91.7768%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.6067%" y="325" width="0.0799%" height="15" fill="rgb(230,69,12)" fg:x="1146" fg:w="1"/><text x="91.8567%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="91.7666%" y="341" width="0.0799%" height="15" fill="rgb(219,2,28)" fg:x="1148" fg:w="1"/><text x="92.0166%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.8465%" y="325" width="0.1599%" height="15" fill="rgb(210,9,12)" fg:x="1149" fg:w="2"/><text x="92.0965%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.8465%" y="309" width="0.1599%" height="15" fill="rgb(235,99,33)" fg:x="1149" fg:w="2"/><text x="92.0965%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="91.7666%" y="373" width="0.3197%" height="15" fill="rgb(230,11,38)" fg:x="1148" fg:w="4"/><text x="92.0166%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="91.7666%" y="357" width="0.3197%" height="15" fill="rgb(217,129,0)" fg:x="1148" fg:w="4"/><text x="92.0166%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="91.8465%" y="341" width="0.2398%" height="15" fill="rgb(222,198,4)" fg:x="1149" fg:w="3"/><text x="92.0965%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.0064%" y="325" width="0.0799%" height="15" fill="rgb(246,170,27)" fg:x="1151" fg:w="1"/><text x="92.2564%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.96%)</title><rect x="91.2070%" y="421" width="0.9592%" height="15" fill="rgb(229,17,28)" fg:x="1141" fg:w="12"/><text x="91.4570%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="91.2070%" y="405" width="0.9592%" height="15" fill="rgb(233,198,48)" fg:x="1141" fg:w="12"/><text x="91.4570%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="91.6867%" y="389" width="0.4796%" height="15" fill="rgb(238,103,23)" fg:x="1147" fg:w="6"/><text x="91.9367%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0863%" y="373" width="0.0799%" height="15" fill="rgb(206,91,41)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1663%" y="421" width="0.0799%" height="15" fill="rgb(227,34,25)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.36%)</title><rect x="90.9672%" y="469" width="1.3589%" height="15" fill="rgb(210,110,44)" fg:x="1138" fg:w="17"/><text x="91.2172%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.36%)</title><rect x="90.9672%" y="453" width="1.3589%" height="15" fill="rgb(216,189,8)" fg:x="1138" fg:w="17"/><text x="91.2172%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.12%)</title><rect x="91.2070%" y="437" width="1.1191%" height="15" fill="rgb(234,9,46)" fg:x="1141" fg:w="14"/><text x="91.4570%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2462%" y="421" width="0.0799%" height="15" fill="rgb(251,200,5)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="92.2462%" y="405" width="0.0799%" height="15" fill="rgb(238,165,37)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="92.4860%" y="325" width="0.2398%" height="15" fill="rgb(232,77,38)" fg:x="1157" fg:w="3"/><text x="92.7360%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.5659%" y="309" width="0.1599%" height="15" fill="rgb(253,179,33)" fg:x="1158" fg:w="2"/><text x="92.8159%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.6459%" y="293" width="0.0799%" height="15" fill="rgb(240,13,35)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6459%" y="277" width="0.0799%" height="15" fill="rgb(242,150,49)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.6459%" y="261" width="0.0799%" height="15" fill="rgb(237,176,28)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6459%" y="245" width="0.0799%" height="15" fill="rgb(214,176,33)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.8058%" y="309" width="0.1599%" height="15" fill="rgb(214,25,12)" fg:x="1161" fg:w="2"/><text x="93.0558%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.8058%" y="293" width="0.1599%" height="15" fill="rgb(238,190,20)" fg:x="1161" fg:w="2"/><text x="93.0558%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.8857%" y="277" width="0.0799%" height="15" fill="rgb(208,11,19)" fg:x="1162" fg:w="1"/><text x="93.1357%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="92.4061%" y="341" width="0.6395%" height="15" fill="rgb(239,90,4)" fg:x="1156" fg:w="8"/><text x="92.6561%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.7258%" y="325" width="0.3197%" height="15" fill="rgb(248,110,3)" fg:x="1160" fg:w="4"/><text x="92.9758%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.9656%" y="309" width="0.0799%" height="15" fill="rgb(210,41,30)" fg:x="1163" fg:w="1"/><text x="93.2156%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="92.4061%" y="357" width="0.7194%" height="15" fill="rgb(239,36,8)" fg:x="1156" fg:w="9"/><text x="92.6561%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0456%" y="341" width="0.0799%" height="15" fill="rgb(237,201,47)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="92.4061%" y="373" width="0.7994%" height="15" fill="rgb(224,140,29)" fg:x="1156" fg:w="10"/><text x="92.6561%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1255%" y="357" width="0.0799%" height="15" fill="rgb(231,209,17)" fg:x="1165" fg:w="1"/><text x="93.3755%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.2054%" y="373" width="0.0799%" height="15" fill="rgb(249,196,1)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="92.3261%" y="405" width="1.0392%" height="15" fill="rgb(223,207,51)" fg:x="1155" fg:w="13"/><text x="92.5761%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="92.3261%" y="389" width="1.0392%" height="15" fill="rgb(210,14,40)" fg:x="1155" fg:w="13"/><text x="92.5761%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.2854%" y="373" width="0.0799%" height="15" fill="rgb(250,20,52)" fg:x="1167" fg:w="1"/><text x="93.5354%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.2854%" y="357" width="0.0799%" height="15" fill="rgb(241,46,11)" fg:x="1167" fg:w="1"/><text x="93.5354%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2854%" y="341" width="0.0799%" height="15" fill="rgb(219,105,5)" fg:x="1167" fg:w="1"/><text x="93.5354%" y="351.50"></text></g><g><title>engine::session::state::State::close (72 samples, 5.76%)</title><rect x="87.6898%" y="565" width="5.7554%" height="15" fill="rgb(252,77,35)" fg:x="1097" fg:w="72"/><text x="87.9398%" y="575.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (72 samples, 5.76%)</title><rect x="87.6898%" y="549" width="5.7554%" height="15" fill="rgb(243,119,2)" fg:x="1097" fg:w="72"/><text x="87.9398%" y="559.50">engine:..</text></g><g><title>core::iter::adapters::try_process (71 samples, 5.68%)</title><rect x="87.7698%" y="533" width="5.6755%" height="15" fill="rgb(206,82,28)" fg:x="1098" fg:w="71"/><text x="88.0198%" y="543.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (71 samples, 5.68%)</title><rect x="87.7698%" y="517" width="5.6755%" height="15" fill="rgb(227,120,12)" fg:x="1098" fg:w="71"/><text x="88.0198%" y="527.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (71 samples, 5.68%)</title><rect x="87.7698%" y="501" width="5.6755%" height="15" fill="rgb(229,134,41)" fg:x="1098" fg:w="71"/><text x="88.0198%" y="511.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (52 samples, 4.16%)</title><rect x="89.2886%" y="485" width="4.1567%" height="15" fill="rgb(239,96,32)" fg:x="1117" fg:w="52"/><text x="89.5386%" y="495.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.12%)</title><rect x="92.3261%" y="469" width="1.1191%" height="15" fill="rgb(225,46,27)" fg:x="1155" fg:w="14"/><text x="92.5761%" y="479.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.12%)</title><rect x="92.3261%" y="453" width="1.1191%" height="15" fill="rgb(215,168,2)" fg:x="1155" fg:w="14"/><text x="92.5761%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.12%)</title><rect x="92.3261%" y="437" width="1.1191%" height="15" fill="rgb(207,170,52)" fg:x="1155" fg:w="14"/><text x="92.5761%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="92.3261%" y="421" width="1.1191%" height="15" fill="rgb(237,198,36)" fg:x="1155" fg:w="14"/><text x="92.5761%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3653%" y="405" width="0.0799%" height="15" fill="rgb(213,27,14)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3653%" y="389" width="0.0799%" height="15" fill="rgb(218,77,5)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3653%" y="373" width="0.0799%" height="15" fill="rgb(230,219,39)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="383.50"></text></g><g><title>engine::session::Session::close (77 samples, 6.16%)</title><rect x="87.3701%" y="581" width="6.1551%" height="15" fill="rgb(245,177,7)" fg:x="1093" fg:w="77"/><text x="87.6201%" y="591.50">engine::..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="93.4452%" y="565" width="0.0799%" height="15" fill="rgb(246,44,46)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="575.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="93.4452%" y="549" width="0.0799%" height="15" fill="rgb(207,173,15)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="93.4452%" y="533" width="0.0799%" height="15" fill="rgb(245,170,50)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="93.4452%" y="517" width="0.0799%" height="15" fill="rgb(233,156,21)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="93.4452%" y="501" width="0.0799%" height="15" fill="rgb(253,146,27)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="511.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.6051%" y="549" width="0.0799%" height="15" fill="rgb(247,66,29)" fg:x="1171" fg:w="1"/><text x="93.8551%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="93.6051%" y="533" width="0.0799%" height="15" fill="rgb(218,207,26)" fg:x="1171" fg:w="1"/><text x="93.8551%" y="543.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.6051%" y="517" width="0.0799%" height="15" fill="rgb(234,93,26)" fg:x="1171" fg:w="1"/><text x="93.8551%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="93.7650%" y="533" width="0.1599%" height="15" fill="rgb(214,75,48)" fg:x="1173" fg:w="2"/><text x="94.0150%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="93.7650%" y="517" width="0.1599%" height="15" fill="rgb(229,119,22)" fg:x="1173" fg:w="2"/><text x="94.0150%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="93.7650%" y="501" width="0.1599%" height="15" fill="rgb(226,153,19)" fg:x="1173" fg:w="2"/><text x="94.0150%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="93.7650%" y="485" width="0.1599%" height="15" fill="rgb(220,204,36)" fg:x="1173" fg:w="2"/><text x="94.0150%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="93.7650%" y="469" width="0.1599%" height="15" fill="rgb(253,181,43)" fg:x="1173" fg:w="2"/><text x="94.0150%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.16%)</title><rect x="93.7650%" y="453" width="0.1599%" height="15" fill="rgb(211,41,51)" fg:x="1173" fg:w="2"/><text x="94.0150%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.16%)</title><rect x="93.7650%" y="437" width="0.1599%" height="15" fill="rgb(207,215,0)" fg:x="1173" fg:w="2"/><text x="94.0150%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="93.7650%" y="421" width="0.1599%" height="15" fill="rgb(212,153,10)" fg:x="1173" fg:w="2"/><text x="94.0150%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.16%)</title><rect x="93.7650%" y="405" width="0.1599%" height="15" fill="rgb(251,171,36)" fg:x="1173" fg:w="2"/><text x="94.0150%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.8449%" y="389" width="0.0799%" height="15" fill="rgb(225,219,41)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.08%)</title><rect x="93.8449%" y="373" width="0.0799%" height="15" fill="rgb(208,200,1)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="383.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="93.8449%" y="357" width="0.0799%" height="15" fill="rgb(206,75,47)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="93.8449%" y="341" width="0.0799%" height="15" fill="rgb(248,3,16)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.8449%" y="325" width="0.0799%" height="15" fill="rgb(242,157,36)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.8449%" y="309" width="0.0799%" height="15" fill="rgb(215,175,11)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.8449%" y="293" width="0.0799%" height="15" fill="rgb(252,222,22)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.8449%" y="277" width="0.0799%" height="15" fill="rgb(250,121,35)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.8449%" y="261" width="0.0799%" height="15" fill="rgb(233,120,49)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.8449%" y="245" width="0.0799%" height="15" fill="rgb(205,201,14)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.8449%" y="229" width="0.0799%" height="15" fill="rgb(219,58,45)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.8449%" y="213" width="0.0799%" height="15" fill="rgb(251,65,12)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.8449%" y="197" width="0.0799%" height="15" fill="rgb(224,47,31)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="93.8449%" y="181" width="0.0799%" height="15" fill="rgb(233,74,26)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.8449%" y="165" width="0.0799%" height="15" fill="rgb(231,211,31)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="93.8449%" y="149" width="0.0799%" height="15" fill="rgb(239,167,5)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="93.8449%" y="133" width="0.0799%" height="15" fill="rgb(241,85,0)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="93.8449%" y="117" width="0.0799%" height="15" fill="rgb(229,130,21)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.8449%" y="101" width="0.0799%" height="15" fill="rgb(254,84,49)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="111.50"></text></g><g><title>chrono::offset::utc::Utc::now (2 samples, 0.16%)</title><rect x="94.0847%" y="517" width="0.1599%" height="15" fill="rgb(235,85,21)" fg:x="1177" fg:w="2"/><text x="94.3347%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="94.1647%" y="501" width="0.0799%" height="15" fill="rgb(246,128,52)" fg:x="1178" fg:w="1"/><text x="94.4147%" y="511.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="94.1647%" y="485" width="0.0799%" height="15" fill="rgb(243,114,49)" fg:x="1178" fg:w="1"/><text x="94.4147%" y="495.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (1 samples, 0.08%)</title><rect x="94.2446%" y="517" width="0.0799%" height="15" fill="rgb(240,224,22)" fg:x="1179" fg:w="1"/><text x="94.4946%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (1 samples, 0.08%)</title><rect x="94.2446%" y="501" width="0.0799%" height="15" fill="rgb(247,201,52)" fg:x="1179" fg:w="1"/><text x="94.4946%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (1 samples, 0.08%)</title><rect x="94.2446%" y="485" width="0.0799%" height="15" fill="rgb(231,70,45)" fg:x="1179" fg:w="1"/><text x="94.4946%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (1 samples, 0.08%)</title><rect x="94.2446%" y="469" width="0.0799%" height="15" fill="rgb(217,215,20)" fg:x="1179" fg:w="1"/><text x="94.4946%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.3245%" y="389" width="0.0799%" height="15" fill="rgb(226,170,30)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.3245%" y="373" width="0.0799%" height="15" fill="rgb(220,190,43)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.3245%" y="357" width="0.0799%" height="15" fill="rgb(218,20,18)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.3245%" y="341" width="0.0799%" height="15" fill="rgb(245,37,26)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.3245%" y="325" width="0.0799%" height="15" fill="rgb(241,127,29)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.3245%" y="309" width="0.0799%" height="15" fill="rgb(241,33,26)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.3245%" y="293" width="0.0799%" height="15" fill="rgb(220,106,21)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="94.3245%" y="277" width="0.0799%" height="15" fill="rgb(225,125,35)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.3245%" y="261" width="0.0799%" height="15" fill="rgb(248,80,22)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="271.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="94.3245%" y="405" width="0.1599%" height="15" fill="rgb(231,117,39)" fg:x="1180" fg:w="2"/><text x="94.5745%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4045%" y="389" width="0.0799%" height="15" fill="rgb(239,183,16)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4045%" y="373" width="0.0799%" height="15" fill="rgb(221,61,19)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4045%" y="357" width="0.0799%" height="15" fill="rgb(239,196,44)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4045%" y="341" width="0.0799%" height="15" fill="rgb(206,113,19)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4045%" y="325" width="0.0799%" height="15" fill="rgb(245,114,12)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.4844%" y="341" width="0.1599%" height="15" fill="rgb(247,89,39)" fg:x="1182" fg:w="2"/><text x="94.7344%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.4844%" y="325" width="0.1599%" height="15" fill="rgb(213,85,14)" fg:x="1182" fg:w="2"/><text x="94.7344%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5643%" y="309" width="0.0799%" height="15" fill="rgb(249,206,33)" fg:x="1183" fg:w="1"/><text x="94.8143%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5643%" y="293" width="0.0799%" height="15" fill="rgb(235,167,47)" fg:x="1183" fg:w="1"/><text x="94.8143%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.5643%" y="277" width="0.0799%" height="15" fill="rgb(217,177,16)" fg:x="1183" fg:w="1"/><text x="94.8143%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.5643%" y="261" width="0.0799%" height="15" fill="rgb(250,228,29)" fg:x="1183" fg:w="1"/><text x="94.8143%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.5643%" y="245" width="0.0799%" height="15" fill="rgb(216,195,42)" fg:x="1183" fg:w="1"/><text x="94.8143%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="94.5643%" y="229" width="0.0799%" height="15" fill="rgb(232,192,32)" fg:x="1183" fg:w="1"/><text x="94.8143%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.5643%" y="213" width="0.0799%" height="15" fill="rgb(211,8,47)" fg:x="1183" fg:w="1"/><text x="94.8143%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6443%" y="261" width="0.0799%" height="15" fill="rgb(251,201,9)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="94.7242%" y="213" width="0.0799%" height="15" fill="rgb(206,185,47)" fg:x="1185" fg:w="1"/><text x="94.9742%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="94.6443%" y="293" width="0.2398%" height="15" fill="rgb(245,54,32)" fg:x="1184" fg:w="3"/><text x="94.8943%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.6443%" y="277" width="0.2398%" height="15" fill="rgb(208,1,8)" fg:x="1184" fg:w="3"/><text x="94.8943%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.7242%" y="261" width="0.1599%" height="15" fill="rgb(228,57,24)" fg:x="1185" fg:w="2"/><text x="94.9742%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.7242%" y="245" width="0.1599%" height="15" fill="rgb(251,24,8)" fg:x="1185" fg:w="2"/><text x="94.9742%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.7242%" y="229" width="0.1599%" height="15" fill="rgb(236,196,50)" fg:x="1185" fg:w="2"/><text x="94.9742%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.8042%" y="213" width="0.0799%" height="15" fill="rgb(246,222,29)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.8042%" y="197" width="0.0799%" height="15" fill="rgb(211,34,40)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.8042%" y="181" width="0.0799%" height="15" fill="rgb(210,66,51)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.8042%" y="165" width="0.0799%" height="15" fill="rgb(250,56,43)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.8042%" y="149" width="0.0799%" height="15" fill="rgb(240,111,50)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.8042%" y="133" width="0.0799%" height="15" fill="rgb(209,117,13)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.8042%" y="117" width="0.0799%" height="15" fill="rgb(232,164,45)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.8042%" y="101" width="0.0799%" height="15" fill="rgb(205,69,32)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.8042%" y="85" width="0.0799%" height="15" fill="rgb(240,147,45)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="95.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.8042%" y="69" width="0.0799%" height="15" fill="rgb(221,94,48)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="79.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="94.6443%" y="341" width="0.3197%" height="15" fill="rgb(249,209,17)" fg:x="1184" fg:w="4"/><text x="94.8943%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="94.6443%" y="325" width="0.3197%" height="15" fill="rgb(228,57,28)" fg:x="1184" fg:w="4"/><text x="94.8943%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="94.6443%" y="309" width="0.3197%" height="15" fill="rgb(250,133,26)" fg:x="1184" fg:w="4"/><text x="94.8943%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.8841%" y="293" width="0.0799%" height="15" fill="rgb(254,15,16)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8841%" y="277" width="0.0799%" height="15" fill="rgb(209,147,42)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.8841%" y="261" width="0.0799%" height="15" fill="rgb(208,5,29)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.8841%" y="245" width="0.0799%" height="15" fill="rgb(250,73,31)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.0440%" y="197" width="0.1599%" height="15" fill="rgb(238,45,10)" fg:x="1189" fg:w="2"/><text x="95.2940%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.1239%" y="181" width="0.0799%" height="15" fill="rgb(214,104,5)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.1239%" y="165" width="0.0799%" height="15" fill="rgb(242,217,19)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.1239%" y="149" width="0.0799%" height="15" fill="rgb(246,113,27)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1239%" y="133" width="0.0799%" height="15" fill="rgb(221,34,27)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="94.9640%" y="245" width="0.3197%" height="15" fill="rgb(246,109,6)" fg:x="1188" fg:w="4"/><text x="95.2140%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="94.9640%" y="229" width="0.3197%" height="15" fill="rgb(217,12,25)" fg:x="1188" fg:w="4"/><text x="95.2140%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="94.9640%" y="213" width="0.3197%" height="15" fill="rgb(250,195,5)" fg:x="1188" fg:w="4"/><text x="95.2140%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.2038%" y="197" width="0.0799%" height="15" fill="rgb(244,140,45)" fg:x="1191" fg:w="1"/><text x="95.4538%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2038%" y="181" width="0.0799%" height="15" fill="rgb(230,64,14)" fg:x="1191" fg:w="1"/><text x="95.4538%" y="191.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (11 samples, 0.88%)</title><rect x="94.4844%" y="405" width="0.8793%" height="15" fill="rgb(206,27,27)" fg:x="1182" fg:w="11"/><text x="94.7344%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (11 samples, 0.88%)</title><rect x="94.4844%" y="389" width="0.8793%" height="15" fill="rgb(230,14,50)" fg:x="1182" fg:w="11"/><text x="94.7344%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (11 samples, 0.88%)</title><rect x="94.4844%" y="373" width="0.8793%" height="15" fill="rgb(237,172,14)" fg:x="1182" fg:w="11"/><text x="94.7344%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="94.4844%" y="357" width="0.8793%" height="15" fill="rgb(209,25,21)" fg:x="1182" fg:w="11"/><text x="94.7344%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="94.9640%" y="341" width="0.3997%" height="15" fill="rgb(248,148,22)" fg:x="1188" fg:w="5"/><text x="95.2140%" y="351.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="94.9640%" y="325" width="0.3997%" height="15" fill="rgb(234,100,22)" fg:x="1188" fg:w="5"/><text x="95.2140%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="94.9640%" y="309" width="0.3997%" height="15" fill="rgb(210,20,30)" fg:x="1188" fg:w="5"/><text x="95.2140%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="94.9640%" y="293" width="0.3997%" height="15" fill="rgb(232,58,0)" fg:x="1188" fg:w="5"/><text x="95.2140%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="94.9640%" y="277" width="0.3997%" height="15" fill="rgb(221,68,13)" fg:x="1188" fg:w="5"/><text x="95.2140%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="94.9640%" y="261" width="0.3997%" height="15" fill="rgb(231,194,11)" fg:x="1188" fg:w="5"/><text x="95.2140%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2838%" y="245" width="0.0799%" height="15" fill="rgb(235,51,41)" fg:x="1192" fg:w="1"/><text x="95.5338%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2838%" y="229" width="0.0799%" height="15" fill="rgb(240,50,32)" fg:x="1192" fg:w="1"/><text x="95.5338%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.2838%" y="213" width="0.0799%" height="15" fill="rgb(240,185,36)" fg:x="1192" fg:w="1"/><text x="95.5338%" y="223.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (14 samples, 1.12%)</title><rect x="94.3245%" y="437" width="1.1191%" height="15" fill="rgb(211,168,15)" fg:x="1180" fg:w="14"/><text x="94.5745%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (14 samples, 1.12%)</title><rect x="94.3245%" y="421" width="1.1191%" height="15" fill="rgb(221,70,0)" fg:x="1180" fg:w="14"/><text x="94.5745%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.3637%" y="405" width="0.0799%" height="15" fill="rgb(205,21,33)" fg:x="1193" fg:w="1"/><text x="95.6137%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="95.6835%" y="405" width="0.0799%" height="15" fill="rgb(225,106,10)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="95.6835%" y="389" width="0.0799%" height="15" fill="rgb(236,200,50)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="95.6835%" y="373" width="0.0799%" height="15" fill="rgb(249,93,23)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="95.6835%" y="357" width="0.0799%" height="15" fill="rgb(244,115,35)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="95.6835%" y="341" width="0.0799%" height="15" fill="rgb(231,129,47)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="95.6835%" y="325" width="0.0799%" height="15" fill="rgb(225,160,50)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="95.6835%" y="309" width="0.0799%" height="15" fill="rgb(218,135,23)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="95.6835%" y="293" width="0.0799%" height="15" fill="rgb(227,119,14)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="95.6835%" y="277" width="0.0799%" height="15" fill="rgb(242,138,13)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="95.8433%" y="373" width="0.0799%" height="15" fill="rgb(215,11,16)" fg:x="1199" fg:w="1"/><text x="96.0933%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.8433%" y="357" width="0.0799%" height="15" fill="rgb(234,170,50)" fg:x="1199" fg:w="1"/><text x="96.0933%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="95.8433%" y="341" width="0.0799%" height="15" fill="rgb(233,34,20)" fg:x="1199" fg:w="1"/><text x="96.0933%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9233%" y="341" width="0.0799%" height="15" fill="rgb(237,100,45)" fg:x="1200" fg:w="1"/><text x="96.1733%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.0032%" y="277" width="0.0799%" height="15" fill="rgb(231,184,36)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0032%" y="261" width="0.0799%" height="15" fill="rgb(252,93,2)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0032%" y="245" width="0.0799%" height="15" fill="rgb(248,176,47)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0032%" y="229" width="0.0799%" height="15" fill="rgb(249,125,23)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.0032%" y="213" width="0.0799%" height="15" fill="rgb(239,67,42)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="223.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="95.9233%" y="357" width="0.2398%" height="15" fill="rgb(244,162,4)" fg:x="1200" fg:w="3"/><text x="96.1733%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.0032%" y="341" width="0.1599%" height="15" fill="rgb(214,150,38)" fg:x="1201" fg:w="2"/><text x="96.2532%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.0032%" y="325" width="0.1599%" height="15" fill="rgb(228,211,28)" fg:x="1201" fg:w="2"/><text x="96.2532%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="96.0032%" y="309" width="0.1599%" height="15" fill="rgb(212,98,48)" fg:x="1201" fg:w="2"/><text x="96.2532%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="96.0032%" y="293" width="0.1599%" height="15" fill="rgb(213,45,13)" fg:x="1201" fg:w="2"/><text x="96.2532%" y="303.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="96.0831%" y="277" width="0.0799%" height="15" fill="rgb(218,35,29)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="96.1631%" y="293" width="0.0799%" height="15" fill="rgb(244,13,3)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1631%" y="277" width="0.0799%" height="15" fill="rgb(235,170,19)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1631%" y="261" width="0.0799%" height="15" fill="rgb(233,193,43)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1631%" y="245" width="0.0799%" height="15" fill="rgb(228,223,20)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1631%" y="229" width="0.0799%" height="15" fill="rgb(208,85,54)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1631%" y="213" width="0.0799%" height="15" fill="rgb(254,14,45)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1631%" y="197" width="0.0799%" height="15" fill="rgb(247,99,29)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1631%" y="181" width="0.0799%" height="15" fill="rgb(225,180,54)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1631%" y="165" width="0.0799%" height="15" fill="rgb(239,88,43)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1631%" y="149" width="0.0799%" height="15" fill="rgb(209,47,11)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1631%" y="133" width="0.0799%" height="15" fill="rgb(219,179,23)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.1631%" y="117" width="0.0799%" height="15" fill="rgb(213,183,19)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.1631%" y="101" width="0.0799%" height="15" fill="rgb(210,11,9)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.1631%" y="85" width="0.0799%" height="15" fill="rgb(239,194,16)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.1631%" y="69" width="0.0799%" height="15" fill="rgb(246,23,50)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1631%" y="53" width="0.0799%" height="15" fill="rgb(245,10,41)" fg:x="1203" fg:w="1"/><text x="96.4131%" y="63.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.3229%" y="149" width="0.0799%" height="15" fill="rgb(228,43,24)" fg:x="1205" fg:w="1"/><text x="96.5729%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.3229%" y="133" width="0.0799%" height="15" fill="rgb(220,151,0)" fg:x="1205" fg:w="1"/><text x="96.5729%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3229%" y="117" width="0.0799%" height="15" fill="rgb(232,219,10)" fg:x="1205" fg:w="1"/><text x="96.5729%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3229%" y="101" width="0.0799%" height="15" fill="rgb(227,217,48)" fg:x="1205" fg:w="1"/><text x="96.5729%" y="111.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="96.2430%" y="293" width="0.2398%" height="15" fill="rgb(210,66,35)" fg:x="1204" fg:w="3"/><text x="96.4930%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.2430%" y="277" width="0.2398%" height="15" fill="rgb(254,6,7)" fg:x="1204" fg:w="3"/><text x="96.4930%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.2430%" y="261" width="0.2398%" height="15" fill="rgb(235,222,42)" fg:x="1204" fg:w="3"/><text x="96.4930%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="96.2430%" y="245" width="0.2398%" height="15" fill="rgb(245,126,5)" fg:x="1204" fg:w="3"/><text x="96.4930%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.2430%" y="229" width="0.2398%" height="15" fill="rgb(215,73,17)" fg:x="1204" fg:w="3"/><text x="96.4930%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.3229%" y="213" width="0.1599%" height="15" fill="rgb(219,198,52)" fg:x="1205" fg:w="2"/><text x="96.5729%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3229%" y="197" width="0.1599%" height="15" fill="rgb(217,159,18)" fg:x="1205" fg:w="2"/><text x="96.5729%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.3229%" y="181" width="0.1599%" height="15" fill="rgb(212,177,18)" fg:x="1205" fg:w="2"/><text x="96.5729%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="96.3229%" y="165" width="0.1599%" height="15" fill="rgb(241,10,11)" fg:x="1205" fg:w="2"/><text x="96.5729%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4029%" y="149" width="0.0799%" height="15" fill="rgb(232,114,35)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4029%" y="133" width="0.0799%" height="15" fill="rgb(238,222,8)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.4029%" y="117" width="0.0799%" height="15" fill="rgb(251,153,44)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4029%" y="101" width="0.0799%" height="15" fill="rgb(210,140,51)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4029%" y="85" width="0.0799%" height="15" fill="rgb(222,63,0)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.4029%" y="69" width="0.0799%" height="15" fill="rgb(240,18,40)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="79.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.4029%" y="53" width="0.0799%" height="15" fill="rgb(237,88,16)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="63.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4029%" y="37" width="0.0799%" height="15" fill="rgb(251,117,13)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="47.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.4828%" y="165" width="0.1599%" height="15" fill="rgb(251,228,8)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.4828%" y="149" width="0.1599%" height="15" fill="rgb(205,107,49)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.5627%" y="133" width="0.0799%" height="15" fill="rgb(238,72,41)" fg:x="1208" fg:w="1"/><text x="96.8127%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.4828%" y="197" width="0.2398%" height="15" fill="rgb(248,183,52)" fg:x="1207" fg:w="3"/><text x="96.7328%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.4828%" y="181" width="0.2398%" height="15" fill="rgb(215,58,20)" fg:x="1207" fg:w="3"/><text x="96.7328%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6427%" y="165" width="0.0799%" height="15" fill="rgb(209,49,13)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="175.50"></text></g><g><title>plugins_core::tools::contained_by (11 samples, 0.88%)</title><rect x="95.9233%" y="373" width="0.8793%" height="15" fill="rgb(208,113,17)" fg:x="1200" fg:w="11"/><text x="96.1733%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (8 samples, 0.64%)</title><rect x="96.1631%" y="357" width="0.6395%" height="15" fill="rgb(208,14,22)" fg:x="1203" fg:w="8"/><text x="96.4131%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (8 samples, 0.64%)</title><rect x="96.1631%" y="341" width="0.6395%" height="15" fill="rgb(222,95,2)" fg:x="1203" fg:w="8"/><text x="96.4131%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (8 samples, 0.64%)</title><rect x="96.1631%" y="325" width="0.6395%" height="15" fill="rgb(253,180,37)" fg:x="1203" fg:w="8"/><text x="96.4131%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="96.1631%" y="309" width="0.6395%" height="15" fill="rgb(250,81,33)" fg:x="1203" fg:w="8"/><text x="96.4131%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="96.4828%" y="293" width="0.3197%" height="15" fill="rgb(251,151,41)" fg:x="1207" fg:w="4"/><text x="96.7328%" y="303.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="96.4828%" y="277" width="0.3197%" height="15" fill="rgb(210,135,17)" fg:x="1207" fg:w="4"/><text x="96.7328%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.4828%" y="261" width="0.3197%" height="15" fill="rgb(239,21,29)" fg:x="1207" fg:w="4"/><text x="96.7328%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.4828%" y="245" width="0.3197%" height="15" fill="rgb(231,215,16)" fg:x="1207" fg:w="4"/><text x="96.7328%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.4828%" y="229" width="0.3197%" height="15" fill="rgb(239,151,54)" fg:x="1207" fg:w="4"/><text x="96.7328%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.4828%" y="213" width="0.3197%" height="15" fill="rgb(222,122,38)" fg:x="1207" fg:w="4"/><text x="96.7328%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.7226%" y="197" width="0.0799%" height="15" fill="rgb(243,128,1)" fg:x="1210" fg:w="1"/><text x="96.9726%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="96.8026%" y="309" width="0.1599%" height="15" fill="rgb(225,74,21)" fg:x="1211" fg:w="2"/><text x="97.0526%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="96.8026%" y="293" width="0.1599%" height="15" fill="rgb(216,210,10)" fg:x="1211" fg:w="2"/><text x="97.0526%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.8825%" y="277" width="0.0799%" height="15" fill="rgb(228,76,19)" fg:x="1212" fg:w="1"/><text x="97.1325%" y="287.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.8825%" y="261" width="0.0799%" height="15" fill="rgb(236,80,34)" fg:x="1212" fg:w="1"/><text x="97.1325%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9624%" y="277" width="0.0799%" height="15" fill="rgb(225,173,23)" fg:x="1213" fg:w="1"/><text x="97.2124%" y="287.50"></text></g><g><title>plugins_core::tools::occupied_by (4 samples, 0.32%)</title><rect x="96.8026%" y="373" width="0.3197%" height="15" fill="rgb(253,38,1)" fg:x="1211" fg:w="4"/><text x="97.0526%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="96.8026%" y="357" width="0.3197%" height="15" fill="rgb(206,155,35)" fg:x="1211" fg:w="4"/><text x="97.0526%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="96.8026%" y="341" width="0.3197%" height="15" fill="rgb(254,27,53)" fg:x="1211" fg:w="4"/><text x="97.0526%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.8026%" y="325" width="0.3197%" height="15" fill="rgb(225,52,41)" fg:x="1211" fg:w="4"/><text x="97.0526%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.9624%" y="309" width="0.1599%" height="15" fill="rgb(244,53,18)" fg:x="1213" fg:w="2"/><text x="97.2124%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9624%" y="293" width="0.1599%" height="15" fill="rgb(254,206,48)" fg:x="1213" fg:w="2"/><text x="97.2124%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.0424%" y="277" width="0.0799%" height="15" fill="rgb(236,182,23)" fg:x="1214" fg:w="1"/><text x="97.2924%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.0424%" y="261" width="0.0799%" height="15" fill="rgb(236,191,37)" fg:x="1214" fg:w="1"/><text x="97.2924%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.0424%" y="245" width="0.0799%" height="15" fill="rgb(245,53,8)" fg:x="1214" fg:w="1"/><text x="97.2924%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="97.1223%" y="341" width="0.0799%" height="15" fill="rgb(245,147,9)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.1223%" y="325" width="0.0799%" height="15" fill="rgb(218,24,48)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.1223%" y="309" width="0.0799%" height="15" fill="rgb(254,23,9)" fg:x="1215" fg:w="1"/><text x="97.3723%" y="319.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (19 samples, 1.52%)</title><rect x="95.7634%" y="389" width="1.5188%" height="15" fill="rgb(244,105,9)" fg:x="1198" fg:w="19"/><text x="96.0134%" y="399.50"></text></g><g><title>plugins_core::tools::worn_by (2 samples, 0.16%)</title><rect x="97.1223%" y="373" width="0.1599%" height="15" fill="rgb(212,142,22)" fg:x="1215" fg:w="2"/><text x="97.3723%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="97.1223%" y="357" width="0.1599%" height="15" fill="rgb(221,114,49)" fg:x="1215" fg:w="2"/><text x="97.3723%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2022%" y="341" width="0.0799%" height="15" fill="rgb(223,210,25)" fg:x="1216" fg:w="1"/><text x="97.4522%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2022%" y="325" width="0.0799%" height="15" fill="rgb(235,162,44)" fg:x="1216" fg:w="1"/><text x="97.4522%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="97.2822%" y="389" width="0.0799%" height="15" fill="rgb(237,65,45)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="399.50"></text></g><g><title>engine::session::Session::captured (47 samples, 3.76%)</title><rect x="93.6851%" y="549" width="3.7570%" height="15" fill="rgb(208,79,9)" fg:x="1172" fg:w="47"/><text x="93.9351%" y="559.50">engi..</text></g><g><title>engine::session::logs::capture (44 samples, 3.52%)</title><rect x="93.9249%" y="533" width="3.5172%" height="15" fill="rgb(215,228,8)" fg:x="1175" fg:w="44"/><text x="94.1749%" y="543.50">eng..</text></g><g><title>tracing_core::dispatcher::with_default (39 samples, 3.12%)</title><rect x="94.3245%" y="517" width="3.1175%" height="15" fill="rgb(205,185,17)" fg:x="1180" fg:w="39"/><text x="94.5745%" y="527.50">tra..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (39 samples, 3.12%)</title><rect x="94.3245%" y="501" width="3.1175%" height="15" fill="rgb(213,62,36)" fg:x="1180" fg:w="39"/><text x="94.5745%" y="511.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (39 samples, 3.12%)</title><rect x="94.3245%" y="485" width="3.1175%" height="15" fill="rgb(209,34,9)" fg:x="1180" fg:w="39"/><text x="94.5745%" y="495.50">ker..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (39 samples, 3.12%)</title><rect x="94.3245%" y="469" width="3.1175%" height="15" fill="rgb(246,151,27)" fg:x="1180" fg:w="39"/><text x="94.5745%" y="479.50">ker..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (39 samples, 3.12%)</title><rect x="94.3245%" y="453" width="3.1175%" height="15" fill="rgb(218,206,3)" fg:x="1180" fg:w="39"/><text x="94.5745%" y="463.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (25 samples, 2.00%)</title><rect x="95.4436%" y="437" width="1.9984%" height="15" fill="rgb(242,202,1)" fg:x="1194" fg:w="25"/><text x="95.6936%" y="447.50">k..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (25 samples, 2.00%)</title><rect x="95.4436%" y="421" width="1.9984%" height="15" fill="rgb(227,185,16)" fg:x="1194" fg:w="25"/><text x="95.6936%" y="431.50">&lt;..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (21 samples, 1.68%)</title><rect x="95.7634%" y="405" width="1.6787%" height="15" fill="rgb(241,1,14)" fg:x="1198" fg:w="21"/><text x="96.0134%" y="415.50"></text></g><g><title>plugins_rune::sources::load_sources_from_entity (1 samples, 0.08%)</title><rect x="97.3621%" y="389" width="0.0799%" height="15" fill="rgb(212,113,25)" fg:x="1218" fg:w="1"/><text x="97.6121%" y="399.50"></text></g><g><title>plugins_rune::sources::get_script (1 samples, 0.08%)</title><rect x="97.3621%" y="373" width="0.0799%" height="15" fill="rgb(247,37,43)" fg:x="1218" fg:w="1"/><text x="97.6121%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.3621%" y="357" width="0.0799%" height="15" fill="rgb(226,54,8)" fg:x="1218" fg:w="1"/><text x="97.6121%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="97.3621%" y="341" width="0.0799%" height="15" fill="rgb(251,205,25)" fg:x="1218" fg:w="1"/><text x="97.6121%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.3621%" y="325" width="0.0799%" height="15" fill="rgb(246,87,35)" fg:x="1218" fg:w="1"/><text x="97.6121%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.3621%" y="309" width="0.0799%" height="15" fill="rgb(251,145,46)" fg:x="1218" fg:w="1"/><text x="97.6121%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.4420%" y="501" width="0.1599%" height="15" fill="rgb(210,210,33)" fg:x="1219" fg:w="2"/><text x="97.6920%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.4420%" y="485" width="0.1599%" height="15" fill="rgb(221,151,11)" fg:x="1219" fg:w="2"/><text x="97.6920%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.4420%" y="469" width="0.1599%" height="15" fill="rgb(208,160,28)" fg:x="1219" fg:w="2"/><text x="97.6920%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.4420%" y="453" width="0.1599%" height="15" fill="rgb(243,69,29)" fg:x="1219" fg:w="2"/><text x="97.6920%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8417%" y="405" width="0.0799%" height="15" fill="rgb(224,144,4)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8417%" y="389" width="0.0799%" height="15" fill="rgb(211,140,38)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8417%" y="373" width="0.0799%" height="15" fill="rgb(252,189,15)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8417%" y="357" width="0.0799%" height="15" fill="rgb(251,175,23)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8417%" y="341" width="0.0799%" height="15" fill="rgb(212,184,11)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.8417%" y="325" width="0.0799%" height="15" fill="rgb(217,205,6)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.8417%" y="309" width="0.0799%" height="15" fill="rgb(235,45,45)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.8417%" y="293" width="0.0799%" height="15" fill="rgb(211,157,53)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.8417%" y="277" width="0.0799%" height="15" fill="rgb(212,13,8)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.8417%" y="261" width="0.0799%" height="15" fill="rgb(218,80,36)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.9217%" y="357" width="0.0799%" height="15" fill="rgb(211,123,43)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.9217%" y="341" width="0.0799%" height="15" fill="rgb(206,165,2)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.9217%" y="325" width="0.0799%" height="15" fill="rgb(248,63,35)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9217%" y="309" width="0.0799%" height="15" fill="rgb(219,133,41)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.9217%" y="293" width="0.0799%" height="15" fill="rgb(206,175,46)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="97.9217%" y="277" width="0.0799%" height="15" fill="rgb(224,41,35)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.9217%" y="405" width="0.1599%" height="15" fill="rgb(226,113,24)" fg:x="1225" fg:w="2"/><text x="98.1717%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.9217%" y="389" width="0.1599%" height="15" fill="rgb(219,51,41)" fg:x="1225" fg:w="2"/><text x="98.1717%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.9217%" y="373" width="0.1599%" height="15" fill="rgb(220,145,47)" fg:x="1225" fg:w="2"/><text x="98.1717%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0016%" y="357" width="0.0799%" height="15" fill="rgb(239,121,47)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0016%" y="341" width="0.0799%" height="15" fill="rgb(207,60,40)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="98.0016%" y="325" width="0.0799%" height="15" fill="rgb(224,229,11)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="98.0016%" y="309" width="0.0799%" height="15" fill="rgb(252,28,32)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="98.0016%" y="293" width="0.0799%" height="15" fill="rgb(207,52,49)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="98.0016%" y="277" width="0.0799%" height="15" fill="rgb(243,51,50)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="287.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="98.0016%" y="261" width="0.0799%" height="15" fill="rgb(212,92,21)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="97.6819%" y="453" width="0.7194%" height="15" fill="rgb(230,183,50)" fg:x="1222" fg:w="9"/><text x="97.9319%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.72%)</title><rect x="97.6819%" y="437" width="0.7194%" height="15" fill="rgb(225,48,9)" fg:x="1222" fg:w="9"/><text x="97.9319%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="97.7618%" y="421" width="0.6395%" height="15" fill="rgb(254,44,4)" fg:x="1223" fg:w="8"/><text x="98.0118%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="98.0815%" y="405" width="0.3197%" height="15" fill="rgb(252,128,37)" fg:x="1227" fg:w="4"/><text x="98.3315%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.0815%" y="389" width="0.3197%" height="15" fill="rgb(227,178,8)" fg:x="1227" fg:w="4"/><text x="98.3315%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.3213%" y="373" width="0.0799%" height="15" fill="rgb(205,206,32)" fg:x="1230" fg:w="1"/><text x="98.5713%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.3213%" y="357" width="0.0799%" height="15" fill="rgb(220,218,22)" fg:x="1230" fg:w="1"/><text x="98.5713%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="97.6019%" y="501" width="0.8793%" height="15" fill="rgb(236,41,28)" fg:x="1221" fg:w="11"/><text x="97.8519%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.88%)</title><rect x="97.6019%" y="485" width="0.8793%" height="15" fill="rgb(219,37,7)" fg:x="1221" fg:w="11"/><text x="97.8519%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.80%)</title><rect x="97.6819%" y="469" width="0.7994%" height="15" fill="rgb(206,160,15)" fg:x="1222" fg:w="10"/><text x="97.9319%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.4013%" y="453" width="0.0799%" height="15" fill="rgb(208,82,21)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4013%" y="437" width="0.0799%" height="15" fill="rgb(226,130,25)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.4013%" y="421" width="0.0799%" height="15" fill="rgb(212,72,24)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.4013%" y="405" width="0.0799%" height="15" fill="rgb(206,28,16)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.4013%" y="389" width="0.0799%" height="15" fill="rgb(249,41,5)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4013%" y="373" width="0.0799%" height="15" fill="rgb(233,96,48)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="383.50"></text></g><g><title>engine::session::internal::Added::find_refs (14 samples, 1.12%)</title><rect x="97.4420%" y="533" width="1.1191%" height="15" fill="rgb(240,198,11)" fg:x="1219" fg:w="14"/><text x="97.6920%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.12%)</title><rect x="97.4420%" y="517" width="1.1191%" height="15" fill="rgb(209,175,35)" fg:x="1219" fg:w="14"/><text x="97.6920%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.4812%" y="501" width="0.0799%" height="15" fill="rgb(214,40,51)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4812%" y="485" width="0.0799%" height="15" fill="rgb(252,56,4)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.4812%" y="469" width="0.0799%" height="15" fill="rgb(219,131,5)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.4812%" y="453" width="0.0799%" height="15" fill="rgb(223,67,53)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.5612%" y="517" width="0.0799%" height="15" fill="rgb(227,154,8)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.5612%" y="501" width="0.0799%" height="15" fill="rgb(216,174,51)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.5612%" y="485" width="0.0799%" height="15" fill="rgb(239,60,34)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.5612%" y="469" width="0.0799%" height="15" fill="rgb(236,165,48)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.5612%" y="453" width="0.0799%" height="15" fill="rgb(210,37,26)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5612%" y="437" width="0.0799%" height="15" fill="rgb(211,3,17)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6411%" y="501" width="0.0799%" height="15" fill="rgb(234,88,49)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="98.6411%" y="517" width="0.1599%" height="15" fill="rgb(233,40,17)" fg:x="1234" fg:w="2"/><text x="98.8911%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7210%" y="501" width="0.0799%" height="15" fill="rgb(235,127,31)" fg:x="1235" fg:w="1"/><text x="98.9710%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7210%" y="485" width="0.0799%" height="15" fill="rgb(248,167,17)" fg:x="1235" fg:w="1"/><text x="98.9710%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.7210%" y="469" width="0.0799%" height="15" fill="rgb(218,179,8)" fg:x="1235" fg:w="1"/><text x="98.9710%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7210%" y="453" width="0.0799%" height="15" fill="rgb(216,92,14)" fg:x="1235" fg:w="1"/><text x="98.9710%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7210%" y="437" width="0.0799%" height="15" fill="rgb(221,198,46)" fg:x="1235" fg:w="1"/><text x="98.9710%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="98.8010%" y="517" width="0.1599%" height="15" fill="rgb(244,7,25)" fg:x="1236" fg:w="2"/><text x="99.0510%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.8010%" y="501" width="0.1599%" height="15" fill="rgb(233,75,6)" fg:x="1236" fg:w="2"/><text x="99.0510%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.8010%" y="485" width="0.1599%" height="15" fill="rgb(240,189,41)" fg:x="1236" fg:w="2"/><text x="99.0510%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.8809%" y="469" width="0.0799%" height="15" fill="rgb(237,157,21)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8809%" y="453" width="0.0799%" height="15" fill="rgb(210,136,49)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8809%" y="437" width="0.0799%" height="15" fill="rgb(210,68,29)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8809%" y="421" width="0.0799%" height="15" fill="rgb(247,207,20)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8809%" y="405" width="0.0799%" height="15" fill="rgb(224,73,48)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9608%" y="389" width="0.0799%" height="15" fill="rgb(215,136,47)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9608%" y="373" width="0.0799%" height="15" fill="rgb(232,222,16)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9608%" y="357" width="0.0799%" height="15" fill="rgb(249,202,47)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.9608%" y="341" width="0.0799%" height="15" fill="rgb(236,56,8)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (21 samples, 1.68%)</title><rect x="97.4420%" y="549" width="1.6787%" height="15" fill="rgb(222,6,3)" fg:x="1219" fg:w="21"/><text x="97.6920%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="98.5612%" y="533" width="0.5596%" height="15" fill="rgb(254,222,28)" fg:x="1233" fg:w="7"/><text x="98.8112%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="98.9608%" y="517" width="0.1599%" height="15" fill="rgb(219,57,23)" fg:x="1238" fg:w="2"/><text x="99.2108%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.9608%" y="501" width="0.1599%" height="15" fill="rgb(251,106,48)" fg:x="1238" fg:w="2"/><text x="99.2108%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.9608%" y="485" width="0.1599%" height="15" fill="rgb(242,2,23)" fg:x="1238" fg:w="2"/><text x="99.2108%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.9608%" y="469" width="0.1599%" height="15" fill="rgb(212,109,31)" fg:x="1238" fg:w="2"/><text x="99.2108%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.9608%" y="453" width="0.1599%" height="15" fill="rgb(241,9,22)" fg:x="1238" fg:w="2"/><text x="99.2108%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.9608%" y="437" width="0.1599%" height="15" fill="rgb(209,64,27)" fg:x="1238" fg:w="2"/><text x="99.2108%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.9608%" y="421" width="0.1599%" height="15" fill="rgb(248,13,44)" fg:x="1238" fg:w="2"/><text x="99.2108%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.9608%" y="405" width="0.1599%" height="15" fill="rgb(213,86,6)" fg:x="1238" fg:w="2"/><text x="99.2108%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0408%" y="389" width="0.0799%" height="15" fill="rgb(247,11,18)" fg:x="1239" fg:w="1"/><text x="99.2908%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.0408%" y="373" width="0.0799%" height="15" fill="rgb(252,31,11)" fg:x="1239" fg:w="1"/><text x="99.2908%" y="383.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.1207%" y="549" width="0.0799%" height="15" fill="rgb(215,63,51)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="559.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="99.1207%" y="533" width="0.0799%" height="15" fill="rgb(222,180,4)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1207%" y="517" width="0.0799%" height="15" fill="rgb(233,4,23)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1207%" y="501" width="0.0799%" height="15" fill="rgb(230,116,22)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="511.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Subject&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1207%" y="485" width="0.0799%" height="15" fill="rgb(222,20,14)" fg:x="1240" fg:w="1"/><text x="99.3707%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="99.2806%" y="501" width="0.0799%" height="15" fill="rgb(210,176,43)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2806%" y="485" width="0.0799%" height="15" fill="rgb(219,67,32)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2806%" y="469" width="0.0799%" height="15" fill="rgb(228,91,39)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2806%" y="453" width="0.0799%" height="15" fill="rgb(254,63,14)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.2806%" y="437" width="0.0799%" height="15" fill="rgb(216,171,39)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.2806%" y="421" width="0.0799%" height="15" fill="rgb(248,68,25)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.2806%" y="405" width="0.0799%" height="15" fill="rgb(239,63,16)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="99.2806%" y="389" width="0.0799%" height="15" fill="rgb(225,111,43)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.2806%" y="373" width="0.0799%" height="15" fill="rgb(246,165,17)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.3605%" y="421" width="0.0799%" height="15" fill="rgb(208,124,1)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="99.3605%" y="453" width="0.2398%" height="15" fill="rgb(234,147,33)" fg:x="1243" fg:w="3"/><text x="99.6105%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.3605%" y="437" width="0.2398%" height="15" fill="rgb(240,86,30)" fg:x="1243" fg:w="3"/><text x="99.6105%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.4404%" y="421" width="0.1599%" height="15" fill="rgb(237,34,51)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.4404%" y="405" width="0.1599%" height="15" fill="rgb(232,131,41)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5204%" y="389" width="0.0799%" height="15" fill="rgb(227,129,53)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5204%" y="373" width="0.0799%" height="15" fill="rgb(230,90,35)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5204%" y="357" width="0.0799%" height="15" fill="rgb(248,88,27)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5204%" y="341" width="0.0799%" height="15" fill="rgb(223,18,17)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5204%" y="325" width="0.0799%" height="15" fill="rgb(241,11,10)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5204%" y="309" width="0.0799%" height="15" fill="rgb(232,111,52)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="99.3605%" y="501" width="0.3197%" height="15" fill="rgb(228,67,8)" fg:x="1243" fg:w="4"/><text x="99.6105%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="99.3605%" y="485" width="0.3197%" height="15" fill="rgb(251,168,31)" fg:x="1243" fg:w="4"/><text x="99.6105%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.3605%" y="469" width="0.3197%" height="15" fill="rgb(249,164,11)" fg:x="1243" fg:w="4"/><text x="99.6105%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6003%" y="453" width="0.0799%" height="15" fill="rgb(239,81,9)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6003%" y="437" width="0.0799%" height="15" fill="rgb(222,145,38)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6803%" y="437" width="0.0799%" height="15" fill="rgb(238,80,54)" fg:x="1247" fg:w="1"/><text x="99.9303%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6803%" y="421" width="0.0799%" height="15" fill="rgb(237,116,16)" fg:x="1247" fg:w="1"/><text x="99.9303%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="99.2806%" y="517" width="0.5596%" height="15" fill="rgb(218,135,19)" fg:x="1242" fg:w="7"/><text x="99.5306%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="99.6803%" y="501" width="0.1599%" height="15" fill="rgb(216,207,44)" fg:x="1247" fg:w="2"/><text x="99.9303%" y="511.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.6803%" y="485" width="0.1599%" height="15" fill="rgb(226,152,40)" fg:x="1247" fg:w="2"/><text x="99.9303%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.6803%" y="469" width="0.1599%" height="15" fill="rgb(219,98,35)" fg:x="1247" fg:w="2"/><text x="99.9303%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6803%" y="453" width="0.1599%" height="15" fill="rgb(222,136,46)" fg:x="1247" fg:w="2"/><text x="99.9303%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.7602%" y="437" width="0.0799%" height="15" fill="rgb(222,71,8)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="447.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (80 samples, 6.39%)</title><rect x="93.5252%" y="581" width="6.3949%" height="15" fill="rgb(209,89,53)" fg:x="1170" fg:w="80"/><text x="93.7752%" y="591.50">engine::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (80 samples, 6.39%)</title><rect x="93.5252%" y="565" width="6.3949%" height="15" fill="rgb(210,97,51)" fg:x="1170" fg:w="80"/><text x="93.7752%" y="575.50">engine::..</text></g><g><title>kernel::model::EntityPtrResolver::world (9 samples, 0.72%)</title><rect x="99.2006%" y="549" width="0.7194%" height="15" fill="rgb(248,65,21)" fg:x="1241" fg:w="9"/><text x="99.4506%" y="559.50"></text></g><g><title>engine::session::Session::load_entity (8 samples, 0.64%)</title><rect x="99.2806%" y="533" width="0.6395%" height="15" fill="rgb(222,5,31)" fg:x="1242" fg:w="8"/><text x="99.5306%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.8401%" y="517" width="0.0799%" height="15" fill="rgb(241,16,30)" fg:x="1249" fg:w="1"/><text x="100.0901%" y="527.50"></text></g><g><title>all (1,251 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(215,86,30)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="943.50"></text></g><g><title>simple-9e370512 (1,251 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(235,26,44)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="927.50">simple-9e370512</text></g><g><title>_start (1,251 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(228,147,14)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="911.50">_start</text></g><g><title>__libc_start_main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(253,38,50)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="895.50">__libc_start_main</text></g><g><title>main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(251,151,16)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (1,251 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(224,64,19)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(235,214,47)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(218,15,19)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(247,209,3)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(217,29,2)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(234,9,9)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(207,43,14)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(216,219,36)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,251 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(238,12,26)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(226,67,30)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,251 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(229,154,7)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(249,90,18)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="687.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,251 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(223,53,15)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="671.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,251 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(253,86,38)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="655.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (392 samples, 31.33%)</title><rect x="68.6651%" y="629" width="31.3349%" height="15" fill="rgb(222,198,9)" fg:x="859" fg:w="392"/><text x="68.9151%" y="639.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (392 samples, 31.33%)</title><rect x="68.6651%" y="613" width="31.3349%" height="15" fill="rgb(240,146,25)" fg:x="859" fg:w="392"/><text x="68.9151%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (392 samples, 31.33%)</title><rect x="68.6651%" y="597" width="31.3349%" height="15" fill="rgb(225,38,10)" fg:x="859" fg:w="392"/><text x="68.9151%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9201%" y="581" width="0.0799%" height="15" fill="rgb(246,93,4)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9201%" y="565" width="0.0799%" height="15" fill="rgb(222,55,18)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9201%" y="549" width="0.0799%" height="15" fill="rgb(233,137,48)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.9201%" y="533" width="0.0799%" height="15" fill="rgb(214,8,54)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="543.50"></text></g></svg></svg>