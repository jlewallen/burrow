<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="1262"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1585%" y="597" width="0.0792%" height="15" fill="rgb(235,183,2)" fg:x="2" fg:w="1"/><text x="0.4085%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.2377%" y="597" width="0.1585%" height="15" fill="rgb(230,165,10)" fg:x="3" fg:w="2"/><text x="0.4877%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.2377%" y="581" width="0.1585%" height="15" fill="rgb(219,54,40)" fg:x="3" fg:w="2"/><text x="0.4877%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3962%" y="565" width="0.0792%" height="15" fill="rgb(244,73,9)" fg:x="5" fg:w="1"/><text x="0.6462%" y="575.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.4754%" y="501" width="0.3170%" height="15" fill="rgb(212,32,45)" fg:x="6" fg:w="4"/><text x="0.7254%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8716%" y="453" width="0.1585%" height="15" fill="rgb(205,58,31)" fg:x="11" fg:w="2"/><text x="1.1216%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="0.8716%" y="485" width="0.3170%" height="15" fill="rgb(250,120,43)" fg:x="11" fg:w="4"/><text x="1.1216%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="0.8716%" y="469" width="0.3170%" height="15" fill="rgb(235,13,10)" fg:x="11" fg:w="4"/><text x="1.1216%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.0301%" y="453" width="0.1585%" height="15" fill="rgb(232,219,31)" fg:x="13" fg:w="2"/><text x="1.2801%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1886%" y="485" width="0.0792%" height="15" fill="rgb(218,157,51)" fg:x="15" fg:w="1"/><text x="1.4386%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.2678%" y="485" width="0.2377%" height="15" fill="rgb(211,91,52)" fg:x="16" fg:w="3"/><text x="1.5178%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4263%" y="469" width="0.0792%" height="15" fill="rgb(240,173,1)" fg:x="18" fg:w="1"/><text x="1.6763%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.6640%" y="453" width="0.1585%" height="15" fill="rgb(248,20,47)" fg:x="21" fg:w="2"/><text x="1.9140%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.8225%" y="453" width="0.1585%" height="15" fill="rgb(217,221,40)" fg:x="23" fg:w="2"/><text x="2.0725%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9017%" y="437" width="0.0792%" height="15" fill="rgb(226,149,51)" fg:x="24" fg:w="1"/><text x="2.1517%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1395%" y="437" width="0.0792%" height="15" fill="rgb(252,193,7)" fg:x="27" fg:w="1"/><text x="2.3895%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.90%)</title><rect x="0.4754%" y="517" width="1.9017%" height="15" fill="rgb(205,123,0)" fg:x="6" fg:w="24"/><text x="0.7254%" y="527.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.58%)</title><rect x="0.7924%" y="501" width="1.5848%" height="15" fill="rgb(233,173,25)" fg:x="10" fg:w="20"/><text x="1.0424%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="1.5055%" y="485" width="0.8716%" height="15" fill="rgb(216,63,32)" fg:x="19" fg:w="11"/><text x="1.7555%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="1.5055%" y="469" width="0.8716%" height="15" fill="rgb(209,56,45)" fg:x="19" fg:w="11"/><text x="1.7555%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.9810%" y="453" width="0.3962%" height="15" fill="rgb(226,111,49)" fg:x="25" fg:w="5"/><text x="2.2310%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.2187%" y="437" width="0.1585%" height="15" fill="rgb(244,181,21)" fg:x="28" fg:w="2"/><text x="2.4687%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.2187%" y="421" width="0.1585%" height="15" fill="rgb(222,126,15)" fg:x="28" fg:w="2"/><text x="2.4687%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 1.98%)</title><rect x="0.4754%" y="533" width="1.9810%" height="15" fill="rgb(222,95,17)" fg:x="6" fg:w="25"/><text x="0.7254%" y="543.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3772%" y="517" width="0.0792%" height="15" fill="rgb(254,46,5)" fg:x="30" fg:w="1"/><text x="2.6272%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.46%)</title><rect x="0.0792%" y="613" width="2.4564%" height="15" fill="rgb(236,216,35)" fg:x="1" fg:w="31"/><text x="0.3292%" y="623.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (27 samples, 2.14%)</title><rect x="0.3962%" y="597" width="2.1395%" height="15" fill="rgb(217,187,26)" fg:x="5" fg:w="27"/><text x="0.6462%" y="607.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.14%)</title><rect x="0.3962%" y="581" width="2.1395%" height="15" fill="rgb(207,192,25)" fg:x="5" fg:w="27"/><text x="0.6462%" y="591.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (26 samples, 2.06%)</title><rect x="0.4754%" y="565" width="2.0602%" height="15" fill="rgb(253,135,27)" fg:x="6" fg:w="26"/><text x="0.7254%" y="575.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.06%)</title><rect x="0.4754%" y="549" width="2.0602%" height="15" fill="rgb(211,122,29)" fg:x="6" fg:w="26"/><text x="0.7254%" y="559.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4564%" y="533" width="0.0792%" height="15" fill="rgb(233,162,40)" fg:x="31" fg:w="1"/><text x="2.7064%" y="543.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (3 samples, 0.24%)</title><rect x="2.5357%" y="581" width="0.2377%" height="15" fill="rgb(222,184,47)" fg:x="32" fg:w="3"/><text x="2.7857%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.6941%" y="565" width="0.0792%" height="15" fill="rgb(249,99,23)" fg:x="34" fg:w="1"/><text x="2.9441%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.7734%" y="565" width="0.0792%" height="15" fill="rgb(214,60,12)" fg:x="35" fg:w="1"/><text x="3.0234%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.7734%" y="549" width="0.0792%" height="15" fill="rgb(250,229,36)" fg:x="35" fg:w="1"/><text x="3.0234%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.7734%" y="533" width="0.0792%" height="15" fill="rgb(232,195,10)" fg:x="35" fg:w="1"/><text x="3.0234%" y="543.50"></text></g><g><title>libloading::library_filename (2 samples, 0.16%)</title><rect x="2.9319%" y="533" width="0.1585%" height="15" fill="rgb(205,213,31)" fg:x="37" fg:w="2"/><text x="3.1819%" y="543.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (2 samples, 0.16%)</title><rect x="2.9319%" y="517" width="0.1585%" height="15" fill="rgb(237,43,8)" fg:x="37" fg:w="2"/><text x="3.1819%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="2.9319%" y="501" width="0.1585%" height="15" fill="rgb(216,208,3)" fg:x="37" fg:w="2"/><text x="3.1819%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="2.9319%" y="485" width="0.1585%" height="15" fill="rgb(228,179,44)" fg:x="37" fg:w="2"/><text x="3.1819%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="2.9319%" y="469" width="0.1585%" height="15" fill="rgb(230,192,27)" fg:x="37" fg:w="2"/><text x="3.1819%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="2.9319%" y="453" width="0.1585%" height="15" fill="rgb(251,30,38)" fg:x="37" fg:w="2"/><text x="3.1819%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.0903%" y="517" width="0.0792%" height="15" fill="rgb(246,55,52)" fg:x="39" fg:w="1"/><text x="3.3403%" y="527.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="3.1696%" y="517" width="0.3170%" height="15" fill="rgb(249,79,26)" fg:x="40" fg:w="4"/><text x="3.4196%" y="527.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="3.2488%" y="501" width="0.2377%" height="15" fill="rgb(220,202,16)" fg:x="41" fg:w="3"/><text x="3.4988%" y="511.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="3.4073%" y="485" width="0.0792%" height="15" fill="rgb(250,170,23)" fg:x="43" fg:w="1"/><text x="3.6573%" y="495.50"></text></g><g><title>libloading::safe::Library::new (17 samples, 1.35%)</title><rect x="3.0903%" y="533" width="1.3471%" height="15" fill="rgb(230,7,37)" fg:x="39" fg:w="17"/><text x="3.3403%" y="543.50"></text></g><g><title>dlopen (12 samples, 0.95%)</title><rect x="3.4865%" y="517" width="0.9509%" height="15" fill="rgb(213,71,1)" fg:x="44" fg:w="12"/><text x="3.7365%" y="527.50"></text></g><g><title>_dl_catch_error (12 samples, 0.95%)</title><rect x="3.4865%" y="501" width="0.9509%" height="15" fill="rgb(227,87,39)" fg:x="44" fg:w="12"/><text x="3.7365%" y="511.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.95%)</title><rect x="3.4865%" y="485" width="0.9509%" height="15" fill="rgb(210,41,29)" fg:x="44" fg:w="12"/><text x="3.7365%" y="495.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.87%)</title><rect x="3.5658%" y="469" width="0.8716%" height="15" fill="rgb(206,191,31)" fg:x="45" fg:w="11"/><text x="3.8158%" y="479.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.87%)</title><rect x="3.5658%" y="453" width="0.8716%" height="15" fill="rgb(247,75,54)" fg:x="45" fg:w="11"/><text x="3.8158%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.66%)</title><rect x="2.8526%" y="565" width="1.6640%" height="15" fill="rgb(208,54,50)" fg:x="36" fg:w="21"/><text x="3.1026%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (21 samples, 1.66%)</title><rect x="2.8526%" y="549" width="1.6640%" height="15" fill="rgb(214,90,37)" fg:x="36" fg:w="21"/><text x="3.1026%" y="559.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="4.4374%" y="533" width="0.0792%" height="15" fill="rgb(220,132,6)" fg:x="56" fg:w="1"/><text x="4.6874%" y="543.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="4.4374%" y="517" width="0.0792%" height="15" fill="rgb(213,167,7)" fg:x="56" fg:w="1"/><text x="4.6874%" y="527.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.4374%" y="501" width="0.0792%" height="15" fill="rgb(243,36,27)" fg:x="56" fg:w="1"/><text x="4.6874%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="4.5959%" y="517" width="0.0792%" height="15" fill="rgb(235,147,12)" fg:x="58" fg:w="1"/><text x="4.8459%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.5959%" y="501" width="0.0792%" height="15" fill="rgb(212,198,44)" fg:x="58" fg:w="1"/><text x="4.8459%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (29 samples, 2.30%)</title><rect x="2.5357%" y="613" width="2.2979%" height="15" fill="rgb(218,68,50)" fg:x="32" fg:w="29"/><text x="2.7857%" y="623.50">&lt;..</text></g><g><title>engine::session::Session::new (29 samples, 2.30%)</title><rect x="2.5357%" y="597" width="2.2979%" height="15" fill="rgb(224,79,48)" fg:x="32" fg:w="29"/><text x="2.7857%" y="607.50">e..</text></g><g><title>engine::session::Session::initialize (26 samples, 2.06%)</title><rect x="2.7734%" y="581" width="2.0602%" height="15" fill="rgb(213,191,50)" fg:x="35" fg:w="26"/><text x="3.0234%" y="591.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="4.5166%" y="565" width="0.3170%" height="15" fill="rgb(254,146,10)" fg:x="57" fg:w="4"/><text x="4.7666%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="4.5166%" y="549" width="0.3170%" height="15" fill="rgb(215,175,11)" fg:x="57" fg:w="4"/><text x="4.7666%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="4.5166%" y="533" width="0.3170%" height="15" fill="rgb(207,49,7)" fg:x="57" fg:w="4"/><text x="4.7666%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.6751%" y="517" width="0.1585%" height="15" fill="rgb(234,144,29)" fg:x="59" fg:w="2"/><text x="4.9251%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.6751%" y="501" width="0.1585%" height="15" fill="rgb(213,222,48)" fg:x="59" fg:w="2"/><text x="4.9251%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.6751%" y="485" width="0.1585%" height="15" fill="rgb(222,8,6)" fg:x="59" fg:w="2"/><text x="4.9251%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="4.9128%" y="597" width="0.0792%" height="15" fill="rgb(221,114,49)" fg:x="62" fg:w="1"/><text x="5.1628%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.9128%" y="581" width="0.0792%" height="15" fill="rgb(250,140,42)" fg:x="62" fg:w="1"/><text x="5.1628%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9921%" y="485" width="0.0792%" height="15" fill="rgb(250,150,27)" fg:x="63" fg:w="1"/><text x="5.2421%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9921%" y="469" width="0.0792%" height="15" fill="rgb(252,159,3)" fg:x="63" fg:w="1"/><text x="5.2421%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.9921%" y="453" width="0.0792%" height="15" fill="rgb(241,182,3)" fg:x="63" fg:w="1"/><text x="5.2421%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.9921%" y="437" width="0.0792%" height="15" fill="rgb(236,3,9)" fg:x="63" fg:w="1"/><text x="5.2421%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.9921%" y="421" width="0.0792%" height="15" fill="rgb(223,227,51)" fg:x="63" fg:w="1"/><text x="5.2421%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.9921%" y="405" width="0.0792%" height="15" fill="rgb(232,133,30)" fg:x="63" fg:w="1"/><text x="5.2421%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9921%" y="389" width="0.0792%" height="15" fill="rgb(209,93,27)" fg:x="63" fg:w="1"/><text x="5.2421%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.9921%" y="565" width="0.1585%" height="15" fill="rgb(208,108,34)" fg:x="63" fg:w="2"/><text x="5.2421%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.9921%" y="549" width="0.1585%" height="15" fill="rgb(215,189,13)" fg:x="63" fg:w="2"/><text x="5.2421%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="4.9921%" y="533" width="0.1585%" height="15" fill="rgb(206,88,23)" fg:x="63" fg:w="2"/><text x="5.2421%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="4.9921%" y="517" width="0.1585%" height="15" fill="rgb(240,173,0)" fg:x="63" fg:w="2"/><text x="5.2421%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="4.9921%" y="501" width="0.1585%" height="15" fill="rgb(223,106,52)" fg:x="63" fg:w="2"/><text x="5.2421%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="5.0713%" y="485" width="0.0792%" height="15" fill="rgb(206,130,16)" fg:x="64" fg:w="1"/><text x="5.3213%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="5.0713%" y="469" width="0.0792%" height="15" fill="rgb(220,54,25)" fg:x="64" fg:w="1"/><text x="5.3213%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.1506%" y="565" width="0.0792%" height="15" fill="rgb(210,4,38)" fg:x="65" fg:w="1"/><text x="5.4006%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="4.9921%" y="581" width="0.3170%" height="15" fill="rgb(238,94,39)" fg:x="63" fg:w="4"/><text x="5.2421%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.2298%" y="565" width="0.0792%" height="15" fill="rgb(234,124,34)" fg:x="66" fg:w="1"/><text x="5.4798%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="5.3883%" y="517" width="0.0792%" height="15" fill="rgb(221,91,40)" fg:x="68" fg:w="1"/><text x="5.6383%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.3883%" y="501" width="0.0792%" height="15" fill="rgb(246,53,28)" fg:x="68" fg:w="1"/><text x="5.6383%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.3883%" y="485" width="0.0792%" height="15" fill="rgb(229,109,7)" fg:x="68" fg:w="1"/><text x="5.6383%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.3883%" y="469" width="0.0792%" height="15" fill="rgb(249,117,8)" fg:x="68" fg:w="1"/><text x="5.6383%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.3883%" y="453" width="0.0792%" height="15" fill="rgb(210,181,1)" fg:x="68" fg:w="1"/><text x="5.6383%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.3883%" y="437" width="0.0792%" height="15" fill="rgb(211,66,1)" fg:x="68" fg:w="1"/><text x="5.6383%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="5.3883%" y="421" width="0.0792%" height="15" fill="rgb(221,90,14)" fg:x="68" fg:w="1"/><text x="5.6383%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="5.3883%" y="405" width="0.0792%" height="15" fill="rgb(219,222,44)" fg:x="68" fg:w="1"/><text x="5.6383%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.3883%" y="549" width="0.1585%" height="15" fill="rgb(246,34,33)" fg:x="68" fg:w="2"/><text x="5.6383%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="5.3883%" y="533" width="0.1585%" height="15" fill="rgb(227,135,41)" fg:x="68" fg:w="2"/><text x="5.6383%" y="543.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="5.4675%" y="517" width="0.0792%" height="15" fill="rgb(226,15,14)" fg:x="69" fg:w="1"/><text x="5.7175%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.6260%" y="517" width="0.0792%" height="15" fill="rgb(236,148,47)" fg:x="71" fg:w="1"/><text x="5.8760%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.6260%" y="501" width="0.0792%" height="15" fill="rgb(233,162,52)" fg:x="71" fg:w="1"/><text x="5.8760%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.6260%" y="485" width="0.0792%" height="15" fill="rgb(244,35,28)" fg:x="71" fg:w="1"/><text x="5.8760%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.6260%" y="469" width="0.0792%" height="15" fill="rgb(205,121,10)" fg:x="71" fg:w="1"/><text x="5.8760%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.6260%" y="453" width="0.0792%" height="15" fill="rgb(250,58,18)" fg:x="71" fg:w="1"/><text x="5.8760%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="5.6260%" y="437" width="0.0792%" height="15" fill="rgb(216,37,13)" fg:x="71" fg:w="1"/><text x="5.8760%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="5.6260%" y="421" width="0.0792%" height="15" fill="rgb(221,215,42)" fg:x="71" fg:w="1"/><text x="5.8760%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="5.7052%" y="517" width="0.0792%" height="15" fill="rgb(217,214,19)" fg:x="72" fg:w="1"/><text x="5.9552%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="5.7052%" y="501" width="0.0792%" height="15" fill="rgb(233,139,13)" fg:x="72" fg:w="1"/><text x="5.9552%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.7052%" y="485" width="0.0792%" height="15" fill="rgb(247,168,23)" fg:x="72" fg:w="1"/><text x="5.9552%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.7052%" y="469" width="0.0792%" height="15" fill="rgb(207,202,1)" fg:x="72" fg:w="1"/><text x="5.9552%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.7052%" y="453" width="0.0792%" height="15" fill="rgb(220,155,48)" fg:x="72" fg:w="1"/><text x="5.9552%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.7052%" y="437" width="0.0792%" height="15" fill="rgb(250,43,26)" fg:x="72" fg:w="1"/><text x="5.9552%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.7052%" y="421" width="0.0792%" height="15" fill="rgb(212,190,23)" fg:x="72" fg:w="1"/><text x="5.9552%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.7052%" y="405" width="0.0792%" height="15" fill="rgb(216,39,24)" fg:x="72" fg:w="1"/><text x="5.9552%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.8637%" y="501" width="0.0792%" height="15" fill="rgb(252,113,16)" fg:x="74" fg:w="1"/><text x="6.1137%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.63%)</title><rect x="5.9429%" y="485" width="0.6339%" height="15" fill="rgb(208,113,19)" fg:x="75" fg:w="8"/><text x="6.1929%" y="495.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.55%)</title><rect x="6.0222%" y="469" width="0.5547%" height="15" fill="rgb(234,107,25)" fg:x="76" fg:w="7"/><text x="6.2722%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="6.1807%" y="453" width="0.3962%" height="15" fill="rgb(234,217,51)" fg:x="78" fg:w="5"/><text x="6.4307%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="6.3391%" y="437" width="0.2377%" height="15" fill="rgb(251,29,42)" fg:x="80" fg:w="3"/><text x="6.5891%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.4976%" y="421" width="0.0792%" height="15" fill="rgb(221,62,51)" fg:x="82" fg:w="1"/><text x="6.7476%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.4976%" y="405" width="0.0792%" height="15" fill="rgb(240,192,43)" fg:x="82" fg:w="1"/><text x="6.7476%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.4976%" y="389" width="0.0792%" height="15" fill="rgb(224,157,47)" fg:x="82" fg:w="1"/><text x="6.7476%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.71%)</title><rect x="5.9429%" y="501" width="0.7132%" height="15" fill="rgb(226,84,45)" fg:x="75" fg:w="9"/><text x="6.1929%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.5769%" y="485" width="0.0792%" height="15" fill="rgb(208,207,23)" fg:x="83" fg:w="1"/><text x="6.8269%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.7353%" y="485" width="0.0792%" height="15" fill="rgb(253,34,51)" fg:x="85" fg:w="1"/><text x="6.9853%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.8146%" y="485" width="0.0792%" height="15" fill="rgb(227,26,34)" fg:x="86" fg:w="1"/><text x="7.0646%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8146%" y="469" width="0.0792%" height="15" fill="rgb(245,75,19)" fg:x="86" fg:w="1"/><text x="7.0646%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="7.5277%" y="437" width="0.3962%" height="15" fill="rgb(250,191,31)" fg:x="95" fg:w="5"/><text x="7.7777%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="7.7655%" y="421" width="0.1585%" height="15" fill="rgb(224,11,50)" fg:x="98" fg:w="2"/><text x="8.0155%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="7.7655%" y="405" width="0.1585%" height="15" fill="rgb(231,171,7)" fg:x="98" fg:w="2"/><text x="8.0155%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="7.7655%" y="389" width="0.1585%" height="15" fill="rgb(252,214,10)" fg:x="98" fg:w="2"/><text x="8.0155%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (14 samples, 1.11%)</title><rect x="6.8938%" y="485" width="1.1094%" height="15" fill="rgb(249,45,46)" fg:x="87" fg:w="14"/><text x="7.1438%" y="495.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.55%)</title><rect x="7.4485%" y="469" width="0.5547%" height="15" fill="rgb(240,173,7)" fg:x="94" fg:w="7"/><text x="7.6985%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="7.5277%" y="453" width="0.4754%" height="15" fill="rgb(235,214,13)" fg:x="95" fg:w="6"/><text x="7.7777%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.9239%" y="437" width="0.0792%" height="15" fill="rgb(245,156,8)" fg:x="100" fg:w="1"/><text x="8.1739%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.0032%" y="469" width="0.0792%" height="15" fill="rgb(235,46,12)" fg:x="101" fg:w="1"/><text x="8.2532%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.0824%" y="437" width="0.1585%" height="15" fill="rgb(221,81,14)" fg:x="102" fg:w="2"/><text x="8.3324%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.2409%" y="437" width="0.0792%" height="15" fill="rgb(238,207,9)" fg:x="104" fg:w="1"/><text x="8.4909%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.2409%" y="421" width="0.0792%" height="15" fill="rgb(224,129,35)" fg:x="104" fg:w="1"/><text x="8.4909%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.2409%" y="405" width="0.0792%" height="15" fill="rgb(243,218,34)" fg:x="104" fg:w="1"/><text x="8.4909%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="8.0824%" y="469" width="0.3170%" height="15" fill="rgb(220,166,13)" fg:x="102" fg:w="4"/><text x="8.3324%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="8.0824%" y="453" width="0.3170%" height="15" fill="rgb(227,167,49)" fg:x="102" fg:w="4"/><text x="8.3324%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.3201%" y="437" width="0.0792%" height="15" fill="rgb(234,142,12)" fg:x="105" fg:w="1"/><text x="8.5701%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.3201%" y="421" width="0.0792%" height="15" fill="rgb(207,100,48)" fg:x="105" fg:w="1"/><text x="8.5701%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.3994%" y="469" width="0.2377%" height="15" fill="rgb(210,25,14)" fg:x="106" fg:w="3"/><text x="8.6494%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.4786%" y="453" width="0.1585%" height="15" fill="rgb(246,116,27)" fg:x="107" fg:w="2"/><text x="8.7286%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.4786%" y="437" width="0.1585%" height="15" fill="rgb(214,193,42)" fg:x="107" fg:w="2"/><text x="8.7286%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.5578%" y="421" width="0.0792%" height="15" fill="rgb(214,122,8)" fg:x="108" fg:w="1"/><text x="8.8078%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.7163%" y="453" width="0.0792%" height="15" fill="rgb(244,173,18)" fg:x="110" fg:w="1"/><text x="8.9663%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.7956%" y="453" width="0.2377%" height="15" fill="rgb(232,68,19)" fg:x="111" fg:w="3"/><text x="9.0456%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.7956%" y="437" width="0.2377%" height="15" fill="rgb(236,224,1)" fg:x="111" fg:w="3"/><text x="9.0456%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.9540%" y="421" width="0.0792%" height="15" fill="rgb(240,11,8)" fg:x="113" fg:w="1"/><text x="9.2040%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.9540%" y="405" width="0.0792%" height="15" fill="rgb(244,159,20)" fg:x="113" fg:w="1"/><text x="9.2040%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="9.1125%" y="437" width="0.3962%" height="15" fill="rgb(240,223,54)" fg:x="115" fg:w="5"/><text x="9.3625%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.1918%" y="421" width="0.3170%" height="15" fill="rgb(237,146,5)" fg:x="116" fg:w="4"/><text x="9.4418%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.3502%" y="405" width="0.1585%" height="15" fill="rgb(218,221,32)" fg:x="118" fg:w="2"/><text x="9.6002%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.4295%" y="389" width="0.0792%" height="15" fill="rgb(244,96,26)" fg:x="119" fg:w="1"/><text x="9.6795%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.5087%" y="421" width="0.1585%" height="15" fill="rgb(245,184,37)" fg:x="120" fg:w="2"/><text x="9.7587%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.5880%" y="405" width="0.0792%" height="15" fill="rgb(248,91,47)" fg:x="121" fg:w="1"/><text x="9.8380%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="9.8257%" y="405" width="0.1585%" height="15" fill="rgb(243,199,8)" fg:x="124" fg:w="2"/><text x="10.0757%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="9.5087%" y="437" width="0.5547%" height="15" fill="rgb(249,12,15)" fg:x="120" fg:w="7"/><text x="9.7587%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="9.6672%" y="421" width="0.3962%" height="15" fill="rgb(245,97,12)" fg:x="122" fg:w="5"/><text x="9.9172%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.9842%" y="405" width="0.0792%" height="15" fill="rgb(244,61,1)" fg:x="126" fg:w="1"/><text x="10.2342%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="9.0333%" y="453" width="1.1886%" height="15" fill="rgb(222,194,10)" fg:x="114" fg:w="15"/><text x="9.2833%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.0634%" y="437" width="0.1585%" height="15" fill="rgb(226,178,8)" fg:x="127" fg:w="2"/><text x="10.3134%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.0634%" y="421" width="0.1585%" height="15" fill="rgb(241,32,34)" fg:x="127" fg:w="2"/><text x="10.3134%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1426%" y="405" width="0.0792%" height="15" fill="rgb(254,26,6)" fg:x="128" fg:w="1"/><text x="10.3926%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.74%)</title><rect x="8.6371%" y="469" width="1.7433%" height="15" fill="rgb(249,71,11)" fg:x="109" fg:w="22"/><text x="8.8871%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.2219%" y="453" width="0.1585%" height="15" fill="rgb(232,170,27)" fg:x="129" fg:w="2"/><text x="10.4719%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.2219%" y="437" width="0.1585%" height="15" fill="rgb(214,223,17)" fg:x="129" fg:w="2"/><text x="10.4719%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.3011%" y="421" width="0.0792%" height="15" fill="rgb(250,18,15)" fg:x="130" fg:w="1"/><text x="10.5511%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.46%)</title><rect x="8.0032%" y="485" width="2.4564%" height="15" fill="rgb(212,153,51)" fg:x="101" fg:w="31"/><text x="8.2532%" y="495.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.3803%" y="469" width="0.0792%" height="15" fill="rgb(219,194,12)" fg:x="131" fg:w="1"/><text x="10.6303%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.6973%" y="453" width="0.1585%" height="15" fill="rgb(212,58,17)" fg:x="135" fg:w="2"/><text x="10.9473%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="10.6973%" y="437" width="0.1585%" height="15" fill="rgb(254,5,10)" fg:x="135" fg:w="2"/><text x="10.9473%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="10.6973%" y="421" width="0.1585%" height="15" fill="rgb(246,91,7)" fg:x="135" fg:w="2"/><text x="10.9473%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="10.6973%" y="405" width="0.1585%" height="15" fill="rgb(218,108,49)" fg:x="135" fg:w="2"/><text x="10.9473%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (65 samples, 5.15%)</title><rect x="5.7845%" y="517" width="5.1506%" height="15" fill="rgb(238,123,20)" fg:x="73" fg:w="65"/><text x="6.0345%" y="527.50">&lt;serde..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (54 samples, 4.28%)</title><rect x="6.6561%" y="501" width="4.2789%" height="15" fill="rgb(231,69,23)" fg:x="84" fg:w="54"/><text x="6.9061%" y="511.50">serde..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="10.4596%" y="485" width="0.4754%" height="15" fill="rgb(230,209,3)" fg:x="132" fg:w="6"/><text x="10.7096%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="10.6181%" y="469" width="0.3170%" height="15" fill="rgb(231,19,0)" fg:x="134" fg:w="4"/><text x="10.8681%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.8558%" y="453" width="0.0792%" height="15" fill="rgb(226,192,25)" fg:x="137" fg:w="1"/><text x="11.1058%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0143%" y="485" width="0.0792%" height="15" fill="rgb(223,175,53)" fg:x="139" fg:w="1"/><text x="11.2643%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.0935%" y="485" width="0.0792%" height="15" fill="rgb(248,35,51)" fg:x="140" fg:w="1"/><text x="11.3435%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2520%" y="469" width="0.0792%" height="15" fill="rgb(230,37,26)" fg:x="142" fg:w="1"/><text x="11.5020%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="11.3312%" y="469" width="0.2377%" height="15" fill="rgb(206,120,22)" fg:x="143" fg:w="3"/><text x="11.5812%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8067%" y="453" width="0.0792%" height="15" fill="rgb(207,165,28)" fg:x="149" fg:w="1"/><text x="12.0567%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="11.9651%" y="437" width="0.1585%" height="15" fill="rgb(226,23,46)" fg:x="151" fg:w="2"/><text x="12.2151%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.1236%" y="421" width="0.0792%" height="15" fill="rgb(208,130,44)" fg:x="153" fg:w="1"/><text x="12.3736%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1236%" y="405" width="0.0792%" height="15" fill="rgb(231,67,8)" fg:x="153" fg:w="1"/><text x="12.3736%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="12.2029%" y="405" width="0.1585%" height="15" fill="rgb(205,183,22)" fg:x="154" fg:w="2"/><text x="12.4529%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2821%" y="389" width="0.0792%" height="15" fill="rgb(224,47,9)" fg:x="155" fg:w="1"/><text x="12.5321%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3613%" y="389" width="0.0792%" height="15" fill="rgb(250,183,49)" fg:x="156" fg:w="1"/><text x="12.6113%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.58%)</title><rect x="10.9350%" y="517" width="1.5848%" height="15" fill="rgb(220,151,39)" fg:x="138" fg:w="20"/><text x="11.1850%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.51%)</title><rect x="11.0143%" y="501" width="1.5055%" height="15" fill="rgb(220,118,20)" fg:x="139" fg:w="19"/><text x="11.2643%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.35%)</title><rect x="11.1727%" y="485" width="1.3471%" height="15" fill="rgb(231,65,51)" fg:x="141" fg:w="17"/><text x="11.4227%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="11.5689%" y="469" width="0.9509%" height="15" fill="rgb(253,125,37)" fg:x="146" fg:w="12"/><text x="11.8189%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="11.8859%" y="453" width="0.6339%" height="15" fill="rgb(232,102,6)" fg:x="150" fg:w="8"/><text x="12.1359%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="12.1236%" y="437" width="0.3962%" height="15" fill="rgb(251,105,13)" fg:x="153" fg:w="5"/><text x="12.3736%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="12.2029%" y="421" width="0.3170%" height="15" fill="rgb(222,179,29)" fg:x="154" fg:w="4"/><text x="12.4529%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.3613%" y="405" width="0.1585%" height="15" fill="rgb(229,180,53)" fg:x="156" fg:w="2"/><text x="12.6113%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.4406%" y="389" width="0.0792%" height="15" fill="rgb(238,104,13)" fg:x="157" fg:w="1"/><text x="12.6906%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4406%" y="373" width="0.0792%" height="15" fill="rgb(210,130,5)" fg:x="157" fg:w="1"/><text x="12.6906%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="12.5198%" y="501" width="0.0792%" height="15" fill="rgb(233,87,49)" fg:x="158" fg:w="1"/><text x="12.7698%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5198%" y="485" width="0.0792%" height="15" fill="rgb(243,34,9)" fg:x="158" fg:w="1"/><text x="12.7698%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.9160%" y="469" width="0.1585%" height="15" fill="rgb(235,225,10)" fg:x="163" fg:w="2"/><text x="13.1660%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="13.0745%" y="469" width="0.2377%" height="15" fill="rgb(212,0,30)" fg:x="165" fg:w="3"/><text x="13.3245%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.1537%" y="453" width="0.1585%" height="15" fill="rgb(211,177,0)" fg:x="166" fg:w="2"/><text x="13.4037%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="13.1537%" y="437" width="0.1585%" height="15" fill="rgb(225,220,11)" fg:x="166" fg:w="2"/><text x="13.4037%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (5 samples, 0.40%)</title><rect x="13.3122%" y="469" width="0.3962%" height="15" fill="rgb(215,10,13)" fg:x="168" fg:w="5"/><text x="13.5622%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.5499%" y="453" width="0.1585%" height="15" fill="rgb(240,177,14)" fg:x="171" fg:w="2"/><text x="13.7999%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.6292%" y="437" width="0.0792%" height="15" fill="rgb(243,7,39)" fg:x="172" fg:w="1"/><text x="13.8792%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7084%" y="437" width="0.0792%" height="15" fill="rgb(212,99,0)" fg:x="173" fg:w="1"/><text x="13.9584%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="13.7084%" y="469" width="0.1585%" height="15" fill="rgb(225,162,48)" fg:x="173" fg:w="2"/><text x="13.9584%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.7084%" y="453" width="0.1585%" height="15" fill="rgb(246,16,25)" fg:x="173" fg:w="2"/><text x="13.9584%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.7876%" y="437" width="0.0792%" height="15" fill="rgb(220,150,2)" fg:x="174" fg:w="1"/><text x="14.0376%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.7876%" y="421" width="0.0792%" height="15" fill="rgb(237,113,11)" fg:x="174" fg:w="1"/><text x="14.0376%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="13.8669%" y="469" width="0.2377%" height="15" fill="rgb(236,70,20)" fg:x="175" fg:w="3"/><text x="14.1169%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.9461%" y="453" width="0.1585%" height="15" fill="rgb(234,94,7)" fg:x="176" fg:w="2"/><text x="14.1961%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.9461%" y="437" width="0.1585%" height="15" fill="rgb(250,221,0)" fg:x="176" fg:w="2"/><text x="14.1961%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.0254%" y="421" width="0.0792%" height="15" fill="rgb(245,149,46)" fg:x="177" fg:w="1"/><text x="14.2754%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="14.2631%" y="453" width="0.0792%" height="15" fill="rgb(215,37,27)" fg:x="180" fg:w="1"/><text x="14.5131%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="14.5800%" y="421" width="0.3170%" height="15" fill="rgb(232,65,3)" fg:x="184" fg:w="4"/><text x="14.8300%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="14.5800%" y="405" width="0.3170%" height="15" fill="rgb(214,2,16)" fg:x="184" fg:w="4"/><text x="14.8300%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.7385%" y="389" width="0.1585%" height="15" fill="rgb(227,131,50)" fg:x="186" fg:w="2"/><text x="14.9885%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="14.8970%" y="405" width="0.0792%" height="15" fill="rgb(247,131,45)" fg:x="188" fg:w="1"/><text x="15.1470%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="14.8970%" y="389" width="0.0792%" height="15" fill="rgb(215,97,47)" fg:x="188" fg:w="1"/><text x="15.1470%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="14.8970%" y="373" width="0.0792%" height="15" fill="rgb(233,143,12)" fg:x="188" fg:w="1"/><text x="15.1470%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2932%" y="341" width="0.0792%" height="15" fill="rgb(222,57,17)" fg:x="193" fg:w="1"/><text x="15.5432%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="15.2932%" y="389" width="0.1585%" height="15" fill="rgb(214,119,38)" fg:x="193" fg:w="2"/><text x="15.5432%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.2932%" y="373" width="0.1585%" height="15" fill="rgb(217,28,47)" fg:x="193" fg:w="2"/><text x="15.5432%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.2932%" y="357" width="0.1585%" height="15" fill="rgb(231,14,52)" fg:x="193" fg:w="2"/><text x="15.5432%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="15.3724%" y="341" width="0.0792%" height="15" fill="rgb(220,158,18)" fg:x="194" fg:w="1"/><text x="15.6224%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.63%)</title><rect x="14.8970%" y="421" width="0.6339%" height="15" fill="rgb(222,143,46)" fg:x="188" fg:w="8"/><text x="15.1470%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="14.9762%" y="405" width="0.5547%" height="15" fill="rgb(227,165,5)" fg:x="189" fg:w="7"/><text x="15.2262%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.4517%" y="389" width="0.0792%" height="15" fill="rgb(216,222,49)" fg:x="195" fg:w="1"/><text x="15.7017%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.6101%" y="405" width="0.0792%" height="15" fill="rgb(238,73,39)" fg:x="197" fg:w="1"/><text x="15.8601%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="15.6894%" y="405" width="0.0792%" height="15" fill="rgb(252,115,9)" fg:x="198" fg:w="1"/><text x="15.9394%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.8479%" y="389" width="0.1585%" height="15" fill="rgb(238,202,4)" fg:x="200" fg:w="2"/><text x="16.0979%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.8479%" y="373" width="0.1585%" height="15" fill="rgb(252,153,44)" fg:x="200" fg:w="2"/><text x="16.0979%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.8479%" y="357" width="0.1585%" height="15" fill="rgb(235,128,27)" fg:x="200" fg:w="2"/><text x="16.0979%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0856%" y="357" width="0.0792%" height="15" fill="rgb(221,121,47)" fg:x="203" fg:w="1"/><text x="16.3356%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0856%" y="341" width="0.0792%" height="15" fill="rgb(247,211,47)" fg:x="203" fg:w="1"/><text x="16.3356%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.2441%" y="325" width="0.1585%" height="15" fill="rgb(252,47,49)" fg:x="205" fg:w="2"/><text x="16.4941%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.2441%" y="309" width="0.1585%" height="15" fill="rgb(219,119,53)" fg:x="205" fg:w="2"/><text x="16.4941%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3233%" y="293" width="0.0792%" height="15" fill="rgb(243,165,53)" fg:x="206" fg:w="1"/><text x="16.5733%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.4818%" y="293" width="0.1585%" height="15" fill="rgb(230,12,35)" fg:x="208" fg:w="2"/><text x="16.7318%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.4818%" y="277" width="0.1585%" height="15" fill="rgb(239,57,49)" fg:x="208" fg:w="2"/><text x="16.7318%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.4818%" y="261" width="0.1585%" height="15" fill="rgb(231,154,7)" fg:x="208" fg:w="2"/><text x="16.7318%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="16.2441%" y="341" width="0.4754%" height="15" fill="rgb(248,81,34)" fg:x="205" fg:w="6"/><text x="16.4941%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="16.4025%" y="325" width="0.3170%" height="15" fill="rgb(247,9,5)" fg:x="207" fg:w="4"/><text x="16.6525%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="16.4818%" y="309" width="0.2377%" height="15" fill="rgb(228,172,27)" fg:x="208" fg:w="3"/><text x="16.7318%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.6403%" y="293" width="0.0792%" height="15" fill="rgb(230,57,44)" fg:x="210" fg:w="1"/><text x="16.8903%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.71%)</title><rect x="16.0856%" y="373" width="0.7132%" height="15" fill="rgb(249,35,22)" fg:x="203" fg:w="9"/><text x="16.3356%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.63%)</title><rect x="16.1648%" y="357" width="0.6339%" height="15" fill="rgb(250,137,27)" fg:x="204" fg:w="8"/><text x="16.4148%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7195%" y="341" width="0.0792%" height="15" fill="rgb(251,57,31)" fg:x="211" fg:w="1"/><text x="16.9695%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.11%)</title><rect x="15.7686%" y="405" width="1.1094%" height="15" fill="rgb(238,60,0)" fg:x="199" fg:w="14"/><text x="16.0186%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.87%)</title><rect x="16.0063%" y="389" width="0.8716%" height="15" fill="rgb(242,185,39)" fg:x="202" fg:w="11"/><text x="16.2563%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7987%" y="373" width="0.0792%" height="15" fill="rgb(240,63,43)" fg:x="212" fg:w="1"/><text x="17.0487%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (32 samples, 2.54%)</title><rect x="14.4216%" y="437" width="2.5357%" height="15" fill="rgb(236,155,6)" fg:x="182" fg:w="32"/><text x="14.6716%" y="447.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.43%)</title><rect x="15.5309%" y="421" width="1.4263%" height="15" fill="rgb(215,11,29)" fg:x="196" fg:w="18"/><text x="15.7809%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8780%" y="405" width="0.0792%" height="15" fill="rgb(228,180,48)" fg:x="213" fg:w="1"/><text x="17.1280%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (34 samples, 2.69%)</title><rect x="14.3423%" y="453" width="2.6941%" height="15" fill="rgb(241,102,12)" fg:x="181" fg:w="34"/><text x="14.5923%" y="463.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="16.9572%" y="437" width="0.0792%" height="15" fill="rgb(246,213,4)" fg:x="214" fg:w="1"/><text x="17.2072%" y="447.50"></text></g><g><title>engine::session::Session::flush (153 samples, 12.12%)</title><rect x="4.9921%" y="597" width="12.1236%" height="15" fill="rgb(218,134,35)" fg:x="63" fg:w="153"/><text x="5.2421%" y="607.50">engine::session::S..</text></g><g><title>engine::session::state::State::close (149 samples, 11.81%)</title><rect x="5.3090%" y="581" width="11.8067%" height="15" fill="rgb(251,117,35)" fg:x="67" fg:w="149"/><text x="5.5590%" y="591.50">engine::session::s..</text></g><g><title>engine::session::state::State::flush_entities (149 samples, 11.81%)</title><rect x="5.3090%" y="565" width="11.8067%" height="15" fill="rgb(206,156,45)" fg:x="67" fg:w="149"/><text x="5.5590%" y="575.50">engine::session::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (146 samples, 11.57%)</title><rect x="5.5468%" y="549" width="11.5689%" height="15" fill="rgb(218,52,27)" fg:x="70" fg:w="146"/><text x="5.7968%" y="559.50">engine::session::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (146 samples, 11.57%)</title><rect x="5.5468%" y="533" width="11.5689%" height="15" fill="rgb(238,83,36)" fg:x="70" fg:w="146"/><text x="5.7968%" y="543.50">engine::session::..</text></g><g><title>kernel::model::any_entity_changes (58 samples, 4.60%)</title><rect x="12.5198%" y="517" width="4.5959%" height="15" fill="rgb(218,53,43)" fg:x="158" fg:w="58"/><text x="12.7698%" y="527.50">kerne..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (57 samples, 4.52%)</title><rect x="12.5990%" y="501" width="4.5166%" height="15" fill="rgb(239,54,39)" fg:x="159" fg:w="57"/><text x="12.8490%" y="511.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (57 samples, 4.52%)</title><rect x="12.5990%" y="485" width="4.5166%" height="15" fill="rgb(212,198,13)" fg:x="159" fg:w="57"/><text x="12.8490%" y="495.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 3.01%)</title><rect x="14.1046%" y="469" width="3.0111%" height="15" fill="rgb(234,54,46)" fg:x="178" fg:w="38"/><text x="14.3546%" y="479.50">ser..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0365%" y="453" width="0.0792%" height="15" fill="rgb(217,120,7)" fg:x="215" fg:w="1"/><text x="17.2865%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="17.1157%" y="565" width="0.0792%" height="15" fill="rgb(246,39,15)" fg:x="216" fg:w="1"/><text x="17.3657%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.1157%" y="549" width="0.0792%" height="15" fill="rgb(242,143,31)" fg:x="216" fg:w="1"/><text x="17.3657%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.1157%" y="533" width="0.0792%" height="15" fill="rgb(252,60,24)" fg:x="216" fg:w="1"/><text x="17.3657%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.1157%" y="517" width="0.0792%" height="15" fill="rgb(249,220,7)" fg:x="216" fg:w="1"/><text x="17.3657%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.1157%" y="501" width="0.0792%" height="15" fill="rgb(236,67,13)" fg:x="216" fg:w="1"/><text x="17.3657%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.1157%" y="485" width="0.0792%" height="15" fill="rgb(210,62,39)" fg:x="216" fg:w="1"/><text x="17.3657%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.1157%" y="469" width="0.0792%" height="15" fill="rgb(219,122,53)" fg:x="216" fg:w="1"/><text x="17.3657%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.1157%" y="453" width="0.0792%" height="15" fill="rgb(218,87,25)" fg:x="216" fg:w="1"/><text x="17.3657%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.1157%" y="437" width="0.0792%" height="15" fill="rgb(234,179,48)" fg:x="216" fg:w="1"/><text x="17.3657%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.1157%" y="421" width="0.0792%" height="15" fill="rgb(248,90,0)" fg:x="216" fg:w="1"/><text x="17.3657%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.1157%" y="405" width="0.0792%" height="15" fill="rgb(207,228,37)" fg:x="216" fg:w="1"/><text x="17.3657%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.1157%" y="389" width="0.0792%" height="15" fill="rgb(235,214,15)" fg:x="216" fg:w="1"/><text x="17.3657%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="17.1157%" y="373" width="0.0792%" height="15" fill="rgb(210,144,39)" fg:x="216" fg:w="1"/><text x="17.3657%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="17.1157%" y="357" width="0.0792%" height="15" fill="rgb(222,67,41)" fg:x="216" fg:w="1"/><text x="17.3657%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="17.1157%" y="341" width="0.0792%" height="15" fill="rgb(205,35,37)" fg:x="216" fg:w="1"/><text x="17.3657%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="17.1157%" y="325" width="0.0792%" height="15" fill="rgb(216,125,40)" fg:x="216" fg:w="1"/><text x="17.3657%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.1157%" y="309" width="0.0792%" height="15" fill="rgb(228,227,20)" fg:x="216" fg:w="1"/><text x="17.3657%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.1157%" y="293" width="0.0792%" height="15" fill="rgb(242,173,45)" fg:x="216" fg:w="1"/><text x="17.3657%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.1157%" y="277" width="0.0792%" height="15" fill="rgb(215,79,24)" fg:x="216" fg:w="1"/><text x="17.3657%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="17.1157%" y="261" width="0.0792%" height="15" fill="rgb(238,164,38)" fg:x="216" fg:w="1"/><text x="17.3657%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.1157%" y="245" width="0.0792%" height="15" fill="rgb(245,196,38)" fg:x="216" fg:w="1"/><text x="17.3657%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="17.1157%" y="229" width="0.0792%" height="15" fill="rgb(231,217,29)" fg:x="216" fg:w="1"/><text x="17.3657%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="17.1157%" y="213" width="0.0792%" height="15" fill="rgb(245,6,4)" fg:x="216" fg:w="1"/><text x="17.3657%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="17.1157%" y="197" width="0.0792%" height="15" fill="rgb(214,76,49)" fg:x="216" fg:w="1"/><text x="17.3657%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.1157%" y="181" width="0.0792%" height="15" fill="rgb(205,96,12)" fg:x="216" fg:w="1"/><text x="17.3657%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="17.2742%" y="549" width="0.0792%" height="15" fill="rgb(243,131,4)" fg:x="218" fg:w="1"/><text x="17.5242%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2742%" y="533" width="0.0792%" height="15" fill="rgb(214,114,4)" fg:x="218" fg:w="1"/><text x="17.5242%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.3534%" y="501" width="0.1585%" height="15" fill="rgb(234,215,15)" fg:x="219" fg:w="2"/><text x="17.6034%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.3534%" y="485" width="0.1585%" height="15" fill="rgb(250,216,45)" fg:x="219" fg:w="2"/><text x="17.6034%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.3534%" y="469" width="0.1585%" height="15" fill="rgb(236,128,4)" fg:x="219" fg:w="2"/><text x="17.6034%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4326%" y="453" width="0.0792%" height="15" fill="rgb(234,50,33)" fg:x="220" fg:w="1"/><text x="17.6826%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="17.1949%" y="565" width="0.3962%" height="15" fill="rgb(253,131,37)" fg:x="217" fg:w="5"/><text x="17.4449%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="17.3534%" y="549" width="0.2377%" height="15" fill="rgb(218,55,27)" fg:x="219" fg:w="3"/><text x="17.6034%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.3534%" y="533" width="0.2377%" height="15" fill="rgb(241,220,28)" fg:x="219" fg:w="3"/><text x="17.6034%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.3534%" y="517" width="0.2377%" height="15" fill="rgb(241,90,48)" fg:x="219" fg:w="3"/><text x="17.6034%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.5119%" y="501" width="0.0792%" height="15" fill="rgb(216,43,37)" fg:x="221" fg:w="1"/><text x="17.7619%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="17.5911%" y="549" width="0.0792%" height="15" fill="rgb(207,173,9)" fg:x="222" fg:w="1"/><text x="17.8411%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.5911%" y="533" width="0.0792%" height="15" fill="rgb(240,126,30)" fg:x="222" fg:w="1"/><text x="17.8411%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5911%" y="517" width="0.0792%" height="15" fill="rgb(228,178,53)" fg:x="222" fg:w="1"/><text x="17.8411%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5911%" y="501" width="0.0792%" height="15" fill="rgb(217,33,4)" fg:x="222" fg:w="1"/><text x="17.8411%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="17.6704%" y="533" width="0.0792%" height="15" fill="rgb(206,124,34)" fg:x="223" fg:w="1"/><text x="17.9204%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.6704%" y="517" width="0.0792%" height="15" fill="rgb(208,122,53)" fg:x="223" fg:w="1"/><text x="17.9204%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.6704%" y="501" width="0.0792%" height="15" fill="rgb(215,202,26)" fg:x="223" fg:w="1"/><text x="17.9204%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.6704%" y="485" width="0.0792%" height="15" fill="rgb(232,198,31)" fg:x="223" fg:w="1"/><text x="17.9204%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.7496%" y="501" width="0.0792%" height="15" fill="rgb(222,23,35)" fg:x="224" fg:w="1"/><text x="17.9996%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="17.5911%" y="565" width="0.3170%" height="15" fill="rgb(242,27,53)" fg:x="222" fg:w="4"/><text x="17.8411%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="17.6704%" y="549" width="0.2377%" height="15" fill="rgb(210,216,42)" fg:x="223" fg:w="3"/><text x="17.9204%" y="559.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="17.7496%" y="533" width="0.1585%" height="15" fill="rgb(234,39,38)" fg:x="224" fg:w="2"/><text x="17.9996%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.7496%" y="517" width="0.1585%" height="15" fill="rgb(235,126,54)" fg:x="224" fg:w="2"/><text x="17.9996%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="17.8288%" y="501" width="0.0792%" height="15" fill="rgb(235,150,33)" fg:x="225" fg:w="1"/><text x="18.0788%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9081%" y="549" width="0.0792%" height="15" fill="rgb(249,49,53)" fg:x="226" fg:w="1"/><text x="18.1581%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9081%" y="533" width="0.0792%" height="15" fill="rgb(238,60,50)" fg:x="226" fg:w="1"/><text x="18.1581%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9081%" y="517" width="0.0792%" height="15" fill="rgb(210,5,2)" fg:x="226" fg:w="1"/><text x="18.1581%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.9081%" y="501" width="0.0792%" height="15" fill="rgb(214,207,24)" fg:x="226" fg:w="1"/><text x="18.1581%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.9081%" y="485" width="0.0792%" height="15" fill="rgb(228,173,2)" fg:x="226" fg:w="1"/><text x="18.1581%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.9081%" y="469" width="0.0792%" height="15" fill="rgb(244,26,8)" fg:x="226" fg:w="1"/><text x="18.1581%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9081%" y="453" width="0.0792%" height="15" fill="rgb(249,153,35)" fg:x="226" fg:w="1"/><text x="18.1581%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9081%" y="437" width="0.0792%" height="15" fill="rgb(221,215,40)" fg:x="226" fg:w="1"/><text x="18.1581%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0666%" y="485" width="0.0792%" height="15" fill="rgb(238,106,35)" fg:x="228" fg:w="1"/><text x="18.3166%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0666%" y="469" width="0.0792%" height="15" fill="rgb(207,195,21)" fg:x="228" fg:w="1"/><text x="18.3166%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0666%" y="453" width="0.0792%" height="15" fill="rgb(205,43,29)" fg:x="228" fg:w="1"/><text x="18.3166%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0666%" y="437" width="0.0792%" height="15" fill="rgb(236,35,21)" fg:x="228" fg:w="1"/><text x="18.3166%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0666%" y="421" width="0.0792%" height="15" fill="rgb(244,74,8)" fg:x="228" fg:w="1"/><text x="18.3166%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0666%" y="405" width="0.0792%" height="15" fill="rgb(241,229,7)" fg:x="228" fg:w="1"/><text x="18.3166%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.0666%" y="389" width="0.0792%" height="15" fill="rgb(212,223,25)" fg:x="228" fg:w="1"/><text x="18.3166%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.0666%" y="373" width="0.0792%" height="15" fill="rgb(234,58,53)" fg:x="228" fg:w="1"/><text x="18.3166%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.0666%" y="357" width="0.0792%" height="15" fill="rgb(244,36,1)" fg:x="228" fg:w="1"/><text x="18.3166%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.0666%" y="341" width="0.0792%" height="15" fill="rgb(222,40,54)" fg:x="228" fg:w="1"/><text x="18.3166%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.0666%" y="325" width="0.0792%" height="15" fill="rgb(210,207,39)" fg:x="228" fg:w="1"/><text x="18.3166%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.0666%" y="309" width="0.0792%" height="15" fill="rgb(234,52,14)" fg:x="228" fg:w="1"/><text x="18.3166%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.0666%" y="293" width="0.0792%" height="15" fill="rgb(239,108,46)" fg:x="228" fg:w="1"/><text x="18.3166%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.0666%" y="277" width="0.0792%" height="15" fill="rgb(252,223,5)" fg:x="228" fg:w="1"/><text x="18.3166%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.0666%" y="261" width="0.0792%" height="15" fill="rgb(227,181,11)" fg:x="228" fg:w="1"/><text x="18.3166%" y="271.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="17.9873%" y="517" width="0.3170%" height="15" fill="rgb(248,126,40)" fg:x="227" fg:w="4"/><text x="18.2373%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="17.9873%" y="501" width="0.3170%" height="15" fill="rgb(243,1,18)" fg:x="227" fg:w="4"/><text x="18.2373%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.1458%" y="485" width="0.1585%" height="15" fill="rgb(214,145,23)" fg:x="229" fg:w="2"/><text x="18.3958%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2250%" y="469" width="0.0792%" height="15" fill="rgb(241,218,11)" fg:x="230" fg:w="1"/><text x="18.4750%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2250%" y="453" width="0.0792%" height="15" fill="rgb(214,219,24)" fg:x="230" fg:w="1"/><text x="18.4750%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2250%" y="437" width="0.0792%" height="15" fill="rgb(235,32,7)" fg:x="230" fg:w="1"/><text x="18.4750%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.2250%" y="421" width="0.0792%" height="15" fill="rgb(227,121,28)" fg:x="230" fg:w="1"/><text x="18.4750%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2250%" y="405" width="0.0792%" height="15" fill="rgb(216,129,49)" fg:x="230" fg:w="1"/><text x="18.4750%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2250%" y="389" width="0.0792%" height="15" fill="rgb(207,194,50)" fg:x="230" fg:w="1"/><text x="18.4750%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2250%" y="373" width="0.0792%" height="15" fill="rgb(207,4,18)" fg:x="230" fg:w="1"/><text x="18.4750%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2250%" y="357" width="0.0792%" height="15" fill="rgb(213,50,30)" fg:x="230" fg:w="1"/><text x="18.4750%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2250%" y="341" width="0.0792%" height="15" fill="rgb(208,77,22)" fg:x="230" fg:w="1"/><text x="18.4750%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.3043%" y="485" width="0.1585%" height="15" fill="rgb(244,204,34)" fg:x="231" fg:w="2"/><text x="18.5543%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.3043%" y="469" width="0.1585%" height="15" fill="rgb(230,20,17)" fg:x="231" fg:w="2"/><text x="18.5543%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.3043%" y="453" width="0.1585%" height="15" fill="rgb(237,83,15)" fg:x="231" fg:w="2"/><text x="18.5543%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.55%)</title><rect x="17.9873%" y="549" width="0.5547%" height="15" fill="rgb(221,109,25)" fg:x="227" fg:w="7"/><text x="18.2373%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.55%)</title><rect x="17.9873%" y="533" width="0.5547%" height="15" fill="rgb(205,194,52)" fg:x="227" fg:w="7"/><text x="18.2373%" y="543.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="18.3043%" y="517" width="0.2377%" height="15" fill="rgb(244,173,54)" fg:x="231" fg:w="3"/><text x="18.5543%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="18.3043%" y="501" width="0.2377%" height="15" fill="rgb(227,181,18)" fg:x="231" fg:w="3"/><text x="18.5543%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4628%" y="485" width="0.0792%" height="15" fill="rgb(238,36,30)" fg:x="233" fg:w="1"/><text x="18.7128%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.4628%" y="469" width="0.0792%" height="15" fill="rgb(254,85,0)" fg:x="233" fg:w="1"/><text x="18.7128%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4628%" y="453" width="0.0792%" height="15" fill="rgb(247,63,33)" fg:x="233" fg:w="1"/><text x="18.7128%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.4628%" y="437" width="0.0792%" height="15" fill="rgb(220,7,54)" fg:x="233" fg:w="1"/><text x="18.7128%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (27 samples, 2.14%)</title><rect x="17.1157%" y="581" width="2.1395%" height="15" fill="rgb(238,227,21)" fg:x="216" fg:w="27"/><text x="17.3657%" y="591.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (17 samples, 1.35%)</title><rect x="17.9081%" y="565" width="1.3471%" height="15" fill="rgb(237,29,31)" fg:x="226" fg:w="17"/><text x="18.1581%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (9 samples, 0.71%)</title><rect x="18.5420%" y="549" width="0.7132%" height="15" fill="rgb(211,21,50)" fg:x="234" fg:w="9"/><text x="18.7920%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.71%)</title><rect x="18.5420%" y="533" width="0.7132%" height="15" fill="rgb(239,119,2)" fg:x="234" fg:w="9"/><text x="18.7920%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (9 samples, 0.71%)</title><rect x="18.5420%" y="517" width="0.7132%" height="15" fill="rgb(250,2,39)" fg:x="234" fg:w="9"/><text x="18.7920%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.71%)</title><rect x="18.5420%" y="501" width="0.7132%" height="15" fill="rgb(244,46,53)" fg:x="234" fg:w="9"/><text x="18.7920%" y="511.50"></text></g><g><title>__libc_malloc (9 samples, 0.71%)</title><rect x="18.5420%" y="485" width="0.7132%" height="15" fill="rgb(209,21,19)" fg:x="234" fg:w="9"/><text x="18.7920%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.2552%" y="581" width="0.0792%" height="15" fill="rgb(236,145,4)" fg:x="243" fg:w="1"/><text x="19.5052%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="19.4136%" y="565" width="0.0792%" height="15" fill="rgb(220,133,36)" fg:x="245" fg:w="1"/><text x="19.6636%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="19.4136%" y="549" width="0.0792%" height="15" fill="rgb(244,18,3)" fg:x="245" fg:w="1"/><text x="19.6636%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.4136%" y="533" width="0.0792%" height="15" fill="rgb(232,171,48)" fg:x="245" fg:w="1"/><text x="19.6636%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="19.5721%" y="517" width="0.0792%" height="15" fill="rgb(223,223,53)" fg:x="247" fg:w="1"/><text x="19.8221%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5721%" y="501" width="0.0792%" height="15" fill="rgb(246,92,13)" fg:x="247" fg:w="1"/><text x="19.8221%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6513%" y="485" width="0.0792%" height="15" fill="rgb(229,171,10)" fg:x="248" fg:w="1"/><text x="19.9013%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6513%" y="469" width="0.0792%" height="15" fill="rgb(213,131,26)" fg:x="248" fg:w="1"/><text x="19.9013%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6513%" y="453" width="0.0792%" height="15" fill="rgb(242,87,54)" fg:x="248" fg:w="1"/><text x="19.9013%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6513%" y="437" width="0.0792%" height="15" fill="rgb(237,21,35)" fg:x="248" fg:w="1"/><text x="19.9013%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.6513%" y="421" width="0.0792%" height="15" fill="rgb(253,13,47)" fg:x="248" fg:w="1"/><text x="19.9013%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.7306%" y="421" width="0.0792%" height="15" fill="rgb(215,122,49)" fg:x="249" fg:w="1"/><text x="19.9806%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7306%" y="405" width="0.0792%" height="15" fill="rgb(209,179,30)" fg:x="249" fg:w="1"/><text x="19.9806%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="19.5721%" y="533" width="0.3170%" height="15" fill="rgb(235,100,24)" fg:x="247" fg:w="4"/><text x="19.8221%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="19.6513%" y="517" width="0.2377%" height="15" fill="rgb(209,67,24)" fg:x="248" fg:w="3"/><text x="19.9013%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="19.6513%" y="501" width="0.2377%" height="15" fill="rgb(206,74,32)" fg:x="248" fg:w="3"/><text x="19.9013%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.7306%" y="485" width="0.1585%" height="15" fill="rgb(212,45,25)" fg:x="249" fg:w="2"/><text x="19.9806%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.7306%" y="469" width="0.1585%" height="15" fill="rgb(239,26,3)" fg:x="249" fg:w="2"/><text x="19.9806%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.7306%" y="453" width="0.1585%" height="15" fill="rgb(218,36,15)" fg:x="249" fg:w="2"/><text x="19.9806%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.7306%" y="437" width="0.1585%" height="15" fill="rgb(206,108,24)" fg:x="249" fg:w="2"/><text x="19.9806%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.8098%" y="421" width="0.0792%" height="15" fill="rgb(234,204,42)" fg:x="250" fg:w="1"/><text x="20.0598%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8098%" y="405" width="0.0792%" height="15" fill="rgb(229,2,11)" fg:x="250" fg:w="1"/><text x="20.0598%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.8098%" y="389" width="0.0792%" height="15" fill="rgb(221,20,48)" fg:x="250" fg:w="1"/><text x="20.0598%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8098%" y="373" width="0.0792%" height="15" fill="rgb(244,164,10)" fg:x="250" fg:w="1"/><text x="20.0598%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.9683%" y="485" width="0.0792%" height="15" fill="rgb(243,229,2)" fg:x="252" fg:w="1"/><text x="20.2183%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.9683%" y="469" width="0.0792%" height="15" fill="rgb(232,131,37)" fg:x="252" fg:w="1"/><text x="20.2183%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.9683%" y="453" width="0.0792%" height="15" fill="rgb(217,156,11)" fg:x="252" fg:w="1"/><text x="20.2183%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.9683%" y="437" width="0.0792%" height="15" fill="rgb(239,99,48)" fg:x="252" fg:w="1"/><text x="20.2183%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0475%" y="485" width="0.0792%" height="15" fill="rgb(231,209,9)" fg:x="253" fg:w="1"/><text x="20.2975%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.0475%" y="469" width="0.0792%" height="15" fill="rgb(254,97,27)" fg:x="253" fg:w="1"/><text x="20.2975%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0475%" y="453" width="0.0792%" height="15" fill="rgb(223,151,38)" fg:x="253" fg:w="1"/><text x="20.2975%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0475%" y="437" width="0.0792%" height="15" fill="rgb(219,206,35)" fg:x="253" fg:w="1"/><text x="20.2975%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0475%" y="421" width="0.0792%" height="15" fill="rgb(216,130,31)" fg:x="253" fg:w="1"/><text x="20.2975%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.0475%" y="405" width="0.0792%" height="15" fill="rgb(251,97,34)" fg:x="253" fg:w="1"/><text x="20.2975%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.71%)</title><rect x="19.4929%" y="565" width="0.7132%" height="15" fill="rgb(246,159,47)" fg:x="246" fg:w="9"/><text x="19.7429%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.63%)</title><rect x="19.5721%" y="549" width="0.6339%" height="15" fill="rgb(232,87,10)" fg:x="247" fg:w="8"/><text x="19.8221%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="19.8891%" y="533" width="0.3170%" height="15" fill="rgb(249,1,37)" fg:x="251" fg:w="4"/><text x="20.1391%" y="543.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="19.8891%" y="517" width="0.3170%" height="15" fill="rgb(239,135,14)" fg:x="251" fg:w="4"/><text x="20.1391%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="19.8891%" y="501" width="0.3170%" height="15" fill="rgb(253,116,46)" fg:x="251" fg:w="4"/><text x="20.1391%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.1268%" y="485" width="0.0792%" height="15" fill="rgb(222,217,37)" fg:x="254" fg:w="1"/><text x="20.3768%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.1268%" y="469" width="0.0792%" height="15" fill="rgb(252,96,8)" fg:x="254" fg:w="1"/><text x="20.3768%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.1268%" y="453" width="0.0792%" height="15" fill="rgb(254,103,41)" fg:x="254" fg:w="1"/><text x="20.3768%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.1268%" y="437" width="0.0792%" height="15" fill="rgb(218,213,19)" fg:x="254" fg:w="1"/><text x="20.3768%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.1268%" y="421" width="0.0792%" height="15" fill="rgb(253,95,21)" fg:x="254" fg:w="1"/><text x="20.3768%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.1268%" y="405" width="0.0792%" height="15" fill="rgb(229,26,28)" fg:x="254" fg:w="1"/><text x="20.3768%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.1268%" y="389" width="0.0792%" height="15" fill="rgb(230,129,16)" fg:x="254" fg:w="1"/><text x="20.3768%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.1268%" y="373" width="0.0792%" height="15" fill="rgb(236,126,17)" fg:x="254" fg:w="1"/><text x="20.3768%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="20.2060%" y="565" width="0.1585%" height="15" fill="rgb(209,33,33)" fg:x="255" fg:w="2"/><text x="20.4560%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.2853%" y="549" width="0.0792%" height="15" fill="rgb(227,85,29)" fg:x="256" fg:w="1"/><text x="20.5353%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.2853%" y="533" width="0.0792%" height="15" fill="rgb(241,53,46)" fg:x="256" fg:w="1"/><text x="20.5353%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.3645%" y="549" width="0.0792%" height="15" fill="rgb(228,167,53)" fg:x="257" fg:w="1"/><text x="20.6145%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.3645%" y="533" width="0.0792%" height="15" fill="rgb(238,195,45)" fg:x="257" fg:w="1"/><text x="20.6145%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="20.4437%" y="549" width="0.1585%" height="15" fill="rgb(252,124,45)" fg:x="258" fg:w="2"/><text x="20.6937%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.4437%" y="533" width="0.1585%" height="15" fill="rgb(251,38,35)" fg:x="258" fg:w="2"/><text x="20.6937%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="20.4437%" y="517" width="0.1585%" height="15" fill="rgb(227,33,2)" fg:x="258" fg:w="2"/><text x="20.6937%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="20.5230%" y="501" width="0.0792%" height="15" fill="rgb(223,157,46)" fg:x="259" fg:w="1"/><text x="20.7730%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.5230%" y="485" width="0.0792%" height="15" fill="rgb(222,78,41)" fg:x="259" fg:w="1"/><text x="20.7730%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="20.3645%" y="565" width="0.3962%" height="15" fill="rgb(248,176,11)" fg:x="257" fg:w="5"/><text x="20.6145%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="20.6022%" y="549" width="0.1585%" height="15" fill="rgb(241,221,18)" fg:x="260" fg:w="2"/><text x="20.8522%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.6022%" y="533" width="0.1585%" height="15" fill="rgb(218,85,22)" fg:x="260" fg:w="2"/><text x="20.8522%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="20.6022%" y="517" width="0.1585%" height="15" fill="rgb(222,223,7)" fg:x="260" fg:w="2"/><text x="20.8522%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.6022%" y="501" width="0.1585%" height="15" fill="rgb(254,59,39)" fg:x="260" fg:w="2"/><text x="20.8522%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.6022%" y="485" width="0.1585%" height="15" fill="rgb(247,100,27)" fg:x="260" fg:w="2"/><text x="20.8522%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6815%" y="469" width="0.0792%" height="15" fill="rgb(237,207,10)" fg:x="261" fg:w="1"/><text x="20.9315%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="20.6815%" y="453" width="0.0792%" height="15" fill="rgb(220,121,28)" fg:x="261" fg:w="1"/><text x="20.9315%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="20.7607%" y="501" width="0.0792%" height="15" fill="rgb(213,223,20)" fg:x="262" fg:w="1"/><text x="21.0107%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.7607%" y="485" width="0.0792%" height="15" fill="rgb(205,121,27)" fg:x="262" fg:w="1"/><text x="21.0107%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8399%" y="469" width="0.0792%" height="15" fill="rgb(253,24,53)" fg:x="263" fg:w="1"/><text x="21.0899%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="20.7607%" y="517" width="0.2377%" height="15" fill="rgb(224,224,47)" fg:x="262" fg:w="3"/><text x="21.0107%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="20.8399%" y="501" width="0.1585%" height="15" fill="rgb(250,125,36)" fg:x="263" fg:w="2"/><text x="21.0899%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.8399%" y="485" width="0.1585%" height="15" fill="rgb(240,144,38)" fg:x="263" fg:w="2"/><text x="21.0899%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9192%" y="469" width="0.0792%" height="15" fill="rgb(250,15,50)" fg:x="264" fg:w="1"/><text x="21.1692%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.9192%" y="453" width="0.0792%" height="15" fill="rgb(210,24,26)" fg:x="264" fg:w="1"/><text x="21.1692%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9192%" y="437" width="0.0792%" height="15" fill="rgb(234,53,53)" fg:x="264" fg:w="1"/><text x="21.1692%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9192%" y="421" width="0.0792%" height="15" fill="rgb(208,108,28)" fg:x="264" fg:w="1"/><text x="21.1692%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9192%" y="405" width="0.0792%" height="15" fill="rgb(227,143,7)" fg:x="264" fg:w="1"/><text x="21.1692%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.9192%" y="389" width="0.0792%" height="15" fill="rgb(238,189,38)" fg:x="264" fg:w="1"/><text x="21.1692%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9192%" y="373" width="0.0792%" height="15" fill="rgb(222,69,15)" fg:x="264" fg:w="1"/><text x="21.1692%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9984%" y="469" width="0.0792%" height="15" fill="rgb(213,169,7)" fg:x="265" fg:w="1"/><text x="21.2484%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9984%" y="453" width="0.0792%" height="15" fill="rgb(251,219,4)" fg:x="265" fg:w="1"/><text x="21.2484%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9984%" y="437" width="0.0792%" height="15" fill="rgb(241,55,40)" fg:x="265" fg:w="1"/><text x="21.2484%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9984%" y="421" width="0.0792%" height="15" fill="rgb(243,57,30)" fg:x="265" fg:w="1"/><text x="21.2484%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9984%" y="405" width="0.0792%" height="15" fill="rgb(234,50,30)" fg:x="265" fg:w="1"/><text x="21.2484%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9984%" y="389" width="0.0792%" height="15" fill="rgb(239,23,42)" fg:x="265" fg:w="1"/><text x="21.2484%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0777%" y="405" width="0.0792%" height="15" fill="rgb(217,38,19)" fg:x="266" fg:w="1"/><text x="21.3277%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.0777%" y="469" width="0.1585%" height="15" fill="rgb(215,179,16)" fg:x="266" fg:w="2"/><text x="21.3277%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="21.0777%" y="453" width="0.1585%" height="15" fill="rgb(254,21,37)" fg:x="266" fg:w="2"/><text x="21.3277%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.0777%" y="437" width="0.1585%" height="15" fill="rgb(219,207,48)" fg:x="266" fg:w="2"/><text x="21.3277%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.0777%" y="421" width="0.1585%" height="15" fill="rgb(227,225,41)" fg:x="266" fg:w="2"/><text x="21.3277%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1569%" y="405" width="0.0792%" height="15" fill="rgb(223,130,1)" fg:x="267" fg:w="1"/><text x="21.4069%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.1569%" y="389" width="0.0792%" height="15" fill="rgb(249,54,42)" fg:x="267" fg:w="1"/><text x="21.4069%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.2361%" y="373" width="0.0792%" height="15" fill="rgb(248,69,25)" fg:x="268" fg:w="1"/><text x="21.4861%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.2361%" y="357" width="0.0792%" height="15" fill="rgb(234,21,32)" fg:x="268" fg:w="1"/><text x="21.4861%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.3154%" y="373" width="0.0792%" height="15" fill="rgb(252,136,6)" fg:x="269" fg:w="1"/><text x="21.5654%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.3154%" y="357" width="0.0792%" height="15" fill="rgb(245,87,12)" fg:x="269" fg:w="1"/><text x="21.5654%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (55 samples, 4.36%)</title><rect x="17.1157%" y="597" width="4.3582%" height="15" fill="rgb(208,12,15)" fg:x="216" fg:w="55"/><text x="17.3657%" y="607.50">plugi..</text></g><g><title>plugins_core::tools::set_container (27 samples, 2.14%)</title><rect x="19.3344%" y="581" width="2.1395%" height="15" fill="rgb(250,98,2)" fg:x="244" fg:w="27"/><text x="19.5844%" y="591.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.71%)</title><rect x="20.7607%" y="565" width="0.7132%" height="15" fill="rgb(205,213,15)" fg:x="262" fg:w="9"/><text x="21.0107%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.71%)</title><rect x="20.7607%" y="549" width="0.7132%" height="15" fill="rgb(248,192,44)" fg:x="262" fg:w="9"/><text x="21.0107%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.71%)</title><rect x="20.7607%" y="533" width="0.7132%" height="15" fill="rgb(221,89,17)" fg:x="262" fg:w="9"/><text x="21.0107%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="20.9984%" y="517" width="0.4754%" height="15" fill="rgb(209,55,3)" fg:x="265" fg:w="6"/><text x="21.2484%" y="527.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="20.9984%" y="501" width="0.4754%" height="15" fill="rgb(247,23,45)" fg:x="265" fg:w="6"/><text x="21.2484%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="20.9984%" y="485" width="0.4754%" height="15" fill="rgb(235,152,23)" fg:x="265" fg:w="6"/><text x="21.2484%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="21.2361%" y="469" width="0.2377%" height="15" fill="rgb(244,63,13)" fg:x="268" fg:w="3"/><text x="21.4861%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="21.2361%" y="453" width="0.2377%" height="15" fill="rgb(227,30,37)" fg:x="268" fg:w="3"/><text x="21.4861%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="21.2361%" y="437" width="0.2377%" height="15" fill="rgb(224,49,42)" fg:x="268" fg:w="3"/><text x="21.4861%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="21.2361%" y="421" width="0.2377%" height="15" fill="rgb(218,129,5)" fg:x="268" fg:w="3"/><text x="21.4861%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="21.2361%" y="405" width="0.2377%" height="15" fill="rgb(240,199,54)" fg:x="268" fg:w="3"/><text x="21.4861%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="21.2361%" y="389" width="0.2377%" height="15" fill="rgb(234,31,13)" fg:x="268" fg:w="3"/><text x="21.4861%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.3946%" y="373" width="0.0792%" height="15" fill="rgb(219,73,54)" fg:x="270" fg:w="1"/><text x="21.6446%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.3946%" y="357" width="0.0792%" height="15" fill="rgb(251,162,10)" fg:x="270" fg:w="1"/><text x="21.6446%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="21.6323%" y="549" width="0.0792%" height="15" fill="rgb(240,138,47)" fg:x="273" fg:w="1"/><text x="21.8823%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="21.6323%" y="533" width="0.0792%" height="15" fill="rgb(216,138,26)" fg:x="273" fg:w="1"/><text x="21.8823%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="21.4739%" y="565" width="0.3170%" height="15" fill="rgb(243,17,35)" fg:x="271" fg:w="4"/><text x="21.7239%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="21.7116%" y="549" width="0.0792%" height="15" fill="rgb(241,60,18)" fg:x="274" fg:w="1"/><text x="21.9616%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.7116%" y="533" width="0.0792%" height="15" fill="rgb(234,2,44)" fg:x="274" fg:w="1"/><text x="21.9616%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.7116%" y="517" width="0.0792%" height="15" fill="rgb(225,225,33)" fg:x="274" fg:w="1"/><text x="21.9616%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.7116%" y="501" width="0.0792%" height="15" fill="rgb(234,50,31)" fg:x="274" fg:w="1"/><text x="21.9616%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.7116%" y="485" width="0.0792%" height="15" fill="rgb(249,6,25)" fg:x="274" fg:w="1"/><text x="21.9616%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="21.7116%" y="469" width="0.0792%" height="15" fill="rgb(241,5,17)" fg:x="274" fg:w="1"/><text x="21.9616%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="21.7116%" y="453" width="0.0792%" height="15" fill="rgb(207,116,10)" fg:x="274" fg:w="1"/><text x="21.9616%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.7116%" y="437" width="0.0792%" height="15" fill="rgb(222,128,18)" fg:x="274" fg:w="1"/><text x="21.9616%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="21.7908%" y="565" width="0.0792%" height="15" fill="rgb(229,109,25)" fg:x="275" fg:w="1"/><text x="22.0408%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8700%" y="517" width="0.0792%" height="15" fill="rgb(222,102,25)" fg:x="276" fg:w="1"/><text x="22.1200%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8700%" y="501" width="0.0792%" height="15" fill="rgb(239,211,5)" fg:x="276" fg:w="1"/><text x="22.1200%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8700%" y="485" width="0.0792%" height="15" fill="rgb(223,136,26)" fg:x="276" fg:w="1"/><text x="22.1200%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8700%" y="469" width="0.0792%" height="15" fill="rgb(227,30,15)" fg:x="276" fg:w="1"/><text x="22.1200%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.8700%" y="453" width="0.0792%" height="15" fill="rgb(247,76,4)" fg:x="276" fg:w="1"/><text x="22.1200%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.9493%" y="517" width="0.0792%" height="15" fill="rgb(245,38,48)" fg:x="277" fg:w="1"/><text x="22.1993%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.9493%" y="501" width="0.0792%" height="15" fill="rgb(210,220,14)" fg:x="277" fg:w="1"/><text x="22.1993%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.9493%" y="485" width="0.0792%" height="15" fill="rgb(224,60,51)" fg:x="277" fg:w="1"/><text x="22.1993%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.9493%" y="469" width="0.0792%" height="15" fill="rgb(212,133,49)" fg:x="277" fg:w="1"/><text x="22.1993%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.9493%" y="453" width="0.0792%" height="15" fill="rgb(231,39,22)" fg:x="277" fg:w="1"/><text x="22.1993%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.1078%" y="421" width="0.0792%" height="15" fill="rgb(236,173,22)" fg:x="279" fg:w="1"/><text x="22.3578%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1870%" y="357" width="0.0792%" height="15" fill="rgb(210,70,0)" fg:x="280" fg:w="1"/><text x="22.4370%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="21.8700%" y="565" width="0.4754%" height="15" fill="rgb(215,170,11)" fg:x="276" fg:w="6"/><text x="22.1200%" y="575.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="21.8700%" y="549" width="0.4754%" height="15" fill="rgb(220,154,28)" fg:x="276" fg:w="6"/><text x="22.1200%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="21.8700%" y="533" width="0.4754%" height="15" fill="rgb(240,160,41)" fg:x="276" fg:w="6"/><text x="22.1200%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="22.0285%" y="517" width="0.3170%" height="15" fill="rgb(243,215,41)" fg:x="278" fg:w="4"/><text x="22.2785%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="22.0285%" y="501" width="0.3170%" height="15" fill="rgb(214,208,31)" fg:x="278" fg:w="4"/><text x="22.2785%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="22.1078%" y="485" width="0.2377%" height="15" fill="rgb(247,57,22)" fg:x="279" fg:w="3"/><text x="22.3578%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="22.1078%" y="469" width="0.2377%" height="15" fill="rgb(228,73,52)" fg:x="279" fg:w="3"/><text x="22.3578%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="22.1078%" y="453" width="0.2377%" height="15" fill="rgb(252,60,9)" fg:x="279" fg:w="3"/><text x="22.3578%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="22.1078%" y="437" width="0.2377%" height="15" fill="rgb(233,9,51)" fg:x="279" fg:w="3"/><text x="22.3578%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.1870%" y="421" width="0.1585%" height="15" fill="rgb(223,67,14)" fg:x="280" fg:w="2"/><text x="22.4370%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.1870%" y="405" width="0.1585%" height="15" fill="rgb(222,86,2)" fg:x="280" fg:w="2"/><text x="22.4370%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.1870%" y="389" width="0.1585%" height="15" fill="rgb(243,58,54)" fg:x="280" fg:w="2"/><text x="22.4370%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.1870%" y="373" width="0.1585%" height="15" fill="rgb(210,200,39)" fg:x="280" fg:w="2"/><text x="22.4370%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="22.2662%" y="357" width="0.0792%" height="15" fill="rgb(238,135,9)" fg:x="281" fg:w="1"/><text x="22.5162%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="22.2662%" y="341" width="0.0792%" height="15" fill="rgb(232,179,7)" fg:x="281" fg:w="1"/><text x="22.5162%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="22.3455%" y="565" width="0.0792%" height="15" fill="rgb(245,65,41)" fg:x="282" fg:w="1"/><text x="22.5955%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="22.3455%" y="549" width="0.0792%" height="15" fill="rgb(227,43,8)" fg:x="282" fg:w="1"/><text x="22.5955%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.3455%" y="533" width="0.0792%" height="15" fill="rgb(235,91,14)" fg:x="282" fg:w="1"/><text x="22.5955%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="22.4247%" y="549" width="0.1585%" height="15" fill="rgb(235,219,31)" fg:x="283" fg:w="2"/><text x="22.6747%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.4247%" y="533" width="0.1585%" height="15" fill="rgb(227,121,25)" fg:x="283" fg:w="2"/><text x="22.6747%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.4247%" y="517" width="0.1585%" height="15" fill="rgb(254,129,24)" fg:x="283" fg:w="2"/><text x="22.6747%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.4247%" y="501" width="0.1585%" height="15" fill="rgb(226,144,49)" fg:x="283" fg:w="2"/><text x="22.6747%" y="511.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="22.5040%" y="485" width="0.0792%" height="15" fill="rgb(214,187,32)" fg:x="284" fg:w="1"/><text x="22.7540%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5832%" y="485" width="0.0792%" height="15" fill="rgb(243,129,46)" fg:x="285" fg:w="1"/><text x="22.8332%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="22.4247%" y="565" width="0.3170%" height="15" fill="rgb(221,185,35)" fg:x="283" fg:w="4"/><text x="22.6747%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="22.5832%" y="549" width="0.1585%" height="15" fill="rgb(205,0,32)" fg:x="285" fg:w="2"/><text x="22.8332%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="22.5832%" y="533" width="0.1585%" height="15" fill="rgb(229,179,12)" fg:x="285" fg:w="2"/><text x="22.8332%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="22.5832%" y="517" width="0.1585%" height="15" fill="rgb(252,107,19)" fg:x="285" fg:w="2"/><text x="22.8332%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.5832%" y="501" width="0.1585%" height="15" fill="rgb(220,95,27)" fg:x="285" fg:w="2"/><text x="22.8332%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.6624%" y="485" width="0.0792%" height="15" fill="rgb(240,113,40)" fg:x="286" fg:w="1"/><text x="22.9124%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="22.6624%" y="469" width="0.0792%" height="15" fill="rgb(208,4,43)" fg:x="286" fg:w="1"/><text x="22.9124%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.7417%" y="517" width="0.0792%" height="15" fill="rgb(247,189,30)" fg:x="287" fg:w="1"/><text x="22.9917%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.7417%" y="501" width="0.0792%" height="15" fill="rgb(231,157,17)" fg:x="287" fg:w="1"/><text x="22.9917%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7417%" y="485" width="0.0792%" height="15" fill="rgb(224,139,6)" fg:x="287" fg:w="1"/><text x="22.9917%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7417%" y="469" width="0.0792%" height="15" fill="rgb(223,83,16)" fg:x="287" fg:w="1"/><text x="22.9917%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7417%" y="453" width="0.0792%" height="15" fill="rgb(232,211,20)" fg:x="287" fg:w="1"/><text x="22.9917%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7417%" y="437" width="0.0792%" height="15" fill="rgb(225,203,35)" fg:x="287" fg:w="1"/><text x="22.9917%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.7417%" y="421" width="0.0792%" height="15" fill="rgb(215,211,44)" fg:x="287" fg:w="1"/><text x="22.9917%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7417%" y="405" width="0.0792%" height="15" fill="rgb(248,213,26)" fg:x="287" fg:w="1"/><text x="22.9917%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7417%" y="389" width="0.0792%" height="15" fill="rgb(214,23,52)" fg:x="287" fg:w="1"/><text x="22.9917%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7417%" y="373" width="0.0792%" height="15" fill="rgb(225,173,50)" fg:x="287" fg:w="1"/><text x="22.9917%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7417%" y="357" width="0.0792%" height="15" fill="rgb(206,150,22)" fg:x="287" fg:w="1"/><text x="22.9917%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7417%" y="341" width="0.0792%" height="15" fill="rgb(239,64,23)" fg:x="287" fg:w="1"/><text x="22.9917%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="22.7417%" y="325" width="0.0792%" height="15" fill="rgb(242,50,38)" fg:x="287" fg:w="1"/><text x="22.9917%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.8209%" y="485" width="0.1585%" height="15" fill="rgb(217,91,15)" fg:x="288" fg:w="2"/><text x="23.0709%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="22.8209%" y="469" width="0.1585%" height="15" fill="rgb(230,172,6)" fg:x="288" fg:w="2"/><text x="23.0709%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.8209%" y="453" width="0.1585%" height="15" fill="rgb(221,98,26)" fg:x="288" fg:w="2"/><text x="23.0709%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.8209%" y="437" width="0.1585%" height="15" fill="rgb(227,210,45)" fg:x="288" fg:w="2"/><text x="23.0709%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.8209%" y="421" width="0.1585%" height="15" fill="rgb(206,8,30)" fg:x="288" fg:w="2"/><text x="23.0709%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.9002%" y="405" width="0.0792%" height="15" fill="rgb(241,219,17)" fg:x="289" fg:w="1"/><text x="23.1502%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.9002%" y="389" width="0.0792%" height="15" fill="rgb(247,121,29)" fg:x="289" fg:w="1"/><text x="23.1502%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9002%" y="373" width="0.0792%" height="15" fill="rgb(219,169,49)" fg:x="289" fg:w="1"/><text x="23.1502%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (20 samples, 1.58%)</title><rect x="21.4739%" y="597" width="1.5848%" height="15" fill="rgb(253,49,49)" fg:x="271" fg:w="20"/><text x="21.7239%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.58%)</title><rect x="21.4739%" y="581" width="1.5848%" height="15" fill="rgb(217,178,3)" fg:x="271" fg:w="20"/><text x="21.7239%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="22.7417%" y="565" width="0.3170%" height="15" fill="rgb(234,73,37)" fg:x="287" fg:w="4"/><text x="22.9917%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="22.7417%" y="549" width="0.3170%" height="15" fill="rgb(250,98,22)" fg:x="287" fg:w="4"/><text x="22.9917%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="22.7417%" y="533" width="0.3170%" height="15" fill="rgb(220,108,37)" fg:x="287" fg:w="4"/><text x="22.9917%" y="543.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="22.8209%" y="517" width="0.2377%" height="15" fill="rgb(225,168,10)" fg:x="288" fg:w="3"/><text x="23.0709%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.8209%" y="501" width="0.2377%" height="15" fill="rgb(247,215,21)" fg:x="288" fg:w="3"/><text x="23.0709%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9794%" y="485" width="0.0792%" height="15" fill="rgb(253,189,31)" fg:x="290" fg:w="1"/><text x="23.2294%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9794%" y="469" width="0.0792%" height="15" fill="rgb(241,54,22)" fg:x="290" fg:w="1"/><text x="23.2294%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9794%" y="453" width="0.0792%" height="15" fill="rgb(211,87,4)" fg:x="290" fg:w="1"/><text x="23.2294%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9794%" y="437" width="0.0792%" height="15" fill="rgb(245,112,24)" fg:x="290" fg:w="1"/><text x="23.2294%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.9794%" y="421" width="0.0792%" height="15" fill="rgb(235,190,41)" fg:x="290" fg:w="1"/><text x="23.2294%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9794%" y="405" width="0.0792%" height="15" fill="rgb(214,89,8)" fg:x="290" fg:w="1"/><text x="23.2294%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9794%" y="389" width="0.0792%" height="15" fill="rgb(249,155,35)" fg:x="290" fg:w="1"/><text x="23.2294%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9794%" y="373" width="0.0792%" height="15" fill="rgb(249,88,26)" fg:x="290" fg:w="1"/><text x="23.2294%" y="383.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="23.0586%" y="565" width="0.0792%" height="15" fill="rgb(232,56,8)" fg:x="291" fg:w="1"/><text x="23.3086%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0586%" y="549" width="0.0792%" height="15" fill="rgb(240,95,3)" fg:x="291" fg:w="1"/><text x="23.3086%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.0586%" y="533" width="0.0792%" height="15" fill="rgb(222,44,28)" fg:x="291" fg:w="1"/><text x="23.3086%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.1379%" y="533" width="0.0792%" height="15" fill="rgb(234,16,30)" fg:x="292" fg:w="1"/><text x="23.3879%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.1379%" y="517" width="0.0792%" height="15" fill="rgb(223,26,17)" fg:x="292" fg:w="1"/><text x="23.3879%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="23.1379%" y="501" width="0.0792%" height="15" fill="rgb(239,187,47)" fg:x="292" fg:w="1"/><text x="23.3879%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="23.0586%" y="597" width="0.3170%" height="15" fill="rgb(247,102,50)" fg:x="291" fg:w="4"/><text x="23.3086%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="23.0586%" y="581" width="0.3170%" height="15" fill="rgb(231,216,22)" fg:x="291" fg:w="4"/><text x="23.3086%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="23.1379%" y="565" width="0.2377%" height="15" fill="rgb(216,201,26)" fg:x="292" fg:w="3"/><text x="23.3879%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="23.1379%" y="549" width="0.2377%" height="15" fill="rgb(214,186,23)" fg:x="292" fg:w="3"/><text x="23.3879%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="23.2171%" y="533" width="0.1585%" height="15" fill="rgb(235,184,4)" fg:x="293" fg:w="2"/><text x="23.4671%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.2171%" y="517" width="0.1585%" height="15" fill="rgb(244,46,17)" fg:x="293" fg:w="2"/><text x="23.4671%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2964%" y="501" width="0.0792%" height="15" fill="rgb(248,74,46)" fg:x="294" fg:w="1"/><text x="23.5464%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="23.5341%" y="565" width="0.0792%" height="15" fill="rgb(243,79,5)" fg:x="297" fg:w="1"/><text x="23.7841%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.5341%" y="549" width="0.0792%" height="15" fill="rgb(213,148,1)" fg:x="297" fg:w="1"/><text x="23.7841%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.5341%" y="533" width="0.0792%" height="15" fill="rgb(221,30,0)" fg:x="297" fg:w="1"/><text x="23.7841%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.5341%" y="517" width="0.0792%" height="15" fill="rgb(207,85,29)" fg:x="297" fg:w="1"/><text x="23.7841%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.5341%" y="501" width="0.0792%" height="15" fill="rgb(239,31,46)" fg:x="297" fg:w="1"/><text x="23.7841%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.5341%" y="485" width="0.0792%" height="15" fill="rgb(219,6,1)" fg:x="297" fg:w="1"/><text x="23.7841%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.5341%" y="469" width="0.0792%" height="15" fill="rgb(229,90,29)" fg:x="297" fg:w="1"/><text x="23.7841%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.5341%" y="453" width="0.0792%" height="15" fill="rgb(242,201,42)" fg:x="297" fg:w="1"/><text x="23.7841%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6133%" y="517" width="0.0792%" height="15" fill="rgb(243,80,54)" fg:x="298" fg:w="1"/><text x="23.8633%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6133%" y="501" width="0.0792%" height="15" fill="rgb(223,166,15)" fg:x="298" fg:w="1"/><text x="23.8633%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6133%" y="485" width="0.0792%" height="15" fill="rgb(238,78,27)" fg:x="298" fg:w="1"/><text x="23.8633%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6133%" y="469" width="0.0792%" height="15" fill="rgb(235,28,43)" fg:x="298" fg:w="1"/><text x="23.8633%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6133%" y="453" width="0.0792%" height="15" fill="rgb(240,210,28)" fg:x="298" fg:w="1"/><text x="23.8633%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6133%" y="437" width="0.0792%" height="15" fill="rgb(253,6,46)" fg:x="298" fg:w="1"/><text x="23.8633%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.6133%" y="421" width="0.0792%" height="15" fill="rgb(250,159,47)" fg:x="298" fg:w="1"/><text x="23.8633%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.6133%" y="405" width="0.0792%" height="15" fill="rgb(216,139,2)" fg:x="298" fg:w="1"/><text x="23.8633%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.6133%" y="389" width="0.0792%" height="15" fill="rgb(221,124,44)" fg:x="298" fg:w="1"/><text x="23.8633%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6133%" y="373" width="0.0792%" height="15" fill="rgb(205,37,22)" fg:x="298" fg:w="1"/><text x="23.8633%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6133%" y="357" width="0.0792%" height="15" fill="rgb(250,55,8)" fg:x="298" fg:w="1"/><text x="23.8633%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.6133%" y="341" width="0.0792%" height="15" fill="rgb(215,83,48)" fg:x="298" fg:w="1"/><text x="23.8633%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.6133%" y="325" width="0.0792%" height="15" fill="rgb(253,2,32)" fg:x="298" fg:w="1"/><text x="23.8633%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.6133%" y="309" width="0.0792%" height="15" fill="rgb(236,67,28)" fg:x="298" fg:w="1"/><text x="23.8633%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.6133%" y="293" width="0.0792%" height="15" fill="rgb(252,55,15)" fg:x="298" fg:w="1"/><text x="23.8633%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6926%" y="517" width="0.0792%" height="15" fill="rgb(243,173,17)" fg:x="299" fg:w="1"/><text x="23.9426%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.6926%" y="501" width="0.0792%" height="15" fill="rgb(215,212,13)" fg:x="299" fg:w="1"/><text x="23.9426%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6926%" y="485" width="0.0792%" height="15" fill="rgb(253,176,6)" fg:x="299" fg:w="1"/><text x="23.9426%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6926%" y="469" width="0.0792%" height="15" fill="rgb(236,105,26)" fg:x="299" fg:w="1"/><text x="23.9426%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6926%" y="453" width="0.0792%" height="15" fill="rgb(239,226,32)" fg:x="299" fg:w="1"/><text x="23.9426%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="23.5341%" y="581" width="0.3170%" height="15" fill="rgb(236,104,51)" fg:x="297" fg:w="4"/><text x="23.7841%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="23.6133%" y="565" width="0.2377%" height="15" fill="rgb(220,172,33)" fg:x="298" fg:w="3"/><text x="23.8633%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="23.6133%" y="549" width="0.2377%" height="15" fill="rgb(224,182,25)" fg:x="298" fg:w="3"/><text x="23.8633%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="23.6133%" y="533" width="0.2377%" height="15" fill="rgb(236,184,24)" fg:x="298" fg:w="3"/><text x="23.8633%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7718%" y="517" width="0.0792%" height="15" fill="rgb(241,221,14)" fg:x="300" fg:w="1"/><text x="24.0218%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7718%" y="501" width="0.0792%" height="15" fill="rgb(227,146,5)" fg:x="300" fg:w="1"/><text x="24.0218%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7718%" y="485" width="0.0792%" height="15" fill="rgb(214,15,23)" fg:x="300" fg:w="1"/><text x="24.0218%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7718%" y="469" width="0.0792%" height="15" fill="rgb(233,157,31)" fg:x="300" fg:w="1"/><text x="24.0218%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.7718%" y="453" width="0.0792%" height="15" fill="rgb(211,27,52)" fg:x="300" fg:w="1"/><text x="24.0218%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7718%" y="437" width="0.0792%" height="15" fill="rgb(212,223,15)" fg:x="300" fg:w="1"/><text x="24.0218%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7718%" y="421" width="0.0792%" height="15" fill="rgb(254,211,0)" fg:x="300" fg:w="1"/><text x="24.0218%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7718%" y="405" width="0.0792%" height="15" fill="rgb(205,43,38)" fg:x="300" fg:w="1"/><text x="24.0218%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7718%" y="389" width="0.0792%" height="15" fill="rgb(242,206,46)" fg:x="300" fg:w="1"/><text x="24.0218%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="23.8510%" y="549" width="0.0792%" height="15" fill="rgb(220,221,12)" fg:x="301" fg:w="1"/><text x="24.1010%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.8510%" y="533" width="0.0792%" height="15" fill="rgb(217,156,35)" fg:x="301" fg:w="1"/><text x="24.1010%" y="543.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9303%" y="533" width="0.0792%" height="15" fill="rgb(207,181,49)" fg:x="302" fg:w="1"/><text x="24.1803%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.9303%" y="517" width="0.0792%" height="15" fill="rgb(235,103,47)" fg:x="302" fg:w="1"/><text x="24.1803%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.9303%" y="501" width="0.0792%" height="15" fill="rgb(222,63,28)" fg:x="302" fg:w="1"/><text x="24.1803%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="23.9303%" y="485" width="0.0792%" height="15" fill="rgb(244,137,21)" fg:x="302" fg:w="1"/><text x="24.1803%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="23.8510%" y="581" width="0.2377%" height="15" fill="rgb(228,35,27)" fg:x="301" fg:w="3"/><text x="24.1010%" y="591.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="23.8510%" y="565" width="0.2377%" height="15" fill="rgb(226,191,41)" fg:x="301" fg:w="3"/><text x="24.1010%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.9303%" y="549" width="0.1585%" height="15" fill="rgb(210,154,3)" fg:x="302" fg:w="2"/><text x="24.1803%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0095%" y="533" width="0.0792%" height="15" fill="rgb(216,60,49)" fg:x="303" fg:w="1"/><text x="24.2595%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0095%" y="517" width="0.0792%" height="15" fill="rgb(226,17,20)" fg:x="303" fg:w="1"/><text x="24.2595%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="24.0887%" y="549" width="0.0792%" height="15" fill="rgb(206,115,35)" fg:x="304" fg:w="1"/><text x="24.3387%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="24.1680%" y="533" width="0.0792%" height="15" fill="rgb(227,88,1)" fg:x="305" fg:w="1"/><text x="24.4180%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="24.1680%" y="517" width="0.0792%" height="15" fill="rgb(230,222,24)" fg:x="305" fg:w="1"/><text x="24.4180%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.1680%" y="501" width="0.0792%" height="15" fill="rgb(214,124,32)" fg:x="305" fg:w="1"/><text x="24.4180%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="24.1680%" y="485" width="0.0792%" height="15" fill="rgb(240,41,36)" fg:x="305" fg:w="1"/><text x="24.4180%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.1680%" y="469" width="0.0792%" height="15" fill="rgb(221,17,52)" fg:x="305" fg:w="1"/><text x="24.4180%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1680%" y="453" width="0.0792%" height="15" fill="rgb(252,70,16)" fg:x="305" fg:w="1"/><text x="24.4180%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="24.3265%" y="485" width="0.0792%" height="15" fill="rgb(250,177,4)" fg:x="307" fg:w="1"/><text x="24.5765%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="24.3265%" y="469" width="0.0792%" height="15" fill="rgb(240,188,47)" fg:x="307" fg:w="1"/><text x="24.5765%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3265%" y="453" width="0.0792%" height="15" fill="rgb(215,92,12)" fg:x="307" fg:w="1"/><text x="24.5765%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="24.3265%" y="501" width="0.1585%" height="15" fill="rgb(242,110,29)" fg:x="307" fg:w="2"/><text x="24.5765%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.4057%" y="485" width="0.0792%" height="15" fill="rgb(208,211,26)" fg:x="308" fg:w="1"/><text x="24.6557%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5642%" y="389" width="0.0792%" height="15" fill="rgb(244,147,6)" fg:x="310" fg:w="1"/><text x="24.8142%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5642%" y="373" width="0.0792%" height="15" fill="rgb(211,130,42)" fg:x="310" fg:w="1"/><text x="24.8142%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5642%" y="357" width="0.0792%" height="15" fill="rgb(220,63,1)" fg:x="310" fg:w="1"/><text x="24.8142%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.5642%" y="341" width="0.0792%" height="15" fill="rgb(241,212,30)" fg:x="310" fg:w="1"/><text x="24.8142%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.5642%" y="325" width="0.0792%" height="15" fill="rgb(233,153,17)" fg:x="310" fg:w="1"/><text x="24.8142%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.5642%" y="309" width="0.0792%" height="15" fill="rgb(236,3,10)" fg:x="310" fg:w="1"/><text x="24.8142%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5642%" y="293" width="0.0792%" height="15" fill="rgb(232,41,21)" fg:x="310" fg:w="1"/><text x="24.8142%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5642%" y="277" width="0.0792%" height="15" fill="rgb(206,63,51)" fg:x="310" fg:w="1"/><text x="24.8142%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.5642%" y="261" width="0.0792%" height="15" fill="rgb(250,214,3)" fg:x="310" fg:w="1"/><text x="24.8142%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.5642%" y="245" width="0.0792%" height="15" fill="rgb(254,89,27)" fg:x="310" fg:w="1"/><text x="24.8142%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.5642%" y="229" width="0.0792%" height="15" fill="rgb(249,41,14)" fg:x="310" fg:w="1"/><text x="24.8142%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.5642%" y="213" width="0.0792%" height="15" fill="rgb(221,196,51)" fg:x="310" fg:w="1"/><text x="24.8142%" y="223.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="24.5642%" y="197" width="0.0792%" height="15" fill="rgb(214,116,26)" fg:x="310" fg:w="1"/><text x="24.8142%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="24.5642%" y="181" width="0.0792%" height="15" fill="rgb(236,67,7)" fg:x="310" fg:w="1"/><text x="24.8142%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.4849%" y="453" width="0.2377%" height="15" fill="rgb(253,179,32)" fg:x="309" fg:w="3"/><text x="24.7349%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.4849%" y="437" width="0.2377%" height="15" fill="rgb(218,33,15)" fg:x="309" fg:w="3"/><text x="24.7349%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.4849%" y="421" width="0.2377%" height="15" fill="rgb(217,202,41)" fg:x="309" fg:w="3"/><text x="24.7349%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.4849%" y="405" width="0.2377%" height="15" fill="rgb(234,133,5)" fg:x="309" fg:w="3"/><text x="24.7349%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6434%" y="389" width="0.0792%" height="15" fill="rgb(240,47,40)" fg:x="311" fg:w="1"/><text x="24.8934%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6434%" y="373" width="0.0792%" height="15" fill="rgb(234,166,26)" fg:x="311" fg:w="1"/><text x="24.8934%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6434%" y="357" width="0.0792%" height="15" fill="rgb(244,125,51)" fg:x="311" fg:w="1"/><text x="24.8934%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6434%" y="341" width="0.0792%" height="15" fill="rgb(229,171,11)" fg:x="311" fg:w="1"/><text x="24.8934%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6434%" y="325" width="0.0792%" height="15" fill="rgb(224,38,45)" fg:x="311" fg:w="1"/><text x="24.8934%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.6434%" y="309" width="0.0792%" height="15" fill="rgb(237,27,7)" fg:x="311" fg:w="1"/><text x="24.8934%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.6434%" y="293" width="0.0792%" height="15" fill="rgb(216,52,7)" fg:x="311" fg:w="1"/><text x="24.8934%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="24.4849%" y="501" width="0.3170%" height="15" fill="rgb(243,11,11)" fg:x="309" fg:w="4"/><text x="24.7349%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="24.4849%" y="485" width="0.3170%" height="15" fill="rgb(253,167,20)" fg:x="309" fg:w="4"/><text x="24.7349%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="24.4849%" y="469" width="0.3170%" height="15" fill="rgb(215,207,5)" fg:x="309" fg:w="4"/><text x="24.7349%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7227%" y="453" width="0.0792%" height="15" fill="rgb(252,127,31)" fg:x="312" fg:w="1"/><text x="24.9727%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7227%" y="437" width="0.0792%" height="15" fill="rgb(209,106,27)" fg:x="312" fg:w="1"/><text x="24.9727%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7227%" y="421" width="0.0792%" height="15" fill="rgb(214,220,18)" fg:x="312" fg:w="1"/><text x="24.9727%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7227%" y="405" width="0.0792%" height="15" fill="rgb(237,89,12)" fg:x="312" fg:w="1"/><text x="24.9727%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.7227%" y="389" width="0.0792%" height="15" fill="rgb(209,167,36)" fg:x="312" fg:w="1"/><text x="24.9727%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7227%" y="373" width="0.0792%" height="15" fill="rgb(243,45,22)" fg:x="312" fg:w="1"/><text x="24.9727%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7227%" y="357" width="0.0792%" height="15" fill="rgb(239,2,46)" fg:x="312" fg:w="1"/><text x="24.9727%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7227%" y="341" width="0.0792%" height="15" fill="rgb(241,101,0)" fg:x="312" fg:w="1"/><text x="24.9727%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7227%" y="325" width="0.0792%" height="15" fill="rgb(244,34,31)" fg:x="312" fg:w="1"/><text x="24.9727%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7227%" y="309" width="0.0792%" height="15" fill="rgb(248,23,22)" fg:x="312" fg:w="1"/><text x="24.9727%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="24.7227%" y="293" width="0.0792%" height="15" fill="rgb(218,27,48)" fg:x="312" fg:w="1"/><text x="24.9727%" y="303.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.63%)</title><rect x="24.2472%" y="533" width="0.6339%" height="15" fill="rgb(232,78,1)" fg:x="306" fg:w="8"/><text x="24.4972%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="24.2472%" y="517" width="0.6339%" height="15" fill="rgb(233,169,12)" fg:x="306" fg:w="8"/><text x="24.4972%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="24.8019%" y="501" width="0.0792%" height="15" fill="rgb(225,222,54)" fg:x="313" fg:w="1"/><text x="25.0519%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="24.9604%" y="485" width="0.0792%" height="15" fill="rgb(245,126,29)" fg:x="315" fg:w="1"/><text x="25.2104%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="24.9604%" y="469" width="0.0792%" height="15" fill="rgb(241,63,48)" fg:x="315" fg:w="1"/><text x="25.2104%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.9604%" y="453" width="0.0792%" height="15" fill="rgb(235,126,38)" fg:x="315" fg:w="1"/><text x="25.2104%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0396%" y="469" width="0.0792%" height="15" fill="rgb(232,96,49)" fg:x="316" fg:w="1"/><text x="25.2896%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0396%" y="453" width="0.0792%" height="15" fill="rgb(211,146,40)" fg:x="316" fg:w="1"/><text x="25.2896%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.0396%" y="437" width="0.0792%" height="15" fill="rgb(247,93,44)" fg:x="316" fg:w="1"/><text x="25.2896%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.0396%" y="421" width="0.0792%" height="15" fill="rgb(251,41,49)" fg:x="316" fg:w="1"/><text x="25.2896%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.0396%" y="405" width="0.0792%" height="15" fill="rgb(218,155,12)" fg:x="316" fg:w="1"/><text x="25.2896%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0396%" y="389" width="0.0792%" height="15" fill="rgb(221,161,30)" fg:x="316" fg:w="1"/><text x="25.2896%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0396%" y="373" width="0.0792%" height="15" fill="rgb(221,179,11)" fg:x="316" fg:w="1"/><text x="25.2896%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.0396%" y="357" width="0.0792%" height="15" fill="rgb(224,170,48)" fg:x="316" fg:w="1"/><text x="25.2896%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.0396%" y="341" width="0.0792%" height="15" fill="rgb(223,117,5)" fg:x="316" fg:w="1"/><text x="25.2896%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.0396%" y="325" width="0.0792%" height="15" fill="rgb(209,52,20)" fg:x="316" fg:w="1"/><text x="25.2896%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.0396%" y="309" width="0.0792%" height="15" fill="rgb(209,19,41)" fg:x="316" fg:w="1"/><text x="25.2896%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0396%" y="293" width="0.0792%" height="15" fill="rgb(210,177,12)" fg:x="316" fg:w="1"/><text x="25.2896%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1189%" y="357" width="0.0792%" height="15" fill="rgb(211,159,37)" fg:x="317" fg:w="1"/><text x="25.3689%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1189%" y="341" width="0.0792%" height="15" fill="rgb(209,20,2)" fg:x="317" fg:w="1"/><text x="25.3689%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.1189%" y="325" width="0.0792%" height="15" fill="rgb(244,3,46)" fg:x="317" fg:w="1"/><text x="25.3689%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.1189%" y="309" width="0.0792%" height="15" fill="rgb(220,94,38)" fg:x="317" fg:w="1"/><text x="25.3689%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.1189%" y="293" width="0.0792%" height="15" fill="rgb(253,14,31)" fg:x="317" fg:w="1"/><text x="25.3689%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.1189%" y="277" width="0.0792%" height="15" fill="rgb(234,176,13)" fg:x="317" fg:w="1"/><text x="25.3689%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="24.9604%" y="501" width="0.3170%" height="15" fill="rgb(218,62,25)" fg:x="315" fg:w="4"/><text x="25.2104%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="25.0396%" y="485" width="0.2377%" height="15" fill="rgb(216,124,40)" fg:x="316" fg:w="3"/><text x="25.2896%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="25.1189%" y="469" width="0.1585%" height="15" fill="rgb(228,170,12)" fg:x="317" fg:w="2"/><text x="25.3689%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="25.1189%" y="453" width="0.1585%" height="15" fill="rgb(231,226,5)" fg:x="317" fg:w="2"/><text x="25.3689%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.1189%" y="437" width="0.1585%" height="15" fill="rgb(237,122,22)" fg:x="317" fg:w="2"/><text x="25.3689%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="25.1189%" y="421" width="0.1585%" height="15" fill="rgb(209,185,25)" fg:x="317" fg:w="2"/><text x="25.3689%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="25.1189%" y="405" width="0.1585%" height="15" fill="rgb(228,200,32)" fg:x="317" fg:w="2"/><text x="25.3689%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="25.1189%" y="389" width="0.1585%" height="15" fill="rgb(217,140,10)" fg:x="317" fg:w="2"/><text x="25.3689%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.1189%" y="373" width="0.1585%" height="15" fill="rgb(253,17,24)" fg:x="317" fg:w="2"/><text x="25.3689%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.1981%" y="357" width="0.0792%" height="15" fill="rgb(212,61,6)" fg:x="318" fg:w="1"/><text x="25.4481%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1981%" y="341" width="0.0792%" height="15" fill="rgb(205,14,25)" fg:x="318" fg:w="1"/><text x="25.4481%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1981%" y="325" width="0.0792%" height="15" fill="rgb(232,69,41)" fg:x="318" fg:w="1"/><text x="25.4481%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.1981%" y="309" width="0.0792%" height="15" fill="rgb(241,106,47)" fg:x="318" fg:w="1"/><text x="25.4481%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.1981%" y="293" width="0.0792%" height="15" fill="rgb(210,213,53)" fg:x="318" fg:w="1"/><text x="25.4481%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.1981%" y="277" width="0.0792%" height="15" fill="rgb(253,175,27)" fg:x="318" fg:w="1"/><text x="25.4481%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.1981%" y="261" width="0.0792%" height="15" fill="rgb(211,171,24)" fg:x="318" fg:w="1"/><text x="25.4481%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.1981%" y="245" width="0.0792%" height="15" fill="rgb(229,80,7)" fg:x="318" fg:w="1"/><text x="25.4481%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.1981%" y="229" width="0.0792%" height="15" fill="rgb(212,46,39)" fg:x="318" fg:w="1"/><text x="25.4481%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.1981%" y="213" width="0.0792%" height="15" fill="rgb(240,80,45)" fg:x="318" fg:w="1"/><text x="25.4481%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="25.1981%" y="197" width="0.0792%" height="15" fill="rgb(253,177,40)" fg:x="318" fg:w="1"/><text x="25.4481%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.1981%" y="181" width="0.0792%" height="15" fill="rgb(249,200,15)" fg:x="318" fg:w="1"/><text x="25.4481%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="25.1981%" y="165" width="0.0792%" height="15" fill="rgb(217,78,26)" fg:x="318" fg:w="1"/><text x="25.4481%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="25.1981%" y="149" width="0.0792%" height="15" fill="rgb(254,151,32)" fg:x="318" fg:w="1"/><text x="25.4481%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="25.1981%" y="133" width="0.0792%" height="15" fill="rgb(226,165,27)" fg:x="318" fg:w="1"/><text x="25.4481%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.1981%" y="117" width="0.0792%" height="15" fill="rgb(250,206,4)" fg:x="318" fg:w="1"/><text x="25.4481%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.2773%" y="501" width="0.0792%" height="15" fill="rgb(231,229,27)" fg:x="319" fg:w="1"/><text x="25.5273%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.2773%" y="485" width="0.0792%" height="15" fill="rgb(239,217,8)" fg:x="319" fg:w="1"/><text x="25.5273%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.2773%" y="469" width="0.0792%" height="15" fill="rgb(225,204,27)" fg:x="319" fg:w="1"/><text x="25.5273%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2773%" y="453" width="0.0792%" height="15" fill="rgb(230,56,32)" fg:x="319" fg:w="1"/><text x="25.5273%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2773%" y="437" width="0.0792%" height="15" fill="rgb(222,56,27)" fg:x="319" fg:w="1"/><text x="25.5273%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2773%" y="421" width="0.0792%" height="15" fill="rgb(253,108,27)" fg:x="319" fg:w="1"/><text x="25.5273%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2773%" y="405" width="0.0792%" height="15" fill="rgb(212,87,36)" fg:x="319" fg:w="1"/><text x="25.5273%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.2773%" y="389" width="0.0792%" height="15" fill="rgb(247,82,36)" fg:x="319" fg:w="1"/><text x="25.5273%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2773%" y="373" width="0.0792%" height="15" fill="rgb(222,143,9)" fg:x="319" fg:w="1"/><text x="25.5273%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.2773%" y="357" width="0.0792%" height="15" fill="rgb(238,162,48)" fg:x="319" fg:w="1"/><text x="25.5273%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.2773%" y="341" width="0.0792%" height="15" fill="rgb(221,59,43)" fg:x="319" fg:w="1"/><text x="25.5273%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.2773%" y="325" width="0.0792%" height="15" fill="rgb(205,166,41)" fg:x="319" fg:w="1"/><text x="25.5273%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.4358%" y="453" width="0.0792%" height="15" fill="rgb(241,186,40)" fg:x="321" fg:w="1"/><text x="25.6858%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.4358%" y="437" width="0.0792%" height="15" fill="rgb(216,119,35)" fg:x="321" fg:w="1"/><text x="25.6858%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.5151%" y="389" width="0.0792%" height="15" fill="rgb(208,68,38)" fg:x="322" fg:w="1"/><text x="25.7651%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.5151%" y="373" width="0.0792%" height="15" fill="rgb(217,113,1)" fg:x="322" fg:w="1"/><text x="25.7651%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="25.3566%" y="501" width="0.3170%" height="15" fill="rgb(242,153,3)" fg:x="320" fg:w="4"/><text x="25.6066%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="25.4358%" y="485" width="0.2377%" height="15" fill="rgb(229,76,35)" fg:x="321" fg:w="3"/><text x="25.6858%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.4358%" y="469" width="0.2377%" height="15" fill="rgb(229,125,34)" fg:x="321" fg:w="3"/><text x="25.6858%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.5151%" y="453" width="0.1585%" height="15" fill="rgb(238,179,36)" fg:x="322" fg:w="2"/><text x="25.7651%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.5151%" y="437" width="0.1585%" height="15" fill="rgb(244,183,19)" fg:x="322" fg:w="2"/><text x="25.7651%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.5151%" y="421" width="0.1585%" height="15" fill="rgb(216,85,49)" fg:x="322" fg:w="2"/><text x="25.7651%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.5151%" y="405" width="0.1585%" height="15" fill="rgb(208,161,47)" fg:x="322" fg:w="2"/><text x="25.7651%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="25.5943%" y="389" width="0.0792%" height="15" fill="rgb(233,210,18)" fg:x="323" fg:w="1"/><text x="25.8443%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.6735%" y="453" width="0.0792%" height="15" fill="rgb(205,104,42)" fg:x="324" fg:w="1"/><text x="25.9235%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.6735%" y="437" width="0.0792%" height="15" fill="rgb(248,90,43)" fg:x="324" fg:w="1"/><text x="25.9235%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.6735%" y="421" width="0.0792%" height="15" fill="rgb(206,198,11)" fg:x="324" fg:w="1"/><text x="25.9235%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.6735%" y="405" width="0.0792%" height="15" fill="rgb(239,165,27)" fg:x="324" fg:w="1"/><text x="25.9235%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.6735%" y="389" width="0.0792%" height="15" fill="rgb(246,44,32)" fg:x="324" fg:w="1"/><text x="25.9235%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.6735%" y="373" width="0.0792%" height="15" fill="rgb(252,65,42)" fg:x="324" fg:w="1"/><text x="25.9235%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.6735%" y="357" width="0.0792%" height="15" fill="rgb(246,197,18)" fg:x="324" fg:w="1"/><text x="25.9235%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.6735%" y="341" width="0.0792%" height="15" fill="rgb(216,192,4)" fg:x="324" fg:w="1"/><text x="25.9235%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.6735%" y="325" width="0.0792%" height="15" fill="rgb(208,117,10)" fg:x="324" fg:w="1"/><text x="25.9235%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.6735%" y="309" width="0.0792%" height="15" fill="rgb(240,61,47)" fg:x="324" fg:w="1"/><text x="25.9235%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7528%" y="421" width="0.0792%" height="15" fill="rgb(228,178,21)" fg:x="325" fg:w="1"/><text x="26.0028%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7528%" y="405" width="0.0792%" height="15" fill="rgb(219,96,54)" fg:x="325" fg:w="1"/><text x="26.0028%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7528%" y="389" width="0.0792%" height="15" fill="rgb(250,177,24)" fg:x="325" fg:w="1"/><text x="26.0028%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7528%" y="373" width="0.0792%" height="15" fill="rgb(242,154,46)" fg:x="325" fg:w="1"/><text x="26.0028%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.95%)</title><rect x="24.9604%" y="517" width="0.9509%" height="15" fill="rgb(226,176,29)" fg:x="315" fg:w="12"/><text x="25.2104%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="25.6735%" y="501" width="0.2377%" height="15" fill="rgb(226,29,2)" fg:x="324" fg:w="3"/><text x="25.9235%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="25.6735%" y="485" width="0.2377%" height="15" fill="rgb(237,104,14)" fg:x="324" fg:w="3"/><text x="25.9235%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="25.6735%" y="469" width="0.2377%" height="15" fill="rgb(245,207,31)" fg:x="324" fg:w="3"/><text x="25.9235%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="25.7528%" y="453" width="0.1585%" height="15" fill="rgb(229,211,45)" fg:x="325" fg:w="2"/><text x="26.0028%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.7528%" y="437" width="0.1585%" height="15" fill="rgb(229,113,15)" fg:x="325" fg:w="2"/><text x="26.0028%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.8320%" y="421" width="0.0792%" height="15" fill="rgb(237,147,15)" fg:x="326" fg:w="1"/><text x="26.0820%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.8320%" y="405" width="0.0792%" height="15" fill="rgb(244,120,12)" fg:x="326" fg:w="1"/><text x="26.0820%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="25.8320%" y="389" width="0.0792%" height="15" fill="rgb(205,120,12)" fg:x="326" fg:w="1"/><text x="26.0820%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.8320%" y="373" width="0.0792%" height="15" fill="rgb(231,26,45)" fg:x="326" fg:w="1"/><text x="26.0820%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="25.8320%" y="357" width="0.0792%" height="15" fill="rgb(246,98,1)" fg:x="326" fg:w="1"/><text x="26.0820%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="25.8320%" y="341" width="0.0792%" height="15" fill="rgb(207,68,45)" fg:x="326" fg:w="1"/><text x="26.0820%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.8320%" y="325" width="0.0792%" height="15" fill="rgb(231,27,38)" fg:x="326" fg:w="1"/><text x="26.0820%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="25.8320%" y="309" width="0.0792%" height="15" fill="rgb(214,223,3)" fg:x="326" fg:w="1"/><text x="26.0820%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="25.8320%" y="293" width="0.0792%" height="15" fill="rgb(228,195,46)" fg:x="326" fg:w="1"/><text x="26.0820%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="25.9113%" y="501" width="0.0792%" height="15" fill="rgb(231,100,42)" fg:x="327" fg:w="1"/><text x="26.1613%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="25.9113%" y="485" width="0.0792%" height="15" fill="rgb(236,53,4)" fg:x="327" fg:w="1"/><text x="26.1613%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.9113%" y="469" width="0.0792%" height="15" fill="rgb(230,152,12)" fg:x="327" fg:w="1"/><text x="26.1613%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0697%" y="373" width="0.0792%" height="15" fill="rgb(226,101,19)" fg:x="329" fg:w="1"/><text x="26.3197%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0697%" y="357" width="0.0792%" height="15" fill="rgb(250,149,32)" fg:x="329" fg:w="1"/><text x="26.3197%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.0697%" y="421" width="0.1585%" height="15" fill="rgb(232,178,12)" fg:x="329" fg:w="2"/><text x="26.3197%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.0697%" y="405" width="0.1585%" height="15" fill="rgb(246,151,17)" fg:x="329" fg:w="2"/><text x="26.3197%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.0697%" y="389" width="0.1585%" height="15" fill="rgb(252,17,51)" fg:x="329" fg:w="2"/><text x="26.3197%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1490%" y="373" width="0.0792%" height="15" fill="rgb(250,207,23)" fg:x="330" fg:w="1"/><text x="26.3990%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.2282%" y="421" width="0.0792%" height="15" fill="rgb(205,27,5)" fg:x="331" fg:w="1"/><text x="26.4782%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="26.0697%" y="469" width="0.3962%" height="15" fill="rgb(224,32,19)" fg:x="329" fg:w="5"/><text x="26.3197%" y="479.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="26.0697%" y="453" width="0.3962%" height="15" fill="rgb(247,214,40)" fg:x="329" fg:w="5"/><text x="26.3197%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="26.0697%" y="437" width="0.3962%" height="15" fill="rgb(239,199,17)" fg:x="329" fg:w="5"/><text x="26.3197%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.3074%" y="421" width="0.1585%" height="15" fill="rgb(251,159,9)" fg:x="332" fg:w="2"/><text x="26.5574%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="26.3074%" y="405" width="0.1585%" height="15" fill="rgb(225,78,32)" fg:x="332" fg:w="2"/><text x="26.5574%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.3074%" y="389" width="0.1585%" height="15" fill="rgb(206,97,47)" fg:x="332" fg:w="2"/><text x="26.5574%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.3074%" y="373" width="0.1585%" height="15" fill="rgb(227,107,4)" fg:x="332" fg:w="2"/><text x="26.5574%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.3074%" y="357" width="0.1585%" height="15" fill="rgb(241,146,50)" fg:x="332" fg:w="2"/><text x="26.5574%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.3074%" y="341" width="0.1585%" height="15" fill="rgb(232,92,30)" fg:x="332" fg:w="2"/><text x="26.5574%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="26.3074%" y="325" width="0.1585%" height="15" fill="rgb(222,0,40)" fg:x="332" fg:w="2"/><text x="26.5574%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.3074%" y="309" width="0.1585%" height="15" fill="rgb(219,54,33)" fg:x="332" fg:w="2"/><text x="26.5574%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="26.4659%" y="453" width="0.0792%" height="15" fill="rgb(226,209,28)" fg:x="334" fg:w="1"/><text x="26.7159%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5452%" y="421" width="0.1585%" height="15" fill="rgb(254,205,35)" fg:x="335" fg:w="2"/><text x="26.7952%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5452%" y="405" width="0.1585%" height="15" fill="rgb(230,159,3)" fg:x="335" fg:w="2"/><text x="26.7952%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5452%" y="389" width="0.1585%" height="15" fill="rgb(232,190,24)" fg:x="335" fg:w="2"/><text x="26.7952%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5452%" y="373" width="0.1585%" height="15" fill="rgb(217,227,44)" fg:x="335" fg:w="2"/><text x="26.7952%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6244%" y="357" width="0.0792%" height="15" fill="rgb(236,211,1)" fg:x="336" fg:w="1"/><text x="26.8744%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6244%" y="341" width="0.0792%" height="15" fill="rgb(250,127,46)" fg:x="336" fg:w="1"/><text x="26.8744%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6244%" y="325" width="0.0792%" height="15" fill="rgb(229,213,6)" fg:x="336" fg:w="1"/><text x="26.8744%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.6244%" y="309" width="0.0792%" height="15" fill="rgb(237,15,36)" fg:x="336" fg:w="1"/><text x="26.8744%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.6244%" y="293" width="0.0792%" height="15" fill="rgb(213,131,41)" fg:x="336" fg:w="1"/><text x="26.8744%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.6244%" y="277" width="0.0792%" height="15" fill="rgb(225,82,44)" fg:x="336" fg:w="1"/><text x="26.8744%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6244%" y="261" width="0.0792%" height="15" fill="rgb(249,42,11)" fg:x="336" fg:w="1"/><text x="26.8744%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6244%" y="245" width="0.0792%" height="15" fill="rgb(253,11,29)" fg:x="336" fg:w="1"/><text x="26.8744%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.6244%" y="229" width="0.0792%" height="15" fill="rgb(206,8,54)" fg:x="336" fg:w="1"/><text x="26.8744%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.6244%" y="213" width="0.0792%" height="15" fill="rgb(222,186,2)" fg:x="336" fg:w="1"/><text x="26.8744%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.6244%" y="197" width="0.0792%" height="15" fill="rgb(221,206,53)" fg:x="336" fg:w="1"/><text x="26.8744%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.6244%" y="181" width="0.0792%" height="15" fill="rgb(230,150,21)" fg:x="336" fg:w="1"/><text x="26.8744%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6244%" y="165" width="0.0792%" height="15" fill="rgb(253,202,10)" fg:x="336" fg:w="1"/><text x="26.8744%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.7036%" y="421" width="0.0792%" height="15" fill="rgb(238,109,40)" fg:x="337" fg:w="1"/><text x="26.9536%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.7036%" y="405" width="0.0792%" height="15" fill="rgb(247,120,22)" fg:x="337" fg:w="1"/><text x="26.9536%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.7036%" y="389" width="0.0792%" height="15" fill="rgb(207,43,30)" fg:x="337" fg:w="1"/><text x="26.9536%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.7036%" y="373" width="0.0792%" height="15" fill="rgb(213,211,24)" fg:x="337" fg:w="1"/><text x="26.9536%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.7036%" y="357" width="0.0792%" height="15" fill="rgb(239,73,39)" fg:x="337" fg:w="1"/><text x="26.9536%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.7036%" y="341" width="0.0792%" height="15" fill="rgb(245,182,19)" fg:x="337" fg:w="1"/><text x="26.9536%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7036%" y="325" width="0.0792%" height="15" fill="rgb(247,143,26)" fg:x="337" fg:w="1"/><text x="26.9536%" y="335.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.87%)</title><rect x="25.9905%" y="501" width="0.8716%" height="15" fill="rgb(228,191,23)" fg:x="328" fg:w="11"/><text x="26.2405%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.79%)</title><rect x="26.0697%" y="485" width="0.7924%" height="15" fill="rgb(253,165,31)" fg:x="329" fg:w="10"/><text x="26.3197%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="26.4659%" y="469" width="0.3962%" height="15" fill="rgb(234,138,20)" fg:x="334" fg:w="5"/><text x="26.7159%" y="479.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="26.5452%" y="453" width="0.3170%" height="15" fill="rgb(218,191,29)" fg:x="335" fg:w="4"/><text x="26.7952%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="26.5452%" y="437" width="0.3170%" height="15" fill="rgb(221,157,19)" fg:x="335" fg:w="4"/><text x="26.7952%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.7829%" y="421" width="0.0792%" height="15" fill="rgb(237,26,42)" fg:x="338" fg:w="1"/><text x="27.0329%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.7829%" y="405" width="0.0792%" height="15" fill="rgb(220,163,24)" fg:x="338" fg:w="1"/><text x="27.0329%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.7829%" y="389" width="0.0792%" height="15" fill="rgb(242,115,20)" fg:x="338" fg:w="1"/><text x="27.0329%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.7829%" y="373" width="0.0792%" height="15" fill="rgb(210,206,9)" fg:x="338" fg:w="1"/><text x="27.0329%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.7829%" y="357" width="0.0792%" height="15" fill="rgb(208,71,17)" fg:x="338" fg:w="1"/><text x="27.0329%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.7829%" y="341" width="0.0792%" height="15" fill="rgb(233,7,5)" fg:x="338" fg:w="1"/><text x="27.0329%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.7829%" y="325" width="0.0792%" height="15" fill="rgb(207,92,33)" fg:x="338" fg:w="1"/><text x="27.0329%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.7829%" y="309" width="0.0792%" height="15" fill="rgb(218,87,9)" fg:x="338" fg:w="1"/><text x="27.0329%" y="319.50"></text></g><g><title>plugins_core::build::Build::leads_to (26 samples, 2.06%)</title><rect x="24.8811%" y="533" width="2.0602%" height="15" fill="rgb(219,47,37)" fg:x="314" fg:w="26"/><text x="25.1311%" y="543.50">p..</text></g><g><title>plugins_core::tools::leads_to (13 samples, 1.03%)</title><rect x="25.9113%" y="517" width="1.0301%" height="15" fill="rgb(221,152,34)" fg:x="327" fg:w="13"/><text x="26.1613%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="26.8621%" y="501" width="0.0792%" height="15" fill="rgb(235,176,21)" fg:x="339" fg:w="1"/><text x="27.1121%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (37 samples, 2.93%)</title><rect x="24.0887%" y="581" width="2.9319%" height="15" fill="rgb(232,212,21)" fg:x="304" fg:w="37"/><text x="24.3387%" y="591.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (37 samples, 2.93%)</title><rect x="24.0887%" y="565" width="2.9319%" height="15" fill="rgb(245,82,39)" fg:x="304" fg:w="37"/><text x="24.3387%" y="575.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (36 samples, 2.85%)</title><rect x="24.1680%" y="549" width="2.8526%" height="15" fill="rgb(241,52,51)" fg:x="305" fg:w="36"/><text x="24.4180%" y="559.50">pl..</text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="26.9414%" y="533" width="0.0792%" height="15" fill="rgb(219,91,24)" fg:x="340" fg:w="1"/><text x="27.1914%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="26.9414%" y="517" width="0.0792%" height="15" fill="rgb(241,142,12)" fg:x="340" fg:w="1"/><text x="27.1914%" y="527.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="26.9414%" y="501" width="0.0792%" height="15" fill="rgb(230,27,9)" fg:x="340" fg:w="1"/><text x="27.1914%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.9414%" y="485" width="0.0792%" height="15" fill="rgb(249,181,32)" fg:x="340" fg:w="1"/><text x="27.1914%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.9414%" y="469" width="0.0792%" height="15" fill="rgb(230,107,3)" fg:x="340" fg:w="1"/><text x="27.1914%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="26.9414%" y="453" width="0.0792%" height="15" fill="rgb(246,204,14)" fg:x="340" fg:w="1"/><text x="27.1914%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="27.0206%" y="581" width="0.0792%" height="15" fill="rgb(213,192,47)" fg:x="341" fg:w="1"/><text x="27.2706%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="27.0998%" y="565" width="0.1585%" height="15" fill="rgb(240,44,36)" fg:x="342" fg:w="2"/><text x="27.3498%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="27.5753%" y="453" width="0.3962%" height="15" fill="rgb(244,209,38)" fg:x="348" fg:w="5"/><text x="27.8253%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.7338%" y="437" width="0.2377%" height="15" fill="rgb(219,34,37)" fg:x="350" fg:w="3"/><text x="27.9838%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.8922%" y="421" width="0.0792%" height="15" fill="rgb(210,28,6)" fg:x="352" fg:w="1"/><text x="28.1422%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="27.8922%" y="405" width="0.0792%" height="15" fill="rgb(244,110,52)" fg:x="352" fg:w="1"/><text x="28.1422%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.71%)</title><rect x="27.4168%" y="469" width="0.7132%" height="15" fill="rgb(254,124,47)" fg:x="346" fg:w="9"/><text x="27.6668%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.9715%" y="453" width="0.1585%" height="15" fill="rgb(254,110,13)" fg:x="353" fg:w="2"/><text x="28.2215%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.9715%" y="437" width="0.1585%" height="15" fill="rgb(252,57,21)" fg:x="353" fg:w="2"/><text x="28.2215%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.0507%" y="421" width="0.0792%" height="15" fill="rgb(242,60,45)" fg:x="354" fg:w="1"/><text x="28.3007%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.7639%" y="405" width="0.1585%" height="15" fill="rgb(234,49,30)" fg:x="363" fg:w="2"/><text x="29.0139%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.7639%" y="389" width="0.1585%" height="15" fill="rgb(218,98,6)" fg:x="363" fg:w="2"/><text x="29.0139%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.7639%" y="373" width="0.1585%" height="15" fill="rgb(220,174,29)" fg:x="363" fg:w="2"/><text x="29.0139%" y="383.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="28.7639%" y="357" width="0.1585%" height="15" fill="rgb(236,163,23)" fg:x="363" fg:w="2"/><text x="29.0139%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.55%)</title><rect x="28.4469%" y="453" width="0.5547%" height="15" fill="rgb(242,114,45)" fg:x="359" fg:w="7"/><text x="28.6969%" y="463.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="28.6054%" y="437" width="0.3962%" height="15" fill="rgb(232,10,53)" fg:x="361" fg:w="5"/><text x="28.8554%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.7639%" y="421" width="0.2377%" height="15" fill="rgb(245,108,29)" fg:x="363" fg:w="3"/><text x="29.0139%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.9223%" y="405" width="0.0792%" height="15" fill="rgb(240,89,53)" fg:x="365" fg:w="1"/><text x="29.1723%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.0808%" y="405" width="0.0792%" height="15" fill="rgb(226,60,45)" fg:x="367" fg:w="1"/><text x="29.3308%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="29.1601%" y="405" width="0.1585%" height="15" fill="rgb(230,41,44)" fg:x="368" fg:w="2"/><text x="29.4101%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.1601%" y="389" width="0.1585%" height="15" fill="rgb(230,26,20)" fg:x="368" fg:w="2"/><text x="29.4101%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.2393%" y="373" width="0.0792%" height="15" fill="rgb(237,170,32)" fg:x="369" fg:w="1"/><text x="29.4893%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.2393%" y="357" width="0.0792%" height="15" fill="rgb(212,35,42)" fg:x="369" fg:w="1"/><text x="29.4893%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.3185%" y="341" width="0.1585%" height="15" fill="rgb(227,31,34)" fg:x="370" fg:w="2"/><text x="29.5685%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="29.0808%" y="421" width="0.5547%" height="15" fill="rgb(216,19,18)" fg:x="367" fg:w="7"/><text x="29.3308%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="29.3185%" y="405" width="0.3170%" height="15" fill="rgb(211,133,42)" fg:x="370" fg:w="4"/><text x="29.5685%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="29.3185%" y="389" width="0.3170%" height="15" fill="rgb(244,66,13)" fg:x="370" fg:w="4"/><text x="29.5685%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="29.3185%" y="373" width="0.3170%" height="15" fill="rgb(218,185,50)" fg:x="370" fg:w="4"/><text x="29.5685%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="29.3185%" y="357" width="0.3170%" height="15" fill="rgb(219,149,13)" fg:x="370" fg:w="4"/><text x="29.5685%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="29.4770%" y="341" width="0.1585%" height="15" fill="rgb(221,125,0)" fg:x="372" fg:w="2"/><text x="29.7270%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.63%)</title><rect x="29.0808%" y="437" width="0.6339%" height="15" fill="rgb(247,126,27)" fg:x="367" fg:w="8"/><text x="29.3308%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.6355%" y="421" width="0.0792%" height="15" fill="rgb(250,138,30)" fg:x="374" fg:w="1"/><text x="29.8855%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.55%)</title><rect x="29.7147%" y="437" width="0.5547%" height="15" fill="rgb(230,151,9)" fg:x="375" fg:w="7"/><text x="29.9647%" y="447.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="29.8732%" y="421" width="0.3962%" height="15" fill="rgb(233,80,38)" fg:x="377" fg:w="5"/><text x="30.1232%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="30.0317%" y="405" width="0.2377%" height="15" fill="rgb(232,68,43)" fg:x="379" fg:w="3"/><text x="30.2817%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="30.0317%" y="389" width="0.2377%" height="15" fill="rgb(254,5,50)" fg:x="379" fg:w="3"/><text x="30.2817%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.4279%" y="421" width="0.0792%" height="15" fill="rgb(225,45,5)" fg:x="384" fg:w="1"/><text x="30.6779%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="30.5071%" y="421" width="0.3962%" height="15" fill="rgb(239,22,3)" fg:x="385" fg:w="5"/><text x="30.7571%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="30.6656%" y="405" width="0.2377%" height="15" fill="rgb(243,129,0)" fg:x="387" fg:w="3"/><text x="30.9156%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="30.9826%" y="405" width="0.4754%" height="15" fill="rgb(223,164,0)" fg:x="391" fg:w="6"/><text x="31.2326%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="31.2203%" y="389" width="0.2377%" height="15" fill="rgb(221,46,29)" fg:x="394" fg:w="3"/><text x="31.4703%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.3788%" y="373" width="0.0792%" height="15" fill="rgb(205,97,47)" fg:x="396" fg:w="1"/><text x="31.6288%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.4580%" y="389" width="0.0792%" height="15" fill="rgb(249,14,8)" fg:x="397" fg:w="1"/><text x="31.7080%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="31.5372%" y="389" width="0.1585%" height="15" fill="rgb(216,77,3)" fg:x="398" fg:w="2"/><text x="31.7872%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.6165%" y="373" width="0.0792%" height="15" fill="rgb(206,168,54)" fg:x="399" fg:w="1"/><text x="31.8665%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.6165%" y="357" width="0.0792%" height="15" fill="rgb(236,3,41)" fg:x="399" fg:w="1"/><text x="31.8665%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.6165%" y="341" width="0.0792%" height="15" fill="rgb(231,132,24)" fg:x="399" fg:w="1"/><text x="31.8665%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="31.7750%" y="373" width="0.0792%" height="15" fill="rgb(227,221,40)" fg:x="401" fg:w="1"/><text x="32.0250%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.7750%" y="357" width="0.0792%" height="15" fill="rgb(233,151,11)" fg:x="401" fg:w="1"/><text x="32.0250%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.7750%" y="341" width="0.0792%" height="15" fill="rgb(247,81,35)" fg:x="401" fg:w="1"/><text x="32.0250%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.7750%" y="325" width="0.0792%" height="15" fill="rgb(243,128,48)" fg:x="401" fg:w="1"/><text x="32.0250%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="31.6957%" y="389" width="0.2377%" height="15" fill="rgb(253,16,10)" fg:x="400" fg:w="3"/><text x="31.9457%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.8542%" y="373" width="0.0792%" height="15" fill="rgb(228,67,27)" fg:x="402" fg:w="1"/><text x="32.1042%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.8542%" y="357" width="0.0792%" height="15" fill="rgb(231,105,25)" fg:x="402" fg:w="1"/><text x="32.1042%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.8542%" y="341" width="0.0792%" height="15" fill="rgb(213,166,47)" fg:x="402" fg:w="1"/><text x="32.1042%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="30.9033%" y="421" width="1.1886%" height="15" fill="rgb(209,27,10)" fg:x="390" fg:w="15"/><text x="31.1533%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="31.4580%" y="405" width="0.6339%" height="15" fill="rgb(241,44,30)" fg:x="397" fg:w="8"/><text x="31.7080%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="31.9334%" y="389" width="0.1585%" height="15" fill="rgb(223,216,15)" fg:x="403" fg:w="2"/><text x="32.1834%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.0127%" y="373" width="0.0792%" height="15" fill="rgb(227,14,7)" fg:x="404" fg:w="1"/><text x="32.2627%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.0127%" y="357" width="0.0792%" height="15" fill="rgb(237,14,5)" fg:x="404" fg:w="1"/><text x="32.2627%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 1.98%)</title><rect x="30.2694%" y="437" width="1.9810%" height="15" fill="rgb(232,14,36)" fg:x="382" fg:w="25"/><text x="30.5194%" y="447.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="32.0919%" y="421" width="0.1585%" height="15" fill="rgb(234,0,38)" fg:x="405" fg:w="2"/><text x="32.3419%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (43 samples, 3.41%)</title><rect x="29.0016%" y="453" width="3.4073%" height="15" fill="rgb(207,170,14)" fg:x="366" fg:w="43"/><text x="29.2516%" y="463.50">ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="32.2504%" y="437" width="0.1585%" height="15" fill="rgb(252,45,13)" fg:x="407" fg:w="2"/><text x="32.5004%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.3296%" y="421" width="0.0792%" height="15" fill="rgb(213,142,7)" fg:x="408" fg:w="1"/><text x="32.5796%" y="431.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="32.5674%" y="373" width="0.0792%" height="15" fill="rgb(216,157,23)" fg:x="411" fg:w="1"/><text x="32.8174%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="32.5674%" y="357" width="0.0792%" height="15" fill="rgb(212,145,33)" fg:x="411" fg:w="1"/><text x="32.8174%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (61 samples, 4.83%)</title><rect x="28.1300%" y="469" width="4.8336%" height="15" fill="rgb(233,26,13)" fg:x="355" fg:w="61"/><text x="28.3800%" y="479.50">serde_..</text></g><g><title>std::io::Write::write_all (7 samples, 0.55%)</title><rect x="32.4089%" y="453" width="0.5547%" height="15" fill="rgb(219,196,19)" fg:x="409" fg:w="7"/><text x="32.6589%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.55%)</title><rect x="32.4089%" y="437" width="0.5547%" height="15" fill="rgb(246,56,21)" fg:x="409" fg:w="7"/><text x="32.6589%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="32.4881%" y="421" width="0.4754%" height="15" fill="rgb(222,28,53)" fg:x="410" fg:w="6"/><text x="32.7381%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="32.5674%" y="405" width="0.3962%" height="15" fill="rgb(224,5,27)" fg:x="411" fg:w="5"/><text x="32.8174%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="32.5674%" y="389" width="0.3962%" height="15" fill="rgb(220,153,33)" fg:x="411" fg:w="5"/><text x="32.8174%" y="399.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="32.6466%" y="373" width="0.3170%" height="15" fill="rgb(226,58,19)" fg:x="412" fg:w="4"/><text x="32.8966%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (72 samples, 5.71%)</title><rect x="27.3376%" y="485" width="5.7052%" height="15" fill="rgb(239,112,23)" fg:x="345" fg:w="72"/><text x="27.5876%" y="495.50">&lt;serde_..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.9635%" y="469" width="0.0792%" height="15" fill="rgb(251,213,20)" fg:x="416" fg:w="1"/><text x="33.2135%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.9635%" y="453" width="0.0792%" height="15" fill="rgb(215,181,21)" fg:x="416" fg:w="1"/><text x="33.2135%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.9635%" y="437" width="0.0792%" height="15" fill="rgb(240,8,35)" fg:x="416" fg:w="1"/><text x="33.2135%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2013%" y="453" width="0.0792%" height="15" fill="rgb(232,203,3)" fg:x="419" fg:w="1"/><text x="33.4513%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3597%" y="437" width="0.0792%" height="15" fill="rgb(214,202,43)" fg:x="421" fg:w="1"/><text x="33.6097%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="33.4390%" y="437" width="0.1585%" height="15" fill="rgb(254,35,11)" fg:x="422" fg:w="2"/><text x="33.6890%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.4390%" y="421" width="0.1585%" height="15" fill="rgb(239,173,13)" fg:x="422" fg:w="2"/><text x="33.6890%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.6767%" y="421" width="0.0792%" height="15" fill="rgb(220,141,0)" fg:x="425" fg:w="1"/><text x="33.9267%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.7559%" y="405" width="0.1585%" height="15" fill="rgb(210,98,12)" fg:x="426" fg:w="2"/><text x="34.0059%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.9144%" y="405" width="0.0792%" height="15" fill="rgb(254,153,22)" fg:x="428" fg:w="1"/><text x="34.1644%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="34.0729%" y="373" width="0.1585%" height="15" fill="rgb(247,223,17)" fg:x="430" fg:w="2"/><text x="34.3229%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="34.0729%" y="357" width="0.1585%" height="15" fill="rgb(246,56,7)" fg:x="430" fg:w="2"/><text x="34.3229%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.35%)</title><rect x="33.0428%" y="485" width="1.3471%" height="15" fill="rgb(240,226,12)" fg:x="417" fg:w="17"/><text x="33.2928%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.35%)</title><rect x="33.0428%" y="469" width="1.3471%" height="15" fill="rgb(205,87,46)" fg:x="417" fg:w="17"/><text x="33.2928%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.11%)</title><rect x="33.2805%" y="453" width="1.1094%" height="15" fill="rgb(245,214,51)" fg:x="420" fg:w="14"/><text x="33.5305%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.79%)</title><rect x="33.5975%" y="437" width="0.7924%" height="15" fill="rgb(223,172,33)" fg:x="424" fg:w="10"/><text x="33.8475%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="33.7559%" y="421" width="0.6339%" height="15" fill="rgb(227,203,34)" fg:x="426" fg:w="8"/><text x="34.0059%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="33.9937%" y="405" width="0.3962%" height="15" fill="rgb(248,143,44)" fg:x="429" fg:w="5"/><text x="34.2437%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="33.9937%" y="389" width="0.3962%" height="15" fill="rgb(226,162,5)" fg:x="429" fg:w="5"/><text x="34.2437%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="34.2314%" y="373" width="0.1585%" height="15" fill="rgb(211,143,1)" fg:x="432" fg:w="2"/><text x="34.4814%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="34.2314%" y="357" width="0.1585%" height="15" fill="rgb(224,96,15)" fg:x="432" fg:w="2"/><text x="34.4814%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.3106%" y="341" width="0.0792%" height="15" fill="rgb(222,4,38)" fg:x="433" fg:w="1"/><text x="34.5606%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="34.3899%" y="485" width="0.0792%" height="15" fill="rgb(253,228,15)" fg:x="434" fg:w="1"/><text x="34.6399%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="34.4691%" y="453" width="0.1585%" height="15" fill="rgb(242,194,12)" fg:x="435" fg:w="2"/><text x="34.7191%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="34.4691%" y="469" width="0.2377%" height="15" fill="rgb(214,177,31)" fg:x="435" fg:w="3"/><text x="34.7191%" y="479.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="34.6276%" y="453" width="0.0792%" height="15" fill="rgb(226,58,51)" fg:x="437" fg:w="1"/><text x="34.8776%" y="463.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="34.6276%" y="437" width="0.0792%" height="15" fill="rgb(250,119,16)" fg:x="437" fg:w="1"/><text x="34.8776%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8653%" y="437" width="0.0792%" height="15" fill="rgb(223,128,53)" fg:x="440" fg:w="1"/><text x="35.1153%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="34.9445%" y="437" width="0.1585%" height="15" fill="rgb(251,199,15)" fg:x="441" fg:w="2"/><text x="35.1945%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1030%" y="405" width="0.0792%" height="15" fill="rgb(235,168,42)" fg:x="443" fg:w="1"/><text x="35.3530%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="35.1030%" y="437" width="0.1585%" height="15" fill="rgb(250,210,17)" fg:x="443" fg:w="2"/><text x="35.3530%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.1030%" y="421" width="0.1585%" height="15" fill="rgb(226,36,41)" fg:x="443" fg:w="2"/><text x="35.3530%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.1823%" y="405" width="0.0792%" height="15" fill="rgb(225,87,10)" fg:x="444" fg:w="1"/><text x="35.4323%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.4992%" y="389" width="0.1585%" height="15" fill="rgb(228,83,9)" fg:x="448" fg:w="2"/><text x="35.7492%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.5784%" y="373" width="0.0792%" height="15" fill="rgb(225,16,36)" fg:x="449" fg:w="1"/><text x="35.8284%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.5784%" y="357" width="0.0792%" height="15" fill="rgb(242,198,13)" fg:x="449" fg:w="1"/><text x="35.8284%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.8162%" y="357" width="0.0792%" height="15" fill="rgb(239,25,51)" fg:x="452" fg:w="1"/><text x="36.0662%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8954%" y="341" width="0.0792%" height="15" fill="rgb(239,28,37)" fg:x="453" fg:w="1"/><text x="36.1454%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8954%" y="325" width="0.0792%" height="15" fill="rgb(234,70,17)" fg:x="453" fg:w="1"/><text x="36.1454%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.8954%" y="309" width="0.0792%" height="15" fill="rgb(231,215,53)" fg:x="453" fg:w="1"/><text x="36.1454%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="35.6577%" y="389" width="0.3962%" height="15" fill="rgb(218,140,42)" fg:x="450" fg:w="5"/><text x="35.9077%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="35.6577%" y="373" width="0.3962%" height="15" fill="rgb(233,227,45)" fg:x="450" fg:w="5"/><text x="35.9077%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="35.8954%" y="357" width="0.1585%" height="15" fill="rgb(225,189,21)" fg:x="453" fg:w="2"/><text x="36.1454%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.9746%" y="341" width="0.0792%" height="15" fill="rgb(237,176,54)" fg:x="454" fg:w="1"/><text x="36.2246%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9746%" y="325" width="0.0792%" height="15" fill="rgb(215,131,46)" fg:x="454" fg:w="1"/><text x="36.2246%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="36.2916%" y="373" width="0.1585%" height="15" fill="rgb(218,95,20)" fg:x="458" fg:w="2"/><text x="36.5416%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.4501%" y="373" width="0.0792%" height="15" fill="rgb(208,198,12)" fg:x="460" fg:w="1"/><text x="36.7001%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="36.6086%" y="357" width="0.2377%" height="15" fill="rgb(239,107,50)" fg:x="462" fg:w="3"/><text x="36.8586%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.6878%" y="341" width="0.1585%" height="15" fill="rgb(240,217,37)" fg:x="463" fg:w="2"/><text x="36.9378%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="36.6878%" y="325" width="0.1585%" height="15" fill="rgb(242,197,49)" fg:x="463" fg:w="2"/><text x="36.9378%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.9255%" y="341" width="0.0792%" height="15" fill="rgb(219,171,17)" fg:x="466" fg:w="1"/><text x="37.1755%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="37.2425%" y="293" width="0.2377%" height="15" fill="rgb(209,81,40)" fg:x="470" fg:w="3"/><text x="37.4925%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="37.2425%" y="277" width="0.2377%" height="15" fill="rgb(237,156,30)" fg:x="470" fg:w="3"/><text x="37.4925%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.3217%" y="261" width="0.1585%" height="15" fill="rgb(212,127,16)" fg:x="471" fg:w="2"/><text x="37.5717%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.7179%" y="277" width="0.0792%" height="15" fill="rgb(226,66,32)" fg:x="476" fg:w="1"/><text x="37.9679%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7179%" y="261" width="0.0792%" height="15" fill="rgb(245,22,46)" fg:x="476" fg:w="1"/><text x="37.9679%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7179%" y="245" width="0.0792%" height="15" fill="rgb(210,112,21)" fg:x="476" fg:w="1"/><text x="37.9679%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7179%" y="229" width="0.0792%" height="15" fill="rgb(207,118,39)" fg:x="476" fg:w="1"/><text x="37.9679%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.35%)</title><rect x="36.5293%" y="373" width="1.3471%" height="15" fill="rgb(205,206,35)" fg:x="461" fg:w="17"/><text x="36.7793%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.03%)</title><rect x="36.8463%" y="357" width="1.0301%" height="15" fill="rgb(222,120,2)" fg:x="465" fg:w="13"/><text x="37.0963%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.87%)</title><rect x="37.0048%" y="341" width="0.8716%" height="15" fill="rgb(205,38,18)" fg:x="467" fg:w="11"/><text x="37.2548%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.87%)</title><rect x="37.0048%" y="325" width="0.8716%" height="15" fill="rgb(226,61,2)" fg:x="467" fg:w="11"/><text x="37.2548%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.71%)</title><rect x="37.1632%" y="309" width="0.7132%" height="15" fill="rgb(242,161,23)" fg:x="469" fg:w="9"/><text x="37.4132%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="37.4802%" y="293" width="0.3962%" height="15" fill="rgb(213,13,52)" fg:x="473" fg:w="5"/><text x="37.7302%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7971%" y="277" width="0.0792%" height="15" fill="rgb(246,209,47)" fg:x="477" fg:w="1"/><text x="38.0471%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.8764%" y="373" width="0.1585%" height="15" fill="rgb(214,41,3)" fg:x="478" fg:w="2"/><text x="38.1264%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (34 samples, 2.69%)</title><rect x="35.4200%" y="405" width="2.6941%" height="15" fill="rgb(236,119,38)" fg:x="447" fg:w="34"/><text x="35.6700%" y="415.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (26 samples, 2.06%)</title><rect x="36.0539%" y="389" width="2.0602%" height="15" fill="rgb(218,50,11)" fg:x="455" fg:w="26"/><text x="36.3039%" y="399.50">s..</text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="38.0349%" y="373" width="0.0792%" height="15" fill="rgb(228,38,11)" fg:x="480" fg:w="1"/><text x="38.2849%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="38.0349%" y="357" width="0.0792%" height="15" fill="rgb(212,13,9)" fg:x="480" fg:w="1"/><text x="38.2849%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (36 samples, 2.85%)</title><rect x="35.4200%" y="421" width="2.8526%" height="15" fill="rgb(208,211,9)" fg:x="447" fg:w="36"/><text x="35.6700%" y="431.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="38.1141%" y="405" width="0.1585%" height="15" fill="rgb(239,39,32)" fg:x="481" fg:w="2"/><text x="38.3641%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.1141%" y="389" width="0.1585%" height="15" fill="rgb(254,179,26)" fg:x="481" fg:w="2"/><text x="38.3641%" y="399.50"></text></g><g><title>engine::session::Session::flush (144 samples, 11.41%)</title><rect x="27.0998%" y="581" width="11.4105%" height="15" fill="rgb(249,165,28)" fg:x="342" fg:w="144"/><text x="27.3498%" y="591.50">engine::session::..</text></g><g><title>engine::session::Session::save_changes (142 samples, 11.25%)</title><rect x="27.2583%" y="565" width="11.2520%" height="15" fill="rgb(225,59,50)" fg:x="344" fg:w="142"/><text x="27.5083%" y="575.50">engine::session::..</text></g><g><title>engine::session::state::State::close (142 samples, 11.25%)</title><rect x="27.2583%" y="549" width="11.2520%" height="15" fill="rgb(209,122,5)" fg:x="344" fg:w="142"/><text x="27.5083%" y="559.50">engine::session::..</text></g><g><title>engine::session::state::State::flush_entities (142 samples, 11.25%)</title><rect x="27.2583%" y="533" width="11.2520%" height="15" fill="rgb(214,65,34)" fg:x="344" fg:w="142"/><text x="27.5083%" y="543.50">engine::session::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (142 samples, 11.25%)</title><rect x="27.2583%" y="517" width="11.2520%" height="15" fill="rgb(249,183,32)" fg:x="344" fg:w="142"/><text x="27.5083%" y="527.50">engine::session::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (142 samples, 11.25%)</title><rect x="27.2583%" y="501" width="11.2520%" height="15" fill="rgb(218,122,24)" fg:x="344" fg:w="142"/><text x="27.5083%" y="511.50">engine::session::..</text></g><g><title>kernel::model::any_entity_changes (51 samples, 4.04%)</title><rect x="34.4691%" y="485" width="4.0412%" height="15" fill="rgb(224,109,18)" fg:x="435" fg:w="51"/><text x="34.7191%" y="495.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (48 samples, 3.80%)</title><rect x="34.7068%" y="469" width="3.8035%" height="15" fill="rgb(210,68,50)" fg:x="438" fg:w="48"/><text x="34.9568%" y="479.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 3.80%)</title><rect x="34.7068%" y="453" width="3.8035%" height="15" fill="rgb(212,184,34)" fg:x="438" fg:w="48"/><text x="34.9568%" y="463.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (41 samples, 3.25%)</title><rect x="35.2615%" y="437" width="3.2488%" height="15" fill="rgb(238,105,48)" fg:x="445" fg:w="41"/><text x="35.5115%" y="447.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="38.2726%" y="421" width="0.2377%" height="15" fill="rgb(222,134,54)" fg:x="483" fg:w="3"/><text x="38.5226%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="38.2726%" y="405" width="0.2377%" height="15" fill="rgb(246,24,43)" fg:x="483" fg:w="3"/><text x="38.5226%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.3518%" y="389" width="0.1585%" height="15" fill="rgb(227,169,22)" fg:x="484" fg:w="2"/><text x="38.6018%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="38.5895%" y="549" width="0.1585%" height="15" fill="rgb(253,152,4)" fg:x="487" fg:w="2"/><text x="38.8395%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="38.5895%" y="533" width="0.1585%" height="15" fill="rgb(219,158,36)" fg:x="487" fg:w="2"/><text x="38.8395%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="38.5895%" y="517" width="0.1585%" height="15" fill="rgb(251,128,40)" fg:x="487" fg:w="2"/><text x="38.8395%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="38.5895%" y="501" width="0.1585%" height="15" fill="rgb(254,101,39)" fg:x="487" fg:w="2"/><text x="38.8395%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="38.5895%" y="485" width="0.1585%" height="15" fill="rgb(221,168,40)" fg:x="487" fg:w="2"/><text x="38.8395%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.6688%" y="469" width="0.0792%" height="15" fill="rgb(221,14,27)" fg:x="488" fg:w="1"/><text x="38.9188%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.6688%" y="453" width="0.0792%" height="15" fill="rgb(207,36,43)" fg:x="488" fg:w="1"/><text x="38.9188%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="38.6688%" y="437" width="0.0792%" height="15" fill="rgb(240,172,53)" fg:x="488" fg:w="1"/><text x="38.9188%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="38.6688%" y="421" width="0.0792%" height="15" fill="rgb(241,138,43)" fg:x="488" fg:w="1"/><text x="38.9188%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="38.6688%" y="405" width="0.0792%" height="15" fill="rgb(227,78,19)" fg:x="488" fg:w="1"/><text x="38.9188%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="38.6688%" y="389" width="0.0792%" height="15" fill="rgb(215,127,44)" fg:x="488" fg:w="1"/><text x="38.9188%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.6688%" y="373" width="0.0792%" height="15" fill="rgb(227,13,10)" fg:x="488" fg:w="1"/><text x="38.9188%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (4 samples, 0.32%)</title><rect x="38.5103%" y="565" width="0.3170%" height="15" fill="rgb(249,177,6)" fg:x="486" fg:w="4"/><text x="38.7603%" y="575.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="38.7480%" y="549" width="0.0792%" height="15" fill="rgb(215,154,26)" fg:x="489" fg:w="1"/><text x="38.9980%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (6 samples, 0.48%)</title><rect x="38.5103%" y="581" width="0.4754%" height="15" fill="rgb(250,168,20)" fg:x="486" fg:w="6"/><text x="38.7603%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="38.8273%" y="565" width="0.1585%" height="15" fill="rgb(222,53,38)" fg:x="490" fg:w="2"/><text x="39.0773%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="38.9065%" y="549" width="0.0792%" height="15" fill="rgb(245,154,5)" fg:x="491" fg:w="1"/><text x="39.1565%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="38.9857%" y="533" width="0.0792%" height="15" fill="rgb(214,89,50)" fg:x="492" fg:w="1"/><text x="39.2357%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="38.9857%" y="517" width="0.0792%" height="15" fill="rgb(232,73,14)" fg:x="492" fg:w="1"/><text x="39.2357%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.9857%" y="501" width="0.0792%" height="15" fill="rgb(230,101,20)" fg:x="492" fg:w="1"/><text x="39.2357%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="38.9857%" y="485" width="0.0792%" height="15" fill="rgb(208,56,28)" fg:x="492" fg:w="1"/><text x="39.2357%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="38.9857%" y="549" width="0.2377%" height="15" fill="rgb(247,205,22)" fg:x="492" fg:w="3"/><text x="39.2357%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="39.0650%" y="533" width="0.1585%" height="15" fill="rgb(252,109,51)" fg:x="493" fg:w="2"/><text x="39.3150%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="39.0650%" y="517" width="0.1585%" height="15" fill="rgb(220,40,24)" fg:x="493" fg:w="2"/><text x="39.3150%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="39.0650%" y="501" width="0.1585%" height="15" fill="rgb(251,108,7)" fg:x="493" fg:w="2"/><text x="39.3150%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.0650%" y="485" width="0.1585%" height="15" fill="rgb(238,102,51)" fg:x="493" fg:w="2"/><text x="39.3150%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="39.0650%" y="469" width="0.1585%" height="15" fill="rgb(219,149,34)" fg:x="493" fg:w="2"/><text x="39.3150%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="39.0650%" y="453" width="0.1585%" height="15" fill="rgb(239,70,0)" fg:x="493" fg:w="2"/><text x="39.3150%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.1442%" y="437" width="0.0792%" height="15" fill="rgb(246,214,23)" fg:x="494" fg:w="1"/><text x="39.3942%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.1442%" y="421" width="0.0792%" height="15" fill="rgb(239,221,51)" fg:x="494" fg:w="1"/><text x="39.3942%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.1442%" y="405" width="0.0792%" height="15" fill="rgb(254,62,14)" fg:x="494" fg:w="1"/><text x="39.3942%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="39.1442%" y="389" width="0.0792%" height="15" fill="rgb(253,57,33)" fg:x="494" fg:w="1"/><text x="39.3942%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.1442%" y="373" width="0.0792%" height="15" fill="rgb(229,34,6)" fg:x="494" fg:w="1"/><text x="39.3942%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.1442%" y="357" width="0.0792%" height="15" fill="rgb(235,191,23)" fg:x="494" fg:w="1"/><text x="39.3942%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.1442%" y="341" width="0.0792%" height="15" fill="rgb(217,207,27)" fg:x="494" fg:w="1"/><text x="39.3942%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.1442%" y="325" width="0.0792%" height="15" fill="rgb(232,41,44)" fg:x="494" fg:w="1"/><text x="39.3942%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.1442%" y="309" width="0.0792%" height="15" fill="rgb(221,188,19)" fg:x="494" fg:w="1"/><text x="39.3942%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.1442%" y="293" width="0.0792%" height="15" fill="rgb(245,180,45)" fg:x="494" fg:w="1"/><text x="39.3942%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.1442%" y="277" width="0.0792%" height="15" fill="rgb(250,220,42)" fg:x="494" fg:w="1"/><text x="39.3942%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.1442%" y="261" width="0.0792%" height="15" fill="rgb(234,16,34)" fg:x="494" fg:w="1"/><text x="39.3942%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.1442%" y="245" width="0.0792%" height="15" fill="rgb(233,217,23)" fg:x="494" fg:w="1"/><text x="39.3942%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.1442%" y="229" width="0.0792%" height="15" fill="rgb(209,22,46)" fg:x="494" fg:w="1"/><text x="39.3942%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.1442%" y="213" width="0.0792%" height="15" fill="rgb(213,101,18)" fg:x="494" fg:w="1"/><text x="39.3942%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.1442%" y="197" width="0.0792%" height="15" fill="rgb(215,179,52)" fg:x="494" fg:w="1"/><text x="39.3942%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="39.1442%" y="181" width="0.0792%" height="15" fill="rgb(223,50,25)" fg:x="494" fg:w="1"/><text x="39.3942%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.1442%" y="165" width="0.0792%" height="15" fill="rgb(224,51,44)" fg:x="494" fg:w="1"/><text x="39.3942%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="39.1442%" y="149" width="0.0792%" height="15" fill="rgb(224,13,54)" fg:x="494" fg:w="1"/><text x="39.3942%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="39.1442%" y="133" width="0.0792%" height="15" fill="rgb(219,58,47)" fg:x="494" fg:w="1"/><text x="39.3942%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="39.1442%" y="117" width="0.0792%" height="15" fill="rgb(246,124,34)" fg:x="494" fg:w="1"/><text x="39.3942%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.1442%" y="101" width="0.0792%" height="15" fill="rgb(245,109,25)" fg:x="494" fg:w="1"/><text x="39.3942%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3027%" y="469" width="0.0792%" height="15" fill="rgb(235,48,23)" fg:x="496" fg:w="1"/><text x="39.5527%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3027%" y="453" width="0.0792%" height="15" fill="rgb(229,203,36)" fg:x="496" fg:w="1"/><text x="39.5527%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3027%" y="437" width="0.0792%" height="15" fill="rgb(234,180,9)" fg:x="496" fg:w="1"/><text x="39.5527%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3027%" y="421" width="0.0792%" height="15" fill="rgb(228,98,45)" fg:x="496" fg:w="1"/><text x="39.5527%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.3027%" y="501" width="0.1585%" height="15" fill="rgb(240,24,36)" fg:x="496" fg:w="2"/><text x="39.5527%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.3027%" y="485" width="0.1585%" height="15" fill="rgb(227,154,19)" fg:x="496" fg:w="2"/><text x="39.5527%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3819%" y="469" width="0.0792%" height="15" fill="rgb(231,2,48)" fg:x="497" fg:w="1"/><text x="39.6319%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.4612%" y="437" width="0.0792%" height="15" fill="rgb(219,216,0)" fg:x="498" fg:w="1"/><text x="39.7112%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="39.2235%" y="549" width="0.3962%" height="15" fill="rgb(251,88,0)" fg:x="495" fg:w="5"/><text x="39.4735%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="39.2235%" y="533" width="0.3962%" height="15" fill="rgb(242,45,45)" fg:x="495" fg:w="5"/><text x="39.4735%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="39.2235%" y="517" width="0.3962%" height="15" fill="rgb(218,149,45)" fg:x="495" fg:w="5"/><text x="39.4735%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.4612%" y="501" width="0.1585%" height="15" fill="rgb(247,194,10)" fg:x="498" fg:w="2"/><text x="39.7112%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.4612%" y="485" width="0.1585%" height="15" fill="rgb(234,33,37)" fg:x="498" fg:w="2"/><text x="39.7112%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.4612%" y="469" width="0.1585%" height="15" fill="rgb(218,61,13)" fg:x="498" fg:w="2"/><text x="39.7112%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.4612%" y="453" width="0.1585%" height="15" fill="rgb(210,80,52)" fg:x="498" fg:w="2"/><text x="39.7112%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.5404%" y="437" width="0.0792%" height="15" fill="rgb(218,203,27)" fg:x="499" fg:w="1"/><text x="39.7904%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.5404%" y="421" width="0.0792%" height="15" fill="rgb(209,126,33)" fg:x="499" fg:w="1"/><text x="39.7904%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6197%" y="517" width="0.0792%" height="15" fill="rgb(234,173,41)" fg:x="500" fg:w="1"/><text x="39.8697%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6197%" y="501" width="0.0792%" height="15" fill="rgb(228,166,9)" fg:x="500" fg:w="1"/><text x="39.8697%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6197%" y="485" width="0.0792%" height="15" fill="rgb(208,124,43)" fg:x="500" fg:w="1"/><text x="39.8697%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.6197%" y="469" width="0.0792%" height="15" fill="rgb(212,154,38)" fg:x="500" fg:w="1"/><text x="39.8697%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.6197%" y="453" width="0.0792%" height="15" fill="rgb(246,179,35)" fg:x="500" fg:w="1"/><text x="39.8697%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.6197%" y="437" width="0.0792%" height="15" fill="rgb(251,3,50)" fg:x="500" fg:w="1"/><text x="39.8697%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.6197%" y="421" width="0.0792%" height="15" fill="rgb(219,96,8)" fg:x="500" fg:w="1"/><text x="39.8697%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.6197%" y="405" width="0.0792%" height="15" fill="rgb(251,216,33)" fg:x="500" fg:w="1"/><text x="39.8697%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="39.6989%" y="501" width="0.0792%" height="15" fill="rgb(243,145,29)" fg:x="501" fg:w="1"/><text x="39.9489%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.6989%" y="485" width="0.0792%" height="15" fill="rgb(210,75,20)" fg:x="501" fg:w="1"/><text x="39.9489%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.6989%" y="469" width="0.0792%" height="15" fill="rgb(235,56,8)" fg:x="501" fg:w="1"/><text x="39.9489%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.6989%" y="453" width="0.0792%" height="15" fill="rgb(226,175,49)" fg:x="501" fg:w="1"/><text x="39.9489%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.6989%" y="437" width="0.0792%" height="15" fill="rgb(242,204,23)" fg:x="501" fg:w="1"/><text x="39.9489%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="39.6197%" y="533" width="0.2377%" height="15" fill="rgb(225,104,24)" fg:x="500" fg:w="3"/><text x="39.8697%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.6989%" y="517" width="0.1585%" height="15" fill="rgb(253,34,1)" fg:x="501" fg:w="2"/><text x="39.9489%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7781%" y="501" width="0.0792%" height="15" fill="rgb(233,199,23)" fg:x="502" fg:w="1"/><text x="40.0281%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7781%" y="485" width="0.0792%" height="15" fill="rgb(247,7,51)" fg:x="502" fg:w="1"/><text x="40.0281%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7781%" y="469" width="0.0792%" height="15" fill="rgb(214,146,12)" fg:x="502" fg:w="1"/><text x="40.0281%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7781%" y="453" width="0.0792%" height="15" fill="rgb(234,181,43)" fg:x="502" fg:w="1"/><text x="40.0281%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="39.7781%" y="437" width="0.0792%" height="15" fill="rgb(239,148,6)" fg:x="502" fg:w="1"/><text x="40.0281%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="39.6197%" y="549" width="0.3962%" height="15" fill="rgb(206,151,17)" fg:x="500" fg:w="5"/><text x="39.8697%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="39.8574%" y="533" width="0.1585%" height="15" fill="rgb(213,215,10)" fg:x="503" fg:w="2"/><text x="40.1074%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="39.8574%" y="517" width="0.1585%" height="15" fill="rgb(215,220,44)" fg:x="503" fg:w="2"/><text x="40.1074%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.8574%" y="501" width="0.1585%" height="15" fill="rgb(245,205,37)" fg:x="503" fg:w="2"/><text x="40.1074%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="39.9366%" y="485" width="0.0792%" height="15" fill="rgb(245,130,43)" fg:x="504" fg:w="1"/><text x="40.1866%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9366%" y="469" width="0.0792%" height="15" fill="rgb(231,227,38)" fg:x="504" fg:w="1"/><text x="40.1866%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="40.0158%" y="501" width="0.0792%" height="15" fill="rgb(233,185,4)" fg:x="505" fg:w="1"/><text x="40.2658%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="40.0158%" y="485" width="0.0792%" height="15" fill="rgb(224,154,43)" fg:x="505" fg:w="1"/><text x="40.2658%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0158%" y="469" width="0.0792%" height="15" fill="rgb(235,156,15)" fg:x="505" fg:w="1"/><text x="40.2658%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0158%" y="453" width="0.0792%" height="15" fill="rgb(211,55,43)" fg:x="505" fg:w="1"/><text x="40.2658%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0158%" y="437" width="0.0792%" height="15" fill="rgb(247,149,40)" fg:x="505" fg:w="1"/><text x="40.2658%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0158%" y="421" width="0.0792%" height="15" fill="rgb(232,171,16)" fg:x="505" fg:w="1"/><text x="40.2658%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.0158%" y="405" width="0.0792%" height="15" fill="rgb(215,117,49)" fg:x="505" fg:w="1"/><text x="40.2658%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0158%" y="389" width="0.0792%" height="15" fill="rgb(246,194,11)" fg:x="505" fg:w="1"/><text x="40.2658%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0158%" y="373" width="0.0792%" height="15" fill="rgb(242,101,44)" fg:x="505" fg:w="1"/><text x="40.2658%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0158%" y="357" width="0.0792%" height="15" fill="rgb(226,174,6)" fg:x="505" fg:w="1"/><text x="40.2658%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0951%" y="485" width="0.0792%" height="15" fill="rgb(213,150,20)" fg:x="506" fg:w="1"/><text x="40.3451%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.2536%" y="421" width="0.0792%" height="15" fill="rgb(222,124,42)" fg:x="508" fg:w="1"/><text x="40.5036%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.2536%" y="405" width="0.0792%" height="15" fill="rgb(250,19,47)" fg:x="508" fg:w="1"/><text x="40.5036%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.2536%" y="469" width="0.1585%" height="15" fill="rgb(241,217,19)" fg:x="508" fg:w="2"/><text x="40.5036%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.2536%" y="453" width="0.1585%" height="15" fill="rgb(207,210,34)" fg:x="508" fg:w="2"/><text x="40.5036%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.2536%" y="437" width="0.1585%" height="15" fill="rgb(244,45,4)" fg:x="508" fg:w="2"/><text x="40.5036%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3328%" y="421" width="0.0792%" height="15" fill="rgb(252,134,50)" fg:x="509" fg:w="1"/><text x="40.5828%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3328%" y="405" width="0.0792%" height="15" fill="rgb(238,74,2)" fg:x="509" fg:w="1"/><text x="40.5828%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.3328%" y="389" width="0.0792%" height="15" fill="rgb(226,58,46)" fg:x="509" fg:w="1"/><text x="40.5828%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.3328%" y="373" width="0.0792%" height="15" fill="rgb(232,83,35)" fg:x="509" fg:w="1"/><text x="40.5828%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.3328%" y="357" width="0.0792%" height="15" fill="rgb(212,148,47)" fg:x="509" fg:w="1"/><text x="40.5828%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3328%" y="341" width="0.0792%" height="15" fill="rgb(235,29,1)" fg:x="509" fg:w="1"/><text x="40.5828%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3328%" y="325" width="0.0792%" height="15" fill="rgb(247,55,37)" fg:x="509" fg:w="1"/><text x="40.5828%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.3328%" y="309" width="0.0792%" height="15" fill="rgb(222,48,3)" fg:x="509" fg:w="1"/><text x="40.5828%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.3328%" y="293" width="0.0792%" height="15" fill="rgb(234,21,33)" fg:x="509" fg:w="1"/><text x="40.5828%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.3328%" y="277" width="0.0792%" height="15" fill="rgb(247,178,53)" fg:x="509" fg:w="1"/><text x="40.5828%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.3328%" y="261" width="0.0792%" height="15" fill="rgb(225,75,7)" fg:x="509" fg:w="1"/><text x="40.5828%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3328%" y="245" width="0.0792%" height="15" fill="rgb(219,199,7)" fg:x="509" fg:w="1"/><text x="40.5828%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.4120%" y="469" width="0.0792%" height="15" fill="rgb(209,93,42)" fg:x="510" fg:w="1"/><text x="40.6620%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.4120%" y="453" width="0.0792%" height="15" fill="rgb(240,175,17)" fg:x="510" fg:w="1"/><text x="40.6620%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.4120%" y="437" width="0.0792%" height="15" fill="rgb(232,106,7)" fg:x="510" fg:w="1"/><text x="40.6620%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.4120%" y="421" width="0.0792%" height="15" fill="rgb(242,106,43)" fg:x="510" fg:w="1"/><text x="40.6620%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.4120%" y="405" width="0.0792%" height="15" fill="rgb(242,61,37)" fg:x="510" fg:w="1"/><text x="40.6620%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4913%" y="389" width="0.0792%" height="15" fill="rgb(205,72,10)" fg:x="511" fg:w="1"/><text x="40.7413%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4913%" y="373" width="0.0792%" height="15" fill="rgb(214,184,36)" fg:x="511" fg:w="1"/><text x="40.7413%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4913%" y="357" width="0.0792%" height="15" fill="rgb(206,107,18)" fg:x="511" fg:w="1"/><text x="40.7413%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (21 samples, 1.66%)</title><rect x="38.9857%" y="565" width="1.6640%" height="15" fill="rgb(210,75,5)" fg:x="492" fg:w="21"/><text x="39.2357%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.63%)</title><rect x="40.0158%" y="549" width="0.6339%" height="15" fill="rgb(205,3,19)" fg:x="505" fg:w="8"/><text x="40.2658%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.63%)</title><rect x="40.0158%" y="533" width="0.6339%" height="15" fill="rgb(207,181,42)" fg:x="505" fg:w="8"/><text x="40.2658%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (8 samples, 0.63%)</title><rect x="40.0158%" y="517" width="0.6339%" height="15" fill="rgb(229,179,43)" fg:x="505" fg:w="8"/><text x="40.2658%" y="527.50"></text></g><g><title>kernel::model::props::save_props (7 samples, 0.55%)</title><rect x="40.0951%" y="501" width="0.5547%" height="15" fill="rgb(246,95,30)" fg:x="506" fg:w="7"/><text x="40.3451%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="40.1743%" y="485" width="0.4754%" height="15" fill="rgb(234,144,45)" fg:x="507" fg:w="6"/><text x="40.4243%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="40.4913%" y="469" width="0.1585%" height="15" fill="rgb(250,54,25)" fg:x="511" fg:w="2"/><text x="40.7413%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="40.4913%" y="453" width="0.1585%" height="15" fill="rgb(215,195,40)" fg:x="511" fg:w="2"/><text x="40.7413%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="40.4913%" y="437" width="0.1585%" height="15" fill="rgb(233,188,42)" fg:x="511" fg:w="2"/><text x="40.7413%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="40.4913%" y="421" width="0.1585%" height="15" fill="rgb(247,227,35)" fg:x="511" fg:w="2"/><text x="40.7413%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="40.4913%" y="405" width="0.1585%" height="15" fill="rgb(249,124,27)" fg:x="511" fg:w="2"/><text x="40.7413%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="40.5705%" y="389" width="0.0792%" height="15" fill="rgb(219,207,25)" fg:x="512" fg:w="1"/><text x="40.8205%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="40.7290%" y="501" width="0.0792%" height="15" fill="rgb(241,216,47)" fg:x="514" fg:w="1"/><text x="40.9790%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.7290%" y="485" width="0.0792%" height="15" fill="rgb(233,82,50)" fg:x="514" fg:w="1"/><text x="40.9790%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.8875%" y="437" width="0.1585%" height="15" fill="rgb(232,63,2)" fg:x="516" fg:w="2"/><text x="41.1375%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.8875%" y="421" width="0.1585%" height="15" fill="rgb(236,184,28)" fg:x="516" fg:w="2"/><text x="41.1375%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9667%" y="405" width="0.0792%" height="15" fill="rgb(254,63,27)" fg:x="517" fg:w="1"/><text x="41.2167%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9667%" y="389" width="0.0792%" height="15" fill="rgb(253,106,28)" fg:x="517" fg:w="1"/><text x="41.2167%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9667%" y="373" width="0.0792%" height="15" fill="rgb(225,141,39)" fg:x="517" fg:w="1"/><text x="41.2167%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.9667%" y="357" width="0.0792%" height="15" fill="rgb(222,157,20)" fg:x="517" fg:w="1"/><text x="41.2167%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.9667%" y="341" width="0.0792%" height="15" fill="rgb(210,190,9)" fg:x="517" fg:w="1"/><text x="41.2167%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.9667%" y="325" width="0.0792%" height="15" fill="rgb(242,167,7)" fg:x="517" fg:w="1"/><text x="41.2167%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="40.9667%" y="309" width="0.0792%" height="15" fill="rgb(227,82,41)" fg:x="517" fg:w="1"/><text x="41.2167%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.9667%" y="293" width="0.0792%" height="15" fill="rgb(222,131,13)" fg:x="517" fg:w="1"/><text x="41.2167%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="40.8875%" y="453" width="0.3170%" height="15" fill="rgb(221,98,26)" fg:x="516" fg:w="4"/><text x="41.1375%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.0460%" y="437" width="0.1585%" height="15" fill="rgb(251,63,52)" fg:x="518" fg:w="2"/><text x="41.2960%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="40.8875%" y="469" width="0.3962%" height="15" fill="rgb(246,25,43)" fg:x="516" fg:w="5"/><text x="41.1375%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.2044%" y="453" width="0.0792%" height="15" fill="rgb(247,167,15)" fg:x="520" fg:w="1"/><text x="41.4544%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.2837%" y="437" width="0.0792%" height="15" fill="rgb(240,104,42)" fg:x="521" fg:w="1"/><text x="41.5337%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.2837%" y="469" width="0.1585%" height="15" fill="rgb(224,54,6)" fg:x="521" fg:w="2"/><text x="41.5337%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="41.2837%" y="453" width="0.1585%" height="15" fill="rgb(244,108,35)" fg:x="521" fg:w="2"/><text x="41.5337%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.3629%" y="437" width="0.0792%" height="15" fill="rgb(216,154,2)" fg:x="522" fg:w="1"/><text x="41.6129%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.3629%" y="421" width="0.0792%" height="15" fill="rgb(222,8,47)" fg:x="522" fg:w="1"/><text x="41.6129%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.3629%" y="405" width="0.0792%" height="15" fill="rgb(252,93,1)" fg:x="522" fg:w="1"/><text x="41.6129%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5214%" y="373" width="0.0792%" height="15" fill="rgb(223,226,51)" fg:x="524" fg:w="1"/><text x="41.7714%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (12 samples, 0.95%)</title><rect x="40.7290%" y="517" width="0.9509%" height="15" fill="rgb(206,147,9)" fg:x="514" fg:w="12"/><text x="40.9790%" y="527.50"></text></g><g><title>kernel::model::props::load_props (11 samples, 0.87%)</title><rect x="40.8082%" y="501" width="0.8716%" height="15" fill="rgb(248,180,41)" fg:x="515" fg:w="11"/><text x="41.0582%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.87%)</title><rect x="40.8082%" y="485" width="0.8716%" height="15" fill="rgb(209,47,50)" fg:x="515" fg:w="11"/><text x="41.0582%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.4422%" y="469" width="0.2377%" height="15" fill="rgb(243,65,31)" fg:x="523" fg:w="3"/><text x="41.6922%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.4422%" y="453" width="0.2377%" height="15" fill="rgb(228,128,1)" fg:x="523" fg:w="3"/><text x="41.6922%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.4422%" y="437" width="0.2377%" height="15" fill="rgb(231,192,16)" fg:x="523" fg:w="3"/><text x="41.6922%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.4422%" y="421" width="0.2377%" height="15" fill="rgb(224,26,40)" fg:x="523" fg:w="3"/><text x="41.6922%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.5214%" y="405" width="0.1585%" height="15" fill="rgb(214,192,17)" fg:x="524" fg:w="2"/><text x="41.7714%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.5214%" y="389" width="0.1585%" height="15" fill="rgb(225,147,18)" fg:x="524" fg:w="2"/><text x="41.7714%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.6006%" y="373" width="0.0792%" height="15" fill="rgb(205,35,11)" fg:x="525" fg:w="1"/><text x="41.8506%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.6006%" y="357" width="0.0792%" height="15" fill="rgb(242,40,42)" fg:x="525" fg:w="1"/><text x="41.8506%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.6006%" y="341" width="0.0792%" height="15" fill="rgb(250,170,13)" fg:x="525" fg:w="1"/><text x="41.8506%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.6006%" y="325" width="0.0792%" height="15" fill="rgb(240,161,28)" fg:x="525" fg:w="1"/><text x="41.8506%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.6006%" y="309" width="0.0792%" height="15" fill="rgb(245,179,12)" fg:x="525" fg:w="1"/><text x="41.8506%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (16 samples, 1.27%)</title><rect x="40.7290%" y="549" width="1.2678%" height="15" fill="rgb(250,92,32)" fg:x="514" fg:w="16"/><text x="40.9790%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (16 samples, 1.27%)</title><rect x="40.7290%" y="533" width="1.2678%" height="15" fill="rgb(233,10,40)" fg:x="514" fg:w="16"/><text x="40.9790%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="41.6799%" y="517" width="0.3170%" height="15" fill="rgb(217,98,1)" fg:x="526" fg:w="4"/><text x="41.9299%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="41.6799%" y="501" width="0.3170%" height="15" fill="rgb(238,202,7)" fg:x="526" fg:w="4"/><text x="41.9299%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="41.6799%" y="485" width="0.3170%" height="15" fill="rgb(222,91,3)" fg:x="526" fg:w="4"/><text x="41.9299%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="41.6799%" y="469" width="0.3170%" height="15" fill="rgb(211,170,49)" fg:x="526" fg:w="4"/><text x="41.9299%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="41.6799%" y="453" width="0.3170%" height="15" fill="rgb(253,139,18)" fg:x="526" fg:w="4"/><text x="41.9299%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.7591%" y="437" width="0.2377%" height="15" fill="rgb(222,4,43)" fg:x="527" fg:w="3"/><text x="42.0091%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8384%" y="421" width="0.1585%" height="15" fill="rgb(207,205,12)" fg:x="528" fg:w="2"/><text x="42.0884%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.8384%" y="405" width="0.1585%" height="15" fill="rgb(216,159,46)" fg:x="528" fg:w="2"/><text x="42.0884%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8384%" y="389" width="0.1585%" height="15" fill="rgb(236,115,1)" fg:x="528" fg:w="2"/><text x="42.0884%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.8384%" y="373" width="0.1585%" height="15" fill="rgb(251,35,33)" fg:x="528" fg:w="2"/><text x="42.0884%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8384%" y="357" width="0.1585%" height="15" fill="rgb(248,62,51)" fg:x="528" fg:w="2"/><text x="42.0884%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="41.9968%" y="549" width="0.0792%" height="15" fill="rgb(254,180,19)" fg:x="530" fg:w="1"/><text x="42.2468%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.9968%" y="533" width="0.0792%" height="15" fill="rgb(217,100,32)" fg:x="530" fg:w="1"/><text x="42.2468%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.9968%" y="517" width="0.0792%" height="15" fill="rgb(224,71,22)" fg:x="530" fg:w="1"/><text x="42.2468%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0761%" y="501" width="0.0792%" height="15" fill="rgb(251,185,33)" fg:x="531" fg:w="1"/><text x="42.3261%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="42.0761%" y="533" width="0.1585%" height="15" fill="rgb(209,75,48)" fg:x="531" fg:w="2"/><text x="42.3261%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.0761%" y="517" width="0.1585%" height="15" fill="rgb(253,190,16)" fg:x="531" fg:w="2"/><text x="42.3261%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.1553%" y="501" width="0.0792%" height="15" fill="rgb(226,140,1)" fg:x="532" fg:w="1"/><text x="42.4053%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="42.1553%" y="485" width="0.0792%" height="15" fill="rgb(206,75,30)" fg:x="532" fg:w="1"/><text x="42.4053%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.1553%" y="469" width="0.0792%" height="15" fill="rgb(231,208,37)" fg:x="532" fg:w="1"/><text x="42.4053%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="42.0761%" y="549" width="0.2377%" height="15" fill="rgb(238,136,40)" fg:x="531" fg:w="3"/><text x="42.3261%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="42.2345%" y="533" width="0.0792%" height="15" fill="rgb(247,137,17)" fg:x="533" fg:w="1"/><text x="42.4845%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.2345%" y="517" width="0.0792%" height="15" fill="rgb(240,60,40)" fg:x="533" fg:w="1"/><text x="42.4845%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="42.2345%" y="501" width="0.0792%" height="15" fill="rgb(236,68,50)" fg:x="533" fg:w="1"/><text x="42.4845%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.2345%" y="485" width="0.0792%" height="15" fill="rgb(230,42,12)" fg:x="533" fg:w="1"/><text x="42.4845%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2345%" y="469" width="0.0792%" height="15" fill="rgb(219,16,16)" fg:x="533" fg:w="1"/><text x="42.4845%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2345%" y="453" width="0.0792%" height="15" fill="rgb(220,38,35)" fg:x="533" fg:w="1"/><text x="42.4845%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.2345%" y="437" width="0.0792%" height="15" fill="rgb(228,33,1)" fg:x="533" fg:w="1"/><text x="42.4845%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3138%" y="501" width="0.0792%" height="15" fill="rgb(241,46,31)" fg:x="534" fg:w="1"/><text x="42.5638%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3138%" y="485" width="0.0792%" height="15" fill="rgb(232,58,20)" fg:x="534" fg:w="1"/><text x="42.5638%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.3138%" y="469" width="0.0792%" height="15" fill="rgb(206,228,53)" fg:x="534" fg:w="1"/><text x="42.5638%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.3138%" y="453" width="0.0792%" height="15" fill="rgb(206,88,33)" fg:x="534" fg:w="1"/><text x="42.5638%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.3138%" y="437" width="0.0792%" height="15" fill="rgb(238,69,7)" fg:x="534" fg:w="1"/><text x="42.5638%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.3138%" y="421" width="0.0792%" height="15" fill="rgb(250,21,46)" fg:x="534" fg:w="1"/><text x="42.5638%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.3138%" y="405" width="0.0792%" height="15" fill="rgb(215,212,21)" fg:x="534" fg:w="1"/><text x="42.5638%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.3138%" y="389" width="0.0792%" height="15" fill="rgb(211,35,12)" fg:x="534" fg:w="1"/><text x="42.5638%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.3138%" y="373" width="0.0792%" height="15" fill="rgb(231,184,16)" fg:x="534" fg:w="1"/><text x="42.5638%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.3138%" y="357" width="0.0792%" height="15" fill="rgb(242,140,15)" fg:x="534" fg:w="1"/><text x="42.5638%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.3138%" y="341" width="0.0792%" height="15" fill="rgb(220,37,14)" fg:x="534" fg:w="1"/><text x="42.5638%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.3138%" y="325" width="0.0792%" height="15" fill="rgb(223,146,22)" fg:x="534" fg:w="1"/><text x="42.5638%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3930%" y="405" width="0.0792%" height="15" fill="rgb(216,132,15)" fg:x="535" fg:w="1"/><text x="42.6430%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.3930%" y="389" width="0.0792%" height="15" fill="rgb(248,83,5)" fg:x="535" fg:w="1"/><text x="42.6430%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.3930%" y="421" width="0.1585%" height="15" fill="rgb(231,206,48)" fg:x="535" fg:w="2"/><text x="42.6430%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4723%" y="405" width="0.0792%" height="15" fill="rgb(253,185,37)" fg:x="536" fg:w="1"/><text x="42.7223%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="42.3930%" y="437" width="0.2377%" height="15" fill="rgb(208,21,44)" fg:x="535" fg:w="3"/><text x="42.6430%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.5515%" y="421" width="0.0792%" height="15" fill="rgb(236,125,4)" fg:x="537" fg:w="1"/><text x="42.8015%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6307%" y="437" width="0.0792%" height="15" fill="rgb(226,134,25)" fg:x="538" fg:w="1"/><text x="42.8807%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6307%" y="421" width="0.0792%" height="15" fill="rgb(250,201,12)" fg:x="538" fg:w="1"/><text x="42.8807%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.6307%" y="405" width="0.0792%" height="15" fill="rgb(225,92,18)" fg:x="538" fg:w="1"/><text x="42.8807%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.6307%" y="389" width="0.0792%" height="15" fill="rgb(227,35,22)" fg:x="538" fg:w="1"/><text x="42.8807%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.6307%" y="373" width="0.0792%" height="15" fill="rgb(214,180,52)" fg:x="538" fg:w="1"/><text x="42.8807%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.6307%" y="357" width="0.0792%" height="15" fill="rgb(233,55,38)" fg:x="538" fg:w="1"/><text x="42.8807%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.6307%" y="341" width="0.0792%" height="15" fill="rgb(249,171,43)" fg:x="538" fg:w="1"/><text x="42.8807%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.6307%" y="325" width="0.0792%" height="15" fill="rgb(239,87,2)" fg:x="538" fg:w="1"/><text x="42.8807%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.6307%" y="309" width="0.0792%" height="15" fill="rgb(248,141,5)" fg:x="538" fg:w="1"/><text x="42.8807%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.6307%" y="293" width="0.0792%" height="15" fill="rgb(238,33,42)" fg:x="538" fg:w="1"/><text x="42.8807%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.6307%" y="277" width="0.0792%" height="15" fill="rgb(231,57,19)" fg:x="538" fg:w="1"/><text x="42.8807%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.6307%" y="261" width="0.0792%" height="15" fill="rgb(214,78,53)" fg:x="538" fg:w="1"/><text x="42.8807%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="42.3930%" y="453" width="0.3962%" height="15" fill="rgb(206,132,29)" fg:x="535" fg:w="5"/><text x="42.6430%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7100%" y="437" width="0.0792%" height="15" fill="rgb(248,174,31)" fg:x="539" fg:w="1"/><text x="42.9600%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.8685%" y="325" width="0.0792%" height="15" fill="rgb(221,87,13)" fg:x="541" fg:w="1"/><text x="43.1185%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.71%)</title><rect x="42.3930%" y="501" width="0.7132%" height="15" fill="rgb(223,197,17)" fg:x="535" fg:w="9"/><text x="42.6430%" y="511.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.71%)</title><rect x="42.3930%" y="485" width="0.7132%" height="15" fill="rgb(220,144,50)" fg:x="535" fg:w="9"/><text x="42.6430%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.71%)</title><rect x="42.3930%" y="469" width="0.7132%" height="15" fill="rgb(244,201,11)" fg:x="535" fg:w="9"/><text x="42.6430%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="42.7892%" y="453" width="0.3170%" height="15" fill="rgb(249,81,34)" fg:x="540" fg:w="4"/><text x="43.0392%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="42.7892%" y="437" width="0.3170%" height="15" fill="rgb(205,161,12)" fg:x="540" fg:w="4"/><text x="43.0392%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="42.7892%" y="421" width="0.3170%" height="15" fill="rgb(252,139,50)" fg:x="540" fg:w="4"/><text x="43.0392%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="42.7892%" y="405" width="0.3170%" height="15" fill="rgb(205,169,14)" fg:x="540" fg:w="4"/><text x="43.0392%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="42.7892%" y="389" width="0.3170%" height="15" fill="rgb(248,198,33)" fg:x="540" fg:w="4"/><text x="43.0392%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="42.7892%" y="373" width="0.3170%" height="15" fill="rgb(236,23,21)" fg:x="540" fg:w="4"/><text x="43.0392%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="42.7892%" y="357" width="0.3170%" height="15" fill="rgb(231,13,38)" fg:x="540" fg:w="4"/><text x="43.0392%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="42.7892%" y="341" width="0.3170%" height="15" fill="rgb(239,139,21)" fg:x="540" fg:w="4"/><text x="43.0392%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.9477%" y="325" width="0.1585%" height="15" fill="rgb(222,164,45)" fg:x="542" fg:w="2"/><text x="43.1977%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.9477%" y="309" width="0.1585%" height="15" fill="rgb(230,52,27)" fg:x="542" fg:w="2"/><text x="43.1977%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="42.9477%" y="293" width="0.1585%" height="15" fill="rgb(227,143,42)" fg:x="542" fg:w="2"/><text x="43.1977%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="42.9477%" y="277" width="0.1585%" height="15" fill="rgb(249,127,1)" fg:x="542" fg:w="2"/><text x="43.1977%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.1854%" y="389" width="0.1585%" height="15" fill="rgb(243,107,26)" fg:x="545" fg:w="2"/><text x="43.4354%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2647%" y="373" width="0.0792%" height="15" fill="rgb(225,7,45)" fg:x="546" fg:w="1"/><text x="43.5147%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.1854%" y="453" width="0.2377%" height="15" fill="rgb(241,88,38)" fg:x="545" fg:w="3"/><text x="43.4354%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.1854%" y="437" width="0.2377%" height="15" fill="rgb(226,121,9)" fg:x="545" fg:w="3"/><text x="43.4354%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.1854%" y="421" width="0.2377%" height="15" fill="rgb(253,60,29)" fg:x="545" fg:w="3"/><text x="43.4354%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.1854%" y="405" width="0.2377%" height="15" fill="rgb(244,181,39)" fg:x="545" fg:w="3"/><text x="43.4354%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.3439%" y="389" width="0.0792%" height="15" fill="rgb(252,203,31)" fg:x="547" fg:w="1"/><text x="43.5939%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="43.4231%" y="453" width="0.1585%" height="15" fill="rgb(224,120,8)" fg:x="548" fg:w="2"/><text x="43.6731%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="43.4231%" y="437" width="0.1585%" height="15" fill="rgb(205,171,54)" fg:x="548" fg:w="2"/><text x="43.6731%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.5024%" y="421" width="0.0792%" height="15" fill="rgb(235,89,11)" fg:x="549" fg:w="1"/><text x="43.7524%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.5024%" y="405" width="0.0792%" height="15" fill="rgb(212,180,28)" fg:x="549" fg:w="1"/><text x="43.7524%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.5024%" y="389" width="0.0792%" height="15" fill="rgb(247,84,49)" fg:x="549" fg:w="1"/><text x="43.7524%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.5024%" y="373" width="0.0792%" height="15" fill="rgb(236,187,52)" fg:x="549" fg:w="1"/><text x="43.7524%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.6609%" y="357" width="0.0792%" height="15" fill="rgb(227,24,15)" fg:x="551" fg:w="1"/><text x="43.9109%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.6609%" y="341" width="0.0792%" height="15" fill="rgb(227,211,13)" fg:x="551" fg:w="1"/><text x="43.9109%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (21 samples, 1.66%)</title><rect x="42.3138%" y="533" width="1.6640%" height="15" fill="rgb(245,52,14)" fg:x="534" fg:w="21"/><text x="42.5638%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (21 samples, 1.66%)</title><rect x="42.3138%" y="517" width="1.6640%" height="15" fill="rgb(225,185,13)" fg:x="534" fg:w="21"/><text x="42.5638%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.87%)</title><rect x="43.1062%" y="501" width="0.8716%" height="15" fill="rgb(217,160,29)" fg:x="544" fg:w="11"/><text x="43.3562%" y="511.50"></text></g><g><title>kernel::model::props::load_props (11 samples, 0.87%)</title><rect x="43.1062%" y="485" width="0.8716%" height="15" fill="rgb(216,115,53)" fg:x="544" fg:w="11"/><text x="43.3562%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.87%)</title><rect x="43.1062%" y="469" width="0.8716%" height="15" fill="rgb(236,99,5)" fg:x="544" fg:w="11"/><text x="43.3562%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="43.5816%" y="453" width="0.3962%" height="15" fill="rgb(222,60,38)" fg:x="550" fg:w="5"/><text x="43.8316%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="43.5816%" y="437" width="0.3962%" height="15" fill="rgb(212,82,22)" fg:x="550" fg:w="5"/><text x="43.8316%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="43.5816%" y="421" width="0.3962%" height="15" fill="rgb(214,48,28)" fg:x="550" fg:w="5"/><text x="43.8316%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="43.5816%" y="405" width="0.3962%" height="15" fill="rgb(245,196,50)" fg:x="550" fg:w="5"/><text x="43.8316%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="43.6609%" y="389" width="0.3170%" height="15" fill="rgb(225,159,46)" fg:x="551" fg:w="4"/><text x="43.9109%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="43.6609%" y="373" width="0.3170%" height="15" fill="rgb(207,195,48)" fg:x="551" fg:w="4"/><text x="43.9109%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.7401%" y="357" width="0.2377%" height="15" fill="rgb(240,73,3)" fg:x="552" fg:w="3"/><text x="43.9901%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.7401%" y="341" width="0.2377%" height="15" fill="rgb(245,57,23)" fg:x="552" fg:w="3"/><text x="43.9901%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.7401%" y="325" width="0.2377%" height="15" fill="rgb(240,75,18)" fg:x="552" fg:w="3"/><text x="43.9901%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.7401%" y="309" width="0.2377%" height="15" fill="rgb(238,168,12)" fg:x="552" fg:w="3"/><text x="43.9901%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="43.8193%" y="293" width="0.1585%" height="15" fill="rgb(226,20,40)" fg:x="553" fg:w="2"/><text x="44.0693%" y="303.50"></text></g><g><title>plugins_core::build::Build::holding (64 samples, 5.07%)</title><rect x="38.9857%" y="581" width="5.0713%" height="15" fill="rgb(224,130,35)" fg:x="492" fg:w="64"/><text x="39.2357%" y="591.50">plugin..</text></g><g><title>plugins_core::tools::set_container (43 samples, 3.41%)</title><rect x="40.6498%" y="565" width="3.4073%" height="15" fill="rgb(225,63,41)" fg:x="513" fg:w="43"/><text x="40.8998%" y="575.50">plu..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (22 samples, 1.74%)</title><rect x="42.3138%" y="549" width="1.7433%" height="15" fill="rgb(219,3,3)" fg:x="534" fg:w="22"/><text x="42.5638%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="43.9778%" y="533" width="0.0792%" height="15" fill="rgb(218,157,4)" fg:x="555" fg:w="1"/><text x="44.2278%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.9778%" y="517" width="0.0792%" height="15" fill="rgb(232,76,36)" fg:x="555" fg:w="1"/><text x="44.2278%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="43.9778%" y="501" width="0.0792%" height="15" fill="rgb(247,36,0)" fg:x="555" fg:w="1"/><text x="44.2278%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="43.9778%" y="485" width="0.0792%" height="15" fill="rgb(205,2,34)" fg:x="555" fg:w="1"/><text x="44.2278%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="43.9778%" y="469" width="0.0792%" height="15" fill="rgb(239,136,13)" fg:x="555" fg:w="1"/><text x="44.2278%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.9778%" y="453" width="0.0792%" height="15" fill="rgb(253,122,12)" fg:x="555" fg:w="1"/><text x="44.2278%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.9778%" y="437" width="0.0792%" height="15" fill="rgb(222,174,7)" fg:x="555" fg:w="1"/><text x="44.2278%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.9778%" y="421" width="0.0792%" height="15" fill="rgb(208,191,42)" fg:x="555" fg:w="1"/><text x="44.2278%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="44.1363%" y="533" width="0.1585%" height="15" fill="rgb(237,212,15)" fg:x="557" fg:w="2"/><text x="44.3863%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.2948%" y="501" width="0.0792%" height="15" fill="rgb(215,65,20)" fg:x="559" fg:w="1"/><text x="44.5448%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.2948%" y="485" width="0.0792%" height="15" fill="rgb(232,103,11)" fg:x="559" fg:w="1"/><text x="44.5448%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.2948%" y="469" width="0.0792%" height="15" fill="rgb(235,148,18)" fg:x="559" fg:w="1"/><text x="44.5448%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.2948%" y="453" width="0.0792%" height="15" fill="rgb(240,173,7)" fg:x="559" fg:w="1"/><text x="44.5448%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.2948%" y="437" width="0.0792%" height="15" fill="rgb(228,182,25)" fg:x="559" fg:w="1"/><text x="44.5448%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.2948%" y="421" width="0.0792%" height="15" fill="rgb(247,3,52)" fg:x="559" fg:w="1"/><text x="44.5448%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.2948%" y="405" width="0.0792%" height="15" fill="rgb(226,155,8)" fg:x="559" fg:w="1"/><text x="44.5448%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.2948%" y="389" width="0.0792%" height="15" fill="rgb(243,195,38)" fg:x="559" fg:w="1"/><text x="44.5448%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.2948%" y="373" width="0.0792%" height="15" fill="rgb(254,181,33)" fg:x="559" fg:w="1"/><text x="44.5448%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.2948%" y="357" width="0.0792%" height="15" fill="rgb(232,98,23)" fg:x="559" fg:w="1"/><text x="44.5448%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.2948%" y="341" width="0.0792%" height="15" fill="rgb(205,23,10)" fg:x="559" fg:w="1"/><text x="44.5448%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.2948%" y="325" width="0.0792%" height="15" fill="rgb(212,124,38)" fg:x="559" fg:w="1"/><text x="44.5448%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.2948%" y="309" width="0.0792%" height="15" fill="rgb(228,207,2)" fg:x="559" fg:w="1"/><text x="44.5448%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.2948%" y="293" width="0.0792%" height="15" fill="rgb(215,120,22)" fg:x="559" fg:w="1"/><text x="44.5448%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.4532%" y="437" width="0.0792%" height="15" fill="rgb(251,172,33)" fg:x="561" fg:w="1"/><text x="44.7032%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.4532%" y="421" width="0.0792%" height="15" fill="rgb(250,83,2)" fg:x="561" fg:w="1"/><text x="44.7032%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="44.3740%" y="501" width="0.2377%" height="15" fill="rgb(210,132,53)" fg:x="560" fg:w="3"/><text x="44.6240%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="44.3740%" y="485" width="0.2377%" height="15" fill="rgb(221,208,36)" fg:x="560" fg:w="3"/><text x="44.6240%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.4532%" y="469" width="0.1585%" height="15" fill="rgb(205,192,46)" fg:x="561" fg:w="2"/><text x="44.7032%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.4532%" y="453" width="0.1585%" height="15" fill="rgb(223,163,14)" fg:x="561" fg:w="2"/><text x="44.7032%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.5325%" y="437" width="0.0792%" height="15" fill="rgb(218,41,28)" fg:x="562" fg:w="1"/><text x="44.7825%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.5325%" y="421" width="0.0792%" height="15" fill="rgb(235,104,10)" fg:x="562" fg:w="1"/><text x="44.7825%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.63%)</title><rect x="44.0571%" y="581" width="0.6339%" height="15" fill="rgb(246,17,4)" fg:x="556" fg:w="8"/><text x="44.3071%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="44.0571%" y="565" width="0.6339%" height="15" fill="rgb(240,7,16)" fg:x="556" fg:w="8"/><text x="44.3071%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.63%)</title><rect x="44.0571%" y="549" width="0.6339%" height="15" fill="rgb(213,160,23)" fg:x="556" fg:w="8"/><text x="44.3071%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="44.2948%" y="533" width="0.3962%" height="15" fill="rgb(251,179,49)" fg:x="559" fg:w="5"/><text x="44.5448%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="44.2948%" y="517" width="0.3962%" height="15" fill="rgb(247,198,10)" fg:x="559" fg:w="5"/><text x="44.5448%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.6117%" y="501" width="0.0792%" height="15" fill="rgb(220,65,29)" fg:x="563" fg:w="1"/><text x="44.8617%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.6117%" y="485" width="0.0792%" height="15" fill="rgb(237,171,28)" fg:x="563" fg:w="1"/><text x="44.8617%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.6117%" y="469" width="0.0792%" height="15" fill="rgb(228,44,26)" fg:x="563" fg:w="1"/><text x="44.8617%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.6117%" y="453" width="0.0792%" height="15" fill="rgb(216,210,27)" fg:x="563" fg:w="1"/><text x="44.8617%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.6117%" y="437" width="0.0792%" height="15" fill="rgb(252,10,17)" fg:x="563" fg:w="1"/><text x="44.8617%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.6117%" y="421" width="0.0792%" height="15" fill="rgb(214,172,30)" fg:x="563" fg:w="1"/><text x="44.8617%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.6117%" y="405" width="0.0792%" height="15" fill="rgb(253,130,48)" fg:x="563" fg:w="1"/><text x="44.8617%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.6117%" y="389" width="0.0792%" height="15" fill="rgb(226,99,43)" fg:x="563" fg:w="1"/><text x="44.8617%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.6117%" y="373" width="0.0792%" height="15" fill="rgb(239,111,26)" fg:x="563" fg:w="1"/><text x="44.8617%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.6117%" y="357" width="0.0792%" height="15" fill="rgb(240,27,53)" fg:x="563" fg:w="1"/><text x="44.8617%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.6117%" y="341" width="0.0792%" height="15" fill="rgb(254,163,12)" fg:x="563" fg:w="1"/><text x="44.8617%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.6910%" y="517" width="0.0792%" height="15" fill="rgb(225,51,48)" fg:x="564" fg:w="1"/><text x="44.9410%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.6910%" y="501" width="0.0792%" height="15" fill="rgb(205,19,32)" fg:x="564" fg:w="1"/><text x="44.9410%" y="511.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="44.6910%" y="549" width="0.2377%" height="15" fill="rgb(218,119,26)" fg:x="564" fg:w="3"/><text x="44.9410%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="44.6910%" y="533" width="0.2377%" height="15" fill="rgb(231,173,33)" fg:x="564" fg:w="3"/><text x="44.9410%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="44.7702%" y="517" width="0.1585%" height="15" fill="rgb(241,100,29)" fg:x="565" fg:w="2"/><text x="45.0202%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="44.7702%" y="501" width="0.1585%" height="15" fill="rgb(250,194,34)" fg:x="565" fg:w="2"/><text x="45.0202%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="44.7702%" y="485" width="0.1585%" height="15" fill="rgb(215,23,50)" fg:x="565" fg:w="2"/><text x="45.0202%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="44.7702%" y="469" width="0.1585%" height="15" fill="rgb(206,49,37)" fg:x="565" fg:w="2"/><text x="45.0202%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="44.7702%" y="453" width="0.1585%" height="15" fill="rgb(247,39,21)" fg:x="565" fg:w="2"/><text x="45.0202%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="44.8494%" y="437" width="0.0792%" height="15" fill="rgb(209,220,15)" fg:x="566" fg:w="1"/><text x="45.0994%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.8494%" y="421" width="0.0792%" height="15" fill="rgb(206,41,33)" fg:x="566" fg:w="1"/><text x="45.0994%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="44.8494%" y="405" width="0.0792%" height="15" fill="rgb(221,225,45)" fg:x="566" fg:w="1"/><text x="45.0994%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.8494%" y="389" width="0.0792%" height="15" fill="rgb(216,27,18)" fg:x="566" fg:w="1"/><text x="45.0994%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8494%" y="373" width="0.0792%" height="15" fill="rgb(250,193,34)" fg:x="566" fg:w="1"/><text x="45.0994%" y="383.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="44.6910%" y="581" width="0.3170%" height="15" fill="rgb(227,215,20)" fg:x="564" fg:w="4"/><text x="44.9410%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="44.6910%" y="565" width="0.3170%" height="15" fill="rgb(242,211,27)" fg:x="564" fg:w="4"/><text x="44.9410%" y="575.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="44.9287%" y="549" width="0.0792%" height="15" fill="rgb(229,190,30)" fg:x="567" fg:w="1"/><text x="45.1787%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="45.0079%" y="549" width="0.0792%" height="15" fill="rgb(253,31,29)" fg:x="568" fg:w="1"/><text x="45.2579%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="45.0079%" y="533" width="0.0792%" height="15" fill="rgb(229,177,52)" fg:x="568" fg:w="1"/><text x="45.2579%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="45.0079%" y="517" width="0.0792%" height="15" fill="rgb(226,88,8)" fg:x="568" fg:w="1"/><text x="45.2579%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.0079%" y="501" width="0.0792%" height="15" fill="rgb(214,55,27)" fg:x="568" fg:w="1"/><text x="45.2579%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.0079%" y="485" width="0.0792%" height="15" fill="rgb(233,202,5)" fg:x="568" fg:w="1"/><text x="45.2579%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.0079%" y="469" width="0.0792%" height="15" fill="rgb(251,49,30)" fg:x="568" fg:w="1"/><text x="45.2579%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="45.0079%" y="453" width="0.0792%" height="15" fill="rgb(235,18,52)" fg:x="568" fg:w="1"/><text x="45.2579%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.0079%" y="437" width="0.0792%" height="15" fill="rgb(250,111,51)" fg:x="568" fg:w="1"/><text x="45.2579%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.0079%" y="421" width="0.0792%" height="15" fill="rgb(218,13,25)" fg:x="568" fg:w="1"/><text x="45.2579%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.0079%" y="405" width="0.0792%" height="15" fill="rgb(248,96,7)" fg:x="568" fg:w="1"/><text x="45.2579%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="45.0079%" y="389" width="0.0792%" height="15" fill="rgb(217,31,15)" fg:x="568" fg:w="1"/><text x="45.2579%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.0079%" y="373" width="0.0792%" height="15" fill="rgb(228,59,49)" fg:x="568" fg:w="1"/><text x="45.2579%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.0079%" y="357" width="0.0792%" height="15" fill="rgb(210,152,38)" fg:x="568" fg:w="1"/><text x="45.2579%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.0079%" y="341" width="0.0792%" height="15" fill="rgb(206,71,11)" fg:x="568" fg:w="1"/><text x="45.2579%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.0079%" y="325" width="0.0792%" height="15" fill="rgb(244,199,5)" fg:x="568" fg:w="1"/><text x="45.2579%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.0079%" y="309" width="0.0792%" height="15" fill="rgb(253,49,1)" fg:x="568" fg:w="1"/><text x="45.2579%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.0079%" y="293" width="0.0792%" height="15" fill="rgb(225,206,40)" fg:x="568" fg:w="1"/><text x="45.2579%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.0079%" y="277" width="0.0792%" height="15" fill="rgb(243,116,47)" fg:x="568" fg:w="1"/><text x="45.2579%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.0079%" y="261" width="0.0792%" height="15" fill="rgb(219,225,16)" fg:x="568" fg:w="1"/><text x="45.2579%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.0079%" y="245" width="0.0792%" height="15" fill="rgb(233,29,47)" fg:x="568" fg:w="1"/><text x="45.2579%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.0079%" y="229" width="0.0792%" height="15" fill="rgb(250,179,18)" fg:x="568" fg:w="1"/><text x="45.2579%" y="239.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="45.0872%" y="533" width="0.0792%" height="15" fill="rgb(215,176,6)" fg:x="569" fg:w="1"/><text x="45.3372%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.0872%" y="517" width="0.0792%" height="15" fill="rgb(214,117,39)" fg:x="569" fg:w="1"/><text x="45.3372%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0872%" y="501" width="0.0792%" height="15" fill="rgb(247,183,36)" fg:x="569" fg:w="1"/><text x="45.3372%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.0872%" y="485" width="0.0792%" height="15" fill="rgb(237,200,3)" fg:x="569" fg:w="1"/><text x="45.3372%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.0872%" y="469" width="0.0792%" height="15" fill="rgb(212,220,24)" fg:x="569" fg:w="1"/><text x="45.3372%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0872%" y="453" width="0.0792%" height="15" fill="rgb(245,216,20)" fg:x="569" fg:w="1"/><text x="45.3372%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.1664%" y="517" width="0.0792%" height="15" fill="rgb(219,124,7)" fg:x="570" fg:w="1"/><text x="45.4164%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="45.0872%" y="549" width="0.3170%" height="15" fill="rgb(227,167,8)" fg:x="569" fg:w="4"/><text x="45.3372%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="45.1664%" y="533" width="0.2377%" height="15" fill="rgb(241,37,2)" fg:x="570" fg:w="3"/><text x="45.4164%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="45.2456%" y="517" width="0.1585%" height="15" fill="rgb(238,134,33)" fg:x="571" fg:w="2"/><text x="45.4956%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="45.2456%" y="501" width="0.1585%" height="15" fill="rgb(248,48,27)" fg:x="571" fg:w="2"/><text x="45.4956%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="45.2456%" y="485" width="0.1585%" height="15" fill="rgb(212,14,16)" fg:x="571" fg:w="2"/><text x="45.4956%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.3249%" y="469" width="0.0792%" height="15" fill="rgb(217,205,37)" fg:x="572" fg:w="1"/><text x="45.5749%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.3249%" y="453" width="0.0792%" height="15" fill="rgb(233,185,47)" fg:x="572" fg:w="1"/><text x="45.5749%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="45.5626%" y="373" width="0.0792%" height="15" fill="rgb(244,88,8)" fg:x="575" fg:w="1"/><text x="45.8126%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="45.5626%" y="357" width="0.0792%" height="15" fill="rgb(213,0,20)" fg:x="575" fg:w="1"/><text x="45.8126%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.71%)</title><rect x="45.0079%" y="565" width="0.7132%" height="15" fill="rgb(238,159,36)" fg:x="568" fg:w="9"/><text x="45.2579%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="45.4041%" y="549" width="0.3170%" height="15" fill="rgb(253,173,17)" fg:x="573" fg:w="4"/><text x="45.6541%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="45.4041%" y="533" width="0.3170%" height="15" fill="rgb(221,23,28)" fg:x="573" fg:w="4"/><text x="45.6541%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="45.4834%" y="517" width="0.2377%" height="15" fill="rgb(218,113,15)" fg:x="574" fg:w="3"/><text x="45.7334%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="45.4834%" y="501" width="0.2377%" height="15" fill="rgb(233,58,3)" fg:x="574" fg:w="3"/><text x="45.7334%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="45.4834%" y="485" width="0.2377%" height="15" fill="rgb(250,46,35)" fg:x="574" fg:w="3"/><text x="45.7334%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="45.4834%" y="469" width="0.2377%" height="15" fill="rgb(210,169,11)" fg:x="574" fg:w="3"/><text x="45.7334%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="45.4834%" y="453" width="0.2377%" height="15" fill="rgb(246,88,19)" fg:x="574" fg:w="3"/><text x="45.7334%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="45.4834%" y="437" width="0.2377%" height="15" fill="rgb(206,81,49)" fg:x="574" fg:w="3"/><text x="45.7334%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="45.4834%" y="421" width="0.2377%" height="15" fill="rgb(232,144,18)" fg:x="574" fg:w="3"/><text x="45.7334%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="45.4834%" y="405" width="0.2377%" height="15" fill="rgb(235,2,27)" fg:x="574" fg:w="3"/><text x="45.7334%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="45.5626%" y="389" width="0.1585%" height="15" fill="rgb(239,157,39)" fg:x="575" fg:w="2"/><text x="45.8126%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.6418%" y="373" width="0.0792%" height="15" fill="rgb(220,11,17)" fg:x="576" fg:w="1"/><text x="45.8918%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="45.6418%" y="357" width="0.0792%" height="15" fill="rgb(243,94,50)" fg:x="576" fg:w="1"/><text x="45.8918%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.6418%" y="341" width="0.0792%" height="15" fill="rgb(218,22,0)" fg:x="576" fg:w="1"/><text x="45.8918%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::HasScopes&gt;::scopes_mut (1 samples, 0.08%)</title><rect x="45.8003%" y="549" width="0.0792%" height="15" fill="rgb(249,70,21)" fg:x="578" fg:w="1"/><text x="46.0503%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.8796%" y="549" width="0.0792%" height="15" fill="rgb(245,111,46)" fg:x="579" fg:w="1"/><text x="46.1296%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.0380%" y="405" width="0.0792%" height="15" fill="rgb(244,183,12)" fg:x="581" fg:w="1"/><text x="46.2880%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0380%" y="389" width="0.0792%" height="15" fill="rgb(207,117,0)" fg:x="581" fg:w="1"/><text x="46.2880%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0380%" y="373" width="0.0792%" height="15" fill="rgb(206,20,43)" fg:x="581" fg:w="1"/><text x="46.2880%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.0380%" y="357" width="0.0792%" height="15" fill="rgb(221,104,11)" fg:x="581" fg:w="1"/><text x="46.2880%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.0380%" y="341" width="0.0792%" height="15" fill="rgb(254,36,50)" fg:x="581" fg:w="1"/><text x="46.2880%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.0380%" y="325" width="0.0792%" height="15" fill="rgb(252,17,15)" fg:x="581" fg:w="1"/><text x="46.2880%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.0380%" y="309" width="0.0792%" height="15" fill="rgb(219,129,43)" fg:x="581" fg:w="1"/><text x="46.2880%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.0380%" y="293" width="0.0792%" height="15" fill="rgb(205,34,45)" fg:x="581" fg:w="1"/><text x="46.2880%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.0380%" y="277" width="0.0792%" height="15" fill="rgb(251,201,32)" fg:x="581" fg:w="1"/><text x="46.2880%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.0380%" y="261" width="0.0792%" height="15" fill="rgb(205,56,0)" fg:x="581" fg:w="1"/><text x="46.2880%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.0380%" y="245" width="0.0792%" height="15" fill="rgb(211,193,27)" fg:x="581" fg:w="1"/><text x="46.2880%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.0380%" y="229" width="0.0792%" height="15" fill="rgb(231,100,42)" fg:x="581" fg:w="1"/><text x="46.2880%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.0380%" y="421" width="0.1585%" height="15" fill="rgb(245,85,27)" fg:x="581" fg:w="2"/><text x="46.2880%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.1173%" y="405" width="0.0792%" height="15" fill="rgb(241,76,24)" fg:x="582" fg:w="1"/><text x="46.3673%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.1173%" y="389" width="0.0792%" height="15" fill="rgb(249,157,15)" fg:x="582" fg:w="1"/><text x="46.3673%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.1173%" y="373" width="0.0792%" height="15" fill="rgb(222,218,25)" fg:x="582" fg:w="1"/><text x="46.3673%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.1173%" y="357" width="0.0792%" height="15" fill="rgb(252,156,52)" fg:x="582" fg:w="1"/><text x="46.3673%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.1173%" y="341" width="0.0792%" height="15" fill="rgb(211,185,7)" fg:x="582" fg:w="1"/><text x="46.3673%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="46.1173%" y="325" width="0.0792%" height="15" fill="rgb(234,108,24)" fg:x="582" fg:w="1"/><text x="46.3673%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.1173%" y="309" width="0.0792%" height="15" fill="rgb(227,218,2)" fg:x="582" fg:w="1"/><text x="46.3673%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="46.0380%" y="437" width="0.2377%" height="15" fill="rgb(224,0,36)" fg:x="581" fg:w="3"/><text x="46.2880%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.1965%" y="421" width="0.0792%" height="15" fill="rgb(233,201,10)" fg:x="583" fg:w="1"/><text x="46.4465%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.1965%" y="405" width="0.0792%" height="15" fill="rgb(252,209,14)" fg:x="583" fg:w="1"/><text x="46.4465%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.1965%" y="389" width="0.0792%" height="15" fill="rgb(205,93,49)" fg:x="583" fg:w="1"/><text x="46.4465%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.1965%" y="373" width="0.0792%" height="15" fill="rgb(234,116,45)" fg:x="583" fg:w="1"/><text x="46.4465%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.1965%" y="357" width="0.0792%" height="15" fill="rgb(248,89,35)" fg:x="583" fg:w="1"/><text x="46.4465%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="46.1965%" y="341" width="0.0792%" height="15" fill="rgb(233,167,45)" fg:x="583" fg:w="1"/><text x="46.4465%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.1965%" y="325" width="0.0792%" height="15" fill="rgb(248,228,14)" fg:x="583" fg:w="1"/><text x="46.4465%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="46.0380%" y="469" width="0.3170%" height="15" fill="rgb(246,91,14)" fg:x="581" fg:w="4"/><text x="46.2880%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="46.0380%" y="453" width="0.3170%" height="15" fill="rgb(227,142,5)" fg:x="581" fg:w="4"/><text x="46.2880%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.2758%" y="437" width="0.0792%" height="15" fill="rgb(221,63,33)" fg:x="584" fg:w="1"/><text x="46.5258%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.2758%" y="421" width="0.0792%" height="15" fill="rgb(233,49,0)" fg:x="584" fg:w="1"/><text x="46.5258%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.2758%" y="405" width="0.0792%" height="15" fill="rgb(251,115,38)" fg:x="584" fg:w="1"/><text x="46.5258%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.2758%" y="389" width="0.0792%" height="15" fill="rgb(231,214,32)" fg:x="584" fg:w="1"/><text x="46.5258%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.2758%" y="373" width="0.0792%" height="15" fill="rgb(248,73,46)" fg:x="584" fg:w="1"/><text x="46.5258%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="46.2758%" y="357" width="0.0792%" height="15" fill="rgb(237,156,4)" fg:x="584" fg:w="1"/><text x="46.5258%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.2758%" y="341" width="0.0792%" height="15" fill="rgb(227,132,2)" fg:x="584" fg:w="1"/><text x="46.5258%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.3550%" y="469" width="0.0792%" height="15" fill="rgb(248,161,9)" fg:x="585" fg:w="1"/><text x="46.6050%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="46.3550%" y="453" width="0.0792%" height="15" fill="rgb(238,77,38)" fg:x="585" fg:w="1"/><text x="46.6050%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.3550%" y="437" width="0.0792%" height="15" fill="rgb(222,166,40)" fg:x="585" fg:w="1"/><text x="46.6050%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.3550%" y="421" width="0.0792%" height="15" fill="rgb(214,168,45)" fg:x="585" fg:w="1"/><text x="46.6050%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.3550%" y="405" width="0.0792%" height="15" fill="rgb(226,64,37)" fg:x="585" fg:w="1"/><text x="46.6050%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.3550%" y="389" width="0.0792%" height="15" fill="rgb(232,210,43)" fg:x="585" fg:w="1"/><text x="46.6050%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.5135%" y="373" width="0.0792%" height="15" fill="rgb(214,76,33)" fg:x="587" fg:w="1"/><text x="46.7635%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.5135%" y="357" width="0.0792%" height="15" fill="rgb(210,78,5)" fg:x="587" fg:w="1"/><text x="46.7635%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.63%)</title><rect x="46.0380%" y="517" width="0.6339%" height="15" fill="rgb(211,107,37)" fg:x="581" fg:w="8"/><text x="46.2880%" y="527.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.63%)</title><rect x="46.0380%" y="501" width="0.6339%" height="15" fill="rgb(249,67,16)" fg:x="581" fg:w="8"/><text x="46.2880%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.63%)</title><rect x="46.0380%" y="485" width="0.6339%" height="15" fill="rgb(222,114,31)" fg:x="581" fg:w="8"/><text x="46.2880%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="46.4342%" y="469" width="0.2377%" height="15" fill="rgb(242,118,19)" fg:x="586" fg:w="3"/><text x="46.6842%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="46.4342%" y="453" width="0.2377%" height="15" fill="rgb(223,115,1)" fg:x="586" fg:w="3"/><text x="46.6842%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="46.4342%" y="437" width="0.2377%" height="15" fill="rgb(241,182,54)" fg:x="586" fg:w="3"/><text x="46.6842%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="46.4342%" y="421" width="0.2377%" height="15" fill="rgb(244,166,36)" fg:x="586" fg:w="3"/><text x="46.6842%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="46.5135%" y="405" width="0.1585%" height="15" fill="rgb(241,52,43)" fg:x="587" fg:w="2"/><text x="46.7635%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.5135%" y="389" width="0.1585%" height="15" fill="rgb(236,82,9)" fg:x="587" fg:w="2"/><text x="46.7635%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.5927%" y="373" width="0.0792%" height="15" fill="rgb(241,119,0)" fg:x="588" fg:w="1"/><text x="46.8427%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.5927%" y="357" width="0.0792%" height="15" fill="rgb(221,19,22)" fg:x="588" fg:w="1"/><text x="46.8427%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.87%)</title><rect x="45.9588%" y="549" width="0.8716%" height="15" fill="rgb(254,144,35)" fg:x="580" fg:w="11"/><text x="46.2088%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.79%)</title><rect x="46.0380%" y="533" width="0.7924%" height="15" fill="rgb(246,132,30)" fg:x="581" fg:w="10"/><text x="46.2880%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="46.6719%" y="517" width="0.1585%" height="15" fill="rgb(234,69,28)" fg:x="589" fg:w="2"/><text x="46.9219%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="46.6719%" y="501" width="0.1585%" height="15" fill="rgb(219,106,47)" fg:x="589" fg:w="2"/><text x="46.9219%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="46.6719%" y="485" width="0.1585%" height="15" fill="rgb(218,79,24)" fg:x="589" fg:w="2"/><text x="46.9219%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.7512%" y="469" width="0.0792%" height="15" fill="rgb(225,26,21)" fg:x="590" fg:w="1"/><text x="47.0012%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.7512%" y="453" width="0.0792%" height="15" fill="rgb(217,68,49)" fg:x="590" fg:w="1"/><text x="47.0012%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.7512%" y="437" width="0.0792%" height="15" fill="rgb(220,204,28)" fg:x="590" fg:w="1"/><text x="47.0012%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.7512%" y="421" width="0.0792%" height="15" fill="rgb(237,208,43)" fg:x="590" fg:w="1"/><text x="47.0012%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.7512%" y="405" width="0.0792%" height="15" fill="rgb(213,97,42)" fg:x="590" fg:w="1"/><text x="47.0012%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.7512%" y="389" width="0.0792%" height="15" fill="rgb(238,96,52)" fg:x="590" fg:w="1"/><text x="47.0012%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.7512%" y="373" width="0.0792%" height="15" fill="rgb(228,14,13)" fg:x="590" fg:w="1"/><text x="47.0012%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.7512%" y="357" width="0.0792%" height="15" fill="rgb(219,123,13)" fg:x="590" fg:w="1"/><text x="47.0012%" y="367.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="46.8304%" y="549" width="0.0792%" height="15" fill="rgb(216,144,17)" fg:x="591" fg:w="1"/><text x="47.0804%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="46.8304%" y="533" width="0.0792%" height="15" fill="rgb(230,228,29)" fg:x="591" fg:w="1"/><text x="47.0804%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.8304%" y="517" width="0.0792%" height="15" fill="rgb(233,18,5)" fg:x="591" fg:w="1"/><text x="47.0804%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="46.8304%" y="501" width="0.0792%" height="15" fill="rgb(233,197,12)" fg:x="591" fg:w="1"/><text x="47.0804%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="46.8304%" y="485" width="0.0792%" height="15" fill="rgb(234,140,29)" fg:x="591" fg:w="1"/><text x="47.0804%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.9889%" y="389" width="0.0792%" height="15" fill="rgb(233,113,19)" fg:x="593" fg:w="1"/><text x="47.2389%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="46.9097%" y="437" width="0.2377%" height="15" fill="rgb(246,209,13)" fg:x="592" fg:w="3"/><text x="47.1597%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="46.9097%" y="421" width="0.2377%" height="15" fill="rgb(242,79,54)" fg:x="592" fg:w="3"/><text x="47.1597%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="46.9097%" y="405" width="0.2377%" height="15" fill="rgb(219,73,16)" fg:x="592" fg:w="3"/><text x="47.1597%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.0681%" y="389" width="0.0792%" height="15" fill="rgb(224,52,10)" fg:x="594" fg:w="1"/><text x="47.3181%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.0681%" y="373" width="0.0792%" height="15" fill="rgb(237,179,5)" fg:x="594" fg:w="1"/><text x="47.3181%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.0681%" y="357" width="0.0792%" height="15" fill="rgb(231,20,6)" fg:x="594" fg:w="1"/><text x="47.3181%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.0681%" y="341" width="0.0792%" height="15" fill="rgb(253,171,45)" fg:x="594" fg:w="1"/><text x="47.3181%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.0681%" y="325" width="0.0792%" height="15" fill="rgb(230,75,49)" fg:x="594" fg:w="1"/><text x="47.3181%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.0681%" y="309" width="0.0792%" height="15" fill="rgb(216,83,46)" fg:x="594" fg:w="1"/><text x="47.3181%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.0681%" y="293" width="0.0792%" height="15" fill="rgb(236,56,9)" fg:x="594" fg:w="1"/><text x="47.3181%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.0681%" y="277" width="0.0792%" height="15" fill="rgb(215,28,34)" fg:x="594" fg:w="1"/><text x="47.3181%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.0681%" y="261" width="0.0792%" height="15" fill="rgb(230,222,20)" fg:x="594" fg:w="1"/><text x="47.3181%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.0681%" y="245" width="0.0792%" height="15" fill="rgb(235,209,51)" fg:x="594" fg:w="1"/><text x="47.3181%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.0681%" y="229" width="0.0792%" height="15" fill="rgb(235,167,1)" fg:x="594" fg:w="1"/><text x="47.3181%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="46.9097%" y="453" width="0.3962%" height="15" fill="rgb(248,220,0)" fg:x="592" fg:w="5"/><text x="47.1597%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.1474%" y="437" width="0.1585%" height="15" fill="rgb(239,0,18)" fg:x="595" fg:w="2"/><text x="47.3974%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.3059%" y="453" width="0.0792%" height="15" fill="rgb(229,179,11)" fg:x="597" fg:w="1"/><text x="47.5559%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="47.3059%" y="437" width="0.0792%" height="15" fill="rgb(226,116,53)" fg:x="597" fg:w="1"/><text x="47.5559%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.3059%" y="421" width="0.0792%" height="15" fill="rgb(218,1,49)" fg:x="597" fg:w="1"/><text x="47.5559%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.3059%" y="405" width="0.0792%" height="15" fill="rgb(208,184,47)" fg:x="597" fg:w="1"/><text x="47.5559%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.3059%" y="389" width="0.0792%" height="15" fill="rgb(238,174,3)" fg:x="597" fg:w="1"/><text x="47.5559%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.3059%" y="373" width="0.0792%" height="15" fill="rgb(247,188,6)" fg:x="597" fg:w="1"/><text x="47.5559%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.3059%" y="357" width="0.0792%" height="15" fill="rgb(211,165,46)" fg:x="597" fg:w="1"/><text x="47.5559%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.55%)</title><rect x="46.9097%" y="501" width="0.5547%" height="15" fill="rgb(222,190,10)" fg:x="592" fg:w="7"/><text x="47.1597%" y="511.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.55%)</title><rect x="46.9097%" y="485" width="0.5547%" height="15" fill="rgb(206,185,3)" fg:x="592" fg:w="7"/><text x="47.1597%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.55%)</title><rect x="46.9097%" y="469" width="0.5547%" height="15" fill="rgb(244,125,37)" fg:x="592" fg:w="7"/><text x="47.1597%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.3851%" y="453" width="0.0792%" height="15" fill="rgb(211,43,7)" fg:x="598" fg:w="1"/><text x="47.6351%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.3851%" y="437" width="0.0792%" height="15" fill="rgb(250,41,42)" fg:x="598" fg:w="1"/><text x="47.6351%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.3851%" y="421" width="0.0792%" height="15" fill="rgb(254,54,42)" fg:x="598" fg:w="1"/><text x="47.6351%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.3851%" y="405" width="0.0792%" height="15" fill="rgb(213,71,43)" fg:x="598" fg:w="1"/><text x="47.6351%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="47.3851%" y="389" width="0.0792%" height="15" fill="rgb(249,3,44)" fg:x="598" fg:w="1"/><text x="47.6351%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.3851%" y="373" width="0.0792%" height="15" fill="rgb(229,80,41)" fg:x="598" fg:w="1"/><text x="47.6351%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.3851%" y="357" width="0.0792%" height="15" fill="rgb(231,25,28)" fg:x="598" fg:w="1"/><text x="47.6351%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.3851%" y="341" width="0.0792%" height="15" fill="rgb(208,79,48)" fg:x="598" fg:w="1"/><text x="47.6351%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.3851%" y="325" width="0.0792%" height="15" fill="rgb(207,196,38)" fg:x="598" fg:w="1"/><text x="47.6351%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4643%" y="453" width="0.0792%" height="15" fill="rgb(228,105,49)" fg:x="599" fg:w="1"/><text x="47.7143%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4643%" y="437" width="0.0792%" height="15" fill="rgb(237,99,15)" fg:x="599" fg:w="1"/><text x="47.7143%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4643%" y="421" width="0.0792%" height="15" fill="rgb(224,207,46)" fg:x="599" fg:w="1"/><text x="47.7143%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4643%" y="405" width="0.0792%" height="15" fill="rgb(249,117,50)" fg:x="599" fg:w="1"/><text x="47.7143%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.4643%" y="389" width="0.0792%" height="15" fill="rgb(248,17,13)" fg:x="599" fg:w="1"/><text x="47.7143%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.4643%" y="373" width="0.0792%" height="15" fill="rgb(228,187,36)" fg:x="599" fg:w="1"/><text x="47.7143%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.4643%" y="357" width="0.0792%" height="15" fill="rgb(234,132,20)" fg:x="599" fg:w="1"/><text x="47.7143%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.4643%" y="341" width="0.0792%" height="15" fill="rgb(209,170,46)" fg:x="599" fg:w="1"/><text x="47.7143%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.4643%" y="325" width="0.0792%" height="15" fill="rgb(237,23,19)" fg:x="599" fg:w="1"/><text x="47.7143%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.4643%" y="309" width="0.0792%" height="15" fill="rgb(227,21,26)" fg:x="599" fg:w="1"/><text x="47.7143%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="47.4643%" y="293" width="0.0792%" height="15" fill="rgb(222,220,48)" fg:x="599" fg:w="1"/><text x="47.7143%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="47.4643%" y="277" width="0.0792%" height="15" fill="rgb(214,9,16)" fg:x="599" fg:w="1"/><text x="47.7143%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.5436%" y="421" width="0.0792%" height="15" fill="rgb(209,73,30)" fg:x="600" fg:w="1"/><text x="47.7936%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (307 samples, 24.33%)</title><rect x="23.3756%" y="597" width="24.3265%" height="15" fill="rgb(207,20,33)" fg:x="295" fg:w="307"/><text x="23.6256%" y="607.50">plugins_core::build::BuildSurroundings:..</text></g><g><title>plugins_core::build::Build::occupying (34 samples, 2.69%)</title><rect x="45.0079%" y="581" width="2.6941%" height="15" fill="rgb(219,153,12)" fg:x="568" fg:w="34"/><text x="45.2579%" y="591.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (25 samples, 1.98%)</title><rect x="45.7211%" y="565" width="1.9810%" height="15" fill="rgb(235,97,25)" fg:x="577" fg:w="25"/><text x="45.9711%" y="575.50">p..</text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (10 samples, 0.79%)</title><rect x="46.9097%" y="549" width="0.7924%" height="15" fill="rgb(244,30,34)" fg:x="592" fg:w="10"/><text x="47.1597%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.79%)</title><rect x="46.9097%" y="533" width="0.7924%" height="15" fill="rgb(214,106,45)" fg:x="592" fg:w="10"/><text x="47.1597%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.79%)</title><rect x="46.9097%" y="517" width="0.7924%" height="15" fill="rgb(226,41,9)" fg:x="592" fg:w="10"/><text x="47.1597%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="47.4643%" y="501" width="0.2377%" height="15" fill="rgb(253,139,29)" fg:x="599" fg:w="3"/><text x="47.7143%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="47.4643%" y="485" width="0.2377%" height="15" fill="rgb(213,205,39)" fg:x="599" fg:w="3"/><text x="47.7143%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="47.4643%" y="469" width="0.2377%" height="15" fill="rgb(209,27,10)" fg:x="599" fg:w="3"/><text x="47.7143%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.5436%" y="453" width="0.1585%" height="15" fill="rgb(249,142,16)" fg:x="600" fg:w="2"/><text x="47.7936%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.5436%" y="437" width="0.1585%" height="15" fill="rgb(242,65,12)" fg:x="600" fg:w="2"/><text x="47.7936%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.6228%" y="421" width="0.0792%" height="15" fill="rgb(232,48,10)" fg:x="601" fg:w="1"/><text x="47.8728%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.6228%" y="405" width="0.0792%" height="15" fill="rgb(253,67,19)" fg:x="601" fg:w="1"/><text x="47.8728%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.6228%" y="389" width="0.0792%" height="15" fill="rgb(227,93,29)" fg:x="601" fg:w="1"/><text x="47.8728%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.7021%" y="405" width="0.0792%" height="15" fill="rgb(226,189,53)" fg:x="602" fg:w="1"/><text x="47.9521%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="47.7021%" y="549" width="0.1585%" height="15" fill="rgb(223,224,1)" fg:x="602" fg:w="2"/><text x="47.9521%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="47.7021%" y="533" width="0.1585%" height="15" fill="rgb(221,84,32)" fg:x="602" fg:w="2"/><text x="47.9521%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="47.7021%" y="517" width="0.1585%" height="15" fill="rgb(214,189,28)" fg:x="602" fg:w="2"/><text x="47.9521%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="47.7021%" y="501" width="0.1585%" height="15" fill="rgb(234,7,52)" fg:x="602" fg:w="2"/><text x="47.9521%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="47.7021%" y="485" width="0.1585%" height="15" fill="rgb(249,73,31)" fg:x="602" fg:w="2"/><text x="47.9521%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="47.7021%" y="469" width="0.1585%" height="15" fill="rgb(253,153,41)" fg:x="602" fg:w="2"/><text x="47.9521%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="47.7021%" y="453" width="0.1585%" height="15" fill="rgb(249,52,34)" fg:x="602" fg:w="2"/><text x="47.9521%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="47.7021%" y="437" width="0.1585%" height="15" fill="rgb(236,177,47)" fg:x="602" fg:w="2"/><text x="47.9521%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="47.7021%" y="421" width="0.1585%" height="15" fill="rgb(252,185,45)" fg:x="602" fg:w="2"/><text x="47.9521%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.7813%" y="405" width="0.0792%" height="15" fill="rgb(251,15,30)" fg:x="603" fg:w="1"/><text x="48.0313%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="47.7813%" y="389" width="0.0792%" height="15" fill="rgb(233,31,4)" fg:x="603" fg:w="1"/><text x="48.0313%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="47.7813%" y="373" width="0.0792%" height="15" fill="rgb(254,44,24)" fg:x="603" fg:w="1"/><text x="48.0313%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.7813%" y="357" width="0.0792%" height="15" fill="rgb(218,54,1)" fg:x="603" fg:w="1"/><text x="48.0313%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.7813%" y="341" width="0.0792%" height="15" fill="rgb(243,209,39)" fg:x="603" fg:w="1"/><text x="48.0313%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.7813%" y="325" width="0.0792%" height="15" fill="rgb(206,75,33)" fg:x="603" fg:w="1"/><text x="48.0313%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.7813%" y="309" width="0.0792%" height="15" fill="rgb(223,108,18)" fg:x="603" fg:w="1"/><text x="48.0313%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="47.7813%" y="293" width="0.0792%" height="15" fill="rgb(244,89,31)" fg:x="603" fg:w="1"/><text x="48.0313%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="47.7813%" y="277" width="0.0792%" height="15" fill="rgb(222,167,27)" fg:x="603" fg:w="1"/><text x="48.0313%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="47.7813%" y="261" width="0.0792%" height="15" fill="rgb(247,41,16)" fg:x="603" fg:w="1"/><text x="48.0313%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="47.7813%" y="245" width="0.0792%" height="15" fill="rgb(233,168,40)" fg:x="603" fg:w="1"/><text x="48.0313%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="47.7813%" y="229" width="0.0792%" height="15" fill="rgb(205,211,8)" fg:x="603" fg:w="1"/><text x="48.0313%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="47.8605%" y="549" width="0.0792%" height="15" fill="rgb(238,105,11)" fg:x="604" fg:w="1"/><text x="48.1105%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="47.8605%" y="533" width="0.0792%" height="15" fill="rgb(223,142,52)" fg:x="604" fg:w="1"/><text x="48.1105%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.8605%" y="517" width="0.0792%" height="15" fill="rgb(238,51,33)" fg:x="604" fg:w="1"/><text x="48.1105%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.8605%" y="501" width="0.0792%" height="15" fill="rgb(231,188,43)" fg:x="604" fg:w="1"/><text x="48.1105%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.8605%" y="485" width="0.0792%" height="15" fill="rgb(216,92,17)" fg:x="604" fg:w="1"/><text x="48.1105%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.8605%" y="469" width="0.0792%" height="15" fill="rgb(228,2,40)" fg:x="604" fg:w="1"/><text x="48.1105%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.8605%" y="453" width="0.0792%" height="15" fill="rgb(226,73,15)" fg:x="604" fg:w="1"/><text x="48.1105%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="47.8605%" y="437" width="0.0792%" height="15" fill="rgb(227,66,46)" fg:x="604" fg:w="1"/><text x="48.1105%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.8605%" y="421" width="0.0792%" height="15" fill="rgb(209,71,6)" fg:x="604" fg:w="1"/><text x="48.1105%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.8605%" y="405" width="0.0792%" height="15" fill="rgb(246,100,25)" fg:x="604" fg:w="1"/><text x="48.1105%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.8605%" y="389" width="0.0792%" height="15" fill="rgb(248,185,27)" fg:x="604" fg:w="1"/><text x="48.1105%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.8605%" y="373" width="0.0792%" height="15" fill="rgb(225,118,47)" fg:x="604" fg:w="1"/><text x="48.1105%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.8605%" y="357" width="0.0792%" height="15" fill="rgb(220,185,44)" fg:x="604" fg:w="1"/><text x="48.1105%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="47.9398%" y="517" width="0.0792%" height="15" fill="rgb(227,95,24)" fg:x="605" fg:w="1"/><text x="48.1898%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="47.9398%" y="501" width="0.0792%" height="15" fill="rgb(252,84,24)" fg:x="605" fg:w="1"/><text x="48.1898%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.0190%" y="517" width="0.0792%" height="15" fill="rgb(240,34,44)" fg:x="606" fg:w="1"/><text x="48.2690%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.0190%" y="501" width="0.0792%" height="15" fill="rgb(209,72,54)" fg:x="606" fg:w="1"/><text x="48.2690%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="47.9398%" y="549" width="0.2377%" height="15" fill="rgb(226,19,45)" fg:x="605" fg:w="3"/><text x="48.1898%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="47.9398%" y="533" width="0.2377%" height="15" fill="rgb(246,7,45)" fg:x="605" fg:w="3"/><text x="48.1898%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="48.0983%" y="517" width="0.0792%" height="15" fill="rgb(225,45,2)" fg:x="607" fg:w="1"/><text x="48.3483%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.0983%" y="501" width="0.0792%" height="15" fill="rgb(221,80,29)" fg:x="607" fg:w="1"/><text x="48.3483%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0983%" y="485" width="0.0792%" height="15" fill="rgb(228,11,19)" fg:x="607" fg:w="1"/><text x="48.3483%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0983%" y="469" width="0.0792%" height="15" fill="rgb(243,17,21)" fg:x="607" fg:w="1"/><text x="48.3483%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.0983%" y="453" width="0.0792%" height="15" fill="rgb(243,88,8)" fg:x="607" fg:w="1"/><text x="48.3483%" y="463.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="48.1775%" y="501" width="0.0792%" height="15" fill="rgb(214,17,9)" fg:x="608" fg:w="1"/><text x="48.4275%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1775%" y="485" width="0.0792%" height="15" fill="rgb(232,169,15)" fg:x="608" fg:w="1"/><text x="48.4275%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="48.2567%" y="501" width="0.1585%" height="15" fill="rgb(232,86,53)" fg:x="609" fg:w="2"/><text x="48.5067%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="48.2567%" y="485" width="0.1585%" height="15" fill="rgb(222,100,4)" fg:x="609" fg:w="2"/><text x="48.5067%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.3360%" y="469" width="0.0792%" height="15" fill="rgb(253,151,38)" fg:x="610" fg:w="1"/><text x="48.5860%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.3360%" y="453" width="0.0792%" height="15" fill="rgb(238,215,29)" fg:x="610" fg:w="1"/><text x="48.5860%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.3360%" y="437" width="0.0792%" height="15" fill="rgb(205,128,53)" fg:x="610" fg:w="1"/><text x="48.5860%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.3360%" y="421" width="0.0792%" height="15" fill="rgb(248,183,14)" fg:x="610" fg:w="1"/><text x="48.5860%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.4152%" y="469" width="0.0792%" height="15" fill="rgb(244,172,35)" fg:x="611" fg:w="1"/><text x="48.6652%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.4152%" y="453" width="0.0792%" height="15" fill="rgb(234,93,19)" fg:x="611" fg:w="1"/><text x="48.6652%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.4152%" y="437" width="0.0792%" height="15" fill="rgb(227,109,7)" fg:x="611" fg:w="1"/><text x="48.6652%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.4152%" y="421" width="0.0792%" height="15" fill="rgb(233,136,54)" fg:x="611" fg:w="1"/><text x="48.6652%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.4152%" y="405" width="0.0792%" height="15" fill="rgb(233,19,40)" fg:x="611" fg:w="1"/><text x="48.6652%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4152%" y="389" width="0.0792%" height="15" fill="rgb(247,41,18)" fg:x="611" fg:w="1"/><text x="48.6652%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4152%" y="373" width="0.0792%" height="15" fill="rgb(220,34,34)" fg:x="611" fg:w="1"/><text x="48.6652%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.4152%" y="357" width="0.0792%" height="15" fill="rgb(222,135,32)" fg:x="611" fg:w="1"/><text x="48.6652%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.4152%" y="341" width="0.0792%" height="15" fill="rgb(214,80,19)" fg:x="611" fg:w="1"/><text x="48.6652%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.4152%" y="325" width="0.0792%" height="15" fill="rgb(234,54,46)" fg:x="611" fg:w="1"/><text x="48.6652%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.87%)</title><rect x="47.7021%" y="565" width="0.8716%" height="15" fill="rgb(251,48,23)" fg:x="602" fg:w="11"/><text x="47.9521%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="48.1775%" y="549" width="0.3962%" height="15" fill="rgb(254,109,52)" fg:x="608" fg:w="5"/><text x="48.4275%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="48.1775%" y="533" width="0.3962%" height="15" fill="rgb(240,186,19)" fg:x="608" fg:w="5"/><text x="48.4275%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="48.1775%" y="517" width="0.3962%" height="15" fill="rgb(246,187,17)" fg:x="608" fg:w="5"/><text x="48.4275%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="48.4152%" y="501" width="0.1585%" height="15" fill="rgb(212,21,5)" fg:x="611" fg:w="2"/><text x="48.6652%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="48.4152%" y="485" width="0.1585%" height="15" fill="rgb(225,185,18)" fg:x="611" fg:w="2"/><text x="48.6652%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="48.4945%" y="469" width="0.0792%" height="15" fill="rgb(245,114,17)" fg:x="612" fg:w="1"/><text x="48.7445%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.4945%" y="453" width="0.0792%" height="15" fill="rgb(223,164,24)" fg:x="612" fg:w="1"/><text x="48.7445%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="48.4945%" y="437" width="0.0792%" height="15" fill="rgb(211,228,3)" fg:x="612" fg:w="1"/><text x="48.7445%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.4945%" y="421" width="0.0792%" height="15" fill="rgb(223,16,38)" fg:x="612" fg:w="1"/><text x="48.7445%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="48.4945%" y="405" width="0.0792%" height="15" fill="rgb(207,31,54)" fg:x="612" fg:w="1"/><text x="48.7445%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="48.4945%" y="389" width="0.0792%" height="15" fill="rgb(220,39,11)" fg:x="612" fg:w="1"/><text x="48.7445%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.4945%" y="373" width="0.0792%" height="15" fill="rgb(235,185,0)" fg:x="612" fg:w="1"/><text x="48.7445%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="48.4945%" y="357" width="0.0792%" height="15" fill="rgb(249,39,18)" fg:x="612" fg:w="1"/><text x="48.7445%" y="367.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="48.5737%" y="565" width="0.1585%" height="15" fill="rgb(240,110,33)" fg:x="613" fg:w="2"/><text x="48.8237%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="48.6529%" y="549" width="0.0792%" height="15" fill="rgb(210,92,42)" fg:x="614" fg:w="1"/><text x="48.9029%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::new_with_key (1 samples, 0.08%)</title><rect x="48.6529%" y="533" width="0.0792%" height="15" fill="rgb(218,215,28)" fg:x="614" fg:w="1"/><text x="48.9029%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.7322%" y="517" width="0.0792%" height="15" fill="rgb(238,215,36)" fg:x="615" fg:w="1"/><text x="48.9822%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (16 samples, 1.27%)</title><rect x="47.7021%" y="597" width="1.2678%" height="15" fill="rgb(220,31,10)" fg:x="602" fg:w="16"/><text x="47.9521%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (16 samples, 1.27%)</title><rect x="47.7021%" y="581" width="1.2678%" height="15" fill="rgb(212,93,14)" fg:x="602" fg:w="16"/><text x="47.9521%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="48.7322%" y="565" width="0.2377%" height="15" fill="rgb(254,207,2)" fg:x="615" fg:w="3"/><text x="48.9822%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="48.7322%" y="549" width="0.2377%" height="15" fill="rgb(205,57,44)" fg:x="615" fg:w="3"/><text x="48.9822%" y="559.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="48.7322%" y="533" width="0.2377%" height="15" fill="rgb(226,151,19)" fg:x="615" fg:w="3"/><text x="48.9822%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="48.8114%" y="517" width="0.1585%" height="15" fill="rgb(230,72,30)" fg:x="616" fg:w="2"/><text x="49.0614%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="48.8906%" y="501" width="0.0792%" height="15" fill="rgb(244,0,8)" fg:x="617" fg:w="1"/><text x="49.1406%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.8906%" y="485" width="0.0792%" height="15" fill="rgb(230,192,6)" fg:x="617" fg:w="1"/><text x="49.1406%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="48.8906%" y="469" width="0.0792%" height="15" fill="rgb(233,207,13)" fg:x="617" fg:w="1"/><text x="49.1406%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="48.8906%" y="453" width="0.0792%" height="15" fill="rgb(206,227,7)" fg:x="617" fg:w="1"/><text x="49.1406%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="48.8906%" y="437" width="0.0792%" height="15" fill="rgb(213,217,25)" fg:x="617" fg:w="1"/><text x="49.1406%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="48.8906%" y="421" width="0.0792%" height="15" fill="rgb(249,75,4)" fg:x="617" fg:w="1"/><text x="49.1406%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="49.0491%" y="565" width="0.0792%" height="15" fill="rgb(225,114,18)" fg:x="619" fg:w="1"/><text x="49.2991%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="49.1284%" y="517" width="0.1585%" height="15" fill="rgb(211,162,40)" fg:x="620" fg:w="2"/><text x="49.3784%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="49.1284%" y="501" width="0.1585%" height="15" fill="rgb(206,49,29)" fg:x="620" fg:w="2"/><text x="49.3784%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="49.1284%" y="485" width="0.1585%" height="15" fill="rgb(244,8,6)" fg:x="620" fg:w="2"/><text x="49.3784%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.1284%" y="469" width="0.1585%" height="15" fill="rgb(231,194,28)" fg:x="620" fg:w="2"/><text x="49.3784%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.3661%" y="421" width="0.0792%" height="15" fill="rgb(210,69,5)" fg:x="623" fg:w="1"/><text x="49.6161%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.3661%" y="405" width="0.0792%" height="15" fill="rgb(216,186,12)" fg:x="623" fg:w="1"/><text x="49.6161%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.3661%" y="389" width="0.0792%" height="15" fill="rgb(238,61,15)" fg:x="623" fg:w="1"/><text x="49.6161%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="49.1284%" y="565" width="0.3962%" height="15" fill="rgb(226,104,1)" fg:x="620" fg:w="5"/><text x="49.3784%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="49.1284%" y="549" width="0.3962%" height="15" fill="rgb(229,128,15)" fg:x="620" fg:w="5"/><text x="49.3784%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="49.1284%" y="533" width="0.3962%" height="15" fill="rgb(247,110,15)" fg:x="620" fg:w="5"/><text x="49.3784%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="49.2868%" y="517" width="0.2377%" height="15" fill="rgb(210,74,48)" fg:x="622" fg:w="3"/><text x="49.5368%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.2868%" y="501" width="0.2377%" height="15" fill="rgb(246,121,10)" fg:x="622" fg:w="3"/><text x="49.5368%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="49.2868%" y="485" width="0.2377%" height="15" fill="rgb(214,156,37)" fg:x="622" fg:w="3"/><text x="49.5368%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.3661%" y="469" width="0.1585%" height="15" fill="rgb(214,210,34)" fg:x="623" fg:w="2"/><text x="49.6161%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="49.3661%" y="453" width="0.1585%" height="15" fill="rgb(237,93,35)" fg:x="623" fg:w="2"/><text x="49.6161%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.3661%" y="437" width="0.1585%" height="15" fill="rgb(206,36,8)" fg:x="623" fg:w="2"/><text x="49.6161%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.4453%" y="421" width="0.0792%" height="15" fill="rgb(208,151,12)" fg:x="624" fg:w="1"/><text x="49.6953%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4453%" y="405" width="0.0792%" height="15" fill="rgb(225,133,52)" fg:x="624" fg:w="1"/><text x="49.6953%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.4453%" y="389" width="0.0792%" height="15" fill="rgb(231,71,53)" fg:x="624" fg:w="1"/><text x="49.6953%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4453%" y="373" width="0.0792%" height="15" fill="rgb(243,76,21)" fg:x="624" fg:w="1"/><text x="49.6953%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.6830%" y="389" width="0.0792%" height="15" fill="rgb(252,144,3)" fg:x="627" fg:w="1"/><text x="49.9330%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.6830%" y="373" width="0.0792%" height="15" fill="rgb(231,199,10)" fg:x="627" fg:w="1"/><text x="49.9330%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.6830%" y="357" width="0.0792%" height="15" fill="rgb(215,18,11)" fg:x="627" fg:w="1"/><text x="49.9330%" y="367.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="49.6038%" y="517" width="0.3170%" height="15" fill="rgb(241,65,24)" fg:x="626" fg:w="4"/><text x="49.8538%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="49.6038%" y="501" width="0.3170%" height="15" fill="rgb(251,192,38)" fg:x="626" fg:w="4"/><text x="49.8538%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="49.6830%" y="485" width="0.2377%" height="15" fill="rgb(205,9,35)" fg:x="627" fg:w="3"/><text x="49.9330%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.6830%" y="469" width="0.2377%" height="15" fill="rgb(229,225,49)" fg:x="627" fg:w="3"/><text x="49.9330%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="49.6830%" y="453" width="0.2377%" height="15" fill="rgb(207,125,39)" fg:x="627" fg:w="3"/><text x="49.9330%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.6830%" y="437" width="0.2377%" height="15" fill="rgb(222,78,19)" fg:x="627" fg:w="3"/><text x="49.9330%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="49.6830%" y="421" width="0.2377%" height="15" fill="rgb(248,207,20)" fg:x="627" fg:w="3"/><text x="49.9330%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.6830%" y="405" width="0.2377%" height="15" fill="rgb(205,103,49)" fg:x="627" fg:w="3"/><text x="49.9330%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.7623%" y="389" width="0.1585%" height="15" fill="rgb(216,42,28)" fg:x="628" fg:w="2"/><text x="50.0123%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.8415%" y="373" width="0.0792%" height="15" fill="rgb(213,205,53)" fg:x="629" fg:w="1"/><text x="50.0915%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.8415%" y="357" width="0.0792%" height="15" fill="rgb(239,140,53)" fg:x="629" fg:w="1"/><text x="50.0915%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.8415%" y="341" width="0.0792%" height="15" fill="rgb(248,95,9)" fg:x="629" fg:w="1"/><text x="50.0915%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.9208%" y="485" width="0.0792%" height="15" fill="rgb(254,58,47)" fg:x="630" fg:w="1"/><text x="50.1708%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.9208%" y="469" width="0.0792%" height="15" fill="rgb(234,227,14)" fg:x="630" fg:w="1"/><text x="50.1708%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.9208%" y="453" width="0.0792%" height="15" fill="rgb(205,192,45)" fg:x="630" fg:w="1"/><text x="50.1708%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.9208%" y="437" width="0.0792%" height="15" fill="rgb(253,187,31)" fg:x="630" fg:w="1"/><text x="50.1708%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.9208%" y="421" width="0.0792%" height="15" fill="rgb(222,6,32)" fg:x="630" fg:w="1"/><text x="50.1708%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.9208%" y="405" width="0.0792%" height="15" fill="rgb(249,190,19)" fg:x="630" fg:w="1"/><text x="50.1708%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.9208%" y="389" width="0.0792%" height="15" fill="rgb(251,28,20)" fg:x="630" fg:w="1"/><text x="50.1708%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.9208%" y="373" width="0.0792%" height="15" fill="rgb(210,223,40)" fg:x="630" fg:w="1"/><text x="50.1708%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.9208%" y="357" width="0.0792%" height="15" fill="rgb(216,137,22)" fg:x="630" fg:w="1"/><text x="50.1708%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.9208%" y="341" width="0.0792%" height="15" fill="rgb(247,39,34)" fg:x="630" fg:w="1"/><text x="50.1708%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.9208%" y="325" width="0.0792%" height="15" fill="rgb(239,43,50)" fg:x="630" fg:w="1"/><text x="50.1708%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.9208%" y="309" width="0.0792%" height="15" fill="rgb(241,212,9)" fg:x="630" fg:w="1"/><text x="50.1708%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.9208%" y="293" width="0.0792%" height="15" fill="rgb(205,8,2)" fg:x="630" fg:w="1"/><text x="50.1708%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.9208%" y="277" width="0.0792%" height="15" fill="rgb(217,173,54)" fg:x="630" fg:w="1"/><text x="50.1708%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.9208%" y="261" width="0.0792%" height="15" fill="rgb(208,149,52)" fg:x="630" fg:w="1"/><text x="50.1708%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9208%" y="245" width="0.0792%" height="15" fill="rgb(239,99,40)" fg:x="630" fg:w="1"/><text x="50.1708%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="50.0000%" y="485" width="0.2377%" height="15" fill="rgb(233,214,26)" fg:x="631" fg:w="3"/><text x="50.2500%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="50.0000%" y="469" width="0.2377%" height="15" fill="rgb(231,225,37)" fg:x="631" fg:w="3"/><text x="50.2500%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="50.0000%" y="453" width="0.2377%" height="15" fill="rgb(252,55,35)" fg:x="631" fg:w="3"/><text x="50.2500%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="50.0000%" y="437" width="0.2377%" height="15" fill="rgb(239,43,18)" fg:x="631" fg:w="3"/><text x="50.2500%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2377%" y="421" width="0.0792%" height="15" fill="rgb(251,125,49)" fg:x="634" fg:w="1"/><text x="50.4877%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3170%" y="405" width="0.0792%" height="15" fill="rgb(212,83,54)" fg:x="635" fg:w="1"/><text x="50.5670%" y="415.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (576 samples, 45.64%)</title><rect x="4.8336%" y="613" width="45.6418%" height="15" fill="rgb(250,75,6)" fg:x="61" fg:w="576"/><text x="5.0836%" y="623.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (19 samples, 1.51%)</title><rect x="48.9699%" y="597" width="1.5055%" height="15" fill="rgb(252,36,40)" fg:x="618" fg:w="19"/><text x="49.2199%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.51%)</title><rect x="48.9699%" y="581" width="1.5055%" height="15" fill="rgb(230,91,51)" fg:x="618" fg:w="19"/><text x="49.2199%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.95%)</title><rect x="49.5246%" y="565" width="0.9509%" height="15" fill="rgb(212,92,28)" fg:x="625" fg:w="12"/><text x="49.7746%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (12 samples, 0.95%)</title><rect x="49.5246%" y="549" width="0.9509%" height="15" fill="rgb(227,13,22)" fg:x="625" fg:w="12"/><text x="49.7746%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (11 samples, 0.87%)</title><rect x="49.6038%" y="533" width="0.8716%" height="15" fill="rgb(239,204,32)" fg:x="626" fg:w="11"/><text x="49.8538%" y="543.50"></text></g><g><title>kernel::model::props::save_props (7 samples, 0.55%)</title><rect x="49.9208%" y="517" width="0.5547%" height="15" fill="rgb(228,49,41)" fg:x="630" fg:w="7"/><text x="50.1708%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.55%)</title><rect x="49.9208%" y="501" width="0.5547%" height="15" fill="rgb(206,95,6)" fg:x="630" fg:w="7"/><text x="50.1708%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="50.2377%" y="485" width="0.2377%" height="15" fill="rgb(251,20,14)" fg:x="634" fg:w="3"/><text x="50.4877%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="50.2377%" y="469" width="0.2377%" height="15" fill="rgb(214,99,28)" fg:x="634" fg:w="3"/><text x="50.4877%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="50.2377%" y="453" width="0.2377%" height="15" fill="rgb(239,122,54)" fg:x="634" fg:w="3"/><text x="50.4877%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="50.2377%" y="437" width="0.2377%" height="15" fill="rgb(218,217,46)" fg:x="634" fg:w="3"/><text x="50.4877%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="50.3170%" y="421" width="0.1585%" height="15" fill="rgb(249,106,28)" fg:x="635" fg:w="2"/><text x="50.5670%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="50.3962%" y="405" width="0.0792%" height="15" fill="rgb(250,158,18)" fg:x="636" fg:w="1"/><text x="50.6462%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="50.3962%" y="389" width="0.0792%" height="15" fill="rgb(226,137,29)" fg:x="636" fg:w="1"/><text x="50.6462%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="50.4754%" y="613" width="0.0792%" height="15" fill="rgb(210,188,1)" fg:x="637" fg:w="1"/><text x="50.7254%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="50.4754%" y="597" width="0.0792%" height="15" fill="rgb(227,84,42)" fg:x="637" fg:w="1"/><text x="50.7254%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="50.4754%" y="581" width="0.0792%" height="15" fill="rgb(222,147,48)" fg:x="637" fg:w="1"/><text x="50.7254%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="50.5547%" y="597" width="0.1585%" height="15" fill="rgb(241,150,43)" fg:x="638" fg:w="2"/><text x="50.8047%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.6339%" y="581" width="0.0792%" height="15" fill="rgb(206,139,52)" fg:x="639" fg:w="1"/><text x="50.8839%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.6339%" y="565" width="0.0792%" height="15" fill="rgb(230,63,14)" fg:x="639" fg:w="1"/><text x="50.8839%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.6339%" y="549" width="0.0792%" height="15" fill="rgb(247,8,20)" fg:x="639" fg:w="1"/><text x="50.8839%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.6339%" y="533" width="0.0792%" height="15" fill="rgb(213,115,4)" fg:x="639" fg:w="1"/><text x="50.8839%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.6339%" y="517" width="0.0792%" height="15" fill="rgb(241,79,49)" fg:x="639" fg:w="1"/><text x="50.8839%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.6339%" y="501" width="0.0792%" height="15" fill="rgb(222,42,35)" fg:x="639" fg:w="1"/><text x="50.8839%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.6339%" y="485" width="0.0792%" height="15" fill="rgb(247,59,23)" fg:x="639" fg:w="1"/><text x="50.8839%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.6339%" y="469" width="0.0792%" height="15" fill="rgb(247,93,18)" fg:x="639" fg:w="1"/><text x="50.8839%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.6339%" y="453" width="0.0792%" height="15" fill="rgb(249,107,47)" fg:x="639" fg:w="1"/><text x="50.8839%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.6339%" y="437" width="0.0792%" height="15" fill="rgb(219,27,1)" fg:x="639" fg:w="1"/><text x="50.8839%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.6339%" y="421" width="0.0792%" height="15" fill="rgb(217,82,32)" fg:x="639" fg:w="1"/><text x="50.8839%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6339%" y="405" width="0.0792%" height="15" fill="rgb(250,129,47)" fg:x="639" fg:w="1"/><text x="50.8839%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="50.7132%" y="565" width="0.0792%" height="15" fill="rgb(253,88,35)" fg:x="640" fg:w="1"/><text x="50.9632%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="50.7924%" y="565" width="0.0792%" height="15" fill="rgb(245,221,14)" fg:x="641" fg:w="1"/><text x="51.0424%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="50.7924%" y="549" width="0.0792%" height="15" fill="rgb(217,119,54)" fg:x="641" fg:w="1"/><text x="51.0424%" y="559.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="50.7924%" y="533" width="0.0792%" height="15" fill="rgb(247,128,31)" fg:x="641" fg:w="1"/><text x="51.0424%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="51.0301%" y="549" width="0.0792%" height="15" fill="rgb(211,99,22)" fg:x="644" fg:w="1"/><text x="51.2801%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.0301%" y="533" width="0.0792%" height="15" fill="rgb(212,20,17)" fg:x="644" fg:w="1"/><text x="51.2801%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="51.1886%" y="533" width="0.0792%" height="15" fill="rgb(209,159,29)" fg:x="646" fg:w="1"/><text x="51.4386%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="51.1886%" y="517" width="0.0792%" height="15" fill="rgb(222,177,53)" fg:x="646" fg:w="1"/><text x="51.4386%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.1886%" y="501" width="0.0792%" height="15" fill="rgb(234,46,43)" fg:x="646" fg:w="1"/><text x="51.4386%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.1886%" y="485" width="0.0792%" height="15" fill="rgb(208,108,14)" fg:x="646" fg:w="1"/><text x="51.4386%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.1886%" y="469" width="0.0792%" height="15" fill="rgb(226,78,53)" fg:x="646" fg:w="1"/><text x="51.4386%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.1886%" y="453" width="0.0792%" height="15" fill="rgb(230,20,41)" fg:x="646" fg:w="1"/><text x="51.4386%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.1886%" y="437" width="0.0792%" height="15" fill="rgb(213,195,35)" fg:x="646" fg:w="1"/><text x="51.4386%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.6640%" y="453" width="0.0792%" height="15" fill="rgb(242,62,36)" fg:x="652" fg:w="1"/><text x="51.9140%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="51.3471%" y="501" width="0.4754%" height="15" fill="rgb(222,210,37)" fg:x="648" fg:w="6"/><text x="51.5971%" y="511.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="51.3471%" y="485" width="0.4754%" height="15" fill="rgb(232,107,19)" fg:x="648" fg:w="6"/><text x="51.5971%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="51.5848%" y="469" width="0.2377%" height="15" fill="rgb(235,85,17)" fg:x="651" fg:w="3"/><text x="51.8348%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="51.7433%" y="453" width="0.0792%" height="15" fill="rgb(219,195,31)" fg:x="653" fg:w="1"/><text x="51.9933%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.71%)</title><rect x="51.2678%" y="517" width="0.7132%" height="15" fill="rgb(231,183,30)" fg:x="647" fg:w="9"/><text x="51.5178%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="51.8225%" y="501" width="0.1585%" height="15" fill="rgb(212,0,11)" fg:x="654" fg:w="2"/><text x="52.0725%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="51.8225%" y="485" width="0.1585%" height="15" fill="rgb(249,53,54)" fg:x="654" fg:w="2"/><text x="52.0725%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="51.9017%" y="469" width="0.0792%" height="15" fill="rgb(211,118,13)" fg:x="655" fg:w="1"/><text x="52.1517%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="52.0602%" y="501" width="0.0792%" height="15" fill="rgb(237,42,9)" fg:x="657" fg:w="1"/><text x="52.3102%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="52.1395%" y="501" width="0.0792%" height="15" fill="rgb(227,68,32)" fg:x="658" fg:w="1"/><text x="52.3895%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.1395%" y="485" width="0.0792%" height="15" fill="rgb(238,10,7)" fg:x="658" fg:w="1"/><text x="52.3895%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.1395%" y="469" width="0.0792%" height="15" fill="rgb(224,42,12)" fg:x="658" fg:w="1"/><text x="52.3895%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.71%)</title><rect x="52.2187%" y="501" width="0.7132%" height="15" fill="rgb(252,190,5)" fg:x="659" fg:w="9"/><text x="52.4687%" y="511.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="52.4564%" y="485" width="0.4754%" height="15" fill="rgb(220,214,39)" fg:x="662" fg:w="6"/><text x="52.7064%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="52.5357%" y="469" width="0.3962%" height="15" fill="rgb(247,98,4)" fg:x="663" fg:w="5"/><text x="52.7857%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="52.6149%" y="453" width="0.3170%" height="15" fill="rgb(211,60,12)" fg:x="664" fg:w="4"/><text x="52.8649%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.8526%" y="437" width="0.0792%" height="15" fill="rgb(224,42,10)" fg:x="667" fg:w="1"/><text x="53.1026%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.8526%" y="421" width="0.0792%" height="15" fill="rgb(217,167,4)" fg:x="667" fg:w="1"/><text x="53.1026%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="52.8526%" y="405" width="0.0792%" height="15" fill="rgb(253,18,17)" fg:x="667" fg:w="1"/><text x="53.1026%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.1696%" y="485" width="0.0792%" height="15" fill="rgb(249,186,44)" fg:x="671" fg:w="1"/><text x="53.4196%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="53.2488%" y="453" width="0.0792%" height="15" fill="rgb(254,124,54)" fg:x="672" fg:w="1"/><text x="53.4988%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="53.2488%" y="437" width="0.0792%" height="15" fill="rgb(220,124,39)" fg:x="672" fg:w="1"/><text x="53.4988%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="53.3281%" y="453" width="0.0792%" height="15" fill="rgb(225,96,46)" fg:x="673" fg:w="1"/><text x="53.5781%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="53.3281%" y="437" width="0.0792%" height="15" fill="rgb(221,106,12)" fg:x="673" fg:w="1"/><text x="53.5781%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="53.2488%" y="485" width="0.3962%" height="15" fill="rgb(227,133,23)" fg:x="672" fg:w="5"/><text x="53.4988%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="53.2488%" y="469" width="0.3962%" height="15" fill="rgb(216,44,52)" fg:x="672" fg:w="5"/><text x="53.4988%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="53.4073%" y="453" width="0.2377%" height="15" fill="rgb(239,149,7)" fg:x="674" fg:w="3"/><text x="53.6573%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.5658%" y="437" width="0.0792%" height="15" fill="rgb(211,157,31)" fg:x="676" fg:w="1"/><text x="53.8158%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.5658%" y="421" width="0.0792%" height="15" fill="rgb(206,215,22)" fg:x="676" fg:w="1"/><text x="53.8158%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="53.6450%" y="485" width="0.3170%" height="15" fill="rgb(208,113,15)" fg:x="677" fg:w="4"/><text x="53.8950%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="53.6450%" y="469" width="0.3170%" height="15" fill="rgb(207,189,15)" fg:x="677" fg:w="4"/><text x="53.8950%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.8827%" y="453" width="0.0792%" height="15" fill="rgb(231,115,4)" fg:x="680" fg:w="1"/><text x="54.1327%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.1997%" y="421" width="0.0792%" height="15" fill="rgb(253,117,2)" fg:x="684" fg:w="1"/><text x="54.4497%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="54.0412%" y="469" width="0.3962%" height="15" fill="rgb(248,48,24)" fg:x="682" fg:w="5"/><text x="54.2912%" y="479.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="54.0412%" y="453" width="0.3962%" height="15" fill="rgb(241,28,46)" fg:x="682" fg:w="5"/><text x="54.2912%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="54.1204%" y="437" width="0.3170%" height="15" fill="rgb(216,165,52)" fg:x="683" fg:w="4"/><text x="54.3704%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="54.2789%" y="421" width="0.1585%" height="15" fill="rgb(220,222,34)" fg:x="685" fg:w="2"/><text x="54.5289%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="54.5166%" y="453" width="0.1585%" height="15" fill="rgb(247,222,49)" fg:x="688" fg:w="2"/><text x="54.7666%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="54.5959%" y="437" width="0.0792%" height="15" fill="rgb(240,10,31)" fg:x="689" fg:w="1"/><text x="54.8459%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="54.6751%" y="437" width="0.1585%" height="15" fill="rgb(221,199,35)" fg:x="690" fg:w="2"/><text x="54.9251%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="54.8336%" y="437" width="0.1585%" height="15" fill="rgb(230,223,11)" fg:x="692" fg:w="2"/><text x="55.0836%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="54.8336%" y="421" width="0.1585%" height="15" fill="rgb(218,82,45)" fg:x="692" fg:w="2"/><text x="55.0836%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="54.8336%" y="405" width="0.1585%" height="15" fill="rgb(233,213,33)" fg:x="692" fg:w="2"/><text x="55.0836%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.9128%" y="389" width="0.0792%" height="15" fill="rgb(210,143,52)" fg:x="693" fg:w="1"/><text x="55.1628%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="54.9921%" y="421" width="0.0792%" height="15" fill="rgb(206,95,4)" fg:x="694" fg:w="1"/><text x="55.2421%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="54.9921%" y="405" width="0.0792%" height="15" fill="rgb(246,164,46)" fg:x="694" fg:w="1"/><text x="55.2421%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.1506%" y="373" width="0.0792%" height="15" fill="rgb(213,210,47)" fg:x="696" fg:w="1"/><text x="55.4006%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="55.0713%" y="421" width="0.2377%" height="15" fill="rgb(210,12,38)" fg:x="695" fg:w="3"/><text x="55.3213%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="55.1506%" y="405" width="0.1585%" height="15" fill="rgb(252,192,54)" fg:x="696" fg:w="2"/><text x="55.4006%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="55.1506%" y="389" width="0.1585%" height="15" fill="rgb(242,92,6)" fg:x="696" fg:w="2"/><text x="55.4006%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="55.2298%" y="373" width="0.0792%" height="15" fill="rgb(253,154,15)" fg:x="697" fg:w="1"/><text x="55.4798%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="55.3090%" y="421" width="0.0792%" height="15" fill="rgb(209,20,43)" fg:x="698" fg:w="1"/><text x="55.5590%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="54.9921%" y="437" width="0.5547%" height="15" fill="rgb(232,28,49)" fg:x="694" fg:w="7"/><text x="55.2421%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="55.3883%" y="421" width="0.1585%" height="15" fill="rgb(248,131,53)" fg:x="699" fg:w="2"/><text x="55.6383%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="55.4675%" y="405" width="0.0792%" height="15" fill="rgb(214,16,30)" fg:x="700" fg:w="1"/><text x="55.7175%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="54.6751%" y="453" width="0.9509%" height="15" fill="rgb(245,16,0)" fg:x="690" fg:w="12"/><text x="54.9251%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="55.5468%" y="437" width="0.0792%" height="15" fill="rgb(245,17,35)" fg:x="701" fg:w="1"/><text x="55.7968%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="55.5468%" y="421" width="0.0792%" height="15" fill="rgb(249,27,53)" fg:x="701" fg:w="1"/><text x="55.7968%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.5468%" y="405" width="0.0792%" height="15" fill="rgb(214,73,24)" fg:x="701" fg:w="1"/><text x="55.7968%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="55.5468%" y="389" width="0.0792%" height="15" fill="rgb(223,84,37)" fg:x="701" fg:w="1"/><text x="55.7968%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.27%)</title><rect x="54.4374%" y="469" width="1.2678%" height="15" fill="rgb(210,109,28)" fg:x="687" fg:w="16"/><text x="54.6874%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="55.6260%" y="453" width="0.0792%" height="15" fill="rgb(208,186,6)" fg:x="702" fg:w="1"/><text x="55.8760%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="55.6260%" y="437" width="0.0792%" height="15" fill="rgb(235,201,30)" fg:x="702" fg:w="1"/><text x="55.8760%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.7845%" y="437" width="0.0792%" height="15" fill="rgb(216,198,48)" fg:x="704" fg:w="1"/><text x="56.0345%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 1.98%)</title><rect x="53.9620%" y="485" width="1.9810%" height="15" fill="rgb(254,186,25)" fg:x="681" fg:w="25"/><text x="54.2120%" y="495.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="55.7052%" y="469" width="0.2377%" height="15" fill="rgb(227,87,5)" fg:x="703" fg:w="3"/><text x="55.9552%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="55.7052%" y="453" width="0.2377%" height="15" fill="rgb(236,205,25)" fg:x="703" fg:w="3"/><text x="55.9552%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="55.8637%" y="437" width="0.0792%" height="15" fill="rgb(229,99,32)" fg:x="705" fg:w="1"/><text x="56.1137%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (41 samples, 3.25%)</title><rect x="52.9319%" y="501" width="3.2488%" height="15" fill="rgb(231,177,31)" fg:x="668" fg:w="41"/><text x="53.1819%" y="511.50">ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="55.9429%" y="485" width="0.2377%" height="15" fill="rgb(246,15,2)" fg:x="706" fg:w="3"/><text x="56.1929%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (56 samples, 4.44%)</title><rect x="51.9810%" y="517" width="4.4374%" height="15" fill="rgb(207,39,15)" fg:x="656" fg:w="56"/><text x="52.2310%" y="527.50">serde..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="56.1807%" y="501" width="0.2377%" height="15" fill="rgb(207,44,9)" fg:x="709" fg:w="3"/><text x="56.4307%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="56.2599%" y="485" width="0.1585%" height="15" fill="rgb(225,224,33)" fg:x="710" fg:w="2"/><text x="56.5099%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="56.2599%" y="469" width="0.1585%" height="15" fill="rgb(252,151,3)" fg:x="710" fg:w="2"/><text x="56.5099%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="56.3391%" y="453" width="0.0792%" height="15" fill="rgb(211,140,13)" fg:x="711" fg:w="1"/><text x="56.5891%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="56.3391%" y="437" width="0.0792%" height="15" fill="rgb(239,225,17)" fg:x="711" fg:w="1"/><text x="56.5891%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="56.3391%" y="421" width="0.0792%" height="15" fill="rgb(223,170,52)" fg:x="711" fg:w="1"/><text x="56.5891%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (66 samples, 5.23%)</title><rect x="51.2678%" y="533" width="5.2298%" height="15" fill="rgb(212,64,21)" fg:x="647" fg:w="66"/><text x="51.5178%" y="543.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="56.4184%" y="517" width="0.0792%" height="15" fill="rgb(236,126,48)" fg:x="712" fg:w="1"/><text x="56.6684%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="56.4184%" y="501" width="0.0792%" height="15" fill="rgb(209,135,11)" fg:x="712" fg:w="1"/><text x="56.6684%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.4184%" y="485" width="0.0792%" height="15" fill="rgb(228,126,40)" fg:x="712" fg:w="1"/><text x="56.6684%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="56.6561%" y="485" width="0.1585%" height="15" fill="rgb(205,196,36)" fg:x="715" fg:w="2"/><text x="56.9061%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="56.8146%" y="485" width="0.3170%" height="15" fill="rgb(243,160,33)" fg:x="717" fg:w="4"/><text x="57.0646%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.0523%" y="469" width="0.0792%" height="15" fill="rgb(210,84,20)" fg:x="720" fg:w="1"/><text x="57.3023%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.1315%" y="469" width="0.0792%" height="15" fill="rgb(228,213,30)" fg:x="721" fg:w="1"/><text x="57.3815%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="57.2900%" y="453" width="0.2377%" height="15" fill="rgb(252,33,45)" fg:x="723" fg:w="3"/><text x="57.5400%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.11%)</title><rect x="56.4976%" y="533" width="1.1094%" height="15" fill="rgb(254,227,20)" fg:x="713" fg:w="14"/><text x="56.7476%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.11%)</title><rect x="56.4976%" y="517" width="1.1094%" height="15" fill="rgb(228,192,2)" fg:x="713" fg:w="14"/><text x="56.7476%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="56.5769%" y="501" width="1.0301%" height="15" fill="rgb(233,32,8)" fg:x="714" fg:w="13"/><text x="56.8269%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="57.1315%" y="485" width="0.4754%" height="15" fill="rgb(220,146,47)" fg:x="721" fg:w="6"/><text x="57.3815%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="57.2108%" y="469" width="0.3962%" height="15" fill="rgb(246,194,1)" fg:x="722" fg:w="5"/><text x="57.4608%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.5277%" y="453" width="0.0792%" height="15" fill="rgb(218,203,9)" fg:x="726" fg:w="1"/><text x="57.7777%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.5277%" y="437" width="0.0792%" height="15" fill="rgb(237,97,14)" fg:x="726" fg:w="1"/><text x="57.7777%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.7655%" y="501" width="0.1585%" height="15" fill="rgb(239,76,15)" fg:x="729" fg:w="2"/><text x="58.0155%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="58.0032%" y="469" width="0.1585%" height="15" fill="rgb(222,53,45)" fg:x="732" fg:w="2"/><text x="58.2532%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.1616%" y="469" width="0.0792%" height="15" fill="rgb(237,88,5)" fg:x="734" fg:w="1"/><text x="58.4116%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="58.3201%" y="453" width="0.1585%" height="15" fill="rgb(218,223,35)" fg:x="736" fg:w="2"/><text x="58.5701%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.3994%" y="437" width="0.0792%" height="15" fill="rgb(243,229,38)" fg:x="737" fg:w="1"/><text x="58.6494%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.4786%" y="421" width="0.0792%" height="15" fill="rgb(240,75,41)" fg:x="738" fg:w="1"/><text x="58.7286%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.6371%" y="389" width="0.0792%" height="15" fill="rgb(209,110,37)" fg:x="740" fg:w="1"/><text x="58.8871%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.7163%" y="389" width="0.0792%" height="15" fill="rgb(221,130,46)" fg:x="741" fg:w="1"/><text x="58.9663%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="58.5578%" y="421" width="0.3170%" height="15" fill="rgb(237,160,20)" fg:x="739" fg:w="4"/><text x="58.8078%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="58.6371%" y="405" width="0.2377%" height="15" fill="rgb(234,126,24)" fg:x="740" fg:w="3"/><text x="58.8871%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.7956%" y="389" width="0.0792%" height="15" fill="rgb(207,177,9)" fg:x="742" fg:w="1"/><text x="59.0456%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8748%" y="389" width="0.0792%" height="15" fill="rgb(231,191,33)" fg:x="743" fg:w="1"/><text x="59.1248%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.11%)</title><rect x="57.9239%" y="501" width="1.1094%" height="15" fill="rgb(207,42,1)" fg:x="731" fg:w="14"/><text x="58.1739%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.11%)</title><rect x="57.9239%" y="485" width="1.1094%" height="15" fill="rgb(218,34,50)" fg:x="731" fg:w="14"/><text x="58.1739%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.79%)</title><rect x="58.2409%" y="469" width="0.7924%" height="15" fill="rgb(254,126,39)" fg:x="735" fg:w="10"/><text x="58.4909%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="58.4786%" y="453" width="0.5547%" height="15" fill="rgb(251,17,26)" fg:x="738" fg:w="7"/><text x="58.7286%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="58.4786%" y="437" width="0.5547%" height="15" fill="rgb(252,215,34)" fg:x="738" fg:w="7"/><text x="58.7286%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="58.8748%" y="421" width="0.1585%" height="15" fill="rgb(217,120,44)" fg:x="743" fg:w="2"/><text x="59.1248%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="58.8748%" y="405" width="0.1585%" height="15" fill="rgb(211,31,11)" fg:x="743" fg:w="2"/><text x="59.1248%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.9540%" y="389" width="0.0792%" height="15" fill="rgb(222,69,51)" fg:x="744" fg:w="1"/><text x="59.2040%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.0333%" y="501" width="0.0792%" height="15" fill="rgb(215,229,42)" fg:x="745" fg:w="1"/><text x="59.2833%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="59.5880%" y="437" width="0.1585%" height="15" fill="rgb(212,102,15)" fg:x="752" fg:w="2"/><text x="59.8380%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="59.5880%" y="421" width="0.1585%" height="15" fill="rgb(205,179,41)" fg:x="752" fg:w="2"/><text x="59.8380%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="59.6672%" y="405" width="0.0792%" height="15" fill="rgb(219,148,46)" fg:x="753" fg:w="1"/><text x="59.9172%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="59.6672%" y="389" width="0.0792%" height="15" fill="rgb(243,40,19)" fg:x="753" fg:w="1"/><text x="59.9172%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.6672%" y="373" width="0.0792%" height="15" fill="rgb(208,206,34)" fg:x="753" fg:w="1"/><text x="59.9172%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (26 samples, 2.06%)</title><rect x="57.7655%" y="517" width="2.0602%" height="15" fill="rgb(244,184,38)" fg:x="729" fg:w="26"/><text x="58.0155%" y="527.50">&lt;..</text></g><g><title>treediff::diff::diff (9 samples, 0.71%)</title><rect x="59.1125%" y="501" width="0.7132%" height="15" fill="rgb(244,151,47)" fg:x="746" fg:w="9"/><text x="59.3625%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.71%)</title><rect x="59.1125%" y="485" width="0.7132%" height="15" fill="rgb(236,134,42)" fg:x="746" fg:w="9"/><text x="59.3625%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="59.3502%" y="469" width="0.4754%" height="15" fill="rgb(233,93,22)" fg:x="749" fg:w="6"/><text x="59.6002%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="59.5087%" y="453" width="0.3170%" height="15" fill="rgb(211,202,10)" fg:x="751" fg:w="4"/><text x="59.7587%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.7464%" y="437" width="0.0792%" height="15" fill="rgb(240,63,8)" fg:x="754" fg:w="1"/><text x="59.9964%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="59.8257%" y="517" width="0.0792%" height="15" fill="rgb(214,9,4)" fg:x="755" fg:w="1"/><text x="60.0757%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.8257%" y="501" width="0.0792%" height="15" fill="rgb(243,66,45)" fg:x="755" fg:w="1"/><text x="60.0757%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="60.3011%" y="485" width="0.0792%" height="15" fill="rgb(220,50,42)" fg:x="761" fg:w="1"/><text x="60.5511%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="60.3011%" y="469" width="0.0792%" height="15" fill="rgb(220,134,27)" fg:x="761" fg:w="1"/><text x="60.5511%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="60.3803%" y="485" width="0.3962%" height="15" fill="rgb(246,151,50)" fg:x="762" fg:w="5"/><text x="60.6303%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="60.3803%" y="469" width="0.3962%" height="15" fill="rgb(238,216,27)" fg:x="762" fg:w="5"/><text x="60.6303%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.40%)</title><rect x="60.3803%" y="453" width="0.3962%" height="15" fill="rgb(250,92,11)" fg:x="762" fg:w="5"/><text x="60.6303%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="60.7765%" y="485" width="0.1585%" height="15" fill="rgb(248,183,6)" fg:x="767" fg:w="2"/><text x="61.0265%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="60.8558%" y="469" width="0.0792%" height="15" fill="rgb(211,204,50)" fg:x="768" fg:w="1"/><text x="61.1058%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.8558%" y="453" width="0.0792%" height="15" fill="rgb(252,55,47)" fg:x="768" fg:w="1"/><text x="61.1058%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.8558%" y="437" width="0.0792%" height="15" fill="rgb(240,198,32)" fg:x="768" fg:w="1"/><text x="61.1058%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8558%" y="421" width="0.0792%" height="15" fill="rgb(224,203,19)" fg:x="768" fg:w="1"/><text x="61.1058%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="60.9350%" y="485" width="0.0792%" height="15" fill="rgb(205,27,16)" fg:x="769" fg:w="1"/><text x="61.1850%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="60.9350%" y="469" width="0.0792%" height="15" fill="rgb(224,226,17)" fg:x="769" fg:w="1"/><text x="61.1850%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9350%" y="453" width="0.0792%" height="15" fill="rgb(205,216,54)" fg:x="769" fg:w="1"/><text x="61.1850%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9350%" y="437" width="0.0792%" height="15" fill="rgb(248,168,46)" fg:x="769" fg:w="1"/><text x="61.1850%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.9350%" y="421" width="0.0792%" height="15" fill="rgb(226,111,45)" fg:x="769" fg:w="1"/><text x="61.1850%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.4105%" y="453" width="0.0792%" height="15" fill="rgb(231,15,9)" fg:x="775" fg:w="1"/><text x="61.6605%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.55%)</title><rect x="61.6482%" y="437" width="0.5547%" height="15" fill="rgb(243,168,3)" fg:x="778" fg:w="7"/><text x="61.8982%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="61.7274%" y="421" width="0.4754%" height="15" fill="rgb(221,220,54)" fg:x="779" fg:w="6"/><text x="61.9774%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="61.8859%" y="405" width="0.3170%" height="15" fill="rgb(232,174,38)" fg:x="781" fg:w="4"/><text x="62.1359%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="61.9651%" y="389" width="0.2377%" height="15" fill="rgb(205,14,38)" fg:x="782" fg:w="3"/><text x="62.2151%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="61.9651%" y="373" width="0.2377%" height="15" fill="rgb(234,89,19)" fg:x="782" fg:w="3"/><text x="62.2151%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="62.1236%" y="357" width="0.0792%" height="15" fill="rgb(216,68,51)" fg:x="784" fg:w="1"/><text x="62.3736%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="62.5198%" y="421" width="0.1585%" height="15" fill="rgb(213,49,2)" fg:x="789" fg:w="2"/><text x="62.7698%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.0745%" y="373" width="0.0792%" height="15" fill="rgb(242,146,30)" fg:x="796" fg:w="1"/><text x="63.3245%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="62.8368%" y="405" width="0.3962%" height="15" fill="rgb(224,188,11)" fg:x="793" fg:w="5"/><text x="63.0868%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="62.9952%" y="389" width="0.2377%" height="15" fill="rgb(213,159,11)" fg:x="795" fg:w="3"/><text x="63.2452%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="63.1537%" y="373" width="0.0792%" height="15" fill="rgb(229,13,31)" fg:x="797" fg:w="1"/><text x="63.4037%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="63.2330%" y="405" width="0.0792%" height="15" fill="rgb(209,103,11)" fg:x="798" fg:w="1"/><text x="63.4830%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="63.2330%" y="389" width="0.0792%" height="15" fill="rgb(206,3,4)" fg:x="798" fg:w="1"/><text x="63.4830%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="63.7876%" y="341" width="0.3170%" height="15" fill="rgb(252,10,49)" fg:x="805" fg:w="4"/><text x="64.0376%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.9461%" y="325" width="0.1585%" height="15" fill="rgb(217,160,32)" fg:x="807" fg:w="2"/><text x="64.1961%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="64.0254%" y="309" width="0.0792%" height="15" fill="rgb(249,196,0)" fg:x="808" fg:w="1"/><text x="64.2754%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="64.3423%" y="325" width="0.1585%" height="15" fill="rgb(213,17,48)" fg:x="812" fg:w="2"/><text x="64.5923%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.3423%" y="309" width="0.1585%" height="15" fill="rgb(206,42,46)" fg:x="812" fg:w="2"/><text x="64.5923%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.3423%" y="293" width="0.1585%" height="15" fill="rgb(212,105,24)" fg:x="812" fg:w="2"/><text x="64.5923%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.4216%" y="277" width="0.0792%" height="15" fill="rgb(243,216,30)" fg:x="813" fg:w="1"/><text x="64.6716%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.79%)</title><rect x="63.7876%" y="357" width="0.7924%" height="15" fill="rgb(207,121,3)" fg:x="805" fg:w="10"/><text x="64.0376%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="64.1046%" y="341" width="0.4754%" height="15" fill="rgb(249,78,0)" fg:x="809" fg:w="6"/><text x="64.3546%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5008%" y="325" width="0.0792%" height="15" fill="rgb(244,151,32)" fg:x="814" fg:w="1"/><text x="64.7508%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 1.98%)</title><rect x="62.6783%" y="421" width="1.9810%" height="15" fill="rgb(228,63,25)" fg:x="791" fg:w="25"/><text x="62.9283%" y="431.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.35%)</title><rect x="63.3122%" y="405" width="1.3471%" height="15" fill="rgb(231,158,23)" fg:x="799" fg:w="17"/><text x="63.5622%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.35%)</title><rect x="63.3122%" y="389" width="1.3471%" height="15" fill="rgb(248,107,23)" fg:x="799" fg:w="17"/><text x="63.5622%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.27%)</title><rect x="63.3914%" y="373" width="1.2678%" height="15" fill="rgb(215,168,21)" fg:x="800" fg:w="16"/><text x="63.6414%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5800%" y="357" width="0.0792%" height="15" fill="rgb(227,83,22)" fg:x="815" fg:w="1"/><text x="64.8300%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (44 samples, 3.49%)</title><rect x="61.3312%" y="469" width="3.4865%" height="15" fill="rgb(217,118,43)" fg:x="774" fg:w="44"/><text x="61.5812%" y="479.50">&lt;se..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (42 samples, 3.33%)</title><rect x="61.4897%" y="453" width="3.3281%" height="15" fill="rgb(229,220,41)" fg:x="776" fg:w="42"/><text x="61.7397%" y="463.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (33 samples, 2.61%)</title><rect x="62.2029%" y="437" width="2.6149%" height="15" fill="rgb(254,146,46)" fg:x="785" fg:w="33"/><text x="62.4529%" y="447.50">se..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.6593%" y="421" width="0.1585%" height="15" fill="rgb(233,208,31)" fg:x="816" fg:w="2"/><text x="64.9093%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (67 samples, 5.31%)</title><rect x="59.9049%" y="517" width="5.3090%" height="15" fill="rgb(222,162,7)" fg:x="756" fg:w="67"/><text x="60.1549%" y="527.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (66 samples, 5.23%)</title><rect x="59.9842%" y="501" width="5.2298%" height="15" fill="rgb(230,117,45)" fg:x="757" fg:w="66"/><text x="60.2342%" y="511.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (53 samples, 4.20%)</title><rect x="61.0143%" y="485" width="4.1997%" height="15" fill="rgb(239,163,6)" fg:x="770" fg:w="53"/><text x="61.2643%" y="495.50">serde..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="64.8177%" y="469" width="0.3962%" height="15" fill="rgb(246,130,17)" fg:x="818" fg:w="5"/><text x="65.0677%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="64.8970%" y="453" width="0.3170%" height="15" fill="rgb(216,84,5)" fg:x="819" fg:w="4"/><text x="65.1470%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="64.9762%" y="437" width="0.2377%" height="15" fill="rgb(230,200,21)" fg:x="820" fg:w="3"/><text x="65.2262%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.5309%" y="373" width="0.0792%" height="15" fill="rgb(224,2,8)" fg:x="827" fg:w="1"/><text x="65.7809%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.5309%" y="357" width="0.0792%" height="15" fill="rgb(238,178,10)" fg:x="827" fg:w="1"/><text x="65.7809%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.5309%" y="341" width="0.0792%" height="15" fill="rgb(242,153,24)" fg:x="827" fg:w="1"/><text x="65.7809%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.5309%" y="325" width="0.0792%" height="15" fill="rgb(242,32,48)" fg:x="827" fg:w="1"/><text x="65.7809%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.6894%" y="341" width="0.0792%" height="15" fill="rgb(227,36,0)" fg:x="829" fg:w="1"/><text x="65.9394%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.7686%" y="325" width="0.0792%" height="15" fill="rgb(251,33,35)" fg:x="830" fg:w="1"/><text x="66.0186%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.7686%" y="309" width="0.0792%" height="15" fill="rgb(232,168,51)" fg:x="830" fg:w="1"/><text x="66.0186%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.7686%" y="293" width="0.0792%" height="15" fill="rgb(228,56,10)" fg:x="830" fg:w="1"/><text x="66.0186%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.7686%" y="277" width="0.0792%" height="15" fill="rgb(231,10,26)" fg:x="830" fg:w="1"/><text x="66.0186%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.7686%" y="261" width="0.0792%" height="15" fill="rgb(226,202,12)" fg:x="830" fg:w="1"/><text x="66.0186%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7686%" y="245" width="0.0792%" height="15" fill="rgb(251,49,21)" fg:x="830" fg:w="1"/><text x="66.0186%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.7686%" y="341" width="0.1585%" height="15" fill="rgb(206,228,28)" fg:x="830" fg:w="2"/><text x="66.0186%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.8479%" y="325" width="0.0792%" height="15" fill="rgb(205,198,31)" fg:x="831" fg:w="1"/><text x="66.0979%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="65.6894%" y="357" width="0.3170%" height="15" fill="rgb(213,69,1)" fg:x="829" fg:w="4"/><text x="65.9394%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.9271%" y="341" width="0.0792%" height="15" fill="rgb(209,177,9)" fg:x="832" fg:w="1"/><text x="66.1771%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.0063%" y="357" width="0.0792%" height="15" fill="rgb(227,119,30)" fg:x="833" fg:w="1"/><text x="66.2563%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="66.0063%" y="341" width="0.0792%" height="15" fill="rgb(234,106,41)" fg:x="833" fg:w="1"/><text x="66.2563%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.71%)</title><rect x="65.5309%" y="389" width="0.7132%" height="15" fill="rgb(244,103,47)" fg:x="827" fg:w="9"/><text x="65.7809%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="65.6101%" y="373" width="0.6339%" height="15" fill="rgb(212,211,25)" fg:x="828" fg:w="8"/><text x="65.8601%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.0856%" y="357" width="0.1585%" height="15" fill="rgb(208,63,53)" fg:x="834" fg:w="2"/><text x="66.3356%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.0856%" y="341" width="0.1585%" height="15" fill="rgb(213,176,21)" fg:x="834" fg:w="2"/><text x="66.3356%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.0856%" y="325" width="0.1585%" height="15" fill="rgb(243,124,12)" fg:x="834" fg:w="2"/><text x="66.3356%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.95%)</title><rect x="65.4517%" y="421" width="0.9509%" height="15" fill="rgb(239,2,35)" fg:x="826" fg:w="12"/><text x="65.7017%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.87%)</title><rect x="65.5309%" y="405" width="0.8716%" height="15" fill="rgb(253,169,22)" fg:x="827" fg:w="11"/><text x="65.7809%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="66.2441%" y="389" width="0.1585%" height="15" fill="rgb(254,51,12)" fg:x="836" fg:w="2"/><text x="66.4941%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="66.4025%" y="421" width="0.3962%" height="15" fill="rgb(244,17,47)" fg:x="838" fg:w="5"/><text x="66.6525%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="66.4818%" y="405" width="0.3170%" height="15" fill="rgb(251,45,46)" fg:x="839" fg:w="4"/><text x="66.7318%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.82%)</title><rect x="65.2932%" y="453" width="1.8225%" height="15" fill="rgb(223,87,43)" fg:x="824" fg:w="23"/><text x="65.5432%" y="463.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.82%)</title><rect x="65.2932%" y="437" width="1.8225%" height="15" fill="rgb(230,132,31)" fg:x="824" fg:w="23"/><text x="65.5432%" y="447.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="66.7987%" y="421" width="0.3170%" height="15" fill="rgb(206,99,1)" fg:x="843" fg:w="4"/><text x="67.0487%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.9572%" y="405" width="0.1585%" height="15" fill="rgb(227,110,25)" fg:x="845" fg:w="2"/><text x="67.2072%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.9572%" y="389" width="0.1585%" height="15" fill="rgb(217,182,7)" fg:x="845" fg:w="2"/><text x="67.2072%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="67.1157%" y="453" width="0.1585%" height="15" fill="rgb(250,176,4)" fg:x="847" fg:w="2"/><text x="67.3657%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.1157%" y="437" width="0.1585%" height="15" fill="rgb(244,98,30)" fg:x="847" fg:w="2"/><text x="67.3657%" y="447.50"></text></g><g><title>engine::session::state::State::flush_entities (211 samples, 16.72%)</title><rect x="50.7132%" y="581" width="16.7195%" height="15" fill="rgb(228,150,42)" fg:x="640" fg:w="211"/><text x="50.9632%" y="591.50">engine::session::state::St..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (209 samples, 16.56%)</title><rect x="50.8716%" y="565" width="16.5610%" height="15" fill="rgb(231,91,46)" fg:x="642" fg:w="209"/><text x="51.1216%" y="575.50">engine::session::internal:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (206 samples, 16.32%)</title><rect x="51.1094%" y="549" width="16.3233%" height="15" fill="rgb(252,161,32)" fg:x="645" fg:w="206"/><text x="51.3594%" y="559.50">engine::session::state::S..</text></g><g><title>kernel::model::any_entity_changes (124 samples, 9.83%)</title><rect x="57.6070%" y="533" width="9.8257%" height="15" fill="rgb(236,69,41)" fg:x="727" fg:w="124"/><text x="57.8570%" y="543.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (28 samples, 2.22%)</title><rect x="65.2139%" y="517" width="2.2187%" height="15" fill="rgb(212,160,3)" fg:x="823" fg:w="28"/><text x="65.4639%" y="527.50">s..</text></g><g><title>serde_json::de::from_trait (28 samples, 2.22%)</title><rect x="65.2139%" y="501" width="2.2187%" height="15" fill="rgb(216,5,50)" fg:x="823" fg:w="28"/><text x="65.4639%" y="511.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.22%)</title><rect x="65.2139%" y="485" width="2.2187%" height="15" fill="rgb(241,138,25)" fg:x="823" fg:w="28"/><text x="65.4639%" y="495.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.22%)</title><rect x="65.2139%" y="469" width="2.2187%" height="15" fill="rgb(239,42,18)" fg:x="823" fg:w="28"/><text x="65.4639%" y="479.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.2742%" y="453" width="0.1585%" height="15" fill="rgb(239,40,7)" fg:x="849" fg:w="2"/><text x="67.5242%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.3534%" y="437" width="0.0792%" height="15" fill="rgb(239,11,31)" fg:x="850" fg:w="1"/><text x="67.6034%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.3534%" y="421" width="0.0792%" height="15" fill="rgb(224,77,40)" fg:x="850" fg:w="1"/><text x="67.6034%" y="431.50"></text></g><g><title>engine::session::state::State::close (212 samples, 16.80%)</title><rect x="50.7132%" y="597" width="16.7987%" height="15" fill="rgb(226,15,5)" fg:x="640" fg:w="212"/><text x="50.9632%" y="607.50">engine::session::state::St..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="67.4326%" y="581" width="0.0792%" height="15" fill="rgb(254,188,5)" fg:x="851" fg:w="1"/><text x="67.6826%" y="591.50"></text></g><g><title>engine::session::Session::close (215 samples, 17.04%)</title><rect x="50.5547%" y="613" width="17.0365%" height="15" fill="rgb(241,148,52)" fg:x="638" fg:w="215"/><text x="50.8047%" y="623.50">engine::session::Session::..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="67.5119%" y="597" width="0.0792%" height="15" fill="rgb(251,48,36)" fg:x="852" fg:w="1"/><text x="67.7619%" y="607.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="67.5119%" y="581" width="0.0792%" height="15" fill="rgb(243,83,13)" fg:x="852" fg:w="1"/><text x="67.7619%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="67.5119%" y="565" width="0.0792%" height="15" fill="rgb(210,105,0)" fg:x="852" fg:w="1"/><text x="67.7619%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="67.5119%" y="549" width="0.0792%" height="15" fill="rgb(239,60,36)" fg:x="852" fg:w="1"/><text x="67.7619%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="67.5119%" y="533" width="0.0792%" height="15" fill="rgb(210,20,0)" fg:x="852" fg:w="1"/><text x="67.7619%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="67.5911%" y="581" width="0.0792%" height="15" fill="rgb(244,26,53)" fg:x="853" fg:w="1"/><text x="67.8411%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7496%" y="517" width="0.0792%" height="15" fill="rgb(240,100,49)" fg:x="855" fg:w="1"/><text x="67.9996%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="67.8288%" y="501" width="0.0792%" height="15" fill="rgb(250,46,45)" fg:x="856" fg:w="1"/><text x="68.0788%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="67.8288%" y="485" width="0.0792%" height="15" fill="rgb(220,181,29)" fg:x="856" fg:w="1"/><text x="68.0788%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="67.9081%" y="501" width="0.0792%" height="15" fill="rgb(213,137,33)" fg:x="857" fg:w="1"/><text x="68.1581%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="68.0666%" y="437" width="0.0792%" height="15" fill="rgb(213,27,48)" fg:x="859" fg:w="1"/><text x="68.3166%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.2250%" y="341" width="0.1585%" height="15" fill="rgb(245,180,39)" fg:x="861" fg:w="2"/><text x="68.4750%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.2250%" y="325" width="0.1585%" height="15" fill="rgb(212,158,42)" fg:x="861" fg:w="2"/><text x="68.4750%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.3043%" y="309" width="0.0792%" height="15" fill="rgb(228,193,18)" fg:x="862" fg:w="1"/><text x="68.5543%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.3043%" y="293" width="0.0792%" height="15" fill="rgb(245,172,29)" fg:x="862" fg:w="1"/><text x="68.5543%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3043%" y="277" width="0.0792%" height="15" fill="rgb(207,98,24)" fg:x="862" fg:w="1"/><text x="68.5543%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3043%" y="261" width="0.0792%" height="15" fill="rgb(249,92,26)" fg:x="862" fg:w="1"/><text x="68.5543%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.3043%" y="245" width="0.0792%" height="15" fill="rgb(217,176,26)" fg:x="862" fg:w="1"/><text x="68.5543%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.3043%" y="229" width="0.0792%" height="15" fill="rgb(221,8,39)" fg:x="862" fg:w="1"/><text x="68.5543%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.3043%" y="213" width="0.0792%" height="15" fill="rgb(208,90,18)" fg:x="862" fg:w="1"/><text x="68.5543%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3043%" y="197" width="0.0792%" height="15" fill="rgb(207,202,30)" fg:x="862" fg:w="1"/><text x="68.5543%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3043%" y="181" width="0.0792%" height="15" fill="rgb(231,124,22)" fg:x="862" fg:w="1"/><text x="68.5543%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.3043%" y="165" width="0.0792%" height="15" fill="rgb(206,15,5)" fg:x="862" fg:w="1"/><text x="68.5543%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.3043%" y="149" width="0.0792%" height="15" fill="rgb(239,16,52)" fg:x="862" fg:w="1"/><text x="68.5543%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.3043%" y="133" width="0.0792%" height="15" fill="rgb(245,213,29)" fg:x="862" fg:w="1"/><text x="68.5543%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.3043%" y="117" width="0.0792%" height="15" fill="rgb(213,203,36)" fg:x="862" fg:w="1"/><text x="68.5543%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3043%" y="101" width="0.0792%" height="15" fill="rgb(209,55,18)" fg:x="862" fg:w="1"/><text x="68.5543%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="68.2250%" y="389" width="0.4754%" height="15" fill="rgb(207,133,49)" fg:x="861" fg:w="6"/><text x="68.4750%" y="399.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="68.2250%" y="373" width="0.4754%" height="15" fill="rgb(240,33,46)" fg:x="861" fg:w="6"/><text x="68.4750%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="68.2250%" y="357" width="0.4754%" height="15" fill="rgb(212,35,2)" fg:x="861" fg:w="6"/><text x="68.4750%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="68.3835%" y="341" width="0.3170%" height="15" fill="rgb(231,119,28)" fg:x="863" fg:w="4"/><text x="68.6335%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="68.3835%" y="325" width="0.3170%" height="15" fill="rgb(252,178,7)" fg:x="863" fg:w="4"/><text x="68.6335%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.5420%" y="309" width="0.1585%" height="15" fill="rgb(251,91,4)" fg:x="865" fg:w="2"/><text x="68.7920%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.5420%" y="293" width="0.1585%" height="15" fill="rgb(233,122,19)" fg:x="865" fg:w="2"/><text x="68.7920%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.6212%" y="277" width="0.0792%" height="15" fill="rgb(231,208,46)" fg:x="866" fg:w="1"/><text x="68.8712%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (9 samples, 0.71%)</title><rect x="68.2250%" y="421" width="0.7132%" height="15" fill="rgb(243,15,41)" fg:x="861" fg:w="9"/><text x="68.4750%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.71%)</title><rect x="68.2250%" y="405" width="0.7132%" height="15" fill="rgb(210,32,43)" fg:x="861" fg:w="9"/><text x="68.4750%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="68.7005%" y="389" width="0.2377%" height="15" fill="rgb(222,177,15)" fg:x="867" fg:w="3"/><text x="68.9505%" y="399.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="68.7005%" y="373" width="0.2377%" height="15" fill="rgb(244,121,34)" fg:x="867" fg:w="3"/><text x="68.9505%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="68.7005%" y="357" width="0.2377%" height="15" fill="rgb(234,138,4)" fg:x="867" fg:w="3"/><text x="68.9505%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.7005%" y="341" width="0.2377%" height="15" fill="rgb(240,97,48)" fg:x="867" fg:w="3"/><text x="68.9505%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.7005%" y="325" width="0.2377%" height="15" fill="rgb(237,65,54)" fg:x="867" fg:w="3"/><text x="68.9505%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.7005%" y="309" width="0.2377%" height="15" fill="rgb(214,25,24)" fg:x="867" fg:w="3"/><text x="68.9505%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.7005%" y="293" width="0.2377%" height="15" fill="rgb(213,5,3)" fg:x="867" fg:w="3"/><text x="68.9505%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="68.7005%" y="277" width="0.2377%" height="15" fill="rgb(219,81,29)" fg:x="867" fg:w="3"/><text x="68.9505%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.7005%" y="261" width="0.2377%" height="15" fill="rgb(220,43,48)" fg:x="867" fg:w="3"/><text x="68.9505%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.7005%" y="245" width="0.2377%" height="15" fill="rgb(239,157,2)" fg:x="867" fg:w="3"/><text x="68.9505%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.7797%" y="229" width="0.1585%" height="15" fill="rgb(213,104,43)" fg:x="868" fg:w="2"/><text x="69.0297%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.8590%" y="213" width="0.0792%" height="15" fill="rgb(237,84,9)" fg:x="869" fg:w="1"/><text x="69.1090%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8590%" y="197" width="0.0792%" height="15" fill="rgb(252,6,33)" fg:x="869" fg:w="1"/><text x="69.1090%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.8590%" y="181" width="0.0792%" height="15" fill="rgb(251,172,22)" fg:x="869" fg:w="1"/><text x="69.1090%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.8590%" y="165" width="0.0792%" height="15" fill="rgb(244,91,53)" fg:x="869" fg:w="1"/><text x="69.1090%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.0174%" y="357" width="0.0792%" height="15" fill="rgb(219,29,30)" fg:x="871" fg:w="1"/><text x="69.2674%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.0174%" y="341" width="0.0792%" height="15" fill="rgb(213,3,15)" fg:x="871" fg:w="1"/><text x="69.2674%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.2552%" y="325" width="0.0792%" height="15" fill="rgb(208,25,28)" fg:x="874" fg:w="1"/><text x="69.5052%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="69.4929%" y="277" width="0.0792%" height="15" fill="rgb(252,144,25)" fg:x="877" fg:w="1"/><text x="69.7429%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="69.4136%" y="293" width="0.3170%" height="15" fill="rgb(226,220,25)" fg:x="876" fg:w="4"/><text x="69.6636%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.5721%" y="277" width="0.1585%" height="15" fill="rgb(212,131,28)" fg:x="878" fg:w="2"/><text x="69.8221%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.7306%" y="197" width="0.0792%" height="15" fill="rgb(219,143,52)" fg:x="880" fg:w="1"/><text x="69.9806%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="69.7306%" y="181" width="0.0792%" height="15" fill="rgb(215,56,7)" fg:x="880" fg:w="1"/><text x="69.9806%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.7306%" y="277" width="0.2377%" height="15" fill="rgb(239,59,51)" fg:x="880" fg:w="3"/><text x="69.9806%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.7306%" y="261" width="0.2377%" height="15" fill="rgb(209,215,4)" fg:x="880" fg:w="3"/><text x="69.9806%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.7306%" y="245" width="0.2377%" height="15" fill="rgb(221,118,39)" fg:x="880" fg:w="3"/><text x="69.9806%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.7306%" y="229" width="0.2377%" height="15" fill="rgb(236,6,44)" fg:x="880" fg:w="3"/><text x="69.9806%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.7306%" y="213" width="0.2377%" height="15" fill="rgb(216,122,9)" fg:x="880" fg:w="3"/><text x="69.9806%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.8098%" y="197" width="0.1585%" height="15" fill="rgb(244,134,42)" fg:x="881" fg:w="2"/><text x="70.0598%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.8098%" y="181" width="0.1585%" height="15" fill="rgb(209,189,35)" fg:x="881" fg:w="2"/><text x="70.0598%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8891%" y="165" width="0.0792%" height="15" fill="rgb(250,47,36)" fg:x="882" fg:w="1"/><text x="70.1391%" y="175.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.11%)</title><rect x="68.9382%" y="405" width="1.1094%" height="15" fill="rgb(252,112,4)" fg:x="870" fg:w="14"/><text x="69.1882%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.11%)</title><rect x="68.9382%" y="389" width="1.1094%" height="15" fill="rgb(221,79,51)" fg:x="870" fg:w="14"/><text x="69.1882%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.11%)</title><rect x="68.9382%" y="373" width="1.1094%" height="15" fill="rgb(232,65,53)" fg:x="870" fg:w="14"/><text x="69.1882%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.95%)</title><rect x="69.0967%" y="357" width="0.9509%" height="15" fill="rgb(211,37,7)" fg:x="872" fg:w="12"/><text x="69.3467%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.95%)</title><rect x="69.0967%" y="341" width="0.9509%" height="15" fill="rgb(234,221,18)" fg:x="872" fg:w="12"/><text x="69.3467%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.71%)</title><rect x="69.3344%" y="325" width="0.7132%" height="15" fill="rgb(220,158,26)" fg:x="875" fg:w="9"/><text x="69.5844%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="69.3344%" y="309" width="0.7132%" height="15" fill="rgb(220,70,6)" fg:x="875" fg:w="9"/><text x="69.5844%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="69.7306%" y="293" width="0.3170%" height="15" fill="rgb(250,39,48)" fg:x="880" fg:w="4"/><text x="69.9806%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.9683%" y="277" width="0.0792%" height="15" fill="rgb(206,40,27)" fg:x="883" fg:w="1"/><text x="70.2183%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.9683%" y="261" width="0.0792%" height="15" fill="rgb(247,80,36)" fg:x="883" fg:w="1"/><text x="70.2183%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9683%" y="245" width="0.0792%" height="15" fill="rgb(222,9,20)" fg:x="883" fg:w="1"/><text x="70.2183%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.2060%" y="341" width="0.0792%" height="15" fill="rgb(217,26,45)" fg:x="886" fg:w="1"/><text x="70.4560%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.2853%" y="341" width="0.0792%" height="15" fill="rgb(221,67,14)" fg:x="887" fg:w="1"/><text x="70.5353%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.2853%" y="325" width="0.0792%" height="15" fill="rgb(248,100,24)" fg:x="887" fg:w="1"/><text x="70.5353%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.4437%" y="293" width="0.0792%" height="15" fill="rgb(230,187,16)" fg:x="889" fg:w="1"/><text x="70.6937%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.4437%" y="277" width="0.0792%" height="15" fill="rgb(205,108,13)" fg:x="889" fg:w="1"/><text x="70.6937%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.4437%" y="261" width="0.0792%" height="15" fill="rgb(235,71,51)" fg:x="889" fg:w="1"/><text x="70.6937%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.4437%" y="245" width="0.0792%" height="15" fill="rgb(251,172,48)" fg:x="889" fg:w="1"/><text x="70.6937%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.4437%" y="229" width="0.0792%" height="15" fill="rgb(240,96,49)" fg:x="889" fg:w="1"/><text x="70.6937%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.4437%" y="213" width="0.0792%" height="15" fill="rgb(235,46,36)" fg:x="889" fg:w="1"/><text x="70.6937%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.4437%" y="197" width="0.0792%" height="15" fill="rgb(244,3,49)" fg:x="889" fg:w="1"/><text x="70.6937%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="70.5230%" y="293" width="0.0792%" height="15" fill="rgb(206,78,54)" fg:x="890" fg:w="1"/><text x="70.7730%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5230%" y="277" width="0.0792%" height="15" fill="rgb(208,85,42)" fg:x="890" fg:w="1"/><text x="70.7730%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="70.6022%" y="229" width="0.0792%" height="15" fill="rgb(219,196,21)" fg:x="891" fg:w="1"/><text x="70.8522%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="70.4437%" y="325" width="0.3170%" height="15" fill="rgb(238,19,9)" fg:x="889" fg:w="4"/><text x="70.6937%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="70.4437%" y="309" width="0.3170%" height="15" fill="rgb(206,86,13)" fg:x="889" fg:w="4"/><text x="70.6937%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="70.6022%" y="293" width="0.1585%" height="15" fill="rgb(214,123,40)" fg:x="891" fg:w="2"/><text x="70.8522%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="70.6022%" y="277" width="0.1585%" height="15" fill="rgb(243,53,5)" fg:x="891" fg:w="2"/><text x="70.8522%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="70.6022%" y="261" width="0.1585%" height="15" fill="rgb(254,186,31)" fg:x="891" fg:w="2"/><text x="70.8522%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.6022%" y="245" width="0.1585%" height="15" fill="rgb(221,216,25)" fg:x="891" fg:w="2"/><text x="70.8522%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.6815%" y="229" width="0.0792%" height="15" fill="rgb(248,107,42)" fg:x="892" fg:w="1"/><text x="70.9315%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.7607%" y="325" width="0.0792%" height="15" fill="rgb(221,85,43)" fg:x="893" fg:w="1"/><text x="71.0107%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.7607%" y="309" width="0.0792%" height="15" fill="rgb(225,34,24)" fg:x="893" fg:w="1"/><text x="71.0107%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.7607%" y="293" width="0.0792%" height="15" fill="rgb(211,119,1)" fg:x="893" fg:w="1"/><text x="71.0107%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.7607%" y="277" width="0.0792%" height="15" fill="rgb(254,216,46)" fg:x="893" fg:w="1"/><text x="71.0107%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.7607%" y="261" width="0.0792%" height="15" fill="rgb(238,11,38)" fg:x="893" fg:w="1"/><text x="71.0107%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.7607%" y="245" width="0.0792%" height="15" fill="rgb(233,50,15)" fg:x="893" fg:w="1"/><text x="71.0107%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.9192%" y="165" width="0.0792%" height="15" fill="rgb(217,181,29)" fg:x="895" fg:w="1"/><text x="71.1692%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.95%)</title><rect x="70.1268%" y="373" width="0.9509%" height="15" fill="rgb(214,56,3)" fg:x="885" fg:w="12"/><text x="70.3768%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.87%)</title><rect x="70.2060%" y="357" width="0.8716%" height="15" fill="rgb(230,69,45)" fg:x="886" fg:w="11"/><text x="70.4560%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.71%)</title><rect x="70.3645%" y="341" width="0.7132%" height="15" fill="rgb(224,201,50)" fg:x="888" fg:w="9"/><text x="70.6145%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.8399%" y="325" width="0.2377%" height="15" fill="rgb(217,228,18)" fg:x="894" fg:w="3"/><text x="71.0899%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="70.8399%" y="309" width="0.2377%" height="15" fill="rgb(239,33,44)" fg:x="894" fg:w="3"/><text x="71.0899%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="70.9192%" y="293" width="0.1585%" height="15" fill="rgb(248,210,23)" fg:x="895" fg:w="2"/><text x="71.1692%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.9192%" y="277" width="0.1585%" height="15" fill="rgb(253,135,8)" fg:x="895" fg:w="2"/><text x="71.1692%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.9192%" y="261" width="0.1585%" height="15" fill="rgb(217,98,21)" fg:x="895" fg:w="2"/><text x="71.1692%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="70.9192%" y="245" width="0.1585%" height="15" fill="rgb(253,130,21)" fg:x="895" fg:w="2"/><text x="71.1692%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.9192%" y="229" width="0.1585%" height="15" fill="rgb(207,81,54)" fg:x="895" fg:w="2"/><text x="71.1692%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.9192%" y="213" width="0.1585%" height="15" fill="rgb(232,48,33)" fg:x="895" fg:w="2"/><text x="71.1692%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="70.9192%" y="197" width="0.1585%" height="15" fill="rgb(211,9,35)" fg:x="895" fg:w="2"/><text x="71.1692%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.9192%" y="181" width="0.1585%" height="15" fill="rgb(205,152,21)" fg:x="895" fg:w="2"/><text x="71.1692%" y="191.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="70.9984%" y="165" width="0.0792%" height="15" fill="rgb(249,21,27)" fg:x="896" fg:w="1"/><text x="71.2484%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (28 samples, 2.22%)</title><rect x="68.9382%" y="421" width="2.2187%" height="15" fill="rgb(252,29,24)" fg:x="870" fg:w="28"/><text x="69.1882%" y="431.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.11%)</title><rect x="70.0475%" y="405" width="1.1094%" height="15" fill="rgb(230,130,50)" fg:x="884" fg:w="14"/><text x="70.2975%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.11%)</title><rect x="70.0475%" y="389" width="1.1094%" height="15" fill="rgb(239,144,14)" fg:x="884" fg:w="14"/><text x="70.2975%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0777%" y="373" width="0.0792%" height="15" fill="rgb(227,111,50)" fg:x="897" fg:w="1"/><text x="71.3277%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0777%" y="357" width="0.0792%" height="15" fill="rgb(254,84,20)" fg:x="897" fg:w="1"/><text x="71.3277%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.0777%" y="341" width="0.0792%" height="15" fill="rgb(232,90,48)" fg:x="897" fg:w="1"/><text x="71.3277%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="71.1569%" y="405" width="0.0792%" height="15" fill="rgb(253,63,47)" fg:x="898" fg:w="1"/><text x="71.4069%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2361%" y="373" width="0.0792%" height="15" fill="rgb(251,146,35)" fg:x="899" fg:w="1"/><text x="71.4861%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2361%" y="357" width="0.0792%" height="15" fill="rgb(229,192,35)" fg:x="899" fg:w="1"/><text x="71.4861%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2361%" y="341" width="0.0792%" height="15" fill="rgb(225,68,9)" fg:x="899" fg:w="1"/><text x="71.4861%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.2361%" y="325" width="0.0792%" height="15" fill="rgb(214,97,34)" fg:x="899" fg:w="1"/><text x="71.4861%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (42 samples, 3.33%)</title><rect x="68.0666%" y="453" width="3.3281%" height="15" fill="rgb(253,31,26)" fg:x="859" fg:w="42"/><text x="68.3166%" y="463.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (41 samples, 3.25%)</title><rect x="68.1458%" y="437" width="3.2488%" height="15" fill="rgb(225,151,47)" fg:x="860" fg:w="41"/><text x="68.3958%" y="447.50">eng..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="71.1569%" y="421" width="0.2377%" height="15" fill="rgb(206,185,9)" fg:x="898" fg:w="3"/><text x="71.4069%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="71.2361%" y="405" width="0.1585%" height="15" fill="rgb(249,65,17)" fg:x="899" fg:w="2"/><text x="71.4861%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="71.2361%" y="389" width="0.1585%" height="15" fill="rgb(220,110,10)" fg:x="899" fg:w="2"/><text x="71.4861%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.3154%" y="373" width="0.0792%" height="15" fill="rgb(222,198,49)" fg:x="900" fg:w="1"/><text x="71.5654%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3154%" y="357" width="0.0792%" height="15" fill="rgb(239,81,13)" fg:x="900" fg:w="1"/><text x="71.5654%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.3154%" y="341" width="0.0792%" height="15" fill="rgb(216,128,11)" fg:x="900" fg:w="1"/><text x="71.5654%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3154%" y="325" width="0.0792%" height="15" fill="rgb(247,156,8)" fg:x="900" fg:w="1"/><text x="71.5654%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.3154%" y="309" width="0.0792%" height="15" fill="rgb(219,173,1)" fg:x="900" fg:w="1"/><text x="71.5654%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3154%" y="293" width="0.0792%" height="15" fill="rgb(227,42,24)" fg:x="900" fg:w="1"/><text x="71.5654%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.3154%" y="277" width="0.0792%" height="15" fill="rgb(253,219,50)" fg:x="900" fg:w="1"/><text x="71.5654%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3154%" y="261" width="0.0792%" height="15" fill="rgb(215,191,54)" fg:x="900" fg:w="1"/><text x="71.5654%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.3154%" y="245" width="0.0792%" height="15" fill="rgb(238,83,12)" fg:x="900" fg:w="1"/><text x="71.5654%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3154%" y="229" width="0.0792%" height="15" fill="rgb(205,124,9)" fg:x="900" fg:w="1"/><text x="71.5654%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="71.3154%" y="213" width="0.0792%" height="15" fill="rgb(253,174,7)" fg:x="900" fg:w="1"/><text x="71.5654%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="71.3154%" y="197" width="0.0792%" height="15" fill="rgb(206,134,49)" fg:x="900" fg:w="1"/><text x="71.5654%" y="207.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="71.3154%" y="181" width="0.0792%" height="15" fill="rgb(221,89,20)" fg:x="900" fg:w="1"/><text x="71.5654%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (43 samples, 3.41%)</title><rect x="68.0666%" y="469" width="3.4073%" height="15" fill="rgb(240,205,13)" fg:x="859" fg:w="43"/><text x="68.3166%" y="479.50">&lt;en..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="71.3946%" y="453" width="0.0792%" height="15" fill="rgb(237,174,32)" fg:x="901" fg:w="1"/><text x="71.6446%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3946%" y="437" width="0.0792%" height="15" fill="rgb(226,12,15)" fg:x="901" fg:w="1"/><text x="71.6446%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3946%" y="421" width="0.0792%" height="15" fill="rgb(245,160,52)" fg:x="901" fg:w="1"/><text x="71.6446%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.3946%" y="405" width="0.0792%" height="15" fill="rgb(253,80,21)" fg:x="901" fg:w="1"/><text x="71.6446%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.3946%" y="389" width="0.0792%" height="15" fill="rgb(231,225,22)" fg:x="901" fg:w="1"/><text x="71.6446%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.3946%" y="373" width="0.0792%" height="15" fill="rgb(253,185,12)" fg:x="901" fg:w="1"/><text x="71.6446%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3946%" y="357" width="0.0792%" height="15" fill="rgb(234,197,21)" fg:x="901" fg:w="1"/><text x="71.6446%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3946%" y="341" width="0.0792%" height="15" fill="rgb(210,47,30)" fg:x="901" fg:w="1"/><text x="71.6446%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.3946%" y="325" width="0.0792%" height="15" fill="rgb(246,139,27)" fg:x="901" fg:w="1"/><text x="71.6446%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.3946%" y="309" width="0.0792%" height="15" fill="rgb(226,130,16)" fg:x="901" fg:w="1"/><text x="71.6446%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.3946%" y="293" width="0.0792%" height="15" fill="rgb(237,208,20)" fg:x="901" fg:w="1"/><text x="71.6446%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.3946%" y="277" width="0.0792%" height="15" fill="rgb(245,186,28)" fg:x="901" fg:w="1"/><text x="71.6446%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3946%" y="261" width="0.0792%" height="15" fill="rgb(238,105,39)" fg:x="901" fg:w="1"/><text x="71.6446%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.4739%" y="437" width="0.0792%" height="15" fill="rgb(253,228,11)" fg:x="902" fg:w="1"/><text x="71.7239%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (49 samples, 3.88%)</title><rect x="67.8288%" y="517" width="3.8827%" height="15" fill="rgb(224,136,38)" fg:x="856" fg:w="49"/><text x="68.0788%" y="527.50">&lt;plu..</text></g><g><title>kernel::model::entry::Entry::scope (47 samples, 3.72%)</title><rect x="67.9873%" y="501" width="3.7242%" height="15" fill="rgb(211,3,25)" fg:x="858" fg:w="47"/><text x="68.2373%" y="511.50">kern..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (47 samples, 3.72%)</title><rect x="67.9873%" y="485" width="3.7242%" height="15" fill="rgb(238,66,34)" fg:x="858" fg:w="47"/><text x="68.2373%" y="495.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="71.4739%" y="469" width="0.2377%" height="15" fill="rgb(223,188,11)" fg:x="902" fg:w="3"/><text x="71.7239%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.4739%" y="453" width="0.2377%" height="15" fill="rgb(221,10,35)" fg:x="902" fg:w="3"/><text x="71.7239%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.5531%" y="437" width="0.1585%" height="15" fill="rgb(223,18,44)" fg:x="903" fg:w="2"/><text x="71.8031%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.5531%" y="421" width="0.1585%" height="15" fill="rgb(220,97,41)" fg:x="903" fg:w="2"/><text x="71.8031%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.6323%" y="405" width="0.0792%" height="15" fill="rgb(206,95,45)" fg:x="904" fg:w="1"/><text x="71.8823%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="71.7116%" y="517" width="0.0792%" height="15" fill="rgb(209,96,13)" fg:x="905" fg:w="1"/><text x="71.9616%" y="527.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="71.7116%" y="501" width="0.0792%" height="15" fill="rgb(237,39,34)" fg:x="905" fg:w="1"/><text x="71.9616%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="71.7116%" y="485" width="0.0792%" height="15" fill="rgb(213,49,47)" fg:x="905" fg:w="1"/><text x="71.9616%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="71.7116%" y="469" width="0.0792%" height="15" fill="rgb(205,107,27)" fg:x="905" fg:w="1"/><text x="71.9616%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="71.7116%" y="453" width="0.0792%" height="15" fill="rgb(212,142,9)" fg:x="905" fg:w="1"/><text x="71.9616%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.7116%" y="437" width="0.0792%" height="15" fill="rgb(226,182,0)" fg:x="905" fg:w="1"/><text x="71.9616%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.7116%" y="421" width="0.0792%" height="15" fill="rgb(231,3,53)" fg:x="905" fg:w="1"/><text x="71.9616%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.7116%" y="405" width="0.0792%" height="15" fill="rgb(246,111,28)" fg:x="905" fg:w="1"/><text x="71.9616%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="71.7116%" y="389" width="0.0792%" height="15" fill="rgb(254,183,7)" fg:x="905" fg:w="1"/><text x="71.9616%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.7116%" y="373" width="0.0792%" height="15" fill="rgb(247,177,28)" fg:x="905" fg:w="1"/><text x="71.9616%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.7116%" y="357" width="0.0792%" height="15" fill="rgb(244,43,1)" fg:x="905" fg:w="1"/><text x="71.9616%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.7116%" y="341" width="0.0792%" height="15" fill="rgb(207,2,35)" fg:x="905" fg:w="1"/><text x="71.9616%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="71.7116%" y="325" width="0.0792%" height="15" fill="rgb(213,83,22)" fg:x="905" fg:w="1"/><text x="71.9616%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.7116%" y="309" width="0.0792%" height="15" fill="rgb(246,212,13)" fg:x="905" fg:w="1"/><text x="71.9616%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.7116%" y="293" width="0.0792%" height="15" fill="rgb(213,127,46)" fg:x="905" fg:w="1"/><text x="71.9616%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.7116%" y="277" width="0.0792%" height="15" fill="rgb(219,215,39)" fg:x="905" fg:w="1"/><text x="71.9616%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.7116%" y="261" width="0.0792%" height="15" fill="rgb(227,99,17)" fg:x="905" fg:w="1"/><text x="71.9616%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.7116%" y="245" width="0.0792%" height="15" fill="rgb(208,155,18)" fg:x="905" fg:w="1"/><text x="71.9616%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="71.7116%" y="229" width="0.0792%" height="15" fill="rgb(223,204,38)" fg:x="905" fg:w="1"/><text x="71.9616%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="71.7116%" y="213" width="0.0792%" height="15" fill="rgb(212,114,21)" fg:x="905" fg:w="1"/><text x="71.9616%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="71.7116%" y="197" width="0.0792%" height="15" fill="rgb(250,74,13)" fg:x="905" fg:w="1"/><text x="71.9616%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="71.7116%" y="181" width="0.0792%" height="15" fill="rgb(234,7,1)" fg:x="905" fg:w="1"/><text x="71.9616%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.7116%" y="165" width="0.0792%" height="15" fill="rgb(207,138,31)" fg:x="905" fg:w="1"/><text x="71.9616%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.7116%" y="149" width="0.0792%" height="15" fill="rgb(215,186,42)" fg:x="905" fg:w="1"/><text x="71.9616%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.7116%" y="133" width="0.0792%" height="15" fill="rgb(229,205,49)" fg:x="905" fg:w="1"/><text x="71.9616%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="71.7116%" y="117" width="0.0792%" height="15" fill="rgb(216,156,32)" fg:x="905" fg:w="1"/><text x="71.9616%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.7116%" y="101" width="0.0792%" height="15" fill="rgb(238,7,21)" fg:x="905" fg:w="1"/><text x="71.9616%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="71.7116%" y="85" width="0.0792%" height="15" fill="rgb(249,190,22)" fg:x="905" fg:w="1"/><text x="71.9616%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="71.7116%" y="69" width="0.0792%" height="15" fill="rgb(253,51,31)" fg:x="905" fg:w="1"/><text x="71.9616%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="71.7116%" y="53" width="0.0792%" height="15" fill="rgb(237,90,54)" fg:x="905" fg:w="1"/><text x="71.9616%" y="63.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="71.7116%" y="37" width="0.0792%" height="15" fill="rgb(250,214,33)" fg:x="905" fg:w="1"/><text x="71.9616%" y="47.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (52 samples, 4.12%)</title><rect x="67.7496%" y="533" width="4.1204%" height="15" fill="rgb(237,10,49)" fg:x="855" fg:w="52"/><text x="67.9996%" y="543.50">&lt;eng..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.7908%" y="517" width="0.0792%" height="15" fill="rgb(241,56,36)" fg:x="906" fg:w="1"/><text x="72.0408%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7908%" y="501" width="0.0792%" height="15" fill="rgb(227,164,12)" fg:x="906" fg:w="1"/><text x="72.0408%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.8700%" y="533" width="0.0792%" height="15" fill="rgb(249,149,35)" fg:x="907" fg:w="1"/><text x="72.1200%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.9493%" y="405" width="0.0792%" height="15" fill="rgb(238,227,50)" fg:x="908" fg:w="1"/><text x="72.1993%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9493%" y="389" width="0.0792%" height="15" fill="rgb(235,102,45)" fg:x="908" fg:w="1"/><text x="72.1993%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.0285%" y="293" width="0.0792%" height="15" fill="rgb(211,10,38)" fg:x="909" fg:w="1"/><text x="72.2785%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.0285%" y="277" width="0.0792%" height="15" fill="rgb(219,77,48)" fg:x="909" fg:w="1"/><text x="72.2785%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.0285%" y="261" width="0.0792%" height="15" fill="rgb(246,6,15)" fg:x="909" fg:w="1"/><text x="72.2785%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.0285%" y="245" width="0.0792%" height="15" fill="rgb(207,220,2)" fg:x="909" fg:w="1"/><text x="72.2785%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.0285%" y="229" width="0.0792%" height="15" fill="rgb(242,48,14)" fg:x="909" fg:w="1"/><text x="72.2785%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.0285%" y="213" width="0.0792%" height="15" fill="rgb(218,19,27)" fg:x="909" fg:w="1"/><text x="72.2785%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0285%" y="197" width="0.0792%" height="15" fill="rgb(228,0,35)" fg:x="909" fg:w="1"/><text x="72.2785%" y="207.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (3 samples, 0.24%)</title><rect x="71.9493%" y="421" width="0.2377%" height="15" fill="rgb(244,142,54)" fg:x="908" fg:w="3"/><text x="72.1993%" y="431.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="72.0285%" y="405" width="0.1585%" height="15" fill="rgb(243,217,40)" fg:x="909" fg:w="2"/><text x="72.2785%" y="415.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.0285%" y="389" width="0.1585%" height="15" fill="rgb(207,114,16)" fg:x="909" fg:w="2"/><text x="72.2785%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.0285%" y="373" width="0.1585%" height="15" fill="rgb(224,33,25)" fg:x="909" fg:w="2"/><text x="72.2785%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.0285%" y="357" width="0.1585%" height="15" fill="rgb(230,93,54)" fg:x="909" fg:w="2"/><text x="72.2785%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="72.0285%" y="341" width="0.1585%" height="15" fill="rgb(224,56,24)" fg:x="909" fg:w="2"/><text x="72.2785%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="72.0285%" y="325" width="0.1585%" height="15" fill="rgb(235,189,50)" fg:x="909" fg:w="2"/><text x="72.2785%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="72.0285%" y="309" width="0.1585%" height="15" fill="rgb(242,173,8)" fg:x="909" fg:w="2"/><text x="72.2785%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.1078%" y="293" width="0.0792%" height="15" fill="rgb(209,206,10)" fg:x="910" fg:w="1"/><text x="72.3578%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.1078%" y="277" width="0.0792%" height="15" fill="rgb(213,182,44)" fg:x="910" fg:w="1"/><text x="72.3578%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (59 samples, 4.68%)</title><rect x="67.5911%" y="597" width="4.6751%" height="15" fill="rgb(243,51,15)" fg:x="853" fg:w="59"/><text x="67.8411%" y="607.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::apply_middleware (58 samples, 4.60%)</title><rect x="67.6704%" y="581" width="4.5959%" height="15" fill="rgb(241,13,14)" fg:x="854" fg:w="58"/><text x="67.9204%" y="591.50">kerne..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (58 samples, 4.60%)</title><rect x="67.6704%" y="565" width="4.5959%" height="15" fill="rgb(239,147,24)" fg:x="854" fg:w="58"/><text x="67.9204%" y="575.50">kerne..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (57 samples, 4.52%)</title><rect x="67.7496%" y="549" width="4.5166%" height="15" fill="rgb(223,129,16)" fg:x="855" fg:w="57"/><text x="67.9996%" y="559.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="71.9493%" y="533" width="0.3170%" height="15" fill="rgb(209,169,13)" fg:x="908" fg:w="4"/><text x="72.1993%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="71.9493%" y="517" width="0.3170%" height="15" fill="rgb(235,159,41)" fg:x="908" fg:w="4"/><text x="72.1993%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="71.9493%" y="501" width="0.3170%" height="15" fill="rgb(223,219,48)" fg:x="908" fg:w="4"/><text x="72.1993%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="71.9493%" y="485" width="0.3170%" height="15" fill="rgb(236,80,13)" fg:x="908" fg:w="4"/><text x="72.1993%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="71.9493%" y="469" width="0.3170%" height="15" fill="rgb(213,5,6)" fg:x="908" fg:w="4"/><text x="72.1993%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="71.9493%" y="453" width="0.3170%" height="15" fill="rgb(205,59,21)" fg:x="908" fg:w="4"/><text x="72.1993%" y="463.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (4 samples, 0.32%)</title><rect x="71.9493%" y="437" width="0.3170%" height="15" fill="rgb(247,137,35)" fg:x="908" fg:w="4"/><text x="72.1993%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="72.1870%" y="421" width="0.0792%" height="15" fill="rgb(242,208,28)" fg:x="911" fg:w="1"/><text x="72.4370%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2662%" y="485" width="0.0792%" height="15" fill="rgb(245,62,25)" fg:x="912" fg:w="1"/><text x="72.5162%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2662%" y="469" width="0.0792%" height="15" fill="rgb(233,99,54)" fg:x="912" fg:w="1"/><text x="72.5162%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2662%" y="453" width="0.0792%" height="15" fill="rgb(213,10,37)" fg:x="912" fg:w="1"/><text x="72.5162%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2662%" y="437" width="0.0792%" height="15" fill="rgb(235,143,30)" fg:x="912" fg:w="1"/><text x="72.5162%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.2662%" y="421" width="0.0792%" height="15" fill="rgb(250,146,33)" fg:x="912" fg:w="1"/><text x="72.5162%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.2662%" y="405" width="0.0792%" height="15" fill="rgb(226,198,42)" fg:x="912" fg:w="1"/><text x="72.5162%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.2662%" y="389" width="0.0792%" height="15" fill="rgb(222,55,6)" fg:x="912" fg:w="1"/><text x="72.5162%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.2662%" y="373" width="0.0792%" height="15" fill="rgb(213,224,31)" fg:x="912" fg:w="1"/><text x="72.5162%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.2662%" y="357" width="0.0792%" height="15" fill="rgb(226,103,35)" fg:x="912" fg:w="1"/><text x="72.5162%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.2662%" y="341" width="0.0792%" height="15" fill="rgb(205,66,45)" fg:x="912" fg:w="1"/><text x="72.5162%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.2662%" y="325" width="0.0792%" height="15" fill="rgb(226,51,42)" fg:x="912" fg:w="1"/><text x="72.5162%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="72.2662%" y="533" width="0.1585%" height="15" fill="rgb(206,69,1)" fg:x="912" fg:w="2"/><text x="72.5162%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="72.2662%" y="517" width="0.1585%" height="15" fill="rgb(213,228,47)" fg:x="912" fg:w="2"/><text x="72.5162%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.2662%" y="501" width="0.1585%" height="15" fill="rgb(224,204,18)" fg:x="912" fg:w="2"/><text x="72.5162%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3455%" y="485" width="0.0792%" height="15" fill="rgb(253,187,47)" fg:x="913" fg:w="1"/><text x="72.5955%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3455%" y="469" width="0.0792%" height="15" fill="rgb(232,61,2)" fg:x="913" fg:w="1"/><text x="72.5955%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3455%" y="453" width="0.0792%" height="15" fill="rgb(213,132,35)" fg:x="913" fg:w="1"/><text x="72.5955%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3455%" y="437" width="0.0792%" height="15" fill="rgb(247,33,21)" fg:x="913" fg:w="1"/><text x="72.5955%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.3455%" y="421" width="0.0792%" height="15" fill="rgb(233,71,46)" fg:x="913" fg:w="1"/><text x="72.5955%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3455%" y="405" width="0.0792%" height="15" fill="rgb(222,173,43)" fg:x="913" fg:w="1"/><text x="72.5955%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="72.2662%" y="565" width="0.3962%" height="15" fill="rgb(249,218,47)" fg:x="912" fg:w="5"/><text x="72.5162%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="72.2662%" y="549" width="0.3962%" height="15" fill="rgb(254,185,48)" fg:x="912" fg:w="5"/><text x="72.5162%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="72.4247%" y="533" width="0.2377%" height="15" fill="rgb(252,165,50)" fg:x="914" fg:w="3"/><text x="72.6747%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="72.4247%" y="517" width="0.2377%" height="15" fill="rgb(206,219,6)" fg:x="914" fg:w="3"/><text x="72.6747%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="72.4247%" y="501" width="0.2377%" height="15" fill="rgb(212,212,45)" fg:x="914" fg:w="3"/><text x="72.6747%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.5040%" y="485" width="0.1585%" height="15" fill="rgb(221,31,9)" fg:x="915" fg:w="2"/><text x="72.7540%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.5040%" y="469" width="0.1585%" height="15" fill="rgb(234,198,39)" fg:x="915" fg:w="2"/><text x="72.7540%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.5040%" y="453" width="0.1585%" height="15" fill="rgb(252,145,46)" fg:x="915" fg:w="2"/><text x="72.7540%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.5040%" y="437" width="0.1585%" height="15" fill="rgb(237,149,0)" fg:x="915" fg:w="2"/><text x="72.7540%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.5832%" y="421" width="0.0792%" height="15" fill="rgb(229,65,5)" fg:x="916" fg:w="1"/><text x="72.8332%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.6624%" y="501" width="0.0792%" height="15" fill="rgb(235,60,36)" fg:x="917" fg:w="1"/><text x="72.9124%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6624%" y="485" width="0.0792%" height="15" fill="rgb(222,47,18)" fg:x="917" fg:w="1"/><text x="72.9124%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.7417%" y="469" width="0.0792%" height="15" fill="rgb(235,114,22)" fg:x="918" fg:w="1"/><text x="72.9917%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.7417%" y="453" width="0.0792%" height="15" fill="rgb(209,167,11)" fg:x="918" fg:w="1"/><text x="72.9917%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.8209%" y="437" width="0.1585%" height="15" fill="rgb(251,73,18)" fg:x="919" fg:w="2"/><text x="73.0709%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.8209%" y="421" width="0.1585%" height="15" fill="rgb(217,60,17)" fg:x="919" fg:w="2"/><text x="73.0709%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.9002%" y="405" width="0.0792%" height="15" fill="rgb(224,36,37)" fg:x="920" fg:w="1"/><text x="73.1502%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.9794%" y="405" width="0.0792%" height="15" fill="rgb(211,21,32)" fg:x="921" fg:w="1"/><text x="73.2294%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.0586%" y="405" width="0.0792%" height="15" fill="rgb(231,55,48)" fg:x="922" fg:w="1"/><text x="73.3086%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.0586%" y="389" width="0.0792%" height="15" fill="rgb(227,42,18)" fg:x="922" fg:w="1"/><text x="73.3086%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0586%" y="373" width="0.0792%" height="15" fill="rgb(217,2,27)" fg:x="922" fg:w="1"/><text x="73.3086%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1379%" y="373" width="0.0792%" height="15" fill="rgb(251,138,23)" fg:x="923" fg:w="1"/><text x="73.3879%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1379%" y="357" width="0.0792%" height="15" fill="rgb(226,184,11)" fg:x="923" fg:w="1"/><text x="73.3879%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1379%" y="341" width="0.0792%" height="15" fill="rgb(242,142,12)" fg:x="923" fg:w="1"/><text x="73.3879%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="72.9794%" y="421" width="0.3170%" height="15" fill="rgb(234,187,18)" fg:x="921" fg:w="4"/><text x="73.2294%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="73.1379%" y="405" width="0.1585%" height="15" fill="rgb(237,44,42)" fg:x="923" fg:w="2"/><text x="73.3879%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.1379%" y="389" width="0.1585%" height="15" fill="rgb(211,90,23)" fg:x="923" fg:w="2"/><text x="73.3879%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.2171%" y="373" width="0.0792%" height="15" fill="rgb(207,81,18)" fg:x="924" fg:w="1"/><text x="73.4671%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.2171%" y="357" width="0.0792%" height="15" fill="rgb(222,107,28)" fg:x="924" fg:w="1"/><text x="73.4671%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.2171%" y="341" width="0.0792%" height="15" fill="rgb(237,83,52)" fg:x="924" fg:w="1"/><text x="73.4671%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.2964%" y="389" width="0.0792%" height="15" fill="rgb(208,67,11)" fg:x="925" fg:w="1"/><text x="73.5464%" y="399.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.87%)</title><rect x="72.6624%" y="549" width="0.8716%" height="15" fill="rgb(249,157,49)" fg:x="917" fg:w="11"/><text x="72.9124%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.87%)</title><rect x="72.6624%" y="533" width="0.8716%" height="15" fill="rgb(243,200,1)" fg:x="917" fg:w="11"/><text x="72.9124%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.87%)</title><rect x="72.6624%" y="517" width="0.8716%" height="15" fill="rgb(225,162,37)" fg:x="917" fg:w="11"/><text x="72.9124%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.79%)</title><rect x="72.7417%" y="501" width="0.7924%" height="15" fill="rgb(242,92,13)" fg:x="918" fg:w="10"/><text x="72.9917%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="72.7417%" y="485" width="0.7924%" height="15" fill="rgb(220,43,36)" fg:x="918" fg:w="10"/><text x="72.9917%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.71%)</title><rect x="72.8209%" y="469" width="0.7132%" height="15" fill="rgb(213,165,48)" fg:x="919" fg:w="9"/><text x="73.0709%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="72.8209%" y="453" width="0.7132%" height="15" fill="rgb(227,200,9)" fg:x="919" fg:w="9"/><text x="73.0709%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.55%)</title><rect x="72.9794%" y="437" width="0.5547%" height="15" fill="rgb(221,222,28)" fg:x="921" fg:w="7"/><text x="73.2294%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="73.2964%" y="421" width="0.2377%" height="15" fill="rgb(223,142,26)" fg:x="925" fg:w="3"/><text x="73.5464%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="73.2964%" y="405" width="0.2377%" height="15" fill="rgb(243,46,9)" fg:x="925" fg:w="3"/><text x="73.5464%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="73.3756%" y="389" width="0.1585%" height="15" fill="rgb(250,56,11)" fg:x="926" fg:w="2"/><text x="73.6256%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="73.6133%" y="437" width="0.1585%" height="15" fill="rgb(229,113,5)" fg:x="929" fg:w="2"/><text x="73.8633%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.6133%" y="421" width="0.1585%" height="15" fill="rgb(244,108,28)" fg:x="929" fg:w="2"/><text x="73.8633%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.6133%" y="405" width="0.1585%" height="15" fill="rgb(242,119,50)" fg:x="929" fg:w="2"/><text x="73.8633%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.6133%" y="389" width="0.1585%" height="15" fill="rgb(224,164,23)" fg:x="929" fg:w="2"/><text x="73.8633%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="73.6133%" y="373" width="0.1585%" height="15" fill="rgb(214,227,44)" fg:x="929" fg:w="2"/><text x="73.8633%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="73.6926%" y="357" width="0.0792%" height="15" fill="rgb(238,202,4)" fg:x="930" fg:w="1"/><text x="73.9426%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6926%" y="341" width="0.0792%" height="15" fill="rgb(213,190,30)" fg:x="930" fg:w="1"/><text x="73.9426%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="73.6133%" y="469" width="0.2377%" height="15" fill="rgb(239,15,2)" fg:x="929" fg:w="3"/><text x="73.8633%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="73.6133%" y="453" width="0.2377%" height="15" fill="rgb(249,229,4)" fg:x="929" fg:w="3"/><text x="73.8633%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.7718%" y="437" width="0.0792%" height="15" fill="rgb(239,75,44)" fg:x="931" fg:w="1"/><text x="74.0218%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8510%" y="389" width="0.0792%" height="15" fill="rgb(251,206,23)" fg:x="932" fg:w="1"/><text x="74.1010%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.8510%" y="469" width="0.1585%" height="15" fill="rgb(215,208,0)" fg:x="932" fg:w="2"/><text x="74.1010%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="73.8510%" y="453" width="0.1585%" height="15" fill="rgb(230,75,50)" fg:x="932" fg:w="2"/><text x="74.1010%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.8510%" y="437" width="0.1585%" height="15" fill="rgb(246,180,39)" fg:x="932" fg:w="2"/><text x="74.1010%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.8510%" y="421" width="0.1585%" height="15" fill="rgb(249,175,24)" fg:x="932" fg:w="2"/><text x="74.1010%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.8510%" y="405" width="0.1585%" height="15" fill="rgb(247,176,22)" fg:x="932" fg:w="2"/><text x="74.1010%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="73.9303%" y="389" width="0.0792%" height="15" fill="rgb(241,100,24)" fg:x="933" fg:w="1"/><text x="74.1803%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="74.0887%" y="421" width="0.0792%" height="15" fill="rgb(233,4,35)" fg:x="935" fg:w="1"/><text x="74.3387%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="74.0887%" y="405" width="0.0792%" height="15" fill="rgb(211,164,46)" fg:x="935" fg:w="1"/><text x="74.3387%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.0887%" y="389" width="0.0792%" height="15" fill="rgb(242,99,53)" fg:x="935" fg:w="1"/><text x="74.3387%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.0887%" y="373" width="0.0792%" height="15" fill="rgb(243,45,33)" fg:x="935" fg:w="1"/><text x="74.3387%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.1680%" y="245" width="0.0792%" height="15" fill="rgb(217,55,21)" fg:x="936" fg:w="1"/><text x="74.4180%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.87%)</title><rect x="73.5341%" y="517" width="0.8716%" height="15" fill="rgb(245,145,46)" fg:x="928" fg:w="11"/><text x="73.7841%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.87%)</title><rect x="73.5341%" y="501" width="0.8716%" height="15" fill="rgb(215,112,45)" fg:x="928" fg:w="11"/><text x="73.7841%" y="511.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.79%)</title><rect x="73.6133%" y="485" width="0.7924%" height="15" fill="rgb(228,104,16)" fg:x="929" fg:w="10"/><text x="73.8633%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="74.0095%" y="469" width="0.3962%" height="15" fill="rgb(239,186,38)" fg:x="934" fg:w="5"/><text x="74.2595%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="74.0095%" y="453" width="0.3962%" height="15" fill="rgb(228,38,35)" fg:x="934" fg:w="5"/><text x="74.2595%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="74.0887%" y="437" width="0.3170%" height="15" fill="rgb(251,42,40)" fg:x="935" fg:w="4"/><text x="74.3387%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1680%" y="421" width="0.2377%" height="15" fill="rgb(210,51,19)" fg:x="936" fg:w="3"/><text x="74.4180%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.1680%" y="405" width="0.2377%" height="15" fill="rgb(236,94,42)" fg:x="936" fg:w="3"/><text x="74.4180%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="74.1680%" y="389" width="0.2377%" height="15" fill="rgb(239,167,16)" fg:x="936" fg:w="3"/><text x="74.4180%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1680%" y="373" width="0.2377%" height="15" fill="rgb(252,175,31)" fg:x="936" fg:w="3"/><text x="74.4180%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.1680%" y="357" width="0.2377%" height="15" fill="rgb(206,166,30)" fg:x="936" fg:w="3"/><text x="74.4180%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="74.1680%" y="341" width="0.2377%" height="15" fill="rgb(206,209,37)" fg:x="936" fg:w="3"/><text x="74.4180%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1680%" y="325" width="0.2377%" height="15" fill="rgb(226,91,4)" fg:x="936" fg:w="3"/><text x="74.4180%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.1680%" y="309" width="0.2377%" height="15" fill="rgb(222,167,0)" fg:x="936" fg:w="3"/><text x="74.4180%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="74.1680%" y="293" width="0.2377%" height="15" fill="rgb(211,70,14)" fg:x="936" fg:w="3"/><text x="74.4180%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1680%" y="277" width="0.2377%" height="15" fill="rgb(214,84,42)" fg:x="936" fg:w="3"/><text x="74.4180%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.1680%" y="261" width="0.2377%" height="15" fill="rgb(235,157,37)" fg:x="936" fg:w="3"/><text x="74.4180%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="74.2472%" y="245" width="0.1585%" height="15" fill="rgb(225,13,6)" fg:x="937" fg:w="2"/><text x="74.4972%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="74.2472%" y="229" width="0.1585%" height="15" fill="rgb(205,202,1)" fg:x="937" fg:w="2"/><text x="74.4972%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="74.3265%" y="213" width="0.0792%" height="15" fill="rgb(232,195,26)" fg:x="938" fg:w="1"/><text x="74.5765%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (24 samples, 1.90%)</title><rect x="72.6624%" y="565" width="1.9017%" height="15" fill="rgb(208,102,26)" fg:x="917" fg:w="24"/><text x="72.9124%" y="575.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.03%)</title><rect x="73.5341%" y="549" width="1.0301%" height="15" fill="rgb(215,41,39)" fg:x="928" fg:w="13"/><text x="73.7841%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.03%)</title><rect x="73.5341%" y="533" width="1.0301%" height="15" fill="rgb(247,139,11)" fg:x="928" fg:w="13"/><text x="73.7841%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.4057%" y="517" width="0.1585%" height="15" fill="rgb(243,99,6)" fg:x="939" fg:w="2"/><text x="74.6557%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.4057%" y="501" width="0.1585%" height="15" fill="rgb(230,168,48)" fg:x="939" fg:w="2"/><text x="74.6557%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.4849%" y="485" width="0.0792%" height="15" fill="rgb(238,227,13)" fg:x="940" fg:w="1"/><text x="74.7349%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.4849%" y="469" width="0.0792%" height="15" fill="rgb(209,109,13)" fg:x="940" fg:w="1"/><text x="74.7349%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="74.5642%" y="549" width="0.0792%" height="15" fill="rgb(228,195,1)" fg:x="941" fg:w="1"/><text x="74.8142%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.6434%" y="517" width="0.1585%" height="15" fill="rgb(230,218,0)" fg:x="942" fg:w="2"/><text x="74.8934%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.6434%" y="501" width="0.1585%" height="15" fill="rgb(206,1,45)" fg:x="942" fg:w="2"/><text x="74.8934%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.6434%" y="485" width="0.1585%" height="15" fill="rgb(209,124,26)" fg:x="942" fg:w="2"/><text x="74.8934%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.6434%" y="469" width="0.1585%" height="15" fill="rgb(220,59,8)" fg:x="942" fg:w="2"/><text x="74.8934%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="74.5642%" y="565" width="0.3170%" height="15" fill="rgb(251,41,37)" fg:x="941" fg:w="4"/><text x="74.8142%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.6434%" y="549" width="0.2377%" height="15" fill="rgb(239,152,21)" fg:x="942" fg:w="3"/><text x="74.8934%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.6434%" y="533" width="0.2377%" height="15" fill="rgb(226,32,1)" fg:x="942" fg:w="3"/><text x="74.8934%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8019%" y="517" width="0.0792%" height="15" fill="rgb(230,154,36)" fg:x="944" fg:w="1"/><text x="75.0519%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8019%" y="501" width="0.0792%" height="15" fill="rgb(208,228,43)" fg:x="944" fg:w="1"/><text x="75.0519%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8019%" y="485" width="0.0792%" height="15" fill="rgb(214,203,3)" fg:x="944" fg:w="1"/><text x="75.0519%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8019%" y="469" width="0.0792%" height="15" fill="rgb(207,149,29)" fg:x="944" fg:w="1"/><text x="75.0519%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.8019%" y="453" width="0.0792%" height="15" fill="rgb(250,105,7)" fg:x="944" fg:w="1"/><text x="75.0519%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8019%" y="437" width="0.0792%" height="15" fill="rgb(232,222,16)" fg:x="944" fg:w="1"/><text x="75.0519%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (34 samples, 2.69%)</title><rect x="72.2662%" y="581" width="2.6941%" height="15" fill="rgb(209,32,24)" fg:x="912" fg:w="34"/><text x="72.5162%" y="591.50">en..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="74.8811%" y="565" width="0.0792%" height="15" fill="rgb(225,13,6)" fg:x="945" fg:w="1"/><text x="75.1311%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8811%" y="549" width="0.0792%" height="15" fill="rgb(245,226,26)" fg:x="945" fg:w="1"/><text x="75.1311%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8811%" y="533" width="0.0792%" height="15" fill="rgb(229,178,27)" fg:x="945" fg:w="1"/><text x="75.1311%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.8811%" y="517" width="0.0792%" height="15" fill="rgb(205,227,28)" fg:x="945" fg:w="1"/><text x="75.1311%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.8811%" y="501" width="0.0792%" height="15" fill="rgb(210,191,45)" fg:x="945" fg:w="1"/><text x="75.1311%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.8811%" y="485" width="0.0792%" height="15" fill="rgb(206,124,16)" fg:x="945" fg:w="1"/><text x="75.1311%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="74.8811%" y="469" width="0.0792%" height="15" fill="rgb(210,162,0)" fg:x="945" fg:w="1"/><text x="75.1311%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.8811%" y="453" width="0.0792%" height="15" fill="rgb(211,54,38)" fg:x="945" fg:w="1"/><text x="75.1311%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (35 samples, 2.77%)</title><rect x="72.2662%" y="597" width="2.7734%" height="15" fill="rgb(248,192,3)" fg:x="912" fg:w="35"/><text x="72.5162%" y="607.50">&lt;e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="74.9604%" y="581" width="0.0792%" height="15" fill="rgb(233,187,18)" fg:x="946" fg:w="1"/><text x="75.2104%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.9604%" y="565" width="0.0792%" height="15" fill="rgb(237,208,14)" fg:x="946" fg:w="1"/><text x="75.2104%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="75.1981%" y="565" width="0.0792%" height="15" fill="rgb(212,77,1)" fg:x="949" fg:w="1"/><text x="75.4481%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.2773%" y="517" width="0.0792%" height="15" fill="rgb(210,163,22)" fg:x="950" fg:w="1"/><text x="75.5273%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.2773%" y="501" width="0.0792%" height="15" fill="rgb(250,58,28)" fg:x="950" fg:w="1"/><text x="75.5273%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.2773%" y="485" width="0.0792%" height="15" fill="rgb(254,28,41)" fg:x="950" fg:w="1"/><text x="75.5273%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.2773%" y="469" width="0.0792%" height="15" fill="rgb(237,162,36)" fg:x="950" fg:w="1"/><text x="75.5273%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2773%" y="453" width="0.0792%" height="15" fill="rgb(232,56,6)" fg:x="950" fg:w="1"/><text x="75.5273%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.2773%" y="437" width="0.0792%" height="15" fill="rgb(216,127,42)" fg:x="950" fg:w="1"/><text x="75.5273%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2773%" y="421" width="0.0792%" height="15" fill="rgb(241,69,15)" fg:x="950" fg:w="1"/><text x="75.5273%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4358%" y="341" width="0.0792%" height="15" fill="rgb(227,180,19)" fg:x="952" fg:w="1"/><text x="75.6858%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="75.2773%" y="549" width="0.3170%" height="15" fill="rgb(231,188,29)" fg:x="950" fg:w="4"/><text x="75.5273%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="75.2773%" y="533" width="0.3170%" height="15" fill="rgb(224,176,27)" fg:x="950" fg:w="4"/><text x="75.5273%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="75.3566%" y="517" width="0.2377%" height="15" fill="rgb(249,214,19)" fg:x="951" fg:w="3"/><text x="75.6066%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="75.3566%" y="501" width="0.2377%" height="15" fill="rgb(240,0,4)" fg:x="951" fg:w="3"/><text x="75.6066%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="75.3566%" y="485" width="0.2377%" height="15" fill="rgb(233,28,41)" fg:x="951" fg:w="3"/><text x="75.6066%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="75.3566%" y="469" width="0.2377%" height="15" fill="rgb(220,90,51)" fg:x="951" fg:w="3"/><text x="75.6066%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.3566%" y="453" width="0.2377%" height="15" fill="rgb(250,52,22)" fg:x="951" fg:w="3"/><text x="75.6066%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="75.3566%" y="437" width="0.2377%" height="15" fill="rgb(231,152,36)" fg:x="951" fg:w="3"/><text x="75.6066%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.3566%" y="421" width="0.2377%" height="15" fill="rgb(250,218,4)" fg:x="951" fg:w="3"/><text x="75.6066%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="75.3566%" y="405" width="0.2377%" height="15" fill="rgb(210,38,21)" fg:x="951" fg:w="3"/><text x="75.6066%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.3566%" y="389" width="0.2377%" height="15" fill="rgb(230,75,13)" fg:x="951" fg:w="3"/><text x="75.6066%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="75.3566%" y="373" width="0.2377%" height="15" fill="rgb(250,68,53)" fg:x="951" fg:w="3"/><text x="75.6066%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.3566%" y="357" width="0.2377%" height="15" fill="rgb(250,210,16)" fg:x="951" fg:w="3"/><text x="75.6066%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5151%" y="341" width="0.0792%" height="15" fill="rgb(240,132,5)" fg:x="953" fg:w="1"/><text x="75.7651%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.6735%" y="469" width="0.0792%" height="15" fill="rgb(222,148,48)" fg:x="955" fg:w="1"/><text x="75.9235%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="75.6735%" y="485" width="0.2377%" height="15" fill="rgb(247,181,24)" fg:x="955" fg:w="3"/><text x="75.9235%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="75.7528%" y="469" width="0.1585%" height="15" fill="rgb(239,5,31)" fg:x="956" fg:w="2"/><text x="76.0028%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9113%" y="485" width="0.0792%" height="15" fill="rgb(241,152,38)" fg:x="958" fg:w="1"/><text x="76.1613%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.0697%" y="453" width="0.0792%" height="15" fill="rgb(246,200,37)" fg:x="960" fg:w="1"/><text x="76.3197%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.3867%" y="389" width="0.0792%" height="15" fill="rgb(243,210,26)" fg:x="964" fg:w="1"/><text x="76.6367%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.3867%" y="373" width="0.0792%" height="15" fill="rgb(222,22,22)" fg:x="964" fg:w="1"/><text x="76.6367%" y="383.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.03%)</title><rect x="75.5943%" y="533" width="1.0301%" height="15" fill="rgb(208,129,28)" fg:x="954" fg:w="13"/><text x="75.8443%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.03%)</title><rect x="75.5943%" y="517" width="1.0301%" height="15" fill="rgb(254,169,28)" fg:x="954" fg:w="13"/><text x="75.8443%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.03%)</title><rect x="75.5943%" y="501" width="1.0301%" height="15" fill="rgb(225,45,17)" fg:x="954" fg:w="13"/><text x="75.8443%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.63%)</title><rect x="75.9905%" y="485" width="0.6339%" height="15" fill="rgb(232,199,2)" fg:x="959" fg:w="8"/><text x="76.2405%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="75.9905%" y="469" width="0.6339%" height="15" fill="rgb(235,33,40)" fg:x="959" fg:w="8"/><text x="76.2405%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="76.1490%" y="453" width="0.4754%" height="15" fill="rgb(237,89,50)" fg:x="961" fg:w="6"/><text x="76.3990%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.3867%" y="437" width="0.2377%" height="15" fill="rgb(238,126,5)" fg:x="964" fg:w="3"/><text x="76.6367%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="76.3867%" y="421" width="0.2377%" height="15" fill="rgb(247,214,42)" fg:x="964" fg:w="3"/><text x="76.6367%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.3867%" y="405" width="0.2377%" height="15" fill="rgb(238,60,45)" fg:x="964" fg:w="3"/><text x="76.6367%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.4659%" y="389" width="0.1585%" height="15" fill="rgb(225,69,44)" fg:x="965" fg:w="2"/><text x="76.7159%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.4659%" y="373" width="0.1585%" height="15" fill="rgb(241,13,44)" fg:x="965" fg:w="2"/><text x="76.7159%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.4659%" y="357" width="0.1585%" height="15" fill="rgb(227,121,22)" fg:x="965" fg:w="2"/><text x="76.7159%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.4659%" y="341" width="0.1585%" height="15" fill="rgb(231,160,23)" fg:x="965" fg:w="2"/><text x="76.7159%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.5452%" y="325" width="0.0792%" height="15" fill="rgb(250,179,43)" fg:x="966" fg:w="1"/><text x="76.7952%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7036%" y="501" width="0.0792%" height="15" fill="rgb(233,54,46)" fg:x="968" fg:w="1"/><text x="76.9536%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.8621%" y="469" width="0.0792%" height="15" fill="rgb(247,120,42)" fg:x="970" fg:w="1"/><text x="77.1121%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="76.9414%" y="357" width="0.0792%" height="15" fill="rgb(221,219,12)" fg:x="971" fg:w="1"/><text x="77.1914%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.9414%" y="341" width="0.0792%" height="15" fill="rgb(211,126,8)" fg:x="971" fg:w="1"/><text x="77.1914%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.9414%" y="325" width="0.0792%" height="15" fill="rgb(218,154,33)" fg:x="971" fg:w="1"/><text x="77.1914%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9414%" y="309" width="0.0792%" height="15" fill="rgb(212,199,16)" fg:x="971" fg:w="1"/><text x="77.1914%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.9414%" y="421" width="0.1585%" height="15" fill="rgb(236,215,46)" fg:x="971" fg:w="2"/><text x="77.1914%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.9414%" y="405" width="0.1585%" height="15" fill="rgb(232,32,22)" fg:x="971" fg:w="2"/><text x="77.1914%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.9414%" y="389" width="0.1585%" height="15" fill="rgb(234,79,15)" fg:x="971" fg:w="2"/><text x="77.1914%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.9414%" y="373" width="0.1585%" height="15" fill="rgb(235,187,47)" fg:x="971" fg:w="2"/><text x="77.1914%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0206%" y="357" width="0.0792%" height="15" fill="rgb(244,69,37)" fg:x="972" fg:w="1"/><text x="77.2706%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.9414%" y="453" width="0.2377%" height="15" fill="rgb(249,140,25)" fg:x="971" fg:w="3"/><text x="77.1914%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.9414%" y="437" width="0.2377%" height="15" fill="rgb(213,69,8)" fg:x="971" fg:w="3"/><text x="77.1914%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="77.0998%" y="421" width="0.0792%" height="15" fill="rgb(220,136,2)" fg:x="973" fg:w="1"/><text x="77.3498%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.1791%" y="421" width="0.0792%" height="15" fill="rgb(237,50,36)" fg:x="974" fg:w="1"/><text x="77.4291%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.4168%" y="277" width="0.0792%" height="15" fill="rgb(226,18,11)" fg:x="977" fg:w="1"/><text x="77.6668%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.4168%" y="261" width="0.0792%" height="15" fill="rgb(243,156,2)" fg:x="977" fg:w="1"/><text x="77.6668%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.79%)</title><rect x="76.7829%" y="501" width="0.7924%" height="15" fill="rgb(218,8,34)" fg:x="969" fg:w="10"/><text x="77.0329%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.79%)</title><rect x="76.7829%" y="485" width="0.7924%" height="15" fill="rgb(250,94,35)" fg:x="969" fg:w="10"/><text x="77.0329%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.63%)</title><rect x="76.9414%" y="469" width="0.6339%" height="15" fill="rgb(229,127,21)" fg:x="971" fg:w="8"/><text x="77.1914%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="77.1791%" y="453" width="0.3962%" height="15" fill="rgb(234,49,5)" fg:x="974" fg:w="5"/><text x="77.4291%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="77.1791%" y="437" width="0.3962%" height="15" fill="rgb(248,12,16)" fg:x="974" fg:w="5"/><text x="77.4291%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="77.2583%" y="421" width="0.3170%" height="15" fill="rgb(208,220,31)" fg:x="975" fg:w="4"/><text x="77.5083%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="77.2583%" y="405" width="0.3170%" height="15" fill="rgb(243,184,0)" fg:x="975" fg:w="4"/><text x="77.5083%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.3376%" y="389" width="0.2377%" height="15" fill="rgb(217,38,21)" fg:x="976" fg:w="3"/><text x="77.5876%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.4168%" y="373" width="0.1585%" height="15" fill="rgb(239,120,45)" fg:x="977" fg:w="2"/><text x="77.6668%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.4168%" y="357" width="0.1585%" height="15" fill="rgb(235,33,2)" fg:x="977" fg:w="2"/><text x="77.6668%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.4168%" y="341" width="0.1585%" height="15" fill="rgb(249,161,5)" fg:x="977" fg:w="2"/><text x="77.6668%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.4168%" y="325" width="0.1585%" height="15" fill="rgb(250,165,48)" fg:x="977" fg:w="2"/><text x="77.6668%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.4168%" y="309" width="0.1585%" height="15" fill="rgb(221,23,45)" fg:x="977" fg:w="2"/><text x="77.6668%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.4168%" y="293" width="0.1585%" height="15" fill="rgb(217,108,46)" fg:x="977" fg:w="2"/><text x="77.6668%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="77.4960%" y="277" width="0.0792%" height="15" fill="rgb(254,26,35)" fg:x="978" fg:w="1"/><text x="77.7460%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4960%" y="261" width="0.0792%" height="15" fill="rgb(218,223,28)" fg:x="978" fg:w="1"/><text x="77.7460%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.4960%" y="245" width="0.0792%" height="15" fill="rgb(242,27,47)" fg:x="978" fg:w="1"/><text x="77.7460%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.4960%" y="229" width="0.0792%" height="15" fill="rgb(218,39,35)" fg:x="978" fg:w="1"/><text x="77.7460%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (26 samples, 2.06%)</title><rect x="75.5943%" y="549" width="2.0602%" height="15" fill="rgb(232,127,16)" fg:x="954" fg:w="26"/><text x="75.8443%" y="559.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.03%)</title><rect x="76.6244%" y="533" width="1.0301%" height="15" fill="rgb(231,219,51)" fg:x="967" fg:w="13"/><text x="76.8744%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.03%)</title><rect x="76.6244%" y="517" width="1.0301%" height="15" fill="rgb(217,220,46)" fg:x="967" fg:w="13"/><text x="76.8744%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.5753%" y="501" width="0.0792%" height="15" fill="rgb(230,75,1)" fg:x="979" fg:w="1"/><text x="77.8253%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.5753%" y="485" width="0.0792%" height="15" fill="rgb(218,2,8)" fg:x="979" fg:w="1"/><text x="77.8253%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="77.5753%" y="469" width="0.0792%" height="15" fill="rgb(206,111,30)" fg:x="979" fg:w="1"/><text x="77.8253%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="77.5753%" y="453" width="0.0792%" height="15" fill="rgb(209,135,6)" fg:x="979" fg:w="1"/><text x="77.8253%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7338%" y="501" width="0.0792%" height="15" fill="rgb(205,169,10)" fg:x="981" fg:w="1"/><text x="77.9838%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7338%" y="485" width="0.0792%" height="15" fill="rgb(212,204,38)" fg:x="981" fg:w="1"/><text x="77.9838%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7338%" y="469" width="0.0792%" height="15" fill="rgb(205,199,14)" fg:x="981" fg:w="1"/><text x="77.9838%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7338%" y="453" width="0.0792%" height="15" fill="rgb(212,4,6)" fg:x="981" fg:w="1"/><text x="77.9838%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.7338%" y="437" width="0.0792%" height="15" fill="rgb(250,15,10)" fg:x="981" fg:w="1"/><text x="77.9838%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.7338%" y="421" width="0.0792%" height="15" fill="rgb(212,49,51)" fg:x="981" fg:w="1"/><text x="77.9838%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.7338%" y="405" width="0.0792%" height="15" fill="rgb(235,21,9)" fg:x="981" fg:w="1"/><text x="77.9838%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.7338%" y="389" width="0.0792%" height="15" fill="rgb(251,31,32)" fg:x="981" fg:w="1"/><text x="77.9838%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.7338%" y="373" width="0.0792%" height="15" fill="rgb(246,23,9)" fg:x="981" fg:w="1"/><text x="77.9838%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.7338%" y="357" width="0.0792%" height="15" fill="rgb(225,216,14)" fg:x="981" fg:w="1"/><text x="77.9838%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.7338%" y="341" width="0.0792%" height="15" fill="rgb(215,200,26)" fg:x="981" fg:w="1"/><text x="77.9838%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.7338%" y="325" width="0.0792%" height="15" fill="rgb(237,130,47)" fg:x="981" fg:w="1"/><text x="77.9838%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.7338%" y="309" width="0.0792%" height="15" fill="rgb(247,74,14)" fg:x="981" fg:w="1"/><text x="77.9838%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.7338%" y="293" width="0.0792%" height="15" fill="rgb(254,97,46)" fg:x="981" fg:w="1"/><text x="77.9838%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.7338%" y="277" width="0.0792%" height="15" fill="rgb(234,191,1)" fg:x="981" fg:w="1"/><text x="77.9838%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7338%" y="261" width="0.0792%" height="15" fill="rgb(215,165,14)" fg:x="981" fg:w="1"/><text x="77.9838%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.8130%" y="405" width="0.0792%" height="15" fill="rgb(230,182,6)" fg:x="982" fg:w="1"/><text x="78.0630%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.8130%" y="389" width="0.0792%" height="15" fill="rgb(210,127,39)" fg:x="982" fg:w="1"/><text x="78.0630%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8130%" y="373" width="0.0792%" height="15" fill="rgb(223,212,51)" fg:x="982" fg:w="1"/><text x="78.0630%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="77.6545%" y="549" width="0.3962%" height="15" fill="rgb(226,176,43)" fg:x="980" fg:w="5"/><text x="77.9045%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="77.6545%" y="533" width="0.3962%" height="15" fill="rgb(222,155,4)" fg:x="980" fg:w="5"/><text x="77.9045%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="77.6545%" y="517" width="0.3962%" height="15" fill="rgb(215,149,7)" fg:x="980" fg:w="5"/><text x="77.9045%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.8130%" y="501" width="0.2377%" height="15" fill="rgb(252,199,23)" fg:x="982" fg:w="3"/><text x="78.0630%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.8130%" y="485" width="0.2377%" height="15" fill="rgb(245,52,29)" fg:x="982" fg:w="3"/><text x="78.0630%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.8130%" y="469" width="0.2377%" height="15" fill="rgb(221,228,19)" fg:x="982" fg:w="3"/><text x="78.0630%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.8130%" y="453" width="0.2377%" height="15" fill="rgb(253,101,6)" fg:x="982" fg:w="3"/><text x="78.0630%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="77.8130%" y="437" width="0.2377%" height="15" fill="rgb(211,130,8)" fg:x="982" fg:w="3"/><text x="78.0630%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.8130%" y="421" width="0.2377%" height="15" fill="rgb(238,37,53)" fg:x="982" fg:w="3"/><text x="78.0630%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.8922%" y="405" width="0.1585%" height="15" fill="rgb(235,145,5)" fg:x="983" fg:w="2"/><text x="78.1422%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.8922%" y="389" width="0.1585%" height="15" fill="rgb(244,12,43)" fg:x="983" fg:w="2"/><text x="78.1422%" y="399.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="78.0507%" y="549" width="0.0792%" height="15" fill="rgb(246,195,24)" fg:x="985" fg:w="1"/><text x="78.3007%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0507%" y="533" width="0.0792%" height="15" fill="rgb(235,163,6)" fg:x="985" fg:w="1"/><text x="78.3007%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0507%" y="517" width="0.0792%" height="15" fill="rgb(236,218,17)" fg:x="985" fg:w="1"/><text x="78.3007%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.0507%" y="501" width="0.0792%" height="15" fill="rgb(235,12,38)" fg:x="985" fg:w="1"/><text x="78.3007%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.0507%" y="485" width="0.0792%" height="15" fill="rgb(225,195,33)" fg:x="985" fg:w="1"/><text x="78.3007%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.0507%" y="469" width="0.0792%" height="15" fill="rgb(238,54,35)" fg:x="985" fg:w="1"/><text x="78.3007%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="78.0507%" y="453" width="0.0792%" height="15" fill="rgb(238,33,7)" fg:x="985" fg:w="1"/><text x="78.3007%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.0507%" y="437" width="0.0792%" height="15" fill="rgb(245,5,14)" fg:x="985" fg:w="1"/><text x="78.3007%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (40 samples, 3.17%)</title><rect x="75.0396%" y="581" width="3.1696%" height="15" fill="rgb(251,95,31)" fg:x="947" fg:w="40"/><text x="75.2896%" y="591.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (37 samples, 2.93%)</title><rect x="75.2773%" y="565" width="2.9319%" height="15" fill="rgb(222,15,46)" fg:x="950" fg:w="37"/><text x="75.5273%" y="575.50">en..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="78.1300%" y="549" width="0.0792%" height="15" fill="rgb(226,182,24)" fg:x="986" fg:w="1"/><text x="78.3800%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.1300%" y="533" width="0.0792%" height="15" fill="rgb(229,105,41)" fg:x="986" fg:w="1"/><text x="78.3800%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.2092%" y="453" width="0.0792%" height="15" fill="rgb(216,99,53)" fg:x="987" fg:w="1"/><text x="78.4592%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.2092%" y="437" width="0.0792%" height="15" fill="rgb(253,26,20)" fg:x="987" fg:w="1"/><text x="78.4592%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.2092%" y="421" width="0.0792%" height="15" fill="rgb(249,155,28)" fg:x="987" fg:w="1"/><text x="78.4592%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.2092%" y="405" width="0.0792%" height="15" fill="rgb(241,221,2)" fg:x="987" fg:w="1"/><text x="78.4592%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.2092%" y="389" width="0.0792%" height="15" fill="rgb(219,124,6)" fg:x="987" fg:w="1"/><text x="78.4592%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.2092%" y="373" width="0.0792%" height="15" fill="rgb(233,37,6)" fg:x="987" fg:w="1"/><text x="78.4592%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.2092%" y="357" width="0.0792%" height="15" fill="rgb(238,20,14)" fg:x="987" fg:w="1"/><text x="78.4592%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.2092%" y="341" width="0.0792%" height="15" fill="rgb(232,106,27)" fg:x="987" fg:w="1"/><text x="78.4592%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.2092%" y="325" width="0.0792%" height="15" fill="rgb(246,157,24)" fg:x="987" fg:w="1"/><text x="78.4592%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.2092%" y="309" width="0.0792%" height="15" fill="rgb(214,153,10)" fg:x="987" fg:w="1"/><text x="78.4592%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.2092%" y="293" width="0.0792%" height="15" fill="rgb(212,94,6)" fg:x="987" fg:w="1"/><text x="78.4592%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (42 samples, 3.33%)</title><rect x="75.0396%" y="597" width="3.3281%" height="15" fill="rgb(254,25,27)" fg:x="947" fg:w="42"/><text x="75.2896%" y="607.50">&lt;en..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="78.2092%" y="581" width="0.1585%" height="15" fill="rgb(250,43,52)" fg:x="987" fg:w="2"/><text x="78.4592%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="78.2092%" y="565" width="0.1585%" height="15" fill="rgb(221,226,40)" fg:x="987" fg:w="2"/><text x="78.4592%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="78.2092%" y="549" width="0.1585%" height="15" fill="rgb(235,162,34)" fg:x="987" fg:w="2"/><text x="78.4592%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.2092%" y="533" width="0.1585%" height="15" fill="rgb(239,24,26)" fg:x="987" fg:w="2"/><text x="78.4592%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.2092%" y="517" width="0.1585%" height="15" fill="rgb(244,226,11)" fg:x="987" fg:w="2"/><text x="78.4592%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.2092%" y="501" width="0.1585%" height="15" fill="rgb(225,23,10)" fg:x="987" fg:w="2"/><text x="78.4592%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="78.2092%" y="485" width="0.1585%" height="15" fill="rgb(249,125,6)" fg:x="987" fg:w="2"/><text x="78.4592%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.2092%" y="469" width="0.1585%" height="15" fill="rgb(246,212,12)" fg:x="987" fg:w="2"/><text x="78.4592%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.2884%" y="453" width="0.0792%" height="15" fill="rgb(230,43,32)" fg:x="988" fg:w="1"/><text x="78.5384%" y="463.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="78.2884%" y="437" width="0.0792%" height="15" fill="rgb(210,95,23)" fg:x="988" fg:w="1"/><text x="78.5384%" y="447.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.3677%" y="597" width="0.0792%" height="15" fill="rgb(229,103,33)" fg:x="989" fg:w="1"/><text x="78.6177%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.3677%" y="581" width="0.0792%" height="15" fill="rgb(222,104,27)" fg:x="989" fg:w="1"/><text x="78.6177%" y="591.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.3677%" y="565" width="0.0792%" height="15" fill="rgb(239,221,23)" fg:x="989" fg:w="1"/><text x="78.6177%" y="575.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.3677%" y="549" width="0.0792%" height="15" fill="rgb(222,98,21)" fg:x="989" fg:w="1"/><text x="78.6177%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="78.4469%" y="597" width="0.2377%" height="15" fill="rgb(231,101,20)" fg:x="990" fg:w="3"/><text x="78.6969%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="78.6846%" y="549" width="0.1585%" height="15" fill="rgb(215,150,22)" fg:x="993" fg:w="2"/><text x="78.9346%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.6846%" y="533" width="0.1585%" height="15" fill="rgb(248,3,34)" fg:x="993" fg:w="2"/><text x="78.9346%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.6846%" y="517" width="0.1585%" height="15" fill="rgb(220,141,21)" fg:x="993" fg:w="2"/><text x="78.9346%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7639%" y="501" width="0.0792%" height="15" fill="rgb(223,41,48)" fg:x="994" fg:w="1"/><text x="79.0139%" y="511.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="78.6846%" y="597" width="0.2377%" height="15" fill="rgb(247,12,5)" fg:x="993" fg:w="3"/><text x="78.9346%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="78.6846%" y="581" width="0.2377%" height="15" fill="rgb(206,173,10)" fg:x="993" fg:w="3"/><text x="78.9346%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="78.6846%" y="565" width="0.2377%" height="15" fill="rgb(233,214,37)" fg:x="993" fg:w="3"/><text x="78.9346%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.8431%" y="549" width="0.0792%" height="15" fill="rgb(238,86,43)" fg:x="995" fg:w="1"/><text x="79.0931%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8431%" y="533" width="0.0792%" height="15" fill="rgb(212,182,8)" fg:x="995" fg:w="1"/><text x="79.0931%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.8431%" y="517" width="0.0792%" height="15" fill="rgb(240,91,47)" fg:x="995" fg:w="1"/><text x="79.0931%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.8431%" y="501" width="0.0792%" height="15" fill="rgb(209,138,26)" fg:x="995" fg:w="1"/><text x="79.0931%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.8431%" y="485" width="0.0792%" height="15" fill="rgb(231,163,20)" fg:x="995" fg:w="1"/><text x="79.0931%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.8431%" y="469" width="0.0792%" height="15" fill="rgb(214,91,54)" fg:x="995" fg:w="1"/><text x="79.0931%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (998 samples, 79.08%)</title><rect x="0.0000%" y="661" width="79.0808%" height="15" fill="rgb(230,32,17)" fg:x="0" fg:w="998"/><text x="0.2500%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (998 samples, 79.08%)</title><rect x="0.0000%" y="645" width="79.0808%" height="15" fill="rgb(231,34,34)" fg:x="0" fg:w="998"/><text x="0.2500%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (998 samples, 79.08%)</title><rect x="0.0000%" y="629" width="79.0808%" height="15" fill="rgb(224,228,27)" fg:x="0" fg:w="998"/><text x="0.2500%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (145 samples, 11.49%)</title><rect x="67.5911%" y="613" width="11.4897%" height="15" fill="rgb(219,35,40)" fg:x="853" fg:w="145"/><text x="67.8411%" y="623.50">engine::session::..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="78.9223%" y="597" width="0.1585%" height="15" fill="rgb(234,42,8)" fg:x="996" fg:w="2"/><text x="79.1723%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="78.9223%" y="581" width="0.1585%" height="15" fill="rgb(226,75,22)" fg:x="996" fg:w="2"/><text x="79.1723%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="78.9223%" y="565" width="0.1585%" height="15" fill="rgb(242,203,28)" fg:x="996" fg:w="2"/><text x="79.1723%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.9223%" y="549" width="0.1585%" height="15" fill="rgb(221,3,9)" fg:x="996" fg:w="2"/><text x="79.1723%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.9223%" y="533" width="0.1585%" height="15" fill="rgb(214,34,31)" fg:x="996" fg:w="2"/><text x="79.1723%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.9223%" y="517" width="0.1585%" height="15" fill="rgb(252,119,15)" fg:x="996" fg:w="2"/><text x="79.1723%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="78.9223%" y="501" width="0.1585%" height="15" fill="rgb(244,224,31)" fg:x="996" fg:w="2"/><text x="79.1723%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.9223%" y="485" width="0.1585%" height="15" fill="rgb(215,8,51)" fg:x="996" fg:w="2"/><text x="79.1723%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.9223%" y="469" width="0.1585%" height="15" fill="rgb(207,24,1)" fg:x="996" fg:w="2"/><text x="79.1723%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="78.9223%" y="453" width="0.1585%" height="15" fill="rgb(245,90,0)" fg:x="996" fg:w="2"/><text x="79.1723%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="79.0016%" y="437" width="0.0792%" height="15" fill="rgb(246,43,48)" fg:x="997" fg:w="1"/><text x="79.2516%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.0016%" y="421" width="0.0792%" height="15" fill="rgb(252,218,10)" fg:x="997" fg:w="1"/><text x="79.2516%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.0016%" y="405" width="0.0792%" height="15" fill="rgb(231,24,35)" fg:x="997" fg:w="1"/><text x="79.2516%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.0016%" y="389" width="0.0792%" height="15" fill="rgb(225,66,19)" fg:x="997" fg:w="1"/><text x="79.2516%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.0016%" y="373" width="0.0792%" height="15" fill="rgb(214,96,51)" fg:x="997" fg:w="1"/><text x="79.2516%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="79.0016%" y="357" width="0.0792%" height="15" fill="rgb(251,151,47)" fg:x="997" fg:w="1"/><text x="79.2516%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="79.0016%" y="341" width="0.0792%" height="15" fill="rgb(236,79,14)" fg:x="997" fg:w="1"/><text x="79.2516%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="79.0016%" y="325" width="0.0792%" height="15" fill="rgb(210,205,11)" fg:x="997" fg:w="1"/><text x="79.2516%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="79.0016%" y="309" width="0.0792%" height="15" fill="rgb(233,142,53)" fg:x="997" fg:w="1"/><text x="79.2516%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.08%)</title><rect x="79.0016%" y="293" width="0.0792%" height="15" fill="rgb(212,116,48)" fg:x="997" fg:w="1"/><text x="79.2516%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1601%" y="565" width="0.0792%" height="15" fill="rgb(234,55,33)" fg:x="999" fg:w="1"/><text x="79.4101%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3185%" y="485" width="0.0792%" height="15" fill="rgb(253,92,27)" fg:x="1001" fg:w="1"/><text x="79.5685%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4770%" y="453" width="0.0792%" height="15" fill="rgb(220,7,35)" fg:x="1003" fg:w="1"/><text x="79.7270%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.3978%" y="485" width="0.2377%" height="15" fill="rgb(246,124,6)" fg:x="1002" fg:w="3"/><text x="79.6478%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.4770%" y="469" width="0.1585%" height="15" fill="rgb(212,111,51)" fg:x="1003" fg:w="2"/><text x="79.7270%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.5563%" y="453" width="0.0792%" height="15" fill="rgb(253,116,7)" fg:x="1004" fg:w="1"/><text x="79.8063%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.63%)</title><rect x="79.0808%" y="613" width="0.6339%" height="15" fill="rgb(213,145,18)" fg:x="998" fg:w="8"/><text x="79.3308%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (8 samples, 0.63%)</title><rect x="79.0808%" y="597" width="0.6339%" height="15" fill="rgb(219,149,7)" fg:x="998" fg:w="8"/><text x="79.3308%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.55%)</title><rect x="79.1601%" y="581" width="0.5547%" height="15" fill="rgb(225,156,20)" fg:x="999" fg:w="7"/><text x="79.4101%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (6 samples, 0.48%)</title><rect x="79.2393%" y="565" width="0.4754%" height="15" fill="rgb(211,98,19)" fg:x="1000" fg:w="6"/><text x="79.4893%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.2393%" y="549" width="0.4754%" height="15" fill="rgb(231,192,31)" fg:x="1000" fg:w="6"/><text x="79.4893%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.2393%" y="533" width="0.4754%" height="15" fill="rgb(249,95,19)" fg:x="1000" fg:w="6"/><text x="79.4893%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.2393%" y="517" width="0.4754%" height="15" fill="rgb(247,101,36)" fg:x="1000" fg:w="6"/><text x="79.4893%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="79.2393%" y="501" width="0.4754%" height="15" fill="rgb(221,45,43)" fg:x="1000" fg:w="6"/><text x="79.4893%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Write::write_fmt::Adapter&lt;std::sys::unix::stdio::Stderr&gt;&gt; (1 samples, 0.08%)</title><rect x="79.6355%" y="485" width="0.0792%" height="15" fill="rgb(220,42,1)" fg:x="1005" fg:w="1"/><text x="79.8855%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7147%" y="581" width="0.0792%" height="15" fill="rgb(236,19,24)" fg:x="1006" fg:w="1"/><text x="79.9647%" y="591.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (1 samples, 0.08%)</title><rect x="79.7940%" y="565" width="0.0792%" height="15" fill="rgb(225,192,6)" fg:x="1007" fg:w="1"/><text x="80.0440%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (1 samples, 0.08%)</title><rect x="79.7940%" y="549" width="0.0792%" height="15" fill="rgb(242,30,19)" fg:x="1007" fg:w="1"/><text x="80.0440%" y="559.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="79.7940%" y="533" width="0.0792%" height="15" fill="rgb(240,36,6)" fg:x="1007" fg:w="1"/><text x="80.0440%" y="543.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="79.7940%" y="517" width="0.0792%" height="15" fill="rgb(246,40,28)" fg:x="1007" fg:w="1"/><text x="80.0440%" y="527.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (4 samples, 0.32%)</title><rect x="79.7147%" y="613" width="0.3170%" height="15" fill="rgb(225,155,33)" fg:x="1006" fg:w="4"/><text x="79.9647%" y="623.50"></text></g><g><title>engine::session::Session::new (4 samples, 0.32%)</title><rect x="79.7147%" y="597" width="0.3170%" height="15" fill="rgb(240,65,18)" fg:x="1006" fg:w="4"/><text x="79.9647%" y="607.50"></text></g><g><title>engine::session::Session::initialize (3 samples, 0.24%)</title><rect x="79.7940%" y="581" width="0.2377%" height="15" fill="rgb(217,0,48)" fg:x="1007" fg:w="3"/><text x="80.0440%" y="591.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="79.8732%" y="565" width="0.1585%" height="15" fill="rgb(217,80,15)" fg:x="1008" fg:w="2"/><text x="80.1232%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="79.8732%" y="549" width="0.1585%" height="15" fill="rgb(253,43,51)" fg:x="1008" fg:w="2"/><text x="80.1232%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="79.8732%" y="533" width="0.1585%" height="15" fill="rgb(246,60,4)" fg:x="1008" fg:w="2"/><text x="80.1232%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.9525%" y="517" width="0.0792%" height="15" fill="rgb(230,40,54)" fg:x="1009" fg:w="1"/><text x="80.2025%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.9525%" y="501" width="0.0792%" height="15" fill="rgb(208,20,44)" fg:x="1009" fg:w="1"/><text x="80.2025%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.9525%" y="485" width="0.0792%" height="15" fill="rgb(230,22,22)" fg:x="1009" fg:w="1"/><text x="80.2025%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="80.1109%" y="517" width="0.0792%" height="15" fill="rgb(207,57,4)" fg:x="1011" fg:w="1"/><text x="80.3609%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="80.1109%" y="549" width="0.1585%" height="15" fill="rgb(242,130,33)" fg:x="1011" fg:w="2"/><text x="80.3609%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="80.1109%" y="533" width="0.1585%" height="15" fill="rgb(218,66,43)" fg:x="1011" fg:w="2"/><text x="80.3609%" y="543.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="80.1902%" y="517" width="0.0792%" height="15" fill="rgb(236,105,16)" fg:x="1012" fg:w="1"/><text x="80.4402%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1902%" y="501" width="0.0792%" height="15" fill="rgb(230,46,15)" fg:x="1012" fg:w="1"/><text x="80.4402%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="80.3487%" y="501" width="0.1585%" height="15" fill="rgb(251,172,40)" fg:x="1014" fg:w="2"/><text x="80.5987%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.5864%" y="437" width="0.0792%" height="15" fill="rgb(225,217,32)" fg:x="1017" fg:w="1"/><text x="80.8364%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.5864%" y="421" width="0.0792%" height="15" fill="rgb(243,10,29)" fg:x="1017" fg:w="1"/><text x="80.8364%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.5864%" y="405" width="0.0792%" height="15" fill="rgb(207,102,10)" fg:x="1017" fg:w="1"/><text x="80.8364%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.5864%" y="389" width="0.0792%" height="15" fill="rgb(241,125,5)" fg:x="1017" fg:w="1"/><text x="80.8364%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="80.5071%" y="501" width="0.2377%" height="15" fill="rgb(230,125,29)" fg:x="1016" fg:w="3"/><text x="80.7571%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="80.5071%" y="485" width="0.2377%" height="15" fill="rgb(223,65,44)" fg:x="1016" fg:w="3"/><text x="80.7571%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="80.5071%" y="469" width="0.2377%" height="15" fill="rgb(224,188,28)" fg:x="1016" fg:w="3"/><text x="80.7571%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.5864%" y="453" width="0.1585%" height="15" fill="rgb(254,197,27)" fg:x="1017" fg:w="2"/><text x="80.8364%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.6656%" y="437" width="0.0792%" height="15" fill="rgb(220,200,25)" fg:x="1018" fg:w="1"/><text x="80.9156%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.7448%" y="485" width="0.1585%" height="15" fill="rgb(239,225,54)" fg:x="1019" fg:w="2"/><text x="80.9948%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8241%" y="469" width="0.0792%" height="15" fill="rgb(211,59,40)" fg:x="1020" fg:w="1"/><text x="81.0741%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8241%" y="453" width="0.0792%" height="15" fill="rgb(213,176,46)" fg:x="1020" fg:w="1"/><text x="81.0741%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8241%" y="437" width="0.0792%" height="15" fill="rgb(226,99,4)" fg:x="1020" fg:w="1"/><text x="81.0741%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.0618%" y="437" width="0.0792%" height="15" fill="rgb(239,203,43)" fg:x="1023" fg:w="1"/><text x="81.3118%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0618%" y="421" width="0.0792%" height="15" fill="rgb(246,1,45)" fg:x="1023" fg:w="1"/><text x="81.3118%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="81.0618%" y="469" width="0.1585%" height="15" fill="rgb(231,42,52)" fg:x="1023" fg:w="2"/><text x="81.3118%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.0618%" y="453" width="0.1585%" height="15" fill="rgb(240,13,50)" fg:x="1023" fg:w="2"/><text x="81.3118%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.1410%" y="437" width="0.0792%" height="15" fill="rgb(225,81,14)" fg:x="1024" fg:w="1"/><text x="81.3910%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.1410%" y="421" width="0.0792%" height="15" fill="rgb(216,182,23)" fg:x="1024" fg:w="1"/><text x="81.3910%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.2203%" y="469" width="0.0792%" height="15" fill="rgb(233,137,19)" fg:x="1025" fg:w="1"/><text x="81.4703%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.2203%" y="453" width="0.0792%" height="15" fill="rgb(242,61,46)" fg:x="1025" fg:w="1"/><text x="81.4703%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.2203%" y="437" width="0.0792%" height="15" fill="rgb(221,168,51)" fg:x="1025" fg:w="1"/><text x="81.4703%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.2203%" y="421" width="0.0792%" height="15" fill="rgb(238,48,15)" fg:x="1025" fg:w="1"/><text x="81.4703%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="81.2995%" y="453" width="0.2377%" height="15" fill="rgb(216,13,16)" fg:x="1026" fg:w="3"/><text x="81.5495%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4580%" y="437" width="0.0792%" height="15" fill="rgb(223,185,34)" fg:x="1028" fg:w="1"/><text x="81.7080%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.4580%" y="421" width="0.0792%" height="15" fill="rgb(228,94,42)" fg:x="1028" fg:w="1"/><text x="81.7080%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.4580%" y="405" width="0.0792%" height="15" fill="rgb(218,166,43)" fg:x="1028" fg:w="1"/><text x="81.7080%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.5372%" y="437" width="0.0792%" height="15" fill="rgb(232,30,50)" fg:x="1029" fg:w="1"/><text x="81.7872%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.5372%" y="421" width="0.0792%" height="15" fill="rgb(245,206,45)" fg:x="1029" fg:w="1"/><text x="81.7872%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.6165%" y="421" width="0.0792%" height="15" fill="rgb(220,56,22)" fg:x="1030" fg:w="1"/><text x="81.8665%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.6165%" y="405" width="0.0792%" height="15" fill="rgb(239,129,38)" fg:x="1030" fg:w="1"/><text x="81.8665%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.6165%" y="389" width="0.0792%" height="15" fill="rgb(207,68,41)" fg:x="1030" fg:w="1"/><text x="81.8665%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.6165%" y="373" width="0.0792%" height="15" fill="rgb(221,21,7)" fg:x="1030" fg:w="1"/><text x="81.8665%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.6165%" y="357" width="0.0792%" height="15" fill="rgb(240,33,25)" fg:x="1030" fg:w="1"/><text x="81.8665%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.6165%" y="341" width="0.0792%" height="15" fill="rgb(242,119,10)" fg:x="1030" fg:w="1"/><text x="81.8665%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.6165%" y="325" width="0.0792%" height="15" fill="rgb(214,149,40)" fg:x="1030" fg:w="1"/><text x="81.8665%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6957%" y="421" width="0.0792%" height="15" fill="rgb(228,25,36)" fg:x="1031" fg:w="1"/><text x="81.9457%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.6957%" y="405" width="0.0792%" height="15" fill="rgb(222,59,15)" fg:x="1031" fg:w="1"/><text x="81.9457%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.6957%" y="389" width="0.0792%" height="15" fill="rgb(218,170,0)" fg:x="1031" fg:w="1"/><text x="81.9457%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.6957%" y="373" width="0.0792%" height="15" fill="rgb(232,173,23)" fg:x="1031" fg:w="1"/><text x="81.9457%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="81.2995%" y="469" width="0.5547%" height="15" fill="rgb(218,116,1)" fg:x="1026" fg:w="7"/><text x="81.5495%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="81.5372%" y="453" width="0.3170%" height="15" fill="rgb(207,34,4)" fg:x="1029" fg:w="4"/><text x="81.7872%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.6165%" y="437" width="0.2377%" height="15" fill="rgb(229,54,52)" fg:x="1030" fg:w="3"/><text x="81.8665%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.7750%" y="421" width="0.0792%" height="15" fill="rgb(211,86,23)" fg:x="1032" fg:w="1"/><text x="82.0250%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 1.66%)</title><rect x="80.2694%" y="517" width="1.6640%" height="15" fill="rgb(254,153,34)" fg:x="1013" fg:w="21"/><text x="80.5194%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="80.7448%" y="501" width="1.1886%" height="15" fill="rgb(219,220,14)" fg:x="1019" fg:w="15"/><text x="80.9948%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.03%)</title><rect x="80.9033%" y="485" width="1.0301%" height="15" fill="rgb(247,8,26)" fg:x="1021" fg:w="13"/><text x="81.1533%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.8542%" y="469" width="0.0792%" height="15" fill="rgb(213,129,42)" fg:x="1033" fg:w="1"/><text x="82.1042%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.8542%" y="453" width="0.0792%" height="15" fill="rgb(225,95,41)" fg:x="1033" fg:w="1"/><text x="82.1042%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.8542%" y="437" width="0.0792%" height="15" fill="rgb(215,134,24)" fg:x="1033" fg:w="1"/><text x="82.1042%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="81.9334%" y="485" width="0.1585%" height="15" fill="rgb(235,23,54)" fg:x="1034" fg:w="2"/><text x="82.1834%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.0919%" y="469" width="0.0792%" height="15" fill="rgb(229,96,31)" fg:x="1036" fg:w="1"/><text x="82.3419%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.9334%" y="517" width="0.3962%" height="15" fill="rgb(206,111,12)" fg:x="1034" fg:w="5"/><text x="82.1834%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="81.9334%" y="501" width="0.3962%" height="15" fill="rgb(222,177,8)" fg:x="1034" fg:w="5"/><text x="82.1834%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.0919%" y="485" width="0.2377%" height="15" fill="rgb(251,36,52)" fg:x="1036" fg:w="3"/><text x="82.3419%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.1712%" y="469" width="0.1585%" height="15" fill="rgb(216,182,29)" fg:x="1037" fg:w="2"/><text x="82.4212%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="82.1712%" y="453" width="0.1585%" height="15" fill="rgb(241,145,50)" fg:x="1037" fg:w="2"/><text x="82.4212%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.2504%" y="437" width="0.0792%" height="15" fill="rgb(231,71,35)" fg:x="1038" fg:w="1"/><text x="82.5004%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="82.3296%" y="501" width="0.0792%" height="15" fill="rgb(218,22,17)" fg:x="1039" fg:w="1"/><text x="82.5796%" y="511.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="82.3296%" y="485" width="0.0792%" height="15" fill="rgb(225,227,6)" fg:x="1039" fg:w="1"/><text x="82.5796%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="82.4089%" y="485" width="0.0792%" height="15" fill="rgb(224,204,17)" fg:x="1040" fg:w="1"/><text x="82.6589%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5674%" y="421" width="0.0792%" height="15" fill="rgb(227,61,28)" fg:x="1042" fg:w="1"/><text x="82.8174%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5674%" y="405" width="0.0792%" height="15" fill="rgb(242,148,23)" fg:x="1042" fg:w="1"/><text x="82.8174%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5674%" y="389" width="0.0792%" height="15" fill="rgb(237,105,33)" fg:x="1042" fg:w="1"/><text x="82.8174%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.8051%" y="405" width="0.0792%" height="15" fill="rgb(238,218,40)" fg:x="1045" fg:w="1"/><text x="83.0551%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8843%" y="389" width="0.0792%" height="15" fill="rgb(209,126,11)" fg:x="1046" fg:w="1"/><text x="83.1343%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8843%" y="373" width="0.0792%" height="15" fill="rgb(245,90,11)" fg:x="1046" fg:w="1"/><text x="83.1343%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8843%" y="357" width="0.0792%" height="15" fill="rgb(211,195,10)" fg:x="1046" fg:w="1"/><text x="83.1343%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="82.9635%" y="341" width="0.2377%" height="15" fill="rgb(231,45,45)" fg:x="1047" fg:w="3"/><text x="83.2135%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="83.0428%" y="325" width="0.1585%" height="15" fill="rgb(246,100,43)" fg:x="1048" fg:w="2"/><text x="83.2928%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.0428%" y="309" width="0.1585%" height="15" fill="rgb(241,193,8)" fg:x="1048" fg:w="2"/><text x="83.2928%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1220%" y="293" width="0.0792%" height="15" fill="rgb(208,76,19)" fg:x="1049" fg:w="1"/><text x="83.3720%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1220%" y="277" width="0.0792%" height="15" fill="rgb(223,69,40)" fg:x="1049" fg:w="1"/><text x="83.3720%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1220%" y="261" width="0.0792%" height="15" fill="rgb(207,120,39)" fg:x="1049" fg:w="1"/><text x="83.3720%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="82.9635%" y="373" width="0.3170%" height="15" fill="rgb(212,209,28)" fg:x="1047" fg:w="4"/><text x="83.2135%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="82.9635%" y="357" width="0.3170%" height="15" fill="rgb(246,82,29)" fg:x="1047" fg:w="4"/><text x="83.2135%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2013%" y="341" width="0.0792%" height="15" fill="rgb(239,6,40)" fg:x="1050" fg:w="1"/><text x="83.4513%" y="351.50"></text></g><g><title>engine::session::Session::flush (42 samples, 3.33%)</title><rect x="80.1109%" y="597" width="3.3281%" height="15" fill="rgb(228,181,35)" fg:x="1011" fg:w="42"/><text x="80.3609%" y="607.50">eng..</text></g><g><title>engine::session::state::State::close (42 samples, 3.33%)</title><rect x="80.1109%" y="581" width="3.3281%" height="15" fill="rgb(238,151,2)" fg:x="1011" fg:w="42"/><text x="80.3609%" y="591.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (42 samples, 3.33%)</title><rect x="80.1109%" y="565" width="3.3281%" height="15" fill="rgb(236,94,18)" fg:x="1011" fg:w="42"/><text x="80.3609%" y="575.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (40 samples, 3.17%)</title><rect x="80.2694%" y="549" width="3.1696%" height="15" fill="rgb(208,38,14)" fg:x="1013" fg:w="40"/><text x="80.5194%" y="559.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (40 samples, 3.17%)</title><rect x="80.2694%" y="533" width="3.1696%" height="15" fill="rgb(234,215,27)" fg:x="1013" fg:w="40"/><text x="80.5194%" y="543.50">eng..</text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.11%)</title><rect x="82.3296%" y="517" width="1.1094%" height="15" fill="rgb(254,211,53)" fg:x="1039" fg:w="14"/><text x="82.5796%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.03%)</title><rect x="82.4089%" y="501" width="1.0301%" height="15" fill="rgb(216,175,11)" fg:x="1040" fg:w="13"/><text x="82.6589%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.95%)</title><rect x="82.4881%" y="485" width="0.9509%" height="15" fill="rgb(246,179,26)" fg:x="1041" fg:w="12"/><text x="82.7381%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.95%)</title><rect x="82.4881%" y="469" width="0.9509%" height="15" fill="rgb(249,19,52)" fg:x="1041" fg:w="12"/><text x="82.7381%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.95%)</title><rect x="82.4881%" y="453" width="0.9509%" height="15" fill="rgb(230,42,52)" fg:x="1041" fg:w="12"/><text x="82.7381%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.95%)</title><rect x="82.4881%" y="437" width="0.9509%" height="15" fill="rgb(221,171,0)" fg:x="1041" fg:w="12"/><text x="82.7381%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.79%)</title><rect x="82.6466%" y="421" width="0.7924%" height="15" fill="rgb(222,177,40)" fg:x="1043" fg:w="10"/><text x="82.8966%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="82.8843%" y="405" width="0.5547%" height="15" fill="rgb(247,34,16)" fg:x="1046" fg:w="7"/><text x="83.1343%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="82.9635%" y="389" width="0.4754%" height="15" fill="rgb(213,217,37)" fg:x="1047" fg:w="6"/><text x="83.2135%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.2805%" y="373" width="0.1585%" height="15" fill="rgb(231,189,24)" fg:x="1051" fg:w="2"/><text x="83.5305%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.4390%" y="565" width="0.0792%" height="15" fill="rgb(214,22,9)" fg:x="1053" fg:w="1"/><text x="83.6890%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.4390%" y="549" width="0.0792%" height="15" fill="rgb(212,70,22)" fg:x="1053" fg:w="1"/><text x="83.6890%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.4390%" y="533" width="0.0792%" height="15" fill="rgb(249,64,51)" fg:x="1053" fg:w="1"/><text x="83.6890%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.4390%" y="517" width="0.0792%" height="15" fill="rgb(249,148,20)" fg:x="1053" fg:w="1"/><text x="83.6890%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4390%" y="501" width="0.0792%" height="15" fill="rgb(246,46,48)" fg:x="1053" fg:w="1"/><text x="83.6890%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.5182%" y="565" width="0.0792%" height="15" fill="rgb(217,34,48)" fg:x="1054" fg:w="1"/><text x="83.7682%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="83.5182%" y="549" width="0.0792%" height="15" fill="rgb(222,45,26)" fg:x="1054" fg:w="1"/><text x="83.7682%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.5182%" y="533" width="0.0792%" height="15" fill="rgb(230,201,36)" fg:x="1054" fg:w="1"/><text x="83.7682%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="83.5975%" y="549" width="0.0792%" height="15" fill="rgb(217,30,43)" fg:x="1055" fg:w="1"/><text x="83.8475%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.5975%" y="533" width="0.0792%" height="15" fill="rgb(230,197,40)" fg:x="1055" fg:w="1"/><text x="83.8475%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.5975%" y="517" width="0.0792%" height="15" fill="rgb(239,181,18)" fg:x="1055" fg:w="1"/><text x="83.8475%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.5975%" y="501" width="0.0792%" height="15" fill="rgb(222,60,39)" fg:x="1055" fg:w="1"/><text x="83.8475%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5975%" y="485" width="0.0792%" height="15" fill="rgb(210,60,22)" fg:x="1055" fg:w="1"/><text x="83.8475%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5975%" y="469" width="0.0792%" height="15" fill="rgb(239,213,48)" fg:x="1055" fg:w="1"/><text x="83.8475%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5975%" y="453" width="0.0792%" height="15" fill="rgb(253,214,23)" fg:x="1055" fg:w="1"/><text x="83.8475%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5975%" y="437" width="0.0792%" height="15" fill="rgb(211,98,45)" fg:x="1055" fg:w="1"/><text x="83.8475%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.71%)</title><rect x="83.4390%" y="581" width="0.7132%" height="15" fill="rgb(239,130,44)" fg:x="1053" fg:w="9"/><text x="83.6890%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.55%)</title><rect x="83.5975%" y="565" width="0.5547%" height="15" fill="rgb(222,181,35)" fg:x="1055" fg:w="7"/><text x="83.8475%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="83.6767%" y="549" width="0.4754%" height="15" fill="rgb(219,219,49)" fg:x="1056" fg:w="6"/><text x="83.9267%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="83.6767%" y="533" width="0.4754%" height="15" fill="rgb(227,161,51)" fg:x="1056" fg:w="6"/><text x="83.9267%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="83.6767%" y="517" width="0.4754%" height="15" fill="rgb(239,112,27)" fg:x="1056" fg:w="6"/><text x="83.9267%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="83.6767%" y="501" width="0.4754%" height="15" fill="rgb(248,122,18)" fg:x="1056" fg:w="6"/><text x="83.9267%" y="511.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="83.7559%" y="485" width="0.3962%" height="15" fill="rgb(245,130,23)" fg:x="1057" fg:w="5"/><text x="84.0059%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1521%" y="421" width="0.0792%" height="15" fill="rgb(211,225,28)" fg:x="1062" fg:w="1"/><text x="84.4021%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.1521%" y="405" width="0.0792%" height="15" fill="rgb(242,105,44)" fg:x="1062" fg:w="1"/><text x="84.4021%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.1521%" y="389" width="0.0792%" height="15" fill="rgb(216,183,46)" fg:x="1062" fg:w="1"/><text x="84.4021%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.1521%" y="373" width="0.0792%" height="15" fill="rgb(227,112,9)" fg:x="1062" fg:w="1"/><text x="84.4021%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.1521%" y="357" width="0.0792%" height="15" fill="rgb(244,21,0)" fg:x="1062" fg:w="1"/><text x="84.4021%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.1521%" y="341" width="0.0792%" height="15" fill="rgb(236,185,14)" fg:x="1062" fg:w="1"/><text x="84.4021%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.1521%" y="325" width="0.0792%" height="15" fill="rgb(236,170,30)" fg:x="1062" fg:w="1"/><text x="84.4021%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.1521%" y="309" width="0.0792%" height="15" fill="rgb(209,198,51)" fg:x="1062" fg:w="1"/><text x="84.4021%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.1521%" y="565" width="0.1585%" height="15" fill="rgb(205,171,26)" fg:x="1062" fg:w="2"/><text x="84.4021%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="84.1521%" y="549" width="0.1585%" height="15" fill="rgb(246,41,49)" fg:x="1062" fg:w="2"/><text x="84.4021%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.1521%" y="533" width="0.1585%" height="15" fill="rgb(240,229,12)" fg:x="1062" fg:w="2"/><text x="84.4021%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.1521%" y="517" width="0.1585%" height="15" fill="rgb(212,8,54)" fg:x="1062" fg:w="2"/><text x="84.4021%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.1521%" y="501" width="0.1585%" height="15" fill="rgb(230,114,13)" fg:x="1062" fg:w="2"/><text x="84.4021%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.1521%" y="485" width="0.1585%" height="15" fill="rgb(229,130,28)" fg:x="1062" fg:w="2"/><text x="84.4021%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.1521%" y="469" width="0.1585%" height="15" fill="rgb(206,139,15)" fg:x="1062" fg:w="2"/><text x="84.4021%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.1521%" y="453" width="0.1585%" height="15" fill="rgb(241,188,35)" fg:x="1062" fg:w="2"/><text x="84.4021%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.1521%" y="437" width="0.1585%" height="15" fill="rgb(208,224,26)" fg:x="1062" fg:w="2"/><text x="84.4021%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2314%" y="421" width="0.0792%" height="15" fill="rgb(251,131,28)" fg:x="1063" fg:w="1"/><text x="84.4814%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2314%" y="405" width="0.0792%" height="15" fill="rgb(208,153,1)" fg:x="1063" fg:w="1"/><text x="84.4814%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.2314%" y="389" width="0.0792%" height="15" fill="rgb(234,33,36)" fg:x="1063" fg:w="1"/><text x="84.4814%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.2314%" y="373" width="0.0792%" height="15" fill="rgb(246,42,29)" fg:x="1063" fg:w="1"/><text x="84.4814%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.2314%" y="357" width="0.0792%" height="15" fill="rgb(251,114,16)" fg:x="1063" fg:w="1"/><text x="84.4814%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.2314%" y="341" width="0.0792%" height="15" fill="rgb(233,13,38)" fg:x="1063" fg:w="1"/><text x="84.4814%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.2314%" y="325" width="0.0792%" height="15" fill="rgb(247,120,19)" fg:x="1063" fg:w="1"/><text x="84.4814%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="84.3106%" y="549" width="0.0792%" height="15" fill="rgb(205,11,16)" fg:x="1064" fg:w="1"/><text x="84.5606%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.3106%" y="533" width="0.0792%" height="15" fill="rgb(228,185,19)" fg:x="1064" fg:w="1"/><text x="84.5606%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="84.3899%" y="501" width="0.0792%" height="15" fill="rgb(239,88,52)" fg:x="1065" fg:w="1"/><text x="84.6399%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.3899%" y="517" width="0.1585%" height="15" fill="rgb(219,23,1)" fg:x="1065" fg:w="2"/><text x="84.6399%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.4691%" y="501" width="0.0792%" height="15" fill="rgb(253,177,16)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.4691%" y="485" width="0.0792%" height="15" fill="rgb(225,150,40)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4691%" y="469" width="0.0792%" height="15" fill="rgb(208,108,30)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4691%" y="453" width="0.0792%" height="15" fill="rgb(214,122,4)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4691%" y="437" width="0.0792%" height="15" fill="rgb(229,74,37)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4691%" y="421" width="0.0792%" height="15" fill="rgb(233,61,41)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.4691%" y="405" width="0.0792%" height="15" fill="rgb(238,191,5)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4691%" y="389" width="0.0792%" height="15" fill="rgb(233,78,24)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4691%" y="373" width="0.0792%" height="15" fill="rgb(211,142,8)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4691%" y="357" width="0.0792%" height="15" fill="rgb(253,38,53)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.4691%" y="341" width="0.0792%" height="15" fill="rgb(234,63,51)" fg:x="1066" fg:w="1"/><text x="84.7191%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5483%" y="469" width="0.0792%" height="15" fill="rgb(205,23,31)" fg:x="1067" fg:w="1"/><text x="84.7983%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5483%" y="453" width="0.0792%" height="15" fill="rgb(210,184,50)" fg:x="1067" fg:w="1"/><text x="84.7983%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5483%" y="437" width="0.0792%" height="15" fill="rgb(222,112,26)" fg:x="1067" fg:w="1"/><text x="84.7983%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5483%" y="421" width="0.0792%" height="15" fill="rgb(250,98,18)" fg:x="1067" fg:w="1"/><text x="84.7983%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5483%" y="405" width="0.0792%" height="15" fill="rgb(250,34,12)" fg:x="1067" fg:w="1"/><text x="84.7983%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.6276%" y="437" width="0.0792%" height="15" fill="rgb(236,141,30)" fg:x="1068" fg:w="1"/><text x="84.8776%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.6276%" y="469" width="0.1585%" height="15" fill="rgb(246,134,38)" fg:x="1068" fg:w="2"/><text x="84.8776%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="84.6276%" y="453" width="0.1585%" height="15" fill="rgb(240,114,4)" fg:x="1068" fg:w="2"/><text x="84.8776%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7068%" y="437" width="0.0792%" height="15" fill="rgb(243,113,39)" fg:x="1069" fg:w="1"/><text x="84.9568%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7068%" y="421" width="0.0792%" height="15" fill="rgb(239,215,4)" fg:x="1069" fg:w="1"/><text x="84.9568%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7068%" y="405" width="0.0792%" height="15" fill="rgb(236,229,45)" fg:x="1069" fg:w="1"/><text x="84.9568%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.7068%" y="389" width="0.0792%" height="15" fill="rgb(242,2,6)" fg:x="1069" fg:w="1"/><text x="84.9568%" y="399.50"></text></g><g><title>plugins_core::build::Build::holding (18 samples, 1.43%)</title><rect x="83.4390%" y="597" width="1.4263%" height="15" fill="rgb(239,108,21)" fg:x="1053" fg:w="18"/><text x="83.6890%" y="607.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.71%)</title><rect x="84.1521%" y="581" width="0.7132%" height="15" fill="rgb(215,168,34)" fg:x="1062" fg:w="9"/><text x="84.4021%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.55%)</title><rect x="84.3106%" y="565" width="0.5547%" height="15" fill="rgb(238,31,17)" fg:x="1064" fg:w="7"/><text x="84.5606%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="84.3899%" y="549" width="0.4754%" height="15" fill="rgb(220,133,11)" fg:x="1065" fg:w="6"/><text x="84.6399%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="84.3899%" y="533" width="0.4754%" height="15" fill="rgb(212,158,23)" fg:x="1065" fg:w="6"/><text x="84.6399%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="84.5483%" y="517" width="0.3170%" height="15" fill="rgb(223,172,7)" fg:x="1067" fg:w="4"/><text x="84.7983%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="84.5483%" y="501" width="0.3170%" height="15" fill="rgb(244,3,52)" fg:x="1067" fg:w="4"/><text x="84.7983%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="84.5483%" y="485" width="0.3170%" height="15" fill="rgb(207,69,27)" fg:x="1067" fg:w="4"/><text x="84.7983%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.7861%" y="469" width="0.0792%" height="15" fill="rgb(213,136,45)" fg:x="1070" fg:w="1"/><text x="85.0361%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.7861%" y="453" width="0.0792%" height="15" fill="rgb(218,79,17)" fg:x="1070" fg:w="1"/><text x="85.0361%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.7861%" y="437" width="0.0792%" height="15" fill="rgb(216,106,36)" fg:x="1070" fg:w="1"/><text x="85.0361%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.7861%" y="421" width="0.0792%" height="15" fill="rgb(251,27,45)" fg:x="1070" fg:w="1"/><text x="85.0361%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.7861%" y="405" width="0.0792%" height="15" fill="rgb(232,21,34)" fg:x="1070" fg:w="1"/><text x="85.0361%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.7861%" y="389" width="0.0792%" height="15" fill="rgb(249,191,16)" fg:x="1070" fg:w="1"/><text x="85.0361%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9445%" y="517" width="0.0792%" height="15" fill="rgb(224,88,20)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9445%" y="501" width="0.0792%" height="15" fill="rgb(237,93,27)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9445%" y="485" width="0.0792%" height="15" fill="rgb(226,198,48)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9445%" y="469" width="0.0792%" height="15" fill="rgb(207,162,53)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9445%" y="453" width="0.0792%" height="15" fill="rgb(207,169,9)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9445%" y="437" width="0.0792%" height="15" fill="rgb(224,166,46)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9445%" y="421" width="0.0792%" height="15" fill="rgb(233,26,6)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9445%" y="405" width="0.0792%" height="15" fill="rgb(218,106,45)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9445%" y="389" width="0.0792%" height="15" fill="rgb(240,217,4)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.9445%" y="373" width="0.0792%" height="15" fill="rgb(246,171,10)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.9445%" y="357" width="0.0792%" height="15" fill="rgb(223,197,30)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.9445%" y="341" width="0.0792%" height="15" fill="rgb(207,92,16)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.9445%" y="325" width="0.0792%" height="15" fill="rgb(211,6,44)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9445%" y="309" width="0.0792%" height="15" fill="rgb(219,139,2)" fg:x="1072" fg:w="1"/><text x="85.1945%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0238%" y="517" width="0.0792%" height="15" fill="rgb(224,103,21)" fg:x="1073" fg:w="1"/><text x="85.2738%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="84.8653%" y="565" width="0.3170%" height="15" fill="rgb(254,110,48)" fg:x="1071" fg:w="4"/><text x="85.1153%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="84.9445%" y="549" width="0.2377%" height="15" fill="rgb(212,88,19)" fg:x="1072" fg:w="3"/><text x="85.1945%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="84.9445%" y="533" width="0.2377%" height="15" fill="rgb(248,103,6)" fg:x="1072" fg:w="3"/><text x="85.1945%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1030%" y="517" width="0.0792%" height="15" fill="rgb(214,53,46)" fg:x="1074" fg:w="1"/><text x="85.3530%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1030%" y="501" width="0.0792%" height="15" fill="rgb(236,190,24)" fg:x="1074" fg:w="1"/><text x="85.3530%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1030%" y="485" width="0.0792%" height="15" fill="rgb(254,58,28)" fg:x="1074" fg:w="1"/><text x="85.3530%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1030%" y="469" width="0.0792%" height="15" fill="rgb(243,63,27)" fg:x="1074" fg:w="1"/><text x="85.3530%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.1030%" y="453" width="0.0792%" height="15" fill="rgb(206,81,20)" fg:x="1074" fg:w="1"/><text x="85.3530%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1030%" y="437" width="0.0792%" height="15" fill="rgb(252,69,51)" fg:x="1074" fg:w="1"/><text x="85.3530%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1030%" y="421" width="0.0792%" height="15" fill="rgb(222,213,4)" fg:x="1074" fg:w="1"/><text x="85.3530%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1030%" y="405" width="0.0792%" height="15" fill="rgb(226,198,12)" fg:x="1074" fg:w="1"/><text x="85.3530%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1823%" y="485" width="0.0792%" height="15" fill="rgb(248,115,11)" fg:x="1075" fg:w="1"/><text x="85.4323%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1823%" y="469" width="0.0792%" height="15" fill="rgb(221,148,54)" fg:x="1075" fg:w="1"/><text x="85.4323%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1823%" y="453" width="0.0792%" height="15" fill="rgb(214,209,51)" fg:x="1075" fg:w="1"/><text x="85.4323%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1823%" y="437" width="0.0792%" height="15" fill="rgb(249,116,53)" fg:x="1075" fg:w="1"/><text x="85.4323%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="84.8653%" y="597" width="0.4754%" height="15" fill="rgb(248,170,1)" fg:x="1071" fg:w="6"/><text x="85.1153%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="84.8653%" y="581" width="0.4754%" height="15" fill="rgb(244,105,10)" fg:x="1071" fg:w="6"/><text x="85.1153%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="85.1823%" y="565" width="0.1585%" height="15" fill="rgb(229,100,5)" fg:x="1075" fg:w="2"/><text x="85.4323%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="85.1823%" y="549" width="0.1585%" height="15" fill="rgb(233,221,39)" fg:x="1075" fg:w="2"/><text x="85.4323%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="85.1823%" y="533" width="0.1585%" height="15" fill="rgb(233,88,21)" fg:x="1075" fg:w="2"/><text x="85.4323%" y="543.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="85.1823%" y="517" width="0.1585%" height="15" fill="rgb(206,13,0)" fg:x="1075" fg:w="2"/><text x="85.4323%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.1823%" y="501" width="0.1585%" height="15" fill="rgb(242,15,35)" fg:x="1075" fg:w="2"/><text x="85.4323%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.2615%" y="485" width="0.0792%" height="15" fill="rgb(247,142,41)" fg:x="1076" fg:w="1"/><text x="85.5115%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="85.3407%" y="597" width="0.0792%" height="15" fill="rgb(245,51,29)" fg:x="1077" fg:w="1"/><text x="85.5907%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="85.3407%" y="581" width="0.0792%" height="15" fill="rgb(228,209,43)" fg:x="1077" fg:w="1"/><text x="85.5907%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.3407%" y="565" width="0.0792%" height="15" fill="rgb(233,185,9)" fg:x="1077" fg:w="1"/><text x="85.5907%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.3407%" y="549" width="0.0792%" height="15" fill="rgb(226,93,0)" fg:x="1077" fg:w="1"/><text x="85.5907%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.4992%" y="517" width="0.0792%" height="15" fill="rgb(245,194,43)" fg:x="1079" fg:w="1"/><text x="85.7492%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.4992%" y="501" width="0.0792%" height="15" fill="rgb(211,145,34)" fg:x="1079" fg:w="1"/><text x="85.7492%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.4992%" y="485" width="0.0792%" height="15" fill="rgb(231,228,28)" fg:x="1079" fg:w="1"/><text x="85.7492%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.4992%" y="469" width="0.0792%" height="15" fill="rgb(236,149,4)" fg:x="1079" fg:w="1"/><text x="85.7492%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="85.4200%" y="581" width="0.2377%" height="15" fill="rgb(234,114,38)" fg:x="1078" fg:w="3"/><text x="85.6700%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="85.4200%" y="565" width="0.2377%" height="15" fill="rgb(246,132,51)" fg:x="1078" fg:w="3"/><text x="85.6700%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="85.4200%" y="549" width="0.2377%" height="15" fill="rgb(251,137,22)" fg:x="1078" fg:w="3"/><text x="85.6700%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.4200%" y="533" width="0.2377%" height="15" fill="rgb(243,59,52)" fg:x="1078" fg:w="3"/><text x="85.6700%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5784%" y="517" width="0.0792%" height="15" fill="rgb(239,56,28)" fg:x="1080" fg:w="1"/><text x="85.8284%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5784%" y="501" width="0.0792%" height="15" fill="rgb(218,168,27)" fg:x="1080" fg:w="1"/><text x="85.8284%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="85.6577%" y="581" width="0.0792%" height="15" fill="rgb(232,165,11)" fg:x="1081" fg:w="1"/><text x="85.9077%" y="591.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="85.6577%" y="565" width="0.0792%" height="15" fill="rgb(253,55,41)" fg:x="1081" fg:w="1"/><text x="85.9077%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.6577%" y="549" width="0.0792%" height="15" fill="rgb(233,206,24)" fg:x="1081" fg:w="1"/><text x="85.9077%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.6577%" y="533" width="0.0792%" height="15" fill="rgb(220,199,8)" fg:x="1081" fg:w="1"/><text x="85.9077%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7369%" y="453" width="0.0792%" height="15" fill="rgb(254,65,26)" fg:x="1082" fg:w="1"/><text x="85.9869%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7369%" y="437" width="0.0792%" height="15" fill="rgb(253,102,23)" fg:x="1082" fg:w="1"/><text x="85.9869%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7369%" y="421" width="0.0792%" height="15" fill="rgb(231,103,35)" fg:x="1082" fg:w="1"/><text x="85.9869%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7369%" y="405" width="0.0792%" height="15" fill="rgb(238,26,10)" fg:x="1082" fg:w="1"/><text x="85.9869%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="85.7369%" y="533" width="0.1585%" height="15" fill="rgb(234,191,34)" fg:x="1082" fg:w="2"/><text x="85.9869%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.7369%" y="517" width="0.1585%" height="15" fill="rgb(206,210,9)" fg:x="1082" fg:w="2"/><text x="85.9869%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.7369%" y="501" width="0.1585%" height="15" fill="rgb(219,155,3)" fg:x="1082" fg:w="2"/><text x="85.9869%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.7369%" y="485" width="0.1585%" height="15" fill="rgb(221,62,52)" fg:x="1082" fg:w="2"/><text x="85.9869%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.7369%" y="469" width="0.1585%" height="15" fill="rgb(215,197,36)" fg:x="1082" fg:w="2"/><text x="85.9869%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.8162%" y="453" width="0.0792%" height="15" fill="rgb(226,222,6)" fg:x="1083" fg:w="1"/><text x="86.0662%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.8162%" y="437" width="0.0792%" height="15" fill="rgb(215,58,28)" fg:x="1083" fg:w="1"/><text x="86.0662%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.9746%" y="501" width="0.0792%" height="15" fill="rgb(212,148,2)" fg:x="1085" fg:w="1"/><text x="86.2246%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.9746%" y="485" width="0.0792%" height="15" fill="rgb(208,21,42)" fg:x="1085" fg:w="1"/><text x="86.2246%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.9746%" y="469" width="0.0792%" height="15" fill="rgb(209,107,26)" fg:x="1085" fg:w="1"/><text x="86.2246%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0539%" y="453" width="0.0792%" height="15" fill="rgb(254,60,47)" fg:x="1086" fg:w="1"/><text x="86.3039%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0539%" y="437" width="0.0792%" height="15" fill="rgb(207,226,45)" fg:x="1086" fg:w="1"/><text x="86.3039%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0539%" y="421" width="0.0792%" height="15" fill="rgb(223,124,22)" fg:x="1086" fg:w="1"/><text x="86.3039%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.0539%" y="501" width="0.1585%" height="15" fill="rgb(240,162,13)" fg:x="1086" fg:w="2"/><text x="86.3039%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.0539%" y="485" width="0.1585%" height="15" fill="rgb(244,199,31)" fg:x="1086" fg:w="2"/><text x="86.3039%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.0539%" y="469" width="0.1585%" height="15" fill="rgb(207,92,16)" fg:x="1086" fg:w="2"/><text x="86.3039%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.1331%" y="453" width="0.0792%" height="15" fill="rgb(215,31,19)" fg:x="1087" fg:w="1"/><text x="86.3831%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.1331%" y="437" width="0.0792%" height="15" fill="rgb(245,118,14)" fg:x="1087" fg:w="1"/><text x="86.3831%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.1331%" y="421" width="0.0792%" height="15" fill="rgb(248,12,46)" fg:x="1087" fg:w="1"/><text x="86.3831%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.1331%" y="405" width="0.0792%" height="15" fill="rgb(209,119,0)" fg:x="1087" fg:w="1"/><text x="86.3831%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.1331%" y="389" width="0.0792%" height="15" fill="rgb(254,51,44)" fg:x="1087" fg:w="1"/><text x="86.3831%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.1331%" y="373" width="0.0792%" height="15" fill="rgb(253,182,35)" fg:x="1087" fg:w="1"/><text x="86.3831%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.1331%" y="357" width="0.0792%" height="15" fill="rgb(205,198,39)" fg:x="1087" fg:w="1"/><text x="86.3831%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.1331%" y="341" width="0.0792%" height="15" fill="rgb(251,175,48)" fg:x="1087" fg:w="1"/><text x="86.3831%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2124%" y="389" width="0.0792%" height="15" fill="rgb(239,38,17)" fg:x="1088" fg:w="1"/><text x="86.4624%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.2124%" y="453" width="0.1585%" height="15" fill="rgb(212,101,8)" fg:x="1088" fg:w="2"/><text x="86.4624%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.2124%" y="437" width="0.1585%" height="15" fill="rgb(228,35,17)" fg:x="1088" fg:w="2"/><text x="86.4624%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.2124%" y="421" width="0.1585%" height="15" fill="rgb(214,95,8)" fg:x="1088" fg:w="2"/><text x="86.4624%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.2124%" y="405" width="0.1585%" height="15" fill="rgb(210,176,35)" fg:x="1088" fg:w="2"/><text x="86.4624%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2916%" y="389" width="0.0792%" height="15" fill="rgb(226,4,3)" fg:x="1089" fg:w="1"/><text x="86.5416%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2916%" y="373" width="0.0792%" height="15" fill="rgb(232,133,14)" fg:x="1089" fg:w="1"/><text x="86.5416%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="85.9746%" y="517" width="0.4754%" height="15" fill="rgb(250,191,8)" fg:x="1085" fg:w="6"/><text x="86.2246%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="86.2124%" y="501" width="0.2377%" height="15" fill="rgb(213,12,45)" fg:x="1088" fg:w="3"/><text x="86.4624%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="86.2124%" y="485" width="0.2377%" height="15" fill="rgb(233,78,26)" fg:x="1088" fg:w="3"/><text x="86.4624%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="86.2124%" y="469" width="0.2377%" height="15" fill="rgb(245,222,11)" fg:x="1088" fg:w="3"/><text x="86.4624%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.3708%" y="453" width="0.0792%" height="15" fill="rgb(216,174,12)" fg:x="1090" fg:w="1"/><text x="86.6208%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.3708%" y="437" width="0.0792%" height="15" fill="rgb(213,15,9)" fg:x="1090" fg:w="1"/><text x="86.6208%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3708%" y="421" width="0.0792%" height="15" fill="rgb(238,103,32)" fg:x="1090" fg:w="1"/><text x="86.6208%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3708%" y="405" width="0.0792%" height="15" fill="rgb(245,85,15)" fg:x="1090" fg:w="1"/><text x="86.6208%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.4501%" y="469" width="0.0792%" height="15" fill="rgb(254,204,5)" fg:x="1091" fg:w="1"/><text x="86.7001%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.4501%" y="453" width="0.0792%" height="15" fill="rgb(231,178,15)" fg:x="1091" fg:w="1"/><text x="86.7001%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.4501%" y="437" width="0.0792%" height="15" fill="rgb(248,151,3)" fg:x="1091" fg:w="1"/><text x="86.7001%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.4501%" y="421" width="0.0792%" height="15" fill="rgb(250,139,13)" fg:x="1091" fg:w="1"/><text x="86.7001%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.4501%" y="405" width="0.0792%" height="15" fill="rgb(243,107,53)" fg:x="1091" fg:w="1"/><text x="86.7001%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4501%" y="389" width="0.0792%" height="15" fill="rgb(232,81,15)" fg:x="1091" fg:w="1"/><text x="86.7001%" y="399.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.71%)</title><rect x="85.8954%" y="533" width="0.7132%" height="15" fill="rgb(225,187,48)" fg:x="1084" fg:w="9"/><text x="86.1454%" y="543.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="86.4501%" y="517" width="0.1585%" height="15" fill="rgb(205,116,12)" fg:x="1091" fg:w="2"/><text x="86.7001%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="86.4501%" y="501" width="0.1585%" height="15" fill="rgb(220,222,31)" fg:x="1091" fg:w="2"/><text x="86.7001%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="86.4501%" y="485" width="0.1585%" height="15" fill="rgb(233,187,49)" fg:x="1091" fg:w="2"/><text x="86.7001%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.5293%" y="469" width="0.0792%" height="15" fill="rgb(211,168,53)" fg:x="1092" fg:w="1"/><text x="86.7793%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.5293%" y="453" width="0.0792%" height="15" fill="rgb(206,160,16)" fg:x="1092" fg:w="1"/><text x="86.7793%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.5293%" y="437" width="0.0792%" height="15" fill="rgb(254,164,13)" fg:x="1092" fg:w="1"/><text x="86.7793%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.5293%" y="421" width="0.0792%" height="15" fill="rgb(229,45,30)" fg:x="1092" fg:w="1"/><text x="86.7793%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.5293%" y="405" width="0.0792%" height="15" fill="rgb(237,32,10)" fg:x="1092" fg:w="1"/><text x="86.7793%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.5293%" y="389" width="0.0792%" height="15" fill="rgb(251,20,47)" fg:x="1092" fg:w="1"/><text x="86.7793%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.5293%" y="373" width="0.0792%" height="15" fill="rgb(251,116,12)" fg:x="1092" fg:w="1"/><text x="86.7793%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.5293%" y="357" width="0.0792%" height="15" fill="rgb(214,227,27)" fg:x="1092" fg:w="1"/><text x="86.7793%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.5293%" y="341" width="0.0792%" height="15" fill="rgb(248,10,53)" fg:x="1092" fg:w="1"/><text x="86.7793%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.95%)</title><rect x="85.7369%" y="581" width="0.9509%" height="15" fill="rgb(221,176,25)" fg:x="1082" fg:w="12"/><text x="85.9869%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.95%)</title><rect x="85.7369%" y="565" width="0.9509%" height="15" fill="rgb(205,70,46)" fg:x="1082" fg:w="12"/><text x="85.9869%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (12 samples, 0.95%)</title><rect x="85.7369%" y="549" width="0.9509%" height="15" fill="rgb(217,45,38)" fg:x="1082" fg:w="12"/><text x="85.9869%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="86.6086%" y="533" width="0.0792%" height="15" fill="rgb(243,6,54)" fg:x="1093" fg:w="1"/><text x="86.8586%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="86.6086%" y="517" width="0.0792%" height="15" fill="rgb(242,76,23)" fg:x="1093" fg:w="1"/><text x="86.8586%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.6086%" y="501" width="0.0792%" height="15" fill="rgb(239,166,0)" fg:x="1093" fg:w="1"/><text x="86.8586%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.6086%" y="485" width="0.0792%" height="15" fill="rgb(238,174,32)" fg:x="1093" fg:w="1"/><text x="86.8586%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6086%" y="469" width="0.0792%" height="15" fill="rgb(238,124,44)" fg:x="1093" fg:w="1"/><text x="86.8586%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6086%" y="453" width="0.0792%" height="15" fill="rgb(206,185,9)" fg:x="1093" fg:w="1"/><text x="86.8586%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6086%" y="437" width="0.0792%" height="15" fill="rgb(215,157,17)" fg:x="1093" fg:w="1"/><text x="86.8586%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6086%" y="421" width="0.0792%" height="15" fill="rgb(251,17,29)" fg:x="1093" fg:w="1"/><text x="86.8586%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6086%" y="405" width="0.0792%" height="15" fill="rgb(227,113,27)" fg:x="1093" fg:w="1"/><text x="86.8586%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.6878%" y="517" width="0.0792%" height="15" fill="rgb(217,226,24)" fg:x="1094" fg:w="1"/><text x="86.9378%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="86.6878%" y="501" width="0.0792%" height="15" fill="rgb(251,99,38)" fg:x="1094" fg:w="1"/><text x="86.9378%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="86.6878%" y="485" width="0.0792%" height="15" fill="rgb(231,147,19)" fg:x="1094" fg:w="1"/><text x="86.9378%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="86.7670%" y="469" width="0.2377%" height="15" fill="rgb(230,86,8)" fg:x="1095" fg:w="3"/><text x="87.0170%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.8463%" y="453" width="0.1585%" height="15" fill="rgb(237,159,39)" fg:x="1096" fg:w="2"/><text x="87.0963%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1632%" y="405" width="0.0792%" height="15" fill="rgb(247,179,47)" fg:x="1100" fg:w="1"/><text x="87.4132%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.1632%" y="389" width="0.0792%" height="15" fill="rgb(253,152,26)" fg:x="1100" fg:w="1"/><text x="87.4132%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.1632%" y="373" width="0.0792%" height="15" fill="rgb(222,211,15)" fg:x="1100" fg:w="1"/><text x="87.4132%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="87.1632%" y="437" width="0.1585%" height="15" fill="rgb(236,193,6)" fg:x="1100" fg:w="2"/><text x="87.4132%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="87.1632%" y="421" width="0.1585%" height="15" fill="rgb(226,206,10)" fg:x="1100" fg:w="2"/><text x="87.4132%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.2425%" y="405" width="0.0792%" height="15" fill="rgb(213,125,22)" fg:x="1101" fg:w="1"/><text x="87.4925%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.2425%" y="389" width="0.0792%" height="15" fill="rgb(221,66,28)" fg:x="1101" fg:w="1"/><text x="87.4925%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="87.2425%" y="373" width="0.0792%" height="15" fill="rgb(222,84,53)" fg:x="1101" fg:w="1"/><text x="87.4925%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.3217%" y="437" width="0.0792%" height="15" fill="rgb(243,50,15)" fg:x="1102" fg:w="1"/><text x="87.5717%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.3217%" y="421" width="0.0792%" height="15" fill="rgb(208,184,23)" fg:x="1102" fg:w="1"/><text x="87.5717%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.3217%" y="405" width="0.0792%" height="15" fill="rgb(221,83,2)" fg:x="1102" fg:w="1"/><text x="87.5717%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.3217%" y="389" width="0.0792%" height="15" fill="rgb(236,53,24)" fg:x="1102" fg:w="1"/><text x="87.5717%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.4010%" y="405" width="0.1585%" height="15" fill="rgb(244,171,29)" fg:x="1103" fg:w="2"/><text x="87.6510%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.4802%" y="389" width="0.0792%" height="15" fill="rgb(205,19,11)" fg:x="1104" fg:w="1"/><text x="87.7302%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.4802%" y="373" width="0.0792%" height="15" fill="rgb(207,108,29)" fg:x="1104" fg:w="1"/><text x="87.7302%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="87.4802%" y="357" width="0.0792%" height="15" fill="rgb(236,215,43)" fg:x="1104" fg:w="1"/><text x="87.7302%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="87.4010%" y="437" width="0.3962%" height="15" fill="rgb(213,58,35)" fg:x="1103" fg:w="5"/><text x="87.6510%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="87.4010%" y="421" width="0.3962%" height="15" fill="rgb(220,211,46)" fg:x="1103" fg:w="5"/><text x="87.6510%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="87.5594%" y="405" width="0.2377%" height="15" fill="rgb(212,134,16)" fg:x="1105" fg:w="3"/><text x="87.8094%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.7179%" y="389" width="0.0792%" height="15" fill="rgb(232,90,44)" fg:x="1107" fg:w="1"/><text x="87.9679%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.87%)</title><rect x="87.0048%" y="453" width="0.8716%" height="15" fill="rgb(212,18,36)" fg:x="1098" fg:w="11"/><text x="87.2548%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.7971%" y="437" width="0.0792%" height="15" fill="rgb(206,112,24)" fg:x="1108" fg:w="1"/><text x="88.0471%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.43%)</title><rect x="86.7670%" y="485" width="1.4263%" height="15" fill="rgb(238,223,40)" fg:x="1095" fg:w="18"/><text x="87.0170%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="87.0048%" y="469" width="1.1886%" height="15" fill="rgb(226,169,20)" fg:x="1098" fg:w="15"/><text x="87.2548%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="87.8764%" y="453" width="0.3170%" height="15" fill="rgb(241,64,52)" fg:x="1109" fg:w="4"/><text x="88.1264%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="88.0349%" y="437" width="0.1585%" height="15" fill="rgb(228,120,25)" fg:x="1111" fg:w="2"/><text x="88.2849%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="88.0349%" y="421" width="0.1585%" height="15" fill="rgb(234,108,19)" fg:x="1111" fg:w="2"/><text x="88.2849%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.1141%" y="405" width="0.0792%" height="15" fill="rgb(236,133,29)" fg:x="1112" fg:w="1"/><text x="88.3641%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.1141%" y="389" width="0.0792%" height="15" fill="rgb(246,174,53)" fg:x="1112" fg:w="1"/><text x="88.3641%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.1141%" y="373" width="0.0792%" height="15" fill="rgb(210,105,35)" fg:x="1112" fg:w="1"/><text x="88.3641%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.1933%" y="437" width="0.0792%" height="15" fill="rgb(225,27,26)" fg:x="1113" fg:w="1"/><text x="88.4433%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.2726%" y="421" width="0.0792%" height="15" fill="rgb(233,2,39)" fg:x="1114" fg:w="1"/><text x="88.5226%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.2726%" y="405" width="0.0792%" height="15" fill="rgb(219,164,26)" fg:x="1114" fg:w="1"/><text x="88.5226%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.1933%" y="485" width="0.2377%" height="15" fill="rgb(236,211,5)" fg:x="1113" fg:w="3"/><text x="88.4433%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="88.1933%" y="469" width="0.2377%" height="15" fill="rgb(244,227,23)" fg:x="1113" fg:w="3"/><text x="88.4433%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.1933%" y="453" width="0.2377%" height="15" fill="rgb(230,184,8)" fg:x="1113" fg:w="3"/><text x="88.4433%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.2726%" y="437" width="0.1585%" height="15" fill="rgb(217,125,48)" fg:x="1114" fg:w="2"/><text x="88.5226%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.3518%" y="421" width="0.0792%" height="15" fill="rgb(223,192,47)" fg:x="1115" fg:w="1"/><text x="88.6018%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.3518%" y="405" width="0.0792%" height="15" fill="rgb(226,119,10)" fg:x="1115" fg:w="1"/><text x="88.6018%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.3518%" y="389" width="0.0792%" height="15" fill="rgb(221,49,29)" fg:x="1115" fg:w="1"/><text x="88.6018%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.6688%" y="389" width="0.1585%" height="15" fill="rgb(217,205,19)" fg:x="1119" fg:w="2"/><text x="88.9188%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.7480%" y="373" width="0.0792%" height="15" fill="rgb(242,104,7)" fg:x="1120" fg:w="1"/><text x="88.9980%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7480%" y="357" width="0.0792%" height="15" fill="rgb(209,154,48)" fg:x="1120" fg:w="1"/><text x="88.9980%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.9065%" y="373" width="0.1585%" height="15" fill="rgb(219,213,46)" fg:x="1122" fg:w="2"/><text x="89.1565%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.9065%" y="357" width="0.1585%" height="15" fill="rgb(229,105,38)" fg:x="1122" fg:w="2"/><text x="89.1565%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.9857%" y="341" width="0.0792%" height="15" fill="rgb(205,151,5)" fg:x="1123" fg:w="1"/><text x="89.2357%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.9857%" y="325" width="0.0792%" height="15" fill="rgb(248,115,40)" fg:x="1123" fg:w="1"/><text x="89.2357%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.9857%" y="309" width="0.0792%" height="15" fill="rgb(206,179,2)" fg:x="1123" fg:w="1"/><text x="89.2357%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9857%" y="293" width="0.0792%" height="15" fill="rgb(230,103,24)" fg:x="1123" fg:w="1"/><text x="89.2357%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9857%" y="277" width="0.0792%" height="15" fill="rgb(218,152,4)" fg:x="1123" fg:w="1"/><text x="89.2357%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.9857%" y="261" width="0.0792%" height="15" fill="rgb(236,161,54)" fg:x="1123" fg:w="1"/><text x="89.2357%" y="271.50"></text></g><g><title>engine::session::Session::flush (31 samples, 2.46%)</title><rect x="86.6878%" y="581" width="2.4564%" height="15" fill="rgb(226,65,17)" fg:x="1094" fg:w="31"/><text x="86.9378%" y="591.50">en..</text></g><g><title>engine::session::Session::save_changes (31 samples, 2.46%)</title><rect x="86.6878%" y="565" width="2.4564%" height="15" fill="rgb(221,134,44)" fg:x="1094" fg:w="31"/><text x="86.9378%" y="575.50">en..</text></g><g><title>engine::session::state::State::close (31 samples, 2.46%)</title><rect x="86.6878%" y="549" width="2.4564%" height="15" fill="rgb(251,129,4)" fg:x="1094" fg:w="31"/><text x="86.9378%" y="559.50">en..</text></g><g><title>engine::session::state::State::flush_entities (31 samples, 2.46%)</title><rect x="86.6878%" y="533" width="2.4564%" height="15" fill="rgb(244,32,34)" fg:x="1094" fg:w="31"/><text x="86.9378%" y="543.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (30 samples, 2.38%)</title><rect x="86.7670%" y="517" width="2.3772%" height="15" fill="rgb(251,224,37)" fg:x="1095" fg:w="30"/><text x="87.0170%" y="527.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (30 samples, 2.38%)</title><rect x="86.7670%" y="501" width="2.3772%" height="15" fill="rgb(248,117,31)" fg:x="1095" fg:w="30"/><text x="87.0170%" y="511.50">en..</text></g><g><title>kernel::model::any_entity_changes (9 samples, 0.71%)</title><rect x="88.4311%" y="485" width="0.7132%" height="15" fill="rgb(222,208,37)" fg:x="1116" fg:w="9"/><text x="88.6811%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.63%)</title><rect x="88.5103%" y="469" width="0.6339%" height="15" fill="rgb(234,211,25)" fg:x="1117" fg:w="8"/><text x="88.7603%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.63%)</title><rect x="88.5103%" y="453" width="0.6339%" height="15" fill="rgb(211,72,6)" fg:x="1117" fg:w="8"/><text x="88.7603%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.55%)</title><rect x="88.5895%" y="437" width="0.5547%" height="15" fill="rgb(249,198,38)" fg:x="1118" fg:w="7"/><text x="88.8395%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="88.6688%" y="421" width="0.4754%" height="15" fill="rgb(221,86,51)" fg:x="1119" fg:w="6"/><text x="88.9188%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="88.6688%" y="405" width="0.4754%" height="15" fill="rgb(226,178,43)" fg:x="1119" fg:w="6"/><text x="88.9188%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="88.8273%" y="389" width="0.3170%" height="15" fill="rgb(215,145,7)" fg:x="1121" fg:w="4"/><text x="89.0773%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0650%" y="373" width="0.0792%" height="15" fill="rgb(250,202,36)" fg:x="1124" fg:w="1"/><text x="89.3150%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.2235%" y="549" width="0.0792%" height="15" fill="rgb(215,86,13)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.2235%" y="533" width="0.0792%" height="15" fill="rgb(221,134,12)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.2235%" y="517" width="0.0792%" height="15" fill="rgb(213,82,10)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2235%" y="501" width="0.0792%" height="15" fill="rgb(214,142,0)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2235%" y="485" width="0.0792%" height="15" fill="rgb(205,145,9)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2235%" y="469" width="0.0792%" height="15" fill="rgb(244,214,8)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2235%" y="453" width="0.0792%" height="15" fill="rgb(224,72,51)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.2235%" y="437" width="0.0792%" height="15" fill="rgb(233,137,37)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2235%" y="421" width="0.0792%" height="15" fill="rgb(208,71,28)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2235%" y="405" width="0.0792%" height="15" fill="rgb(226,31,7)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2235%" y="389" width="0.0792%" height="15" fill="rgb(229,62,18)" fg:x="1126" fg:w="1"/><text x="89.4735%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.3819%" y="501" width="0.0792%" height="15" fill="rgb(226,74,28)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.3819%" y="485" width="0.0792%" height="15" fill="rgb(214,170,18)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.3819%" y="469" width="0.0792%" height="15" fill="rgb(227,229,35)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3819%" y="453" width="0.0792%" height="15" fill="rgb(225,181,39)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.3819%" y="437" width="0.0792%" height="15" fill="rgb(253,124,44)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3819%" y="421" width="0.0792%" height="15" fill="rgb(220,75,18)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.3819%" y="405" width="0.0792%" height="15" fill="rgb(239,175,43)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3819%" y="389" width="0.0792%" height="15" fill="rgb(228,112,50)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.3819%" y="373" width="0.0792%" height="15" fill="rgb(232,105,36)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3819%" y="357" width="0.0792%" height="15" fill="rgb(227,137,47)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.3819%" y="341" width="0.0792%" height="15" fill="rgb(217,51,9)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.3819%" y="325" width="0.0792%" height="15" fill="rgb(245,117,0)" fg:x="1128" fg:w="1"/><text x="89.6319%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4612%" y="469" width="0.0792%" height="15" fill="rgb(252,52,30)" fg:x="1129" fg:w="1"/><text x="89.7112%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.4612%" y="453" width="0.0792%" height="15" fill="rgb(227,85,33)" fg:x="1129" fg:w="1"/><text x="89.7112%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4612%" y="437" width="0.0792%" height="15" fill="rgb(220,157,20)" fg:x="1129" fg:w="1"/><text x="89.7112%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4612%" y="421" width="0.0792%" height="15" fill="rgb(254,14,34)" fg:x="1129" fg:w="1"/><text x="89.7112%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4612%" y="405" width="0.0792%" height="15" fill="rgb(216,103,41)" fg:x="1129" fg:w="1"/><text x="89.7112%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4612%" y="389" width="0.0792%" height="15" fill="rgb(245,221,9)" fg:x="1129" fg:w="1"/><text x="89.7112%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="89.2235%" y="565" width="0.3962%" height="15" fill="rgb(254,136,47)" fg:x="1126" fg:w="5"/><text x="89.4735%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="89.3027%" y="549" width="0.3170%" height="15" fill="rgb(235,71,46)" fg:x="1127" fg:w="4"/><text x="89.5527%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="89.3027%" y="533" width="0.3170%" height="15" fill="rgb(242,154,29)" fg:x="1127" fg:w="4"/><text x="89.5527%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="89.3027%" y="517" width="0.3170%" height="15" fill="rgb(210,65,31)" fg:x="1127" fg:w="4"/><text x="89.5527%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="89.4612%" y="501" width="0.1585%" height="15" fill="rgb(244,9,50)" fg:x="1129" fg:w="2"/><text x="89.7112%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="89.4612%" y="485" width="0.1585%" height="15" fill="rgb(215,141,38)" fg:x="1129" fg:w="2"/><text x="89.7112%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.5404%" y="469" width="0.0792%" height="15" fill="rgb(241,129,6)" fg:x="1130" fg:w="1"/><text x="89.7904%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.5404%" y="453" width="0.0792%" height="15" fill="rgb(253,169,4)" fg:x="1130" fg:w="1"/><text x="89.7904%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="89.5404%" y="437" width="0.0792%" height="15" fill="rgb(237,82,36)" fg:x="1130" fg:w="1"/><text x="89.7904%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="89.6197%" y="549" width="0.0792%" height="15" fill="rgb(209,171,11)" fg:x="1131" fg:w="1"/><text x="89.8697%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.6197%" y="533" width="0.0792%" height="15" fill="rgb(242,19,22)" fg:x="1131" fg:w="1"/><text x="89.8697%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6197%" y="517" width="0.0792%" height="15" fill="rgb(251,122,24)" fg:x="1131" fg:w="1"/><text x="89.8697%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.6989%" y="469" width="0.1585%" height="15" fill="rgb(226,166,42)" fg:x="1132" fg:w="2"/><text x="89.9489%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7781%" y="453" width="0.0792%" height="15" fill="rgb(244,101,48)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7781%" y="437" width="0.0792%" height="15" fill="rgb(227,125,1)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7781%" y="421" width="0.0792%" height="15" fill="rgb(206,79,43)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7781%" y="405" width="0.0792%" height="15" fill="rgb(241,109,41)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.7781%" y="389" width="0.0792%" height="15" fill="rgb(219,73,4)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.7781%" y="373" width="0.0792%" height="15" fill="rgb(239,25,41)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.7781%" y="357" width="0.0792%" height="15" fill="rgb(208,88,46)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.7781%" y="341" width="0.0792%" height="15" fill="rgb(239,184,9)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.7781%" y="325" width="0.0792%" height="15" fill="rgb(223,114,13)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.7781%" y="309" width="0.0792%" height="15" fill="rgb(214,28,42)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.7781%" y="293" width="0.0792%" height="15" fill="rgb(252,32,44)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.7781%" y="277" width="0.0792%" height="15" fill="rgb(231,159,4)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.7781%" y="261" width="0.0792%" height="15" fill="rgb(210,35,26)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.7781%" y="245" width="0.0792%" height="15" fill="rgb(208,190,37)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.7781%" y="229" width="0.0792%" height="15" fill="rgb(226,148,22)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7781%" y="213" width="0.0792%" height="15" fill="rgb(242,153,24)" fg:x="1133" fg:w="1"/><text x="90.0281%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8574%" y="469" width="0.0792%" height="15" fill="rgb(213,133,7)" fg:x="1134" fg:w="1"/><text x="90.1074%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.8574%" y="453" width="0.0792%" height="15" fill="rgb(248,206,18)" fg:x="1134" fg:w="1"/><text x="90.1074%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8574%" y="437" width="0.0792%" height="15" fill="rgb(233,157,4)" fg:x="1134" fg:w="1"/><text x="90.1074%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8574%" y="421" width="0.0792%" height="15" fill="rgb(249,179,32)" fg:x="1134" fg:w="1"/><text x="90.1074%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.8574%" y="405" width="0.0792%" height="15" fill="rgb(248,69,35)" fg:x="1134" fg:w="1"/><text x="90.1074%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.0158%" y="341" width="0.0792%" height="15" fill="rgb(249,158,38)" fg:x="1136" fg:w="1"/><text x="90.2658%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0951%" y="309" width="0.0792%" height="15" fill="rgb(223,18,43)" fg:x="1137" fg:w="1"/><text x="90.3451%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.55%)</title><rect x="89.6989%" y="517" width="0.5547%" height="15" fill="rgb(238,42,45)" fg:x="1132" fg:w="7"/><text x="89.9489%" y="527.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.55%)</title><rect x="89.6989%" y="501" width="0.5547%" height="15" fill="rgb(219,65,47)" fg:x="1132" fg:w="7"/><text x="89.9489%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.55%)</title><rect x="89.6989%" y="485" width="0.5547%" height="15" fill="rgb(248,153,12)" fg:x="1132" fg:w="7"/><text x="89.9489%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="89.9366%" y="469" width="0.3170%" height="15" fill="rgb(240,118,4)" fg:x="1135" fg:w="4"/><text x="90.1866%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="89.9366%" y="453" width="0.3170%" height="15" fill="rgb(250,96,34)" fg:x="1135" fg:w="4"/><text x="90.1866%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="89.9366%" y="437" width="0.3170%" height="15" fill="rgb(221,15,4)" fg:x="1135" fg:w="4"/><text x="90.1866%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="89.9366%" y="421" width="0.3170%" height="15" fill="rgb(217,149,33)" fg:x="1135" fg:w="4"/><text x="90.1866%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="89.9366%" y="405" width="0.3170%" height="15" fill="rgb(213,58,29)" fg:x="1135" fg:w="4"/><text x="90.1866%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="89.9366%" y="389" width="0.3170%" height="15" fill="rgb(236,218,9)" fg:x="1135" fg:w="4"/><text x="90.1866%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="89.9366%" y="373" width="0.3170%" height="15" fill="rgb(248,40,19)" fg:x="1135" fg:w="4"/><text x="90.1866%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="89.9366%" y="357" width="0.3170%" height="15" fill="rgb(212,17,6)" fg:x="1135" fg:w="4"/><text x="90.1866%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.0951%" y="341" width="0.1585%" height="15" fill="rgb(206,212,20)" fg:x="1137" fg:w="2"/><text x="90.3451%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.0951%" y="325" width="0.1585%" height="15" fill="rgb(229,80,37)" fg:x="1137" fg:w="2"/><text x="90.3451%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="90.1743%" y="309" width="0.0792%" height="15" fill="rgb(253,8,37)" fg:x="1138" fg:w="1"/><text x="90.4243%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="90.1743%" y="293" width="0.0792%" height="15" fill="rgb(215,16,43)" fg:x="1138" fg:w="1"/><text x="90.4243%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.63%)</title><rect x="89.6989%" y="549" width="0.6339%" height="15" fill="rgb(236,219,16)" fg:x="1132" fg:w="8"/><text x="89.9489%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.63%)</title><rect x="89.6989%" y="533" width="0.6339%" height="15" fill="rgb(251,0,3)" fg:x="1132" fg:w="8"/><text x="89.9489%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="90.2536%" y="517" width="0.0792%" height="15" fill="rgb(207,133,37)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.2536%" y="501" width="0.0792%" height="15" fill="rgb(250,143,20)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.2536%" y="485" width="0.0792%" height="15" fill="rgb(242,19,50)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.2536%" y="469" width="0.0792%" height="15" fill="rgb(206,124,43)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2536%" y="453" width="0.0792%" height="15" fill="rgb(229,4,38)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.2536%" y="437" width="0.0792%" height="15" fill="rgb(247,220,45)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2536%" y="421" width="0.0792%" height="15" fill="rgb(247,195,0)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.2536%" y="405" width="0.0792%" height="15" fill="rgb(252,12,19)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2536%" y="389" width="0.0792%" height="15" fill="rgb(222,49,50)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2536%" y="373" width="0.0792%" height="15" fill="rgb(209,157,28)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.2536%" y="357" width="0.0792%" height="15" fill="rgb(238,174,24)" fg:x="1139" fg:w="1"/><text x="90.5036%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3328%" y="501" width="0.0792%" height="15" fill="rgb(224,17,28)" fg:x="1140" fg:w="1"/><text x="90.5828%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="90.3328%" y="549" width="0.1585%" height="15" fill="rgb(249,7,29)" fg:x="1140" fg:w="2"/><text x="90.5828%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="90.3328%" y="533" width="0.1585%" height="15" fill="rgb(243,178,4)" fg:x="1140" fg:w="2"/><text x="90.5828%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="90.3328%" y="517" width="0.1585%" height="15" fill="rgb(246,138,35)" fg:x="1140" fg:w="2"/><text x="90.5828%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="90.4120%" y="501" width="0.0792%" height="15" fill="rgb(251,85,18)" fg:x="1141" fg:w="1"/><text x="90.6620%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="90.4913%" y="533" width="0.0792%" height="15" fill="rgb(254,55,9)" fg:x="1142" fg:w="1"/><text x="90.7413%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.4913%" y="517" width="0.0792%" height="15" fill="rgb(248,4,50)" fg:x="1142" fg:w="1"/><text x="90.7413%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.5705%" y="501" width="0.0792%" height="15" fill="rgb(215,208,14)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.5705%" y="485" width="0.0792%" height="15" fill="rgb(218,37,18)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.5705%" y="469" width="0.0792%" height="15" fill="rgb(206,104,13)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5705%" y="453" width="0.0792%" height="15" fill="rgb(248,94,22)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5705%" y="437" width="0.0792%" height="15" fill="rgb(235,42,46)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5705%" y="421" width="0.0792%" height="15" fill="rgb(220,228,48)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5705%" y="405" width="0.0792%" height="15" fill="rgb(216,58,12)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5705%" y="389" width="0.0792%" height="15" fill="rgb(223,97,52)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5705%" y="373" width="0.0792%" height="15" fill="rgb(208,159,17)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5705%" y="357" width="0.0792%" height="15" fill="rgb(215,172,9)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.5705%" y="341" width="0.0792%" height="15" fill="rgb(252,175,30)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.5705%" y="325" width="0.0792%" height="15" fill="rgb(209,159,10)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.5705%" y="309" width="0.0792%" height="15" fill="rgb(229,73,51)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.5705%" y="293" width="0.0792%" height="15" fill="rgb(208,212,43)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.5705%" y="277" width="0.0792%" height="15" fill="rgb(254,123,53)" fg:x="1143" fg:w="1"/><text x="90.8205%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="90.6498%" y="485" width="0.0792%" height="15" fill="rgb(254,128,49)" fg:x="1144" fg:w="1"/><text x="90.8998%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7290%" y="453" width="0.0792%" height="15" fill="rgb(246,16,16)" fg:x="1145" fg:w="1"/><text x="90.9790%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7290%" y="437" width="0.0792%" height="15" fill="rgb(209,200,1)" fg:x="1145" fg:w="1"/><text x="90.9790%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7290%" y="421" width="0.0792%" height="15" fill="rgb(235,9,3)" fg:x="1145" fg:w="1"/><text x="90.9790%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7290%" y="405" width="0.0792%" height="15" fill="rgb(233,121,54)" fg:x="1145" fg:w="1"/><text x="90.9790%" y="415.50"></text></g><g><title>plugins_core::build::Build::holding (22 samples, 1.74%)</title><rect x="89.1442%" y="581" width="1.7433%" height="15" fill="rgb(236,80,25)" fg:x="1125" fg:w="22"/><text x="89.3942%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (16 samples, 1.27%)</title><rect x="89.6197%" y="565" width="1.2678%" height="15" fill="rgb(220,44,24)" fg:x="1131" fg:w="16"/><text x="89.8697%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="90.4913%" y="549" width="0.3962%" height="15" fill="rgb(236,225,16)" fg:x="1142" fg:w="5"/><text x="90.7413%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="90.5705%" y="533" width="0.3170%" height="15" fill="rgb(237,140,0)" fg:x="1143" fg:w="4"/><text x="90.8205%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="90.5705%" y="517" width="0.3170%" height="15" fill="rgb(243,225,53)" fg:x="1143" fg:w="4"/><text x="90.8205%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="90.6498%" y="501" width="0.2377%" height="15" fill="rgb(240,140,30)" fg:x="1144" fg:w="3"/><text x="90.8998%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="90.7290%" y="485" width="0.1585%" height="15" fill="rgb(217,51,16)" fg:x="1145" fg:w="2"/><text x="90.9790%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.7290%" y="469" width="0.1585%" height="15" fill="rgb(245,75,50)" fg:x="1145" fg:w="2"/><text x="90.9790%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.8082%" y="453" width="0.0792%" height="15" fill="rgb(208,174,22)" fg:x="1146" fg:w="1"/><text x="91.0582%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="90.8875%" y="581" width="0.0792%" height="15" fill="rgb(219,98,50)" fg:x="1147" fg:w="1"/><text x="91.1375%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="90.8875%" y="565" width="0.0792%" height="15" fill="rgb(243,138,3)" fg:x="1147" fg:w="1"/><text x="91.1375%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.8875%" y="549" width="0.0792%" height="15" fill="rgb(243,132,26)" fg:x="1147" fg:w="1"/><text x="91.1375%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.8875%" y="533" width="0.0792%" height="15" fill="rgb(250,201,8)" fg:x="1147" fg:w="1"/><text x="91.1375%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.8875%" y="517" width="0.0792%" height="15" fill="rgb(213,91,26)" fg:x="1147" fg:w="1"/><text x="91.1375%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.8875%" y="501" width="0.0792%" height="15" fill="rgb(229,117,1)" fg:x="1147" fg:w="1"/><text x="91.1375%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.8875%" y="485" width="0.0792%" height="15" fill="rgb(229,24,6)" fg:x="1147" fg:w="1"/><text x="91.1375%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="90.9667%" y="581" width="0.0792%" height="15" fill="rgb(206,69,11)" fg:x="1148" fg:w="1"/><text x="91.2167%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.0460%" y="549" width="0.0792%" height="15" fill="rgb(234,111,34)" fg:x="1149" fg:w="1"/><text x="91.2960%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.0460%" y="533" width="0.0792%" height="15" fill="rgb(213,187,51)" fg:x="1149" fg:w="1"/><text x="91.2960%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.0460%" y="517" width="0.0792%" height="15" fill="rgb(207,45,11)" fg:x="1149" fg:w="1"/><text x="91.2960%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0460%" y="501" width="0.0792%" height="15" fill="rgb(225,151,47)" fg:x="1149" fg:w="1"/><text x="91.2960%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0460%" y="485" width="0.0792%" height="15" fill="rgb(211,226,5)" fg:x="1149" fg:w="1"/><text x="91.2960%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="91.1252%" y="549" width="0.0792%" height="15" fill="rgb(214,83,52)" fg:x="1150" fg:w="1"/><text x="91.3752%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.1252%" y="533" width="0.0792%" height="15" fill="rgb(229,49,53)" fg:x="1150" fg:w="1"/><text x="91.3752%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="91.0460%" y="565" width="0.2377%" height="15" fill="rgb(246,8,28)" fg:x="1149" fg:w="3"/><text x="91.2960%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="91.2044%" y="549" width="0.0792%" height="15" fill="rgb(207,28,41)" fg:x="1151" fg:w="1"/><text x="91.4544%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="91.2837%" y="549" width="0.0792%" height="15" fill="rgb(254,22,25)" fg:x="1152" fg:w="1"/><text x="91.5337%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (77 samples, 6.10%)</title><rect x="85.4200%" y="597" width="6.1014%" height="15" fill="rgb(209,120,42)" fg:x="1078" fg:w="77"/><text x="85.6700%" y="607.50">plugins_..</text></g><g><title>plugins_core::build::Build::occupying (6 samples, 0.48%)</title><rect x="91.0460%" y="581" width="0.4754%" height="15" fill="rgb(216,194,18)" fg:x="1149" fg:w="6"/><text x="91.2960%" y="591.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="91.2837%" y="565" width="0.2377%" height="15" fill="rgb(213,70,17)" fg:x="1152" fg:w="3"/><text x="91.5337%" y="575.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="91.3629%" y="549" width="0.1585%" height="15" fill="rgb(228,66,19)" fg:x="1153" fg:w="2"/><text x="91.6129%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="91.3629%" y="533" width="0.1585%" height="15" fill="rgb(236,221,54)" fg:x="1153" fg:w="2"/><text x="91.6129%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="91.3629%" y="517" width="0.1585%" height="15" fill="rgb(207,175,15)" fg:x="1153" fg:w="2"/><text x="91.6129%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="91.3629%" y="501" width="0.1585%" height="15" fill="rgb(234,76,8)" fg:x="1153" fg:w="2"/><text x="91.6129%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="91.3629%" y="485" width="0.1585%" height="15" fill="rgb(243,106,0)" fg:x="1153" fg:w="2"/><text x="91.6129%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.3629%" y="469" width="0.1585%" height="15" fill="rgb(208,48,19)" fg:x="1153" fg:w="2"/><text x="91.6129%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.3629%" y="453" width="0.1585%" height="15" fill="rgb(251,50,29)" fg:x="1153" fg:w="2"/><text x="91.6129%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.4422%" y="437" width="0.0792%" height="15" fill="rgb(222,31,49)" fg:x="1154" fg:w="1"/><text x="91.6922%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.4422%" y="421" width="0.0792%" height="15" fill="rgb(232,33,18)" fg:x="1154" fg:w="1"/><text x="91.6922%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.4422%" y="405" width="0.0792%" height="15" fill="rgb(209,1,44)" fg:x="1154" fg:w="1"/><text x="91.6922%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.4422%" y="389" width="0.0792%" height="15" fill="rgb(211,7,1)" fg:x="1154" fg:w="1"/><text x="91.6922%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.4422%" y="373" width="0.0792%" height="15" fill="rgb(224,111,27)" fg:x="1154" fg:w="1"/><text x="91.6922%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.4422%" y="357" width="0.0792%" height="15" fill="rgb(252,195,39)" fg:x="1154" fg:w="1"/><text x="91.6922%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.4422%" y="341" width="0.0792%" height="15" fill="rgb(237,198,5)" fg:x="1154" fg:w="1"/><text x="91.6922%" y="351.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.5214%" y="501" width="0.0792%" height="15" fill="rgb(232,148,1)" fg:x="1155" fg:w="1"/><text x="91.7714%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.5214%" y="485" width="0.0792%" height="15" fill="rgb(249,41,3)" fg:x="1155" fg:w="1"/><text x="91.7714%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.5214%" y="469" width="0.0792%" height="15" fill="rgb(215,14,33)" fg:x="1155" fg:w="1"/><text x="91.7714%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6006%" y="469" width="0.0792%" height="15" fill="rgb(209,146,24)" fg:x="1156" fg:w="1"/><text x="91.8506%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6006%" y="453" width="0.0792%" height="15" fill="rgb(219,51,47)" fg:x="1156" fg:w="1"/><text x="91.8506%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.6006%" y="437" width="0.0792%" height="15" fill="rgb(234,217,40)" fg:x="1156" fg:w="1"/><text x="91.8506%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="91.5214%" y="597" width="0.2377%" height="15" fill="rgb(228,34,26)" fg:x="1155" fg:w="3"/><text x="91.7714%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="91.5214%" y="581" width="0.2377%" height="15" fill="rgb(224,50,29)" fg:x="1155" fg:w="3"/><text x="91.7714%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="91.5214%" y="565" width="0.2377%" height="15" fill="rgb(205,79,51)" fg:x="1155" fg:w="3"/><text x="91.7714%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="91.5214%" y="549" width="0.2377%" height="15" fill="rgb(218,136,28)" fg:x="1155" fg:w="3"/><text x="91.7714%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="91.5214%" y="533" width="0.2377%" height="15" fill="rgb(220,150,10)" fg:x="1155" fg:w="3"/><text x="91.7714%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="91.5214%" y="517" width="0.2377%" height="15" fill="rgb(242,158,47)" fg:x="1155" fg:w="3"/><text x="91.7714%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="91.6006%" y="501" width="0.1585%" height="15" fill="rgb(209,68,0)" fg:x="1156" fg:w="2"/><text x="91.8506%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="91.6006%" y="485" width="0.1585%" height="15" fill="rgb(208,13,41)" fg:x="1156" fg:w="2"/><text x="91.8506%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="91.6799%" y="469" width="0.0792%" height="15" fill="rgb(226,201,7)" fg:x="1157" fg:w="1"/><text x="91.9299%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.6799%" y="453" width="0.0792%" height="15" fill="rgb(236,103,26)" fg:x="1157" fg:w="1"/><text x="91.9299%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="91.6799%" y="437" width="0.0792%" height="15" fill="rgb(243,162,8)" fg:x="1157" fg:w="1"/><text x="91.9299%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.6799%" y="421" width="0.0792%" height="15" fill="rgb(237,225,11)" fg:x="1157" fg:w="1"/><text x="91.9299%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="91.6799%" y="405" width="0.0792%" height="15" fill="rgb(247,186,32)" fg:x="1157" fg:w="1"/><text x="91.9299%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="91.6799%" y="389" width="0.0792%" height="15" fill="rgb(215,26,28)" fg:x="1157" fg:w="1"/><text x="91.9299%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="91.6799%" y="373" width="0.0792%" height="15" fill="rgb(208,121,6)" fg:x="1157" fg:w="1"/><text x="91.9299%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.6799%" y="357" width="0.0792%" height="15" fill="rgb(225,91,3)" fg:x="1157" fg:w="1"/><text x="91.9299%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.6799%" y="341" width="0.0792%" height="15" fill="rgb(246,119,36)" fg:x="1157" fg:w="1"/><text x="91.9299%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="91.7591%" y="581" width="0.0792%" height="15" fill="rgb(254,173,2)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.7591%" y="565" width="0.0792%" height="15" fill="rgb(209,87,54)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.7591%" y="549" width="0.0792%" height="15" fill="rgb(223,216,20)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.7591%" y="533" width="0.0792%" height="15" fill="rgb(220,31,8)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.7591%" y="517" width="0.0792%" height="15" fill="rgb(220,185,15)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7591%" y="501" width="0.0792%" height="15" fill="rgb(247,190,50)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.7591%" y="485" width="0.0792%" height="15" fill="rgb(239,173,47)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7591%" y="469" width="0.0792%" height="15" fill="rgb(218,190,42)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.7591%" y="453" width="0.0792%" height="15" fill="rgb(251,207,16)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7591%" y="437" width="0.0792%" height="15" fill="rgb(222,199,47)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7591%" y="421" width="0.0792%" height="15" fill="rgb(245,190,7)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.7591%" y="405" width="0.0792%" height="15" fill="rgb(239,85,38)" fg:x="1158" fg:w="1"/><text x="92.0091%" y="415.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (150 samples, 11.89%)</title><rect x="80.0317%" y="613" width="11.8859%" height="15" fill="rgb(229,69,51)" fg:x="1010" fg:w="150"/><text x="80.2817%" y="623.50">&lt;tests::HoldingKey..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (2 samples, 0.16%)</title><rect x="91.7591%" y="597" width="0.1585%" height="15" fill="rgb(231,104,51)" fg:x="1158" fg:w="2"/><text x="92.0091%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="91.8384%" y="581" width="0.0792%" height="15" fill="rgb(235,49,4)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="91.8384%" y="565" width="0.0792%" height="15" fill="rgb(246,166,20)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="91.8384%" y="549" width="0.0792%" height="15" fill="rgb(230,119,37)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="91.8384%" y="533" width="0.0792%" height="15" fill="rgb(234,77,34)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8384%" y="517" width="0.0792%" height="15" fill="rgb(211,222,33)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.8384%" y="501" width="0.0792%" height="15" fill="rgb(226,45,42)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8384%" y="485" width="0.0792%" height="15" fill="rgb(215,174,28)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.8384%" y="469" width="0.0792%" height="15" fill="rgb(254,173,49)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8384%" y="453" width="0.0792%" height="15" fill="rgb(229,191,6)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8384%" y="437" width="0.0792%" height="15" fill="rgb(212,145,22)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="91.8384%" y="421" width="0.0792%" height="15" fill="rgb(226,6,51)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="91.8384%" y="405" width="0.0792%" height="15" fill="rgb(227,128,8)" fg:x="1159" fg:w="1"/><text x="92.0884%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="91.9176%" y="597" width="0.1585%" height="15" fill="rgb(205,24,10)" fg:x="1160" fg:w="2"/><text x="92.1676%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.9968%" y="581" width="0.0792%" height="15" fill="rgb(217,147,27)" fg:x="1161" fg:w="1"/><text x="92.2468%" y="591.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="92.0761%" y="597" width="0.0792%" height="15" fill="rgb(250,82,42)" fg:x="1162" fg:w="1"/><text x="92.3261%" y="607.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="92.0761%" y="581" width="0.0792%" height="15" fill="rgb(248,93,17)" fg:x="1162" fg:w="1"/><text x="92.3261%" y="591.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="92.0761%" y="565" width="0.0792%" height="15" fill="rgb(254,212,40)" fg:x="1162" fg:w="1"/><text x="92.3261%" y="575.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="92.0761%" y="549" width="0.0792%" height="15" fill="rgb(229,209,2)" fg:x="1162" fg:w="1"/><text x="92.3261%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="92.0761%" y="533" width="0.0792%" height="15" fill="rgb(211,50,43)" fg:x="1162" fg:w="1"/><text x="92.3261%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="92.0761%" y="517" width="0.0792%" height="15" fill="rgb(245,196,29)" fg:x="1162" fg:w="1"/><text x="92.3261%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="92.0761%" y="501" width="0.0792%" height="15" fill="rgb(216,132,13)" fg:x="1162" fg:w="1"/><text x="92.3261%" y="511.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="92.0761%" y="485" width="0.0792%" height="15" fill="rgb(251,108,21)" fg:x="1162" fg:w="1"/><text x="92.3261%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.1553%" y="517" width="0.0792%" height="15" fill="rgb(229,174,54)" fg:x="1163" fg:w="1"/><text x="92.4053%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="92.2345%" y="517" width="0.1585%" height="15" fill="rgb(211,175,47)" fg:x="1164" fg:w="2"/><text x="92.4845%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.3138%" y="501" width="0.0792%" height="15" fill="rgb(234,5,37)" fg:x="1165" fg:w="1"/><text x="92.5638%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="92.3930%" y="501" width="0.3170%" height="15" fill="rgb(244,150,43)" fg:x="1166" fg:w="4"/><text x="92.6430%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.5515%" y="485" width="0.1585%" height="15" fill="rgb(242,172,38)" fg:x="1168" fg:w="2"/><text x="92.8015%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.6307%" y="469" width="0.0792%" height="15" fill="rgb(205,27,8)" fg:x="1169" fg:w="1"/><text x="92.8807%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.7100%" y="453" width="0.1585%" height="15" fill="rgb(217,57,3)" fg:x="1170" fg:w="2"/><text x="92.9600%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.7100%" y="437" width="0.1585%" height="15" fill="rgb(242,21,38)" fg:x="1170" fg:w="2"/><text x="92.9600%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.7892%" y="421" width="0.0792%" height="15" fill="rgb(209,64,43)" fg:x="1171" fg:w="1"/><text x="93.0392%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.7892%" y="405" width="0.0792%" height="15" fill="rgb(222,2,46)" fg:x="1171" fg:w="1"/><text x="93.0392%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="92.7100%" y="485" width="0.3170%" height="15" fill="rgb(218,19,44)" fg:x="1170" fg:w="4"/><text x="92.9600%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="92.7100%" y="469" width="0.3170%" height="15" fill="rgb(240,203,42)" fg:x="1170" fg:w="4"/><text x="92.9600%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.8685%" y="453" width="0.1585%" height="15" fill="rgb(229,23,45)" fg:x="1172" fg:w="2"/><text x="93.1185%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="92.8685%" y="437" width="0.1585%" height="15" fill="rgb(205,228,51)" fg:x="1172" fg:w="2"/><text x="93.1185%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.9477%" y="421" width="0.0792%" height="15" fill="rgb(239,36,20)" fg:x="1173" fg:w="1"/><text x="93.1977%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="93.0269%" y="485" width="0.1585%" height="15" fill="rgb(248,172,27)" fg:x="1174" fg:w="2"/><text x="93.2769%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="93.0269%" y="469" width="0.1585%" height="15" fill="rgb(244,55,32)" fg:x="1174" fg:w="2"/><text x="93.2769%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.1062%" y="453" width="0.0792%" height="15" fill="rgb(215,97,16)" fg:x="1175" fg:w="1"/><text x="93.3562%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1062%" y="437" width="0.0792%" height="15" fill="rgb(224,80,29)" fg:x="1175" fg:w="1"/><text x="93.3562%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.1854%" y="453" width="0.0792%" height="15" fill="rgb(216,93,47)" fg:x="1176" fg:w="1"/><text x="93.4354%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.1854%" y="437" width="0.0792%" height="15" fill="rgb(238,159,10)" fg:x="1176" fg:w="1"/><text x="93.4354%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.1854%" y="421" width="0.0792%" height="15" fill="rgb(223,98,29)" fg:x="1176" fg:w="1"/><text x="93.4354%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1854%" y="405" width="0.0792%" height="15" fill="rgb(210,176,23)" fg:x="1176" fg:w="1"/><text x="93.4354%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.1854%" y="389" width="0.0792%" height="15" fill="rgb(242,162,27)" fg:x="1176" fg:w="1"/><text x="93.4354%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="93.2647%" y="437" width="0.1585%" height="15" fill="rgb(245,109,32)" fg:x="1177" fg:w="2"/><text x="93.5147%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.3439%" y="421" width="0.0792%" height="15" fill="rgb(248,87,8)" fg:x="1178" fg:w="1"/><text x="93.5939%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.3439%" y="405" width="0.0792%" height="15" fill="rgb(250,160,50)" fg:x="1178" fg:w="1"/><text x="93.5939%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.3439%" y="389" width="0.0792%" height="15" fill="rgb(246,165,25)" fg:x="1178" fg:w="1"/><text x="93.5939%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.4231%" y="421" width="0.0792%" height="15" fill="rgb(249,219,3)" fg:x="1179" fg:w="1"/><text x="93.6731%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.4231%" y="405" width="0.0792%" height="15" fill="rgb(226,66,5)" fg:x="1179" fg:w="1"/><text x="93.6731%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="93.2647%" y="453" width="0.3170%" height="15" fill="rgb(250,220,43)" fg:x="1177" fg:w="4"/><text x="93.5147%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="93.4231%" y="437" width="0.1585%" height="15" fill="rgb(225,111,31)" fg:x="1179" fg:w="2"/><text x="93.6731%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="93.5024%" y="421" width="0.0792%" height="15" fill="rgb(248,106,18)" fg:x="1180" fg:w="1"/><text x="93.7524%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="92.7100%" y="501" width="0.9509%" height="15" fill="rgb(220,226,45)" fg:x="1170" fg:w="12"/><text x="92.9600%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="93.1854%" y="485" width="0.4754%" height="15" fill="rgb(208,58,53)" fg:x="1176" fg:w="6"/><text x="93.4354%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="93.1854%" y="469" width="0.4754%" height="15" fill="rgb(209,133,1)" fg:x="1176" fg:w="6"/><text x="93.4354%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.5816%" y="453" width="0.0792%" height="15" fill="rgb(228,216,27)" fg:x="1181" fg:w="1"/><text x="93.8316%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.5816%" y="437" width="0.0792%" height="15" fill="rgb(238,155,2)" fg:x="1181" fg:w="1"/><text x="93.8316%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="93.7401%" y="469" width="0.2377%" height="15" fill="rgb(244,99,37)" fg:x="1183" fg:w="3"/><text x="93.9901%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.8986%" y="453" width="0.0792%" height="15" fill="rgb(254,32,3)" fg:x="1185" fg:w="1"/><text x="94.1486%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.8986%" y="437" width="0.0792%" height="15" fill="rgb(234,46,50)" fg:x="1185" fg:w="1"/><text x="94.1486%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.8986%" y="421" width="0.0792%" height="15" fill="rgb(232,118,51)" fg:x="1185" fg:w="1"/><text x="94.1486%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.90%)</title><rect x="92.1553%" y="533" width="1.9017%" height="15" fill="rgb(207,24,32)" fg:x="1163" fg:w="24"/><text x="92.4053%" y="543.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.66%)</title><rect x="92.3930%" y="517" width="1.6640%" height="15" fill="rgb(208,107,43)" fg:x="1166" fg:w="21"/><text x="92.6430%" y="527.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="93.6609%" y="501" width="0.3962%" height="15" fill="rgb(231,28,9)" fg:x="1182" fg:w="5"/><text x="93.9109%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="93.7401%" y="485" width="0.3170%" height="15" fill="rgb(241,204,15)" fg:x="1183" fg:w="4"/><text x="93.9901%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="93.9778%" y="469" width="0.0792%" height="15" fill="rgb(214,54,15)" fg:x="1186" fg:w="1"/><text x="94.2278%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="94.1363%" y="501" width="0.1585%" height="15" fill="rgb(230,12,28)" fg:x="1188" fg:w="2"/><text x="94.3863%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3740%" y="485" width="0.0792%" height="15" fill="rgb(221,171,5)" fg:x="1191" fg:w="1"/><text x="94.6240%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3740%" y="469" width="0.0792%" height="15" fill="rgb(207,72,25)" fg:x="1191" fg:w="1"/><text x="94.6240%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4532%" y="453" width="0.0792%" height="15" fill="rgb(249,79,37)" fg:x="1192" fg:w="1"/><text x="94.7032%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.5325%" y="453" width="0.0792%" height="15" fill="rgb(209,98,49)" fg:x="1193" fg:w="1"/><text x="94.7825%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="94.0571%" y="533" width="0.7132%" height="15" fill="rgb(221,62,13)" fg:x="1187" fg:w="9"/><text x="94.3071%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.71%)</title><rect x="94.0571%" y="517" width="0.7132%" height="15" fill="rgb(223,39,6)" fg:x="1187" fg:w="9"/><text x="94.3071%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="94.2948%" y="501" width="0.4754%" height="15" fill="rgb(246,163,20)" fg:x="1190" fg:w="6"/><text x="94.5448%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="94.4532%" y="485" width="0.3170%" height="15" fill="rgb(211,111,29)" fg:x="1192" fg:w="4"/><text x="94.7032%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="94.4532%" y="469" width="0.3170%" height="15" fill="rgb(243,118,5)" fg:x="1192" fg:w="4"/><text x="94.7032%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.6117%" y="453" width="0.1585%" height="15" fill="rgb(240,144,52)" fg:x="1194" fg:w="2"/><text x="94.8617%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.6117%" y="437" width="0.1585%" height="15" fill="rgb(244,158,36)" fg:x="1194" fg:w="2"/><text x="94.8617%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.6910%" y="421" width="0.0792%" height="15" fill="rgb(241,109,37)" fg:x="1195" fg:w="1"/><text x="94.9410%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6910%" y="405" width="0.0792%" height="15" fill="rgb(213,95,32)" fg:x="1195" fg:w="1"/><text x="94.9410%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.7702%" y="469" width="0.0792%" height="15" fill="rgb(252,193,9)" fg:x="1196" fg:w="1"/><text x="95.0202%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.8494%" y="453" width="0.0792%" height="15" fill="rgb(225,213,21)" fg:x="1197" fg:w="1"/><text x="95.0994%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.8494%" y="437" width="0.0792%" height="15" fill="rgb(220,172,46)" fg:x="1197" fg:w="1"/><text x="95.0994%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0079%" y="421" width="0.0792%" height="15" fill="rgb(235,75,41)" fg:x="1199" fg:w="1"/><text x="95.2579%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="95.0872%" y="421" width="0.0792%" height="15" fill="rgb(213,86,9)" fg:x="1200" fg:w="1"/><text x="95.3372%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.0872%" y="405" width="0.0792%" height="15" fill="rgb(238,127,51)" fg:x="1200" fg:w="1"/><text x="95.3372%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2456%" y="389" width="0.0792%" height="15" fill="rgb(215,2,54)" fg:x="1202" fg:w="1"/><text x="95.4956%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.3249%" y="389" width="0.0792%" height="15" fill="rgb(245,80,6)" fg:x="1203" fg:w="1"/><text x="95.5749%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="94.7702%" y="501" width="0.7132%" height="15" fill="rgb(233,106,42)" fg:x="1196" fg:w="9"/><text x="95.0202%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.71%)</title><rect x="94.7702%" y="485" width="0.7132%" height="15" fill="rgb(244,86,38)" fg:x="1196" fg:w="9"/><text x="95.0202%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="94.8494%" y="469" width="0.6339%" height="15" fill="rgb(242,167,7)" fg:x="1197" fg:w="8"/><text x="95.0994%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="94.9287%" y="453" width="0.5547%" height="15" fill="rgb(218,216,3)" fg:x="1198" fg:w="7"/><text x="95.1787%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="94.9287%" y="437" width="0.5547%" height="15" fill="rgb(206,136,36)" fg:x="1198" fg:w="7"/><text x="95.1787%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="95.1664%" y="421" width="0.3170%" height="15" fill="rgb(206,206,15)" fg:x="1201" fg:w="4"/><text x="95.4164%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="95.1664%" y="405" width="0.3170%" height="15" fill="rgb(207,163,34)" fg:x="1201" fg:w="4"/><text x="95.4164%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.4041%" y="389" width="0.0792%" height="15" fill="rgb(240,127,22)" fg:x="1204" fg:w="1"/><text x="95.6541%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.4041%" y="373" width="0.0792%" height="15" fill="rgb(227,49,5)" fg:x="1204" fg:w="1"/><text x="95.6541%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.4041%" y="357" width="0.0792%" height="15" fill="rgb(231,8,6)" fg:x="1204" fg:w="1"/><text x="95.6541%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (11 samples, 0.87%)</title><rect x="94.7702%" y="517" width="0.8716%" height="15" fill="rgb(223,21,24)" fg:x="1196" fg:w="11"/><text x="95.0202%" y="527.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="95.4834%" y="501" width="0.1585%" height="15" fill="rgb(244,44,52)" fg:x="1205" fg:w="2"/><text x="95.7334%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="95.4834%" y="485" width="0.1585%" height="15" fill="rgb(207,73,28)" fg:x="1205" fg:w="2"/><text x="95.7334%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="95.5626%" y="469" width="0.0792%" height="15" fill="rgb(234,215,10)" fg:x="1206" fg:w="1"/><text x="95.8126%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="95.5626%" y="453" width="0.0792%" height="15" fill="rgb(236,85,3)" fg:x="1206" fg:w="1"/><text x="95.8126%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="95.6418%" y="485" width="0.0792%" height="15" fill="rgb(236,102,39)" fg:x="1207" fg:w="1"/><text x="95.8918%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="95.7211%" y="485" width="0.0792%" height="15" fill="rgb(243,50,8)" fg:x="1208" fg:w="1"/><text x="95.9711%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.7211%" y="469" width="0.0792%" height="15" fill="rgb(207,111,4)" fg:x="1208" fg:w="1"/><text x="95.9711%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7211%" y="453" width="0.0792%" height="15" fill="rgb(230,52,42)" fg:x="1208" fg:w="1"/><text x="95.9711%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8003%" y="437" width="0.0792%" height="15" fill="rgb(252,178,50)" fg:x="1209" fg:w="1"/><text x="96.0503%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8003%" y="421" width="0.0792%" height="15" fill="rgb(234,46,35)" fg:x="1209" fg:w="1"/><text x="96.0503%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.8003%" y="405" width="0.0792%" height="15" fill="rgb(228,69,37)" fg:x="1209" fg:w="1"/><text x="96.0503%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="95.8796%" y="421" width="0.0792%" height="15" fill="rgb(221,21,11)" fg:x="1210" fg:w="1"/><text x="96.1296%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="95.8796%" y="437" width="0.1585%" height="15" fill="rgb(223,56,9)" fg:x="1210" fg:w="2"/><text x="96.1296%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.9588%" y="421" width="0.0792%" height="15" fill="rgb(234,30,19)" fg:x="1211" fg:w="1"/><text x="96.2088%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0380%" y="341" width="0.0792%" height="15" fill="rgb(211,64,54)" fg:x="1212" fg:w="1"/><text x="96.2880%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0380%" y="325" width="0.0792%" height="15" fill="rgb(250,189,5)" fg:x="1212" fg:w="1"/><text x="96.2880%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="95.8003%" y="453" width="0.3962%" height="15" fill="rgb(214,180,13)" fg:x="1209" fg:w="5"/><text x="96.0503%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="96.0380%" y="437" width="0.1585%" height="15" fill="rgb(238,40,40)" fg:x="1212" fg:w="2"/><text x="96.2880%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="96.0380%" y="421" width="0.1585%" height="15" fill="rgb(214,101,38)" fg:x="1212" fg:w="2"/><text x="96.2880%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="96.0380%" y="405" width="0.1585%" height="15" fill="rgb(242,65,53)" fg:x="1212" fg:w="2"/><text x="96.2880%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="96.0380%" y="389" width="0.1585%" height="15" fill="rgb(230,22,45)" fg:x="1212" fg:w="2"/><text x="96.2880%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="96.0380%" y="373" width="0.1585%" height="15" fill="rgb(223,77,1)" fg:x="1212" fg:w="2"/><text x="96.2880%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="96.0380%" y="357" width="0.1585%" height="15" fill="rgb(227,33,37)" fg:x="1212" fg:w="2"/><text x="96.2880%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="96.1173%" y="341" width="0.0792%" height="15" fill="rgb(224,148,39)" fg:x="1213" fg:w="1"/><text x="96.3673%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="96.1173%" y="325" width="0.0792%" height="15" fill="rgb(232,212,39)" fg:x="1213" fg:w="1"/><text x="96.3673%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="96.1173%" y="309" width="0.0792%" height="15" fill="rgb(251,172,7)" fg:x="1213" fg:w="1"/><text x="96.3673%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="96.1173%" y="293" width="0.0792%" height="15" fill="rgb(219,39,9)" fg:x="1213" fg:w="1"/><text x="96.3673%" y="303.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.71%)</title><rect x="95.6418%" y="517" width="0.7132%" height="15" fill="rgb(228,118,14)" fg:x="1207" fg:w="9"/><text x="95.8918%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.71%)</title><rect x="95.6418%" y="501" width="0.7132%" height="15" fill="rgb(207,140,10)" fg:x="1207" fg:w="9"/><text x="95.8918%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.55%)</title><rect x="95.8003%" y="485" width="0.5547%" height="15" fill="rgb(227,111,53)" fg:x="1209" fg:w="7"/><text x="96.0503%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.55%)</title><rect x="95.8003%" y="469" width="0.5547%" height="15" fill="rgb(216,165,16)" fg:x="1209" fg:w="7"/><text x="96.0503%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="96.1965%" y="453" width="0.1585%" height="15" fill="rgb(226,111,18)" fg:x="1214" fg:w="2"/><text x="96.4465%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.2758%" y="437" width="0.0792%" height="15" fill="rgb(251,27,17)" fg:x="1215" fg:w="1"/><text x="96.5258%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.5135%" y="373" width="0.0792%" height="15" fill="rgb(254,69,9)" fg:x="1218" fg:w="1"/><text x="96.7635%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5135%" y="357" width="0.0792%" height="15" fill="rgb(234,140,37)" fg:x="1218" fg:w="1"/><text x="96.7635%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.5135%" y="341" width="0.0792%" height="15" fill="rgb(220,93,8)" fg:x="1218" fg:w="1"/><text x="96.7635%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.5927%" y="357" width="0.1585%" height="15" fill="rgb(236,113,3)" fg:x="1219" fg:w="2"/><text x="96.8427%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6719%" y="341" width="0.0792%" height="15" fill="rgb(234,108,23)" fg:x="1220" fg:w="1"/><text x="96.9219%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6719%" y="325" width="0.0792%" height="15" fill="rgb(205,114,34)" fg:x="1220" fg:w="1"/><text x="96.9219%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6719%" y="309" width="0.0792%" height="15" fill="rgb(236,200,45)" fg:x="1220" fg:w="1"/><text x="96.9219%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6719%" y="293" width="0.0792%" height="15" fill="rgb(227,194,29)" fg:x="1220" fg:w="1"/><text x="96.9219%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="96.4342%" y="421" width="0.3962%" height="15" fill="rgb(250,76,42)" fg:x="1217" fg:w="5"/><text x="96.6842%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.5135%" y="405" width="0.3170%" height="15" fill="rgb(208,128,8)" fg:x="1218" fg:w="4"/><text x="96.7635%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.5135%" y="389" width="0.3170%" height="15" fill="rgb(229,209,35)" fg:x="1218" fg:w="4"/><text x="96.7635%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.5927%" y="373" width="0.2377%" height="15" fill="rgb(215,39,53)" fg:x="1219" fg:w="3"/><text x="96.8427%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.7512%" y="357" width="0.0792%" height="15" fill="rgb(219,123,41)" fg:x="1221" fg:w="1"/><text x="97.0012%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7512%" y="341" width="0.0792%" height="15" fill="rgb(212,158,18)" fg:x="1221" fg:w="1"/><text x="97.0012%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.8304%" y="405" width="0.0792%" height="15" fill="rgb(234,196,53)" fg:x="1222" fg:w="1"/><text x="97.0804%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="96.8304%" y="421" width="0.1585%" height="15" fill="rgb(210,139,12)" fg:x="1222" fg:w="2"/><text x="97.0804%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9097%" y="405" width="0.0792%" height="15" fill="rgb(220,116,54)" fg:x="1223" fg:w="1"/><text x="97.1597%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.63%)</title><rect x="96.4342%" y="453" width="0.6339%" height="15" fill="rgb(247,103,28)" fg:x="1217" fg:w="8"/><text x="96.6842%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="96.4342%" y="437" width="0.6339%" height="15" fill="rgb(253,156,45)" fg:x="1217" fg:w="8"/><text x="96.6842%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9889%" y="421" width="0.0792%" height="15" fill="rgb(237,157,52)" fg:x="1224" fg:w="1"/><text x="97.2389%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9889%" y="405" width="0.0792%" height="15" fill="rgb(253,112,16)" fg:x="1224" fg:w="1"/><text x="97.2389%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9889%" y="389" width="0.0792%" height="15" fill="rgb(234,70,18)" fg:x="1224" fg:w="1"/><text x="97.2389%" y="399.50"></text></g><g><title>engine::session::Session::close (68 samples, 5.39%)</title><rect x="91.9176%" y="613" width="5.3883%" height="15" fill="rgb(247,138,19)" fg:x="1160" fg:w="68"/><text x="92.1676%" y="623.50">engine:..</text></g><g><title>engine::session::state::State::close (65 samples, 5.15%)</title><rect x="92.1553%" y="597" width="5.1506%" height="15" fill="rgb(207,171,1)" fg:x="1163" fg:w="65"/><text x="92.4053%" y="607.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (65 samples, 5.15%)</title><rect x="92.1553%" y="581" width="5.1506%" height="15" fill="rgb(239,213,3)" fg:x="1163" fg:w="65"/><text x="92.4053%" y="591.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (65 samples, 5.15%)</title><rect x="92.1553%" y="565" width="5.1506%" height="15" fill="rgb(226,112,4)" fg:x="1163" fg:w="65"/><text x="92.4053%" y="575.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (65 samples, 5.15%)</title><rect x="92.1553%" y="549" width="5.1506%" height="15" fill="rgb(252,170,12)" fg:x="1163" fg:w="65"/><text x="92.4053%" y="559.50">engine..</text></g><g><title>kernel::model::any_entity_changes (32 samples, 2.54%)</title><rect x="94.7702%" y="533" width="2.5357%" height="15" fill="rgb(241,106,13)" fg:x="1196" fg:w="32"/><text x="95.0202%" y="543.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.95%)</title><rect x="96.3550%" y="517" width="0.9509%" height="15" fill="rgb(225,73,23)" fg:x="1216" fg:w="12"/><text x="96.6050%" y="527.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.95%)</title><rect x="96.3550%" y="501" width="0.9509%" height="15" fill="rgb(251,227,29)" fg:x="1216" fg:w="12"/><text x="96.6050%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.95%)</title><rect x="96.3550%" y="485" width="0.9509%" height="15" fill="rgb(237,144,13)" fg:x="1216" fg:w="12"/><text x="96.6050%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.95%)</title><rect x="96.3550%" y="469" width="0.9509%" height="15" fill="rgb(232,106,46)" fg:x="1216" fg:w="12"/><text x="96.6050%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="97.0681%" y="453" width="0.2377%" height="15" fill="rgb(245,154,53)" fg:x="1225" fg:w="3"/><text x="97.3181%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="97.1474%" y="437" width="0.1585%" height="15" fill="rgb(212,119,47)" fg:x="1226" fg:w="2"/><text x="97.3974%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="97.3059%" y="501" width="0.0792%" height="15" fill="rgb(253,135,25)" fg:x="1228" fg:w="1"/><text x="97.5559%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.4643%" y="357" width="0.0792%" height="15" fill="rgb(253,208,39)" fg:x="1230" fg:w="1"/><text x="97.7143%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="97.4643%" y="341" width="0.0792%" height="15" fill="rgb(226,64,12)" fg:x="1230" fg:w="1"/><text x="97.7143%" y="351.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.3851%" y="405" width="0.2377%" height="15" fill="rgb(214,162,37)" fg:x="1229" fg:w="3"/><text x="97.6351%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.3851%" y="389" width="0.2377%" height="15" fill="rgb(250,104,5)" fg:x="1229" fg:w="3"/><text x="97.6351%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.3851%" y="373" width="0.2377%" height="15" fill="rgb(220,202,50)" fg:x="1229" fg:w="3"/><text x="97.6351%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5436%" y="357" width="0.0792%" height="15" fill="rgb(248,67,38)" fg:x="1231" fg:w="1"/><text x="97.7936%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5436%" y="341" width="0.0792%" height="15" fill="rgb(242,94,35)" fg:x="1231" fg:w="1"/><text x="97.7936%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6228%" y="325" width="0.0792%" height="15" fill="rgb(209,78,37)" fg:x="1232" fg:w="1"/><text x="97.8728%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6228%" y="309" width="0.0792%" height="15" fill="rgb(230,126,47)" fg:x="1232" fg:w="1"/><text x="97.8728%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.6228%" y="293" width="0.0792%" height="15" fill="rgb(222,110,35)" fg:x="1232" fg:w="1"/><text x="97.8728%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6228%" y="277" width="0.0792%" height="15" fill="rgb(233,154,20)" fg:x="1232" fg:w="1"/><text x="97.8728%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6228%" y="261" width="0.0792%" height="15" fill="rgb(223,53,50)" fg:x="1232" fg:w="1"/><text x="97.8728%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6228%" y="245" width="0.0792%" height="15" fill="rgb(251,27,26)" fg:x="1232" fg:w="1"/><text x="97.8728%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.6228%" y="229" width="0.0792%" height="15" fill="rgb(223,189,16)" fg:x="1232" fg:w="1"/><text x="97.8728%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6228%" y="213" width="0.0792%" height="15" fill="rgb(207,5,54)" fg:x="1232" fg:w="1"/><text x="97.8728%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="97.3851%" y="421" width="0.4754%" height="15" fill="rgb(254,124,50)" fg:x="1229" fg:w="6"/><text x="97.6351%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="97.6228%" y="405" width="0.2377%" height="15" fill="rgb(253,193,24)" fg:x="1232" fg:w="3"/><text x="97.8728%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.6228%" y="389" width="0.2377%" height="15" fill="rgb(235,170,24)" fg:x="1232" fg:w="3"/><text x="97.8728%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="97.6228%" y="373" width="0.2377%" height="15" fill="rgb(222,212,52)" fg:x="1232" fg:w="3"/><text x="97.8728%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.6228%" y="357" width="0.2377%" height="15" fill="rgb(223,17,45)" fg:x="1232" fg:w="3"/><text x="97.8728%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.6228%" y="341" width="0.2377%" height="15" fill="rgb(227,103,26)" fg:x="1232" fg:w="3"/><text x="97.8728%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.7021%" y="325" width="0.1585%" height="15" fill="rgb(251,151,25)" fg:x="1233" fg:w="2"/><text x="97.9521%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.7021%" y="309" width="0.1585%" height="15" fill="rgb(248,144,29)" fg:x="1233" fg:w="2"/><text x="97.9521%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="97.7021%" y="293" width="0.1585%" height="15" fill="rgb(245,97,16)" fg:x="1233" fg:w="2"/><text x="97.9521%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.7021%" y="277" width="0.1585%" height="15" fill="rgb(220,200,29)" fg:x="1233" fg:w="2"/><text x="97.9521%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7813%" y="261" width="0.0792%" height="15" fill="rgb(206,38,29)" fg:x="1234" fg:w="1"/><text x="98.0313%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.7813%" y="245" width="0.0792%" height="15" fill="rgb(245,19,52)" fg:x="1234" fg:w="1"/><text x="98.0313%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7813%" y="229" width="0.0792%" height="15" fill="rgb(205,67,43)" fg:x="1234" fg:w="1"/><text x="98.0313%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7813%" y="213" width="0.0792%" height="15" fill="rgb(217,128,23)" fg:x="1234" fg:w="1"/><text x="98.0313%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.7813%" y="197" width="0.0792%" height="15" fill="rgb(210,109,28)" fg:x="1234" fg:w="1"/><text x="98.0313%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7813%" y="181" width="0.0792%" height="15" fill="rgb(233,181,7)" fg:x="1234" fg:w="1"/><text x="98.0313%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.7813%" y="165" width="0.0792%" height="15" fill="rgb(244,11,22)" fg:x="1234" fg:w="1"/><text x="98.0313%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.7813%" y="149" width="0.0792%" height="15" fill="rgb(205,124,54)" fg:x="1234" fg:w="1"/><text x="98.0313%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.63%)</title><rect x="97.3851%" y="469" width="0.6339%" height="15" fill="rgb(218,21,27)" fg:x="1229" fg:w="8"/><text x="97.6351%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.63%)</title><rect x="97.3851%" y="453" width="0.6339%" height="15" fill="rgb(224,153,33)" fg:x="1229" fg:w="8"/><text x="97.6351%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.63%)</title><rect x="97.3851%" y="437" width="0.6339%" height="15" fill="rgb(240,219,28)" fg:x="1229" fg:w="8"/><text x="97.6351%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.8605%" y="421" width="0.1585%" height="15" fill="rgb(214,80,29)" fg:x="1235" fg:w="2"/><text x="98.1105%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.8605%" y="405" width="0.1585%" height="15" fill="rgb(247,148,44)" fg:x="1235" fg:w="2"/><text x="98.1105%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.8605%" y="389" width="0.1585%" height="15" fill="rgb(243,110,30)" fg:x="1235" fg:w="2"/><text x="98.1105%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8605%" y="373" width="0.1585%" height="15" fill="rgb(243,173,41)" fg:x="1235" fg:w="2"/><text x="98.1105%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8605%" y="357" width="0.1585%" height="15" fill="rgb(225,160,47)" fg:x="1235" fg:w="2"/><text x="98.1105%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8605%" y="341" width="0.1585%" height="15" fill="rgb(215,44,21)" fg:x="1235" fg:w="2"/><text x="98.1105%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9398%" y="325" width="0.0792%" height="15" fill="rgb(248,90,3)" fg:x="1236" fg:w="1"/><text x="98.1898%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9398%" y="309" width="0.0792%" height="15" fill="rgb(220,196,49)" fg:x="1236" fg:w="1"/><text x="98.1898%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0190%" y="469" width="0.0792%" height="15" fill="rgb(217,138,14)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0190%" y="453" width="0.0792%" height="15" fill="rgb(219,111,20)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0190%" y="437" width="0.0792%" height="15" fill="rgb(218,114,4)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0190%" y="421" width="0.0792%" height="15" fill="rgb(238,133,3)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0190%" y="405" width="0.0792%" height="15" fill="rgb(224,95,0)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0190%" y="389" width="0.0792%" height="15" fill="rgb(220,169,35)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0190%" y="373" width="0.0792%" height="15" fill="rgb(242,116,47)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0190%" y="357" width="0.0792%" height="15" fill="rgb(251,42,20)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0190%" y="341" width="0.0792%" height="15" fill="rgb(234,7,34)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0190%" y="325" width="0.0792%" height="15" fill="rgb(243,208,13)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0190%" y="309" width="0.0792%" height="15" fill="rgb(227,33,28)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0190%" y="293" width="0.0792%" height="15" fill="rgb(250,47,37)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0190%" y="277" width="0.0792%" height="15" fill="rgb(235,111,52)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0190%" y="261" width="0.0792%" height="15" fill="rgb(223,64,28)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0190%" y="245" width="0.0792%" height="15" fill="rgb(236,67,22)" fg:x="1237" fg:w="1"/><text x="98.2690%" y="255.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (11 samples, 0.87%)</title><rect x="97.3059%" y="533" width="0.8716%" height="15" fill="rgb(243,79,24)" fg:x="1228" fg:w="11"/><text x="97.5559%" y="543.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (11 samples, 0.87%)</title><rect x="97.3059%" y="517" width="0.8716%" height="15" fill="rgb(241,225,22)" fg:x="1228" fg:w="11"/><text x="97.5559%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.79%)</title><rect x="97.3851%" y="501" width="0.7924%" height="15" fill="rgb(228,214,26)" fg:x="1229" fg:w="10"/><text x="97.6351%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.79%)</title><rect x="97.3851%" y="485" width="0.7924%" height="15" fill="rgb(219,84,52)" fg:x="1229" fg:w="10"/><text x="97.6351%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="98.0983%" y="469" width="0.0792%" height="15" fill="rgb(220,12,22)" fg:x="1238" fg:w="1"/><text x="98.3483%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0983%" y="453" width="0.0792%" height="15" fill="rgb(219,9,49)" fg:x="1238" fg:w="1"/><text x="98.3483%" y="463.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1775%" y="533" width="0.0792%" height="15" fill="rgb(237,40,43)" fg:x="1239" fg:w="1"/><text x="98.4275%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (14 samples, 1.11%)</title><rect x="97.3059%" y="597" width="1.1094%" height="15" fill="rgb(212,189,32)" fg:x="1228" fg:w="14"/><text x="97.5559%" y="607.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (14 samples, 1.11%)</title><rect x="97.3059%" y="581" width="1.1094%" height="15" fill="rgb(247,48,9)" fg:x="1228" fg:w="14"/><text x="97.5559%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (14 samples, 1.11%)</title><rect x="97.3059%" y="565" width="1.1094%" height="15" fill="rgb(247,112,3)" fg:x="1228" fg:w="14"/><text x="97.5559%" y="575.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (14 samples, 1.11%)</title><rect x="97.3059%" y="549" width="1.1094%" height="15" fill="rgb(243,110,18)" fg:x="1228" fg:w="14"/><text x="97.5559%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="98.2567%" y="533" width="0.1585%" height="15" fill="rgb(233,223,44)" fg:x="1240" fg:w="2"/><text x="98.5067%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="98.2567%" y="517" width="0.1585%" height="15" fill="rgb(245,160,20)" fg:x="1240" fg:w="2"/><text x="98.5067%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="98.2567%" y="501" width="0.1585%" height="15" fill="rgb(225,37,1)" fg:x="1240" fg:w="2"/><text x="98.5067%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="98.3360%" y="485" width="0.0792%" height="15" fill="rgb(253,227,39)" fg:x="1241" fg:w="1"/><text x="98.5860%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="98.3360%" y="469" width="0.0792%" height="15" fill="rgb(240,179,26)" fg:x="1241" fg:w="1"/><text x="98.5860%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="98.3360%" y="453" width="0.0792%" height="15" fill="rgb(237,212,23)" fg:x="1241" fg:w="1"/><text x="98.5860%" y="463.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="98.3360%" y="437" width="0.0792%" height="15" fill="rgb(221,38,11)" fg:x="1241" fg:w="1"/><text x="98.5860%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="98.3360%" y="421" width="0.0792%" height="15" fill="rgb(215,85,6)" fg:x="1241" fg:w="1"/><text x="98.5860%" y="431.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="98.3360%" y="405" width="0.0792%" height="15" fill="rgb(239,64,14)" fg:x="1241" fg:w="1"/><text x="98.5860%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.4152%" y="581" width="0.0792%" height="15" fill="rgb(215,150,32)" fg:x="1242" fg:w="1"/><text x="98.6652%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4945%" y="501" width="0.0792%" height="15" fill="rgb(238,15,13)" fg:x="1243" fg:w="1"/><text x="98.7445%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4945%" y="485" width="0.0792%" height="15" fill="rgb(251,87,8)" fg:x="1243" fg:w="1"/><text x="98.7445%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.4945%" y="469" width="0.0792%" height="15" fill="rgb(206,86,1)" fg:x="1243" fg:w="1"/><text x="98.7445%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6529%" y="421" width="0.0792%" height="15" fill="rgb(208,151,45)" fg:x="1245" fg:w="1"/><text x="98.9029%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6529%" y="405" width="0.0792%" height="15" fill="rgb(231,181,24)" fg:x="1245" fg:w="1"/><text x="98.9029%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6529%" y="389" width="0.0792%" height="15" fill="rgb(240,106,29)" fg:x="1245" fg:w="1"/><text x="98.9029%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6529%" y="373" width="0.0792%" height="15" fill="rgb(227,166,11)" fg:x="1245" fg:w="1"/><text x="98.9029%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6529%" y="357" width="0.0792%" height="15" fill="rgb(254,14,34)" fg:x="1245" fg:w="1"/><text x="98.9029%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6529%" y="341" width="0.0792%" height="15" fill="rgb(223,222,6)" fg:x="1245" fg:w="1"/><text x="98.9029%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6529%" y="325" width="0.0792%" height="15" fill="rgb(245,69,24)" fg:x="1245" fg:w="1"/><text x="98.9029%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="98.4945%" y="565" width="0.3170%" height="15" fill="rgb(213,193,7)" fg:x="1243" fg:w="4"/><text x="98.7445%" y="575.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="98.4945%" y="549" width="0.3170%" height="15" fill="rgb(237,92,51)" fg:x="1243" fg:w="4"/><text x="98.7445%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.4945%" y="533" width="0.3170%" height="15" fill="rgb(225,194,6)" fg:x="1243" fg:w="4"/><text x="98.7445%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.4945%" y="517" width="0.3170%" height="15" fill="rgb(205,159,49)" fg:x="1243" fg:w="4"/><text x="98.7445%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.5737%" y="501" width="0.2377%" height="15" fill="rgb(219,69,2)" fg:x="1244" fg:w="3"/><text x="98.8237%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.5737%" y="485" width="0.2377%" height="15" fill="rgb(215,107,24)" fg:x="1244" fg:w="3"/><text x="98.8237%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.6529%" y="469" width="0.1585%" height="15" fill="rgb(249,208,29)" fg:x="1245" fg:w="2"/><text x="98.9029%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.6529%" y="453" width="0.1585%" height="15" fill="rgb(213,147,10)" fg:x="1245" fg:w="2"/><text x="98.9029%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.6529%" y="437" width="0.1585%" height="15" fill="rgb(254,140,42)" fg:x="1245" fg:w="2"/><text x="98.9029%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.7322%" y="421" width="0.0792%" height="15" fill="rgb(249,9,15)" fg:x="1246" fg:w="1"/><text x="98.9822%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7322%" y="405" width="0.0792%" height="15" fill="rgb(210,19,33)" fg:x="1246" fg:w="1"/><text x="98.9822%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.7322%" y="389" width="0.0792%" height="15" fill="rgb(241,121,22)" fg:x="1246" fg:w="1"/><text x="98.9822%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="98.4152%" y="597" width="0.4754%" height="15" fill="rgb(244,69,52)" fg:x="1242" fg:w="6"/><text x="98.6652%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="98.4945%" y="581" width="0.3962%" height="15" fill="rgb(244,191,54)" fg:x="1243" fg:w="5"/><text x="98.7445%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.8114%" y="565" width="0.0792%" height="15" fill="rgb(250,3,53)" fg:x="1247" fg:w="1"/><text x="99.0614%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.8114%" y="549" width="0.0792%" height="15" fill="rgb(205,77,3)" fg:x="1247" fg:w="1"/><text x="99.0614%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.8114%" y="533" width="0.0792%" height="15" fill="rgb(207,155,3)" fg:x="1247" fg:w="1"/><text x="99.0614%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8114%" y="517" width="0.0792%" height="15" fill="rgb(224,79,2)" fg:x="1247" fg:w="1"/><text x="99.0614%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8114%" y="501" width="0.0792%" height="15" fill="rgb(243,172,5)" fg:x="1247" fg:w="1"/><text x="99.0614%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8114%" y="485" width="0.0792%" height="15" fill="rgb(217,23,43)" fg:x="1247" fg:w="1"/><text x="99.0614%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8114%" y="469" width="0.0792%" height="15" fill="rgb(223,109,20)" fg:x="1247" fg:w="1"/><text x="99.0614%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="98.8906%" y="549" width="0.0792%" height="15" fill="rgb(232,159,21)" fg:x="1248" fg:w="1"/><text x="99.1406%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="98.8906%" y="533" width="0.0792%" height="15" fill="rgb(219,58,2)" fg:x="1248" fg:w="1"/><text x="99.1406%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.8906%" y="517" width="0.0792%" height="15" fill="rgb(241,56,8)" fg:x="1248" fg:w="1"/><text x="99.1406%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.8906%" y="501" width="0.0792%" height="15" fill="rgb(249,10,27)" fg:x="1248" fg:w="1"/><text x="99.1406%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.8906%" y="485" width="0.0792%" height="15" fill="rgb(248,177,5)" fg:x="1248" fg:w="1"/><text x="99.1406%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.8906%" y="469" width="0.0792%" height="15" fill="rgb(239,12,30)" fg:x="1248" fg:w="1"/><text x="99.1406%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.8906%" y="453" width="0.0792%" height="15" fill="rgb(229,164,25)" fg:x="1248" fg:w="1"/><text x="99.1406%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="98.8906%" y="437" width="0.0792%" height="15" fill="rgb(231,217,50)" fg:x="1248" fg:w="1"/><text x="99.1406%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.8906%" y="421" width="0.0792%" height="15" fill="rgb(247,99,32)" fg:x="1248" fg:w="1"/><text x="99.1406%" y="431.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="98.9699%" y="533" width="0.0792%" height="15" fill="rgb(240,74,50)" fg:x="1249" fg:w="1"/><text x="99.2199%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9699%" y="517" width="0.0792%" height="15" fill="rgb(218,54,8)" fg:x="1249" fg:w="1"/><text x="99.2199%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9699%" y="501" width="0.0792%" height="15" fill="rgb(227,132,20)" fg:x="1249" fg:w="1"/><text x="99.2199%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9699%" y="485" width="0.0792%" height="15" fill="rgb(232,134,12)" fg:x="1249" fg:w="1"/><text x="99.2199%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9699%" y="469" width="0.0792%" height="15" fill="rgb(250,129,18)" fg:x="1249" fg:w="1"/><text x="99.2199%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9699%" y="453" width="0.0792%" height="15" fill="rgb(232,129,47)" fg:x="1249" fg:w="1"/><text x="99.2199%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.0491%" y="501" width="0.0792%" height="15" fill="rgb(230,31,40)" fg:x="1250" fg:w="1"/><text x="99.2991%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1284%" y="469" width="0.0792%" height="15" fill="rgb(232,126,10)" fg:x="1251" fg:w="1"/><text x="99.3784%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.1284%" y="453" width="0.0792%" height="15" fill="rgb(205,46,31)" fg:x="1251" fg:w="1"/><text x="99.3784%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2076%" y="437" width="0.0792%" height="15" fill="rgb(232,37,37)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2076%" y="421" width="0.0792%" height="15" fill="rgb(240,91,16)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2076%" y="405" width="0.0792%" height="15" fill="rgb(224,160,9)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2076%" y="389" width="0.0792%" height="15" fill="rgb(215,116,14)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2076%" y="373" width="0.0792%" height="15" fill="rgb(235,46,36)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2076%" y="357" width="0.0792%" height="15" fill="rgb(238,39,28)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2076%" y="341" width="0.0792%" height="15" fill="rgb(242,125,29)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2076%" y="325" width="0.0792%" height="15" fill="rgb(238,211,30)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2076%" y="309" width="0.0792%" height="15" fill="rgb(227,201,28)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2076%" y="293" width="0.0792%" height="15" fill="rgb(238,77,29)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2076%" y="277" width="0.0792%" height="15" fill="rgb(213,221,40)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2076%" y="261" width="0.0792%" height="15" fill="rgb(226,220,44)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2076%" y="245" width="0.0792%" height="15" fill="rgb(228,90,23)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2076%" y="229" width="0.0792%" height="15" fill="rgb(235,72,29)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.2076%" y="213" width="0.0792%" height="15" fill="rgb(248,117,39)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.2076%" y="197" width="0.0792%" height="15" fill="rgb(225,43,28)" fg:x="1252" fg:w="1"/><text x="99.4576%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="99.1284%" y="501" width="0.2377%" height="15" fill="rgb(240,93,4)" fg:x="1251" fg:w="3"/><text x="99.3784%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.1284%" y="485" width="0.2377%" height="15" fill="rgb(234,178,27)" fg:x="1251" fg:w="3"/><text x="99.3784%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.2076%" y="469" width="0.1585%" height="15" fill="rgb(254,88,22)" fg:x="1252" fg:w="2"/><text x="99.4576%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2076%" y="453" width="0.1585%" height="15" fill="rgb(240,206,50)" fg:x="1252" fg:w="2"/><text x="99.4576%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="99.2868%" y="437" width="0.0792%" height="15" fill="rgb(249,103,8)" fg:x="1253" fg:w="1"/><text x="99.5368%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.3661%" y="469" width="0.0792%" height="15" fill="rgb(241,178,36)" fg:x="1254" fg:w="1"/><text x="99.6161%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.55%)</title><rect x="98.9699%" y="549" width="0.5547%" height="15" fill="rgb(246,110,15)" fg:x="1249" fg:w="7"/><text x="99.2199%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="99.0491%" y="533" width="0.4754%" height="15" fill="rgb(207,14,43)" fg:x="1250" fg:w="6"/><text x="99.2991%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="99.0491%" y="517" width="0.4754%" height="15" fill="rgb(253,219,19)" fg:x="1250" fg:w="6"/><text x="99.2991%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.3661%" y="501" width="0.1585%" height="15" fill="rgb(216,126,5)" fg:x="1254" fg:w="2"/><text x="99.6161%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.3661%" y="485" width="0.1585%" height="15" fill="rgb(218,78,42)" fg:x="1254" fg:w="2"/><text x="99.6161%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="99.4453%" y="469" width="0.0792%" height="15" fill="rgb(215,154,40)" fg:x="1255" fg:w="1"/><text x="99.6953%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6038%" y="405" width="0.0792%" height="15" fill="rgb(235,129,32)" fg:x="1257" fg:w="1"/><text x="99.8538%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6038%" y="389" width="0.0792%" height="15" fill="rgb(218,51,8)" fg:x="1257" fg:w="1"/><text x="99.8538%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (12 samples, 0.95%)</title><rect x="98.8906%" y="597" width="0.9509%" height="15" fill="rgb(245,48,4)" fg:x="1248" fg:w="12"/><text x="99.1406%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.95%)</title><rect x="98.8906%" y="581" width="0.9509%" height="15" fill="rgb(250,175,12)" fg:x="1248" fg:w="12"/><text x="99.1406%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.95%)</title><rect x="98.8906%" y="565" width="0.9509%" height="15" fill="rgb(237,95,40)" fg:x="1248" fg:w="12"/><text x="99.1406%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="99.5246%" y="549" width="0.3170%" height="15" fill="rgb(244,120,0)" fg:x="1256" fg:w="4"/><text x="99.7746%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="99.5246%" y="533" width="0.3170%" height="15" fill="rgb(241,19,42)" fg:x="1256" fg:w="4"/><text x="99.7746%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="99.5246%" y="517" width="0.3170%" height="15" fill="rgb(217,174,48)" fg:x="1256" fg:w="4"/><text x="99.7746%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="99.5246%" y="501" width="0.3170%" height="15" fill="rgb(239,36,38)" fg:x="1256" fg:w="4"/><text x="99.7746%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.5246%" y="485" width="0.3170%" height="15" fill="rgb(220,63,49)" fg:x="1256" fg:w="4"/><text x="99.7746%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.6038%" y="469" width="0.2377%" height="15" fill="rgb(240,101,13)" fg:x="1257" fg:w="3"/><text x="99.8538%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.6038%" y="453" width="0.2377%" height="15" fill="rgb(209,184,51)" fg:x="1257" fg:w="3"/><text x="99.8538%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="99.6038%" y="437" width="0.2377%" height="15" fill="rgb(206,136,39)" fg:x="1257" fg:w="3"/><text x="99.8538%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.6038%" y="421" width="0.2377%" height="15" fill="rgb(254,47,45)" fg:x="1257" fg:w="3"/><text x="99.8538%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.6830%" y="405" width="0.1585%" height="15" fill="rgb(252,103,20)" fg:x="1258" fg:w="2"/><text x="99.9330%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6830%" y="389" width="0.1585%" height="15" fill="rgb(230,69,12)" fg:x="1258" fg:w="2"/><text x="99.9330%" y="399.50"></text></g><g><title>all (1,262 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(219,2,28)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="975.50"></text></g><g><title>simple-484c7248 (1,262 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(210,9,12)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="959.50">simple-484c7248</text></g><g><title>_start (1,262 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(235,99,33)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="943.50">_start</text></g><g><title>__libc_start_main (1,262 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(230,11,38)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="927.50">__libc_start_main</text></g><g><title>main (1,262 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(217,129,0)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (1,262 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(222,198,4)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,262 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(246,170,27)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,262 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(229,17,28)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,262 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(233,198,48)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,262 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(238,103,23)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="831.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,262 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(206,91,41)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,262 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(227,34,25)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,262 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(210,110,44)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,262 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(216,189,8)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,262 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(234,9,46)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="751.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,262 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(251,200,5)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,262 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(238,165,37)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="719.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,262 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(232,77,38)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="703.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,262 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(253,179,33)" fg:x="0" fg:w="1262"/><text x="0.2500%" y="687.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (264 samples, 20.92%)</title><rect x="79.0808%" y="661" width="20.9192%" height="15" fill="rgb(240,13,35)" fg:x="998" fg:w="264"/><text x="79.3308%" y="671.50">&lt;criterion::routine::Function&lt;M,F..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (264 samples, 20.92%)</title><rect x="79.0808%" y="645" width="20.9192%" height="15" fill="rgb(242,150,49)" fg:x="998" fg:w="264"/><text x="79.3308%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::i..</text></g><g><title>tests::evaluate_text_in_new_domain (264 samples, 20.92%)</title><rect x="79.0808%" y="629" width="20.9192%" height="15" fill="rgb(237,176,28)" fg:x="998" fg:w="264"/><text x="79.3308%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (34 samples, 2.69%)</title><rect x="97.3059%" y="613" width="2.6941%" height="15" fill="rgb(214,176,33)" fg:x="1228" fg:w="34"/><text x="97.5559%" y="623.50">en..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="99.8415%" y="597" width="0.1585%" height="15" fill="rgb(214,25,12)" fg:x="1260" fg:w="2"/><text x="100.0915%" y="607.50"></text></g></svg></svg>