<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="1247"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0000%" y="549" width="0.0802%" height="15" fill="rgb(248,9,31)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1604%" y="501" width="0.0802%" height="15" fill="rgb(234,26,45)" fg:x="2" fg:w="1"/><text x="0.4104%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.3208%" y="469" width="0.1604%" height="15" fill="rgb(249,11,32)" fg:x="4" fg:w="2"/><text x="0.5708%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.4812%" y="453" width="0.0802%" height="15" fill="rgb(249,162,33)" fg:x="6" fg:w="1"/><text x="0.7312%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="0.4812%" y="437" width="0.0802%" height="15" fill="rgb(232,4,32)" fg:x="6" fg:w="1"/><text x="0.7312%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4812%" y="421" width="0.0802%" height="15" fill="rgb(212,5,45)" fg:x="6" fg:w="1"/><text x="0.7312%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.5613%" y="453" width="0.1604%" height="15" fill="rgb(227,95,13)" fg:x="7" fg:w="2"/><text x="0.8113%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="0.0802%" y="517" width="0.7217%" height="15" fill="rgb(223,205,10)" fg:x="1" fg:w="9"/><text x="0.3302%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="0.2406%" y="501" width="0.5613%" height="15" fill="rgb(222,178,8)" fg:x="3" fg:w="7"/><text x="0.4906%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="0.3208%" y="485" width="0.4812%" height="15" fill="rgb(216,13,22)" fg:x="4" fg:w="6"/><text x="0.5708%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="0.4812%" y="469" width="0.3208%" height="15" fill="rgb(240,167,12)" fg:x="6" fg:w="4"/><text x="0.7312%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7217%" y="453" width="0.0802%" height="15" fill="rgb(235,68,35)" fg:x="9" fg:w="1"/><text x="0.9717%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="0.0000%" y="597" width="0.8821%" height="15" fill="rgb(253,40,27)" fg:x="0" fg:w="11"/><text x="0.2500%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (11 samples, 0.88%)</title><rect x="0.0000%" y="581" width="0.8821%" height="15" fill="rgb(214,19,28)" fg:x="0" fg:w="11"/><text x="0.2500%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="0.0000%" y="565" width="0.8821%" height="15" fill="rgb(210,167,45)" fg:x="0" fg:w="11"/><text x="0.2500%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (10 samples, 0.80%)</title><rect x="0.0802%" y="549" width="0.8019%" height="15" fill="rgb(232,97,40)" fg:x="1" fg:w="10"/><text x="0.3302%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="0.0802%" y="533" width="0.8019%" height="15" fill="rgb(250,35,23)" fg:x="1" fg:w="10"/><text x="0.3302%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8019%" y="517" width="0.0802%" height="15" fill="rgb(248,47,53)" fg:x="10" fg:w="1"/><text x="1.0519%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="0.8821%" y="533" width="0.0802%" height="15" fill="rgb(226,58,50)" fg:x="11" fg:w="1"/><text x="1.1321%" y="543.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="0.8821%" y="517" width="0.0802%" height="15" fill="rgb(217,105,26)" fg:x="11" fg:w="1"/><text x="1.1321%" y="527.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="0.8821%" y="501" width="0.0802%" height="15" fill="rgb(208,64,1)" fg:x="11" fg:w="1"/><text x="1.1321%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="0.8821%" y="485" width="0.0802%" height="15" fill="rgb(214,80,1)" fg:x="11" fg:w="1"/><text x="1.1321%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="0.9623%" y="533" width="0.0802%" height="15" fill="rgb(206,175,26)" fg:x="12" fg:w="1"/><text x="1.2123%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="1.0425%" y="533" width="0.0802%" height="15" fill="rgb(235,156,37)" fg:x="13" fg:w="1"/><text x="1.2925%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.0425%" y="517" width="0.0802%" height="15" fill="rgb(213,100,9)" fg:x="13" fg:w="1"/><text x="1.2925%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.0425%" y="501" width="0.0802%" height="15" fill="rgb(241,15,13)" fg:x="13" fg:w="1"/><text x="1.2925%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="1.0425%" y="485" width="0.0802%" height="15" fill="rgb(205,97,43)" fg:x="13" fg:w="1"/><text x="1.2925%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="1.0425%" y="469" width="0.0802%" height="15" fill="rgb(216,106,32)" fg:x="13" fg:w="1"/><text x="1.2925%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="1.0425%" y="453" width="0.0802%" height="15" fill="rgb(226,200,8)" fg:x="13" fg:w="1"/><text x="1.2925%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.0425%" y="437" width="0.0802%" height="15" fill="rgb(244,54,29)" fg:x="13" fg:w="1"/><text x="1.2925%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.0425%" y="421" width="0.0802%" height="15" fill="rgb(252,169,12)" fg:x="13" fg:w="1"/><text x="1.2925%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="1.0425%" y="405" width="0.0802%" height="15" fill="rgb(231,199,11)" fg:x="13" fg:w="1"/><text x="1.2925%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="1.0425%" y="389" width="0.0802%" height="15" fill="rgb(233,191,18)" fg:x="13" fg:w="1"/><text x="1.2925%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="1.0425%" y="373" width="0.0802%" height="15" fill="rgb(215,83,47)" fg:x="13" fg:w="1"/><text x="1.2925%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="1.0425%" y="357" width="0.0802%" height="15" fill="rgb(251,67,19)" fg:x="13" fg:w="1"/><text x="1.2925%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.0425%" y="341" width="0.0802%" height="15" fill="rgb(240,7,20)" fg:x="13" fg:w="1"/><text x="1.2925%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.3633%" y="453" width="0.0802%" height="15" fill="rgb(210,150,26)" fg:x="17" fg:w="1"/><text x="1.6133%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3633%" y="437" width="0.0802%" height="15" fill="rgb(228,75,42)" fg:x="17" fg:w="1"/><text x="1.6133%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="1.4435%" y="453" width="0.1604%" height="15" fill="rgb(237,134,48)" fg:x="18" fg:w="2"/><text x="1.6935%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.4435%" y="437" width="0.1604%" height="15" fill="rgb(205,80,50)" fg:x="18" fg:w="2"/><text x="1.6935%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="1.4435%" y="421" width="0.1604%" height="15" fill="rgb(217,74,48)" fg:x="18" fg:w="2"/><text x="1.6935%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.4435%" y="405" width="0.1604%" height="15" fill="rgb(205,82,50)" fg:x="18" fg:w="2"/><text x="1.6935%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="1.4435%" y="389" width="0.1604%" height="15" fill="rgb(228,1,33)" fg:x="18" fg:w="2"/><text x="1.6935%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (8 samples, 0.64%)</title><rect x="1.1227%" y="517" width="0.6415%" height="15" fill="rgb(214,50,23)" fg:x="14" fg:w="8"/><text x="1.3727%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (8 samples, 0.64%)</title><rect x="1.1227%" y="501" width="0.6415%" height="15" fill="rgb(210,62,9)" fg:x="14" fg:w="8"/><text x="1.3727%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="1.1227%" y="485" width="0.6415%" height="15" fill="rgb(210,104,37)" fg:x="14" fg:w="8"/><text x="1.3727%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="1.1227%" y="469" width="0.6415%" height="15" fill="rgb(232,104,43)" fg:x="14" fg:w="8"/><text x="1.3727%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="1.6038%" y="453" width="0.1604%" height="15" fill="rgb(244,52,6)" fg:x="20" fg:w="2"/><text x="1.8538%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6840%" y="437" width="0.0802%" height="15" fill="rgb(211,174,52)" fg:x="21" fg:w="1"/><text x="1.9340%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="1.6840%" y="421" width="0.0802%" height="15" fill="rgb(229,48,4)" fg:x="21" fg:w="1"/><text x="1.9340%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6840%" y="405" width="0.0802%" height="15" fill="rgb(205,155,16)" fg:x="21" fg:w="1"/><text x="1.9340%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.7642%" y="469" width="0.0802%" height="15" fill="rgb(211,141,53)" fg:x="22" fg:w="1"/><text x="2.0142%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.7642%" y="453" width="0.0802%" height="15" fill="rgb(240,148,11)" fg:x="22" fg:w="1"/><text x="2.0142%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="1.7642%" y="437" width="0.0802%" height="15" fill="rgb(214,45,23)" fg:x="22" fg:w="1"/><text x="2.0142%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.8444%" y="437" width="0.0802%" height="15" fill="rgb(248,74,26)" fg:x="23" fg:w="1"/><text x="2.0944%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (15 samples, 1.20%)</title><rect x="0.8821%" y="549" width="1.2029%" height="15" fill="rgb(218,121,16)" fg:x="11" fg:w="15"/><text x="1.1321%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity (12 samples, 0.96%)</title><rect x="1.1227%" y="533" width="0.9623%" height="15" fill="rgb(218,10,47)" fg:x="14" fg:w="12"/><text x="1.3727%" y="543.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="1.7642%" y="517" width="0.3208%" height="15" fill="rgb(227,99,14)" fg:x="22" fg:w="4"/><text x="2.0142%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="1.7642%" y="501" width="0.3208%" height="15" fill="rgb(229,83,46)" fg:x="22" fg:w="4"/><text x="2.0142%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="1.7642%" y="485" width="0.3208%" height="15" fill="rgb(228,25,1)" fg:x="22" fg:w="4"/><text x="2.0142%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="1.8444%" y="469" width="0.2406%" height="15" fill="rgb(252,190,15)" fg:x="23" fg:w="3"/><text x="2.0944%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="1.8444%" y="453" width="0.2406%" height="15" fill="rgb(213,103,51)" fg:x="23" fg:w="3"/><text x="2.0944%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="1.9246%" y="437" width="0.1604%" height="15" fill="rgb(220,38,44)" fg:x="24" fg:w="2"/><text x="2.1746%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.0048%" y="421" width="0.0802%" height="15" fill="rgb(210,45,26)" fg:x="25" fg:w="1"/><text x="2.2548%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (16 samples, 1.28%)</title><rect x="0.8821%" y="565" width="1.2831%" height="15" fill="rgb(205,95,48)" fg:x="11" fg:w="16"/><text x="1.1321%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="2.0850%" y="549" width="0.0802%" height="15" fill="rgb(225,179,37)" fg:x="26" fg:w="1"/><text x="2.3350%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.0850%" y="533" width="0.0802%" height="15" fill="rgb(230,209,3)" fg:x="26" fg:w="1"/><text x="2.3350%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.0850%" y="517" width="0.0802%" height="15" fill="rgb(248,12,46)" fg:x="26" fg:w="1"/><text x="2.3350%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.0850%" y="501" width="0.0802%" height="15" fill="rgb(234,18,0)" fg:x="26" fg:w="1"/><text x="2.3350%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.0850%" y="485" width="0.0802%" height="15" fill="rgb(238,197,14)" fg:x="26" fg:w="1"/><text x="2.3350%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="2.0850%" y="469" width="0.0802%" height="15" fill="rgb(251,162,48)" fg:x="26" fg:w="1"/><text x="2.3350%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="2.0850%" y="453" width="0.0802%" height="15" fill="rgb(237,73,42)" fg:x="26" fg:w="1"/><text x="2.3350%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.0850%" y="437" width="0.0802%" height="15" fill="rgb(211,108,8)" fg:x="26" fg:w="1"/><text x="2.3350%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.0850%" y="421" width="0.0802%" height="15" fill="rgb(213,45,22)" fg:x="26" fg:w="1"/><text x="2.3350%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.0850%" y="405" width="0.0802%" height="15" fill="rgb(252,154,5)" fg:x="26" fg:w="1"/><text x="2.3350%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.0850%" y="389" width="0.0802%" height="15" fill="rgb(221,79,52)" fg:x="26" fg:w="1"/><text x="2.3350%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.0850%" y="373" width="0.0802%" height="15" fill="rgb(229,220,36)" fg:x="26" fg:w="1"/><text x="2.3350%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.0850%" y="357" width="0.0802%" height="15" fill="rgb(211,17,16)" fg:x="26" fg:w="1"/><text x="2.3350%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.0850%" y="341" width="0.0802%" height="15" fill="rgb(222,55,31)" fg:x="26" fg:w="1"/><text x="2.3350%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.0850%" y="325" width="0.0802%" height="15" fill="rgb(221,221,31)" fg:x="26" fg:w="1"/><text x="2.3350%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.0850%" y="309" width="0.0802%" height="15" fill="rgb(227,168,26)" fg:x="26" fg:w="1"/><text x="2.3350%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.0850%" y="293" width="0.0802%" height="15" fill="rgb(224,139,9)" fg:x="26" fg:w="1"/><text x="2.3350%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.0850%" y="277" width="0.0802%" height="15" fill="rgb(254,172,0)" fg:x="26" fg:w="1"/><text x="2.3350%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.0850%" y="261" width="0.0802%" height="15" fill="rgb(235,203,1)" fg:x="26" fg:w="1"/><text x="2.3350%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="2.0850%" y="245" width="0.0802%" height="15" fill="rgb(216,205,24)" fg:x="26" fg:w="1"/><text x="2.3350%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="2.0850%" y="229" width="0.0802%" height="15" fill="rgb(233,24,6)" fg:x="26" fg:w="1"/><text x="2.3350%" y="239.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="2.1652%" y="565" width="0.0802%" height="15" fill="rgb(244,110,9)" fg:x="27" fg:w="1"/><text x="2.4152%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.1652%" y="549" width="0.0802%" height="15" fill="rgb(239,222,42)" fg:x="27" fg:w="1"/><text x="2.4152%" y="559.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="2.2454%" y="501" width="0.2406%" height="15" fill="rgb(218,145,13)" fg:x="28" fg:w="3"/><text x="2.4954%" y="511.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="2.2454%" y="485" width="0.2406%" height="15" fill="rgb(207,69,11)" fg:x="28" fg:w="3"/><text x="2.4954%" y="495.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="2.4058%" y="469" width="0.0802%" height="15" fill="rgb(220,223,22)" fg:x="30" fg:w="1"/><text x="2.6558%" y="479.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="2.5662%" y="453" width="0.0802%" height="15" fill="rgb(245,102,5)" fg:x="32" fg:w="1"/><text x="2.8162%" y="463.50"></text></g><g><title>libloading::os::unix::Library::open (12 samples, 0.96%)</title><rect x="2.2454%" y="517" width="0.9623%" height="15" fill="rgb(211,148,2)" fg:x="28" fg:w="12"/><text x="2.4954%" y="527.50"></text></g><g><title>dlopen (9 samples, 0.72%)</title><rect x="2.4860%" y="501" width="0.7217%" height="15" fill="rgb(241,13,44)" fg:x="31" fg:w="9"/><text x="2.7360%" y="511.50"></text></g><g><title>_dl_catch_error (9 samples, 0.72%)</title><rect x="2.4860%" y="485" width="0.7217%" height="15" fill="rgb(219,137,21)" fg:x="31" fg:w="9"/><text x="2.7360%" y="495.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="2.4860%" y="469" width="0.7217%" height="15" fill="rgb(242,206,5)" fg:x="31" fg:w="9"/><text x="2.7360%" y="479.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="2.6464%" y="453" width="0.5613%" height="15" fill="rgb(217,114,22)" fg:x="33" fg:w="7"/><text x="2.8964%" y="463.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="2.7265%" y="437" width="0.4812%" height="15" fill="rgb(253,206,42)" fg:x="34" fg:w="6"/><text x="2.9765%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (13 samples, 1.04%)</title><rect x="2.2454%" y="533" width="1.0425%" height="15" fill="rgb(236,102,18)" fg:x="28" fg:w="13"/><text x="2.4954%" y="543.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="3.2077%" y="517" width="0.0802%" height="15" fill="rgb(208,59,49)" fg:x="40" fg:w="1"/><text x="3.4577%" y="527.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="3.2077%" y="501" width="0.0802%" height="15" fill="rgb(215,194,28)" fg:x="40" fg:w="1"/><text x="3.4577%" y="511.50"></text></g><g><title>engine::session::Session::initialize (15 samples, 1.20%)</title><rect x="2.2454%" y="565" width="1.2029%" height="15" fill="rgb(243,207,11)" fg:x="28" fg:w="15"/><text x="2.4954%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (15 samples, 1.20%)</title><rect x="2.2454%" y="549" width="1.2029%" height="15" fill="rgb(254,179,35)" fg:x="28" fg:w="15"/><text x="2.4954%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="3.2879%" y="533" width="0.1604%" height="15" fill="rgb(235,97,3)" fg:x="41" fg:w="2"/><text x="3.5379%" y="543.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="3.3681%" y="517" width="0.0802%" height="15" fill="rgb(215,155,33)" fg:x="42" fg:w="1"/><text x="3.6181%" y="527.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (33 samples, 2.65%)</title><rect x="0.8821%" y="597" width="2.6464%" height="15" fill="rgb(223,128,12)" fg:x="11" fg:w="33"/><text x="1.1321%" y="607.50">&lt;e..</text></g><g><title>engine::session::Session::new (33 samples, 2.65%)</title><rect x="0.8821%" y="581" width="2.6464%" height="15" fill="rgb(208,157,18)" fg:x="11" fg:w="33"/><text x="1.1321%" y="591.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="3.4483%" y="565" width="0.0802%" height="15" fill="rgb(249,70,54)" fg:x="43" fg:w="1"/><text x="3.6983%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="3.4483%" y="549" width="0.0802%" height="15" fill="rgb(244,118,24)" fg:x="43" fg:w="1"/><text x="3.6983%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.4483%" y="533" width="0.0802%" height="15" fill="rgb(211,54,0)" fg:x="43" fg:w="1"/><text x="3.6983%" y="543.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="3.4483%" y="517" width="0.0802%" height="15" fill="rgb(245,137,45)" fg:x="43" fg:w="1"/><text x="3.6983%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="3.4483%" y="501" width="0.0802%" height="15" fill="rgb(232,154,31)" fg:x="43" fg:w="1"/><text x="3.6983%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.5285%" y="581" width="0.0802%" height="15" fill="rgb(253,6,39)" fg:x="44" fg:w="1"/><text x="3.7785%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="3.6087%" y="581" width="0.0802%" height="15" fill="rgb(234,183,24)" fg:x="45" fg:w="1"/><text x="3.8587%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.6087%" y="565" width="0.0802%" height="15" fill="rgb(252,84,40)" fg:x="45" fg:w="1"/><text x="3.8587%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.6087%" y="549" width="0.0802%" height="15" fill="rgb(224,65,2)" fg:x="45" fg:w="1"/><text x="3.8587%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6087%" y="533" width="0.0802%" height="15" fill="rgb(229,38,24)" fg:x="45" fg:w="1"/><text x="3.8587%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="3.6889%" y="549" width="0.0802%" height="15" fill="rgb(218,131,50)" fg:x="46" fg:w="1"/><text x="3.9389%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6889%" y="533" width="0.0802%" height="15" fill="rgb(233,106,18)" fg:x="46" fg:w="1"/><text x="3.9389%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.7690%" y="549" width="0.0802%" height="15" fill="rgb(220,216,11)" fg:x="47" fg:w="1"/><text x="4.0190%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="3.7690%" y="533" width="0.0802%" height="15" fill="rgb(251,100,45)" fg:x="47" fg:w="1"/><text x="4.0190%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="3.7690%" y="517" width="0.0802%" height="15" fill="rgb(235,143,32)" fg:x="47" fg:w="1"/><text x="4.0190%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="3.9294%" y="533" width="0.1604%" height="15" fill="rgb(248,124,34)" fg:x="49" fg:w="2"/><text x="4.1794%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="3.9294%" y="517" width="0.1604%" height="15" fill="rgb(225,221,4)" fg:x="49" fg:w="2"/><text x="4.1794%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.0096%" y="501" width="0.0802%" height="15" fill="rgb(242,27,43)" fg:x="50" fg:w="1"/><text x="4.2596%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.3304%" y="437" width="0.1604%" height="15" fill="rgb(227,54,8)" fg:x="54" fg:w="2"/><text x="4.5804%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.4106%" y="421" width="0.0802%" height="15" fill="rgb(253,139,49)" fg:x="55" fg:w="1"/><text x="4.6606%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.4106%" y="405" width="0.0802%" height="15" fill="rgb(231,26,43)" fg:x="55" fg:w="1"/><text x="4.6606%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.4106%" y="389" width="0.0802%" height="15" fill="rgb(207,121,39)" fg:x="55" fg:w="1"/><text x="4.6606%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="4.0898%" y="485" width="0.4812%" height="15" fill="rgb(223,101,35)" fg:x="51" fg:w="6"/><text x="4.3398%" y="495.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="4.0898%" y="469" width="0.4812%" height="15" fill="rgb(232,87,23)" fg:x="51" fg:w="6"/><text x="4.3398%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="4.2502%" y="453" width="0.3208%" height="15" fill="rgb(225,180,29)" fg:x="53" fg:w="4"/><text x="4.5002%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="4.4908%" y="437" width="0.0802%" height="15" fill="rgb(225,25,17)" fg:x="56" fg:w="1"/><text x="4.7408%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (11 samples, 0.88%)</title><rect x="4.0898%" y="501" width="0.8821%" height="15" fill="rgb(223,8,52)" fg:x="51" fg:w="11"/><text x="4.3398%" y="511.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="4.5710%" y="485" width="0.4010%" height="15" fill="rgb(246,42,21)" fg:x="57" fg:w="5"/><text x="4.8210%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="4.7314%" y="469" width="0.2406%" height="15" fill="rgb(205,64,43)" fg:x="59" fg:w="3"/><text x="4.9814%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.8917%" y="453" width="0.0802%" height="15" fill="rgb(221,160,13)" fg:x="61" fg:w="1"/><text x="5.1417%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.2927%" y="437" width="0.0802%" height="15" fill="rgb(239,58,35)" fg:x="66" fg:w="1"/><text x="5.5427%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="5.1323%" y="485" width="0.3208%" height="15" fill="rgb(251,26,40)" fg:x="64" fg:w="4"/><text x="5.3823%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.2125%" y="469" width="0.2406%" height="15" fill="rgb(247,0,4)" fg:x="65" fg:w="3"/><text x="5.4625%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.2125%" y="453" width="0.2406%" height="15" fill="rgb(218,130,10)" fg:x="65" fg:w="3"/><text x="5.4625%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="5.3729%" y="437" width="0.0802%" height="15" fill="rgb(239,32,7)" fg:x="67" fg:w="1"/><text x="5.6229%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="5.6135%" y="437" width="0.3208%" height="15" fill="rgb(210,192,24)" fg:x="70" fg:w="4"/><text x="5.8635%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.6135%" y="421" width="0.3208%" height="15" fill="rgb(226,212,17)" fg:x="70" fg:w="4"/><text x="5.8635%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.9342%" y="437" width="0.0802%" height="15" fill="rgb(219,201,28)" fg:x="74" fg:w="1"/><text x="6.1842%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.9342%" y="421" width="0.0802%" height="15" fill="rgb(235,207,41)" fg:x="74" fg:w="1"/><text x="6.1842%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.9342%" y="405" width="0.0802%" height="15" fill="rgb(241,95,54)" fg:x="74" fg:w="1"/><text x="6.1842%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.9342%" y="389" width="0.0802%" height="15" fill="rgb(248,12,23)" fg:x="74" fg:w="1"/><text x="6.1842%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="5.9342%" y="373" width="0.0802%" height="15" fill="rgb(228,173,4)" fg:x="74" fg:w="1"/><text x="6.1842%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="5.6135%" y="469" width="0.4812%" height="15" fill="rgb(254,99,5)" fg:x="70" fg:w="6"/><text x="5.8635%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="5.6135%" y="453" width="0.4812%" height="15" fill="rgb(212,184,17)" fg:x="70" fg:w="6"/><text x="5.8635%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.0144%" y="437" width="0.0802%" height="15" fill="rgb(252,174,1)" fg:x="75" fg:w="1"/><text x="6.2644%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="6.0946%" y="469" width="0.5613%" height="15" fill="rgb(241,118,51)" fg:x="76" fg:w="7"/><text x="6.3446%" y="479.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="6.2550%" y="453" width="0.4010%" height="15" fill="rgb(227,94,47)" fg:x="78" fg:w="5"/><text x="6.5050%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.4956%" y="437" width="0.1604%" height="15" fill="rgb(229,104,2)" fg:x="81" fg:w="2"/><text x="6.7456%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.4956%" y="421" width="0.1604%" height="15" fill="rgb(219,28,31)" fg:x="81" fg:w="2"/><text x="6.7456%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="6.6560%" y="453" width="0.4010%" height="15" fill="rgb(233,109,36)" fg:x="83" fg:w="5"/><text x="6.9060%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="6.7362%" y="437" width="0.3208%" height="15" fill="rgb(246,88,11)" fg:x="84" fg:w="4"/><text x="6.9862%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.9767%" y="421" width="0.0802%" height="15" fill="rgb(209,212,17)" fg:x="87" fg:w="1"/><text x="7.2267%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.9767%" y="405" width="0.0802%" height="15" fill="rgb(243,59,29)" fg:x="87" fg:w="1"/><text x="7.2267%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.1371%" y="437" width="0.0802%" height="15" fill="rgb(244,205,48)" fg:x="89" fg:w="1"/><text x="7.3871%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.1371%" y="421" width="0.0802%" height="15" fill="rgb(227,30,6)" fg:x="89" fg:w="1"/><text x="7.3871%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.1371%" y="405" width="0.0802%" height="15" fill="rgb(220,205,48)" fg:x="89" fg:w="1"/><text x="7.3871%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="6.6560%" y="469" width="0.8019%" height="15" fill="rgb(250,94,14)" fg:x="83" fg:w="10"/><text x="6.9060%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="7.0569%" y="453" width="0.4010%" height="15" fill="rgb(216,119,42)" fg:x="88" fg:w="5"/><text x="7.3069%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.2173%" y="437" width="0.2406%" height="15" fill="rgb(232,155,0)" fg:x="90" fg:w="3"/><text x="7.4673%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.2173%" y="421" width="0.2406%" height="15" fill="rgb(212,24,32)" fg:x="90" fg:w="3"/><text x="7.4673%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.2975%" y="405" width="0.1604%" height="15" fill="rgb(216,69,20)" fg:x="91" fg:w="2"/><text x="7.5475%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.2975%" y="389" width="0.1604%" height="15" fill="rgb(229,73,31)" fg:x="91" fg:w="2"/><text x="7.5475%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.09%)</title><rect x="5.4531%" y="485" width="2.0850%" height="15" fill="rgb(224,219,20)" fg:x="68" fg:w="26"/><text x="5.7031%" y="495.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4579%" y="469" width="0.0802%" height="15" fill="rgb(215,146,41)" fg:x="93" fg:w="1"/><text x="7.7079%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.4579%" y="453" width="0.0802%" height="15" fill="rgb(244,71,31)" fg:x="93" fg:w="1"/><text x="7.7079%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.4579%" y="437" width="0.0802%" height="15" fill="rgb(224,24,11)" fg:x="93" fg:w="1"/><text x="7.7079%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.53%)</title><rect x="4.0898%" y="517" width="3.5285%" height="15" fill="rgb(229,76,15)" fg:x="51" fg:w="44"/><text x="4.3398%" y="527.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.65%)</title><rect x="4.9719%" y="501" width="2.6464%" height="15" fill="rgb(209,93,2)" fg:x="62" fg:w="33"/><text x="5.2219%" y="511.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.5381%" y="485" width="0.0802%" height="15" fill="rgb(216,200,50)" fg:x="94" fg:w="1"/><text x="7.7881%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.5381%" y="469" width="0.0802%" height="15" fill="rgb(211,67,34)" fg:x="94" fg:w="1"/><text x="7.7881%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.5381%" y="453" width="0.0802%" height="15" fill="rgb(225,87,47)" fg:x="94" fg:w="1"/><text x="7.7881%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.8589%" y="469" width="0.0802%" height="15" fill="rgb(217,185,16)" fg:x="98" fg:w="1"/><text x="8.1089%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.9391%" y="469" width="0.0802%" height="15" fill="rgb(205,0,0)" fg:x="99" fg:w="1"/><text x="8.1891%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0994%" y="453" width="0.0802%" height="15" fill="rgb(207,116,45)" fg:x="101" fg:w="1"/><text x="8.3494%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="8.1796%" y="453" width="0.1604%" height="15" fill="rgb(221,156,26)" fg:x="102" fg:w="2"/><text x="8.4296%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2598%" y="437" width="0.0802%" height="15" fill="rgb(213,140,4)" fg:x="103" fg:w="1"/><text x="8.5098%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="7.6183%" y="517" width="0.8019%" height="15" fill="rgb(231,224,15)" fg:x="95" fg:w="10"/><text x="7.8683%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="7.6183%" y="501" width="0.8019%" height="15" fill="rgb(244,76,20)" fg:x="95" fg:w="10"/><text x="7.8683%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="7.7787%" y="485" width="0.6415%" height="15" fill="rgb(238,117,7)" fg:x="97" fg:w="8"/><text x="8.0287%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="8.0192%" y="469" width="0.4010%" height="15" fill="rgb(235,1,10)" fg:x="100" fg:w="5"/><text x="8.2692%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.3400%" y="453" width="0.0802%" height="15" fill="rgb(216,165,6)" fg:x="104" fg:w="1"/><text x="8.5900%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="8.3400%" y="437" width="0.0802%" height="15" fill="rgb(246,91,35)" fg:x="104" fg:w="1"/><text x="8.5900%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.3400%" y="421" width="0.0802%" height="15" fill="rgb(228,96,24)" fg:x="104" fg:w="1"/><text x="8.5900%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="8.5806%" y="469" width="0.3208%" height="15" fill="rgb(254,217,53)" fg:x="107" fg:w="4"/><text x="8.8306%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.7410%" y="453" width="0.1604%" height="15" fill="rgb(209,60,0)" fg:x="109" fg:w="2"/><text x="8.9910%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="8.8212%" y="437" width="0.0802%" height="15" fill="rgb(250,93,26)" fg:x="110" fg:w="1"/><text x="9.0712%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="8.9014%" y="469" width="0.2406%" height="15" fill="rgb(211,9,40)" fg:x="111" fg:w="3"/><text x="9.1514%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="8.9816%" y="453" width="0.1604%" height="15" fill="rgb(242,57,20)" fg:x="112" fg:w="2"/><text x="9.2316%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.0617%" y="437" width="0.0802%" height="15" fill="rgb(248,85,48)" fg:x="113" fg:w="1"/><text x="9.3117%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.3023%" y="421" width="0.0802%" height="15" fill="rgb(212,117,2)" fg:x="116" fg:w="1"/><text x="9.5523%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.3023%" y="405" width="0.0802%" height="15" fill="rgb(243,19,3)" fg:x="116" fg:w="1"/><text x="9.5523%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.3023%" y="389" width="0.0802%" height="15" fill="rgb(232,217,24)" fg:x="116" fg:w="1"/><text x="9.5523%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4627%" y="325" width="0.0802%" height="15" fill="rgb(224,175,40)" fg:x="118" fg:w="1"/><text x="9.7127%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="9.3825%" y="405" width="0.2406%" height="15" fill="rgb(212,162,32)" fg:x="117" fg:w="3"/><text x="9.6325%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="9.3825%" y="389" width="0.2406%" height="15" fill="rgb(215,9,4)" fg:x="117" fg:w="3"/><text x="9.6325%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="9.3825%" y="373" width="0.2406%" height="15" fill="rgb(242,42,7)" fg:x="117" fg:w="3"/><text x="9.6325%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.4627%" y="357" width="0.1604%" height="15" fill="rgb(242,184,45)" fg:x="118" fg:w="2"/><text x="9.7127%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.4627%" y="341" width="0.1604%" height="15" fill="rgb(228,111,51)" fg:x="118" fg:w="2"/><text x="9.7127%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="9.5429%" y="325" width="0.0802%" height="15" fill="rgb(236,147,17)" fg:x="119" fg:w="1"/><text x="9.7929%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="9.5429%" y="309" width="0.0802%" height="15" fill="rgb(210,75,22)" fg:x="119" fg:w="1"/><text x="9.7929%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (7 samples, 0.56%)</title><rect x="9.1419%" y="469" width="0.5613%" height="15" fill="rgb(217,159,45)" fg:x="114" fg:w="7"/><text x="9.3919%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="9.2221%" y="453" width="0.4812%" height="15" fill="rgb(245,165,53)" fg:x="115" fg:w="6"/><text x="9.4721%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="9.2221%" y="437" width="0.4812%" height="15" fill="rgb(251,190,50)" fg:x="115" fg:w="6"/><text x="9.4721%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="9.3825%" y="421" width="0.3208%" height="15" fill="rgb(208,203,29)" fg:x="117" fg:w="4"/><text x="9.6325%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.6231%" y="405" width="0.0802%" height="15" fill="rgb(207,209,35)" fg:x="120" fg:w="1"/><text x="9.8731%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.0241%" y="421" width="0.0802%" height="15" fill="rgb(230,144,49)" fg:x="125" fg:w="1"/><text x="10.2741%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="10.1043%" y="389" width="0.0802%" height="15" fill="rgb(229,31,6)" fg:x="126" fg:w="1"/><text x="10.3543%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="10.1043%" y="421" width="0.1604%" height="15" fill="rgb(251,129,24)" fg:x="126" fg:w="2"/><text x="10.3543%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="10.1043%" y="405" width="0.1604%" height="15" fill="rgb(235,105,15)" fg:x="126" fg:w="2"/><text x="10.3543%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.1844%" y="389" width="0.0802%" height="15" fill="rgb(216,52,43)" fg:x="127" fg:w="1"/><text x="10.4344%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (25 samples, 2.00%)</title><rect x="8.4202%" y="501" width="2.0048%" height="15" fill="rgb(238,144,41)" fg:x="105" fg:w="25"/><text x="8.6702%" y="511.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.00%)</title><rect x="8.4202%" y="485" width="2.0048%" height="15" fill="rgb(243,63,9)" fg:x="105" fg:w="25"/><text x="8.6702%" y="495.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="9.7033%" y="469" width="0.7217%" height="15" fill="rgb(246,208,1)" fg:x="121" fg:w="9"/><text x="9.9533%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (7 samples, 0.56%)</title><rect x="9.8637%" y="453" width="0.5613%" height="15" fill="rgb(233,182,18)" fg:x="123" fg:w="7"/><text x="10.1137%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="10.0241%" y="437" width="0.4010%" height="15" fill="rgb(242,224,8)" fg:x="125" fg:w="5"/><text x="10.2741%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="10.2646%" y="421" width="0.1604%" height="15" fill="rgb(243,54,37)" fg:x="128" fg:w="2"/><text x="10.5146%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="10.2646%" y="405" width="0.1604%" height="15" fill="rgb(233,192,12)" fg:x="128" fg:w="2"/><text x="10.5146%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.3448%" y="389" width="0.0802%" height="15" fill="rgb(251,192,53)" fg:x="129" fg:w="1"/><text x="10.5948%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.3448%" y="373" width="0.0802%" height="15" fill="rgb(246,141,26)" fg:x="129" fg:w="1"/><text x="10.5948%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.3448%" y="357" width="0.0802%" height="15" fill="rgb(239,195,19)" fg:x="129" fg:w="1"/><text x="10.5948%" y="367.50"></text></g><g><title>kernel::compare::any_entity_changes (26 samples, 2.09%)</title><rect x="8.4202%" y="517" width="2.0850%" height="15" fill="rgb(241,16,39)" fg:x="105" fg:w="26"/><text x="8.6702%" y="527.50">k..</text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="10.4250%" y="501" width="0.0802%" height="15" fill="rgb(223,13,53)" fg:x="130" fg:w="1"/><text x="10.6750%" y="511.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="10.4250%" y="485" width="0.0802%" height="15" fill="rgb(214,227,0)" fg:x="130" fg:w="1"/><text x="10.6750%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.4250%" y="469" width="0.0802%" height="15" fill="rgb(228,103,26)" fg:x="130" fg:w="1"/><text x="10.6750%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (84 samples, 6.74%)</title><rect x="3.8492%" y="549" width="6.7362%" height="15" fill="rgb(254,177,53)" fg:x="48" fg:w="84"/><text x="4.0992%" y="559.50">engine::i..</text></g><g><title>engine::session::Session::check_for_changes (81 samples, 6.50%)</title><rect x="4.0898%" y="533" width="6.4956%" height="15" fill="rgb(208,201,34)" fg:x="51" fg:w="81"/><text x="4.3398%" y="543.50">engine::s..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="10.5052%" y="517" width="0.0802%" height="15" fill="rgb(212,39,5)" fg:x="131" fg:w="1"/><text x="10.7552%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5052%" y="501" width="0.0802%" height="15" fill="rgb(246,117,3)" fg:x="131" fg:w="1"/><text x="10.7552%" y="511.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="10.5854%" y="549" width="0.0802%" height="15" fill="rgb(244,118,39)" fg:x="132" fg:w="1"/><text x="10.8354%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="10.5854%" y="533" width="0.0802%" height="15" fill="rgb(241,64,10)" fg:x="132" fg:w="1"/><text x="10.8354%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="10.5854%" y="517" width="0.0802%" height="15" fill="rgb(229,39,44)" fg:x="132" fg:w="1"/><text x="10.8354%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="10.5854%" y="501" width="0.0802%" height="15" fill="rgb(230,226,3)" fg:x="132" fg:w="1"/><text x="10.8354%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="10.5854%" y="485" width="0.0802%" height="15" fill="rgb(222,13,42)" fg:x="132" fg:w="1"/><text x="10.8354%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="10.5854%" y="469" width="0.0802%" height="15" fill="rgb(247,180,54)" fg:x="132" fg:w="1"/><text x="10.8354%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.5854%" y="453" width="0.0802%" height="15" fill="rgb(205,96,16)" fg:x="132" fg:w="1"/><text x="10.8354%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="10.5854%" y="437" width="0.0802%" height="15" fill="rgb(205,100,21)" fg:x="132" fg:w="1"/><text x="10.8354%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="10.5854%" y="421" width="0.0802%" height="15" fill="rgb(248,51,4)" fg:x="132" fg:w="1"/><text x="10.8354%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="10.5854%" y="405" width="0.0802%" height="15" fill="rgb(217,197,30)" fg:x="132" fg:w="1"/><text x="10.8354%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.5854%" y="389" width="0.0802%" height="15" fill="rgb(240,179,40)" fg:x="132" fg:w="1"/><text x="10.8354%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="10.5854%" y="373" width="0.0802%" height="15" fill="rgb(212,185,35)" fg:x="132" fg:w="1"/><text x="10.8354%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="10.5854%" y="357" width="0.0802%" height="15" fill="rgb(251,222,31)" fg:x="132" fg:w="1"/><text x="10.8354%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="10.5854%" y="341" width="0.0802%" height="15" fill="rgb(208,140,36)" fg:x="132" fg:w="1"/><text x="10.8354%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.5854%" y="325" width="0.0802%" height="15" fill="rgb(220,148,1)" fg:x="132" fg:w="1"/><text x="10.8354%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.5854%" y="309" width="0.0802%" height="15" fill="rgb(254,4,28)" fg:x="132" fg:w="1"/><text x="10.8354%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.5854%" y="293" width="0.0802%" height="15" fill="rgb(222,185,44)" fg:x="132" fg:w="1"/><text x="10.8354%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="10.5854%" y="277" width="0.0802%" height="15" fill="rgb(215,74,39)" fg:x="132" fg:w="1"/><text x="10.8354%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="10.5854%" y="261" width="0.0802%" height="15" fill="rgb(247,86,4)" fg:x="132" fg:w="1"/><text x="10.8354%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="10.5854%" y="245" width="0.0802%" height="15" fill="rgb(231,105,32)" fg:x="132" fg:w="1"/><text x="10.8354%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="10.5854%" y="229" width="0.0802%" height="15" fill="rgb(222,65,35)" fg:x="132" fg:w="1"/><text x="10.8354%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.5854%" y="213" width="0.0802%" height="15" fill="rgb(218,145,35)" fg:x="132" fg:w="1"/><text x="10.8354%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.5854%" y="197" width="0.0802%" height="15" fill="rgb(208,7,15)" fg:x="132" fg:w="1"/><text x="10.8354%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.5854%" y="181" width="0.0802%" height="15" fill="rgb(209,83,13)" fg:x="132" fg:w="1"/><text x="10.8354%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="10.5854%" y="165" width="0.0802%" height="15" fill="rgb(218,3,10)" fg:x="132" fg:w="1"/><text x="10.8354%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.5854%" y="149" width="0.0802%" height="15" fill="rgb(211,219,4)" fg:x="132" fg:w="1"/><text x="10.8354%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="10.5854%" y="133" width="0.0802%" height="15" fill="rgb(228,194,12)" fg:x="132" fg:w="1"/><text x="10.8354%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="10.5854%" y="117" width="0.0802%" height="15" fill="rgb(210,175,7)" fg:x="132" fg:w="1"/><text x="10.8354%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="10.5854%" y="101" width="0.0802%" height="15" fill="rgb(243,132,6)" fg:x="132" fg:w="1"/><text x="10.8354%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.5854%" y="85" width="0.0802%" height="15" fill="rgb(207,72,18)" fg:x="132" fg:w="1"/><text x="10.8354%" y="95.50"></text></g><g><title>engine::session::Session::flush (88 samples, 7.06%)</title><rect x="3.6889%" y="581" width="7.0569%" height="15" fill="rgb(236,1,18)" fg:x="46" fg:w="88"/><text x="3.9389%" y="591.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (88 samples, 7.06%)</title><rect x="3.6889%" y="565" width="7.0569%" height="15" fill="rgb(227,0,18)" fg:x="46" fg:w="88"/><text x="3.9389%" y="575.50">engine::s..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="10.6656%" y="549" width="0.0802%" height="15" fill="rgb(247,37,5)" fg:x="133" fg:w="1"/><text x="10.9156%" y="559.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="10.6656%" y="533" width="0.0802%" height="15" fill="rgb(237,179,24)" fg:x="133" fg:w="1"/><text x="10.9156%" y="543.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="10.6656%" y="517" width="0.0802%" height="15" fill="rgb(226,53,20)" fg:x="133" fg:w="1"/><text x="10.9156%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="10.6656%" y="501" width="0.0802%" height="15" fill="rgb(247,75,7)" fg:x="133" fg:w="1"/><text x="10.9156%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="10.6656%" y="485" width="0.0802%" height="15" fill="rgb(233,96,12)" fg:x="133" fg:w="1"/><text x="10.9156%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="10.6656%" y="469" width="0.0802%" height="15" fill="rgb(224,125,0)" fg:x="133" fg:w="1"/><text x="10.9156%" y="479.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="10.6656%" y="453" width="0.0802%" height="15" fill="rgb(224,92,25)" fg:x="133" fg:w="1"/><text x="10.9156%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.8260%" y="517" width="0.0802%" height="15" fill="rgb(224,42,24)" fg:x="135" fg:w="1"/><text x="11.0760%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9062%" y="517" width="0.0802%" height="15" fill="rgb(234,132,49)" fg:x="136" fg:w="1"/><text x="11.1562%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9062%" y="501" width="0.0802%" height="15" fill="rgb(248,100,35)" fg:x="136" fg:w="1"/><text x="11.1562%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="10.9062%" y="485" width="0.0802%" height="15" fill="rgb(239,94,40)" fg:x="136" fg:w="1"/><text x="11.1562%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="10.7458%" y="549" width="0.3208%" height="15" fill="rgb(235,139,28)" fg:x="134" fg:w="4"/><text x="10.9958%" y="559.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="10.8260%" y="533" width="0.2406%" height="15" fill="rgb(217,144,7)" fg:x="135" fg:w="3"/><text x="11.0760%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9864%" y="517" width="0.0802%" height="15" fill="rgb(227,55,4)" fg:x="137" fg:w="1"/><text x="11.2364%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9864%" y="501" width="0.0802%" height="15" fill="rgb(252,82,54)" fg:x="137" fg:w="1"/><text x="11.2364%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.9864%" y="485" width="0.0802%" height="15" fill="rgb(245,172,4)" fg:x="137" fg:w="1"/><text x="11.2364%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9864%" y="469" width="0.0802%" height="15" fill="rgb(207,26,27)" fg:x="137" fg:w="1"/><text x="11.2364%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9864%" y="453" width="0.0802%" height="15" fill="rgb(252,98,18)" fg:x="137" fg:w="1"/><text x="11.2364%" y="463.50"></text></g><g><title>plugins_core::build::Build::holding (5 samples, 0.40%)</title><rect x="10.7458%" y="581" width="0.4010%" height="15" fill="rgb(244,8,26)" fg:x="134" fg:w="5"/><text x="10.9958%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="10.7458%" y="565" width="0.4010%" height="15" fill="rgb(237,173,45)" fg:x="134" fg:w="5"/><text x="10.9958%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="11.0666%" y="549" width="0.0802%" height="15" fill="rgb(208,213,49)" fg:x="138" fg:w="1"/><text x="11.3166%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="11.0666%" y="533" width="0.0802%" height="15" fill="rgb(212,122,37)" fg:x="138" fg:w="1"/><text x="11.3166%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.0666%" y="517" width="0.0802%" height="15" fill="rgb(213,80,17)" fg:x="138" fg:w="1"/><text x="11.3166%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0666%" y="501" width="0.0802%" height="15" fill="rgb(206,210,43)" fg:x="138" fg:w="1"/><text x="11.3166%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="11.1468%" y="533" width="0.0802%" height="15" fill="rgb(229,214,3)" fg:x="139" fg:w="1"/><text x="11.3968%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="11.1468%" y="517" width="0.0802%" height="15" fill="rgb(235,213,29)" fg:x="139" fg:w="1"/><text x="11.3968%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="11.1468%" y="581" width="0.1604%" height="15" fill="rgb(248,135,26)" fg:x="139" fg:w="2"/><text x="11.3968%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="11.1468%" y="565" width="0.1604%" height="15" fill="rgb(242,188,12)" fg:x="139" fg:w="2"/><text x="11.3968%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="11.1468%" y="549" width="0.1604%" height="15" fill="rgb(245,38,12)" fg:x="139" fg:w="2"/><text x="11.3968%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="11.2269%" y="533" width="0.0802%" height="15" fill="rgb(218,42,13)" fg:x="140" fg:w="1"/><text x="11.4769%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="11.2269%" y="517" width="0.0802%" height="15" fill="rgb(238,132,49)" fg:x="140" fg:w="1"/><text x="11.4769%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.2269%" y="501" width="0.0802%" height="15" fill="rgb(209,196,19)" fg:x="140" fg:w="1"/><text x="11.4769%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.2269%" y="485" width="0.0802%" height="15" fill="rgb(244,131,22)" fg:x="140" fg:w="1"/><text x="11.4769%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.2269%" y="469" width="0.0802%" height="15" fill="rgb(223,18,34)" fg:x="140" fg:w="1"/><text x="11.4769%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="11.2269%" y="453" width="0.0802%" height="15" fill="rgb(252,124,54)" fg:x="140" fg:w="1"/><text x="11.4769%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.2269%" y="437" width="0.0802%" height="15" fill="rgb(229,106,42)" fg:x="140" fg:w="1"/><text x="11.4769%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.2269%" y="421" width="0.0802%" height="15" fill="rgb(221,129,1)" fg:x="140" fg:w="1"/><text x="11.4769%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.2269%" y="405" width="0.0802%" height="15" fill="rgb(229,74,15)" fg:x="140" fg:w="1"/><text x="11.4769%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.2269%" y="389" width="0.0802%" height="15" fill="rgb(210,206,50)" fg:x="140" fg:w="1"/><text x="11.4769%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="11.2269%" y="373" width="0.0802%" height="15" fill="rgb(251,114,31)" fg:x="140" fg:w="1"/><text x="11.4769%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="11.2269%" y="357" width="0.0802%" height="15" fill="rgb(215,225,28)" fg:x="140" fg:w="1"/><text x="11.4769%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="11.2269%" y="341" width="0.0802%" height="15" fill="rgb(237,109,14)" fg:x="140" fg:w="1"/><text x="11.4769%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="11.2269%" y="325" width="0.0802%" height="15" fill="rgb(230,13,37)" fg:x="140" fg:w="1"/><text x="11.4769%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="11.2269%" y="309" width="0.0802%" height="15" fill="rgb(231,40,28)" fg:x="140" fg:w="1"/><text x="11.4769%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4675%" y="517" width="0.0802%" height="15" fill="rgb(231,202,18)" fg:x="143" fg:w="1"/><text x="11.7175%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4675%" y="501" width="0.0802%" height="15" fill="rgb(225,33,18)" fg:x="143" fg:w="1"/><text x="11.7175%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.4675%" y="485" width="0.0802%" height="15" fill="rgb(223,64,47)" fg:x="143" fg:w="1"/><text x="11.7175%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.4675%" y="469" width="0.0802%" height="15" fill="rgb(234,114,13)" fg:x="143" fg:w="1"/><text x="11.7175%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.4675%" y="453" width="0.0802%" height="15" fill="rgb(248,56,40)" fg:x="143" fg:w="1"/><text x="11.7175%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="11.4675%" y="437" width="0.0802%" height="15" fill="rgb(221,194,21)" fg:x="143" fg:w="1"/><text x="11.7175%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="11.4675%" y="421" width="0.0802%" height="15" fill="rgb(242,108,46)" fg:x="143" fg:w="1"/><text x="11.7175%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="11.4675%" y="565" width="0.1604%" height="15" fill="rgb(220,106,10)" fg:x="143" fg:w="2"/><text x="11.7175%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="11.4675%" y="549" width="0.1604%" height="15" fill="rgb(211,88,4)" fg:x="143" fg:w="2"/><text x="11.7175%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="11.4675%" y="533" width="0.1604%" height="15" fill="rgb(214,95,34)" fg:x="143" fg:w="2"/><text x="11.7175%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5477%" y="517" width="0.0802%" height="15" fill="rgb(250,160,33)" fg:x="144" fg:w="1"/><text x="11.7977%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.7081%" y="517" width="0.0802%" height="15" fill="rgb(225,29,10)" fg:x="146" fg:w="1"/><text x="11.9581%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="11.7883%" y="501" width="0.0802%" height="15" fill="rgb(224,28,30)" fg:x="147" fg:w="1"/><text x="12.0383%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="11.7883%" y="485" width="0.0802%" height="15" fill="rgb(231,77,4)" fg:x="147" fg:w="1"/><text x="12.0383%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="11.7883%" y="469" width="0.0802%" height="15" fill="rgb(209,63,21)" fg:x="147" fg:w="1"/><text x="12.0383%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="11.7883%" y="453" width="0.0802%" height="15" fill="rgb(226,22,11)" fg:x="147" fg:w="1"/><text x="12.0383%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.7883%" y="437" width="0.0802%" height="15" fill="rgb(216,82,30)" fg:x="147" fg:w="1"/><text x="12.0383%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.7883%" y="421" width="0.0802%" height="15" fill="rgb(246,227,38)" fg:x="147" fg:w="1"/><text x="12.0383%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.7883%" y="405" width="0.0802%" height="15" fill="rgb(251,203,53)" fg:x="147" fg:w="1"/><text x="12.0383%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="11.7883%" y="389" width="0.0802%" height="15" fill="rgb(254,101,1)" fg:x="147" fg:w="1"/><text x="12.0383%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="11.8685%" y="501" width="0.0802%" height="15" fill="rgb(241,180,5)" fg:x="148" fg:w="1"/><text x="12.1185%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="11.8685%" y="485" width="0.0802%" height="15" fill="rgb(218,168,4)" fg:x="148" fg:w="1"/><text x="12.1185%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8685%" y="469" width="0.0802%" height="15" fill="rgb(224,223,32)" fg:x="148" fg:w="1"/><text x="12.1185%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="11.6279%" y="565" width="0.4010%" height="15" fill="rgb(236,106,22)" fg:x="145" fg:w="5"/><text x="11.8779%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="11.6279%" y="549" width="0.4010%" height="15" fill="rgb(206,121,5)" fg:x="145" fg:w="5"/><text x="11.8779%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="11.7081%" y="533" width="0.3208%" height="15" fill="rgb(233,87,28)" fg:x="146" fg:w="4"/><text x="11.9581%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (3 samples, 0.24%)</title><rect x="11.7883%" y="517" width="0.2406%" height="15" fill="rgb(236,137,17)" fg:x="147" fg:w="3"/><text x="12.0383%" y="527.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="11.9487%" y="501" width="0.0802%" height="15" fill="rgb(209,183,38)" fg:x="149" fg:w="1"/><text x="12.1987%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="11.9487%" y="485" width="0.0802%" height="15" fill="rgb(206,162,44)" fg:x="149" fg:w="1"/><text x="12.1987%" y="495.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="11.9487%" y="469" width="0.0802%" height="15" fill="rgb(237,70,39)" fg:x="149" fg:w="1"/><text x="12.1987%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="11.9487%" y="453" width="0.0802%" height="15" fill="rgb(212,176,5)" fg:x="149" fg:w="1"/><text x="12.1987%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.9487%" y="437" width="0.0802%" height="15" fill="rgb(232,95,16)" fg:x="149" fg:w="1"/><text x="12.1987%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="11.9487%" y="421" width="0.0802%" height="15" fill="rgb(219,115,35)" fg:x="149" fg:w="1"/><text x="12.1987%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.9487%" y="405" width="0.0802%" height="15" fill="rgb(251,67,27)" fg:x="149" fg:w="1"/><text x="12.1987%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9487%" y="389" width="0.0802%" height="15" fill="rgb(222,95,40)" fg:x="149" fg:w="1"/><text x="12.1987%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="12.0289%" y="565" width="0.0802%" height="15" fill="rgb(250,35,16)" fg:x="150" fg:w="1"/><text x="12.2789%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="12.0289%" y="549" width="0.0802%" height="15" fill="rgb(224,86,44)" fg:x="150" fg:w="1"/><text x="12.2789%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0289%" y="533" width="0.0802%" height="15" fill="rgb(237,53,53)" fg:x="150" fg:w="1"/><text x="12.2789%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.1893%" y="533" width="0.0802%" height="15" fill="rgb(208,171,33)" fg:x="152" fg:w="1"/><text x="12.4393%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1893%" y="517" width="0.0802%" height="15" fill="rgb(222,64,27)" fg:x="152" fg:w="1"/><text x="12.4393%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1893%" y="501" width="0.0802%" height="15" fill="rgb(221,121,35)" fg:x="152" fg:w="1"/><text x="12.4393%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2694%" y="437" width="0.0802%" height="15" fill="rgb(228,137,42)" fg:x="153" fg:w="1"/><text x="12.5194%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2694%" y="421" width="0.0802%" height="15" fill="rgb(227,54,21)" fg:x="153" fg:w="1"/><text x="12.5194%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.2694%" y="405" width="0.0802%" height="15" fill="rgb(240,168,33)" fg:x="153" fg:w="1"/><text x="12.5194%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.2694%" y="389" width="0.0802%" height="15" fill="rgb(243,159,6)" fg:x="153" fg:w="1"/><text x="12.5194%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.2694%" y="373" width="0.0802%" height="15" fill="rgb(205,211,41)" fg:x="153" fg:w="1"/><text x="12.5194%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.2694%" y="357" width="0.0802%" height="15" fill="rgb(253,30,1)" fg:x="153" fg:w="1"/><text x="12.5194%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2694%" y="341" width="0.0802%" height="15" fill="rgb(226,80,18)" fg:x="153" fg:w="1"/><text x="12.5194%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="12.2694%" y="533" width="0.1604%" height="15" fill="rgb(253,156,46)" fg:x="153" fg:w="2"/><text x="12.5194%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="12.2694%" y="517" width="0.1604%" height="15" fill="rgb(248,87,27)" fg:x="153" fg:w="2"/><text x="12.5194%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="12.2694%" y="501" width="0.1604%" height="15" fill="rgb(227,122,2)" fg:x="153" fg:w="2"/><text x="12.5194%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="12.2694%" y="485" width="0.1604%" height="15" fill="rgb(229,94,39)" fg:x="153" fg:w="2"/><text x="12.5194%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="12.2694%" y="469" width="0.1604%" height="15" fill="rgb(225,173,31)" fg:x="153" fg:w="2"/><text x="12.5194%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="12.2694%" y="453" width="0.1604%" height="15" fill="rgb(239,176,30)" fg:x="153" fg:w="2"/><text x="12.5194%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="12.3496%" y="437" width="0.0802%" height="15" fill="rgb(212,104,21)" fg:x="154" fg:w="1"/><text x="12.5996%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.3496%" y="421" width="0.0802%" height="15" fill="rgb(240,209,40)" fg:x="154" fg:w="1"/><text x="12.5996%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="12.4298%" y="501" width="0.1604%" height="15" fill="rgb(234,195,5)" fg:x="155" fg:w="2"/><text x="12.6798%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="12.4298%" y="533" width="0.2406%" height="15" fill="rgb(238,213,1)" fg:x="155" fg:w="3"/><text x="12.6798%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="12.4298%" y="517" width="0.2406%" height="15" fill="rgb(235,182,54)" fg:x="155" fg:w="3"/><text x="12.6798%" y="527.50"></text></g><g><title>engine::session::Session::save_entity (1 samples, 0.08%)</title><rect x="12.5902%" y="501" width="0.0802%" height="15" fill="rgb(229,50,46)" fg:x="157" fg:w="1"/><text x="12.8402%" y="511.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="12.5902%" y="485" width="0.0802%" height="15" fill="rgb(219,145,13)" fg:x="157" fg:w="1"/><text x="12.8402%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="12.6704%" y="517" width="0.1604%" height="15" fill="rgb(220,226,10)" fg:x="158" fg:w="2"/><text x="12.9204%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="12.6704%" y="501" width="0.1604%" height="15" fill="rgb(248,47,30)" fg:x="158" fg:w="2"/><text x="12.9204%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7506%" y="485" width="0.0802%" height="15" fill="rgb(231,209,44)" fg:x="159" fg:w="1"/><text x="13.0006%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7506%" y="469" width="0.0802%" height="15" fill="rgb(209,80,30)" fg:x="159" fg:w="1"/><text x="13.0006%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.7506%" y="453" width="0.0802%" height="15" fill="rgb(232,9,14)" fg:x="159" fg:w="1"/><text x="13.0006%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.7506%" y="437" width="0.0802%" height="15" fill="rgb(243,91,43)" fg:x="159" fg:w="1"/><text x="13.0006%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.7506%" y="421" width="0.0802%" height="15" fill="rgb(231,90,52)" fg:x="159" fg:w="1"/><text x="13.0006%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7506%" y="405" width="0.0802%" height="15" fill="rgb(253,192,44)" fg:x="159" fg:w="1"/><text x="13.0006%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7506%" y="389" width="0.0802%" height="15" fill="rgb(241,66,31)" fg:x="159" fg:w="1"/><text x="13.0006%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.7506%" y="373" width="0.0802%" height="15" fill="rgb(235,81,37)" fg:x="159" fg:w="1"/><text x="13.0006%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.7506%" y="357" width="0.0802%" height="15" fill="rgb(223,221,9)" fg:x="159" fg:w="1"/><text x="13.0006%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.7506%" y="341" width="0.0802%" height="15" fill="rgb(242,180,7)" fg:x="159" fg:w="1"/><text x="13.0006%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.7506%" y="325" width="0.0802%" height="15" fill="rgb(243,78,19)" fg:x="159" fg:w="1"/><text x="13.0006%" y="335.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.24%)</title><rect x="12.6704%" y="533" width="0.2406%" height="15" fill="rgb(233,23,17)" fg:x="158" fg:w="3"/><text x="12.9204%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="12.8308%" y="517" width="0.0802%" height="15" fill="rgb(252,122,45)" fg:x="160" fg:w="1"/><text x="13.0808%" y="527.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="12.8308%" y="501" width="0.0802%" height="15" fill="rgb(247,108,20)" fg:x="160" fg:w="1"/><text x="13.0808%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8308%" y="485" width="0.0802%" height="15" fill="rgb(235,84,21)" fg:x="160" fg:w="1"/><text x="13.0808%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.8308%" y="469" width="0.0802%" height="15" fill="rgb(247,129,10)" fg:x="160" fg:w="1"/><text x="13.0808%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8308%" y="453" width="0.0802%" height="15" fill="rgb(208,173,14)" fg:x="160" fg:w="1"/><text x="13.0808%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="12.9110%" y="469" width="0.4812%" height="15" fill="rgb(236,31,38)" fg:x="161" fg:w="6"/><text x="13.1610%" y="479.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="12.9110%" y="453" width="0.4812%" height="15" fill="rgb(232,65,17)" fg:x="161" fg:w="6"/><text x="13.1610%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="12.9912%" y="437" width="0.4010%" height="15" fill="rgb(224,45,49)" fg:x="162" fg:w="5"/><text x="13.2412%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="13.1516%" y="421" width="0.2406%" height="15" fill="rgb(225,2,53)" fg:x="164" fg:w="3"/><text x="13.4016%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.2318%" y="405" width="0.1604%" height="15" fill="rgb(248,210,53)" fg:x="165" fg:w="2"/><text x="13.4818%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="13.2318%" y="389" width="0.1604%" height="15" fill="rgb(211,1,30)" fg:x="165" fg:w="2"/><text x="13.4818%" y="399.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="13.2318%" y="373" width="0.1604%" height="15" fill="rgb(224,96,15)" fg:x="165" fg:w="2"/><text x="13.4818%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="12.9110%" y="485" width="0.6415%" height="15" fill="rgb(252,45,11)" fg:x="161" fg:w="8"/><text x="13.1610%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.3921%" y="469" width="0.1604%" height="15" fill="rgb(220,125,38)" fg:x="167" fg:w="2"/><text x="13.6421%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.3921%" y="453" width="0.1604%" height="15" fill="rgb(243,161,33)" fg:x="167" fg:w="2"/><text x="13.6421%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.4723%" y="437" width="0.0802%" height="15" fill="rgb(248,197,34)" fg:x="168" fg:w="1"/><text x="13.7223%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="13.7931%" y="469" width="0.2406%" height="15" fill="rgb(228,165,23)" fg:x="172" fg:w="3"/><text x="14.0431%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.8733%" y="453" width="0.1604%" height="15" fill="rgb(236,94,38)" fg:x="173" fg:w="2"/><text x="14.1233%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.8733%" y="437" width="0.1604%" height="15" fill="rgb(220,13,23)" fg:x="173" fg:w="2"/><text x="14.1233%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.9535%" y="421" width="0.0802%" height="15" fill="rgb(234,26,39)" fg:x="174" fg:w="1"/><text x="14.2035%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.9535%" y="405" width="0.0802%" height="15" fill="rgb(205,117,44)" fg:x="174" fg:w="1"/><text x="14.2035%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.9535%" y="389" width="0.0802%" height="15" fill="rgb(250,42,2)" fg:x="174" fg:w="1"/><text x="14.2035%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.9535%" y="373" width="0.0802%" height="15" fill="rgb(223,83,14)" fg:x="174" fg:w="1"/><text x="14.2035%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="14.0337%" y="421" width="0.2406%" height="15" fill="rgb(241,147,50)" fg:x="175" fg:w="3"/><text x="14.2837%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.0337%" y="405" width="0.2406%" height="15" fill="rgb(218,90,6)" fg:x="175" fg:w="3"/><text x="14.2837%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.1941%" y="389" width="0.0802%" height="15" fill="rgb(210,191,5)" fg:x="177" fg:w="1"/><text x="14.4441%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.1941%" y="373" width="0.0802%" height="15" fill="rgb(225,139,19)" fg:x="177" fg:w="1"/><text x="14.4441%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="14.0337%" y="453" width="0.3208%" height="15" fill="rgb(210,1,33)" fg:x="175" fg:w="4"/><text x="14.2837%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="14.0337%" y="437" width="0.3208%" height="15" fill="rgb(213,50,3)" fg:x="175" fg:w="4"/><text x="14.2837%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="14.2743%" y="421" width="0.0802%" height="15" fill="rgb(234,227,4)" fg:x="178" fg:w="1"/><text x="14.5243%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.2743%" y="405" width="0.0802%" height="15" fill="rgb(246,63,5)" fg:x="178" fg:w="1"/><text x="14.5243%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.2743%" y="389" width="0.0802%" height="15" fill="rgb(245,136,27)" fg:x="178" fg:w="1"/><text x="14.5243%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.2743%" y="373" width="0.0802%" height="15" fill="rgb(247,199,27)" fg:x="178" fg:w="1"/><text x="14.5243%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.2743%" y="357" width="0.0802%" height="15" fill="rgb(252,158,49)" fg:x="178" fg:w="1"/><text x="14.5243%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="14.3545%" y="453" width="0.1604%" height="15" fill="rgb(254,73,1)" fg:x="179" fg:w="2"/><text x="14.6045%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.4346%" y="437" width="0.0802%" height="15" fill="rgb(248,93,19)" fg:x="180" fg:w="1"/><text x="14.6846%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.4346%" y="421" width="0.0802%" height="15" fill="rgb(206,67,5)" fg:x="180" fg:w="1"/><text x="14.6846%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="14.4346%" y="405" width="0.0802%" height="15" fill="rgb(209,210,4)" fg:x="180" fg:w="1"/><text x="14.6846%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="14.6752%" y="437" width="0.3208%" height="15" fill="rgb(214,185,36)" fg:x="183" fg:w="4"/><text x="14.9252%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="14.6752%" y="421" width="0.3208%" height="15" fill="rgb(233,191,26)" fg:x="183" fg:w="4"/><text x="14.9252%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="14.7554%" y="405" width="0.2406%" height="15" fill="rgb(248,94,17)" fg:x="184" fg:w="3"/><text x="15.0054%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="14.7554%" y="389" width="0.2406%" height="15" fill="rgb(250,64,4)" fg:x="184" fg:w="3"/><text x="15.0054%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="15.0762%" y="421" width="0.4010%" height="15" fill="rgb(218,41,53)" fg:x="188" fg:w="5"/><text x="15.3262%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="15.2366%" y="405" width="0.2406%" height="15" fill="rgb(251,176,28)" fg:x="190" fg:w="3"/><text x="15.4866%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.3970%" y="389" width="0.0802%" height="15" fill="rgb(247,22,9)" fg:x="192" fg:w="1"/><text x="15.6470%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3970%" y="373" width="0.0802%" height="15" fill="rgb(218,201,14)" fg:x="192" fg:w="1"/><text x="15.6470%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="14.5148%" y="453" width="1.0425%" height="15" fill="rgb(218,94,10)" fg:x="181" fg:w="13"/><text x="14.7648%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="14.9960%" y="437" width="0.5613%" height="15" fill="rgb(222,183,52)" fg:x="187" fg:w="7"/><text x="15.2460%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.4771%" y="421" width="0.0802%" height="15" fill="rgb(242,140,25)" fg:x="193" fg:w="1"/><text x="15.7271%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="14.0337%" y="469" width="1.8444%" height="15" fill="rgb(235,197,38)" fg:x="175" fg:w="23"/><text x="14.2837%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.5573%" y="453" width="0.3208%" height="15" fill="rgb(237,136,15)" fg:x="194" fg:w="4"/><text x="15.8073%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="15.6375%" y="437" width="0.2406%" height="15" fill="rgb(223,44,49)" fg:x="195" fg:w="3"/><text x="15.8875%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.7177%" y="421" width="0.1604%" height="15" fill="rgb(227,71,15)" fg:x="196" fg:w="2"/><text x="15.9677%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.97%)</title><rect x="13.5525%" y="485" width="2.9671%" height="15" fill="rgb(225,153,20)" fg:x="169" fg:w="37"/><text x="13.8025%" y="495.50">ser..</text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="15.8781%" y="469" width="0.6415%" height="15" fill="rgb(210,190,26)" fg:x="198" fg:w="8"/><text x="16.1281%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="16.0385%" y="453" width="0.4812%" height="15" fill="rgb(223,147,5)" fg:x="200" fg:w="6"/><text x="16.2885%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="16.0385%" y="437" width="0.4812%" height="15" fill="rgb(207,14,23)" fg:x="200" fg:w="6"/><text x="16.2885%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="16.2791%" y="421" width="0.2406%" height="15" fill="rgb(211,195,53)" fg:x="203" fg:w="3"/><text x="16.5291%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="16.2791%" y="405" width="0.2406%" height="15" fill="rgb(237,75,46)" fg:x="203" fg:w="3"/><text x="16.5291%" y="415.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="16.2791%" y="389" width="0.2406%" height="15" fill="rgb(254,55,14)" fg:x="203" fg:w="3"/><text x="16.5291%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.69%)</title><rect x="12.9110%" y="501" width="3.6889%" height="15" fill="rgb(230,185,30)" fg:x="161" fg:w="46"/><text x="13.1610%" y="511.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.5196%" y="485" width="0.0802%" height="15" fill="rgb(220,14,11)" fg:x="206" fg:w="1"/><text x="16.7696%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.5196%" y="469" width="0.0802%" height="15" fill="rgb(215,169,44)" fg:x="206" fg:w="1"/><text x="16.7696%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5196%" y="453" width="0.0802%" height="15" fill="rgb(253,203,20)" fg:x="206" fg:w="1"/><text x="16.7696%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.5196%" y="437" width="0.0802%" height="15" fill="rgb(229,225,17)" fg:x="206" fg:w="1"/><text x="16.7696%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.5196%" y="421" width="0.0802%" height="15" fill="rgb(236,76,26)" fg:x="206" fg:w="1"/><text x="16.7696%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5196%" y="405" width="0.0802%" height="15" fill="rgb(234,15,30)" fg:x="206" fg:w="1"/><text x="16.7696%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.6800%" y="469" width="0.0802%" height="15" fill="rgb(211,113,48)" fg:x="208" fg:w="1"/><text x="16.9300%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.7602%" y="469" width="0.0802%" height="15" fill="rgb(221,31,36)" fg:x="209" fg:w="1"/><text x="17.0102%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.9206%" y="453" width="0.0802%" height="15" fill="rgb(215,118,52)" fg:x="211" fg:w="1"/><text x="17.1706%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.0008%" y="437" width="0.1604%" height="15" fill="rgb(241,151,27)" fg:x="212" fg:w="2"/><text x="17.2508%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.1612%" y="437" width="0.0802%" height="15" fill="rgb(253,51,3)" fg:x="214" fg:w="1"/><text x="17.4112%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3216%" y="421" width="0.0802%" height="15" fill="rgb(216,201,24)" fg:x="216" fg:w="1"/><text x="17.5716%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.4018%" y="421" width="0.0802%" height="15" fill="rgb(231,107,4)" fg:x="217" fg:w="1"/><text x="17.6518%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.4018%" y="405" width="0.0802%" height="15" fill="rgb(243,97,54)" fg:x="217" fg:w="1"/><text x="17.6518%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="16.5998%" y="501" width="1.1227%" height="15" fill="rgb(221,32,51)" fg:x="207" fg:w="14"/><text x="16.8498%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="16.6800%" y="485" width="1.0425%" height="15" fill="rgb(218,171,35)" fg:x="208" fg:w="13"/><text x="16.9300%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="16.8404%" y="469" width="0.8821%" height="15" fill="rgb(214,20,53)" fg:x="210" fg:w="11"/><text x="17.0904%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="17.0008%" y="453" width="0.7217%" height="15" fill="rgb(239,9,52)" fg:x="212" fg:w="9"/><text x="17.2508%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="17.2414%" y="437" width="0.4812%" height="15" fill="rgb(215,114,45)" fg:x="215" fg:w="6"/><text x="17.4914%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="17.4820%" y="421" width="0.2406%" height="15" fill="rgb(208,118,9)" fg:x="218" fg:w="3"/><text x="17.7320%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.6423%" y="405" width="0.0802%" height="15" fill="rgb(235,7,39)" fg:x="220" fg:w="1"/><text x="17.8923%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8027%" y="453" width="0.0802%" height="15" fill="rgb(243,225,15)" fg:x="222" fg:w="1"/><text x="18.0527%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8829%" y="453" width="0.0802%" height="15" fill="rgb(225,216,18)" fg:x="223" fg:w="1"/><text x="18.1329%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="17.9631%" y="437" width="0.0802%" height="15" fill="rgb(233,36,38)" fg:x="224" fg:w="1"/><text x="18.2131%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="17.9631%" y="453" width="0.1604%" height="15" fill="rgb(239,88,23)" fg:x="224" fg:w="2"/><text x="18.2131%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.0433%" y="437" width="0.0802%" height="15" fill="rgb(219,181,35)" fg:x="225" fg:w="1"/><text x="18.2933%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.0433%" y="421" width="0.0802%" height="15" fill="rgb(215,18,46)" fg:x="225" fg:w="1"/><text x="18.2933%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="18.0433%" y="405" width="0.0802%" height="15" fill="rgb(241,38,11)" fg:x="225" fg:w="1"/><text x="18.2933%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="18.1235%" y="453" width="0.2406%" height="15" fill="rgb(248,169,45)" fg:x="226" fg:w="3"/><text x="18.3735%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.2037%" y="437" width="0.1604%" height="15" fill="rgb(239,50,49)" fg:x="227" fg:w="2"/><text x="18.4537%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.2839%" y="421" width="0.0802%" height="15" fill="rgb(231,96,31)" fg:x="228" fg:w="1"/><text x="18.5339%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="18.3641%" y="453" width="0.1604%" height="15" fill="rgb(224,193,37)" fg:x="229" fg:w="2"/><text x="18.6141%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.3641%" y="437" width="0.1604%" height="15" fill="rgb(227,153,50)" fg:x="229" fg:w="2"/><text x="18.6141%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="18.3641%" y="421" width="0.1604%" height="15" fill="rgb(249,228,3)" fg:x="229" fg:w="2"/><text x="18.6141%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4443%" y="405" width="0.0802%" height="15" fill="rgb(219,164,43)" fg:x="230" fg:w="1"/><text x="18.6943%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.4443%" y="389" width="0.0802%" height="15" fill="rgb(216,45,41)" fg:x="230" fg:w="1"/><text x="18.6943%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4443%" y="373" width="0.0802%" height="15" fill="rgb(210,226,51)" fg:x="230" fg:w="1"/><text x="18.6943%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.4443%" y="357" width="0.0802%" height="15" fill="rgb(209,117,49)" fg:x="230" fg:w="1"/><text x="18.6943%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4443%" y="341" width="0.0802%" height="15" fill="rgb(206,196,24)" fg:x="230" fg:w="1"/><text x="18.6943%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4443%" y="325" width="0.0802%" height="15" fill="rgb(253,218,3)" fg:x="230" fg:w="1"/><text x="18.6943%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4443%" y="309" width="0.0802%" height="15" fill="rgb(252,166,2)" fg:x="230" fg:w="1"/><text x="18.6943%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.5245%" y="437" width="0.0802%" height="15" fill="rgb(236,218,26)" fg:x="231" fg:w="1"/><text x="18.7745%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.6047%" y="405" width="0.1604%" height="15" fill="rgb(254,84,19)" fg:x="232" fg:w="2"/><text x="18.8547%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.6848%" y="389" width="0.0802%" height="15" fill="rgb(219,137,29)" fg:x="233" fg:w="1"/><text x="18.9348%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.7650%" y="373" width="0.0802%" height="15" fill="rgb(227,47,52)" fg:x="234" fg:w="1"/><text x="19.0150%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="18.7650%" y="405" width="0.1604%" height="15" fill="rgb(229,167,24)" fg:x="234" fg:w="2"/><text x="19.0150%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="18.7650%" y="389" width="0.1604%" height="15" fill="rgb(233,164,1)" fg:x="234" fg:w="2"/><text x="19.0150%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.8452%" y="373" width="0.0802%" height="15" fill="rgb(218,88,48)" fg:x="235" fg:w="1"/><text x="19.0952%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8452%" y="357" width="0.0802%" height="15" fill="rgb(226,214,24)" fg:x="235" fg:w="1"/><text x="19.0952%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8452%" y="341" width="0.0802%" height="15" fill="rgb(233,29,12)" fg:x="235" fg:w="1"/><text x="19.0952%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.0056%" y="389" width="0.0802%" height="15" fill="rgb(219,120,34)" fg:x="237" fg:w="1"/><text x="19.2556%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="18.6047%" y="421" width="0.5613%" height="15" fill="rgb(226,78,44)" fg:x="232" fg:w="7"/><text x="18.8547%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="18.9254%" y="405" width="0.2406%" height="15" fill="rgb(240,15,48)" fg:x="236" fg:w="3"/><text x="19.1754%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.0858%" y="389" width="0.0802%" height="15" fill="rgb(253,176,7)" fg:x="238" fg:w="1"/><text x="19.3358%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.0858%" y="373" width="0.0802%" height="15" fill="rgb(206,166,28)" fg:x="238" fg:w="1"/><text x="19.3358%" y="383.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (81 samples, 6.50%)</title><rect x="12.9110%" y="533" width="6.4956%" height="15" fill="rgb(241,53,51)" fg:x="161" fg:w="81"/><text x="13.1610%" y="543.50">engine::i..</text></g><g><title>engine::session::Session::check_for_changes (81 samples, 6.50%)</title><rect x="12.9110%" y="517" width="6.4956%" height="15" fill="rgb(249,112,30)" fg:x="161" fg:w="81"/><text x="13.1610%" y="527.50">engine::s..</text></g><g><title>kernel::compare::any_entity_changes (21 samples, 1.68%)</title><rect x="17.7225%" y="501" width="1.6840%" height="15" fill="rgb(217,85,30)" fg:x="221" fg:w="21"/><text x="17.9725%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (21 samples, 1.68%)</title><rect x="17.7225%" y="485" width="1.6840%" height="15" fill="rgb(233,49,7)" fg:x="221" fg:w="21"/><text x="17.9725%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.68%)</title><rect x="17.7225%" y="469" width="1.6840%" height="15" fill="rgb(234,109,9)" fg:x="221" fg:w="21"/><text x="17.9725%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="18.5245%" y="453" width="0.8821%" height="15" fill="rgb(253,95,22)" fg:x="231" fg:w="11"/><text x="18.7745%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (10 samples, 0.80%)</title><rect x="18.6047%" y="437" width="0.8019%" height="15" fill="rgb(233,176,25)" fg:x="232" fg:w="10"/><text x="18.8547%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="19.1660%" y="421" width="0.2406%" height="15" fill="rgb(236,33,39)" fg:x="239" fg:w="3"/><text x="19.4160%" y="431.50"></text></g><g><title>engine::session::Session::flush (92 samples, 7.38%)</title><rect x="12.1091%" y="565" width="7.3777%" height="15" fill="rgb(223,226,42)" fg:x="151" fg:w="92"/><text x="12.3591%" y="575.50">engine::se..</text></g><g><title>engine::session::Session::save_entity_changes (92 samples, 7.38%)</title><rect x="12.1091%" y="549" width="7.3777%" height="15" fill="rgb(216,99,33)" fg:x="151" fg:w="92"/><text x="12.3591%" y="559.50">engine::se..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="19.4066%" y="533" width="0.0802%" height="15" fill="rgb(235,84,23)" fg:x="242" fg:w="1"/><text x="19.6566%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="19.4066%" y="517" width="0.0802%" height="15" fill="rgb(232,2,27)" fg:x="242" fg:w="1"/><text x="19.6566%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="19.4066%" y="501" width="0.0802%" height="15" fill="rgb(241,23,22)" fg:x="242" fg:w="1"/><text x="19.6566%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.4066%" y="485" width="0.0802%" height="15" fill="rgb(211,73,27)" fg:x="242" fg:w="1"/><text x="19.6566%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.4066%" y="469" width="0.0802%" height="15" fill="rgb(235,109,49)" fg:x="242" fg:w="1"/><text x="19.6566%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.4066%" y="453" width="0.0802%" height="15" fill="rgb(230,99,29)" fg:x="242" fg:w="1"/><text x="19.6566%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.4066%" y="437" width="0.0802%" height="15" fill="rgb(245,199,7)" fg:x="242" fg:w="1"/><text x="19.6566%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="19.4066%" y="421" width="0.0802%" height="15" fill="rgb(217,179,10)" fg:x="242" fg:w="1"/><text x="19.6566%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.4066%" y="405" width="0.0802%" height="15" fill="rgb(254,99,47)" fg:x="242" fg:w="1"/><text x="19.6566%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.4066%" y="389" width="0.0802%" height="15" fill="rgb(251,121,7)" fg:x="242" fg:w="1"/><text x="19.6566%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.4066%" y="373" width="0.0802%" height="15" fill="rgb(250,177,26)" fg:x="242" fg:w="1"/><text x="19.6566%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="19.4066%" y="357" width="0.0802%" height="15" fill="rgb(232,88,15)" fg:x="242" fg:w="1"/><text x="19.6566%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.4066%" y="341" width="0.0802%" height="15" fill="rgb(251,54,54)" fg:x="242" fg:w="1"/><text x="19.6566%" y="351.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="19.4868%" y="565" width="0.0802%" height="15" fill="rgb(208,177,15)" fg:x="243" fg:w="1"/><text x="19.7368%" y="575.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="19.4868%" y="549" width="0.0802%" height="15" fill="rgb(205,97,32)" fg:x="243" fg:w="1"/><text x="19.7368%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::set_key (1 samples, 0.08%)</title><rect x="19.5670%" y="565" width="0.0802%" height="15" fill="rgb(217,192,13)" fg:x="244" fg:w="1"/><text x="19.8170%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="19.5670%" y="549" width="0.0802%" height="15" fill="rgb(215,163,41)" fg:x="244" fg:w="1"/><text x="19.8170%" y="559.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="19.5670%" y="533" width="0.0802%" height="15" fill="rgb(246,83,29)" fg:x="244" fg:w="1"/><text x="19.8170%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="19.7273%" y="533" width="0.0802%" height="15" fill="rgb(219,2,45)" fg:x="246" fg:w="1"/><text x="19.9773%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="19.7273%" y="517" width="0.0802%" height="15" fill="rgb(242,215,33)" fg:x="246" fg:w="1"/><text x="19.9773%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.7273%" y="501" width="0.0802%" height="15" fill="rgb(217,1,6)" fg:x="246" fg:w="1"/><text x="19.9773%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.7273%" y="485" width="0.0802%" height="15" fill="rgb(207,85,52)" fg:x="246" fg:w="1"/><text x="19.9773%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.7273%" y="469" width="0.0802%" height="15" fill="rgb(231,171,19)" fg:x="246" fg:w="1"/><text x="19.9773%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.7273%" y="453" width="0.0802%" height="15" fill="rgb(207,128,4)" fg:x="246" fg:w="1"/><text x="19.9773%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="19.7273%" y="437" width="0.0802%" height="15" fill="rgb(219,208,4)" fg:x="246" fg:w="1"/><text x="19.9773%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.7273%" y="421" width="0.0802%" height="15" fill="rgb(235,161,42)" fg:x="246" fg:w="1"/><text x="19.9773%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.7273%" y="405" width="0.0802%" height="15" fill="rgb(247,218,18)" fg:x="246" fg:w="1"/><text x="19.9773%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.7273%" y="389" width="0.0802%" height="15" fill="rgb(232,114,51)" fg:x="246" fg:w="1"/><text x="19.9773%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="19.7273%" y="373" width="0.0802%" height="15" fill="rgb(222,95,3)" fg:x="246" fg:w="1"/><text x="19.9773%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.7273%" y="357" width="0.0802%" height="15" fill="rgb(240,65,29)" fg:x="246" fg:w="1"/><text x="19.9773%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.7273%" y="341" width="0.0802%" height="15" fill="rgb(249,209,20)" fg:x="246" fg:w="1"/><text x="19.9773%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.7273%" y="325" width="0.0802%" height="15" fill="rgb(241,48,37)" fg:x="246" fg:w="1"/><text x="19.9773%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7273%" y="309" width="0.0802%" height="15" fill="rgb(230,140,42)" fg:x="246" fg:w="1"/><text x="19.9773%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7273%" y="293" width="0.0802%" height="15" fill="rgb(230,176,45)" fg:x="246" fg:w="1"/><text x="19.9773%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="19.7273%" y="277" width="0.0802%" height="15" fill="rgb(245,112,21)" fg:x="246" fg:w="1"/><text x="19.9773%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="19.7273%" y="261" width="0.0802%" height="15" fill="rgb(207,183,35)" fg:x="246" fg:w="1"/><text x="19.9773%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="19.7273%" y="245" width="0.0802%" height="15" fill="rgb(227,44,33)" fg:x="246" fg:w="1"/><text x="19.9773%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="19.7273%" y="229" width="0.0802%" height="15" fill="rgb(246,120,21)" fg:x="246" fg:w="1"/><text x="19.9773%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="19.7273%" y="213" width="0.0802%" height="15" fill="rgb(235,57,52)" fg:x="246" fg:w="1"/><text x="19.9773%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="19.7273%" y="197" width="0.0802%" height="15" fill="rgb(238,84,10)" fg:x="246" fg:w="1"/><text x="19.9773%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.7273%" y="181" width="0.0802%" height="15" fill="rgb(251,200,32)" fg:x="246" fg:w="1"/><text x="19.9773%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="19.7273%" y="165" width="0.0802%" height="15" fill="rgb(247,159,13)" fg:x="246" fg:w="1"/><text x="19.9773%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="19.7273%" y="149" width="0.0802%" height="15" fill="rgb(238,64,4)" fg:x="246" fg:w="1"/><text x="19.9773%" y="159.50"></text></g><g><title>__libc_malloc (8 samples, 0.64%)</title><rect x="19.8075%" y="453" width="0.6415%" height="15" fill="rgb(221,131,51)" fg:x="247" fg:w="8"/><text x="20.0575%" y="463.50"></text></g><g><title>engine::internal::EntityMap::add_entity (9 samples, 0.72%)</title><rect x="19.8075%" y="517" width="0.7217%" height="15" fill="rgb(242,5,29)" fg:x="247" fg:w="9"/><text x="20.0575%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.72%)</title><rect x="19.8075%" y="501" width="0.7217%" height="15" fill="rgb(214,130,32)" fg:x="247" fg:w="9"/><text x="20.0575%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (9 samples, 0.72%)</title><rect x="19.8075%" y="485" width="0.7217%" height="15" fill="rgb(244,210,16)" fg:x="247" fg:w="9"/><text x="20.0575%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.72%)</title><rect x="19.8075%" y="469" width="0.7217%" height="15" fill="rgb(234,48,26)" fg:x="247" fg:w="9"/><text x="20.0575%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.4491%" y="453" width="0.0802%" height="15" fill="rgb(231,82,38)" fg:x="255" fg:w="1"/><text x="20.6991%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="19.7273%" y="549" width="0.8821%" height="15" fill="rgb(254,128,41)" fg:x="246" fg:w="11"/><text x="19.9773%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="19.8075%" y="533" width="0.8019%" height="15" fill="rgb(212,73,49)" fg:x="247" fg:w="10"/><text x="20.0575%" y="543.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="20.5293%" y="517" width="0.0802%" height="15" fill="rgb(205,62,54)" fg:x="256" fg:w="1"/><text x="20.7793%" y="527.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="20.5293%" y="501" width="0.0802%" height="15" fill="rgb(228,0,8)" fg:x="256" fg:w="1"/><text x="20.7793%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6095%" y="533" width="0.0802%" height="15" fill="rgb(251,28,17)" fg:x="257" fg:w="1"/><text x="20.8595%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="20.6897%" y="533" width="0.0802%" height="15" fill="rgb(238,105,27)" fg:x="258" fg:w="1"/><text x="20.9397%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6897%" y="517" width="0.0802%" height="15" fill="rgb(237,216,33)" fg:x="258" fg:w="1"/><text x="20.9397%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="20.7698%" y="533" width="0.0802%" height="15" fill="rgb(229,228,25)" fg:x="259" fg:w="1"/><text x="21.0198%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="20.7698%" y="517" width="0.0802%" height="15" fill="rgb(233,75,23)" fg:x="259" fg:w="1"/><text x="21.0198%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7698%" y="501" width="0.0802%" height="15" fill="rgb(231,207,16)" fg:x="259" fg:w="1"/><text x="21.0198%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8500%" y="501" width="0.0802%" height="15" fill="rgb(231,191,45)" fg:x="260" fg:w="1"/><text x="21.1000%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.9302%" y="469" width="0.0802%" height="15" fill="rgb(224,133,17)" fg:x="261" fg:w="1"/><text x="21.1802%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.9302%" y="453" width="0.0802%" height="15" fill="rgb(209,178,27)" fg:x="261" fg:w="1"/><text x="21.1802%" y="463.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="20.9302%" y="501" width="0.1604%" height="15" fill="rgb(218,37,11)" fg:x="261" fg:w="2"/><text x="21.1802%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.9302%" y="485" width="0.1604%" height="15" fill="rgb(251,226,25)" fg:x="261" fg:w="2"/><text x="21.1802%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.0104%" y="469" width="0.0802%" height="15" fill="rgb(209,222,27)" fg:x="262" fg:w="1"/><text x="21.2604%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="21.0104%" y="453" width="0.0802%" height="15" fill="rgb(238,22,21)" fg:x="262" fg:w="1"/><text x="21.2604%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.0104%" y="437" width="0.0802%" height="15" fill="rgb(233,161,25)" fg:x="262" fg:w="1"/><text x="21.2604%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0104%" y="421" width="0.0802%" height="15" fill="rgb(226,122,53)" fg:x="262" fg:w="1"/><text x="21.2604%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0104%" y="405" width="0.0802%" height="15" fill="rgb(220,123,17)" fg:x="262" fg:w="1"/><text x="21.2604%" y="415.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.40%)</title><rect x="20.8500%" y="533" width="0.4010%" height="15" fill="rgb(230,224,35)" fg:x="260" fg:w="5"/><text x="21.1000%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.40%)</title><rect x="20.8500%" y="517" width="0.4010%" height="15" fill="rgb(246,83,8)" fg:x="260" fg:w="5"/><text x="21.1000%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="21.0906%" y="501" width="0.1604%" height="15" fill="rgb(230,214,17)" fg:x="263" fg:w="2"/><text x="21.3406%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.0906%" y="485" width="0.1604%" height="15" fill="rgb(222,97,18)" fg:x="263" fg:w="2"/><text x="21.3406%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="21.1708%" y="469" width="0.0802%" height="15" fill="rgb(206,79,1)" fg:x="264" fg:w="1"/><text x="21.4208%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.1708%" y="453" width="0.0802%" height="15" fill="rgb(214,121,34)" fg:x="264" fg:w="1"/><text x="21.4208%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1708%" y="437" width="0.0802%" height="15" fill="rgb(249,199,46)" fg:x="264" fg:w="1"/><text x="21.4208%" y="447.50"></text></g><g><title>plugins_core::build::Build::holding (21 samples, 1.68%)</title><rect x="19.6472%" y="565" width="1.6840%" height="15" fill="rgb(214,222,46)" fg:x="245" fg:w="21"/><text x="19.8972%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="20.6095%" y="549" width="0.7217%" height="15" fill="rgb(248,168,30)" fg:x="257" fg:w="9"/><text x="20.8595%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="21.2510%" y="533" width="0.0802%" height="15" fill="rgb(226,14,28)" fg:x="265" fg:w="1"/><text x="21.5010%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="21.2510%" y="517" width="0.0802%" height="15" fill="rgb(253,123,1)" fg:x="265" fg:w="1"/><text x="21.5010%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="21.2510%" y="501" width="0.0802%" height="15" fill="rgb(225,24,42)" fg:x="265" fg:w="1"/><text x="21.5010%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="21.2510%" y="485" width="0.0802%" height="15" fill="rgb(216,161,37)" fg:x="265" fg:w="1"/><text x="21.5010%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="21.3312%" y="565" width="0.0802%" height="15" fill="rgb(251,164,26)" fg:x="266" fg:w="1"/><text x="21.5812%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="21.3312%" y="549" width="0.0802%" height="15" fill="rgb(219,177,3)" fg:x="266" fg:w="1"/><text x="21.5812%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="21.3312%" y="533" width="0.0802%" height="15" fill="rgb(222,65,0)" fg:x="266" fg:w="1"/><text x="21.5812%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="21.4114%" y="565" width="0.0802%" height="15" fill="rgb(223,69,54)" fg:x="267" fg:w="1"/><text x="21.6614%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="21.4114%" y="549" width="0.0802%" height="15" fill="rgb(235,30,27)" fg:x="267" fg:w="1"/><text x="21.6614%" y="559.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="21.4114%" y="533" width="0.0802%" height="15" fill="rgb(220,183,50)" fg:x="267" fg:w="1"/><text x="21.6614%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4114%" y="517" width="0.0802%" height="15" fill="rgb(248,198,15)" fg:x="267" fg:w="1"/><text x="21.6614%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="21.4916%" y="533" width="0.0802%" height="15" fill="rgb(222,211,4)" fg:x="268" fg:w="1"/><text x="21.7416%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4916%" y="517" width="0.0802%" height="15" fill="rgb(214,102,34)" fg:x="268" fg:w="1"/><text x="21.7416%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="21.5718%" y="533" width="0.0802%" height="15" fill="rgb(245,92,5)" fg:x="269" fg:w="1"/><text x="21.8218%" y="543.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="21.5718%" y="517" width="0.0802%" height="15" fill="rgb(252,72,51)" fg:x="269" fg:w="1"/><text x="21.8218%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5718%" y="501" width="0.0802%" height="15" fill="rgb(252,208,19)" fg:x="269" fg:w="1"/><text x="21.8218%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5718%" y="485" width="0.0802%" height="15" fill="rgb(211,69,7)" fg:x="269" fg:w="1"/><text x="21.8218%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.5718%" y="469" width="0.0802%" height="15" fill="rgb(211,27,16)" fg:x="269" fg:w="1"/><text x="21.8218%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.5718%" y="453" width="0.0802%" height="15" fill="rgb(219,216,14)" fg:x="269" fg:w="1"/><text x="21.8218%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.5718%" y="437" width="0.0802%" height="15" fill="rgb(219,71,8)" fg:x="269" fg:w="1"/><text x="21.8218%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5718%" y="421" width="0.0802%" height="15" fill="rgb(223,170,53)" fg:x="269" fg:w="1"/><text x="21.8218%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5718%" y="405" width="0.0802%" height="15" fill="rgb(246,21,26)" fg:x="269" fg:w="1"/><text x="21.8218%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.5718%" y="389" width="0.0802%" height="15" fill="rgb(248,20,46)" fg:x="269" fg:w="1"/><text x="21.8218%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.5718%" y="373" width="0.0802%" height="15" fill="rgb(252,94,11)" fg:x="269" fg:w="1"/><text x="21.8218%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.5718%" y="357" width="0.0802%" height="15" fill="rgb(236,163,8)" fg:x="269" fg:w="1"/><text x="21.8218%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.5718%" y="341" width="0.0802%" height="15" fill="rgb(217,221,45)" fg:x="269" fg:w="1"/><text x="21.8218%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.5718%" y="325" width="0.0802%" height="15" fill="rgb(238,38,17)" fg:x="269" fg:w="1"/><text x="21.8218%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="21.6520%" y="533" width="0.0802%" height="15" fill="rgb(242,210,23)" fg:x="270" fg:w="1"/><text x="21.9020%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6520%" y="517" width="0.0802%" height="15" fill="rgb(250,86,53)" fg:x="270" fg:w="1"/><text x="21.9020%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6520%" y="501" width="0.0802%" height="15" fill="rgb(223,168,25)" fg:x="270" fg:w="1"/><text x="21.9020%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6520%" y="485" width="0.0802%" height="15" fill="rgb(251,189,4)" fg:x="270" fg:w="1"/><text x="21.9020%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.6520%" y="469" width="0.0802%" height="15" fill="rgb(245,19,28)" fg:x="270" fg:w="1"/><text x="21.9020%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.6520%" y="453" width="0.0802%" height="15" fill="rgb(207,10,34)" fg:x="270" fg:w="1"/><text x="21.9020%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.6520%" y="437" width="0.0802%" height="15" fill="rgb(235,153,31)" fg:x="270" fg:w="1"/><text x="21.9020%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6520%" y="421" width="0.0802%" height="15" fill="rgb(228,72,37)" fg:x="270" fg:w="1"/><text x="21.9020%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6520%" y="405" width="0.0802%" height="15" fill="rgb(215,15,16)" fg:x="270" fg:w="1"/><text x="21.9020%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.6520%" y="389" width="0.0802%" height="15" fill="rgb(250,119,29)" fg:x="270" fg:w="1"/><text x="21.9020%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.6520%" y="373" width="0.0802%" height="15" fill="rgb(214,59,1)" fg:x="270" fg:w="1"/><text x="21.9020%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.6520%" y="357" width="0.0802%" height="15" fill="rgb(223,109,25)" fg:x="270" fg:w="1"/><text x="21.9020%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.6520%" y="341" width="0.0802%" height="15" fill="rgb(230,198,22)" fg:x="270" fg:w="1"/><text x="21.9020%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="21.6520%" y="325" width="0.0802%" height="15" fill="rgb(245,184,46)" fg:x="270" fg:w="1"/><text x="21.9020%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="21.6520%" y="309" width="0.0802%" height="15" fill="rgb(253,73,16)" fg:x="270" fg:w="1"/><text x="21.9020%" y="319.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="21.8123%" y="501" width="0.1604%" height="15" fill="rgb(206,94,45)" fg:x="272" fg:w="2"/><text x="22.0623%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.8123%" y="485" width="0.1604%" height="15" fill="rgb(236,83,27)" fg:x="272" fg:w="2"/><text x="22.0623%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.8925%" y="469" width="0.0802%" height="15" fill="rgb(220,196,8)" fg:x="273" fg:w="1"/><text x="22.1425%" y="479.50"></text></g><g><title>plugins_core::build::Build::occupying (9 samples, 0.72%)</title><rect x="21.4916%" y="565" width="0.7217%" height="15" fill="rgb(254,185,14)" fg:x="268" fg:w="9"/><text x="21.7416%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.72%)</title><rect x="21.4916%" y="549" width="0.7217%" height="15" fill="rgb(226,50,22)" fg:x="268" fg:w="9"/><text x="21.7416%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.48%)</title><rect x="21.7322%" y="533" width="0.4812%" height="15" fill="rgb(253,147,0)" fg:x="271" fg:w="6"/><text x="21.9822%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.40%)</title><rect x="21.8123%" y="517" width="0.4010%" height="15" fill="rgb(252,46,33)" fg:x="272" fg:w="5"/><text x="22.0623%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (3 samples, 0.24%)</title><rect x="21.9727%" y="501" width="0.2406%" height="15" fill="rgb(242,22,54)" fg:x="274" fg:w="3"/><text x="22.2227%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.0529%" y="485" width="0.1604%" height="15" fill="rgb(223,178,32)" fg:x="275" fg:w="2"/><text x="22.3029%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="22.0529%" y="469" width="0.1604%" height="15" fill="rgb(214,106,53)" fg:x="275" fg:w="2"/><text x="22.3029%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.0529%" y="453" width="0.1604%" height="15" fill="rgb(232,65,50)" fg:x="275" fg:w="2"/><text x="22.3029%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1331%" y="437" width="0.0802%" height="15" fill="rgb(231,110,28)" fg:x="276" fg:w="1"/><text x="22.3831%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="22.2133%" y="533" width="0.0802%" height="15" fill="rgb(216,71,40)" fg:x="277" fg:w="1"/><text x="22.4633%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="22.2133%" y="517" width="0.0802%" height="15" fill="rgb(229,89,53)" fg:x="277" fg:w="1"/><text x="22.4633%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.2133%" y="501" width="0.0802%" height="15" fill="rgb(210,124,14)" fg:x="277" fg:w="1"/><text x="22.4633%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.2133%" y="485" width="0.0802%" height="15" fill="rgb(236,213,6)" fg:x="277" fg:w="1"/><text x="22.4633%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.2133%" y="469" width="0.0802%" height="15" fill="rgb(228,41,5)" fg:x="277" fg:w="1"/><text x="22.4633%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.2133%" y="453" width="0.0802%" height="15" fill="rgb(221,167,25)" fg:x="277" fg:w="1"/><text x="22.4633%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="22.2133%" y="437" width="0.0802%" height="15" fill="rgb(228,144,37)" fg:x="277" fg:w="1"/><text x="22.4633%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.2133%" y="421" width="0.0802%" height="15" fill="rgb(227,189,38)" fg:x="277" fg:w="1"/><text x="22.4633%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.2133%" y="405" width="0.0802%" height="15" fill="rgb(218,8,2)" fg:x="277" fg:w="1"/><text x="22.4633%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.2133%" y="389" width="0.0802%" height="15" fill="rgb(209,61,28)" fg:x="277" fg:w="1"/><text x="22.4633%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.2133%" y="373" width="0.0802%" height="15" fill="rgb(233,140,39)" fg:x="277" fg:w="1"/><text x="22.4633%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="22.2133%" y="357" width="0.0802%" height="15" fill="rgb(251,66,48)" fg:x="277" fg:w="1"/><text x="22.4633%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="22.2133%" y="341" width="0.0802%" height="15" fill="rgb(210,44,45)" fg:x="277" fg:w="1"/><text x="22.4633%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="22.2133%" y="325" width="0.0802%" height="15" fill="rgb(214,136,46)" fg:x="277" fg:w="1"/><text x="22.4633%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="22.2133%" y="309" width="0.0802%" height="15" fill="rgb(207,130,50)" fg:x="277" fg:w="1"/><text x="22.4633%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.2133%" y="293" width="0.0802%" height="15" fill="rgb(228,102,49)" fg:x="277" fg:w="1"/><text x="22.4633%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="22.2133%" y="549" width="0.1604%" height="15" fill="rgb(253,55,1)" fg:x="277" fg:w="2"/><text x="22.4633%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="22.2935%" y="533" width="0.0802%" height="15" fill="rgb(238,222,9)" fg:x="278" fg:w="1"/><text x="22.5435%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.3737%" y="533" width="0.0802%" height="15" fill="rgb(246,99,6)" fg:x="279" fg:w="1"/><text x="22.6237%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.3737%" y="517" width="0.0802%" height="15" fill="rgb(219,110,26)" fg:x="279" fg:w="1"/><text x="22.6237%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="22.3737%" y="501" width="0.0802%" height="15" fill="rgb(239,160,33)" fg:x="279" fg:w="1"/><text x="22.6237%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="22.4539%" y="533" width="0.0802%" height="15" fill="rgb(220,202,23)" fg:x="280" fg:w="1"/><text x="22.7039%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4539%" y="517" width="0.0802%" height="15" fill="rgb(208,80,26)" fg:x="280" fg:w="1"/><text x="22.7039%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (144 samples, 11.55%)</title><rect x="11.3071%" y="581" width="11.5477%" height="15" fill="rgb(243,85,7)" fg:x="141" fg:w="144"/><text x="11.5571%" y="591.50">plugins_core::bui..</text></g><g><title>plugins_core::build::Build::with_username (8 samples, 0.64%)</title><rect x="22.2133%" y="565" width="0.6415%" height="15" fill="rgb(228,77,47)" fg:x="277" fg:w="8"/><text x="22.4633%" y="575.50"></text></g><g><title>engine::users::model::add_username_to_key (6 samples, 0.48%)</title><rect x="22.3737%" y="549" width="0.4812%" height="15" fill="rgb(212,226,8)" fg:x="279" fg:w="6"/><text x="22.6237%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="22.5341%" y="533" width="0.3208%" height="15" fill="rgb(241,120,54)" fg:x="281" fg:w="4"/><text x="22.7841%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.32%)</title><rect x="22.5341%" y="517" width="0.3208%" height="15" fill="rgb(226,80,16)" fg:x="281" fg:w="4"/><text x="22.7841%" y="527.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (4 samples, 0.32%)</title><rect x="22.5341%" y="501" width="0.3208%" height="15" fill="rgb(240,76,13)" fg:x="281" fg:w="4"/><text x="22.7841%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="22.5341%" y="485" width="0.3208%" height="15" fill="rgb(252,74,8)" fg:x="281" fg:w="4"/><text x="22.7841%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="22.5341%" y="469" width="0.3208%" height="15" fill="rgb(244,155,2)" fg:x="281" fg:w="4"/><text x="22.7841%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="22.6143%" y="453" width="0.2406%" height="15" fill="rgb(215,81,35)" fg:x="282" fg:w="3"/><text x="22.8643%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.6945%" y="437" width="0.1604%" height="15" fill="rgb(206,55,2)" fg:x="283" fg:w="2"/><text x="22.9445%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.7747%" y="421" width="0.0802%" height="15" fill="rgb(231,2,34)" fg:x="284" fg:w="1"/><text x="23.0247%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="22.8549%" y="581" width="0.0802%" height="15" fill="rgb(242,176,48)" fg:x="285" fg:w="1"/><text x="23.1049%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="22.8549%" y="565" width="0.0802%" height="15" fill="rgb(249,31,36)" fg:x="285" fg:w="1"/><text x="23.1049%" y="575.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="22.8549%" y="549" width="0.0802%" height="15" fill="rgb(205,18,17)" fg:x="285" fg:w="1"/><text x="23.1049%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.8549%" y="533" width="0.0802%" height="15" fill="rgb(254,130,5)" fg:x="285" fg:w="1"/><text x="23.1049%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.8549%" y="517" width="0.0802%" height="15" fill="rgb(229,42,45)" fg:x="285" fg:w="1"/><text x="23.1049%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.8549%" y="501" width="0.0802%" height="15" fill="rgb(245,95,25)" fg:x="285" fg:w="1"/><text x="23.1049%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.8549%" y="485" width="0.0802%" height="15" fill="rgb(249,193,38)" fg:x="285" fg:w="1"/><text x="23.1049%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.8549%" y="469" width="0.0802%" height="15" fill="rgb(241,140,43)" fg:x="285" fg:w="1"/><text x="23.1049%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.8549%" y="453" width="0.0802%" height="15" fill="rgb(245,78,48)" fg:x="285" fg:w="1"/><text x="23.1049%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.8549%" y="437" width="0.0802%" height="15" fill="rgb(214,92,39)" fg:x="285" fg:w="1"/><text x="23.1049%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.8549%" y="421" width="0.0802%" height="15" fill="rgb(211,189,14)" fg:x="285" fg:w="1"/><text x="23.1049%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.8549%" y="405" width="0.0802%" height="15" fill="rgb(218,7,24)" fg:x="285" fg:w="1"/><text x="23.1049%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.8549%" y="389" width="0.0802%" height="15" fill="rgb(224,200,49)" fg:x="285" fg:w="1"/><text x="23.1049%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.8549%" y="373" width="0.0802%" height="15" fill="rgb(218,210,14)" fg:x="285" fg:w="1"/><text x="23.1049%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="22.9350%" y="533" width="0.0802%" height="15" fill="rgb(234,142,31)" fg:x="286" fg:w="1"/><text x="23.1850%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9350%" y="517" width="0.0802%" height="15" fill="rgb(227,165,2)" fg:x="286" fg:w="1"/><text x="23.1850%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="22.9350%" y="549" width="0.1604%" height="15" fill="rgb(232,44,46)" fg:x="286" fg:w="2"/><text x="23.1850%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="23.0152%" y="533" width="0.0802%" height="15" fill="rgb(236,149,47)" fg:x="287" fg:w="1"/><text x="23.2652%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="23.0152%" y="517" width="0.0802%" height="15" fill="rgb(227,45,31)" fg:x="287" fg:w="1"/><text x="23.2652%" y="527.50"></text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="23.0152%" y="501" width="0.0802%" height="15" fill="rgb(240,176,51)" fg:x="287" fg:w="1"/><text x="23.2652%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0152%" y="485" width="0.0802%" height="15" fill="rgb(249,146,41)" fg:x="287" fg:w="1"/><text x="23.2652%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="23.0954%" y="549" width="0.1604%" height="15" fill="rgb(213,208,4)" fg:x="288" fg:w="2"/><text x="23.3454%" y="559.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="23.1756%" y="533" width="0.0802%" height="15" fill="rgb(245,84,36)" fg:x="289" fg:w="1"/><text x="23.4256%" y="543.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="23.1756%" y="517" width="0.0802%" height="15" fill="rgb(254,84,18)" fg:x="289" fg:w="1"/><text x="23.4256%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (247 samples, 19.81%)</title><rect x="3.5285%" y="597" width="19.8075%" height="15" fill="rgb(225,38,54)" fg:x="44" fg:w="247"/><text x="3.7785%" y="607.50">&lt;tests::HoldingKeyInVessel as t..</text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.40%)</title><rect x="22.9350%" y="581" width="0.4010%" height="15" fill="rgb(246,50,30)" fg:x="286" fg:w="5"/><text x="23.1850%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="22.9350%" y="565" width="0.4010%" height="15" fill="rgb(246,148,9)" fg:x="286" fg:w="5"/><text x="23.1850%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="23.2558%" y="549" width="0.0802%" height="15" fill="rgb(223,75,4)" fg:x="290" fg:w="1"/><text x="23.5058%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="23.2558%" y="533" width="0.0802%" height="15" fill="rgb(239,148,41)" fg:x="290" fg:w="1"/><text x="23.5058%" y="543.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="23.2558%" y="517" width="0.0802%" height="15" fill="rgb(205,195,3)" fg:x="290" fg:w="1"/><text x="23.5058%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.3360%" y="581" width="0.0802%" height="15" fill="rgb(254,161,1)" fg:x="291" fg:w="1"/><text x="23.5860%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (3 samples, 0.24%)</title><rect x="23.3360%" y="597" width="0.2406%" height="15" fill="rgb(211,229,8)" fg:x="291" fg:w="3"/><text x="23.5860%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="23.4162%" y="581" width="0.1604%" height="15" fill="rgb(220,97,9)" fg:x="292" fg:w="2"/><text x="23.6662%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="23.4162%" y="565" width="0.1604%" height="15" fill="rgb(240,218,8)" fg:x="292" fg:w="2"/><text x="23.6662%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.4964%" y="549" width="0.0802%" height="15" fill="rgb(250,44,0)" fg:x="293" fg:w="1"/><text x="23.7464%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4964%" y="533" width="0.0802%" height="15" fill="rgb(236,41,53)" fg:x="293" fg:w="1"/><text x="23.7464%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.6568%" y="469" width="0.0802%" height="15" fill="rgb(218,227,13)" fg:x="295" fg:w="1"/><text x="23.9068%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.6568%" y="453" width="0.0802%" height="15" fill="rgb(217,94,32)" fg:x="295" fg:w="1"/><text x="23.9068%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.6568%" y="437" width="0.0802%" height="15" fill="rgb(213,217,12)" fg:x="295" fg:w="1"/><text x="23.9068%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.6568%" y="421" width="0.0802%" height="15" fill="rgb(229,13,46)" fg:x="295" fg:w="1"/><text x="23.9068%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.6568%" y="405" width="0.0802%" height="15" fill="rgb(243,139,5)" fg:x="295" fg:w="1"/><text x="23.9068%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.6568%" y="389" width="0.0802%" height="15" fill="rgb(249,38,45)" fg:x="295" fg:w="1"/><text x="23.9068%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.6568%" y="373" width="0.0802%" height="15" fill="rgb(216,70,11)" fg:x="295" fg:w="1"/><text x="23.9068%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.6568%" y="357" width="0.0802%" height="15" fill="rgb(253,101,25)" fg:x="295" fg:w="1"/><text x="23.9068%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.6568%" y="341" width="0.0802%" height="15" fill="rgb(207,197,30)" fg:x="295" fg:w="1"/><text x="23.9068%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="23.6568%" y="325" width="0.0802%" height="15" fill="rgb(238,87,13)" fg:x="295" fg:w="1"/><text x="23.9068%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="23.6568%" y="581" width="0.1604%" height="15" fill="rgb(215,155,8)" fg:x="295" fg:w="2"/><text x="23.9068%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="23.6568%" y="565" width="0.1604%" height="15" fill="rgb(239,166,38)" fg:x="295" fg:w="2"/><text x="23.9068%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="23.6568%" y="549" width="0.1604%" height="15" fill="rgb(240,194,35)" fg:x="295" fg:w="2"/><text x="23.9068%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="23.6568%" y="533" width="0.1604%" height="15" fill="rgb(219,10,44)" fg:x="295" fg:w="2"/><text x="23.9068%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="23.6568%" y="517" width="0.1604%" height="15" fill="rgb(251,220,35)" fg:x="295" fg:w="2"/><text x="23.9068%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="23.6568%" y="501" width="0.1604%" height="15" fill="rgb(218,117,13)" fg:x="295" fg:w="2"/><text x="23.9068%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="23.6568%" y="485" width="0.1604%" height="15" fill="rgb(221,213,40)" fg:x="295" fg:w="2"/><text x="23.9068%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.7370%" y="469" width="0.0802%" height="15" fill="rgb(251,224,35)" fg:x="296" fg:w="1"/><text x="23.9870%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.7370%" y="453" width="0.0802%" height="15" fill="rgb(241,33,39)" fg:x="296" fg:w="1"/><text x="23.9870%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.7370%" y="437" width="0.0802%" height="15" fill="rgb(222,74,17)" fg:x="296" fg:w="1"/><text x="23.9870%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.7370%" y="421" width="0.0802%" height="15" fill="rgb(225,103,0)" fg:x="296" fg:w="1"/><text x="23.9870%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.7370%" y="405" width="0.0802%" height="15" fill="rgb(240,0,12)" fg:x="296" fg:w="1"/><text x="23.9870%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.7370%" y="389" width="0.0802%" height="15" fill="rgb(233,213,37)" fg:x="296" fg:w="1"/><text x="23.9870%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.7370%" y="373" width="0.0802%" height="15" fill="rgb(225,84,52)" fg:x="296" fg:w="1"/><text x="23.9870%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.7370%" y="357" width="0.0802%" height="15" fill="rgb(247,160,51)" fg:x="296" fg:w="1"/><text x="23.9870%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.7370%" y="341" width="0.0802%" height="15" fill="rgb(244,60,51)" fg:x="296" fg:w="1"/><text x="23.9870%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8172%" y="549" width="0.0802%" height="15" fill="rgb(233,114,7)" fg:x="297" fg:w="1"/><text x="24.0672%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="23.8172%" y="565" width="0.1604%" height="15" fill="rgb(246,136,16)" fg:x="297" fg:w="2"/><text x="24.0672%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.8974%" y="549" width="0.0802%" height="15" fill="rgb(243,114,45)" fg:x="298" fg:w="1"/><text x="24.1474%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.8974%" y="533" width="0.0802%" height="15" fill="rgb(247,183,43)" fg:x="298" fg:w="1"/><text x="24.1474%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.8974%" y="517" width="0.0802%" height="15" fill="rgb(251,210,42)" fg:x="298" fg:w="1"/><text x="24.1474%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9775%" y="549" width="0.0802%" height="15" fill="rgb(221,88,35)" fg:x="299" fg:w="1"/><text x="24.2275%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="23.9775%" y="565" width="0.1604%" height="15" fill="rgb(242,21,20)" fg:x="299" fg:w="2"/><text x="24.2275%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0577%" y="549" width="0.0802%" height="15" fill="rgb(233,226,36)" fg:x="300" fg:w="1"/><text x="24.3077%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="24.1379%" y="549" width="0.0802%" height="15" fill="rgb(243,189,34)" fg:x="301" fg:w="1"/><text x="24.3879%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.1379%" y="533" width="0.0802%" height="15" fill="rgb(207,145,50)" fg:x="301" fg:w="1"/><text x="24.3879%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="24.1379%" y="565" width="0.1604%" height="15" fill="rgb(242,1,50)" fg:x="301" fg:w="2"/><text x="24.3879%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.2181%" y="549" width="0.0802%" height="15" fill="rgb(231,65,32)" fg:x="302" fg:w="1"/><text x="24.4681%" y="559.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="24.2983%" y="565" width="0.1604%" height="15" fill="rgb(208,68,49)" fg:x="303" fg:w="2"/><text x="24.5483%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="24.2983%" y="549" width="0.1604%" height="15" fill="rgb(253,54,49)" fg:x="303" fg:w="2"/><text x="24.5483%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="24.3785%" y="533" width="0.0802%" height="15" fill="rgb(245,186,24)" fg:x="304" fg:w="1"/><text x="24.6285%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.3785%" y="517" width="0.0802%" height="15" fill="rgb(209,2,41)" fg:x="304" fg:w="1"/><text x="24.6285%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.3785%" y="501" width="0.0802%" height="15" fill="rgb(242,208,54)" fg:x="304" fg:w="1"/><text x="24.6285%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="24.4587%" y="549" width="0.0802%" height="15" fill="rgb(225,9,51)" fg:x="305" fg:w="1"/><text x="24.7087%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.4587%" y="533" width="0.0802%" height="15" fill="rgb(207,207,25)" fg:x="305" fg:w="1"/><text x="24.7087%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.4587%" y="517" width="0.0802%" height="15" fill="rgb(253,96,18)" fg:x="305" fg:w="1"/><text x="24.7087%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="24.5389%" y="533" width="0.1604%" height="15" fill="rgb(252,215,20)" fg:x="306" fg:w="2"/><text x="24.7889%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.6191%" y="517" width="0.0802%" height="15" fill="rgb(245,227,26)" fg:x="307" fg:w="1"/><text x="24.8691%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.6191%" y="501" width="0.0802%" height="15" fill="rgb(241,208,0)" fg:x="307" fg:w="1"/><text x="24.8691%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.6191%" y="485" width="0.0802%" height="15" fill="rgb(224,130,10)" fg:x="307" fg:w="1"/><text x="24.8691%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.6191%" y="469" width="0.0802%" height="15" fill="rgb(237,29,0)" fg:x="307" fg:w="1"/><text x="24.8691%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.6191%" y="453" width="0.0802%" height="15" fill="rgb(219,27,41)" fg:x="307" fg:w="1"/><text x="24.8691%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.6993%" y="517" width="0.0802%" height="15" fill="rgb(245,101,19)" fg:x="308" fg:w="1"/><text x="24.9493%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="25.1002%" y="453" width="0.1604%" height="15" fill="rgb(243,44,37)" fg:x="313" fg:w="2"/><text x="25.3502%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="24.8597%" y="501" width="0.4812%" height="15" fill="rgb(228,213,43)" fg:x="310" fg:w="6"/><text x="25.1097%" y="511.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="24.9399%" y="485" width="0.4010%" height="15" fill="rgb(219,163,21)" fg:x="311" fg:w="5"/><text x="25.1899%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="25.1002%" y="469" width="0.2406%" height="15" fill="rgb(234,86,24)" fg:x="313" fg:w="3"/><text x="25.3502%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="25.2606%" y="453" width="0.0802%" height="15" fill="rgb(225,10,24)" fg:x="315" fg:w="1"/><text x="25.5106%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.80%)</title><rect x="24.7795%" y="517" width="0.8019%" height="15" fill="rgb(218,109,7)" fg:x="309" fg:w="10"/><text x="25.0295%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="25.3408%" y="501" width="0.2406%" height="15" fill="rgb(210,20,26)" fg:x="316" fg:w="3"/><text x="25.5908%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="25.3408%" y="485" width="0.2406%" height="15" fill="rgb(216,18,1)" fg:x="316" fg:w="3"/><text x="25.5908%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="25.3408%" y="469" width="0.2406%" height="15" fill="rgb(206,163,23)" fg:x="316" fg:w="3"/><text x="25.5908%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.8220%" y="501" width="0.0802%" height="15" fill="rgb(229,150,31)" fg:x="322" fg:w="1"/><text x="26.0720%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (11 samples, 0.88%)</title><rect x="25.9022%" y="501" width="0.8821%" height="15" fill="rgb(231,10,5)" fg:x="323" fg:w="11"/><text x="26.1522%" y="511.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.80%)</title><rect x="25.9824%" y="485" width="0.8019%" height="15" fill="rgb(250,40,50)" fg:x="324" fg:w="10"/><text x="26.2324%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.56%)</title><rect x="26.2229%" y="469" width="0.5613%" height="15" fill="rgb(217,119,7)" fg:x="327" fg:w="7"/><text x="26.4729%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.56%)</title><rect x="26.2229%" y="453" width="0.5613%" height="15" fill="rgb(245,214,40)" fg:x="327" fg:w="7"/><text x="26.4729%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="26.5437%" y="437" width="0.2406%" height="15" fill="rgb(216,187,1)" fg:x="331" fg:w="3"/><text x="26.7937%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="26.5437%" y="421" width="0.2406%" height="15" fill="rgb(237,146,21)" fg:x="331" fg:w="3"/><text x="26.7937%" y="431.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="26.5437%" y="405" width="0.2406%" height="15" fill="rgb(210,174,47)" fg:x="331" fg:w="3"/><text x="26.7937%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.7843%" y="453" width="0.0802%" height="15" fill="rgb(218,111,39)" fg:x="334" fg:w="1"/><text x="27.0343%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.7843%" y="437" width="0.0802%" height="15" fill="rgb(224,95,19)" fg:x="334" fg:w="1"/><text x="27.0343%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="26.8645%" y="453" width="0.0802%" height="15" fill="rgb(234,15,38)" fg:x="335" fg:w="1"/><text x="27.1145%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.8645%" y="437" width="0.0802%" height="15" fill="rgb(246,56,12)" fg:x="335" fg:w="1"/><text x="27.1145%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="26.7843%" y="485" width="0.2406%" height="15" fill="rgb(247,16,17)" fg:x="334" fg:w="3"/><text x="27.0343%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="26.7843%" y="469" width="0.2406%" height="15" fill="rgb(215,151,11)" fg:x="334" fg:w="3"/><text x="27.0343%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.9447%" y="453" width="0.0802%" height="15" fill="rgb(225,16,24)" fg:x="336" fg:w="1"/><text x="27.1947%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.9447%" y="437" width="0.0802%" height="15" fill="rgb(217,117,5)" fg:x="336" fg:w="1"/><text x="27.1947%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.9447%" y="421" width="0.0802%" height="15" fill="rgb(246,187,53)" fg:x="336" fg:w="1"/><text x="27.1947%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="27.0249%" y="485" width="0.0802%" height="15" fill="rgb(241,71,40)" fg:x="337" fg:w="1"/><text x="27.2749%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.0249%" y="469" width="0.0802%" height="15" fill="rgb(231,67,39)" fg:x="337" fg:w="1"/><text x="27.2749%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.0249%" y="453" width="0.0802%" height="15" fill="rgb(222,120,24)" fg:x="337" fg:w="1"/><text x="27.2749%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="27.1051%" y="469" width="0.1604%" height="15" fill="rgb(248,3,3)" fg:x="338" fg:w="2"/><text x="27.3551%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.1852%" y="453" width="0.0802%" height="15" fill="rgb(228,218,5)" fg:x="339" fg:w="1"/><text x="27.4352%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.1852%" y="437" width="0.0802%" height="15" fill="rgb(212,202,43)" fg:x="339" fg:w="1"/><text x="27.4352%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.1852%" y="421" width="0.0802%" height="15" fill="rgb(235,183,2)" fg:x="339" fg:w="1"/><text x="27.4352%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="27.2654%" y="469" width="0.2406%" height="15" fill="rgb(230,165,10)" fg:x="340" fg:w="3"/><text x="27.5154%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="27.2654%" y="453" width="0.2406%" height="15" fill="rgb(219,54,40)" fg:x="340" fg:w="3"/><text x="27.5154%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.2654%" y="437" width="0.2406%" height="15" fill="rgb(244,73,9)" fg:x="340" fg:w="3"/><text x="27.5154%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.3456%" y="421" width="0.1604%" height="15" fill="rgb(212,32,45)" fg:x="341" fg:w="2"/><text x="27.5956%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="27.1051%" y="485" width="0.7217%" height="15" fill="rgb(205,58,31)" fg:x="338" fg:w="9"/><text x="27.3551%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="27.5060%" y="469" width="0.3208%" height="15" fill="rgb(250,120,43)" fg:x="343" fg:w="4"/><text x="27.7560%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.6664%" y="453" width="0.1604%" height="15" fill="rgb(235,13,10)" fg:x="345" fg:w="2"/><text x="27.9164%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.7466%" y="437" width="0.0802%" height="15" fill="rgb(232,219,31)" fg:x="346" fg:w="1"/><text x="27.9966%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="26.7843%" y="501" width="1.1227%" height="15" fill="rgb(218,157,51)" fg:x="334" fg:w="14"/><text x="27.0343%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.8268%" y="485" width="0.0802%" height="15" fill="rgb(211,91,52)" fg:x="347" fg:w="1"/><text x="28.0768%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.49%)</title><rect x="25.5814%" y="517" width="2.4860%" height="15" fill="rgb(240,173,1)" fg:x="319" fg:w="31"/><text x="25.8314%" y="527.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.9070%" y="501" width="0.1604%" height="15" fill="rgb(248,20,47)" fg:x="348" fg:w="2"/><text x="28.1570%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.9070%" y="485" width="0.1604%" height="15" fill="rgb(217,221,40)" fg:x="348" fg:w="2"/><text x="28.1570%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.9070%" y="469" width="0.1604%" height="15" fill="rgb(226,149,51)" fg:x="348" fg:w="2"/><text x="28.1570%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.9872%" y="453" width="0.0802%" height="15" fill="rgb(252,193,7)" fg:x="349" fg:w="1"/><text x="28.2372%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.9872%" y="437" width="0.0802%" height="15" fill="rgb(205,123,0)" fg:x="349" fg:w="1"/><text x="28.2372%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.9872%" y="421" width="0.0802%" height="15" fill="rgb(233,173,25)" fg:x="349" fg:w="1"/><text x="28.2372%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (45 samples, 3.61%)</title><rect x="24.6993%" y="533" width="3.6087%" height="15" fill="rgb(216,63,32)" fg:x="308" fg:w="45"/><text x="24.9493%" y="543.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.0674%" y="517" width="0.2406%" height="15" fill="rgb(209,56,45)" fg:x="350" fg:w="3"/><text x="28.3174%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.0674%" y="501" width="0.2406%" height="15" fill="rgb(226,111,49)" fg:x="350" fg:w="3"/><text x="28.3174%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.1476%" y="485" width="0.1604%" height="15" fill="rgb(244,181,21)" fg:x="351" fg:w="2"/><text x="28.3976%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.1476%" y="469" width="0.1604%" height="15" fill="rgb(222,126,15)" fg:x="351" fg:w="2"/><text x="28.3976%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.1476%" y="453" width="0.1604%" height="15" fill="rgb(222,95,17)" fg:x="351" fg:w="2"/><text x="28.3976%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.1476%" y="437" width="0.1604%" height="15" fill="rgb(254,46,5)" fg:x="351" fg:w="2"/><text x="28.3976%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.3881%" y="501" width="0.0802%" height="15" fill="rgb(236,216,35)" fg:x="354" fg:w="1"/><text x="28.6381%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.4683%" y="501" width="0.0802%" height="15" fill="rgb(217,187,26)" fg:x="355" fg:w="1"/><text x="28.7183%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.4683%" y="485" width="0.0802%" height="15" fill="rgb(207,192,25)" fg:x="355" fg:w="1"/><text x="28.7183%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.7089%" y="485" width="0.1604%" height="15" fill="rgb(253,135,27)" fg:x="358" fg:w="2"/><text x="28.9589%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="28.8693%" y="485" width="0.2406%" height="15" fill="rgb(211,122,29)" fg:x="360" fg:w="3"/><text x="29.1193%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.9495%" y="469" width="0.1604%" height="15" fill="rgb(233,162,40)" fg:x="361" fg:w="2"/><text x="29.1995%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.1099%" y="469" width="0.0802%" height="15" fill="rgb(222,184,47)" fg:x="363" fg:w="1"/><text x="29.3599%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.2702%" y="453" width="0.0802%" height="15" fill="rgb(249,99,23)" fg:x="365" fg:w="1"/><text x="29.5202%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="29.3504%" y="453" width="0.1604%" height="15" fill="rgb(214,60,12)" fg:x="366" fg:w="2"/><text x="29.6004%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.3504%" y="437" width="0.1604%" height="15" fill="rgb(250,229,36)" fg:x="366" fg:w="2"/><text x="29.6004%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.5910%" y="421" width="0.0802%" height="15" fill="rgb(232,195,10)" fg:x="369" fg:w="1"/><text x="29.8410%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="29.5108%" y="453" width="0.2406%" height="15" fill="rgb(205,213,31)" fg:x="368" fg:w="3"/><text x="29.7608%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="29.5108%" y="437" width="0.2406%" height="15" fill="rgb(237,43,8)" fg:x="368" fg:w="3"/><text x="29.7608%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.6712%" y="421" width="0.0802%" height="15" fill="rgb(216,208,3)" fg:x="370" fg:w="1"/><text x="29.9212%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.52%)</title><rect x="28.3079%" y="533" width="1.5237%" height="15" fill="rgb(228,179,44)" fg:x="353" fg:w="19"/><text x="28.5579%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.52%)</title><rect x="28.3079%" y="517" width="1.5237%" height="15" fill="rgb(230,192,27)" fg:x="353" fg:w="19"/><text x="28.5579%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="28.5485%" y="501" width="1.2831%" height="15" fill="rgb(251,30,38)" fg:x="356" fg:w="16"/><text x="28.7985%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="29.1099%" y="485" width="0.7217%" height="15" fill="rgb(246,55,52)" fg:x="363" fg:w="9"/><text x="29.3599%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="29.1901%" y="469" width="0.6415%" height="15" fill="rgb(249,79,26)" fg:x="364" fg:w="8"/><text x="29.4401%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.7514%" y="453" width="0.0802%" height="15" fill="rgb(220,202,16)" fg:x="371" fg:w="1"/><text x="30.0014%" y="463.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="29.9118%" y="517" width="0.3208%" height="15" fill="rgb(250,170,23)" fg:x="373" fg:w="4"/><text x="30.1618%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3929%" y="485" width="0.0802%" height="15" fill="rgb(230,7,37)" fg:x="379" fg:w="1"/><text x="30.6429%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.4731%" y="485" width="0.1604%" height="15" fill="rgb(213,71,1)" fg:x="380" fg:w="2"/><text x="30.7231%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.5533%" y="469" width="0.0802%" height="15" fill="rgb(227,87,39)" fg:x="381" fg:w="1"/><text x="30.8033%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.7137%" y="469" width="0.1604%" height="15" fill="rgb(210,41,29)" fg:x="383" fg:w="2"/><text x="30.9637%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="30.8741%" y="469" width="0.4010%" height="15" fill="rgb(206,191,31)" fg:x="385" fg:w="5"/><text x="31.1241%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="31.0345%" y="453" width="0.2406%" height="15" fill="rgb(247,75,54)" fg:x="387" fg:w="3"/><text x="31.2845%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3553%" y="453" width="0.0802%" height="15" fill="rgb(208,54,50)" fg:x="391" fg:w="1"/><text x="31.6053%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="31.4354%" y="453" width="0.2406%" height="15" fill="rgb(214,90,37)" fg:x="392" fg:w="3"/><text x="31.6854%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.5156%" y="437" width="0.1604%" height="15" fill="rgb(220,132,6)" fg:x="393" fg:w="2"/><text x="31.7656%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.7562%" y="437" width="0.1604%" height="15" fill="rgb(213,167,7)" fg:x="396" fg:w="2"/><text x="32.0062%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="31.9166%" y="437" width="0.2406%" height="15" fill="rgb(243,36,27)" fg:x="398" fg:w="3"/><text x="32.1666%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.9968%" y="421" width="0.1604%" height="15" fill="rgb(235,147,12)" fg:x="399" fg:w="2"/><text x="32.2468%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (25 samples, 2.00%)</title><rect x="30.2326%" y="517" width="2.0048%" height="15" fill="rgb(212,198,44)" fg:x="377" fg:w="25"/><text x="30.4826%" y="527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (25 samples, 2.00%)</title><rect x="30.2326%" y="501" width="2.0048%" height="15" fill="rgb(218,68,50)" fg:x="377" fg:w="25"/><text x="30.4826%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.60%)</title><rect x="30.6335%" y="485" width="1.6038%" height="15" fill="rgb(224,79,48)" fg:x="382" fg:w="20"/><text x="30.8835%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="31.2751%" y="469" width="0.9623%" height="15" fill="rgb(213,191,50)" fg:x="390" fg:w="12"/><text x="31.5251%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="31.6760%" y="453" width="0.5613%" height="15" fill="rgb(254,146,10)" fg:x="395" fg:w="7"/><text x="31.9260%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.1572%" y="437" width="0.0802%" height="15" fill="rgb(215,175,11)" fg:x="401" fg:w="1"/><text x="32.4072%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.1572%" y="421" width="0.0802%" height="15" fill="rgb(207,49,7)" fg:x="401" fg:w="1"/><text x="32.4072%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1572%" y="405" width="0.0802%" height="15" fill="rgb(234,144,29)" fg:x="401" fg:w="1"/><text x="32.4072%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="32.5581%" y="485" width="0.4812%" height="15" fill="rgb(213,222,48)" fg:x="406" fg:w="6"/><text x="32.8081%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.7987%" y="469" width="0.2406%" height="15" fill="rgb(222,8,6)" fg:x="409" fg:w="3"/><text x="33.0487%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="32.8789%" y="453" width="0.1604%" height="15" fill="rgb(221,114,49)" fg:x="410" fg:w="2"/><text x="33.1289%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0393%" y="453" width="0.0802%" height="15" fill="rgb(250,140,42)" fg:x="412" fg:w="1"/><text x="33.2893%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="33.0393%" y="485" width="0.1604%" height="15" fill="rgb(250,150,27)" fg:x="412" fg:w="2"/><text x="33.2893%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.0393%" y="469" width="0.1604%" height="15" fill="rgb(252,159,3)" fg:x="412" fg:w="2"/><text x="33.2893%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.1195%" y="453" width="0.0802%" height="15" fill="rgb(241,182,3)" fg:x="413" fg:w="1"/><text x="33.3695%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="33.1997%" y="485" width="0.0802%" height="15" fill="rgb(236,3,9)" fg:x="414" fg:w="1"/><text x="33.4497%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="33.2799%" y="485" width="0.0802%" height="15" fill="rgb(223,227,51)" fg:x="415" fg:w="1"/><text x="33.5299%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.2799%" y="469" width="0.0802%" height="15" fill="rgb(232,133,30)" fg:x="415" fg:w="1"/><text x="33.5299%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2799%" y="453" width="0.0802%" height="15" fill="rgb(209,93,27)" fg:x="415" fg:w="1"/><text x="33.5299%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.3601%" y="453" width="0.0802%" height="15" fill="rgb(208,108,34)" fg:x="416" fg:w="1"/><text x="33.6101%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.3601%" y="437" width="0.0802%" height="15" fill="rgb(215,189,13)" fg:x="416" fg:w="1"/><text x="33.6101%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3601%" y="421" width="0.0802%" height="15" fill="rgb(206,88,23)" fg:x="416" fg:w="1"/><text x="33.6101%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.6006%" y="405" width="0.1604%" height="15" fill="rgb(240,173,0)" fg:x="419" fg:w="2"/><text x="33.8506%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="33.5204%" y="437" width="0.3208%" height="15" fill="rgb(223,106,52)" fg:x="418" fg:w="4"/><text x="33.7704%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="33.5204%" y="421" width="0.3208%" height="15" fill="rgb(206,130,16)" fg:x="418" fg:w="4"/><text x="33.7704%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="33.7610%" y="405" width="0.0802%" height="15" fill="rgb(220,54,25)" fg:x="421" fg:w="1"/><text x="34.0110%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="33.7610%" y="389" width="0.0802%" height="15" fill="rgb(210,4,38)" fg:x="421" fg:w="1"/><text x="34.0110%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.8412%" y="405" width="0.1604%" height="15" fill="rgb(238,94,39)" fg:x="422" fg:w="2"/><text x="34.0912%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.8412%" y="389" width="0.1604%" height="15" fill="rgb(234,124,34)" fg:x="422" fg:w="2"/><text x="34.0912%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.8412%" y="373" width="0.1604%" height="15" fill="rgb(221,91,40)" fg:x="422" fg:w="2"/><text x="34.0912%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="33.8412%" y="421" width="0.4812%" height="15" fill="rgb(246,53,28)" fg:x="422" fg:w="6"/><text x="34.0912%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="34.0016%" y="405" width="0.3208%" height="15" fill="rgb(229,109,7)" fg:x="424" fg:w="4"/><text x="34.2516%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="34.0016%" y="389" width="0.3208%" height="15" fill="rgb(249,117,8)" fg:x="424" fg:w="4"/><text x="34.2516%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.1620%" y="373" width="0.1604%" height="15" fill="rgb(210,181,1)" fg:x="426" fg:w="2"/><text x="34.4120%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (13 samples, 1.04%)</title><rect x="33.3601%" y="485" width="1.0425%" height="15" fill="rgb(211,66,1)" fg:x="416" fg:w="13"/><text x="33.6101%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.04%)</title><rect x="33.3601%" y="469" width="1.0425%" height="15" fill="rgb(221,90,14)" fg:x="416" fg:w="13"/><text x="33.6101%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="33.4403%" y="453" width="0.9623%" height="15" fill="rgb(219,222,44)" fg:x="417" fg:w="12"/><text x="33.6903%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (7 samples, 0.56%)</title><rect x="33.8412%" y="437" width="0.5613%" height="15" fill="rgb(246,34,33)" fg:x="422" fg:w="7"/><text x="34.0912%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.3224%" y="421" width="0.0802%" height="15" fill="rgb(227,135,41)" fg:x="428" fg:w="1"/><text x="34.5724%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="34.4026%" y="485" width="0.0802%" height="15" fill="rgb(226,15,14)" fg:x="429" fg:w="1"/><text x="34.6526%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.4026%" y="469" width="0.0802%" height="15" fill="rgb(236,148,47)" fg:x="429" fg:w="1"/><text x="34.6526%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.4026%" y="453" width="0.0802%" height="15" fill="rgb(233,162,52)" fg:x="429" fg:w="1"/><text x="34.6526%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.4026%" y="437" width="0.0802%" height="15" fill="rgb(244,35,28)" fg:x="429" fg:w="1"/><text x="34.6526%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="34.6431%" y="469" width="0.0802%" height="15" fill="rgb(205,121,10)" fg:x="432" fg:w="1"/><text x="34.8931%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7233%" y="469" width="0.0802%" height="15" fill="rgb(250,58,18)" fg:x="433" fg:w="1"/><text x="34.9733%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7233%" y="453" width="0.0802%" height="15" fill="rgb(216,37,13)" fg:x="433" fg:w="1"/><text x="34.9733%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7233%" y="437" width="0.0802%" height="15" fill="rgb(221,215,42)" fg:x="433" fg:w="1"/><text x="34.9733%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="34.8035%" y="453" width="0.1604%" height="15" fill="rgb(217,214,19)" fg:x="434" fg:w="2"/><text x="35.0535%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.9639%" y="437" width="0.2406%" height="15" fill="rgb(233,139,13)" fg:x="436" fg:w="3"/><text x="35.2139%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.0441%" y="421" width="0.1604%" height="15" fill="rgb(247,168,23)" fg:x="437" fg:w="2"/><text x="35.2941%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.0441%" y="405" width="0.1604%" height="15" fill="rgb(207,202,1)" fg:x="437" fg:w="2"/><text x="35.2941%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="35.2045%" y="421" width="0.1604%" height="15" fill="rgb(220,155,48)" fg:x="439" fg:w="2"/><text x="35.4545%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="35.3649%" y="421" width="0.4010%" height="15" fill="rgb(250,43,26)" fg:x="441" fg:w="5"/><text x="35.6149%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="35.3649%" y="405" width="0.4010%" height="15" fill="rgb(212,190,23)" fg:x="441" fg:w="5"/><text x="35.6149%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.5253%" y="389" width="0.2406%" height="15" fill="rgb(216,39,24)" fg:x="443" fg:w="3"/><text x="35.7753%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="35.6856%" y="373" width="0.0802%" height="15" fill="rgb(252,113,16)" fg:x="445" fg:w="1"/><text x="35.9356%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="34.9639%" y="453" width="0.9623%" height="15" fill="rgb(208,113,19)" fg:x="436" fg:w="12"/><text x="35.2139%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="35.2045%" y="437" width="0.7217%" height="15" fill="rgb(234,107,25)" fg:x="439" fg:w="9"/><text x="35.4545%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.7658%" y="421" width="0.1604%" height="15" fill="rgb(234,217,51)" fg:x="446" fg:w="2"/><text x="36.0158%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (48 samples, 3.85%)</title><rect x="32.2374%" y="517" width="3.8492%" height="15" fill="rgb(251,29,42)" fg:x="402" fg:w="48"/><text x="32.4874%" y="527.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 3.85%)</title><rect x="32.2374%" y="501" width="3.8492%" height="15" fill="rgb(221,62,51)" fg:x="402" fg:w="48"/><text x="32.4874%" y="511.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.60%)</title><rect x="34.4828%" y="485" width="1.6038%" height="15" fill="rgb(240,192,43)" fg:x="430" fg:w="20"/><text x="34.7328%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (16 samples, 1.28%)</title><rect x="34.8035%" y="469" width="1.2831%" height="15" fill="rgb(224,157,47)" fg:x="434" fg:w="16"/><text x="35.0535%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="35.9262%" y="453" width="0.1604%" height="15" fill="rgb(226,84,45)" fg:x="448" fg:w="2"/><text x="36.1762%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0064%" y="437" width="0.0802%" height="15" fill="rgb(208,207,23)" fg:x="449" fg:w="1"/><text x="36.2564%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="37.1291%" y="373" width="0.2406%" height="15" fill="rgb(253,34,51)" fg:x="463" fg:w="3"/><text x="37.3791%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="37.1291%" y="357" width="0.2406%" height="15" fill="rgb(227,26,34)" fg:x="463" fg:w="3"/><text x="37.3791%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="37.2093%" y="341" width="0.1604%" height="15" fill="rgb(245,75,19)" fg:x="464" fg:w="2"/><text x="37.4593%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2895%" y="325" width="0.0802%" height="15" fill="rgb(250,191,31)" fg:x="465" fg:w="1"/><text x="37.5395%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="37.3697%" y="325" width="0.0802%" height="15" fill="rgb(224,11,50)" fg:x="466" fg:w="1"/><text x="37.6197%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="37.4499%" y="325" width="0.2406%" height="15" fill="rgb(231,171,7)" fg:x="467" fg:w="3"/><text x="37.6999%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="37.5301%" y="309" width="0.1604%" height="15" fill="rgb(252,214,10)" fg:x="468" fg:w="2"/><text x="37.7801%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="37.3697%" y="357" width="0.4010%" height="15" fill="rgb(249,45,46)" fg:x="466" fg:w="5"/><text x="37.6197%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="37.3697%" y="341" width="0.4010%" height="15" fill="rgb(240,173,7)" fg:x="466" fg:w="5"/><text x="37.6197%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6905%" y="325" width="0.0802%" height="15" fill="rgb(235,214,13)" fg:x="470" fg:w="1"/><text x="37.9405%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6905%" y="309" width="0.0802%" height="15" fill="rgb(245,156,8)" fg:x="470" fg:w="1"/><text x="37.9405%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6905%" y="293" width="0.0802%" height="15" fill="rgb(235,46,12)" fg:x="470" fg:w="1"/><text x="37.9405%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="37.7706%" y="341" width="0.0802%" height="15" fill="rgb(221,81,14)" fg:x="471" fg:w="1"/><text x="38.0206%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8508%" y="341" width="0.0802%" height="15" fill="rgb(238,207,9)" fg:x="472" fg:w="1"/><text x="38.1008%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="37.7706%" y="357" width="0.2406%" height="15" fill="rgb(224,129,35)" fg:x="471" fg:w="3"/><text x="38.0206%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="37.9310%" y="341" width="0.0802%" height="15" fill="rgb(243,218,34)" fg:x="473" fg:w="1"/><text x="38.1810%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="37.9310%" y="325" width="0.0802%" height="15" fill="rgb(220,166,13)" fg:x="473" fg:w="1"/><text x="38.1810%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.20%)</title><rect x="36.8885%" y="389" width="1.2029%" height="15" fill="rgb(227,167,49)" fg:x="460" fg:w="15"/><text x="37.1385%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="37.3697%" y="373" width="0.7217%" height="15" fill="rgb(234,142,12)" fg:x="466" fg:w="9"/><text x="37.6197%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.0112%" y="357" width="0.0802%" height="15" fill="rgb(207,100,48)" fg:x="474" fg:w="1"/><text x="38.2612%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.0112%" y="341" width="0.0802%" height="15" fill="rgb(210,25,14)" fg:x="474" fg:w="1"/><text x="38.2612%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0112%" y="325" width="0.0802%" height="15" fill="rgb(246,116,27)" fg:x="474" fg:w="1"/><text x="38.2612%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="38.0914%" y="389" width="0.2406%" height="15" fill="rgb(214,193,42)" fg:x="475" fg:w="3"/><text x="38.3414%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="38.1716%" y="373" width="0.1604%" height="15" fill="rgb(214,122,8)" fg:x="476" fg:w="2"/><text x="38.4216%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.76%)</title><rect x="36.7281%" y="421" width="1.7642%" height="15" fill="rgb(244,173,18)" fg:x="458" fg:w="22"/><text x="36.9781%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.76%)</title><rect x="36.7281%" y="405" width="1.7642%" height="15" fill="rgb(232,68,19)" fg:x="458" fg:w="22"/><text x="36.9781%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.3320%" y="389" width="0.1604%" height="15" fill="rgb(236,224,1)" fg:x="478" fg:w="2"/><text x="38.5820%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.5726%" y="405" width="0.0802%" height="15" fill="rgb(240,11,8)" fg:x="481" fg:w="1"/><text x="38.8226%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="38.4924%" y="421" width="0.4010%" height="15" fill="rgb(244,159,20)" fg:x="480" fg:w="5"/><text x="38.7424%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="38.6528%" y="405" width="0.2406%" height="15" fill="rgb(240,223,54)" fg:x="482" fg:w="3"/><text x="38.9028%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (33 samples, 2.65%)</title><rect x="36.3272%" y="453" width="2.6464%" height="15" fill="rgb(237,146,5)" fg:x="453" fg:w="33"/><text x="36.5772%" y="463.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (30 samples, 2.41%)</title><rect x="36.5678%" y="437" width="2.4058%" height="15" fill="rgb(218,221,32)" fg:x="456" fg:w="30"/><text x="36.8178%" y="447.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8933%" y="421" width="0.0802%" height="15" fill="rgb(244,96,26)" fg:x="485" fg:w="1"/><text x="39.1433%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="39.0537%" y="437" width="0.0802%" height="15" fill="rgb(245,184,37)" fg:x="487" fg:w="1"/><text x="39.3037%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="38.9735%" y="453" width="0.3208%" height="15" fill="rgb(248,91,47)" fg:x="486" fg:w="4"/><text x="39.2235%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.1339%" y="437" width="0.1604%" height="15" fill="rgb(243,199,8)" fg:x="488" fg:w="2"/><text x="39.3839%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (44 samples, 3.53%)</title><rect x="36.0866%" y="517" width="3.5285%" height="15" fill="rgb(249,12,15)" fg:x="450" fg:w="44"/><text x="36.3366%" y="527.50">ser..</text></g><g><title>serde_json::de::from_trait (44 samples, 3.53%)</title><rect x="36.0866%" y="501" width="3.5285%" height="15" fill="rgb(245,97,12)" fg:x="450" fg:w="44"/><text x="36.3366%" y="511.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (44 samples, 3.53%)</title><rect x="36.0866%" y="485" width="3.5285%" height="15" fill="rgb(244,61,1)" fg:x="450" fg:w="44"/><text x="36.3366%" y="495.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (43 samples, 3.45%)</title><rect x="36.1668%" y="469" width="3.4483%" height="15" fill="rgb(222,194,10)" fg:x="451" fg:w="43"/><text x="36.4168%" y="479.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="39.2943%" y="453" width="0.3208%" height="15" fill="rgb(226,178,8)" fg:x="490" fg:w="4"/><text x="39.5443%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.5349%" y="437" width="0.0802%" height="15" fill="rgb(241,32,34)" fg:x="493" fg:w="1"/><text x="39.7849%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="40.1764%" y="453" width="0.0802%" height="15" fill="rgb(254,26,6)" fg:x="501" fg:w="1"/><text x="40.4264%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.1764%" y="437" width="0.0802%" height="15" fill="rgb(249,71,11)" fg:x="501" fg:w="1"/><text x="40.4264%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.2566%" y="437" width="0.0802%" height="15" fill="rgb(232,170,27)" fg:x="502" fg:w="1"/><text x="40.5066%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.2566%" y="421" width="0.0802%" height="15" fill="rgb(214,223,17)" fg:x="502" fg:w="1"/><text x="40.5066%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="39.7755%" y="485" width="0.6415%" height="15" fill="rgb(250,18,15)" fg:x="496" fg:w="8"/><text x="40.0255%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="40.0962%" y="469" width="0.3208%" height="15" fill="rgb(212,153,51)" fg:x="500" fg:w="4"/><text x="40.3462%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="40.2566%" y="453" width="0.1604%" height="15" fill="rgb(219,194,12)" fg:x="502" fg:w="2"/><text x="40.5066%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.3368%" y="437" width="0.0802%" height="15" fill="rgb(212,58,17)" fg:x="503" fg:w="1"/><text x="40.5868%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.80%)</title><rect x="39.6953%" y="501" width="0.8019%" height="15" fill="rgb(254,5,10)" fg:x="495" fg:w="10"/><text x="39.9453%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.4170%" y="485" width="0.0802%" height="15" fill="rgb(246,91,7)" fg:x="504" fg:w="1"/><text x="40.6670%" y="495.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (201 samples, 16.12%)</title><rect x="24.4587%" y="565" width="16.1187%" height="15" fill="rgb(218,108,49)" fg:x="305" fg:w="201"/><text x="24.7087%" y="575.50">engine::internal::Entitie..</text></g><g><title>engine::session::Session::check_for_changes (200 samples, 16.04%)</title><rect x="24.5389%" y="549" width="16.0385%" height="15" fill="rgb(238,123,20)" fg:x="306" fg:w="200"/><text x="24.7889%" y="559.50">engine::session::Session:..</text></g><g><title>kernel::compare::any_entity_changes (134 samples, 10.75%)</title><rect x="29.8316%" y="533" width="10.7458%" height="15" fill="rgb(231,69,23)" fg:x="372" fg:w="134"/><text x="30.0816%" y="543.50">kernel::compare:..</text></g><g><title>treediff::diff::diff (12 samples, 0.96%)</title><rect x="39.6151%" y="517" width="0.9623%" height="15" fill="rgb(230,209,3)" fg:x="494" fg:w="12"/><text x="39.8651%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4972%" y="501" width="0.0802%" height="15" fill="rgb(231,19,0)" fg:x="505" fg:w="1"/><text x="40.7472%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.7378%" y="405" width="0.0802%" height="15" fill="rgb(226,192,25)" fg:x="508" fg:w="1"/><text x="40.9878%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.7378%" y="389" width="0.0802%" height="15" fill="rgb(223,175,53)" fg:x="508" fg:w="1"/><text x="40.9878%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="40.7378%" y="373" width="0.0802%" height="15" fill="rgb(248,35,51)" fg:x="508" fg:w="1"/><text x="40.9878%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="40.7378%" y="357" width="0.0802%" height="15" fill="rgb(230,37,26)" fg:x="508" fg:w="1"/><text x="40.9878%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="40.7378%" y="341" width="0.0802%" height="15" fill="rgb(206,120,22)" fg:x="508" fg:w="1"/><text x="40.9878%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="40.7378%" y="325" width="0.0802%" height="15" fill="rgb(207,165,28)" fg:x="508" fg:w="1"/><text x="40.9878%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.7378%" y="309" width="0.0802%" height="15" fill="rgb(226,23,46)" fg:x="508" fg:w="1"/><text x="40.9878%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.7378%" y="293" width="0.0802%" height="15" fill="rgb(208,130,44)" fg:x="508" fg:w="1"/><text x="40.9878%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.7378%" y="277" width="0.0802%" height="15" fill="rgb(231,67,8)" fg:x="508" fg:w="1"/><text x="40.9878%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="40.7378%" y="261" width="0.0802%" height="15" fill="rgb(205,183,22)" fg:x="508" fg:w="1"/><text x="40.9878%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.7378%" y="245" width="0.0802%" height="15" fill="rgb(224,47,9)" fg:x="508" fg:w="1"/><text x="40.9878%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7378%" y="229" width="0.0802%" height="15" fill="rgb(250,183,49)" fg:x="508" fg:w="1"/><text x="40.9878%" y="239.50"></text></g><g><title>engine::session::Session::save_entity_changes (214 samples, 17.16%)</title><rect x="23.8172%" y="581" width="17.1612%" height="15" fill="rgb(220,151,39)" fg:x="297" fg:w="214"/><text x="24.0672%" y="591.50">engine::session::Session::s..</text></g><g><title>engine::session::Session::world (5 samples, 0.40%)</title><rect x="40.5774%" y="565" width="0.4010%" height="15" fill="rgb(220,118,20)" fg:x="506" fg:w="5"/><text x="40.8274%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="40.5774%" y="549" width="0.4010%" height="15" fill="rgb(231,65,51)" fg:x="506" fg:w="5"/><text x="40.8274%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="40.5774%" y="533" width="0.4010%" height="15" fill="rgb(253,125,37)" fg:x="506" fg:w="5"/><text x="40.8274%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.40%)</title><rect x="40.5774%" y="517" width="0.4010%" height="15" fill="rgb(232,102,6)" fg:x="506" fg:w="5"/><text x="40.8274%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="40.5774%" y="501" width="0.4010%" height="15" fill="rgb(251,105,13)" fg:x="506" fg:w="5"/><text x="40.8274%" y="511.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="40.5774%" y="485" width="0.4010%" height="15" fill="rgb(222,179,29)" fg:x="506" fg:w="5"/><text x="40.8274%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="40.5774%" y="469" width="0.4010%" height="15" fill="rgb(229,180,53)" fg:x="506" fg:w="5"/><text x="40.8274%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="40.5774%" y="453" width="0.4010%" height="15" fill="rgb(238,104,13)" fg:x="506" fg:w="5"/><text x="40.8274%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.40%)</title><rect x="40.5774%" y="437" width="0.4010%" height="15" fill="rgb(210,130,5)" fg:x="506" fg:w="5"/><text x="40.8274%" y="447.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="40.6576%" y="421" width="0.3208%" height="15" fill="rgb(233,87,49)" fg:x="507" fg:w="4"/><text x="40.9076%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="40.8180%" y="405" width="0.1604%" height="15" fill="rgb(243,34,9)" fg:x="509" fg:w="2"/><text x="41.0680%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="40.8180%" y="389" width="0.1604%" height="15" fill="rgb(235,225,10)" fg:x="509" fg:w="2"/><text x="41.0680%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="40.8982%" y="373" width="0.0802%" height="15" fill="rgb(212,0,30)" fg:x="510" fg:w="1"/><text x="41.1482%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="40.8982%" y="357" width="0.0802%" height="15" fill="rgb(211,177,0)" fg:x="510" fg:w="1"/><text x="41.1482%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="40.8982%" y="341" width="0.0802%" height="15" fill="rgb(225,220,11)" fg:x="510" fg:w="1"/><text x="41.1482%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.8982%" y="325" width="0.0802%" height="15" fill="rgb(215,10,13)" fg:x="510" fg:w="1"/><text x="41.1482%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.8982%" y="309" width="0.0802%" height="15" fill="rgb(240,177,14)" fg:x="510" fg:w="1"/><text x="41.1482%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="40.8982%" y="293" width="0.0802%" height="15" fill="rgb(243,7,39)" fg:x="510" fg:w="1"/><text x="41.1482%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="40.8982%" y="277" width="0.0802%" height="15" fill="rgb(212,99,0)" fg:x="510" fg:w="1"/><text x="41.1482%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="40.8982%" y="261" width="0.0802%" height="15" fill="rgb(225,162,48)" fg:x="510" fg:w="1"/><text x="41.1482%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="40.8982%" y="245" width="0.0802%" height="15" fill="rgb(246,16,25)" fg:x="510" fg:w="1"/><text x="41.1482%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.8982%" y="229" width="0.0802%" height="15" fill="rgb(220,150,2)" fg:x="510" fg:w="1"/><text x="41.1482%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.8982%" y="213" width="0.0802%" height="15" fill="rgb(237,113,11)" fg:x="510" fg:w="1"/><text x="41.1482%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.8982%" y="197" width="0.0802%" height="15" fill="rgb(236,70,20)" fg:x="510" fg:w="1"/><text x="41.1482%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="40.8982%" y="181" width="0.0802%" height="15" fill="rgb(234,94,7)" fg:x="510" fg:w="1"/><text x="41.1482%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.8982%" y="165" width="0.0802%" height="15" fill="rgb(250,221,0)" fg:x="510" fg:w="1"/><text x="41.1482%" y="175.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="40.8982%" y="149" width="0.0802%" height="15" fill="rgb(245,149,46)" fg:x="510" fg:w="1"/><text x="41.1482%" y="159.50"></text></g><g><title>engine::session::Session::close (218 samples, 17.48%)</title><rect x="23.5766%" y="597" width="17.4820%" height="15" fill="rgb(215,37,27)" fg:x="294" fg:w="218"/><text x="23.8266%" y="607.50">engine::session::Session::c..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="40.9783%" y="581" width="0.0802%" height="15" fill="rgb(232,65,3)" fg:x="511" fg:w="1"/><text x="41.2283%" y="591.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="40.9783%" y="565" width="0.0802%" height="15" fill="rgb(214,2,16)" fg:x="511" fg:w="1"/><text x="41.2283%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="40.9783%" y="549" width="0.0802%" height="15" fill="rgb(227,131,50)" fg:x="511" fg:w="1"/><text x="41.2283%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="40.9783%" y="533" width="0.0802%" height="15" fill="rgb(247,131,45)" fg:x="511" fg:w="1"/><text x="41.2283%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="40.9783%" y="517" width="0.0802%" height="15" fill="rgb(215,97,47)" fg:x="511" fg:w="1"/><text x="41.2283%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.0585%" y="565" width="0.0802%" height="15" fill="rgb(233,143,12)" fg:x="512" fg:w="1"/><text x="41.3085%" y="575.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="41.0585%" y="549" width="0.0802%" height="15" fill="rgb(222,57,17)" fg:x="512" fg:w="1"/><text x="41.3085%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.08%)</title><rect x="41.0585%" y="533" width="0.0802%" height="15" fill="rgb(214,119,38)" fg:x="512" fg:w="1"/><text x="41.3085%" y="543.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="41.2189%" y="437" width="0.0802%" height="15" fill="rgb(217,28,47)" fg:x="514" fg:w="1"/><text x="41.4689%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2991%" y="437" width="0.0802%" height="15" fill="rgb(231,14,52)" fg:x="515" fg:w="1"/><text x="41.5491%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="41.3793%" y="293" width="0.0802%" height="15" fill="rgb(220,158,18)" fg:x="516" fg:w="1"/><text x="41.6293%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3793%" y="277" width="0.0802%" height="15" fill="rgb(222,143,46)" fg:x="516" fg:w="1"/><text x="41.6293%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.3793%" y="437" width="0.1604%" height="15" fill="rgb(227,165,5)" fg:x="516" fg:w="2"/><text x="41.6293%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.3793%" y="421" width="0.1604%" height="15" fill="rgb(216,222,49)" fg:x="516" fg:w="2"/><text x="41.6293%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.3793%" y="405" width="0.1604%" height="15" fill="rgb(238,73,39)" fg:x="516" fg:w="2"/><text x="41.6293%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="41.3793%" y="389" width="0.1604%" height="15" fill="rgb(252,115,9)" fg:x="516" fg:w="2"/><text x="41.6293%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="41.3793%" y="373" width="0.1604%" height="15" fill="rgb(238,202,4)" fg:x="516" fg:w="2"/><text x="41.6293%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="41.3793%" y="357" width="0.1604%" height="15" fill="rgb(252,153,44)" fg:x="516" fg:w="2"/><text x="41.6293%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="41.3793%" y="341" width="0.1604%" height="15" fill="rgb(235,128,27)" fg:x="516" fg:w="2"/><text x="41.6293%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="41.3793%" y="325" width="0.1604%" height="15" fill="rgb(221,121,47)" fg:x="516" fg:w="2"/><text x="41.6293%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="41.3793%" y="309" width="0.1604%" height="15" fill="rgb(247,211,47)" fg:x="516" fg:w="2"/><text x="41.6293%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4595%" y="293" width="0.0802%" height="15" fill="rgb(252,47,49)" fg:x="517" fg:w="1"/><text x="41.7095%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4595%" y="277" width="0.0802%" height="15" fill="rgb(219,119,53)" fg:x="517" fg:w="1"/><text x="41.7095%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.6199%" y="405" width="0.0802%" height="15" fill="rgb(243,165,53)" fg:x="519" fg:w="1"/><text x="41.8699%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.56%)</title><rect x="41.2189%" y="501" width="0.5613%" height="15" fill="rgb(230,12,35)" fg:x="514" fg:w="7"/><text x="41.4689%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.56%)</title><rect x="41.2189%" y="485" width="0.5613%" height="15" fill="rgb(239,57,49)" fg:x="514" fg:w="7"/><text x="41.4689%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="41.2189%" y="469" width="0.5613%" height="15" fill="rgb(231,154,7)" fg:x="514" fg:w="7"/><text x="41.4689%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="41.2189%" y="453" width="0.5613%" height="15" fill="rgb(248,81,34)" fg:x="514" fg:w="7"/><text x="41.4689%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.5397%" y="437" width="0.2406%" height="15" fill="rgb(247,9,5)" fg:x="518" fg:w="3"/><text x="41.7897%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.6199%" y="421" width="0.1604%" height="15" fill="rgb(228,172,27)" fg:x="519" fg:w="2"/><text x="41.8699%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.7001%" y="405" width="0.0802%" height="15" fill="rgb(230,57,44)" fg:x="520" fg:w="1"/><text x="41.9501%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.7001%" y="389" width="0.0802%" height="15" fill="rgb(249,35,22)" fg:x="520" fg:w="1"/><text x="41.9501%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.7001%" y="373" width="0.0802%" height="15" fill="rgb(250,137,27)" fg:x="520" fg:w="1"/><text x="41.9501%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.7001%" y="357" width="0.0802%" height="15" fill="rgb(251,57,31)" fg:x="520" fg:w="1"/><text x="41.9501%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.7803%" y="453" width="0.0802%" height="15" fill="rgb(238,60,0)" fg:x="521" fg:w="1"/><text x="42.0303%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.9407%" y="421" width="0.0802%" height="15" fill="rgb(242,185,39)" fg:x="523" fg:w="1"/><text x="42.1907%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9407%" y="405" width="0.0802%" height="15" fill="rgb(240,63,43)" fg:x="523" fg:w="1"/><text x="42.1907%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1010%" y="389" width="0.0802%" height="15" fill="rgb(236,155,6)" fg:x="525" fg:w="1"/><text x="42.3510%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.1812%" y="357" width="0.0802%" height="15" fill="rgb(215,11,29)" fg:x="526" fg:w="1"/><text x="42.4312%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="42.1812%" y="341" width="0.0802%" height="15" fill="rgb(228,180,48)" fg:x="526" fg:w="1"/><text x="42.4312%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="42.1812%" y="325" width="0.0802%" height="15" fill="rgb(241,102,12)" fg:x="526" fg:w="1"/><text x="42.4312%" y="335.50"></text></g><g><title>engine::internal::Entities::prepare_entity (15 samples, 1.20%)</title><rect x="41.2189%" y="533" width="1.2029%" height="15" fill="rgb(246,213,4)" fg:x="514" fg:w="15"/><text x="41.4689%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (15 samples, 1.20%)</title><rect x="41.2189%" y="517" width="1.2029%" height="15" fill="rgb(218,134,35)" fg:x="514" fg:w="15"/><text x="41.4689%" y="527.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="41.7803%" y="501" width="0.6415%" height="15" fill="rgb(251,117,35)" fg:x="521" fg:w="8"/><text x="42.0303%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="41.7803%" y="485" width="0.6415%" height="15" fill="rgb(206,156,45)" fg:x="521" fg:w="8"/><text x="42.0303%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="41.7803%" y="469" width="0.6415%" height="15" fill="rgb(218,52,27)" fg:x="521" fg:w="8"/><text x="42.0303%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="41.8605%" y="453" width="0.5613%" height="15" fill="rgb(238,83,36)" fg:x="522" fg:w="7"/><text x="42.1105%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="41.8605%" y="437" width="0.5613%" height="15" fill="rgb(218,53,43)" fg:x="522" fg:w="7"/><text x="42.1105%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="42.0209%" y="421" width="0.4010%" height="15" fill="rgb(239,54,39)" fg:x="524" fg:w="5"/><text x="42.2709%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="42.1010%" y="405" width="0.3208%" height="15" fill="rgb(212,198,13)" fg:x="525" fg:w="4"/><text x="42.3510%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="42.1812%" y="389" width="0.2406%" height="15" fill="rgb(234,54,46)" fg:x="526" fg:w="3"/><text x="42.4312%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="42.1812%" y="373" width="0.2406%" height="15" fill="rgb(217,120,7)" fg:x="526" fg:w="3"/><text x="42.4312%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.2614%" y="357" width="0.1604%" height="15" fill="rgb(246,39,15)" fg:x="527" fg:w="2"/><text x="42.5114%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (16 samples, 1.28%)</title><rect x="41.2189%" y="549" width="1.2831%" height="15" fill="rgb(242,143,31)" fg:x="514" fg:w="16"/><text x="41.4689%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="42.4218%" y="533" width="0.0802%" height="15" fill="rgb(252,60,24)" fg:x="529" fg:w="1"/><text x="42.6718%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.4218%" y="517" width="0.0802%" height="15" fill="rgb(249,220,7)" fg:x="529" fg:w="1"/><text x="42.6718%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.4218%" y="501" width="0.0802%" height="15" fill="rgb(236,67,13)" fg:x="529" fg:w="1"/><text x="42.6718%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.4218%" y="485" width="0.0802%" height="15" fill="rgb(210,62,39)" fg:x="529" fg:w="1"/><text x="42.6718%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.4218%" y="469" width="0.0802%" height="15" fill="rgb(219,122,53)" fg:x="529" fg:w="1"/><text x="42.6718%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="42.4218%" y="453" width="0.0802%" height="15" fill="rgb(218,87,25)" fg:x="529" fg:w="1"/><text x="42.6718%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="42.4218%" y="437" width="0.0802%" height="15" fill="rgb(234,179,48)" fg:x="529" fg:w="1"/><text x="42.6718%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.4218%" y="421" width="0.0802%" height="15" fill="rgb(248,90,0)" fg:x="529" fg:w="1"/><text x="42.6718%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5020%" y="549" width="0.0802%" height="15" fill="rgb(207,228,37)" fg:x="530" fg:w="1"/><text x="42.7520%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="42.5822%" y="517" width="0.0802%" height="15" fill="rgb(235,214,15)" fg:x="531" fg:w="1"/><text x="42.8322%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="42.5822%" y="501" width="0.0802%" height="15" fill="rgb(210,144,39)" fg:x="531" fg:w="1"/><text x="42.8322%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.5822%" y="485" width="0.0802%" height="15" fill="rgb(222,67,41)" fg:x="531" fg:w="1"/><text x="42.8322%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.5822%" y="469" width="0.0802%" height="15" fill="rgb(205,35,37)" fg:x="531" fg:w="1"/><text x="42.8322%" y="479.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="42.5822%" y="549" width="0.1604%" height="15" fill="rgb(216,125,40)" fg:x="531" fg:w="2"/><text x="42.8322%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="42.5822%" y="533" width="0.1604%" height="15" fill="rgb(228,227,20)" fg:x="531" fg:w="2"/><text x="42.8322%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="42.6624%" y="517" width="0.0802%" height="15" fill="rgb(242,173,45)" fg:x="532" fg:w="1"/><text x="42.9124%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.6624%" y="501" width="0.0802%" height="15" fill="rgb(215,79,24)" fg:x="532" fg:w="1"/><text x="42.9124%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.6624%" y="485" width="0.0802%" height="15" fill="rgb(238,164,38)" fg:x="532" fg:w="1"/><text x="42.9124%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.6624%" y="469" width="0.0802%" height="15" fill="rgb(245,196,38)" fg:x="532" fg:w="1"/><text x="42.9124%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.6624%" y="453" width="0.0802%" height="15" fill="rgb(231,217,29)" fg:x="532" fg:w="1"/><text x="42.9124%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7426%" y="533" width="0.0802%" height="15" fill="rgb(245,6,4)" fg:x="533" fg:w="1"/><text x="42.9926%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7426%" y="517" width="0.0802%" height="15" fill="rgb(214,76,49)" fg:x="533" fg:w="1"/><text x="42.9926%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.7426%" y="501" width="0.0802%" height="15" fill="rgb(205,96,12)" fg:x="533" fg:w="1"/><text x="42.9926%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.7426%" y="485" width="0.0802%" height="15" fill="rgb(243,131,4)" fg:x="533" fg:w="1"/><text x="42.9926%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.7426%" y="469" width="0.0802%" height="15" fill="rgb(214,114,4)" fg:x="533" fg:w="1"/><text x="42.9926%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.7426%" y="453" width="0.0802%" height="15" fill="rgb(234,215,15)" fg:x="533" fg:w="1"/><text x="42.9926%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.7426%" y="437" width="0.0802%" height="15" fill="rgb(250,216,45)" fg:x="533" fg:w="1"/><text x="42.9926%" y="447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.9030%" y="485" width="0.0802%" height="15" fill="rgb(236,128,4)" fg:x="535" fg:w="1"/><text x="43.1530%" y="495.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (24 samples, 1.92%)</title><rect x="41.1387%" y="565" width="1.9246%" height="15" fill="rgb(234,50,33)" fg:x="513" fg:w="24"/><text x="41.3887%" y="575.50">e..</text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="42.7426%" y="549" width="0.3208%" height="15" fill="rgb(253,131,37)" fg:x="533" fg:w="4"/><text x="42.9926%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="42.8228%" y="533" width="0.2406%" height="15" fill="rgb(218,55,27)" fg:x="534" fg:w="3"/><text x="43.0728%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="42.8228%" y="517" width="0.2406%" height="15" fill="rgb(241,220,28)" fg:x="534" fg:w="3"/><text x="43.0728%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.9030%" y="501" width="0.1604%" height="15" fill="rgb(241,90,48)" fg:x="535" fg:w="2"/><text x="43.1530%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.9832%" y="485" width="0.0802%" height="15" fill="rgb(216,43,37)" fg:x="536" fg:w="1"/><text x="43.2332%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="43.2237%" y="533" width="0.0802%" height="15" fill="rgb(207,173,9)" fg:x="539" fg:w="1"/><text x="43.4737%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="43.2237%" y="517" width="0.0802%" height="15" fill="rgb(240,126,30)" fg:x="539" fg:w="1"/><text x="43.4737%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2237%" y="501" width="0.0802%" height="15" fill="rgb(228,178,53)" fg:x="539" fg:w="1"/><text x="43.4737%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (2 samples, 0.16%)</title><rect x="43.2237%" y="549" width="0.1604%" height="15" fill="rgb(217,33,4)" fg:x="539" fg:w="2"/><text x="43.4737%" y="559.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="43.3039%" y="533" width="0.0802%" height="15" fill="rgb(206,124,34)" fg:x="540" fg:w="1"/><text x="43.5539%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3039%" y="517" width="0.0802%" height="15" fill="rgb(208,122,53)" fg:x="540" fg:w="1"/><text x="43.5539%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3039%" y="501" width="0.0802%" height="15" fill="rgb(215,202,26)" fg:x="540" fg:w="1"/><text x="43.5539%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3039%" y="485" width="0.0802%" height="15" fill="rgb(232,198,31)" fg:x="540" fg:w="1"/><text x="43.5539%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.3039%" y="469" width="0.0802%" height="15" fill="rgb(222,23,35)" fg:x="540" fg:w="1"/><text x="43.5539%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.3039%" y="453" width="0.0802%" height="15" fill="rgb(242,27,53)" fg:x="540" fg:w="1"/><text x="43.5539%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.3039%" y="437" width="0.0802%" height="15" fill="rgb(210,216,42)" fg:x="540" fg:w="1"/><text x="43.5539%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.3039%" y="421" width="0.0802%" height="15" fill="rgb(234,39,38)" fg:x="540" fg:w="1"/><text x="43.5539%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.3039%" y="405" width="0.0802%" height="15" fill="rgb(235,126,54)" fg:x="540" fg:w="1"/><text x="43.5539%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.3039%" y="389" width="0.0802%" height="15" fill="rgb(235,150,33)" fg:x="540" fg:w="1"/><text x="43.5539%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4643%" y="533" width="0.0802%" height="15" fill="rgb(249,49,53)" fg:x="542" fg:w="1"/><text x="43.7143%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4643%" y="517" width="0.0802%" height="15" fill="rgb(238,60,50)" fg:x="542" fg:w="1"/><text x="43.7143%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.4643%" y="501" width="0.0802%" height="15" fill="rgb(210,5,2)" fg:x="542" fg:w="1"/><text x="43.7143%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.4643%" y="485" width="0.0802%" height="15" fill="rgb(214,207,24)" fg:x="542" fg:w="1"/><text x="43.7143%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.4643%" y="469" width="0.0802%" height="15" fill="rgb(228,173,2)" fg:x="542" fg:w="1"/><text x="43.7143%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.4643%" y="453" width="0.0802%" height="15" fill="rgb(244,26,8)" fg:x="542" fg:w="1"/><text x="43.7143%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.4643%" y="437" width="0.0802%" height="15" fill="rgb(249,153,35)" fg:x="542" fg:w="1"/><text x="43.7143%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.4643%" y="421" width="0.0802%" height="15" fill="rgb(221,215,40)" fg:x="542" fg:w="1"/><text x="43.7143%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.4643%" y="405" width="0.0802%" height="15" fill="rgb(238,106,35)" fg:x="542" fg:w="1"/><text x="43.7143%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.4643%" y="389" width="0.0802%" height="15" fill="rgb(207,195,21)" fg:x="542" fg:w="1"/><text x="43.7143%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.4643%" y="373" width="0.0802%" height="15" fill="rgb(205,43,29)" fg:x="542" fg:w="1"/><text x="43.7143%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.4643%" y="357" width="0.0802%" height="15" fill="rgb(236,35,21)" fg:x="542" fg:w="1"/><text x="43.7143%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="43.7049%" y="517" width="0.0802%" height="15" fill="rgb(244,74,8)" fg:x="545" fg:w="1"/><text x="43.9549%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.9455%" y="357" width="0.0802%" height="15" fill="rgb(241,229,7)" fg:x="548" fg:w="1"/><text x="44.1955%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.9455%" y="341" width="0.0802%" height="15" fill="rgb(212,223,25)" fg:x="548" fg:w="1"/><text x="44.1955%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="43.9455%" y="325" width="0.0802%" height="15" fill="rgb(234,58,53)" fg:x="548" fg:w="1"/><text x="44.1955%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="43.9455%" y="309" width="0.0802%" height="15" fill="rgb(244,36,1)" fg:x="548" fg:w="1"/><text x="44.1955%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="43.9455%" y="293" width="0.0802%" height="15" fill="rgb(222,40,54)" fg:x="548" fg:w="1"/><text x="44.1955%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="43.9455%" y="277" width="0.0802%" height="15" fill="rgb(210,207,39)" fg:x="548" fg:w="1"/><text x="44.1955%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="43.9455%" y="261" width="0.0802%" height="15" fill="rgb(234,52,14)" fg:x="548" fg:w="1"/><text x="44.1955%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="43.9455%" y="245" width="0.0802%" height="15" fill="rgb(239,108,46)" fg:x="548" fg:w="1"/><text x="44.1955%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.9455%" y="229" width="0.0802%" height="15" fill="rgb(252,223,5)" fg:x="548" fg:w="1"/><text x="44.1955%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="43.9455%" y="213" width="0.0802%" height="15" fill="rgb(227,181,11)" fg:x="548" fg:w="1"/><text x="44.1955%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.9455%" y="197" width="0.0802%" height="15" fill="rgb(248,126,40)" fg:x="548" fg:w="1"/><text x="44.1955%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="43.9455%" y="181" width="0.0802%" height="15" fill="rgb(243,1,18)" fg:x="548" fg:w="1"/><text x="44.1955%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="43.9455%" y="165" width="0.0802%" height="15" fill="rgb(214,145,23)" fg:x="548" fg:w="1"/><text x="44.1955%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="43.9455%" y="149" width="0.0802%" height="15" fill="rgb(241,218,11)" fg:x="548" fg:w="1"/><text x="44.1955%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="43.9455%" y="133" width="0.0802%" height="15" fill="rgb(214,219,24)" fg:x="548" fg:w="1"/><text x="44.1955%" y="143.50"></text></g><g><title>kernel::model::EntityRef::into_entry (4 samples, 0.32%)</title><rect x="43.7851%" y="517" width="0.3208%" height="15" fill="rgb(235,32,7)" fg:x="546" fg:w="4"/><text x="44.0351%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="43.7851%" y="501" width="0.3208%" height="15" fill="rgb(227,121,28)" fg:x="546" fg:w="4"/><text x="44.0351%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="43.7851%" y="485" width="0.3208%" height="15" fill="rgb(216,129,49)" fg:x="546" fg:w="4"/><text x="44.0351%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="43.7851%" y="469" width="0.3208%" height="15" fill="rgb(207,194,50)" fg:x="546" fg:w="4"/><text x="44.0351%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="43.8653%" y="453" width="0.2406%" height="15" fill="rgb(207,4,18)" fg:x="547" fg:w="3"/><text x="44.1153%" y="463.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="43.8653%" y="437" width="0.2406%" height="15" fill="rgb(213,50,30)" fg:x="547" fg:w="3"/><text x="44.1153%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="43.8653%" y="421" width="0.2406%" height="15" fill="rgb(208,77,22)" fg:x="547" fg:w="3"/><text x="44.1153%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="43.8653%" y="405" width="0.2406%" height="15" fill="rgb(244,204,34)" fg:x="547" fg:w="3"/><text x="44.1153%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="43.8653%" y="389" width="0.2406%" height="15" fill="rgb(230,20,17)" fg:x="547" fg:w="3"/><text x="44.1153%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="43.9455%" y="373" width="0.1604%" height="15" fill="rgb(237,83,15)" fg:x="548" fg:w="2"/><text x="44.1955%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.0257%" y="357" width="0.0802%" height="15" fill="rgb(221,109,25)" fg:x="549" fg:w="1"/><text x="44.2757%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.0257%" y="341" width="0.0802%" height="15" fill="rgb(205,194,52)" fg:x="549" fg:w="1"/><text x="44.2757%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.0257%" y="325" width="0.0802%" height="15" fill="rgb(244,173,54)" fg:x="549" fg:w="1"/><text x="44.2757%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="44.0257%" y="309" width="0.0802%" height="15" fill="rgb(227,181,18)" fg:x="549" fg:w="1"/><text x="44.2757%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="44.0257%" y="293" width="0.0802%" height="15" fill="rgb(238,36,30)" fg:x="549" fg:w="1"/><text x="44.2757%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="44.0257%" y="277" width="0.0802%" height="15" fill="rgb(254,85,0)" fg:x="549" fg:w="1"/><text x="44.2757%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="44.0257%" y="261" width="0.0802%" height="15" fill="rgb(247,63,33)" fg:x="549" fg:w="1"/><text x="44.2757%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.0257%" y="245" width="0.0802%" height="15" fill="rgb(220,7,54)" fg:x="549" fg:w="1"/><text x="44.2757%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.0257%" y="229" width="0.0802%" height="15" fill="rgb(238,227,21)" fg:x="549" fg:w="1"/><text x="44.2757%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.1059%" y="485" width="0.0802%" height="15" fill="rgb(237,29,31)" fg:x="550" fg:w="1"/><text x="44.3559%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.1059%" y="469" width="0.0802%" height="15" fill="rgb(211,21,50)" fg:x="550" fg:w="1"/><text x="44.3559%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.1059%" y="453" width="0.0802%" height="15" fill="rgb(239,119,2)" fg:x="550" fg:w="1"/><text x="44.3559%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.1059%" y="437" width="0.0802%" height="15" fill="rgb(250,2,39)" fg:x="550" fg:w="1"/><text x="44.3559%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.1059%" y="421" width="0.0802%" height="15" fill="rgb(244,46,53)" fg:x="550" fg:w="1"/><text x="44.3559%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.1059%" y="405" width="0.0802%" height="15" fill="rgb(209,21,19)" fg:x="550" fg:w="1"/><text x="44.3559%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.1059%" y="389" width="0.0802%" height="15" fill="rgb(236,145,4)" fg:x="550" fg:w="1"/><text x="44.3559%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.1059%" y="373" width="0.0802%" height="15" fill="rgb(220,133,36)" fg:x="550" fg:w="1"/><text x="44.3559%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.1059%" y="357" width="0.0802%" height="15" fill="rgb(244,18,3)" fg:x="550" fg:w="1"/><text x="44.3559%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.1059%" y="341" width="0.0802%" height="15" fill="rgb(232,171,48)" fg:x="550" fg:w="1"/><text x="44.3559%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.1059%" y="325" width="0.0802%" height="15" fill="rgb(223,223,53)" fg:x="550" fg:w="1"/><text x="44.3559%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.1059%" y="309" width="0.0802%" height="15" fill="rgb(246,92,13)" fg:x="550" fg:w="1"/><text x="44.3559%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.1059%" y="293" width="0.0802%" height="15" fill="rgb(229,171,10)" fg:x="550" fg:w="1"/><text x="44.3559%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="44.1860%" y="469" width="0.0802%" height="15" fill="rgb(213,131,26)" fg:x="551" fg:w="1"/><text x="44.4360%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.1860%" y="453" width="0.0802%" height="15" fill="rgb(242,87,54)" fg:x="551" fg:w="1"/><text x="44.4360%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.1860%" y="437" width="0.0802%" height="15" fill="rgb(237,21,35)" fg:x="551" fg:w="1"/><text x="44.4360%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.1860%" y="421" width="0.0802%" height="15" fill="rgb(253,13,47)" fg:x="551" fg:w="1"/><text x="44.4360%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.1860%" y="405" width="0.0802%" height="15" fill="rgb(215,122,49)" fg:x="551" fg:w="1"/><text x="44.4360%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.1860%" y="389" width="0.0802%" height="15" fill="rgb(209,179,30)" fg:x="551" fg:w="1"/><text x="44.4360%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.1860%" y="373" width="0.0802%" height="15" fill="rgb(235,100,24)" fg:x="551" fg:w="1"/><text x="44.4360%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.1860%" y="357" width="0.0802%" height="15" fill="rgb(209,67,24)" fg:x="551" fg:w="1"/><text x="44.4360%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.1860%" y="341" width="0.0802%" height="15" fill="rgb(206,74,32)" fg:x="551" fg:w="1"/><text x="44.4360%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.1860%" y="325" width="0.0802%" height="15" fill="rgb(212,45,25)" fg:x="551" fg:w="1"/><text x="44.4360%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.1860%" y="309" width="0.0802%" height="15" fill="rgb(239,26,3)" fg:x="551" fg:w="1"/><text x="44.4360%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.1860%" y="293" width="0.0802%" height="15" fill="rgb(218,36,15)" fg:x="551" fg:w="1"/><text x="44.4360%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.1860%" y="277" width="0.0802%" height="15" fill="rgb(206,108,24)" fg:x="551" fg:w="1"/><text x="44.4360%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="44.2662%" y="229" width="0.0802%" height="15" fill="rgb(234,204,42)" fg:x="552" fg:w="1"/><text x="44.5162%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="44.2662%" y="325" width="0.1604%" height="15" fill="rgb(229,2,11)" fg:x="552" fg:w="2"/><text x="44.5162%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.2662%" y="309" width="0.1604%" height="15" fill="rgb(221,20,48)" fg:x="552" fg:w="2"/><text x="44.5162%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="44.2662%" y="293" width="0.1604%" height="15" fill="rgb(244,164,10)" fg:x="552" fg:w="2"/><text x="44.5162%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="44.2662%" y="277" width="0.1604%" height="15" fill="rgb(243,229,2)" fg:x="552" fg:w="2"/><text x="44.5162%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="44.2662%" y="261" width="0.1604%" height="15" fill="rgb(232,131,37)" fg:x="552" fg:w="2"/><text x="44.5162%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.2662%" y="245" width="0.1604%" height="15" fill="rgb(217,156,11)" fg:x="552" fg:w="2"/><text x="44.5162%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="44.3464%" y="229" width="0.0802%" height="15" fill="rgb(239,99,48)" fg:x="553" fg:w="1"/><text x="44.5964%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="44.3464%" y="213" width="0.0802%" height="15" fill="rgb(231,209,9)" fg:x="553" fg:w="1"/><text x="44.5964%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="44.4266%" y="325" width="0.0802%" height="15" fill="rgb(254,97,27)" fg:x="554" fg:w="1"/><text x="44.6766%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="44.4266%" y="309" width="0.0802%" height="15" fill="rgb(223,151,38)" fg:x="554" fg:w="1"/><text x="44.6766%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.4266%" y="293" width="0.0802%" height="15" fill="rgb(219,206,35)" fg:x="554" fg:w="1"/><text x="44.6766%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="44.2662%" y="437" width="0.4010%" height="15" fill="rgb(216,130,31)" fg:x="552" fg:w="5"/><text x="44.5162%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="44.2662%" y="421" width="0.4010%" height="15" fill="rgb(251,97,34)" fg:x="552" fg:w="5"/><text x="44.5162%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="44.2662%" y="405" width="0.4010%" height="15" fill="rgb(246,159,47)" fg:x="552" fg:w="5"/><text x="44.5162%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="44.2662%" y="389" width="0.4010%" height="15" fill="rgb(232,87,10)" fg:x="552" fg:w="5"/><text x="44.5162%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="44.2662%" y="373" width="0.4010%" height="15" fill="rgb(249,1,37)" fg:x="552" fg:w="5"/><text x="44.5162%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="44.2662%" y="357" width="0.4010%" height="15" fill="rgb(239,135,14)" fg:x="552" fg:w="5"/><text x="44.5162%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="44.2662%" y="341" width="0.4010%" height="15" fill="rgb(253,116,46)" fg:x="552" fg:w="5"/><text x="44.5162%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.5068%" y="325" width="0.1604%" height="15" fill="rgb(222,217,37)" fg:x="555" fg:w="2"/><text x="44.7568%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.5068%" y="309" width="0.1604%" height="15" fill="rgb(252,96,8)" fg:x="555" fg:w="2"/><text x="44.7568%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="44.5068%" y="293" width="0.1604%" height="15" fill="rgb(254,103,41)" fg:x="555" fg:w="2"/><text x="44.7568%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="44.5068%" y="277" width="0.1604%" height="15" fill="rgb(218,213,19)" fg:x="555" fg:w="2"/><text x="44.7568%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5870%" y="261" width="0.0802%" height="15" fill="rgb(253,95,21)" fg:x="556" fg:w="1"/><text x="44.8370%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.5870%" y="245" width="0.0802%" height="15" fill="rgb(229,26,28)" fg:x="556" fg:w="1"/><text x="44.8370%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7474%" y="325" width="0.0802%" height="15" fill="rgb(230,129,16)" fg:x="558" fg:w="1"/><text x="44.9974%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.8276%" y="261" width="0.0802%" height="15" fill="rgb(236,126,17)" fg:x="559" fg:w="1"/><text x="45.0776%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="44.8276%" y="245" width="0.0802%" height="15" fill="rgb(209,33,33)" fg:x="559" fg:w="1"/><text x="45.0776%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.8276%" y="309" width="0.1604%" height="15" fill="rgb(227,85,29)" fg:x="559" fg:w="2"/><text x="45.0776%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.8276%" y="293" width="0.1604%" height="15" fill="rgb(241,53,46)" fg:x="559" fg:w="2"/><text x="45.0776%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.8276%" y="277" width="0.1604%" height="15" fill="rgb(228,167,53)" fg:x="559" fg:w="2"/><text x="45.0776%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.9078%" y="261" width="0.0802%" height="15" fill="rgb(238,195,45)" fg:x="560" fg:w="1"/><text x="45.1578%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.9078%" y="245" width="0.0802%" height="15" fill="rgb(252,124,45)" fg:x="560" fg:w="1"/><text x="45.1578%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.9078%" y="229" width="0.0802%" height="15" fill="rgb(251,38,35)" fg:x="560" fg:w="1"/><text x="45.1578%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.96%)</title><rect x="44.1860%" y="485" width="0.9623%" height="15" fill="rgb(227,33,2)" fg:x="551" fg:w="12"/><text x="44.4360%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (11 samples, 0.88%)</title><rect x="44.2662%" y="469" width="0.8821%" height="15" fill="rgb(223,157,46)" fg:x="552" fg:w="11"/><text x="44.5162%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.88%)</title><rect x="44.2662%" y="453" width="0.8821%" height="15" fill="rgb(222,78,41)" fg:x="552" fg:w="11"/><text x="44.5162%" y="463.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="44.6672%" y="437" width="0.4812%" height="15" fill="rgb(248,176,11)" fg:x="557" fg:w="6"/><text x="44.9172%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="44.6672%" y="421" width="0.4812%" height="15" fill="rgb(241,221,18)" fg:x="557" fg:w="6"/><text x="44.9172%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="44.6672%" y="405" width="0.4812%" height="15" fill="rgb(218,85,22)" fg:x="557" fg:w="6"/><text x="44.9172%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="44.6672%" y="389" width="0.4812%" height="15" fill="rgb(222,223,7)" fg:x="557" fg:w="6"/><text x="44.9172%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="44.7474%" y="373" width="0.4010%" height="15" fill="rgb(254,59,39)" fg:x="558" fg:w="5"/><text x="44.9974%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="44.7474%" y="357" width="0.4010%" height="15" fill="rgb(247,100,27)" fg:x="558" fg:w="5"/><text x="44.9974%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="44.7474%" y="341" width="0.4010%" height="15" fill="rgb(237,207,10)" fg:x="558" fg:w="5"/><text x="44.9974%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="44.8276%" y="325" width="0.3208%" height="15" fill="rgb(220,121,28)" fg:x="559" fg:w="4"/><text x="45.0776%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.9880%" y="309" width="0.1604%" height="15" fill="rgb(213,223,20)" fg:x="561" fg:w="2"/><text x="45.2380%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.9880%" y="293" width="0.1604%" height="15" fill="rgb(205,121,27)" fg:x="561" fg:w="2"/><text x="45.2380%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.9880%" y="277" width="0.1604%" height="15" fill="rgb(253,24,53)" fg:x="561" fg:w="2"/><text x="45.2380%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.0682%" y="261" width="0.0802%" height="15" fill="rgb(224,224,47)" fg:x="562" fg:w="1"/><text x="45.3182%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.1484%" y="485" width="0.0802%" height="15" fill="rgb(250,125,36)" fg:x="563" fg:w="1"/><text x="45.3984%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.1484%" y="469" width="0.0802%" height="15" fill="rgb(240,144,38)" fg:x="563" fg:w="1"/><text x="45.3984%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="45.2285%" y="485" width="0.0802%" height="15" fill="rgb(250,15,50)" fg:x="564" fg:w="1"/><text x="45.4785%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.2285%" y="469" width="0.0802%" height="15" fill="rgb(210,24,26)" fg:x="564" fg:w="1"/><text x="45.4785%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (23 samples, 1.84%)</title><rect x="43.5445%" y="533" width="1.8444%" height="15" fill="rgb(234,53,53)" fg:x="543" fg:w="23"/><text x="43.7945%" y="543.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.28%)</title><rect x="44.1059%" y="517" width="1.2831%" height="15" fill="rgb(208,108,28)" fg:x="550" fg:w="16"/><text x="44.3559%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (16 samples, 1.28%)</title><rect x="44.1059%" y="501" width="1.2831%" height="15" fill="rgb(227,143,7)" fg:x="550" fg:w="16"/><text x="44.3559%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.3087%" y="485" width="0.0802%" height="15" fill="rgb(238,189,38)" fg:x="565" fg:w="1"/><text x="45.5587%" y="495.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (26 samples, 2.09%)</title><rect x="43.3841%" y="549" width="2.0850%" height="15" fill="rgb(222,69,15)" fg:x="541" fg:w="26"/><text x="43.6341%" y="559.50">e..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="45.3889%" y="533" width="0.0802%" height="15" fill="rgb(213,169,7)" fg:x="566" fg:w="1"/><text x="45.6389%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="45.3889%" y="517" width="0.0802%" height="15" fill="rgb(251,219,4)" fg:x="566" fg:w="1"/><text x="45.6389%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="45.3889%" y="501" width="0.0802%" height="15" fill="rgb(241,55,40)" fg:x="566" fg:w="1"/><text x="45.6389%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="45.3889%" y="485" width="0.0802%" height="15" fill="rgb(243,57,30)" fg:x="566" fg:w="1"/><text x="45.6389%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.3889%" y="469" width="0.0802%" height="15" fill="rgb(234,50,30)" fg:x="566" fg:w="1"/><text x="45.6389%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.3889%" y="453" width="0.0802%" height="15" fill="rgb(239,23,42)" fg:x="566" fg:w="1"/><text x="45.6389%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.3889%" y="437" width="0.0802%" height="15" fill="rgb(217,38,19)" fg:x="566" fg:w="1"/><text x="45.6389%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="45.3889%" y="421" width="0.0802%" height="15" fill="rgb(215,179,16)" fg:x="566" fg:w="1"/><text x="45.6389%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.3889%" y="405" width="0.0802%" height="15" fill="rgb(254,21,37)" fg:x="566" fg:w="1"/><text x="45.6389%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.3889%" y="389" width="0.0802%" height="15" fill="rgb(219,207,48)" fg:x="566" fg:w="1"/><text x="45.6389%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.3889%" y="373" width="0.0802%" height="15" fill="rgb(227,225,41)" fg:x="566" fg:w="1"/><text x="45.6389%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.3889%" y="357" width="0.0802%" height="15" fill="rgb(223,130,1)" fg:x="566" fg:w="1"/><text x="45.6389%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.3889%" y="341" width="0.0802%" height="15" fill="rgb(249,54,42)" fg:x="566" fg:w="1"/><text x="45.6389%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.3889%" y="325" width="0.0802%" height="15" fill="rgb(248,69,25)" fg:x="566" fg:w="1"/><text x="45.6389%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.3889%" y="309" width="0.0802%" height="15" fill="rgb(234,21,32)" fg:x="566" fg:w="1"/><text x="45.6389%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.3889%" y="293" width="0.0802%" height="15" fill="rgb(252,136,6)" fg:x="566" fg:w="1"/><text x="45.6389%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="45.3889%" y="277" width="0.0802%" height="15" fill="rgb(245,87,12)" fg:x="566" fg:w="1"/><text x="45.6389%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.3512%" y="437" width="0.0802%" height="15" fill="rgb(208,12,15)" fg:x="578" fg:w="1"/><text x="46.6012%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="46.0305%" y="453" width="0.6415%" height="15" fill="rgb(250,98,2)" fg:x="574" fg:w="8"/><text x="46.2805%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="46.4314%" y="437" width="0.2406%" height="15" fill="rgb(205,213,15)" fg:x="579" fg:w="3"/><text x="46.6814%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="46.6720%" y="453" width="0.2406%" height="15" fill="rgb(248,192,44)" fg:x="582" fg:w="3"/><text x="46.9220%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="46.0305%" y="469" width="0.9623%" height="15" fill="rgb(221,89,17)" fg:x="574" fg:w="12"/><text x="46.2805%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="46.9126%" y="453" width="0.0802%" height="15" fill="rgb(209,55,3)" fg:x="585" fg:w="1"/><text x="47.1626%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.9928%" y="469" width="0.1604%" height="15" fill="rgb(247,23,45)" fg:x="586" fg:w="2"/><text x="47.2428%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="45.7097%" y="485" width="1.5237%" height="15" fill="rgb(235,152,23)" fg:x="570" fg:w="19"/><text x="45.9597%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="47.1532%" y="469" width="0.0802%" height="15" fill="rgb(244,63,13)" fg:x="588" fg:w="1"/><text x="47.4032%" y="479.50"></text></g><g><title>__libc_free (9 samples, 0.72%)</title><rect x="47.2334%" y="485" width="0.7217%" height="15" fill="rgb(227,30,37)" fg:x="589" fg:w="9"/><text x="47.4834%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.49%)</title><rect x="45.5493%" y="501" width="2.4860%" height="15" fill="rgb(224,49,42)" fg:x="568" fg:w="31"/><text x="45.7993%" y="511.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="47.9551%" y="485" width="0.0802%" height="15" fill="rgb(218,129,5)" fg:x="598" fg:w="1"/><text x="48.2051%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (32 samples, 2.57%)</title><rect x="45.5493%" y="517" width="2.5662%" height="15" fill="rgb(240,199,54)" fg:x="568" fg:w="32"/><text x="45.7993%" y="527.50">co..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.0353%" y="501" width="0.0802%" height="15" fill="rgb(234,31,13)" fg:x="599" fg:w="1"/><text x="48.2853%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="48.1957%" y="469" width="0.0802%" height="15" fill="rgb(219,73,54)" fg:x="601" fg:w="1"/><text x="48.4457%" y="479.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="48.2759%" y="469" width="0.4010%" height="15" fill="rgb(251,162,10)" fg:x="602" fg:w="5"/><text x="48.5259%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="48.1957%" y="485" width="0.5613%" height="15" fill="rgb(240,138,47)" fg:x="601" fg:w="7"/><text x="48.4457%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="48.6768%" y="469" width="0.0802%" height="15" fill="rgb(216,138,26)" fg:x="607" fg:w="1"/><text x="48.9268%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.8372%" y="453" width="0.0802%" height="15" fill="rgb(243,17,35)" fg:x="609" fg:w="1"/><text x="49.0872%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="48.7570%" y="485" width="0.2406%" height="15" fill="rgb(241,60,18)" fg:x="608" fg:w="3"/><text x="49.0070%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="48.7570%" y="469" width="0.2406%" height="15" fill="rgb(234,2,44)" fg:x="608" fg:w="3"/><text x="49.0070%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="48.9174%" y="453" width="0.0802%" height="15" fill="rgb(225,225,33)" fg:x="610" fg:w="1"/><text x="49.1674%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="48.9174%" y="437" width="0.0802%" height="15" fill="rgb(234,50,31)" fg:x="610" fg:w="1"/><text x="49.1674%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9976%" y="437" width="0.0802%" height="15" fill="rgb(249,6,25)" fg:x="611" fg:w="1"/><text x="49.2476%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="49.2382%" y="421" width="0.1604%" height="15" fill="rgb(241,5,17)" fg:x="614" fg:w="2"/><text x="49.4882%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="49.2382%" y="405" width="0.1604%" height="15" fill="rgb(207,116,10)" fg:x="614" fg:w="2"/><text x="49.4882%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.3184%" y="389" width="0.0802%" height="15" fill="rgb(222,128,18)" fg:x="615" fg:w="1"/><text x="49.5684%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3986%" y="389" width="0.0802%" height="15" fill="rgb(229,109,25)" fg:x="616" fg:w="1"/><text x="49.6486%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="49.6391%" y="357" width="0.0802%" height="15" fill="rgb(222,102,25)" fg:x="619" fg:w="1"/><text x="49.8891%" y="367.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="49.6391%" y="341" width="0.0802%" height="15" fill="rgb(239,211,5)" fg:x="619" fg:w="1"/><text x="49.8891%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="49.3986%" y="405" width="0.5613%" height="15" fill="rgb(223,136,26)" fg:x="616" fg:w="7"/><text x="49.6486%" y="415.50"></text></g><g><title>kernel::model::EntityRef::into_entry (6 samples, 0.48%)</title><rect x="49.4787%" y="389" width="0.4812%" height="15" fill="rgb(227,30,15)" fg:x="617" fg:w="6"/><text x="49.7287%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="49.5589%" y="373" width="0.4010%" height="15" fill="rgb(247,76,4)" fg:x="618" fg:w="5"/><text x="49.8089%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="49.7193%" y="357" width="0.2406%" height="15" fill="rgb(245,38,48)" fg:x="620" fg:w="3"/><text x="49.9693%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="49.7193%" y="341" width="0.2406%" height="15" fill="rgb(210,220,14)" fg:x="620" fg:w="3"/><text x="49.9693%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="49.7193%" y="325" width="0.2406%" height="15" fill="rgb(224,60,51)" fg:x="620" fg:w="3"/><text x="49.9693%" y="335.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="49.7193%" y="309" width="0.2406%" height="15" fill="rgb(212,133,49)" fg:x="620" fg:w="3"/><text x="49.9693%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="49.7193%" y="293" width="0.2406%" height="15" fill="rgb(231,39,22)" fg:x="620" fg:w="3"/><text x="49.9693%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="49.7193%" y="277" width="0.2406%" height="15" fill="rgb(236,173,22)" fg:x="620" fg:w="3"/><text x="49.9693%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="49.7193%" y="261" width="0.2406%" height="15" fill="rgb(210,70,0)" fg:x="620" fg:w="3"/><text x="49.9693%" y="271.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="49.7193%" y="245" width="0.2406%" height="15" fill="rgb(215,170,11)" fg:x="620" fg:w="3"/><text x="49.9693%" y="255.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.8797%" y="229" width="0.0802%" height="15" fill="rgb(220,154,28)" fg:x="622" fg:w="1"/><text x="50.1297%" y="239.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="49.8797%" y="213" width="0.0802%" height="15" fill="rgb(240,160,41)" fg:x="622" fg:w="1"/><text x="50.1297%" y="223.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.8797%" y="197" width="0.0802%" height="15" fill="rgb(243,215,41)" fg:x="622" fg:w="1"/><text x="50.1297%" y="207.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.8797%" y="181" width="0.0802%" height="15" fill="rgb(214,208,31)" fg:x="622" fg:w="1"/><text x="50.1297%" y="191.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.8797%" y="165" width="0.0802%" height="15" fill="rgb(247,57,22)" fg:x="622" fg:w="1"/><text x="50.1297%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="49.8797%" y="149" width="0.0802%" height="15" fill="rgb(228,73,52)" fg:x="622" fg:w="1"/><text x="50.1297%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.9599%" y="389" width="0.0802%" height="15" fill="rgb(252,60,9)" fg:x="623" fg:w="1"/><text x="50.2099%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="50.0401%" y="389" width="0.1604%" height="15" fill="rgb(233,9,51)" fg:x="624" fg:w="2"/><text x="50.2901%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="50.0401%" y="373" width="0.1604%" height="15" fill="rgb(223,67,14)" fg:x="624" fg:w="2"/><text x="50.2901%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.0401%" y="357" width="0.1604%" height="15" fill="rgb(222,86,2)" fg:x="624" fg:w="2"/><text x="50.2901%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.2005%" y="357" width="0.0802%" height="15" fill="rgb(243,58,54)" fg:x="626" fg:w="1"/><text x="50.4505%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="50.2005%" y="341" width="0.0802%" height="15" fill="rgb(210,200,39)" fg:x="626" fg:w="1"/><text x="50.4505%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.2807%" y="325" width="0.0802%" height="15" fill="rgb(238,135,9)" fg:x="627" fg:w="1"/><text x="50.5307%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="50.3609%" y="293" width="0.2406%" height="15" fill="rgb(232,179,7)" fg:x="628" fg:w="3"/><text x="50.6109%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="50.3609%" y="277" width="0.2406%" height="15" fill="rgb(245,65,41)" fg:x="628" fg:w="3"/><text x="50.6109%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="50.3609%" y="261" width="0.2406%" height="15" fill="rgb(227,43,8)" fg:x="628" fg:w="3"/><text x="50.6109%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.3609%" y="245" width="0.2406%" height="15" fill="rgb(235,91,14)" fg:x="628" fg:w="3"/><text x="50.6109%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.5213%" y="229" width="0.0802%" height="15" fill="rgb(235,219,31)" fg:x="630" fg:w="1"/><text x="50.7713%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.5213%" y="213" width="0.0802%" height="15" fill="rgb(227,121,25)" fg:x="630" fg:w="1"/><text x="50.7713%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="50.5213%" y="197" width="0.0802%" height="15" fill="rgb(254,129,24)" fg:x="630" fg:w="1"/><text x="50.7713%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.5213%" y="181" width="0.0802%" height="15" fill="rgb(226,144,49)" fg:x="630" fg:w="1"/><text x="50.7713%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5213%" y="165" width="0.0802%" height="15" fill="rgb(214,187,32)" fg:x="630" fg:w="1"/><text x="50.7713%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5213%" y="149" width="0.0802%" height="15" fill="rgb(243,129,46)" fg:x="630" fg:w="1"/><text x="50.7713%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.6014%" y="213" width="0.0802%" height="15" fill="rgb(221,185,35)" fg:x="631" fg:w="1"/><text x="50.8514%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.6816%" y="149" width="0.0802%" height="15" fill="rgb(205,0,32)" fg:x="632" fg:w="1"/><text x="50.9316%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.6816%" y="133" width="0.0802%" height="15" fill="rgb(229,179,12)" fg:x="632" fg:w="1"/><text x="50.9316%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="50.2807%" y="341" width="0.5613%" height="15" fill="rgb(252,107,19)" fg:x="627" fg:w="7"/><text x="50.5307%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.48%)</title><rect x="50.3609%" y="325" width="0.4812%" height="15" fill="rgb(220,95,27)" fg:x="628" fg:w="6"/><text x="50.6109%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="50.3609%" y="309" width="0.4812%" height="15" fill="rgb(240,113,40)" fg:x="628" fg:w="6"/><text x="50.6109%" y="319.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="50.6014%" y="293" width="0.2406%" height="15" fill="rgb(208,4,43)" fg:x="631" fg:w="3"/><text x="50.8514%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="50.6014%" y="277" width="0.2406%" height="15" fill="rgb(247,189,30)" fg:x="631" fg:w="3"/><text x="50.8514%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.6014%" y="261" width="0.2406%" height="15" fill="rgb(231,157,17)" fg:x="631" fg:w="3"/><text x="50.8514%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="50.6014%" y="245" width="0.2406%" height="15" fill="rgb(224,139,6)" fg:x="631" fg:w="3"/><text x="50.8514%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.6014%" y="229" width="0.2406%" height="15" fill="rgb(223,83,16)" fg:x="631" fg:w="3"/><text x="50.8514%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="50.6816%" y="213" width="0.1604%" height="15" fill="rgb(232,211,20)" fg:x="632" fg:w="2"/><text x="50.9316%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.6816%" y="197" width="0.1604%" height="15" fill="rgb(225,203,35)" fg:x="632" fg:w="2"/><text x="50.9316%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="50.6816%" y="181" width="0.1604%" height="15" fill="rgb(215,211,44)" fg:x="632" fg:w="2"/><text x="50.9316%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.6816%" y="165" width="0.1604%" height="15" fill="rgb(248,213,26)" fg:x="632" fg:w="2"/><text x="50.9316%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.7618%" y="149" width="0.0802%" height="15" fill="rgb(214,23,52)" fg:x="633" fg:w="1"/><text x="51.0118%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.8420%" y="341" width="0.0802%" height="15" fill="rgb(225,173,50)" fg:x="634" fg:w="1"/><text x="51.0920%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 1.60%)</title><rect x="49.3986%" y="421" width="1.6038%" height="15" fill="rgb(206,150,22)" fg:x="616" fg:w="20"/><text x="49.6486%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 1.04%)</title><rect x="49.9599%" y="405" width="1.0425%" height="15" fill="rgb(239,64,23)" fg:x="623" fg:w="13"/><text x="50.2099%" y="415.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (10 samples, 0.80%)</title><rect x="50.2005%" y="389" width="0.8019%" height="15" fill="rgb(242,50,38)" fg:x="626" fg:w="10"/><text x="50.4505%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (10 samples, 0.80%)</title><rect x="50.2005%" y="373" width="0.8019%" height="15" fill="rgb(217,91,15)" fg:x="626" fg:w="10"/><text x="50.4505%" y="383.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.72%)</title><rect x="50.2807%" y="357" width="0.7217%" height="15" fill="rgb(230,172,6)" fg:x="627" fg:w="9"/><text x="50.5307%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="50.9222%" y="341" width="0.0802%" height="15" fill="rgb(221,98,26)" fg:x="635" fg:w="1"/><text x="51.1722%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="51.0024%" y="421" width="0.0802%" height="15" fill="rgb(227,210,45)" fg:x="636" fg:w="1"/><text x="51.2524%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="51.0024%" y="405" width="0.0802%" height="15" fill="rgb(206,8,30)" fg:x="636" fg:w="1"/><text x="51.2524%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0024%" y="389" width="0.0802%" height="15" fill="rgb(241,219,17)" fg:x="636" fg:w="1"/><text x="51.2524%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1628%" y="373" width="0.0802%" height="15" fill="rgb(247,121,29)" fg:x="638" fg:w="1"/><text x="51.4128%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1628%" y="357" width="0.0802%" height="15" fill="rgb(219,169,49)" fg:x="638" fg:w="1"/><text x="51.4128%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.1628%" y="341" width="0.0802%" height="15" fill="rgb(253,49,49)" fg:x="638" fg:w="1"/><text x="51.4128%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.1628%" y="325" width="0.0802%" height="15" fill="rgb(217,178,3)" fg:x="638" fg:w="1"/><text x="51.4128%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.1628%" y="309" width="0.0802%" height="15" fill="rgb(234,73,37)" fg:x="638" fg:w="1"/><text x="51.4128%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="51.1628%" y="293" width="0.0802%" height="15" fill="rgb(250,98,22)" fg:x="638" fg:w="1"/><text x="51.4128%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.1628%" y="277" width="0.0802%" height="15" fill="rgb(220,108,37)" fg:x="638" fg:w="1"/><text x="51.4128%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.2430%" y="357" width="0.1604%" height="15" fill="rgb(225,168,10)" fg:x="639" fg:w="2"/><text x="51.4930%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.2430%" y="341" width="0.1604%" height="15" fill="rgb(247,215,21)" fg:x="639" fg:w="2"/><text x="51.4930%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.2430%" y="325" width="0.1604%" height="15" fill="rgb(253,189,31)" fg:x="639" fg:w="2"/><text x="51.4930%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.2430%" y="309" width="0.1604%" height="15" fill="rgb(241,54,22)" fg:x="639" fg:w="2"/><text x="51.4930%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.2430%" y="293" width="0.1604%" height="15" fill="rgb(211,87,4)" fg:x="639" fg:w="2"/><text x="51.4930%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.2430%" y="277" width="0.1604%" height="15" fill="rgb(245,112,24)" fg:x="639" fg:w="2"/><text x="51.4930%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.2430%" y="261" width="0.1604%" height="15" fill="rgb(235,190,41)" fg:x="639" fg:w="2"/><text x="51.4930%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.2430%" y="245" width="0.1604%" height="15" fill="rgb(214,89,8)" fg:x="639" fg:w="2"/><text x="51.4930%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="51.2430%" y="229" width="0.1604%" height="15" fill="rgb(249,155,35)" fg:x="639" fg:w="2"/><text x="51.4930%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="51.2430%" y="213" width="0.1604%" height="15" fill="rgb(249,88,26)" fg:x="639" fg:w="2"/><text x="51.4930%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="51.2430%" y="197" width="0.1604%" height="15" fill="rgb(232,56,8)" fg:x="639" fg:w="2"/><text x="51.4930%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="51.2430%" y="181" width="0.1604%" height="15" fill="rgb(240,95,3)" fg:x="639" fg:w="2"/><text x="51.4930%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.2430%" y="165" width="0.1604%" height="15" fill="rgb(222,44,28)" fg:x="639" fg:w="2"/><text x="51.4930%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="51.1628%" y="389" width="0.3208%" height="15" fill="rgb(234,16,30)" fg:x="638" fg:w="4"/><text x="51.4128%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.2430%" y="373" width="0.2406%" height="15" fill="rgb(223,26,17)" fg:x="639" fg:w="3"/><text x="51.4930%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.4034%" y="357" width="0.0802%" height="15" fill="rgb(239,187,47)" fg:x="641" fg:w="1"/><text x="51.6534%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.4836%" y="389" width="0.0802%" height="15" fill="rgb(247,102,50)" fg:x="642" fg:w="1"/><text x="51.7336%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.5638%" y="357" width="0.0802%" height="15" fill="rgb(231,216,22)" fg:x="643" fg:w="1"/><text x="51.8138%" y="367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.6439%" y="357" width="0.0802%" height="15" fill="rgb(216,201,26)" fg:x="644" fg:w="1"/><text x="51.8939%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.6439%" y="341" width="0.0802%" height="15" fill="rgb(214,186,23)" fg:x="644" fg:w="1"/><text x="51.8939%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.6439%" y="325" width="0.0802%" height="15" fill="rgb(235,184,4)" fg:x="644" fg:w="1"/><text x="51.8939%" y="335.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (35 samples, 2.81%)</title><rect x="49.0778%" y="437" width="2.8067%" height="15" fill="rgb(244,46,17)" fg:x="612" fg:w="35"/><text x="49.3278%" y="447.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.80%)</title><rect x="51.0826%" y="421" width="0.8019%" height="15" fill="rgb(248,74,46)" fg:x="637" fg:w="10"/><text x="51.3326%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 0.80%)</title><rect x="51.0826%" y="405" width="0.8019%" height="15" fill="rgb(243,79,5)" fg:x="637" fg:w="10"/><text x="51.3326%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="51.5638%" y="389" width="0.3208%" height="15" fill="rgb(213,148,1)" fg:x="643" fg:w="4"/><text x="51.8138%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="51.5638%" y="373" width="0.3208%" height="15" fill="rgb(221,30,0)" fg:x="643" fg:w="4"/><text x="51.8138%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="51.7241%" y="357" width="0.1604%" height="15" fill="rgb(207,85,29)" fg:x="645" fg:w="2"/><text x="51.9741%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="51.7241%" y="341" width="0.1604%" height="15" fill="rgb(239,31,46)" fg:x="645" fg:w="2"/><text x="51.9741%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="51.7241%" y="325" width="0.1604%" height="15" fill="rgb(219,6,1)" fg:x="645" fg:w="2"/><text x="51.9741%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.7241%" y="309" width="0.1604%" height="15" fill="rgb(229,90,29)" fg:x="645" fg:w="2"/><text x="51.9741%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.7241%" y="293" width="0.1604%" height="15" fill="rgb(242,201,42)" fg:x="645" fg:w="2"/><text x="51.9741%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.7241%" y="277" width="0.1604%" height="15" fill="rgb(243,80,54)" fg:x="645" fg:w="2"/><text x="51.9741%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="51.8845%" y="421" width="0.0802%" height="15" fill="rgb(223,166,15)" fg:x="647" fg:w="1"/><text x="52.1345%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8845%" y="405" width="0.0802%" height="15" fill="rgb(238,78,27)" fg:x="647" fg:w="1"/><text x="52.1345%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.9647%" y="421" width="0.0802%" height="15" fill="rgb(235,28,43)" fg:x="648" fg:w="1"/><text x="52.2147%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3657%" y="373" width="0.0802%" height="15" fill="rgb(240,210,28)" fg:x="653" fg:w="1"/><text x="52.6157%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3657%" y="357" width="0.0802%" height="15" fill="rgb(253,6,46)" fg:x="653" fg:w="1"/><text x="52.6157%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.3657%" y="341" width="0.0802%" height="15" fill="rgb(250,159,47)" fg:x="653" fg:w="1"/><text x="52.6157%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.3657%" y="325" width="0.0802%" height="15" fill="rgb(216,139,2)" fg:x="653" fg:w="1"/><text x="52.6157%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.3657%" y="309" width="0.0802%" height="15" fill="rgb(221,124,44)" fg:x="653" fg:w="1"/><text x="52.6157%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.3657%" y="293" width="0.0802%" height="15" fill="rgb(205,37,22)" fg:x="653" fg:w="1"/><text x="52.6157%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.3657%" y="277" width="0.0802%" height="15" fill="rgb(250,55,8)" fg:x="653" fg:w="1"/><text x="52.6157%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.3657%" y="261" width="0.0802%" height="15" fill="rgb(215,83,48)" fg:x="653" fg:w="1"/><text x="52.6157%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.3657%" y="245" width="0.0802%" height="15" fill="rgb(253,2,32)" fg:x="653" fg:w="1"/><text x="52.6157%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.3657%" y="229" width="0.0802%" height="15" fill="rgb(236,67,28)" fg:x="653" fg:w="1"/><text x="52.6157%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.3657%" y="213" width="0.0802%" height="15" fill="rgb(252,55,15)" fg:x="653" fg:w="1"/><text x="52.6157%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3657%" y="197" width="0.0802%" height="15" fill="rgb(243,173,17)" fg:x="653" fg:w="1"/><text x="52.6157%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="52.2855%" y="389" width="0.4812%" height="15" fill="rgb(215,212,13)" fg:x="652" fg:w="6"/><text x="52.5355%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="52.4459%" y="373" width="0.3208%" height="15" fill="rgb(253,176,6)" fg:x="654" fg:w="4"/><text x="52.6959%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.5261%" y="357" width="0.2406%" height="15" fill="rgb(236,105,26)" fg:x="655" fg:w="3"/><text x="52.7761%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6864%" y="341" width="0.0802%" height="15" fill="rgb(239,226,32)" fg:x="657" fg:w="1"/><text x="52.9364%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6864%" y="325" width="0.0802%" height="15" fill="rgb(236,104,51)" fg:x="657" fg:w="1"/><text x="52.9364%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.6864%" y="309" width="0.0802%" height="15" fill="rgb(220,172,33)" fg:x="657" fg:w="1"/><text x="52.9364%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.6864%" y="293" width="0.0802%" height="15" fill="rgb(224,182,25)" fg:x="657" fg:w="1"/><text x="52.9364%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.6864%" y="277" width="0.0802%" height="15" fill="rgb(236,184,24)" fg:x="657" fg:w="1"/><text x="52.9364%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6864%" y="261" width="0.0802%" height="15" fill="rgb(241,221,14)" fg:x="657" fg:w="1"/><text x="52.9364%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6864%" y="245" width="0.0802%" height="15" fill="rgb(227,146,5)" fg:x="657" fg:w="1"/><text x="52.9364%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.6864%" y="229" width="0.0802%" height="15" fill="rgb(214,15,23)" fg:x="657" fg:w="1"/><text x="52.9364%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.6864%" y="213" width="0.0802%" height="15" fill="rgb(233,157,31)" fg:x="657" fg:w="1"/><text x="52.9364%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.6864%" y="197" width="0.0802%" height="15" fill="rgb(211,27,52)" fg:x="657" fg:w="1"/><text x="52.9364%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.6864%" y="181" width="0.0802%" height="15" fill="rgb(212,223,15)" fg:x="657" fg:w="1"/><text x="52.9364%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6864%" y="165" width="0.0802%" height="15" fill="rgb(254,211,0)" fg:x="657" fg:w="1"/><text x="52.9364%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (3 samples, 0.24%)</title><rect x="52.8468%" y="325" width="0.2406%" height="15" fill="rgb(205,43,38)" fg:x="659" fg:w="3"/><text x="53.0968%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.9270%" y="309" width="0.1604%" height="15" fill="rgb(242,206,46)" fg:x="660" fg:w="2"/><text x="53.1770%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.9270%" y="293" width="0.1604%" height="15" fill="rgb(220,221,12)" fg:x="660" fg:w="2"/><text x="53.1770%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="52.9270%" y="277" width="0.1604%" height="15" fill="rgb(217,156,35)" fg:x="660" fg:w="2"/><text x="53.1770%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="52.9270%" y="261" width="0.1604%" height="15" fill="rgb(207,181,49)" fg:x="660" fg:w="2"/><text x="53.1770%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="52.9270%" y="245" width="0.1604%" height="15" fill="rgb(235,103,47)" fg:x="660" fg:w="2"/><text x="53.1770%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.9270%" y="229" width="0.1604%" height="15" fill="rgb(222,63,28)" fg:x="660" fg:w="2"/><text x="53.1770%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.9270%" y="213" width="0.1604%" height="15" fill="rgb(244,137,21)" fg:x="660" fg:w="2"/><text x="53.1770%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="52.9270%" y="197" width="0.1604%" height="15" fill="rgb(228,35,27)" fg:x="660" fg:w="2"/><text x="53.1770%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="52.9270%" y="181" width="0.1604%" height="15" fill="rgb(226,191,41)" fg:x="660" fg:w="2"/><text x="53.1770%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="52.9270%" y="165" width="0.1604%" height="15" fill="rgb(210,154,3)" fg:x="660" fg:w="2"/><text x="53.1770%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="52.9270%" y="149" width="0.1604%" height="15" fill="rgb(216,60,49)" fg:x="660" fg:w="2"/><text x="53.1770%" y="159.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.9270%" y="133" width="0.1604%" height="15" fill="rgb(226,17,20)" fg:x="660" fg:w="2"/><text x="53.1770%" y="143.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="53.0874%" y="325" width="0.1604%" height="15" fill="rgb(206,115,35)" fg:x="662" fg:w="2"/><text x="53.3374%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="53.2478%" y="309" width="0.0802%" height="15" fill="rgb(227,88,1)" fg:x="664" fg:w="1"/><text x="53.4978%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.2478%" y="293" width="0.0802%" height="15" fill="rgb(230,222,24)" fg:x="664" fg:w="1"/><text x="53.4978%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.2478%" y="277" width="0.0802%" height="15" fill="rgb(214,124,32)" fg:x="664" fg:w="1"/><text x="53.4978%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.2478%" y="261" width="0.0802%" height="15" fill="rgb(240,41,36)" fg:x="664" fg:w="1"/><text x="53.4978%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.2478%" y="245" width="0.0802%" height="15" fill="rgb(221,17,52)" fg:x="664" fg:w="1"/><text x="53.4978%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.2478%" y="229" width="0.0802%" height="15" fill="rgb(252,70,16)" fg:x="664" fg:w="1"/><text x="53.4978%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.2478%" y="213" width="0.0802%" height="15" fill="rgb(250,177,4)" fg:x="664" fg:w="1"/><text x="53.4978%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.2478%" y="197" width="0.0802%" height="15" fill="rgb(240,188,47)" fg:x="664" fg:w="1"/><text x="53.4978%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.2478%" y="181" width="0.0802%" height="15" fill="rgb(215,92,12)" fg:x="664" fg:w="1"/><text x="53.4978%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.2478%" y="165" width="0.0802%" height="15" fill="rgb(242,110,29)" fg:x="664" fg:w="1"/><text x="53.4978%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.2478%" y="149" width="0.0802%" height="15" fill="rgb(208,211,26)" fg:x="664" fg:w="1"/><text x="53.4978%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.2478%" y="133" width="0.0802%" height="15" fill="rgb(244,147,6)" fg:x="664" fg:w="1"/><text x="53.4978%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2478%" y="117" width="0.0802%" height="15" fill="rgb(211,130,42)" fg:x="664" fg:w="1"/><text x="53.4978%" y="127.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="53.3280%" y="309" width="0.0802%" height="15" fill="rgb(220,63,1)" fg:x="665" fg:w="1"/><text x="53.5780%" y="319.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="53.4082%" y="309" width="0.2406%" height="15" fill="rgb(241,212,30)" fg:x="666" fg:w="3"/><text x="53.6582%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.4082%" y="293" width="0.2406%" height="15" fill="rgb(233,153,17)" fg:x="666" fg:w="3"/><text x="53.6582%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.4082%" y="277" width="0.2406%" height="15" fill="rgb(236,3,10)" fg:x="666" fg:w="3"/><text x="53.6582%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="53.4884%" y="261" width="0.1604%" height="15" fill="rgb(232,41,21)" fg:x="667" fg:w="2"/><text x="53.7384%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.5686%" y="245" width="0.0802%" height="15" fill="rgb(206,63,51)" fg:x="668" fg:w="1"/><text x="53.8186%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="53.5686%" y="229" width="0.0802%" height="15" fill="rgb(250,214,3)" fg:x="668" fg:w="1"/><text x="53.8186%" y="239.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="53.6488%" y="309" width="0.0802%" height="15" fill="rgb(254,89,27)" fg:x="669" fg:w="1"/><text x="53.8988%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.6488%" y="293" width="0.0802%" height="15" fill="rgb(249,41,14)" fg:x="669" fg:w="1"/><text x="53.8988%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="53.6488%" y="277" width="0.0802%" height="15" fill="rgb(221,196,51)" fg:x="669" fg:w="1"/><text x="53.8988%" y="287.50"></text></g><g><title>kernel::model::Entity::gid (2 samples, 0.16%)</title><rect x="53.7289%" y="309" width="0.1604%" height="15" fill="rgb(214,116,26)" fg:x="670" fg:w="2"/><text x="53.9789%" y="319.50"></text></g><g><title>kernel::model::Props::property_named (2 samples, 0.16%)</title><rect x="53.7289%" y="293" width="0.1604%" height="15" fill="rgb(236,67,7)" fg:x="670" fg:w="2"/><text x="53.9789%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.8091%" y="277" width="0.0802%" height="15" fill="rgb(253,179,32)" fg:x="671" fg:w="1"/><text x="54.0591%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="53.8091%" y="261" width="0.0802%" height="15" fill="rgb(218,33,15)" fg:x="671" fg:w="1"/><text x="54.0591%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.9695%" y="229" width="0.0802%" height="15" fill="rgb(217,202,41)" fg:x="673" fg:w="1"/><text x="54.2195%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.9695%" y="213" width="0.0802%" height="15" fill="rgb(234,133,5)" fg:x="673" fg:w="1"/><text x="54.2195%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.0497%" y="149" width="0.0802%" height="15" fill="rgb(240,47,40)" fg:x="674" fg:w="1"/><text x="54.2997%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.0497%" y="133" width="0.0802%" height="15" fill="rgb(234,166,26)" fg:x="674" fg:w="1"/><text x="54.2997%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.0497%" y="181" width="0.1604%" height="15" fill="rgb(244,125,51)" fg:x="674" fg:w="2"/><text x="54.2997%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.0497%" y="165" width="0.1604%" height="15" fill="rgb(229,171,11)" fg:x="674" fg:w="2"/><text x="54.2997%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="54.1299%" y="149" width="0.0802%" height="15" fill="rgb(224,38,45)" fg:x="675" fg:w="1"/><text x="54.3799%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2101%" y="181" width="0.0802%" height="15" fill="rgb(237,27,7)" fg:x="676" fg:w="1"/><text x="54.4601%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="54.2903%" y="181" width="0.1604%" height="15" fill="rgb(216,52,7)" fg:x="677" fg:w="2"/><text x="54.5403%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="54.2903%" y="165" width="0.1604%" height="15" fill="rgb(243,11,11)" fg:x="677" fg:w="2"/><text x="54.5403%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="54.2903%" y="149" width="0.1604%" height="15" fill="rgb(253,167,20)" fg:x="677" fg:w="2"/><text x="54.5403%" y="159.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.2903%" y="133" width="0.1604%" height="15" fill="rgb(215,207,5)" fg:x="677" fg:w="2"/><text x="54.5403%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.4507%" y="149" width="0.0802%" height="15" fill="rgb(252,127,31)" fg:x="679" fg:w="1"/><text x="54.7007%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.4507%" y="133" width="0.0802%" height="15" fill="rgb(209,106,27)" fg:x="679" fg:w="1"/><text x="54.7007%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4507%" y="117" width="0.0802%" height="15" fill="rgb(214,220,18)" fg:x="679" fg:w="1"/><text x="54.7007%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="54.0497%" y="229" width="0.5613%" height="15" fill="rgb(237,89,12)" fg:x="674" fg:w="7"/><text x="54.2997%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="54.0497%" y="213" width="0.5613%" height="15" fill="rgb(209,167,36)" fg:x="674" fg:w="7"/><text x="54.2997%" y="223.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="54.0497%" y="197" width="0.5613%" height="15" fill="rgb(243,45,22)" fg:x="674" fg:w="7"/><text x="54.2997%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.4507%" y="181" width="0.1604%" height="15" fill="rgb(239,2,46)" fg:x="679" fg:w="2"/><text x="54.7007%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.4507%" y="165" width="0.1604%" height="15" fill="rgb(241,101,0)" fg:x="679" fg:w="2"/><text x="54.7007%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.5309%" y="149" width="0.0802%" height="15" fill="rgb(244,34,31)" fg:x="680" fg:w="1"/><text x="54.7809%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.5309%" y="133" width="0.0802%" height="15" fill="rgb(248,23,22)" fg:x="680" fg:w="1"/><text x="54.7809%" y="143.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.6913%" y="197" width="0.1604%" height="15" fill="rgb(218,27,48)" fg:x="682" fg:w="2"/><text x="54.9413%" y="207.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (14 samples, 1.12%)</title><rect x="53.8893%" y="293" width="1.1227%" height="15" fill="rgb(232,78,1)" fg:x="672" fg:w="14"/><text x="54.1393%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (14 samples, 1.12%)</title><rect x="53.8893%" y="277" width="1.1227%" height="15" fill="rgb(233,169,12)" fg:x="672" fg:w="14"/><text x="54.1393%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.12%)</title><rect x="53.8893%" y="261" width="1.1227%" height="15" fill="rgb(225,222,54)" fg:x="672" fg:w="14"/><text x="54.1393%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="53.8893%" y="245" width="1.1227%" height="15" fill="rgb(245,126,29)" fg:x="672" fg:w="14"/><text x="54.1393%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="54.6111%" y="229" width="0.4010%" height="15" fill="rgb(241,63,48)" fg:x="681" fg:w="5"/><text x="54.8611%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="54.6913%" y="213" width="0.3208%" height="15" fill="rgb(235,126,38)" fg:x="682" fg:w="4"/><text x="54.9413%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="54.8516%" y="197" width="0.1604%" height="15" fill="rgb(232,96,49)" fg:x="684" fg:w="2"/><text x="55.1016%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.8516%" y="181" width="0.1604%" height="15" fill="rgb(211,146,40)" fg:x="684" fg:w="2"/><text x="55.1016%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.8516%" y="165" width="0.1604%" height="15" fill="rgb(247,93,44)" fg:x="684" fg:w="2"/><text x="55.1016%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.9318%" y="149" width="0.0802%" height="15" fill="rgb(251,41,49)" fg:x="685" fg:w="1"/><text x="55.1818%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="55.0120%" y="245" width="0.1604%" height="15" fill="rgb(218,155,12)" fg:x="686" fg:w="2"/><text x="55.2620%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0922%" y="229" width="0.0802%" height="15" fill="rgb(221,161,30)" fg:x="687" fg:w="1"/><text x="55.3422%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.1724%" y="245" width="0.1604%" height="15" fill="rgb(221,179,11)" fg:x="688" fg:w="2"/><text x="55.4224%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2526%" y="229" width="0.0802%" height="15" fill="rgb(224,170,48)" fg:x="689" fg:w="1"/><text x="55.5026%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="55.2526%" y="213" width="0.0802%" height="15" fill="rgb(223,117,5)" fg:x="689" fg:w="1"/><text x="55.5026%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="55.4130%" y="213" width="0.1604%" height="15" fill="rgb(209,52,20)" fg:x="691" fg:w="2"/><text x="55.6630%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4932%" y="197" width="0.0802%" height="15" fill="rgb(209,19,41)" fg:x="692" fg:w="1"/><text x="55.7432%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.5734%" y="213" width="0.0802%" height="15" fill="rgb(210,177,12)" fg:x="693" fg:w="1"/><text x="55.8234%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.5734%" y="197" width="0.0802%" height="15" fill="rgb(211,159,37)" fg:x="693" fg:w="1"/><text x="55.8234%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5734%" y="181" width="0.0802%" height="15" fill="rgb(209,20,2)" fg:x="693" fg:w="1"/><text x="55.8234%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.6536%" y="181" width="0.0802%" height="15" fill="rgb(244,3,46)" fg:x="694" fg:w="1"/><text x="55.9036%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.6536%" y="165" width="0.0802%" height="15" fill="rgb(220,94,38)" fg:x="694" fg:w="1"/><text x="55.9036%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="55.8140%" y="149" width="0.2406%" height="15" fill="rgb(253,14,31)" fg:x="696" fg:w="3"/><text x="56.0640%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="55.9743%" y="133" width="0.0802%" height="15" fill="rgb(234,176,13)" fg:x="698" fg:w="1"/><text x="56.2243%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.0545%" y="149" width="0.0802%" height="15" fill="rgb(218,62,25)" fg:x="699" fg:w="1"/><text x="56.3045%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.0545%" y="133" width="0.0802%" height="15" fill="rgb(216,124,40)" fg:x="699" fg:w="1"/><text x="56.3045%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.0545%" y="117" width="0.0802%" height="15" fill="rgb(228,170,12)" fg:x="699" fg:w="1"/><text x="56.3045%" y="127.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="56.1347%" y="133" width="0.1604%" height="15" fill="rgb(231,226,5)" fg:x="700" fg:w="2"/><text x="56.3847%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="55.7338%" y="165" width="0.6415%" height="15" fill="rgb(237,122,22)" fg:x="695" fg:w="8"/><text x="55.9838%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="56.1347%" y="149" width="0.2406%" height="15" fill="rgb(209,185,25)" fg:x="700" fg:w="3"/><text x="56.3847%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.2951%" y="133" width="0.0802%" height="15" fill="rgb(228,200,32)" fg:x="702" fg:w="1"/><text x="56.5451%" y="143.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (46 samples, 3.69%)</title><rect x="52.7666%" y="389" width="3.6889%" height="15" fill="rgb(217,140,10)" fg:x="658" fg:w="46"/><text x="53.0166%" y="399.50">&lt;plu..</text></g><g><title>core::iter::adapters::try_process (45 samples, 3.61%)</title><rect x="52.8468%" y="373" width="3.6087%" height="15" fill="rgb(253,17,24)" fg:x="659" fg:w="45"/><text x="53.0968%" y="383.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 3.61%)</title><rect x="52.8468%" y="357" width="3.6087%" height="15" fill="rgb(212,61,6)" fg:x="659" fg:w="45"/><text x="53.0968%" y="367.50">&lt;all..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (45 samples, 3.61%)</title><rect x="52.8468%" y="341" width="3.6087%" height="15" fill="rgb(205,14,25)" fg:x="659" fg:w="45"/><text x="53.0968%" y="351.50">&lt;eng..</text></g><g><title>engine::internal::Entities::prepare_entity (40 samples, 3.21%)</title><rect x="53.2478%" y="325" width="3.2077%" height="15" fill="rgb(232,69,41)" fg:x="664" fg:w="40"/><text x="53.4978%" y="335.50">eng..</text></g><g><title>kernel::model::deserialize_entity (32 samples, 2.57%)</title><rect x="53.8893%" y="309" width="2.5662%" height="15" fill="rgb(241,106,47)" fg:x="672" fg:w="32"/><text x="54.1393%" y="319.50">ke..</text></g><g><title>serde_json::de::from_trait (18 samples, 1.44%)</title><rect x="55.0120%" y="293" width="1.4435%" height="15" fill="rgb(210,213,53)" fg:x="686" fg:w="18"/><text x="55.2620%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18 samples, 1.44%)</title><rect x="55.0120%" y="277" width="1.4435%" height="15" fill="rgb(253,175,27)" fg:x="686" fg:w="18"/><text x="55.2620%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.44%)</title><rect x="55.0120%" y="261" width="1.4435%" height="15" fill="rgb(211,171,24)" fg:x="686" fg:w="18"/><text x="55.2620%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.12%)</title><rect x="55.3328%" y="245" width="1.1227%" height="15" fill="rgb(229,80,7)" fg:x="690" fg:w="14"/><text x="55.5828%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="55.3328%" y="229" width="1.1227%" height="15" fill="rgb(212,46,39)" fg:x="690" fg:w="14"/><text x="55.5828%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="55.6536%" y="213" width="0.8019%" height="15" fill="rgb(240,80,45)" fg:x="694" fg:w="10"/><text x="55.9036%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="55.6536%" y="197" width="0.8019%" height="15" fill="rgb(253,177,40)" fg:x="694" fg:w="10"/><text x="55.9036%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="55.7338%" y="181" width="0.7217%" height="15" fill="rgb(249,200,15)" fg:x="695" fg:w="9"/><text x="55.9838%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.3753%" y="165" width="0.0802%" height="15" fill="rgb(217,78,26)" fg:x="703" fg:w="1"/><text x="56.6253%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.3753%" y="149" width="0.0802%" height="15" fill="rgb(254,151,32)" fg:x="703" fg:w="1"/><text x="56.6253%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.3753%" y="133" width="0.0802%" height="15" fill="rgb(226,165,27)" fg:x="703" fg:w="1"/><text x="56.6253%" y="143.50"></text></g><g><title>plugins_core::tools::get_contained_keys (59 samples, 4.73%)</title><rect x="51.8845%" y="437" width="4.7314%" height="15" fill="rgb(250,206,4)" fg:x="647" fg:w="59"/><text x="52.1345%" y="447.50">plugin..</text></g><g><title>kernel::model::entry::Entry::scope (57 samples, 4.57%)</title><rect x="52.0449%" y="421" width="4.5710%" height="15" fill="rgb(231,229,27)" fg:x="649" fg:w="57"/><text x="52.2949%" y="431.50">kerne..</text></g><g><title>kernel::model::Entity::load_scope (56 samples, 4.49%)</title><rect x="52.1251%" y="405" width="4.4908%" height="15" fill="rgb(239,217,8)" fg:x="650" fg:w="56"/><text x="52.3751%" y="415.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.4555%" y="389" width="0.1604%" height="15" fill="rgb(225,204,27)" fg:x="704" fg:w="2"/><text x="56.7055%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.4555%" y="373" width="0.1604%" height="15" fill="rgb(230,56,32)" fg:x="704" fg:w="2"/><text x="56.7055%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.5357%" y="357" width="0.0802%" height="15" fill="rgb(222,56,27)" fg:x="705" fg:w="1"/><text x="56.7857%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.5357%" y="341" width="0.0802%" height="15" fill="rgb(253,108,27)" fg:x="705" fg:w="1"/><text x="56.7857%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="56.5357%" y="325" width="0.0802%" height="15" fill="rgb(212,87,36)" fg:x="705" fg:w="1"/><text x="56.7857%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.5357%" y="309" width="0.0802%" height="15" fill="rgb(247,82,36)" fg:x="705" fg:w="1"/><text x="56.7857%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.5357%" y="293" width="0.0802%" height="15" fill="rgb(222,143,9)" fg:x="705" fg:w="1"/><text x="56.7857%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.5357%" y="277" width="0.0802%" height="15" fill="rgb(238,162,48)" fg:x="705" fg:w="1"/><text x="56.7857%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.5357%" y="261" width="0.0802%" height="15" fill="rgb(221,59,43)" fg:x="705" fg:w="1"/><text x="56.7857%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="56.6159%" y="421" width="0.0802%" height="15" fill="rgb(205,166,41)" fg:x="706" fg:w="1"/><text x="56.8659%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.6159%" y="405" width="0.0802%" height="15" fill="rgb(241,186,40)" fg:x="706" fg:w="1"/><text x="56.8659%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.6159%" y="389" width="0.0802%" height="15" fill="rgb(216,119,35)" fg:x="706" fg:w="1"/><text x="56.8659%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.7763%" y="389" width="0.0802%" height="15" fill="rgb(208,68,38)" fg:x="708" fg:w="1"/><text x="57.0263%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7763%" y="373" width="0.0802%" height="15" fill="rgb(217,113,1)" fg:x="708" fg:w="1"/><text x="57.0263%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.7763%" y="357" width="0.0802%" height="15" fill="rgb(242,153,3)" fg:x="708" fg:w="1"/><text x="57.0263%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7763%" y="341" width="0.0802%" height="15" fill="rgb(229,76,35)" fg:x="708" fg:w="1"/><text x="57.0263%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7763%" y="325" width="0.0802%" height="15" fill="rgb(229,125,34)" fg:x="708" fg:w="1"/><text x="57.0263%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.7763%" y="309" width="0.0802%" height="15" fill="rgb(238,179,36)" fg:x="708" fg:w="1"/><text x="57.0263%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.7763%" y="293" width="0.0802%" height="15" fill="rgb(244,183,19)" fg:x="708" fg:w="1"/><text x="57.0263%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.7763%" y="277" width="0.0802%" height="15" fill="rgb(216,85,49)" fg:x="708" fg:w="1"/><text x="57.0263%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7763%" y="261" width="0.0802%" height="15" fill="rgb(208,161,47)" fg:x="708" fg:w="1"/><text x="57.0263%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7763%" y="245" width="0.0802%" height="15" fill="rgb(233,210,18)" fg:x="708" fg:w="1"/><text x="57.0263%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.7763%" y="229" width="0.0802%" height="15" fill="rgb(205,104,42)" fg:x="708" fg:w="1"/><text x="57.0263%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.7763%" y="213" width="0.0802%" height="15" fill="rgb(248,90,43)" fg:x="708" fg:w="1"/><text x="57.0263%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.7763%" y="197" width="0.0802%" height="15" fill="rgb(206,198,11)" fg:x="708" fg:w="1"/><text x="57.0263%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.7763%" y="181" width="0.0802%" height="15" fill="rgb(239,165,27)" fg:x="708" fg:w="1"/><text x="57.0263%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7763%" y="165" width="0.0802%" height="15" fill="rgb(246,44,32)" fg:x="708" fg:w="1"/><text x="57.0263%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100 samples, 8.02%)</title><rect x="48.9976%" y="469" width="8.0192%" height="15" fill="rgb(252,65,42)" fg:x="611" fg:w="100"/><text x="49.2476%" y="479.50">&lt;alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (100 samples, 8.02%)</title><rect x="48.9976%" y="453" width="8.0192%" height="15" fill="rgb(246,197,18)" fg:x="611" fg:w="100"/><text x="49.2476%" y="463.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::get_occupant_keys (5 samples, 0.40%)</title><rect x="56.6159%" y="437" width="0.4010%" height="15" fill="rgb(216,192,4)" fg:x="706" fg:w="5"/><text x="56.8659%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="56.6961%" y="421" width="0.3208%" height="15" fill="rgb(208,117,10)" fg:x="707" fg:w="4"/><text x="56.9461%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="56.6961%" y="405" width="0.3208%" height="15" fill="rgb(240,61,47)" fg:x="707" fg:w="4"/><text x="56.9461%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.8565%" y="389" width="0.1604%" height="15" fill="rgb(228,178,21)" fg:x="709" fg:w="2"/><text x="57.1065%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.8565%" y="373" width="0.1604%" height="15" fill="rgb(219,96,54)" fg:x="709" fg:w="2"/><text x="57.1065%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.9366%" y="357" width="0.0802%" height="15" fill="rgb(250,177,24)" fg:x="710" fg:w="1"/><text x="57.1866%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.9366%" y="341" width="0.0802%" height="15" fill="rgb(242,154,46)" fg:x="710" fg:w="1"/><text x="57.1866%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="56.9366%" y="325" width="0.0802%" height="15" fill="rgb(226,176,29)" fg:x="710" fg:w="1"/><text x="57.1866%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.9366%" y="309" width="0.0802%" height="15" fill="rgb(226,29,2)" fg:x="710" fg:w="1"/><text x="57.1866%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.9366%" y="293" width="0.0802%" height="15" fill="rgb(237,104,14)" fg:x="710" fg:w="1"/><text x="57.1866%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.6584%" y="341" width="0.1604%" height="15" fill="rgb(245,207,31)" fg:x="719" fg:w="2"/><text x="57.9084%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.6584%" y="325" width="0.1604%" height="15" fill="rgb(229,211,45)" fg:x="719" fg:w="2"/><text x="57.9084%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.6584%" y="309" width="0.1604%" height="15" fill="rgb(229,113,15)" fg:x="719" fg:w="2"/><text x="57.9084%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.6584%" y="293" width="0.1604%" height="15" fill="rgb(237,147,15)" fg:x="719" fg:w="2"/><text x="57.9084%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.6584%" y="277" width="0.1604%" height="15" fill="rgb(244,120,12)" fg:x="719" fg:w="2"/><text x="57.9084%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.6584%" y="261" width="0.1604%" height="15" fill="rgb(205,120,12)" fg:x="719" fg:w="2"/><text x="57.9084%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.6584%" y="245" width="0.1604%" height="15" fill="rgb(231,26,45)" fg:x="719" fg:w="2"/><text x="57.9084%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.6584%" y="421" width="0.2406%" height="15" fill="rgb(246,98,1)" fg:x="719" fg:w="3"/><text x="57.9084%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.6584%" y="405" width="0.2406%" height="15" fill="rgb(207,68,45)" fg:x="719" fg:w="3"/><text x="57.9084%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="57.6584%" y="389" width="0.2406%" height="15" fill="rgb(231,27,38)" fg:x="719" fg:w="3"/><text x="57.9084%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="57.6584%" y="373" width="0.2406%" height="15" fill="rgb(214,223,3)" fg:x="719" fg:w="3"/><text x="57.9084%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="57.6584%" y="357" width="0.2406%" height="15" fill="rgb(228,195,46)" fg:x="719" fg:w="3"/><text x="57.9084%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.8188%" y="341" width="0.0802%" height="15" fill="rgb(231,100,42)" fg:x="721" fg:w="1"/><text x="58.0688%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.8188%" y="325" width="0.0802%" height="15" fill="rgb(236,53,4)" fg:x="721" fg:w="1"/><text x="58.0688%" y="335.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.24%)</title><rect x="57.8990%" y="405" width="0.2406%" height="15" fill="rgb(230,152,12)" fg:x="722" fg:w="3"/><text x="58.1490%" y="415.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="57.8990%" y="389" width="0.2406%" height="15" fill="rgb(226,101,19)" fg:x="722" fg:w="3"/><text x="58.1490%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.0593%" y="373" width="0.0802%" height="15" fill="rgb(250,149,32)" fg:x="724" fg:w="1"/><text x="58.3093%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.0593%" y="357" width="0.0802%" height="15" fill="rgb(232,178,12)" fg:x="724" fg:w="1"/><text x="58.3093%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.0593%" y="341" width="0.0802%" height="15" fill="rgb(246,151,17)" fg:x="724" fg:w="1"/><text x="58.3093%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.0593%" y="325" width="0.0802%" height="15" fill="rgb(252,17,51)" fg:x="724" fg:w="1"/><text x="58.3093%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.0593%" y="309" width="0.0802%" height="15" fill="rgb(250,207,23)" fg:x="724" fg:w="1"/><text x="58.3093%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.0593%" y="293" width="0.0802%" height="15" fill="rgb(205,27,5)" fg:x="724" fg:w="1"/><text x="58.3093%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.0593%" y="277" width="0.0802%" height="15" fill="rgb(224,32,19)" fg:x="724" fg:w="1"/><text x="58.3093%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.0593%" y="261" width="0.0802%" height="15" fill="rgb(247,214,40)" fg:x="724" fg:w="1"/><text x="58.3093%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.0593%" y="245" width="0.0802%" height="15" fill="rgb(239,199,17)" fg:x="724" fg:w="1"/><text x="58.3093%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.0593%" y="229" width="0.0802%" height="15" fill="rgb(251,159,9)" fg:x="724" fg:w="1"/><text x="58.3093%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.0593%" y="213" width="0.0802%" height="15" fill="rgb(225,78,32)" fg:x="724" fg:w="1"/><text x="58.3093%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.0593%" y="197" width="0.0802%" height="15" fill="rgb(206,97,47)" fg:x="724" fg:w="1"/><text x="58.3093%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.0593%" y="181" width="0.0802%" height="15" fill="rgb(227,107,4)" fg:x="724" fg:w="1"/><text x="58.3093%" y="191.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="58.1395%" y="405" width="0.1604%" height="15" fill="rgb(241,146,50)" fg:x="725" fg:w="2"/><text x="58.3895%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2197%" y="389" width="0.0802%" height="15" fill="rgb(232,92,30)" fg:x="726" fg:w="1"/><text x="58.4697%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2197%" y="373" width="0.0802%" height="15" fill="rgb(222,0,40)" fg:x="726" fg:w="1"/><text x="58.4697%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.2197%" y="357" width="0.0802%" height="15" fill="rgb(219,54,33)" fg:x="726" fg:w="1"/><text x="58.4697%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.2197%" y="341" width="0.0802%" height="15" fill="rgb(226,209,28)" fg:x="726" fg:w="1"/><text x="58.4697%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.2197%" y="325" width="0.0802%" height="15" fill="rgb(254,205,35)" fg:x="726" fg:w="1"/><text x="58.4697%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="58.2197%" y="309" width="0.0802%" height="15" fill="rgb(230,159,3)" fg:x="726" fg:w="1"/><text x="58.4697%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.2197%" y="293" width="0.0802%" height="15" fill="rgb(232,190,24)" fg:x="726" fg:w="1"/><text x="58.4697%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2999%" y="389" width="0.0802%" height="15" fill="rgb(217,227,44)" fg:x="727" fg:w="1"/><text x="58.5499%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2999%" y="373" width="0.0802%" height="15" fill="rgb(236,211,1)" fg:x="727" fg:w="1"/><text x="58.5499%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.2999%" y="357" width="0.0802%" height="15" fill="rgb(250,127,46)" fg:x="727" fg:w="1"/><text x="58.5499%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.2999%" y="341" width="0.0802%" height="15" fill="rgb(229,213,6)" fg:x="727" fg:w="1"/><text x="58.5499%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.2999%" y="325" width="0.0802%" height="15" fill="rgb(237,15,36)" fg:x="727" fg:w="1"/><text x="58.5499%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.2999%" y="309" width="0.0802%" height="15" fill="rgb(213,131,41)" fg:x="727" fg:w="1"/><text x="58.5499%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.2999%" y="293" width="0.0802%" height="15" fill="rgb(225,82,44)" fg:x="727" fg:w="1"/><text x="58.5499%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.2999%" y="277" width="0.0802%" height="15" fill="rgb(249,42,11)" fg:x="727" fg:w="1"/><text x="58.5499%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.2999%" y="261" width="0.0802%" height="15" fill="rgb(253,11,29)" fg:x="727" fg:w="1"/><text x="58.5499%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.2999%" y="245" width="0.0802%" height="15" fill="rgb(206,8,54)" fg:x="727" fg:w="1"/><text x="58.5499%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.2999%" y="229" width="0.0802%" height="15" fill="rgb(222,186,2)" fg:x="727" fg:w="1"/><text x="58.5499%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2999%" y="213" width="0.0802%" height="15" fill="rgb(221,206,53)" fg:x="727" fg:w="1"/><text x="58.5499%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="58.5405%" y="101" width="0.0802%" height="15" fill="rgb(230,150,21)" fg:x="730" fg:w="1"/><text x="58.7905%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="58.5405%" y="85" width="0.0802%" height="15" fill="rgb(253,202,10)" fg:x="730" fg:w="1"/><text x="58.7905%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="58.5405%" y="69" width="0.0802%" height="15" fill="rgb(238,109,40)" fg:x="730" fg:w="1"/><text x="58.7905%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="58.5405%" y="53" width="0.0802%" height="15" fill="rgb(247,120,22)" fg:x="730" fg:w="1"/><text x="58.7905%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.24%)</title><rect x="58.4603%" y="181" width="0.2406%" height="15" fill="rgb(207,43,30)" fg:x="729" fg:w="3"/><text x="58.7103%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.24%)</title><rect x="58.4603%" y="165" width="0.2406%" height="15" fill="rgb(213,211,24)" fg:x="729" fg:w="3"/><text x="58.7103%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="58.5405%" y="149" width="0.1604%" height="15" fill="rgb(239,73,39)" fg:x="730" fg:w="2"/><text x="58.7905%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="58.5405%" y="133" width="0.1604%" height="15" fill="rgb(245,182,19)" fg:x="730" fg:w="2"/><text x="58.7905%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="58.5405%" y="117" width="0.1604%" height="15" fill="rgb(247,143,26)" fg:x="730" fg:w="2"/><text x="58.7905%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6207%" y="101" width="0.0802%" height="15" fill="rgb(228,191,23)" fg:x="731" fg:w="1"/><text x="58.8707%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="58.4603%" y="277" width="0.3208%" height="15" fill="rgb(253,165,31)" fg:x="729" fg:w="4"/><text x="58.7103%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="58.4603%" y="261" width="0.3208%" height="15" fill="rgb(234,138,20)" fg:x="729" fg:w="4"/><text x="58.7103%" y="271.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.32%)</title><rect x="58.4603%" y="245" width="0.3208%" height="15" fill="rgb(218,191,29)" fg:x="729" fg:w="4"/><text x="58.7103%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.32%)</title><rect x="58.4603%" y="229" width="0.3208%" height="15" fill="rgb(221,157,19)" fg:x="729" fg:w="4"/><text x="58.7103%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.32%)</title><rect x="58.4603%" y="213" width="0.3208%" height="15" fill="rgb(237,26,42)" fg:x="729" fg:w="4"/><text x="58.7103%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.32%)</title><rect x="58.4603%" y="197" width="0.3208%" height="15" fill="rgb(220,163,24)" fg:x="729" fg:w="4"/><text x="58.7103%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.7009%" y="181" width="0.0802%" height="15" fill="rgb(242,115,20)" fg:x="732" fg:w="1"/><text x="58.9509%" y="191.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="58.7811%" y="261" width="0.0802%" height="15" fill="rgb(210,206,9)" fg:x="733" fg:w="1"/><text x="59.0311%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="58.7811%" y="245" width="0.0802%" height="15" fill="rgb(208,71,17)" fg:x="733" fg:w="1"/><text x="59.0311%" y="255.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="58.7811%" y="229" width="0.0802%" height="15" fill="rgb(233,7,5)" fg:x="733" fg:w="1"/><text x="59.0311%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.7811%" y="213" width="0.0802%" height="15" fill="rgb(207,92,33)" fg:x="733" fg:w="1"/><text x="59.0311%" y="223.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="58.7811%" y="197" width="0.0802%" height="15" fill="rgb(218,87,9)" fg:x="733" fg:w="1"/><text x="59.0311%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (14 samples, 1.12%)</title><rect x="57.8990%" y="421" width="1.1227%" height="15" fill="rgb(219,47,37)" fg:x="722" fg:w="14"/><text x="58.1490%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="58.2999%" y="405" width="0.7217%" height="15" fill="rgb(221,152,34)" fg:x="727" fg:w="9"/><text x="58.5499%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (8 samples, 0.64%)</title><rect x="58.3801%" y="389" width="0.6415%" height="15" fill="rgb(235,176,21)" fg:x="728" fg:w="8"/><text x="58.6301%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.64%)</title><rect x="58.3801%" y="373" width="0.6415%" height="15" fill="rgb(232,212,21)" fg:x="728" fg:w="8"/><text x="58.6301%" y="383.50"></text></g><g><title>core::fmt::write (8 samples, 0.64%)</title><rect x="58.3801%" y="357" width="0.6415%" height="15" fill="rgb(245,82,39)" fg:x="728" fg:w="8"/><text x="58.6301%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (8 samples, 0.64%)</title><rect x="58.3801%" y="341" width="0.6415%" height="15" fill="rgb(241,52,51)" fg:x="728" fg:w="8"/><text x="58.6301%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (8 samples, 0.64%)</title><rect x="58.3801%" y="325" width="0.6415%" height="15" fill="rgb(219,91,24)" fg:x="728" fg:w="8"/><text x="58.6301%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (8 samples, 0.64%)</title><rect x="58.3801%" y="309" width="0.6415%" height="15" fill="rgb(241,142,12)" fg:x="728" fg:w="8"/><text x="58.6301%" y="319.50"></text></g><g><title>core::fmt::write (7 samples, 0.56%)</title><rect x="58.4603%" y="293" width="0.5613%" height="15" fill="rgb(230,27,9)" fg:x="729" fg:w="7"/><text x="58.7103%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="58.7811%" y="277" width="0.2406%" height="15" fill="rgb(249,181,32)" fg:x="733" fg:w="3"/><text x="59.0311%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="58.8613%" y="261" width="0.1604%" height="15" fill="rgb(230,107,3)" fg:x="734" fg:w="2"/><text x="59.1113%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="58.8613%" y="245" width="0.1604%" height="15" fill="rgb(246,204,14)" fg:x="734" fg:w="2"/><text x="59.1113%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="58.8613%" y="229" width="0.1604%" height="15" fill="rgb(213,192,47)" fg:x="734" fg:w="2"/><text x="59.1113%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="58.8613%" y="213" width="0.1604%" height="15" fill="rgb(240,44,36)" fg:x="734" fg:w="2"/><text x="59.1113%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="58.8613%" y="197" width="0.1604%" height="15" fill="rgb(244,209,38)" fg:x="734" fg:w="2"/><text x="59.1113%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="58.8613%" y="181" width="0.1604%" height="15" fill="rgb(219,34,37)" fg:x="734" fg:w="2"/><text x="59.1113%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="58.8613%" y="165" width="0.1604%" height="15" fill="rgb(210,28,6)" fg:x="734" fg:w="2"/><text x="59.1113%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="58.8613%" y="149" width="0.1604%" height="15" fill="rgb(244,110,52)" fg:x="734" fg:w="2"/><text x="59.1113%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="58.8613%" y="133" width="0.1604%" height="15" fill="rgb(254,124,47)" fg:x="734" fg:w="2"/><text x="59.1113%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="58.8613%" y="117" width="0.1604%" height="15" fill="rgb(254,110,13)" fg:x="734" fg:w="2"/><text x="59.1113%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="58.8613%" y="101" width="0.1604%" height="15" fill="rgb(252,57,21)" fg:x="734" fg:w="2"/><text x="59.1113%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="58.8613%" y="85" width="0.1604%" height="15" fill="rgb(242,60,45)" fg:x="734" fg:w="2"/><text x="59.1113%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="58.8613%" y="69" width="0.1604%" height="15" fill="rgb(234,49,30)" fg:x="734" fg:w="2"/><text x="59.1113%" y="79.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="58.8613%" y="53" width="0.1604%" height="15" fill="rgb(218,98,6)" fg:x="734" fg:w="2"/><text x="59.1113%" y="63.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="58.8613%" y="37" width="0.1604%" height="15" fill="rgb(220,174,29)" fg:x="734" fg:w="2"/><text x="59.1113%" y="47.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="61.0265%" y="165" width="0.0802%" height="15" fill="rgb(236,163,23)" fg:x="761" fg:w="1"/><text x="61.2765%" y="175.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.0265%" y="149" width="0.0802%" height="15" fill="rgb(242,114,45)" fg:x="761" fg:w="1"/><text x="61.2765%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="61.0265%" y="133" width="0.0802%" height="15" fill="rgb(232,10,53)" fg:x="761" fg:w="1"/><text x="61.2765%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="60.9463%" y="181" width="0.2406%" height="15" fill="rgb(245,108,29)" fg:x="760" fg:w="3"/><text x="61.1963%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.1067%" y="165" width="0.0802%" height="15" fill="rgb(240,89,53)" fg:x="762" fg:w="1"/><text x="61.3567%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.1067%" y="149" width="0.0802%" height="15" fill="rgb(226,60,45)" fg:x="762" fg:w="1"/><text x="61.3567%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.2670%" y="165" width="0.0802%" height="15" fill="rgb(230,41,44)" fg:x="764" fg:w="1"/><text x="61.5170%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (7 samples, 0.56%)</title><rect x="60.8661%" y="213" width="0.5613%" height="15" fill="rgb(230,26,20)" fg:x="759" fg:w="7"/><text x="61.1161%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="60.9463%" y="197" width="0.4812%" height="15" fill="rgb(237,170,32)" fg:x="760" fg:w="6"/><text x="61.1963%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="61.1868%" y="181" width="0.2406%" height="15" fill="rgb(212,35,42)" fg:x="763" fg:w="3"/><text x="61.4368%" y="191.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="61.3472%" y="165" width="0.0802%" height="15" fill="rgb(227,31,34)" fg:x="765" fg:w="1"/><text x="61.5972%" y="175.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.3472%" y="149" width="0.0802%" height="15" fill="rgb(216,19,18)" fg:x="765" fg:w="1"/><text x="61.5972%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.20%)</title><rect x="60.5453%" y="229" width="1.2029%" height="15" fill="rgb(211,133,42)" fg:x="755" fg:w="15"/><text x="60.7953%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="61.4274%" y="213" width="0.3208%" height="15" fill="rgb(244,66,13)" fg:x="766" fg:w="4"/><text x="61.6774%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.5878%" y="197" width="0.1604%" height="15" fill="rgb(218,185,50)" fg:x="768" fg:w="2"/><text x="61.8378%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.36%)</title><rect x="60.5453%" y="245" width="1.3633%" height="15" fill="rgb(219,149,13)" fg:x="755" fg:w="17"/><text x="60.7953%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="61.7482%" y="229" width="0.1604%" height="15" fill="rgb(221,125,0)" fg:x="770" fg:w="2"/><text x="61.9982%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8284%" y="213" width="0.0802%" height="15" fill="rgb(247,126,27)" fg:x="771" fg:w="1"/><text x="62.0784%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (22 samples, 1.76%)</title><rect x="60.5453%" y="261" width="1.7642%" height="15" fill="rgb(250,138,30)" fg:x="755" fg:w="22"/><text x="60.7953%" y="271.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="61.9086%" y="245" width="0.4010%" height="15" fill="rgb(230,151,9)" fg:x="772" fg:w="5"/><text x="62.1586%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.40%)</title><rect x="61.9086%" y="229" width="0.4010%" height="15" fill="rgb(233,80,38)" fg:x="772" fg:w="5"/><text x="62.1586%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="61.9888%" y="213" width="0.3208%" height="15" fill="rgb(232,68,43)" fg:x="773" fg:w="4"/><text x="62.2388%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="62.0690%" y="197" width="0.2406%" height="15" fill="rgb(254,5,50)" fg:x="774" fg:w="3"/><text x="62.3190%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="62.0690%" y="181" width="0.2406%" height="15" fill="rgb(225,45,5)" fg:x="774" fg:w="3"/><text x="62.3190%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.1492%" y="165" width="0.1604%" height="15" fill="rgb(239,22,3)" fg:x="775" fg:w="2"/><text x="62.3992%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="62.1492%" y="149" width="0.1604%" height="15" fill="rgb(243,129,0)" fg:x="775" fg:w="2"/><text x="62.3992%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.4699%" y="245" width="0.0802%" height="15" fill="rgb(223,164,0)" fg:x="779" fg:w="1"/><text x="62.7199%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.4699%" y="229" width="0.0802%" height="15" fill="rgb(221,46,29)" fg:x="779" fg:w="1"/><text x="62.7199%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 2.25%)</title><rect x="60.3849%" y="277" width="2.2454%" height="15" fill="rgb(205,97,47)" fg:x="753" fg:w="28"/><text x="60.6349%" y="287.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="62.3095%" y="261" width="0.3208%" height="15" fill="rgb(249,14,8)" fg:x="777" fg:w="4"/><text x="62.5595%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.5501%" y="245" width="0.0802%" height="15" fill="rgb(216,77,3)" fg:x="780" fg:w="1"/><text x="62.8001%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (33 samples, 2.65%)</title><rect x="60.3047%" y="309" width="2.6464%" height="15" fill="rgb(206,168,54)" fg:x="752" fg:w="33"/><text x="60.5547%" y="319.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (32 samples, 2.57%)</title><rect x="60.3849%" y="293" width="2.5662%" height="15" fill="rgb(236,3,41)" fg:x="753" fg:w="32"/><text x="60.6349%" y="303.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="62.6303%" y="277" width="0.3208%" height="15" fill="rgb(231,132,24)" fg:x="781" fg:w="4"/><text x="62.8803%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.7907%" y="261" width="0.1604%" height="15" fill="rgb(227,221,40)" fg:x="783" fg:w="2"/><text x="63.0407%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.9511%" y="309" width="0.0802%" height="15" fill="rgb(233,151,11)" fg:x="785" fg:w="1"/><text x="63.2011%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 3.05%)</title><rect x="60.0642%" y="325" width="3.0473%" height="15" fill="rgb(247,81,35)" fg:x="749" fg:w="38"/><text x="60.3142%" y="335.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.0313%" y="309" width="0.0802%" height="15" fill="rgb(243,128,48)" fg:x="786" fg:w="1"/><text x="63.2813%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (55 samples, 4.41%)</title><rect x="59.9038%" y="357" width="4.4106%" height="15" fill="rgb(253,16,10)" fg:x="747" fg:w="55"/><text x="60.1538%" y="367.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (55 samples, 4.41%)</title><rect x="59.9038%" y="341" width="4.4106%" height="15" fill="rgb(228,67,27)" fg:x="747" fg:w="55"/><text x="60.1538%" y="351.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 1.20%)</title><rect x="63.1115%" y="325" width="1.2029%" height="15" fill="rgb(231,105,25)" fg:x="787" fg:w="15"/><text x="63.3615%" y="335.50"></text></g><g><title>__libc_malloc (13 samples, 1.04%)</title><rect x="63.2719%" y="309" width="1.0425%" height="15" fill="rgb(213,166,47)" fg:x="789" fg:w="13"/><text x="63.5219%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.5549%" y="341" width="0.0802%" height="15" fill="rgb(209,27,10)" fg:x="805" fg:w="1"/><text x="64.8049%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.5549%" y="325" width="0.0802%" height="15" fill="rgb(241,44,30)" fg:x="805" fg:w="1"/><text x="64.8049%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70 samples, 5.61%)</title><rect x="59.1820%" y="373" width="5.6135%" height="15" fill="rgb(223,216,15)" fg:x="738" fg:w="70"/><text x="59.4320%" y="383.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="64.3144%" y="357" width="0.4812%" height="15" fill="rgb(227,14,7)" fg:x="802" fg:w="6"/><text x="64.5644%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.6351%" y="341" width="0.1604%" height="15" fill="rgb(237,14,5)" fg:x="806" fg:w="2"/><text x="64.8851%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (87 samples, 6.98%)</title><rect x="59.0217%" y="405" width="6.9767%" height="15" fill="rgb(232,14,36)" fg:x="736" fg:w="87"/><text x="59.2717%" y="415.50">&lt;rpc_prot..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (86 samples, 6.90%)</title><rect x="59.1018%" y="389" width="6.8966%" height="15" fill="rgb(234,0,38)" fg:x="737" fg:w="86"/><text x="59.3518%" y="399.50">&lt;std::col..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 1.20%)</title><rect x="64.7955%" y="373" width="1.2029%" height="15" fill="rgb(207,170,14)" fg:x="808" fg:w="15"/><text x="65.0455%" y="383.50"></text></g><g><title>__libc_malloc (15 samples, 1.20%)</title><rect x="64.7955%" y="357" width="1.2029%" height="15" fill="rgb(252,45,13)" fg:x="808" fg:w="15"/><text x="65.0455%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.3192%" y="357" width="0.1604%" height="15" fill="rgb(213,142,7)" fg:x="827" fg:w="2"/><text x="66.5692%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.88%)</title><rect x="66.4796%" y="357" width="0.8821%" height="15" fill="rgb(216,157,23)" fg:x="829" fg:w="11"/><text x="66.7296%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="66.8805%" y="341" width="0.4812%" height="15" fill="rgb(212,145,33)" fg:x="834" fg:w="6"/><text x="67.1305%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.40%)</title><rect x="66.9607%" y="325" width="0.4010%" height="15" fill="rgb(233,26,13)" fg:x="835" fg:w="5"/><text x="67.2107%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="67.3617%" y="357" width="0.0802%" height="15" fill="rgb(219,196,19)" fg:x="840" fg:w="1"/><text x="67.6117%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.3617%" y="341" width="0.0802%" height="15" fill="rgb(246,56,21)" fg:x="840" fg:w="1"/><text x="67.6117%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="67.3617%" y="325" width="0.0802%" height="15" fill="rgb(222,28,53)" fg:x="840" fg:w="1"/><text x="67.6117%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="67.3617%" y="309" width="0.0802%" height="15" fill="rgb(224,5,27)" fg:x="840" fg:w="1"/><text x="67.6117%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="67.4419%" y="357" width="0.1604%" height="15" fill="rgb(220,153,33)" fg:x="841" fg:w="2"/><text x="67.6919%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="67.4419%" y="341" width="0.1604%" height="15" fill="rgb(226,58,19)" fg:x="841" fg:w="2"/><text x="67.6919%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.4419%" y="325" width="0.1604%" height="15" fill="rgb(239,112,23)" fg:x="841" fg:w="2"/><text x="67.6919%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="67.6022%" y="357" width="0.3208%" height="15" fill="rgb(251,213,20)" fg:x="843" fg:w="4"/><text x="67.8522%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="67.6824%" y="341" width="0.2406%" height="15" fill="rgb(215,181,21)" fg:x="844" fg:w="3"/><text x="67.9324%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8428%" y="325" width="0.0802%" height="15" fill="rgb(240,8,35)" fg:x="846" fg:w="1"/><text x="68.0928%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8428%" y="309" width="0.0802%" height="15" fill="rgb(232,203,3)" fg:x="846" fg:w="1"/><text x="68.0928%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.8428%" y="293" width="0.0802%" height="15" fill="rgb(214,202,43)" fg:x="846" fg:w="1"/><text x="68.0928%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.1636%" y="309" width="0.1604%" height="15" fill="rgb(254,35,11)" fg:x="850" fg:w="2"/><text x="68.4136%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.1636%" y="293" width="0.1604%" height="15" fill="rgb(239,173,13)" fg:x="850" fg:w="2"/><text x="68.4136%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2438%" y="277" width="0.0802%" height="15" fill="rgb(220,141,0)" fg:x="851" fg:w="1"/><text x="68.4938%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="68.3240%" y="293" width="0.0802%" height="15" fill="rgb(210,98,12)" fg:x="852" fg:w="1"/><text x="68.5740%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3240%" y="277" width="0.0802%" height="15" fill="rgb(254,153,22)" fg:x="852" fg:w="1"/><text x="68.5740%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4042%" y="277" width="0.0802%" height="15" fill="rgb(247,223,17)" fg:x="853" fg:w="1"/><text x="68.6542%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.4844%" y="277" width="0.1604%" height="15" fill="rgb(246,56,7)" fg:x="854" fg:w="2"/><text x="68.7344%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.4844%" y="261" width="0.1604%" height="15" fill="rgb(240,226,12)" fg:x="854" fg:w="2"/><text x="68.7344%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.4844%" y="245" width="0.1604%" height="15" fill="rgb(205,87,46)" fg:x="854" fg:w="2"/><text x="68.7344%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="68.4042%" y="293" width="0.3208%" height="15" fill="rgb(245,214,51)" fg:x="853" fg:w="4"/><text x="68.6542%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="68.6447%" y="277" width="0.0802%" height="15" fill="rgb(223,172,33)" fg:x="856" fg:w="1"/><text x="68.8947%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.6447%" y="261" width="0.0802%" height="15" fill="rgb(227,203,34)" fg:x="856" fg:w="1"/><text x="68.8947%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.6447%" y="245" width="0.0802%" height="15" fill="rgb(248,143,44)" fg:x="856" fg:w="1"/><text x="68.8947%" y="255.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (11 samples, 0.88%)</title><rect x="67.9230%" y="357" width="0.8821%" height="15" fill="rgb(226,162,5)" fg:x="847" fg:w="11"/><text x="68.1730%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.80%)</title><rect x="68.0032%" y="341" width="0.8019%" height="15" fill="rgb(211,143,1)" fg:x="848" fg:w="10"/><text x="68.2532%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="68.0032%" y="325" width="0.8019%" height="15" fill="rgb(224,96,15)" fg:x="848" fg:w="10"/><text x="68.2532%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.48%)</title><rect x="68.3240%" y="309" width="0.4812%" height="15" fill="rgb(222,4,38)" fg:x="852" fg:w="6"/><text x="68.5740%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.7249%" y="293" width="0.0802%" height="15" fill="rgb(253,228,15)" fg:x="857" fg:w="1"/><text x="68.9749%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="68.8051%" y="357" width="0.0802%" height="15" fill="rgb(242,194,12)" fg:x="858" fg:w="1"/><text x="69.0551%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.8051%" y="341" width="0.0802%" height="15" fill="rgb(214,177,31)" fg:x="858" fg:w="1"/><text x="69.0551%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8051%" y="325" width="0.0802%" height="15" fill="rgb(226,58,51)" fg:x="858" fg:w="1"/><text x="69.0551%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8853%" y="341" width="0.0802%" height="15" fill="rgb(250,119,16)" fg:x="859" fg:w="1"/><text x="69.1353%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.9655%" y="341" width="0.1604%" height="15" fill="rgb(223,128,53)" fg:x="860" fg:w="2"/><text x="69.2155%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.0457%" y="325" width="0.0802%" height="15" fill="rgb(251,199,15)" fg:x="861" fg:w="1"/><text x="69.2957%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0457%" y="309" width="0.0802%" height="15" fill="rgb(235,168,42)" fg:x="861" fg:w="1"/><text x="69.2957%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1259%" y="309" width="0.0802%" height="15" fill="rgb(250,210,17)" fg:x="862" fg:w="1"/><text x="69.3759%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1259%" y="293" width="0.0802%" height="15" fill="rgb(226,36,41)" fg:x="862" fg:w="1"/><text x="69.3759%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.1259%" y="277" width="0.0802%" height="15" fill="rgb(225,87,10)" fg:x="862" fg:w="1"/><text x="69.3759%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="69.2863%" y="277" width="0.0802%" height="15" fill="rgb(228,83,9)" fg:x="864" fg:w="1"/><text x="69.5363%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.2863%" y="261" width="0.0802%" height="15" fill="rgb(225,16,36)" fg:x="864" fg:w="1"/><text x="69.5363%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.2863%" y="245" width="0.0802%" height="15" fill="rgb(242,198,13)" fg:x="864" fg:w="1"/><text x="69.5363%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="69.2061%" y="309" width="0.3208%" height="15" fill="rgb(239,25,51)" fg:x="863" fg:w="4"/><text x="69.4561%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="69.2061%" y="293" width="0.3208%" height="15" fill="rgb(239,28,37)" fg:x="863" fg:w="4"/><text x="69.4561%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.3665%" y="277" width="0.1604%" height="15" fill="rgb(234,70,17)" fg:x="865" fg:w="2"/><text x="69.6165%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="69.6071%" y="293" width="0.0802%" height="15" fill="rgb(231,215,53)" fg:x="868" fg:w="1"/><text x="69.8571%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6071%" y="277" width="0.0802%" height="15" fill="rgb(218,140,42)" fg:x="868" fg:w="1"/><text x="69.8571%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6071%" y="261" width="0.0802%" height="15" fill="rgb(233,227,45)" fg:x="868" fg:w="1"/><text x="69.8571%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6071%" y="245" width="0.0802%" height="15" fill="rgb(225,189,21)" fg:x="868" fg:w="1"/><text x="69.8571%" y="255.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (135 samples, 10.83%)</title><rect x="59.0217%" y="421" width="10.8260%" height="15" fill="rgb(237,176,54)" fg:x="736" fg:w="135"/><text x="59.2717%" y="431.50">&lt;rpc_proto::Json..</text></g><g><title>kernel::model::EntityPtr::to_json_value (48 samples, 3.85%)</title><rect x="65.9984%" y="405" width="3.8492%" height="15" fill="rgb(215,131,46)" fg:x="823" fg:w="48"/><text x="66.2484%" y="415.50">kern..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (48 samples, 3.85%)</title><rect x="65.9984%" y="389" width="3.8492%" height="15" fill="rgb(218,95,20)" fg:x="823" fg:w="48"/><text x="66.2484%" y="399.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 3.85%)</title><rect x="65.9984%" y="373" width="3.8492%" height="15" fill="rgb(208,198,12)" fg:x="823" fg:w="48"/><text x="66.2484%" y="383.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="68.8853%" y="357" width="0.9623%" height="15" fill="rgb(239,107,50)" fg:x="859" fg:w="12"/><text x="69.1353%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (9 samples, 0.72%)</title><rect x="69.1259%" y="341" width="0.7217%" height="15" fill="rgb(240,217,37)" fg:x="862" fg:w="9"/><text x="69.3759%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="69.1259%" y="325" width="0.7217%" height="15" fill="rgb(242,197,49)" fg:x="862" fg:w="9"/><text x="69.3759%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="69.5269%" y="309" width="0.3208%" height="15" fill="rgb(219,171,17)" fg:x="867" fg:w="4"/><text x="69.7769%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.6872%" y="293" width="0.1604%" height="15" fill="rgb(209,81,40)" fg:x="869" fg:w="2"/><text x="69.9372%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="69.8476%" y="421" width="0.1604%" height="15" fill="rgb(237,156,30)" fg:x="871" fg:w="2"/><text x="70.0976%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0080%" y="405" width="0.0802%" height="15" fill="rgb(212,127,16)" fg:x="873" fg:w="1"/><text x="70.2580%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (4 samples, 0.32%)</title><rect x="70.0080%" y="421" width="0.3208%" height="15" fill="rgb(226,66,32)" fg:x="873" fg:w="4"/><text x="70.2580%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (3 samples, 0.24%)</title><rect x="70.0882%" y="405" width="0.2406%" height="15" fill="rgb(245,22,46)" fg:x="874" fg:w="3"/><text x="70.3382%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="70.0882%" y="389" width="0.2406%" height="15" fill="rgb(210,112,21)" fg:x="874" fg:w="3"/><text x="70.3382%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (267 samples, 21.41%)</title><rect x="48.9976%" y="485" width="21.4114%" height="15" fill="rgb(207,118,39)" fg:x="611" fg:w="267"/><text x="49.2476%" y="495.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (167 samples, 13.39%)</title><rect x="57.0168%" y="469" width="13.3921%" height="15" fill="rgb(205,206,35)" fg:x="711" fg:w="167"/><text x="57.2668%" y="479.50">alloc::vec::in_place..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (162 samples, 12.99%)</title><rect x="57.4178%" y="453" width="12.9912%" height="15" fill="rgb(222,120,2)" fg:x="716" fg:w="162"/><text x="57.6678%" y="463.50">&lt;core::iter::adapter..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (161 samples, 12.91%)</title><rect x="57.4980%" y="437" width="12.9110%" height="15" fill="rgb(205,38,18)" fg:x="717" fg:w="161"/><text x="57.7480%" y="447.50">plugins_rpc::sessio..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="70.3288%" y="421" width="0.0802%" height="15" fill="rgb(226,61,2)" fg:x="877" fg:w="1"/><text x="70.5788%" y="431.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="70.3288%" y="405" width="0.0802%" height="15" fill="rgb(242,161,23)" fg:x="877" fg:w="1"/><text x="70.5788%" y="415.50"></text></g><g><title>engine::perform::StandardPerformer::perform (342 samples, 27.43%)</title><rect x="43.0634%" y="565" width="27.4258%" height="15" fill="rgb(213,13,52)" fg:x="537" fg:w="342"/><text x="43.3134%" y="575.50">engine::perform::StandardPerformer::perform</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (312 samples, 25.02%)</title><rect x="45.4691%" y="549" width="25.0200%" height="15" fill="rgb(246,209,47)" fg:x="567" fg:w="312"/><text x="45.7191%" y="559.50">kernel::plugins::SessionPlugins::have_su..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (311 samples, 24.94%)</title><rect x="45.5493%" y="533" width="24.9399%" height="15" fill="rgb(214,41,3)" fg:x="568" fg:w="311"/><text x="45.7993%" y="543.50">&lt;plugins_dynlib::DynamicPlugin as kernel..</text></g><g><title>plugins_rpc::querying::have_surroundings (279 samples, 22.37%)</title><rect x="48.1155%" y="517" width="22.3737%" height="15" fill="rgb(236,119,38)" fg:x="600" fg:w="279"/><text x="48.3655%" y="527.50">plugins_rpc::querying::have_surroun..</text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (279 samples, 22.37%)</title><rect x="48.1155%" y="501" width="22.3737%" height="15" fill="rgb(218,50,11)" fg:x="600" fg:w="279"/><text x="48.3655%" y="511.50">&lt;plugins_rpc::sessions::SessionServ..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4090%" y="485" width="0.0802%" height="15" fill="rgb(228,38,11)" fg:x="878" fg:w="1"/><text x="70.6590%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.4090%" y="469" width="0.0802%" height="15" fill="rgb(212,13,9)" fg:x="878" fg:w="1"/><text x="70.6590%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="70.4892%" y="533" width="0.0802%" height="15" fill="rgb(208,211,9)" fg:x="879" fg:w="1"/><text x="70.7392%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="70.4892%" y="517" width="0.0802%" height="15" fill="rgb(239,39,32)" fg:x="879" fg:w="1"/><text x="70.7392%" y="527.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="70.4892%" y="501" width="0.0802%" height="15" fill="rgb(254,179,26)" fg:x="879" fg:w="1"/><text x="70.7392%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (881 samples, 70.65%)</title><rect x="0.0000%" y="645" width="70.6496%" height="15" fill="rgb(249,165,28)" fg:x="0" fg:w="881"/><text x="0.2500%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (881 samples, 70.65%)</title><rect x="0.0000%" y="629" width="70.6496%" height="15" fill="rgb(225,59,50)" fg:x="0" fg:w="881"/><text x="0.2500%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (881 samples, 70.65%)</title><rect x="0.0000%" y="613" width="70.6496%" height="15" fill="rgb(209,122,5)" fg:x="0" fg:w="881"/><text x="0.2500%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (369 samples, 29.59%)</title><rect x="41.0585%" y="597" width="29.5910%" height="15" fill="rgb(214,65,34)" fg:x="512" fg:w="369"/><text x="41.3085%" y="607.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (369 samples, 29.59%)</title><rect x="41.0585%" y="581" width="29.5910%" height="15" fill="rgb(249,183,32)" fg:x="512" fg:w="369"/><text x="41.3085%" y="591.50">engine::perform::StandardPerformer::evaluate_and..</text></g><g><title>kernel::plugins::SessionPlugins::evaluate (2 samples, 0.16%)</title><rect x="70.4892%" y="565" width="0.1604%" height="15" fill="rgb(218,122,24)" fg:x="879" fg:w="2"/><text x="70.7392%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="70.4892%" y="549" width="0.1604%" height="15" fill="rgb(224,109,18)" fg:x="879" fg:w="2"/><text x="70.7392%" y="559.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="70.5694%" y="533" width="0.0802%" height="15" fill="rgb(210,68,50)" fg:x="880" fg:w="1"/><text x="70.8194%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="70.5694%" y="517" width="0.0802%" height="15" fill="rgb(212,184,34)" fg:x="880" fg:w="1"/><text x="70.8194%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="70.5694%" y="501" width="0.0802%" height="15" fill="rgb(238,105,48)" fg:x="880" fg:w="1"/><text x="70.8194%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.6496%" y="597" width="0.0802%" height="15" fill="rgb(222,134,54)" fg:x="881" fg:w="1"/><text x="70.8996%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (1 samples, 0.08%)</title><rect x="70.6496%" y="581" width="0.0802%" height="15" fill="rgb(246,24,43)" fg:x="881" fg:w="1"/><text x="70.8996%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.6496%" y="565" width="0.0802%" height="15" fill="rgb(227,169,22)" fg:x="881" fg:w="1"/><text x="70.8996%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="70.6496%" y="549" width="0.0802%" height="15" fill="rgb(253,152,4)" fg:x="881" fg:w="1"/><text x="70.8996%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.6496%" y="533" width="0.0802%" height="15" fill="rgb(219,158,36)" fg:x="881" fg:w="1"/><text x="70.8996%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.6496%" y="517" width="0.0802%" height="15" fill="rgb(251,128,40)" fg:x="881" fg:w="1"/><text x="70.8996%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.6496%" y="501" width="0.0802%" height="15" fill="rgb(254,101,39)" fg:x="881" fg:w="1"/><text x="70.8996%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.6496%" y="485" width="0.0802%" height="15" fill="rgb(221,168,40)" fg:x="881" fg:w="1"/><text x="70.8996%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.6496%" y="469" width="0.0802%" height="15" fill="rgb(221,14,27)" fg:x="881" fg:w="1"/><text x="70.8996%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.6496%" y="453" width="0.0802%" height="15" fill="rgb(207,36,43)" fg:x="881" fg:w="1"/><text x="70.8996%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.6496%" y="437" width="0.0802%" height="15" fill="rgb(240,172,53)" fg:x="881" fg:w="1"/><text x="70.8996%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6496%" y="421" width="0.0802%" height="15" fill="rgb(241,138,43)" fg:x="881" fg:w="1"/><text x="70.8996%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="70.7298%" y="533" width="0.0802%" height="15" fill="rgb(227,78,19)" fg:x="882" fg:w="1"/><text x="70.9798%" y="543.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="70.7298%" y="517" width="0.0802%" height="15" fill="rgb(215,127,44)" fg:x="882" fg:w="1"/><text x="70.9798%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7298%" y="501" width="0.0802%" height="15" fill="rgb(227,13,10)" fg:x="882" fg:w="1"/><text x="70.9798%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7298%" y="485" width="0.0802%" height="15" fill="rgb(249,177,6)" fg:x="882" fg:w="1"/><text x="70.9798%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7298%" y="469" width="0.0802%" height="15" fill="rgb(215,154,26)" fg:x="882" fg:w="1"/><text x="70.9798%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7298%" y="453" width="0.0802%" height="15" fill="rgb(250,168,20)" fg:x="882" fg:w="1"/><text x="70.9798%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7298%" y="437" width="0.0802%" height="15" fill="rgb(222,53,38)" fg:x="882" fg:w="1"/><text x="70.9798%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.7298%" y="421" width="0.0802%" height="15" fill="rgb(245,154,5)" fg:x="882" fg:w="1"/><text x="70.9798%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.7298%" y="405" width="0.0802%" height="15" fill="rgb(214,89,50)" fg:x="882" fg:w="1"/><text x="70.9798%" y="415.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="70.8099%" y="533" width="0.0802%" height="15" fill="rgb(232,73,14)" fg:x="883" fg:w="1"/><text x="71.0599%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8099%" y="517" width="0.0802%" height="15" fill="rgb(230,101,20)" fg:x="883" fg:w="1"/><text x="71.0599%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8099%" y="501" width="0.0802%" height="15" fill="rgb(208,56,28)" fg:x="883" fg:w="1"/><text x="71.0599%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="70.8099%" y="485" width="0.0802%" height="15" fill="rgb(247,205,22)" fg:x="883" fg:w="1"/><text x="71.0599%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="70.8901%" y="517" width="0.0802%" height="15" fill="rgb(252,109,51)" fg:x="884" fg:w="1"/><text x="71.1401%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="70.8901%" y="501" width="0.0802%" height="15" fill="rgb(220,40,24)" fg:x="884" fg:w="1"/><text x="71.1401%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.8901%" y="485" width="0.0802%" height="15" fill="rgb(251,108,7)" fg:x="884" fg:w="1"/><text x="71.1401%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8901%" y="469" width="0.0802%" height="15" fill="rgb(238,102,51)" fg:x="884" fg:w="1"/><text x="71.1401%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.8901%" y="453" width="0.0802%" height="15" fill="rgb(219,149,34)" fg:x="884" fg:w="1"/><text x="71.1401%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8901%" y="437" width="0.0802%" height="15" fill="rgb(239,70,0)" fg:x="884" fg:w="1"/><text x="71.1401%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.8901%" y="421" width="0.0802%" height="15" fill="rgb(246,214,23)" fg:x="884" fg:w="1"/><text x="71.1401%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8901%" y="405" width="0.0802%" height="15" fill="rgb(239,221,51)" fg:x="884" fg:w="1"/><text x="71.1401%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.8901%" y="389" width="0.0802%" height="15" fill="rgb(254,62,14)" fg:x="884" fg:w="1"/><text x="71.1401%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8901%" y="373" width="0.0802%" height="15" fill="rgb(253,57,33)" fg:x="884" fg:w="1"/><text x="71.1401%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8901%" y="357" width="0.0802%" height="15" fill="rgb(229,34,6)" fg:x="884" fg:w="1"/><text x="71.1401%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="70.7298%" y="565" width="0.3208%" height="15" fill="rgb(235,191,23)" fg:x="882" fg:w="4"/><text x="70.9798%" y="575.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.32%)</title><rect x="70.7298%" y="549" width="0.3208%" height="15" fill="rgb(217,207,27)" fg:x="882" fg:w="4"/><text x="70.9798%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="70.8901%" y="533" width="0.1604%" height="15" fill="rgb(232,41,44)" fg:x="884" fg:w="2"/><text x="71.1401%" y="543.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="70.9703%" y="517" width="0.0802%" height="15" fill="rgb(221,188,19)" fg:x="885" fg:w="1"/><text x="71.2203%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.9703%" y="501" width="0.0802%" height="15" fill="rgb(245,180,45)" fg:x="885" fg:w="1"/><text x="71.2203%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.9703%" y="485" width="0.0802%" height="15" fill="rgb(250,220,42)" fg:x="885" fg:w="1"/><text x="71.2203%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.9703%" y="469" width="0.0802%" height="15" fill="rgb(234,16,34)" fg:x="885" fg:w="1"/><text x="71.2203%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.9703%" y="453" width="0.0802%" height="15" fill="rgb(233,217,23)" fg:x="885" fg:w="1"/><text x="71.2203%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9703%" y="437" width="0.0802%" height="15" fill="rgb(209,22,46)" fg:x="885" fg:w="1"/><text x="71.2203%" y="447.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="71.1307%" y="501" width="0.0802%" height="15" fill="rgb(213,101,18)" fg:x="887" fg:w="1"/><text x="71.3807%" y="511.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="71.1307%" y="485" width="0.0802%" height="15" fill="rgb(215,179,52)" fg:x="887" fg:w="1"/><text x="71.3807%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.1307%" y="469" width="0.0802%" height="15" fill="rgb(223,50,25)" fg:x="887" fg:w="1"/><text x="71.3807%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (8 samples, 0.64%)</title><rect x="71.1307%" y="533" width="0.6415%" height="15" fill="rgb(224,51,44)" fg:x="887" fg:w="8"/><text x="71.3807%" y="543.50"></text></g><g><title>libloading::os::unix::Library::open (8 samples, 0.64%)</title><rect x="71.1307%" y="517" width="0.6415%" height="15" fill="rgb(224,13,54)" fg:x="887" fg:w="8"/><text x="71.3807%" y="527.50"></text></g><g><title>dlopen (7 samples, 0.56%)</title><rect x="71.2109%" y="501" width="0.5613%" height="15" fill="rgb(219,58,47)" fg:x="888" fg:w="7"/><text x="71.4609%" y="511.50"></text></g><g><title>_dl_catch_error (7 samples, 0.56%)</title><rect x="71.2109%" y="485" width="0.5613%" height="15" fill="rgb(246,124,34)" fg:x="888" fg:w="7"/><text x="71.4609%" y="495.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="71.2109%" y="469" width="0.5613%" height="15" fill="rgb(245,109,25)" fg:x="888" fg:w="7"/><text x="71.4609%" y="479.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="71.2109%" y="453" width="0.5613%" height="15" fill="rgb(235,48,23)" fg:x="888" fg:w="7"/><text x="71.4609%" y="463.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="71.2109%" y="437" width="0.5613%" height="15" fill="rgb(229,203,36)" fg:x="888" fg:w="7"/><text x="71.4609%" y="447.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="71.6921%" y="421" width="0.0802%" height="15" fill="rgb(234,180,9)" fg:x="894" fg:w="1"/><text x="71.9421%" y="431.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="71.6921%" y="405" width="0.0802%" height="15" fill="rgb(228,98,45)" fg:x="894" fg:w="1"/><text x="71.9421%" y="415.50"></text></g><g><title>engine::session::Session::initialize (10 samples, 0.80%)</title><rect x="71.0505%" y="565" width="0.8019%" height="15" fill="rgb(240,24,36)" fg:x="886" fg:w="10"/><text x="71.3005%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (10 samples, 0.80%)</title><rect x="71.0505%" y="549" width="0.8019%" height="15" fill="rgb(227,154,19)" fg:x="886" fg:w="10"/><text x="71.3005%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="71.7723%" y="533" width="0.0802%" height="15" fill="rgb(231,2,48)" fg:x="895" fg:w="1"/><text x="72.0223%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="71.7723%" y="517" width="0.0802%" height="15" fill="rgb(219,216,0)" fg:x="895" fg:w="1"/><text x="72.0223%" y="527.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (15 samples, 1.20%)</title><rect x="70.7298%" y="597" width="1.2029%" height="15" fill="rgb(251,88,0)" fg:x="882" fg:w="15"/><text x="70.9798%" y="607.50"></text></g><g><title>engine::session::Session::new (15 samples, 1.20%)</title><rect x="70.7298%" y="581" width="1.2029%" height="15" fill="rgb(242,45,45)" fg:x="882" fg:w="15"/><text x="70.9798%" y="591.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="71.8524%" y="565" width="0.0802%" height="15" fill="rgb(218,149,45)" fg:x="896" fg:w="1"/><text x="72.1024%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="71.8524%" y="549" width="0.0802%" height="15" fill="rgb(247,194,10)" fg:x="896" fg:w="1"/><text x="72.1024%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.8524%" y="533" width="0.0802%" height="15" fill="rgb(234,33,37)" fg:x="896" fg:w="1"/><text x="72.1024%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.8524%" y="517" width="0.0802%" height="15" fill="rgb(218,61,13)" fg:x="896" fg:w="1"/><text x="72.1024%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.8524%" y="501" width="0.0802%" height="15" fill="rgb(210,80,52)" fg:x="896" fg:w="1"/><text x="72.1024%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.8524%" y="485" width="0.0802%" height="15" fill="rgb(218,203,27)" fg:x="896" fg:w="1"/><text x="72.1024%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="72.0128%" y="581" width="0.0802%" height="15" fill="rgb(209,126,33)" fg:x="898" fg:w="1"/><text x="72.2628%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="72.0128%" y="565" width="0.0802%" height="15" fill="rgb(234,173,41)" fg:x="898" fg:w="1"/><text x="72.2628%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.0930%" y="533" width="0.0802%" height="15" fill="rgb(228,166,9)" fg:x="899" fg:w="1"/><text x="72.3430%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.0930%" y="517" width="0.0802%" height="15" fill="rgb(208,124,43)" fg:x="899" fg:w="1"/><text x="72.3430%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.0930%" y="501" width="0.0802%" height="15" fill="rgb(212,154,38)" fg:x="899" fg:w="1"/><text x="72.3430%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.0930%" y="485" width="0.0802%" height="15" fill="rgb(246,179,35)" fg:x="899" fg:w="1"/><text x="72.3430%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.0930%" y="469" width="0.0802%" height="15" fill="rgb(251,3,50)" fg:x="899" fg:w="1"/><text x="72.3430%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.0930%" y="453" width="0.0802%" height="15" fill="rgb(219,96,8)" fg:x="899" fg:w="1"/><text x="72.3430%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.0930%" y="437" width="0.0802%" height="15" fill="rgb(251,216,33)" fg:x="899" fg:w="1"/><text x="72.3430%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="72.0930%" y="549" width="0.1604%" height="15" fill="rgb(243,145,29)" fg:x="899" fg:w="2"/><text x="72.3430%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1732%" y="533" width="0.0802%" height="15" fill="rgb(210,75,20)" fg:x="900" fg:w="1"/><text x="72.4232%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="72.2534%" y="501" width="0.0802%" height="15" fill="rgb(235,56,8)" fg:x="901" fg:w="1"/><text x="72.5034%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.2534%" y="485" width="0.0802%" height="15" fill="rgb(226,175,49)" fg:x="901" fg:w="1"/><text x="72.5034%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.2534%" y="469" width="0.0802%" height="15" fill="rgb(242,204,23)" fg:x="901" fg:w="1"/><text x="72.5034%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.4138%" y="485" width="0.0802%" height="15" fill="rgb(225,104,24)" fg:x="903" fg:w="1"/><text x="72.6638%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.4138%" y="469" width="0.0802%" height="15" fill="rgb(253,34,1)" fg:x="903" fg:w="1"/><text x="72.6638%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="72.4940%" y="469" width="0.3208%" height="15" fill="rgb(233,199,23)" fg:x="904" fg:w="4"/><text x="72.7440%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="72.4940%" y="453" width="0.3208%" height="15" fill="rgb(247,7,51)" fg:x="904" fg:w="4"/><text x="72.7440%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="72.4940%" y="437" width="0.3208%" height="15" fill="rgb(214,146,12)" fg:x="904" fg:w="4"/><text x="72.7440%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="72.4940%" y="421" width="0.3208%" height="15" fill="rgb(234,181,43)" fg:x="904" fg:w="4"/><text x="72.7440%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.8148%" y="469" width="0.0802%" height="15" fill="rgb(239,148,6)" fg:x="908" fg:w="1"/><text x="73.0648%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.8148%" y="453" width="0.0802%" height="15" fill="rgb(206,151,17)" fg:x="908" fg:w="1"/><text x="73.0648%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="72.4940%" y="485" width="0.5613%" height="15" fill="rgb(213,215,10)" fg:x="904" fg:w="7"/><text x="72.7440%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.8949%" y="469" width="0.1604%" height="15" fill="rgb(215,220,44)" fg:x="909" fg:w="2"/><text x="73.1449%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.9751%" y="453" width="0.0802%" height="15" fill="rgb(245,205,37)" fg:x="910" fg:w="1"/><text x="73.2251%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="72.2534%" y="517" width="0.8821%" height="15" fill="rgb(245,130,43)" fg:x="901" fg:w="11"/><text x="72.5034%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="72.3336%" y="501" width="0.8019%" height="15" fill="rgb(231,227,38)" fg:x="902" fg:w="10"/><text x="72.5836%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.0553%" y="485" width="0.0802%" height="15" fill="rgb(233,185,4)" fg:x="911" fg:w="1"/><text x="73.3053%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.0553%" y="469" width="0.0802%" height="15" fill="rgb(224,154,43)" fg:x="911" fg:w="1"/><text x="73.3053%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1355%" y="485" width="0.0802%" height="15" fill="rgb(235,156,15)" fg:x="912" fg:w="1"/><text x="73.3855%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="73.1355%" y="517" width="0.4010%" height="15" fill="rgb(211,55,43)" fg:x="912" fg:w="5"/><text x="73.3855%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="73.1355%" y="501" width="0.4010%" height="15" fill="rgb(247,149,40)" fg:x="912" fg:w="5"/><text x="73.3855%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.2157%" y="485" width="0.3208%" height="15" fill="rgb(232,171,16)" fg:x="913" fg:w="4"/><text x="73.4657%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.2157%" y="469" width="0.3208%" height="15" fill="rgb(215,117,49)" fg:x="913" fg:w="4"/><text x="73.4657%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.2157%" y="453" width="0.3208%" height="15" fill="rgb(246,194,11)" fg:x="913" fg:w="4"/><text x="73.4657%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.3761%" y="437" width="0.1604%" height="15" fill="rgb(242,101,44)" fg:x="915" fg:w="2"/><text x="73.6261%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5365%" y="469" width="0.0802%" height="15" fill="rgb(226,174,6)" fg:x="917" fg:w="1"/><text x="73.7865%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.6167%" y="469" width="0.0802%" height="15" fill="rgb(213,150,20)" fg:x="918" fg:w="1"/><text x="73.8667%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.6167%" y="453" width="0.0802%" height="15" fill="rgb(222,124,42)" fg:x="918" fg:w="1"/><text x="73.8667%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="73.6167%" y="437" width="0.0802%" height="15" fill="rgb(250,19,47)" fg:x="918" fg:w="1"/><text x="73.8667%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="73.6969%" y="469" width="0.0802%" height="15" fill="rgb(241,217,19)" fg:x="919" fg:w="1"/><text x="73.9469%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.8573%" y="421" width="0.0802%" height="15" fill="rgb(207,210,34)" fg:x="921" fg:w="1"/><text x="74.1073%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.8573%" y="405" width="0.0802%" height="15" fill="rgb(244,45,4)" fg:x="921" fg:w="1"/><text x="74.1073%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8573%" y="389" width="0.0802%" height="15" fill="rgb(252,134,50)" fg:x="921" fg:w="1"/><text x="74.1073%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="73.7771%" y="469" width="0.3208%" height="15" fill="rgb(238,74,2)" fg:x="920" fg:w="4"/><text x="74.0271%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="73.7771%" y="453" width="0.3208%" height="15" fill="rgb(226,58,46)" fg:x="920" fg:w="4"/><text x="74.0271%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="73.7771%" y="437" width="0.3208%" height="15" fill="rgb(232,83,35)" fg:x="920" fg:w="4"/><text x="74.0271%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="73.9374%" y="421" width="0.1604%" height="15" fill="rgb(212,148,47)" fg:x="922" fg:w="2"/><text x="74.1874%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.9374%" y="405" width="0.1604%" height="15" fill="rgb(235,29,1)" fg:x="922" fg:w="2"/><text x="74.1874%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="73.9374%" y="389" width="0.1604%" height="15" fill="rgb(247,55,37)" fg:x="922" fg:w="2"/><text x="74.1874%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.9374%" y="373" width="0.1604%" height="15" fill="rgb(222,48,3)" fg:x="922" fg:w="2"/><text x="74.1874%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0176%" y="357" width="0.0802%" height="15" fill="rgb(234,21,33)" fg:x="923" fg:w="1"/><text x="74.2676%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="74.0978%" y="421" width="0.1604%" height="15" fill="rgb(247,178,53)" fg:x="924" fg:w="2"/><text x="74.3478%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.0978%" y="405" width="0.1604%" height="15" fill="rgb(225,75,7)" fg:x="924" fg:w="2"/><text x="74.3478%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.1780%" y="389" width="0.0802%" height="15" fill="rgb(219,199,7)" fg:x="925" fg:w="1"/><text x="74.4280%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1780%" y="373" width="0.0802%" height="15" fill="rgb(209,93,42)" fg:x="925" fg:w="1"/><text x="74.4280%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1780%" y="357" width="0.0802%" height="15" fill="rgb(240,175,17)" fg:x="925" fg:w="1"/><text x="74.4280%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.2582%" y="405" width="0.0802%" height="15" fill="rgb(232,106,7)" fg:x="926" fg:w="1"/><text x="74.5082%" y="415.50"></text></g><g><title>engine::session::Session::flush (29 samples, 2.33%)</title><rect x="72.0930%" y="581" width="2.3256%" height="15" fill="rgb(242,106,43)" fg:x="899" fg:w="29"/><text x="72.3430%" y="591.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (29 samples, 2.33%)</title><rect x="72.0930%" y="565" width="2.3256%" height="15" fill="rgb(242,61,37)" fg:x="899" fg:w="29"/><text x="72.3430%" y="575.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (27 samples, 2.17%)</title><rect x="72.2534%" y="549" width="2.1652%" height="15" fill="rgb(205,72,10)" fg:x="901" fg:w="27"/><text x="72.5034%" y="559.50">e..</text></g><g><title>engine::session::Session::check_for_changes (27 samples, 2.17%)</title><rect x="72.2534%" y="533" width="2.1652%" height="15" fill="rgb(214,184,36)" fg:x="901" fg:w="27"/><text x="72.5034%" y="543.50">e..</text></g><g><title>kernel::compare::any_entity_changes (11 samples, 0.88%)</title><rect x="73.5365%" y="517" width="0.8821%" height="15" fill="rgb(206,107,18)" fg:x="917" fg:w="11"/><text x="73.7865%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="73.5365%" y="501" width="0.8821%" height="15" fill="rgb(210,75,5)" fg:x="917" fg:w="11"/><text x="73.7865%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="73.5365%" y="485" width="0.8821%" height="15" fill="rgb(205,3,19)" fg:x="917" fg:w="11"/><text x="73.7865%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="74.0978%" y="469" width="0.3208%" height="15" fill="rgb(207,181,42)" fg:x="924" fg:w="4"/><text x="74.3478%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.32%)</title><rect x="74.0978%" y="453" width="0.3208%" height="15" fill="rgb(229,179,43)" fg:x="924" fg:w="4"/><text x="74.3478%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="74.0978%" y="437" width="0.3208%" height="15" fill="rgb(246,95,30)" fg:x="924" fg:w="4"/><text x="74.3478%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.2582%" y="421" width="0.1604%" height="15" fill="rgb(234,144,45)" fg:x="926" fg:w="2"/><text x="74.5082%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.3384%" y="405" width="0.0802%" height="15" fill="rgb(250,54,25)" fg:x="927" fg:w="1"/><text x="74.5884%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3384%" y="389" width="0.0802%" height="15" fill="rgb(215,195,40)" fg:x="927" fg:w="1"/><text x="74.5884%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3384%" y="373" width="0.0802%" height="15" fill="rgb(233,188,42)" fg:x="927" fg:w="1"/><text x="74.5884%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.16%)</title><rect x="74.4186%" y="581" width="0.1604%" height="15" fill="rgb(247,227,35)" fg:x="928" fg:w="2"/><text x="74.6686%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="74.4186%" y="565" width="0.1604%" height="15" fill="rgb(249,124,27)" fg:x="928" fg:w="2"/><text x="74.6686%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="74.4988%" y="549" width="0.0802%" height="15" fill="rgb(219,207,25)" fg:x="929" fg:w="1"/><text x="74.7488%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4988%" y="533" width="0.0802%" height="15" fill="rgb(241,216,47)" fg:x="929" fg:w="1"/><text x="74.7488%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4988%" y="517" width="0.0802%" height="15" fill="rgb(233,82,50)" fg:x="929" fg:w="1"/><text x="74.7488%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4988%" y="501" width="0.0802%" height="15" fill="rgb(232,63,2)" fg:x="929" fg:w="1"/><text x="74.7488%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.4988%" y="485" width="0.0802%" height="15" fill="rgb(236,184,28)" fg:x="929" fg:w="1"/><text x="74.7488%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.4988%" y="469" width="0.0802%" height="15" fill="rgb(254,63,27)" fg:x="929" fg:w="1"/><text x="74.7488%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.4988%" y="453" width="0.0802%" height="15" fill="rgb(253,106,28)" fg:x="929" fg:w="1"/><text x="74.7488%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4988%" y="437" width="0.0802%" height="15" fill="rgb(225,141,39)" fg:x="929" fg:w="1"/><text x="74.7488%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4988%" y="421" width="0.0802%" height="15" fill="rgb(222,157,20)" fg:x="929" fg:w="1"/><text x="74.7488%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.4988%" y="405" width="0.0802%" height="15" fill="rgb(210,190,9)" fg:x="929" fg:w="1"/><text x="74.7488%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.4988%" y="389" width="0.0802%" height="15" fill="rgb(242,167,7)" fg:x="929" fg:w="1"/><text x="74.7488%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.4988%" y="373" width="0.0802%" height="15" fill="rgb(227,82,41)" fg:x="929" fg:w="1"/><text x="74.7488%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.4988%" y="357" width="0.0802%" height="15" fill="rgb(222,131,13)" fg:x="929" fg:w="1"/><text x="74.7488%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.4988%" y="341" width="0.0802%" height="15" fill="rgb(221,98,26)" fg:x="929" fg:w="1"/><text x="74.7488%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.4988%" y="325" width="0.0802%" height="15" fill="rgb(251,63,52)" fg:x="929" fg:w="1"/><text x="74.7488%" y="335.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="74.5790%" y="581" width="0.1604%" height="15" fill="rgb(246,25,43)" fg:x="930" fg:w="2"/><text x="74.8290%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="74.6592%" y="565" width="0.0802%" height="15" fill="rgb(247,167,15)" fg:x="931" fg:w="1"/><text x="74.9092%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="74.6592%" y="549" width="0.0802%" height="15" fill="rgb(240,104,42)" fg:x="931" fg:w="1"/><text x="74.9092%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="74.6592%" y="533" width="0.0802%" height="15" fill="rgb(224,54,6)" fg:x="931" fg:w="1"/><text x="74.9092%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.6592%" y="517" width="0.0802%" height="15" fill="rgb(244,108,35)" fg:x="931" fg:w="1"/><text x="74.9092%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.6592%" y="501" width="0.0802%" height="15" fill="rgb(216,154,2)" fg:x="931" fg:w="1"/><text x="74.9092%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.6592%" y="485" width="0.0802%" height="15" fill="rgb(222,8,47)" fg:x="931" fg:w="1"/><text x="74.9092%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.6592%" y="469" width="0.0802%" height="15" fill="rgb(252,93,1)" fg:x="931" fg:w="1"/><text x="74.9092%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="74.6592%" y="453" width="0.0802%" height="15" fill="rgb(223,226,51)" fg:x="931" fg:w="1"/><text x="74.9092%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="74.7394%" y="581" width="0.0802%" height="15" fill="rgb(206,147,9)" fg:x="932" fg:w="1"/><text x="74.9894%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="74.7394%" y="565" width="0.0802%" height="15" fill="rgb(248,180,41)" fg:x="932" fg:w="1"/><text x="74.9894%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="74.7394%" y="549" width="0.0802%" height="15" fill="rgb(209,47,50)" fg:x="932" fg:w="1"/><text x="74.9894%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7394%" y="533" width="0.0802%" height="15" fill="rgb(243,65,31)" fg:x="932" fg:w="1"/><text x="74.9894%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7394%" y="517" width="0.0802%" height="15" fill="rgb(228,128,1)" fg:x="932" fg:w="1"/><text x="74.9894%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.7394%" y="501" width="0.0802%" height="15" fill="rgb(231,192,16)" fg:x="932" fg:w="1"/><text x="74.9894%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.7394%" y="485" width="0.0802%" height="15" fill="rgb(224,26,40)" fg:x="932" fg:w="1"/><text x="74.9894%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.7394%" y="469" width="0.0802%" height="15" fill="rgb(214,192,17)" fg:x="932" fg:w="1"/><text x="74.9894%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.7394%" y="453" width="0.0802%" height="15" fill="rgb(225,147,18)" fg:x="932" fg:w="1"/><text x="74.9894%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.7394%" y="437" width="0.0802%" height="15" fill="rgb(205,35,11)" fg:x="932" fg:w="1"/><text x="74.9894%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.7394%" y="421" width="0.0802%" height="15" fill="rgb(242,40,42)" fg:x="932" fg:w="1"/><text x="74.9894%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.7394%" y="405" width="0.0802%" height="15" fill="rgb(250,170,13)" fg:x="932" fg:w="1"/><text x="74.9894%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.7394%" y="389" width="0.0802%" height="15" fill="rgb(240,161,28)" fg:x="932" fg:w="1"/><text x="74.9894%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.7394%" y="373" width="0.0802%" height="15" fill="rgb(245,179,12)" fg:x="932" fg:w="1"/><text x="74.9894%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.7394%" y="357" width="0.0802%" height="15" fill="rgb(250,92,32)" fg:x="932" fg:w="1"/><text x="74.9894%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.7394%" y="341" width="0.0802%" height="15" fill="rgb(233,10,40)" fg:x="932" fg:w="1"/><text x="74.9894%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8196%" y="565" width="0.0802%" height="15" fill="rgb(217,98,1)" fg:x="933" fg:w="1"/><text x="75.0696%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="74.8998%" y="565" width="0.0802%" height="15" fill="rgb(238,202,7)" fg:x="934" fg:w="1"/><text x="75.1498%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.8998%" y="549" width="0.0802%" height="15" fill="rgb(222,91,3)" fg:x="934" fg:w="1"/><text x="75.1498%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="74.8998%" y="533" width="0.0802%" height="15" fill="rgb(211,170,49)" fg:x="934" fg:w="1"/><text x="75.1498%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.08%)</title><rect x="74.8998%" y="517" width="0.0802%" height="15" fill="rgb(253,139,18)" fg:x="934" fg:w="1"/><text x="75.1498%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="74.8998%" y="501" width="0.0802%" height="15" fill="rgb(222,4,43)" fg:x="934" fg:w="1"/><text x="75.1498%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="74.8998%" y="485" width="0.0802%" height="15" fill="rgb(207,205,12)" fg:x="934" fg:w="1"/><text x="75.1498%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="74.8998%" y="469" width="0.0802%" height="15" fill="rgb(216,159,46)" fg:x="934" fg:w="1"/><text x="75.1498%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="74.8998%" y="453" width="0.0802%" height="15" fill="rgb(236,115,1)" fg:x="934" fg:w="1"/><text x="75.1498%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="75.1403%" y="533" width="0.0802%" height="15" fill="rgb(251,35,33)" fg:x="937" fg:w="1"/><text x="75.3903%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.1403%" y="517" width="0.0802%" height="15" fill="rgb(248,62,51)" fg:x="937" fg:w="1"/><text x="75.3903%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="75.2205%" y="533" width="0.1604%" height="15" fill="rgb(254,180,19)" fg:x="938" fg:w="2"/><text x="75.4705%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="75.2205%" y="517" width="0.1604%" height="15" fill="rgb(217,100,32)" fg:x="938" fg:w="2"/><text x="75.4705%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="75.2205%" y="501" width="0.1604%" height="15" fill="rgb(224,71,22)" fg:x="938" fg:w="2"/><text x="75.4705%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="75.3007%" y="485" width="0.0802%" height="15" fill="rgb(251,185,33)" fg:x="939" fg:w="1"/><text x="75.5507%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.3007%" y="469" width="0.0802%" height="15" fill="rgb(209,75,48)" fg:x="939" fg:w="1"/><text x="75.5507%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.3007%" y="453" width="0.0802%" height="15" fill="rgb(253,190,16)" fg:x="939" fg:w="1"/><text x="75.5507%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="75.3809%" y="469" width="0.3208%" height="15" fill="rgb(226,140,1)" fg:x="940" fg:w="4"/><text x="75.6309%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="75.3809%" y="453" width="0.3208%" height="15" fill="rgb(206,75,30)" fg:x="940" fg:w="4"/><text x="75.6309%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="75.4611%" y="437" width="0.2406%" height="15" fill="rgb(231,208,37)" fg:x="941" fg:w="3"/><text x="75.7111%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="75.4611%" y="421" width="0.2406%" height="15" fill="rgb(238,136,40)" fg:x="941" fg:w="3"/><text x="75.7111%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.6215%" y="405" width="0.0802%" height="15" fill="rgb(247,137,17)" fg:x="943" fg:w="1"/><text x="75.8715%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.6215%" y="389" width="0.0802%" height="15" fill="rgb(240,60,40)" fg:x="943" fg:w="1"/><text x="75.8715%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.6215%" y="373" width="0.0802%" height="15" fill="rgb(236,68,50)" fg:x="943" fg:w="1"/><text x="75.8715%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="75.3809%" y="485" width="0.4010%" height="15" fill="rgb(230,42,12)" fg:x="940" fg:w="5"/><text x="75.6309%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.7017%" y="469" width="0.0802%" height="15" fill="rgb(219,16,16)" fg:x="944" fg:w="1"/><text x="75.9517%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.7017%" y="453" width="0.0802%" height="15" fill="rgb(220,38,35)" fg:x="944" fg:w="1"/><text x="75.9517%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.7017%" y="437" width="0.0802%" height="15" fill="rgb(228,33,1)" fg:x="944" fg:w="1"/><text x="75.9517%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.9423%" y="421" width="0.0802%" height="15" fill="rgb(241,46,31)" fg:x="947" fg:w="1"/><text x="76.1923%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.9423%" y="405" width="0.0802%" height="15" fill="rgb(232,58,20)" fg:x="947" fg:w="1"/><text x="76.1923%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.9423%" y="389" width="0.0802%" height="15" fill="rgb(206,228,53)" fg:x="947" fg:w="1"/><text x="76.1923%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.9423%" y="373" width="0.0802%" height="15" fill="rgb(206,88,33)" fg:x="947" fg:w="1"/><text x="76.1923%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="75.7819%" y="469" width="0.3208%" height="15" fill="rgb(238,69,7)" fg:x="945" fg:w="4"/><text x="76.0319%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="75.8621%" y="453" width="0.2406%" height="15" fill="rgb(250,21,46)" fg:x="946" fg:w="3"/><text x="76.1121%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="75.9423%" y="437" width="0.1604%" height="15" fill="rgb(215,212,21)" fg:x="947" fg:w="2"/><text x="76.1923%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="76.0225%" y="421" width="0.0802%" height="15" fill="rgb(211,35,12)" fg:x="948" fg:w="1"/><text x="76.2725%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.1026%" y="453" width="0.0802%" height="15" fill="rgb(231,184,16)" fg:x="949" fg:w="1"/><text x="76.3526%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1026%" y="437" width="0.0802%" height="15" fill="rgb(242,140,15)" fg:x="949" fg:w="1"/><text x="76.3526%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.1828%" y="453" width="0.1604%" height="15" fill="rgb(220,37,14)" fg:x="950" fg:w="2"/><text x="76.4328%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.4234%" y="437" width="0.0802%" height="15" fill="rgb(223,146,22)" fg:x="953" fg:w="1"/><text x="76.6734%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.4234%" y="421" width="0.0802%" height="15" fill="rgb(216,132,15)" fg:x="953" fg:w="1"/><text x="76.6734%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="76.3432%" y="453" width="0.3208%" height="15" fill="rgb(248,83,5)" fg:x="952" fg:w="4"/><text x="76.5932%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.5036%" y="437" width="0.1604%" height="15" fill="rgb(231,206,48)" fg:x="954" fg:w="2"/><text x="76.7536%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="76.5036%" y="421" width="0.1604%" height="15" fill="rgb(253,185,37)" fg:x="954" fg:w="2"/><text x="76.7536%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.5036%" y="405" width="0.1604%" height="15" fill="rgb(208,21,44)" fg:x="954" fg:w="2"/><text x="76.7536%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="76.1026%" y="469" width="0.6415%" height="15" fill="rgb(236,125,4)" fg:x="949" fg:w="8"/><text x="76.3526%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.6640%" y="453" width="0.0802%" height="15" fill="rgb(226,134,25)" fg:x="956" fg:w="1"/><text x="76.9140%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.6640%" y="437" width="0.0802%" height="15" fill="rgb(250,201,12)" fg:x="956" fg:w="1"/><text x="76.9140%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.44%)</title><rect x="75.3809%" y="501" width="1.4435%" height="15" fill="rgb(225,92,18)" fg:x="940" fg:w="18"/><text x="75.6309%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="75.7819%" y="485" width="1.0425%" height="15" fill="rgb(227,35,22)" fg:x="945" fg:w="13"/><text x="76.0319%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.7442%" y="469" width="0.0802%" height="15" fill="rgb(214,180,52)" fg:x="957" fg:w="1"/><text x="76.9942%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.7442%" y="453" width="0.0802%" height="15" fill="rgb(233,55,38)" fg:x="957" fg:w="1"/><text x="76.9942%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.7442%" y="437" width="0.0802%" height="15" fill="rgb(249,171,43)" fg:x="957" fg:w="1"/><text x="76.9942%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.7442%" y="421" width="0.0802%" height="15" fill="rgb(239,87,2)" fg:x="957" fg:w="1"/><text x="76.9942%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="76.8244%" y="453" width="0.1604%" height="15" fill="rgb(248,141,5)" fg:x="958" fg:w="2"/><text x="77.0744%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="76.8244%" y="437" width="0.1604%" height="15" fill="rgb(238,33,42)" fg:x="958" fg:w="2"/><text x="77.0744%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.9848%" y="437" width="0.0802%" height="15" fill="rgb(231,57,19)" fg:x="960" fg:w="1"/><text x="77.2348%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2253%" y="421" width="0.0802%" height="15" fill="rgb(214,78,53)" fg:x="963" fg:w="1"/><text x="77.4753%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="76.8244%" y="501" width="0.5613%" height="15" fill="rgb(206,132,29)" fg:x="958" fg:w="7"/><text x="77.0744%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="76.8244%" y="485" width="0.5613%" height="15" fill="rgb(248,174,31)" fg:x="958" fg:w="7"/><text x="77.0744%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="76.8244%" y="469" width="0.5613%" height="15" fill="rgb(221,87,13)" fg:x="958" fg:w="7"/><text x="77.0744%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="76.9848%" y="453" width="0.4010%" height="15" fill="rgb(223,197,17)" fg:x="960" fg:w="5"/><text x="77.2348%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="77.0650%" y="437" width="0.3208%" height="15" fill="rgb(220,144,50)" fg:x="961" fg:w="4"/><text x="77.3150%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3055%" y="421" width="0.0802%" height="15" fill="rgb(244,201,11)" fg:x="964" fg:w="1"/><text x="77.5555%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.3857%" y="453" width="0.0802%" height="15" fill="rgb(249,81,34)" fg:x="965" fg:w="1"/><text x="77.6357%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.3857%" y="437" width="0.0802%" height="15" fill="rgb(205,161,12)" fg:x="965" fg:w="1"/><text x="77.6357%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="77.3857%" y="421" width="0.0802%" height="15" fill="rgb(252,139,50)" fg:x="965" fg:w="1"/><text x="77.6357%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="77.4659%" y="453" width="0.0802%" height="15" fill="rgb(205,169,14)" fg:x="966" fg:w="1"/><text x="77.7159%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="77.4659%" y="437" width="0.0802%" height="15" fill="rgb(248,198,33)" fg:x="966" fg:w="1"/><text x="77.7159%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5461%" y="421" width="0.0802%" height="15" fill="rgb(236,23,21)" fg:x="967" fg:w="1"/><text x="77.7961%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5461%" y="405" width="0.0802%" height="15" fill="rgb(231,13,38)" fg:x="967" fg:w="1"/><text x="77.7961%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5461%" y="389" width="0.0802%" height="15" fill="rgb(239,139,21)" fg:x="967" fg:w="1"/><text x="77.7961%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.6263%" y="389" width="0.0802%" height="15" fill="rgb(222,164,45)" fg:x="968" fg:w="1"/><text x="77.8763%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6263%" y="373" width="0.0802%" height="15" fill="rgb(230,52,27)" fg:x="968" fg:w="1"/><text x="77.8763%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7065%" y="341" width="0.0802%" height="15" fill="rgb(227,143,42)" fg:x="969" fg:w="1"/><text x="77.9565%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="77.5461%" y="453" width="0.3208%" height="15" fill="rgb(249,127,1)" fg:x="967" fg:w="4"/><text x="77.7961%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="77.5461%" y="437" width="0.3208%" height="15" fill="rgb(243,107,26)" fg:x="967" fg:w="4"/><text x="77.7961%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="77.6263%" y="421" width="0.2406%" height="15" fill="rgb(225,7,45)" fg:x="968" fg:w="3"/><text x="77.8763%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="77.6263%" y="405" width="0.2406%" height="15" fill="rgb(241,88,38)" fg:x="968" fg:w="3"/><text x="77.8763%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.7065%" y="389" width="0.1604%" height="15" fill="rgb(226,121,9)" fg:x="969" fg:w="2"/><text x="77.9565%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="77.7065%" y="373" width="0.1604%" height="15" fill="rgb(253,60,29)" fg:x="969" fg:w="2"/><text x="77.9565%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.7065%" y="357" width="0.1604%" height="15" fill="rgb(244,181,39)" fg:x="969" fg:w="2"/><text x="77.9565%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.7867%" y="341" width="0.0802%" height="15" fill="rgb(252,203,31)" fg:x="970" fg:w="1"/><text x="78.0367%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.8669%" y="421" width="0.0802%" height="15" fill="rgb(224,120,8)" fg:x="971" fg:w="1"/><text x="78.1169%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8669%" y="405" width="0.0802%" height="15" fill="rgb(205,171,54)" fg:x="971" fg:w="1"/><text x="78.1169%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8669%" y="389" width="0.0802%" height="15" fill="rgb(235,89,11)" fg:x="971" fg:w="1"/><text x="78.1169%" y="399.50"></text></g><g><title>kernel::compare::any_entity_changes (9 samples, 0.72%)</title><rect x="77.3857%" y="501" width="0.7217%" height="15" fill="rgb(212,180,28)" fg:x="965" fg:w="9"/><text x="77.6357%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="77.3857%" y="485" width="0.7217%" height="15" fill="rgb(247,84,49)" fg:x="965" fg:w="9"/><text x="77.6357%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="77.3857%" y="469" width="0.7217%" height="15" fill="rgb(236,187,52)" fg:x="965" fg:w="9"/><text x="77.6357%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="77.8669%" y="453" width="0.2406%" height="15" fill="rgb(227,24,15)" fg:x="971" fg:w="3"/><text x="78.1169%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="77.8669%" y="437" width="0.2406%" height="15" fill="rgb(227,211,13)" fg:x="971" fg:w="3"/><text x="78.1169%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="77.9471%" y="421" width="0.1604%" height="15" fill="rgb(245,52,14)" fg:x="972" fg:w="2"/><text x="78.1971%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0273%" y="405" width="0.0802%" height="15" fill="rgb(225,185,13)" fg:x="973" fg:w="1"/><text x="78.2773%" y="415.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (35 samples, 2.81%)</title><rect x="75.3809%" y="533" width="2.8067%" height="15" fill="rgb(217,160,29)" fg:x="940" fg:w="35"/><text x="75.6309%" y="543.50">en..</text></g><g><title>engine::session::Session::check_for_changes (35 samples, 2.81%)</title><rect x="75.3809%" y="517" width="2.8067%" height="15" fill="rgb(216,115,53)" fg:x="940" fg:w="35"/><text x="75.6309%" y="527.50">en..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="78.1075%" y="501" width="0.0802%" height="15" fill="rgb(236,99,5)" fg:x="974" fg:w="1"/><text x="78.3575%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1075%" y="485" width="0.0802%" height="15" fill="rgb(222,60,38)" fg:x="974" fg:w="1"/><text x="78.3575%" y="495.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="78.1877%" y="533" width="0.0802%" height="15" fill="rgb(212,82,22)" fg:x="975" fg:w="1"/><text x="78.4377%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="78.1877%" y="517" width="0.0802%" height="15" fill="rgb(214,48,28)" fg:x="975" fg:w="1"/><text x="78.4377%" y="527.50"></text></g><g><title>engine::session::Session::flush (42 samples, 3.37%)</title><rect x="74.9800%" y="565" width="3.3681%" height="15" fill="rgb(245,196,50)" fg:x="935" fg:w="42"/><text x="75.2300%" y="575.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (42 samples, 3.37%)</title><rect x="74.9800%" y="549" width="3.3681%" height="15" fill="rgb(225,159,46)" fg:x="935" fg:w="42"/><text x="75.2300%" y="559.50">eng..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="78.2678%" y="533" width="0.0802%" height="15" fill="rgb(207,195,48)" fg:x="976" fg:w="1"/><text x="78.5178%" y="543.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="78.2678%" y="517" width="0.0802%" height="15" fill="rgb(240,73,3)" fg:x="976" fg:w="1"/><text x="78.5178%" y="527.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="78.2678%" y="501" width="0.0802%" height="15" fill="rgb(245,57,23)" fg:x="976" fg:w="1"/><text x="78.5178%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="78.2678%" y="485" width="0.0802%" height="15" fill="rgb(240,75,18)" fg:x="976" fg:w="1"/><text x="78.5178%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="78.2678%" y="469" width="0.0802%" height="15" fill="rgb(238,168,12)" fg:x="976" fg:w="1"/><text x="78.5178%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="78.2678%" y="453" width="0.0802%" height="15" fill="rgb(226,20,40)" fg:x="976" fg:w="1"/><text x="78.5178%" y="463.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="78.2678%" y="437" width="0.0802%" height="15" fill="rgb(224,130,35)" fg:x="976" fg:w="1"/><text x="78.5178%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="78.4282%" y="533" width="0.0802%" height="15" fill="rgb(225,63,41)" fg:x="978" fg:w="1"/><text x="78.6782%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.4282%" y="517" width="0.0802%" height="15" fill="rgb(219,3,3)" fg:x="978" fg:w="1"/><text x="78.6782%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.4282%" y="501" width="0.0802%" height="15" fill="rgb(218,157,4)" fg:x="978" fg:w="1"/><text x="78.6782%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.4282%" y="485" width="0.0802%" height="15" fill="rgb(232,76,36)" fg:x="978" fg:w="1"/><text x="78.6782%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4282%" y="469" width="0.0802%" height="15" fill="rgb(247,36,0)" fg:x="978" fg:w="1"/><text x="78.6782%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4282%" y="453" width="0.0802%" height="15" fill="rgb(205,2,34)" fg:x="978" fg:w="1"/><text x="78.6782%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4282%" y="437" width="0.0802%" height="15" fill="rgb(239,136,13)" fg:x="978" fg:w="1"/><text x="78.6782%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.4282%" y="421" width="0.0802%" height="15" fill="rgb(253,122,12)" fg:x="978" fg:w="1"/><text x="78.6782%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4282%" y="405" width="0.0802%" height="15" fill="rgb(222,174,7)" fg:x="978" fg:w="1"/><text x="78.6782%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4282%" y="389" width="0.0802%" height="15" fill="rgb(208,191,42)" fg:x="978" fg:w="1"/><text x="78.6782%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4282%" y="373" width="0.0802%" height="15" fill="rgb(237,212,15)" fg:x="978" fg:w="1"/><text x="78.6782%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.4282%" y="357" width="0.0802%" height="15" fill="rgb(215,65,20)" fg:x="978" fg:w="1"/><text x="78.6782%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4282%" y="341" width="0.0802%" height="15" fill="rgb(232,103,11)" fg:x="978" fg:w="1"/><text x="78.6782%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4282%" y="325" width="0.0802%" height="15" fill="rgb(235,148,18)" fg:x="978" fg:w="1"/><text x="78.6782%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4282%" y="309" width="0.0802%" height="15" fill="rgb(240,173,7)" fg:x="978" fg:w="1"/><text x="78.6782%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4282%" y="293" width="0.0802%" height="15" fill="rgb(228,182,25)" fg:x="978" fg:w="1"/><text x="78.6782%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.4282%" y="277" width="0.0802%" height="15" fill="rgb(247,3,52)" fg:x="978" fg:w="1"/><text x="78.6782%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.4282%" y="261" width="0.0802%" height="15" fill="rgb(226,155,8)" fg:x="978" fg:w="1"/><text x="78.6782%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.4282%" y="245" width="0.0802%" height="15" fill="rgb(243,195,38)" fg:x="978" fg:w="1"/><text x="78.6782%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.4282%" y="229" width="0.0802%" height="15" fill="rgb(254,181,33)" fg:x="978" fg:w="1"/><text x="78.6782%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.4282%" y="213" width="0.0802%" height="15" fill="rgb(232,98,23)" fg:x="978" fg:w="1"/><text x="78.6782%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.4282%" y="197" width="0.0802%" height="15" fill="rgb(205,23,10)" fg:x="978" fg:w="1"/><text x="78.6782%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.4282%" y="181" width="0.0802%" height="15" fill="rgb(212,124,38)" fg:x="978" fg:w="1"/><text x="78.6782%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.4282%" y="165" width="0.0802%" height="15" fill="rgb(228,207,2)" fg:x="978" fg:w="1"/><text x="78.6782%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.4282%" y="149" width="0.0802%" height="15" fill="rgb(215,120,22)" fg:x="978" fg:w="1"/><text x="78.6782%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="78.4282%" y="133" width="0.0802%" height="15" fill="rgb(251,172,33)" fg:x="978" fg:w="1"/><text x="78.6782%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="78.4282%" y="117" width="0.0802%" height="15" fill="rgb(250,83,2)" fg:x="978" fg:w="1"/><text x="78.6782%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="78.4282%" y="101" width="0.0802%" height="15" fill="rgb(210,132,53)" fg:x="978" fg:w="1"/><text x="78.6782%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.4282%" y="85" width="0.0802%" height="15" fill="rgb(221,208,36)" fg:x="978" fg:w="1"/><text x="78.6782%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5084%" y="501" width="0.0802%" height="15" fill="rgb(205,192,46)" fg:x="979" fg:w="1"/><text x="78.7584%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5886%" y="453" width="0.0802%" height="15" fill="rgb(223,163,14)" fg:x="980" fg:w="1"/><text x="78.8386%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="78.3480%" y="549" width="1.0425%" height="15" fill="rgb(218,41,28)" fg:x="977" fg:w="13"/><text x="78.5980%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (11 samples, 0.88%)</title><rect x="78.5084%" y="533" width="0.8821%" height="15" fill="rgb(235,104,10)" fg:x="979" fg:w="11"/><text x="78.7584%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (11 samples, 0.88%)</title><rect x="78.5084%" y="517" width="0.8821%" height="15" fill="rgb(246,17,4)" fg:x="979" fg:w="11"/><text x="78.7584%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.80%)</title><rect x="78.5886%" y="501" width="0.8019%" height="15" fill="rgb(240,7,16)" fg:x="980" fg:w="10"/><text x="78.8386%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.80%)</title><rect x="78.5886%" y="485" width="0.8019%" height="15" fill="rgb(213,160,23)" fg:x="980" fg:w="10"/><text x="78.8386%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.80%)</title><rect x="78.5886%" y="469" width="0.8019%" height="15" fill="rgb(251,179,49)" fg:x="980" fg:w="10"/><text x="78.8386%" y="479.50"></text></g><g><title>__libc_malloc (9 samples, 0.72%)</title><rect x="78.6688%" y="453" width="0.7217%" height="15" fill="rgb(247,198,10)" fg:x="981" fg:w="9"/><text x="78.9188%" y="463.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.12%)</title><rect x="78.3480%" y="565" width="1.1227%" height="15" fill="rgb(220,65,29)" fg:x="977" fg:w="14"/><text x="78.5980%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="79.3905%" y="549" width="0.0802%" height="15" fill="rgb(237,171,28)" fg:x="990" fg:w="1"/><text x="79.6405%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="79.3905%" y="533" width="0.0802%" height="15" fill="rgb(228,44,26)" fg:x="990" fg:w="1"/><text x="79.6405%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.3905%" y="517" width="0.0802%" height="15" fill="rgb(216,210,27)" fg:x="990" fg:w="1"/><text x="79.6405%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.3905%" y="501" width="0.0802%" height="15" fill="rgb(252,10,17)" fg:x="990" fg:w="1"/><text x="79.6405%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.3905%" y="485" width="0.0802%" height="15" fill="rgb(214,172,30)" fg:x="990" fg:w="1"/><text x="79.6405%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.3905%" y="469" width="0.0802%" height="15" fill="rgb(253,130,48)" fg:x="990" fg:w="1"/><text x="79.6405%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.3905%" y="453" width="0.0802%" height="15" fill="rgb(226,99,43)" fg:x="990" fg:w="1"/><text x="79.6405%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.3905%" y="437" width="0.0802%" height="15" fill="rgb(239,111,26)" fg:x="990" fg:w="1"/><text x="79.6405%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.3905%" y="421" width="0.0802%" height="15" fill="rgb(240,27,53)" fg:x="990" fg:w="1"/><text x="79.6405%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.3905%" y="405" width="0.0802%" height="15" fill="rgb(254,163,12)" fg:x="990" fg:w="1"/><text x="79.6405%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.3905%" y="389" width="0.0802%" height="15" fill="rgb(225,51,48)" fg:x="990" fg:w="1"/><text x="79.6405%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.3905%" y="373" width="0.0802%" height="15" fill="rgb(205,19,32)" fg:x="990" fg:w="1"/><text x="79.6405%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.3905%" y="357" width="0.0802%" height="15" fill="rgb(218,119,26)" fg:x="990" fg:w="1"/><text x="79.6405%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.3905%" y="341" width="0.0802%" height="15" fill="rgb(231,173,33)" fg:x="990" fg:w="1"/><text x="79.6405%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="79.3905%" y="325" width="0.0802%" height="15" fill="rgb(241,100,29)" fg:x="990" fg:w="1"/><text x="79.6405%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.3905%" y="309" width="0.0802%" height="15" fill="rgb(250,194,34)" fg:x="990" fg:w="1"/><text x="79.6405%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="79.4707%" y="549" width="0.0802%" height="15" fill="rgb(215,23,50)" fg:x="991" fg:w="1"/><text x="79.7207%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="79.4707%" y="533" width="0.0802%" height="15" fill="rgb(206,49,37)" fg:x="991" fg:w="1"/><text x="79.7207%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="79.4707%" y="517" width="0.0802%" height="15" fill="rgb(247,39,21)" fg:x="991" fg:w="1"/><text x="79.7207%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="79.5509%" y="533" width="0.0802%" height="15" fill="rgb(209,220,15)" fg:x="992" fg:w="1"/><text x="79.8009%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5509%" y="517" width="0.0802%" height="15" fill="rgb(206,41,33)" fg:x="992" fg:w="1"/><text x="79.8009%" y="527.50"></text></g><g><title>plugins_core::build::Build::occupying (3 samples, 0.24%)</title><rect x="79.4707%" y="565" width="0.2406%" height="15" fill="rgb(221,225,45)" fg:x="991" fg:w="3"/><text x="79.7207%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (2 samples, 0.16%)</title><rect x="79.5509%" y="549" width="0.1604%" height="15" fill="rgb(216,27,18)" fg:x="992" fg:w="2"/><text x="79.8009%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="79.6311%" y="533" width="0.0802%" height="15" fill="rgb(250,193,34)" fg:x="993" fg:w="1"/><text x="79.8811%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="79.6311%" y="517" width="0.0802%" height="15" fill="rgb(227,215,20)" fg:x="993" fg:w="1"/><text x="79.8811%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6311%" y="501" width="0.0802%" height="15" fill="rgb(242,211,27)" fg:x="993" fg:w="1"/><text x="79.8811%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="79.6311%" y="485" width="0.0802%" height="15" fill="rgb(229,190,30)" fg:x="993" fg:w="1"/><text x="79.8811%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="79.6311%" y="469" width="0.0802%" height="15" fill="rgb(253,31,29)" fg:x="993" fg:w="1"/><text x="79.8811%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (62 samples, 4.97%)</title><rect x="74.8196%" y="581" width="4.9719%" height="15" fill="rgb(229,177,52)" fg:x="933" fg:w="62"/><text x="75.0696%" y="591.50">plugin..</text></g><g><title>plugins_core::build::Build::with_username (1 samples, 0.08%)</title><rect x="79.7113%" y="565" width="0.0802%" height="15" fill="rgb(226,88,8)" fg:x="994" fg:w="1"/><text x="79.9613%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="79.7113%" y="549" width="0.0802%" height="15" fill="rgb(214,55,27)" fg:x="994" fg:w="1"/><text x="79.9613%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="79.7113%" y="533" width="0.0802%" height="15" fill="rgb(233,202,5)" fg:x="994" fg:w="1"/><text x="79.9613%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.7113%" y="517" width="0.0802%" height="15" fill="rgb(251,49,30)" fg:x="994" fg:w="1"/><text x="79.9613%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.7113%" y="501" width="0.0802%" height="15" fill="rgb(235,18,52)" fg:x="994" fg:w="1"/><text x="79.9613%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.7113%" y="485" width="0.0802%" height="15" fill="rgb(250,111,51)" fg:x="994" fg:w="1"/><text x="79.9613%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.7113%" y="469" width="0.0802%" height="15" fill="rgb(218,13,25)" fg:x="994" fg:w="1"/><text x="79.9613%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.7113%" y="453" width="0.0802%" height="15" fill="rgb(248,96,7)" fg:x="994" fg:w="1"/><text x="79.9613%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.7113%" y="437" width="0.0802%" height="15" fill="rgb(217,31,15)" fg:x="994" fg:w="1"/><text x="79.9613%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.7113%" y="421" width="0.0802%" height="15" fill="rgb(228,59,49)" fg:x="994" fg:w="1"/><text x="79.9613%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.7113%" y="405" width="0.0802%" height="15" fill="rgb(210,152,38)" fg:x="994" fg:w="1"/><text x="79.9613%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.7113%" y="389" width="0.0802%" height="15" fill="rgb(206,71,11)" fg:x="994" fg:w="1"/><text x="79.9613%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.7113%" y="373" width="0.0802%" height="15" fill="rgb(244,199,5)" fg:x="994" fg:w="1"/><text x="79.9613%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.7113%" y="357" width="0.0802%" height="15" fill="rgb(253,49,1)" fg:x="994" fg:w="1"/><text x="79.9613%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.7113%" y="341" width="0.0802%" height="15" fill="rgb(225,206,40)" fg:x="994" fg:w="1"/><text x="79.9613%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7113%" y="325" width="0.0802%" height="15" fill="rgb(243,116,47)" fg:x="994" fg:w="1"/><text x="79.9613%" y="335.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (99 samples, 7.94%)</title><rect x="71.9326%" y="597" width="7.9391%" height="15" fill="rgb(219,225,16)" fg:x="897" fg:w="99"/><text x="72.1826%" y="607.50">&lt;tests::Hol..</text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="79.7915%" y="581" width="0.0802%" height="15" fill="rgb(233,29,47)" fg:x="995" fg:w="1"/><text x="80.0415%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="79.7915%" y="565" width="0.0802%" height="15" fill="rgb(250,179,18)" fg:x="995" fg:w="1"/><text x="80.0415%" y="575.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="79.7915%" y="549" width="0.0802%" height="15" fill="rgb(215,176,6)" fg:x="995" fg:w="1"/><text x="80.0415%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="79.7915%" y="533" width="0.0802%" height="15" fill="rgb(214,117,39)" fg:x="995" fg:w="1"/><text x="80.0415%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="79.7915%" y="517" width="0.0802%" height="15" fill="rgb(247,183,36)" fg:x="995" fg:w="1"/><text x="80.0415%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.7915%" y="501" width="0.0802%" height="15" fill="rgb(237,200,3)" fg:x="995" fg:w="1"/><text x="80.0415%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.7915%" y="485" width="0.0802%" height="15" fill="rgb(212,220,24)" fg:x="995" fg:w="1"/><text x="80.0415%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.7915%" y="469" width="0.0802%" height="15" fill="rgb(245,216,20)" fg:x="995" fg:w="1"/><text x="80.0415%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.7915%" y="453" width="0.0802%" height="15" fill="rgb(219,124,7)" fg:x="995" fg:w="1"/><text x="80.0415%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.7915%" y="437" width="0.0802%" height="15" fill="rgb(227,167,8)" fg:x="995" fg:w="1"/><text x="80.0415%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="79.7915%" y="421" width="0.0802%" height="15" fill="rgb(241,37,2)" fg:x="995" fg:w="1"/><text x="80.0415%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="79.7915%" y="405" width="0.0802%" height="15" fill="rgb(238,134,33)" fg:x="995" fg:w="1"/><text x="80.0415%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="79.7915%" y="389" width="0.0802%" height="15" fill="rgb(248,48,27)" fg:x="995" fg:w="1"/><text x="80.0415%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="79.7915%" y="373" width="0.0802%" height="15" fill="rgb(212,14,16)" fg:x="995" fg:w="1"/><text x="80.0415%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.8717%" y="565" width="0.0802%" height="15" fill="rgb(217,205,37)" fg:x="996" fg:w="1"/><text x="80.1217%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.0321%" y="549" width="0.1604%" height="15" fill="rgb(233,185,47)" fg:x="998" fg:w="2"/><text x="80.2821%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="80.1123%" y="533" width="0.0802%" height="15" fill="rgb(244,88,8)" fg:x="999" fg:w="1"/><text x="80.3623%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="80.1123%" y="517" width="0.0802%" height="15" fill="rgb(213,0,20)" fg:x="999" fg:w="1"/><text x="80.3623%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="79.9519%" y="565" width="0.3208%" height="15" fill="rgb(238,159,36)" fg:x="997" fg:w="4"/><text x="80.2019%" y="575.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="80.1925%" y="549" width="0.0802%" height="15" fill="rgb(253,173,17)" fg:x="1000" fg:w="1"/><text x="80.4425%" y="559.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="80.2727%" y="565" width="0.0802%" height="15" fill="rgb(221,23,28)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="80.2727%" y="549" width="0.0802%" height="15" fill="rgb(218,113,15)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="80.2727%" y="533" width="0.0802%" height="15" fill="rgb(233,58,3)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.2727%" y="517" width="0.0802%" height="15" fill="rgb(250,46,35)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2727%" y="501" width="0.0802%" height="15" fill="rgb(210,169,11)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="80.3528%" y="549" width="0.0802%" height="15" fill="rgb(246,88,19)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.3528%" y="533" width="0.0802%" height="15" fill="rgb(206,81,49)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.3528%" y="517" width="0.0802%" height="15" fill="rgb(232,144,18)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="80.4330%" y="501" width="0.3208%" height="15" fill="rgb(235,2,27)" fg:x="1003" fg:w="4"/><text x="80.6830%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="80.4330%" y="485" width="0.3208%" height="15" fill="rgb(239,157,39)" fg:x="1003" fg:w="4"/><text x="80.6830%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="80.4330%" y="469" width="0.3208%" height="15" fill="rgb(220,11,17)" fg:x="1003" fg:w="4"/><text x="80.6830%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="80.4330%" y="453" width="0.3208%" height="15" fill="rgb(243,94,50)" fg:x="1003" fg:w="4"/><text x="80.6830%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.6736%" y="437" width="0.0802%" height="15" fill="rgb(218,22,0)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.7538%" y="485" width="0.0802%" height="15" fill="rgb(249,70,21)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.8340%" y="485" width="0.0802%" height="15" fill="rgb(245,111,46)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8340%" y="469" width="0.0802%" height="15" fill="rgb(244,183,12)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.8340%" y="453" width="0.0802%" height="15" fill="rgb(207,117,0)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8340%" y="437" width="0.0802%" height="15" fill="rgb(206,20,43)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8340%" y="421" width="0.0802%" height="15" fill="rgb(221,104,11)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8340%" y="405" width="0.0802%" height="15" fill="rgb(254,36,50)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.9142%" y="469" width="0.1604%" height="15" fill="rgb(252,17,15)" fg:x="1009" fg:w="2"/><text x="81.1642%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9944%" y="453" width="0.0802%" height="15" fill="rgb(219,129,43)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9944%" y="437" width="0.0802%" height="15" fill="rgb(205,34,45)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.9944%" y="421" width="0.0802%" height="15" fill="rgb(251,201,32)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.0746%" y="469" width="0.1604%" height="15" fill="rgb(205,56,0)" fg:x="1011" fg:w="2"/><text x="81.3246%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.1548%" y="453" width="0.0802%" height="15" fill="rgb(211,193,27)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="80.9142%" y="485" width="0.5613%" height="15" fill="rgb(231,100,42)" fg:x="1009" fg:w="7"/><text x="81.1642%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="81.2350%" y="469" width="0.2406%" height="15" fill="rgb(245,85,27)" fg:x="1013" fg:w="3"/><text x="81.4850%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.3152%" y="453" width="0.1604%" height="15" fill="rgb(241,76,24)" fg:x="1014" fg:w="2"/><text x="81.5652%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="81.3152%" y="437" width="0.1604%" height="15" fill="rgb(249,157,15)" fg:x="1014" fg:w="2"/><text x="81.5652%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="80.7538%" y="501" width="0.8019%" height="15" fill="rgb(222,218,25)" fg:x="1007" fg:w="10"/><text x="81.0038%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4755%" y="485" width="0.0802%" height="15" fill="rgb(252,156,52)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="80.4330%" y="533" width="1.2831%" height="15" fill="rgb(211,185,7)" fg:x="1003" fg:w="16"/><text x="80.6830%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="80.4330%" y="517" width="1.2831%" height="15" fill="rgb(234,108,24)" fg:x="1003" fg:w="16"/><text x="80.6830%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.5557%" y="501" width="0.1604%" height="15" fill="rgb(227,218,2)" fg:x="1017" fg:w="2"/><text x="81.8057%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.5557%" y="485" width="0.1604%" height="15" fill="rgb(224,0,36)" fg:x="1017" fg:w="2"/><text x="81.8057%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="81.5557%" y="469" width="0.1604%" height="15" fill="rgb(233,201,10)" fg:x="1017" fg:w="2"/><text x="81.8057%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.6359%" y="453" width="0.0802%" height="15" fill="rgb(252,209,14)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.6359%" y="437" width="0.0802%" height="15" fill="rgb(205,93,49)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.7161%" y="501" width="0.0802%" height="15" fill="rgb(234,116,45)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.8765%" y="485" width="0.0802%" height="15" fill="rgb(248,89,35)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.0369%" y="469" width="0.0802%" height="15" fill="rgb(233,167,45)" fg:x="1023" fg:w="1"/><text x="82.2869%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.7161%" y="533" width="0.5613%" height="15" fill="rgb(248,228,14)" fg:x="1019" fg:w="7"/><text x="81.9661%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="81.7161%" y="517" width="0.5613%" height="15" fill="rgb(246,91,14)" fg:x="1019" fg:w="7"/><text x="81.9661%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="81.7963%" y="501" width="0.4812%" height="15" fill="rgb(227,142,5)" fg:x="1020" fg:w="6"/><text x="82.0463%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="81.9567%" y="485" width="0.3208%" height="15" fill="rgb(221,63,33)" fg:x="1022" fg:w="4"/><text x="82.2067%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.1171%" y="469" width="0.1604%" height="15" fill="rgb(233,49,0)" fg:x="1024" fg:w="2"/><text x="82.3671%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="82.1973%" y="453" width="0.0802%" height="15" fill="rgb(251,115,38)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.1973%" y="437" width="0.0802%" height="15" fill="rgb(231,214,32)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1973%" y="421" width="0.0802%" height="15" fill="rgb(248,73,46)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3577%" y="517" width="0.0802%" height="15" fill="rgb(237,156,4)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="82.4379%" y="485" width="0.1604%" height="15" fill="rgb(227,132,2)" fg:x="1028" fg:w="2"/><text x="82.6879%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5982%" y="469" width="0.0802%" height="15" fill="rgb(248,161,9)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6784%" y="469" width="0.0802%" height="15" fill="rgb(238,77,38)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6784%" y="453" width="0.0802%" height="15" fill="rgb(222,166,40)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="82.7586%" y="453" width="0.1604%" height="15" fill="rgb(214,168,45)" fg:x="1032" fg:w="2"/><text x="83.0086%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.8388%" y="437" width="0.0802%" height="15" fill="rgb(226,64,37)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.9190%" y="437" width="0.0802%" height="15" fill="rgb(232,210,43)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="82.4379%" y="517" width="0.7217%" height="15" fill="rgb(214,76,33)" fg:x="1028" fg:w="9"/><text x="82.6879%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="82.4379%" y="501" width="0.7217%" height="15" fill="rgb(210,78,5)" fg:x="1028" fg:w="9"/><text x="82.6879%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="82.5982%" y="485" width="0.5613%" height="15" fill="rgb(211,107,37)" fg:x="1030" fg:w="7"/><text x="82.8482%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="82.7586%" y="469" width="0.4010%" height="15" fill="rgb(249,67,16)" fg:x="1032" fg:w="5"/><text x="83.0086%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.9190%" y="453" width="0.2406%" height="15" fill="rgb(222,114,31)" fg:x="1034" fg:w="3"/><text x="83.1690%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.9992%" y="437" width="0.1604%" height="15" fill="rgb(242,118,19)" fg:x="1035" fg:w="2"/><text x="83.2492%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.0794%" y="421" width="0.0802%" height="15" fill="rgb(223,115,1)" fg:x="1036" fg:w="1"/><text x="83.3294%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0794%" y="405" width="0.0802%" height="15" fill="rgb(241,182,54)" fg:x="1036" fg:w="1"/><text x="83.3294%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1596%" y="485" width="0.0802%" height="15" fill="rgb(244,166,36)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1596%" y="469" width="0.0802%" height="15" fill="rgb(241,52,43)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="83.2398%" y="485" width="0.1604%" height="15" fill="rgb(236,82,9)" fg:x="1038" fg:w="2"/><text x="83.4898%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.2398%" y="469" width="0.1604%" height="15" fill="rgb(241,119,0)" fg:x="1038" fg:w="2"/><text x="83.4898%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3200%" y="453" width="0.0802%" height="15" fill="rgb(221,19,22)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3200%" y="437" width="0.0802%" height="15" fill="rgb(254,144,35)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3200%" y="421" width="0.0802%" height="15" fill="rgb(246,132,30)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4002%" y="453" width="0.0802%" height="15" fill="rgb(234,69,28)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4002%" y="437" width="0.0802%" height="15" fill="rgb(219,106,47)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="83.5605%" y="437" width="0.3208%" height="15" fill="rgb(218,79,24)" fg:x="1042" fg:w="4"/><text x="83.8105%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="83.6407%" y="421" width="0.2406%" height="15" fill="rgb(225,26,21)" fg:x="1043" fg:w="3"/><text x="83.8907%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="83.6407%" y="405" width="0.2406%" height="15" fill="rgb(217,68,49)" fg:x="1043" fg:w="3"/><text x="83.8907%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8813%" y="405" width="0.0802%" height="15" fill="rgb(220,204,28)" fg:x="1046" fg:w="1"/><text x="84.1313%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.8813%" y="421" width="0.1604%" height="15" fill="rgb(237,208,43)" fg:x="1046" fg:w="2"/><text x="84.1313%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9615%" y="405" width="0.0802%" height="15" fill="rgb(213,97,42)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9615%" y="389" width="0.0802%" height="15" fill="rgb(238,96,52)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (10 samples, 0.80%)</title><rect x="83.4002%" y="485" width="0.8019%" height="15" fill="rgb(228,14,13)" fg:x="1040" fg:w="10"/><text x="83.6502%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.80%)</title><rect x="83.4002%" y="469" width="0.8019%" height="15" fill="rgb(219,123,13)" fg:x="1040" fg:w="10"/><text x="83.6502%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="83.4804%" y="453" width="0.7217%" height="15" fill="rgb(216,144,17)" fg:x="1041" fg:w="9"/><text x="83.7304%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="83.8813%" y="437" width="0.3208%" height="15" fill="rgb(230,228,29)" fg:x="1046" fg:w="4"/><text x="84.1313%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.0417%" y="421" width="0.1604%" height="15" fill="rgb(233,18,5)" fg:x="1048" fg:w="2"/><text x="84.2917%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="84.0417%" y="405" width="0.1604%" height="15" fill="rgb(233,197,12)" fg:x="1048" fg:w="2"/><text x="84.2917%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.0417%" y="389" width="0.1604%" height="15" fill="rgb(234,140,29)" fg:x="1048" fg:w="2"/><text x="84.2917%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1219%" y="373" width="0.0802%" height="15" fill="rgb(233,113,19)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1219%" y="357" width="0.0802%" height="15" fill="rgb(246,209,13)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="84.1219%" y="341" width="0.0802%" height="15" fill="rgb(242,79,54)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.1219%" y="325" width="0.0802%" height="15" fill="rgb(219,73,16)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2021%" y="437" width="0.0802%" height="15" fill="rgb(224,52,10)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2021%" y="421" width="0.0802%" height="15" fill="rgb(237,179,5)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.2823%" y="437" width="0.0802%" height="15" fill="rgb(231,20,6)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2823%" y="421" width="0.0802%" height="15" fill="rgb(253,171,45)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.2823%" y="405" width="0.0802%" height="15" fill="rgb(230,75,49)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2823%" y="389" width="0.0802%" height="15" fill="rgb(216,83,46)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2823%" y="373" width="0.0802%" height="15" fill="rgb(236,56,9)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2823%" y="357" width="0.0802%" height="15" fill="rgb(215,28,34)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="83.1596%" y="517" width="1.2831%" height="15" fill="rgb(230,222,20)" fg:x="1037" fg:w="16"/><text x="83.4096%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="83.1596%" y="501" width="1.2831%" height="15" fill="rgb(235,209,51)" fg:x="1037" fg:w="16"/><text x="83.4096%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="84.2021%" y="485" width="0.2406%" height="15" fill="rgb(235,167,1)" fg:x="1050" fg:w="3"/><text x="84.4521%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="84.2021%" y="469" width="0.2406%" height="15" fill="rgb(248,220,0)" fg:x="1050" fg:w="3"/><text x="84.4521%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="84.2021%" y="453" width="0.2406%" height="15" fill="rgb(239,0,18)" fg:x="1050" fg:w="3"/><text x="84.4521%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3625%" y="437" width="0.0802%" height="15" fill="rgb(229,179,11)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.0842%" y="341" width="0.0802%" height="15" fill="rgb(226,116,53)" fg:x="1061" fg:w="1"/><text x="85.3342%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="84.9238%" y="389" width="0.3208%" height="15" fill="rgb(218,1,49)" fg:x="1059" fg:w="4"/><text x="85.1738%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="84.9238%" y="373" width="0.3208%" height="15" fill="rgb(208,184,47)" fg:x="1059" fg:w="4"/><text x="85.1738%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="85.0842%" y="357" width="0.1604%" height="15" fill="rgb(238,174,3)" fg:x="1061" fg:w="2"/><text x="85.3342%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1644%" y="341" width="0.0802%" height="15" fill="rgb(247,188,6)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.2446%" y="389" width="0.0802%" height="15" fill="rgb(211,165,46)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2446%" y="373" width="0.0802%" height="15" fill="rgb(222,190,10)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="84.7634%" y="421" width="0.6415%" height="15" fill="rgb(206,185,3)" fg:x="1057" fg:w="8"/><text x="85.0134%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="84.8436%" y="405" width="0.5613%" height="15" fill="rgb(244,125,37)" fg:x="1058" fg:w="7"/><text x="85.0936%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3248%" y="389" width="0.0802%" height="15" fill="rgb(211,43,7)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3248%" y="373" width="0.0802%" height="15" fill="rgb(250,41,42)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3248%" y="357" width="0.0802%" height="15" fill="rgb(254,54,42)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="84.5229%" y="453" width="1.0425%" height="15" fill="rgb(213,71,43)" fg:x="1054" fg:w="13"/><text x="84.7729%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="84.6832%" y="437" width="0.8821%" height="15" fill="rgb(249,3,44)" fg:x="1056" fg:w="11"/><text x="84.9332%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.4050%" y="421" width="0.1604%" height="15" fill="rgb(229,80,41)" fg:x="1065" fg:w="2"/><text x="85.6550%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4852%" y="405" width="0.0802%" height="15" fill="rgb(231,25,28)" fg:x="1066" fg:w="1"/><text x="85.7352%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="85.5654%" y="453" width="0.1604%" height="15" fill="rgb(208,79,48)" fg:x="1067" fg:w="2"/><text x="85.8154%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="85.5654%" y="437" width="0.1604%" height="15" fill="rgb(207,196,38)" fg:x="1067" fg:w="2"/><text x="85.8154%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (17 samples, 1.36%)</title><rect x="84.4427%" y="517" width="1.3633%" height="15" fill="rgb(228,105,49)" fg:x="1053" fg:w="17"/><text x="84.6927%" y="527.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 1.36%)</title><rect x="84.4427%" y="501" width="1.3633%" height="15" fill="rgb(237,99,15)" fg:x="1053" fg:w="17"/><text x="84.6927%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.36%)</title><rect x="84.4427%" y="485" width="1.3633%" height="15" fill="rgb(224,207,46)" fg:x="1053" fg:w="17"/><text x="84.6927%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="84.4427%" y="469" width="1.3633%" height="15" fill="rgb(249,117,50)" fg:x="1053" fg:w="17"/><text x="84.6927%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7257%" y="453" width="0.0802%" height="15" fill="rgb(248,17,13)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7257%" y="437" width="0.0802%" height="15" fill="rgb(228,187,36)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.7257%" y="421" width="0.0802%" height="15" fill="rgb(234,132,20)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="85.8059%" y="501" width="0.3208%" height="15" fill="rgb(209,170,46)" fg:x="1070" fg:w="4"/><text x="86.0559%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="85.8059%" y="485" width="0.3208%" height="15" fill="rgb(237,23,19)" fg:x="1070" fg:w="4"/><text x="86.0559%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.0465%" y="469" width="0.0802%" height="15" fill="rgb(227,21,26)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.0465%" y="453" width="0.0802%" height="15" fill="rgb(222,220,48)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="463.50"></text></g><g><title>engine::session::Session::close (79 samples, 6.34%)</title><rect x="79.8717%" y="597" width="6.3352%" height="15" fill="rgb(214,9,16)" fg:x="996" fg:w="79"/><text x="80.1217%" y="607.50">engine::..</text></g><g><title>engine::session::Session::save_entity_changes (79 samples, 6.34%)</title><rect x="79.8717%" y="581" width="6.3352%" height="15" fill="rgb(209,73,30)" fg:x="996" fg:w="79"/><text x="80.1217%" y="591.50">engine::..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (73 samples, 5.85%)</title><rect x="80.3528%" y="565" width="5.8540%" height="15" fill="rgb(207,20,33)" fg:x="1002" fg:w="73"/><text x="80.6028%" y="575.50">engine:..</text></g><g><title>engine::session::Session::check_for_changes (72 samples, 5.77%)</title><rect x="80.4330%" y="549" width="5.7739%" height="15" fill="rgb(219,153,12)" fg:x="1003" fg:w="72"/><text x="80.6830%" y="559.50">engine:..</text></g><g><title>kernel::compare::any_entity_changes (49 samples, 3.93%)</title><rect x="82.2775%" y="533" width="3.9294%" height="15" fill="rgb(235,97,25)" fg:x="1026" fg:w="49"/><text x="82.5275%" y="543.50">kern..</text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="85.8059%" y="517" width="0.4010%" height="15" fill="rgb(244,30,34)" fg:x="1070" fg:w="5"/><text x="86.0559%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.1267%" y="501" width="0.0802%" height="15" fill="rgb(214,106,45)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.3673%" y="501" width="0.0802%" height="15" fill="rgb(226,41,9)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="86.3673%" y="485" width="0.0802%" height="15" fill="rgb(253,139,29)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="86.3673%" y="469" width="0.0802%" height="15" fill="rgb(213,205,39)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.3673%" y="453" width="0.0802%" height="15" fill="rgb(209,27,10)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.3673%" y="437" width="0.0802%" height="15" fill="rgb(249,142,16)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="447.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="86.3673%" y="421" width="0.0802%" height="15" fill="rgb(242,65,12)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.3673%" y="405" width="0.0802%" height="15" fill="rgb(232,48,10)" fg:x="1077" fg:w="1"/><text x="86.6173%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="86.2871%" y="565" width="0.2406%" height="15" fill="rgb(253,67,19)" fg:x="1076" fg:w="3"/><text x="86.5371%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="86.3673%" y="549" width="0.1604%" height="15" fill="rgb(227,93,29)" fg:x="1077" fg:w="2"/><text x="86.6173%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="86.3673%" y="533" width="0.1604%" height="15" fill="rgb(226,189,53)" fg:x="1077" fg:w="2"/><text x="86.6173%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="86.3673%" y="517" width="0.1604%" height="15" fill="rgb(223,224,1)" fg:x="1077" fg:w="2"/><text x="86.6173%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.08%)</title><rect x="86.4475%" y="501" width="0.0802%" height="15" fill="rgb(221,84,32)" fg:x="1078" fg:w="1"/><text x="86.6975%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="86.5277%" y="517" width="0.0802%" height="15" fill="rgb(214,189,28)" fg:x="1079" fg:w="1"/><text x="86.7777%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6881%" y="437" width="0.0802%" height="15" fill="rgb(234,7,52)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.7682%" y="437" width="0.0802%" height="15" fill="rgb(249,73,31)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7682%" y="421" width="0.0802%" height="15" fill="rgb(253,153,41)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.7682%" y="405" width="0.0802%" height="15" fill="rgb(249,52,34)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7682%" y="389" width="0.0802%" height="15" fill="rgb(236,177,47)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.7682%" y="373" width="0.0802%" height="15" fill="rgb(252,185,45)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="86.7682%" y="357" width="0.0802%" height="15" fill="rgb(251,15,30)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="86.7682%" y="341" width="0.0802%" height="15" fill="rgb(233,31,4)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7682%" y="325" width="0.0802%" height="15" fill="rgb(254,44,24)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.7682%" y="309" width="0.0802%" height="15" fill="rgb(218,54,1)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="86.6079%" y="501" width="0.3208%" height="15" fill="rgb(243,209,39)" fg:x="1080" fg:w="4"/><text x="86.8579%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="86.6079%" y="485" width="0.3208%" height="15" fill="rgb(206,75,33)" fg:x="1080" fg:w="4"/><text x="86.8579%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="86.6079%" y="469" width="0.3208%" height="15" fill="rgb(223,108,18)" fg:x="1080" fg:w="4"/><text x="86.8579%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="86.6079%" y="453" width="0.3208%" height="15" fill="rgb(244,89,31)" fg:x="1080" fg:w="4"/><text x="86.8579%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.8484%" y="437" width="0.0802%" height="15" fill="rgb(222,167,27)" fg:x="1083" fg:w="1"/><text x="87.0984%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8484%" y="421" width="0.0802%" height="15" fill="rgb(247,41,16)" fg:x="1083" fg:w="1"/><text x="87.0984%" y="431.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.48%)</title><rect x="86.5277%" y="533" width="0.4812%" height="15" fill="rgb(233,168,40)" fg:x="1079" fg:w="6"/><text x="86.7777%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.40%)</title><rect x="86.6079%" y="517" width="0.4010%" height="15" fill="rgb(205,211,8)" fg:x="1080" fg:w="5"/><text x="86.8579%" y="527.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="86.9286%" y="501" width="0.0802%" height="15" fill="rgb(238,105,11)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.9286%" y="485" width="0.0802%" height="15" fill="rgb(223,142,52)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.9286%" y="469" width="0.0802%" height="15" fill="rgb(238,51,33)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9286%" y="453" width="0.0802%" height="15" fill="rgb(231,188,43)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9286%" y="437" width="0.0802%" height="15" fill="rgb(216,92,17)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="86.9286%" y="421" width="0.0802%" height="15" fill="rgb(228,2,40)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.56%)</title><rect x="86.5277%" y="549" width="0.5613%" height="15" fill="rgb(226,73,15)" fg:x="1079" fg:w="7"/><text x="86.7777%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.0088%" y="533" width="0.0802%" height="15" fill="rgb(227,66,46)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.0088%" y="517" width="0.0802%" height="15" fill="rgb(209,71,6)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.0088%" y="501" width="0.0802%" height="15" fill="rgb(246,100,25)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.0088%" y="485" width="0.0802%" height="15" fill="rgb(248,185,27)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.0088%" y="469" width="0.0802%" height="15" fill="rgb(225,118,47)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.0088%" y="453" width="0.0802%" height="15" fill="rgb(220,185,44)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.0088%" y="437" width="0.0802%" height="15" fill="rgb(227,95,24)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.0088%" y="421" width="0.0802%" height="15" fill="rgb(252,84,24)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.0088%" y="405" width="0.0802%" height="15" fill="rgb(240,34,44)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.0088%" y="389" width="0.0802%" height="15" fill="rgb(209,72,54)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.0088%" y="373" width="0.0802%" height="15" fill="rgb(226,19,45)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.0088%" y="357" width="0.0802%" height="15" fill="rgb(246,7,45)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.0088%" y="341" width="0.0802%" height="15" fill="rgb(225,45,2)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.0088%" y="325" width="0.0802%" height="15" fill="rgb(221,80,29)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.0088%" y="309" width="0.0802%" height="15" fill="rgb(228,11,19)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.0088%" y="293" width="0.0802%" height="15" fill="rgb(243,17,21)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.0088%" y="277" width="0.0802%" height="15" fill="rgb(243,88,8)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="87.0088%" y="261" width="0.0802%" height="15" fill="rgb(214,17,9)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.0088%" y="245" width="0.0802%" height="15" fill="rgb(232,169,15)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0088%" y="229" width="0.0802%" height="15" fill="rgb(232,86,53)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="239.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="87.0890%" y="549" width="0.0802%" height="15" fill="rgb(222,100,4)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="87.0890%" y="533" width="0.0802%" height="15" fill="rgb(253,151,38)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0890%" y="517" width="0.0802%" height="15" fill="rgb(238,215,29)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="527.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (9 samples, 0.72%)</title><rect x="86.5277%" y="565" width="0.7217%" height="15" fill="rgb(205,128,53)" fg:x="1079" fg:w="9"/><text x="86.7777%" y="575.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="87.1692%" y="549" width="0.0802%" height="15" fill="rgb(248,183,14)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="87.1692%" y="533" width="0.0802%" height="15" fill="rgb(244,172,35)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.1692%" y="517" width="0.0802%" height="15" fill="rgb(234,93,19)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1692%" y="501" width="0.0802%" height="15" fill="rgb(227,109,7)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1692%" y="485" width="0.0802%" height="15" fill="rgb(233,136,54)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (2 samples, 0.16%)</title><rect x="87.3296%" y="549" width="0.1604%" height="15" fill="rgb(233,19,40)" fg:x="1089" fg:w="2"/><text x="87.5796%" y="559.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="87.3296%" y="533" width="0.1604%" height="15" fill="rgb(247,41,18)" fg:x="1089" fg:w="2"/><text x="87.5796%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.3296%" y="517" width="0.1604%" height="15" fill="rgb(220,34,34)" fg:x="1089" fg:w="2"/><text x="87.5796%" y="527.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="87.4900%" y="517" width="0.0802%" height="15" fill="rgb(222,135,32)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.4900%" y="501" width="0.0802%" height="15" fill="rgb(214,80,19)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="87.4900%" y="485" width="0.0802%" height="15" fill="rgb(234,54,46)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="495.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="87.4900%" y="469" width="0.0802%" height="15" fill="rgb(251,48,23)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5702%" y="469" width="0.0802%" height="15" fill="rgb(254,109,52)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="479.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="87.6504%" y="373" width="0.0802%" height="15" fill="rgb(240,186,19)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.7306%" y="373" width="0.0802%" height="15" fill="rgb(246,187,17)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7306%" y="357" width="0.0802%" height="15" fill="rgb(212,21,5)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.7306%" y="341" width="0.0802%" height="15" fill="rgb(225,185,18)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.7306%" y="325" width="0.0802%" height="15" fill="rgb(245,114,17)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.7306%" y="309" width="0.0802%" height="15" fill="rgb(223,164,24)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="87.7306%" y="293" width="0.0802%" height="15" fill="rgb(211,228,3)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="87.7306%" y="277" width="0.0802%" height="15" fill="rgb(223,16,38)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="87.6504%" y="437" width="0.2406%" height="15" fill="rgb(207,31,54)" fg:x="1093" fg:w="3"/><text x="87.9004%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="87.6504%" y="421" width="0.2406%" height="15" fill="rgb(220,39,11)" fg:x="1093" fg:w="3"/><text x="87.9004%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="87.6504%" y="405" width="0.2406%" height="15" fill="rgb(235,185,0)" fg:x="1093" fg:w="3"/><text x="87.9004%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="87.6504%" y="389" width="0.2406%" height="15" fill="rgb(249,39,18)" fg:x="1093" fg:w="3"/><text x="87.9004%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.8107%" y="373" width="0.0802%" height="15" fill="rgb(240,110,33)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.8107%" y="357" width="0.0802%" height="15" fill="rgb(210,92,42)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.8107%" y="341" width="0.0802%" height="15" fill="rgb(218,215,28)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8107%" y="325" width="0.0802%" height="15" fill="rgb(238,215,36)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.8909%" y="389" width="0.0802%" height="15" fill="rgb(220,31,10)" fg:x="1096" fg:w="1"/><text x="88.1409%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.8909%" y="373" width="0.0802%" height="15" fill="rgb(212,93,14)" fg:x="1096" fg:w="1"/><text x="88.1409%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9711%" y="389" width="0.0802%" height="15" fill="rgb(254,207,2)" fg:x="1097" fg:w="1"/><text x="88.2211%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0513%" y="357" width="0.0802%" height="15" fill="rgb(205,57,44)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0513%" y="341" width="0.0802%" height="15" fill="rgb(226,151,19)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.1315%" y="325" width="0.0802%" height="15" fill="rgb(230,72,30)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2117%" y="277" width="0.0802%" height="15" fill="rgb(244,0,8)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2117%" y="261" width="0.0802%" height="15" fill="rgb(230,192,6)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2117%" y="245" width="0.0802%" height="15" fill="rgb(233,207,13)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="255.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (11 samples, 0.88%)</title><rect x="87.4900%" y="533" width="0.8821%" height="15" fill="rgb(206,227,7)" fg:x="1091" fg:w="11"/><text x="87.7400%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.80%)</title><rect x="87.5702%" y="517" width="0.8019%" height="15" fill="rgb(213,217,25)" fg:x="1092" fg:w="10"/><text x="87.8202%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 0.80%)</title><rect x="87.5702%" y="501" width="0.8019%" height="15" fill="rgb(249,75,4)" fg:x="1092" fg:w="10"/><text x="87.8202%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.80%)</title><rect x="87.5702%" y="485" width="0.8019%" height="15" fill="rgb(225,114,18)" fg:x="1092" fg:w="10"/><text x="87.8202%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (9 samples, 0.72%)</title><rect x="87.6504%" y="469" width="0.7217%" height="15" fill="rgb(211,162,40)" fg:x="1093" fg:w="9"/><text x="87.9004%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity (9 samples, 0.72%)</title><rect x="87.6504%" y="453" width="0.7217%" height="15" fill="rgb(206,49,29)" fg:x="1093" fg:w="9"/><text x="87.9004%" y="463.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="87.8909%" y="437" width="0.4812%" height="15" fill="rgb(244,8,6)" fg:x="1096" fg:w="6"/><text x="88.1409%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="87.8909%" y="421" width="0.4812%" height="15" fill="rgb(231,194,28)" fg:x="1096" fg:w="6"/><text x="88.1409%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="87.8909%" y="405" width="0.4812%" height="15" fill="rgb(210,69,5)" fg:x="1096" fg:w="6"/><text x="88.1409%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="88.0513%" y="389" width="0.3208%" height="15" fill="rgb(216,186,12)" fg:x="1098" fg:w="4"/><text x="88.3013%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="88.0513%" y="373" width="0.3208%" height="15" fill="rgb(238,61,15)" fg:x="1098" fg:w="4"/><text x="88.3013%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.1315%" y="357" width="0.2406%" height="15" fill="rgb(226,104,1)" fg:x="1099" fg:w="3"/><text x="88.3815%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.1315%" y="341" width="0.2406%" height="15" fill="rgb(229,128,15)" fg:x="1099" fg:w="3"/><text x="88.3815%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.2117%" y="325" width="0.1604%" height="15" fill="rgb(247,110,15)" fg:x="1100" fg:w="2"/><text x="88.4617%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.2117%" y="309" width="0.1604%" height="15" fill="rgb(210,74,48)" fg:x="1100" fg:w="2"/><text x="88.4617%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.2117%" y="293" width="0.1604%" height="15" fill="rgb(246,121,10)" fg:x="1100" fg:w="2"/><text x="88.4617%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2919%" y="277" width="0.0802%" height="15" fill="rgb(214,156,37)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="287.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="88.2919%" y="261" width="0.0802%" height="15" fill="rgb(214,210,34)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="271.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (12 samples, 0.96%)</title><rect x="87.4900%" y="549" width="0.9623%" height="15" fill="rgb(237,93,35)" fg:x="1091" fg:w="12"/><text x="87.7400%" y="559.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="88.3721%" y="533" width="0.0802%" height="15" fill="rgb(206,36,8)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="88.3721%" y="517" width="0.0802%" height="15" fill="rgb(208,151,12)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.3721%" y="501" width="0.0802%" height="15" fill="rgb(225,133,52)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.3721%" y="485" width="0.0802%" height="15" fill="rgb(231,71,53)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="469" width="0.0802%" height="15" fill="rgb(243,76,21)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3721%" y="453" width="0.0802%" height="15" fill="rgb(252,144,3)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="437" width="0.0802%" height="15" fill="rgb(231,199,10)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="421" width="0.0802%" height="15" fill="rgb(215,18,11)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.3721%" y="405" width="0.0802%" height="15" fill="rgb(241,65,24)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3721%" y="389" width="0.0802%" height="15" fill="rgb(251,192,38)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.3721%" y="373" width="0.0802%" height="15" fill="rgb(205,9,35)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="89.0938%" y="453" width="0.3208%" height="15" fill="rgb(229,225,49)" fg:x="1111" fg:w="4"/><text x="89.3438%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.2542%" y="437" width="0.1604%" height="15" fill="rgb(207,125,39)" fg:x="1113" fg:w="2"/><text x="89.5042%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4146%" y="453" width="0.0802%" height="15" fill="rgb(222,78,19)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="89.0136%" y="469" width="0.6415%" height="15" fill="rgb(248,207,20)" fg:x="1110" fg:w="8"/><text x="89.2636%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="89.4948%" y="453" width="0.1604%" height="15" fill="rgb(205,103,49)" fg:x="1116" fg:w="2"/><text x="89.7448%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5750%" y="437" width="0.0802%" height="15" fill="rgb(216,42,28)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="88.6127%" y="485" width="1.1227%" height="15" fill="rgb(213,205,53)" fg:x="1105" fg:w="14"/><text x="88.8627%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6552%" y="469" width="0.0802%" height="15" fill="rgb(239,140,53)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="479.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="89.7354%" y="485" width="0.4010%" height="15" fill="rgb(248,95,9)" fg:x="1119" fg:w="5"/><text x="89.9854%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.76%)</title><rect x="88.4523%" y="501" width="1.7642%" height="15" fill="rgb(254,58,47)" fg:x="1103" fg:w="22"/><text x="88.7023%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="90.1363%" y="485" width="0.0802%" height="15" fill="rgb(234,227,14)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (24 samples, 1.92%)</title><rect x="88.4523%" y="517" width="1.9246%" height="15" fill="rgb(205,192,45)" fg:x="1103" fg:w="24"/><text x="88.7023%" y="527.50">c..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.2165%" y="501" width="0.1604%" height="15" fill="rgb(253,187,31)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="90.3769%" y="485" width="0.1604%" height="15" fill="rgb(222,6,32)" fg:x="1127" fg:w="2"/><text x="90.6269%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.3769%" y="469" width="0.1604%" height="15" fill="rgb(249,190,19)" fg:x="1127" fg:w="2"/><text x="90.6269%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="90.5373%" y="485" width="0.0802%" height="15" fill="rgb(251,28,20)" fg:x="1129" fg:w="1"/><text x="90.7873%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="90.5373%" y="469" width="0.0802%" height="15" fill="rgb(210,223,40)" fg:x="1129" fg:w="1"/><text x="90.7873%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.5373%" y="453" width="0.0802%" height="15" fill="rgb(216,137,22)" fg:x="1129" fg:w="1"/><text x="90.7873%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="90.6977%" y="405" width="0.1604%" height="15" fill="rgb(247,39,34)" fg:x="1131" fg:w="2"/><text x="90.9477%" y="415.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="90.6977%" y="389" width="0.1604%" height="15" fill="rgb(239,43,50)" fg:x="1131" fg:w="2"/><text x="90.9477%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="90.6977%" y="373" width="0.1604%" height="15" fill="rgb(241,212,9)" fg:x="1131" fg:w="2"/><text x="90.9477%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8581%" y="373" width="0.0802%" height="15" fill="rgb(205,8,2)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.9383%" y="357" width="0.0802%" height="15" fill="rgb(217,173,54)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="367.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="91.0184%" y="309" width="0.0802%" height="15" fill="rgb(208,149,52)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0184%" y="293" width="0.0802%" height="15" fill="rgb(239,99,40)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0184%" y="277" width="0.0802%" height="15" fill="rgb(233,214,26)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.0986%" y="229" width="0.0802%" height="15" fill="rgb(231,225,37)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0986%" y="213" width="0.0802%" height="15" fill="rgb(252,55,35)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="223.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="91.0986%" y="197" width="0.0802%" height="15" fill="rgb(239,43,18)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="207.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="91.0986%" y="293" width="0.1604%" height="15" fill="rgb(251,125,49)" fg:x="1136" fg:w="2"/><text x="91.3486%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="91.0986%" y="277" width="0.1604%" height="15" fill="rgb(212,83,54)" fg:x="1136" fg:w="2"/><text x="91.3486%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.0986%" y="261" width="0.1604%" height="15" fill="rgb(250,75,6)" fg:x="1136" fg:w="2"/><text x="91.3486%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.0986%" y="245" width="0.1604%" height="15" fill="rgb(252,36,40)" fg:x="1136" fg:w="2"/><text x="91.3486%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.1788%" y="229" width="0.0802%" height="15" fill="rgb(230,91,51)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.1788%" y="213" width="0.0802%" height="15" fill="rgb(212,92,28)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.1788%" y="197" width="0.0802%" height="15" fill="rgb(227,13,22)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.1788%" y="181" width="0.0802%" height="15" fill="rgb(239,204,32)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1788%" y="165" width="0.0802%" height="15" fill="rgb(228,49,41)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="91.2590%" y="245" width="0.1604%" height="15" fill="rgb(206,95,6)" fg:x="1138" fg:w="2"/><text x="91.5090%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.3392%" y="229" width="0.0802%" height="15" fill="rgb(251,20,14)" fg:x="1139" fg:w="1"/><text x="91.5892%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="91.0184%" y="341" width="0.5613%" height="15" fill="rgb(214,99,28)" fg:x="1135" fg:w="7"/><text x="91.2684%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (7 samples, 0.56%)</title><rect x="91.0184%" y="325" width="0.5613%" height="15" fill="rgb(239,122,54)" fg:x="1135" fg:w="7"/><text x="91.2684%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="91.0986%" y="309" width="0.4812%" height="15" fill="rgb(218,217,46)" fg:x="1136" fg:w="6"/><text x="91.3486%" y="319.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="91.2590%" y="293" width="0.3208%" height="15" fill="rgb(249,106,28)" fg:x="1138" fg:w="4"/><text x="91.5090%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="91.2590%" y="277" width="0.3208%" height="15" fill="rgb(250,158,18)" fg:x="1138" fg:w="4"/><text x="91.5090%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="91.2590%" y="261" width="0.3208%" height="15" fill="rgb(226,137,29)" fg:x="1138" fg:w="4"/><text x="91.5090%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.4194%" y="245" width="0.1604%" height="15" fill="rgb(210,188,1)" fg:x="1140" fg:w="2"/><text x="91.6694%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.96%)</title><rect x="90.6977%" y="421" width="0.9623%" height="15" fill="rgb(227,84,42)" fg:x="1131" fg:w="12"/><text x="90.9477%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="90.8581%" y="405" width="0.8019%" height="15" fill="rgb(222,147,48)" fg:x="1133" fg:w="10"/><text x="91.1081%" y="415.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (10 samples, 0.80%)</title><rect x="90.8581%" y="389" width="0.8019%" height="15" fill="rgb(241,150,43)" fg:x="1133" fg:w="10"/><text x="91.1081%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (9 samples, 0.72%)</title><rect x="90.9383%" y="373" width="0.7217%" height="15" fill="rgb(206,139,52)" fg:x="1134" fg:w="9"/><text x="91.1883%" y="383.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.64%)</title><rect x="91.0184%" y="357" width="0.6415%" height="15" fill="rgb(230,63,14)" fg:x="1135" fg:w="8"/><text x="91.2684%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="91.5798%" y="341" width="0.0802%" height="15" fill="rgb(247,8,20)" fg:x="1142" fg:w="1"/><text x="91.8298%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="91.5798%" y="325" width="0.0802%" height="15" fill="rgb(213,115,4)" fg:x="1142" fg:w="1"/><text x="91.8298%" y="335.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (14 samples, 1.12%)</title><rect x="90.6977%" y="437" width="1.1227%" height="15" fill="rgb(241,79,49)" fg:x="1131" fg:w="14"/><text x="90.9477%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="91.6600%" y="421" width="0.1604%" height="15" fill="rgb(222,42,35)" fg:x="1143" fg:w="2"/><text x="91.9100%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="91.7402%" y="405" width="0.0802%" height="15" fill="rgb(247,59,23)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.7402%" y="389" width="0.0802%" height="15" fill="rgb(247,93,18)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7402%" y="373" width="0.0802%" height="15" fill="rgb(249,107,47)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.7402%" y="357" width="0.0802%" height="15" fill="rgb(219,27,1)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.7402%" y="341" width="0.0802%" height="15" fill="rgb(217,82,32)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.7402%" y="325" width="0.0802%" height="15" fill="rgb(250,129,47)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.7402%" y="309" width="0.0802%" height="15" fill="rgb(253,88,35)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7402%" y="293" width="0.0802%" height="15" fill="rgb(245,221,14)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7402%" y="277" width="0.0802%" height="15" fill="rgb(217,119,54)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9006%" y="373" width="0.0802%" height="15" fill="rgb(247,128,31)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9006%" y="357" width="0.0802%" height="15" fill="rgb(211,99,22)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.9006%" y="341" width="0.0802%" height="15" fill="rgb(212,20,17)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.9006%" y="325" width="0.0802%" height="15" fill="rgb(209,159,29)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.9006%" y="309" width="0.0802%" height="15" fill="rgb(222,177,53)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9006%" y="293" width="0.0802%" height="15" fill="rgb(234,46,43)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9006%" y="277" width="0.0802%" height="15" fill="rgb(208,108,14)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.9006%" y="261" width="0.0802%" height="15" fill="rgb(226,78,53)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.9006%" y="245" width="0.0802%" height="15" fill="rgb(230,20,41)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.9006%" y="229" width="0.0802%" height="15" fill="rgb(213,195,35)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.9006%" y="213" width="0.0802%" height="15" fill="rgb(242,62,36)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="223.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="91.9006%" y="197" width="0.0802%" height="15" fill="rgb(222,210,37)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.9006%" y="389" width="0.1604%" height="15" fill="rgb(232,107,19)" fg:x="1146" fg:w="2"/><text x="92.1506%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9808%" y="373" width="0.0802%" height="15" fill="rgb(235,85,17)" fg:x="1147" fg:w="1"/><text x="92.2308%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9808%" y="357" width="0.0802%" height="15" fill="rgb(219,195,31)" fg:x="1147" fg:w="1"/><text x="92.2308%" y="367.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="92.0609%" y="309" width="0.0802%" height="15" fill="rgb(231,183,30)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0609%" y="293" width="0.0802%" height="15" fill="rgb(212,0,11)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2213%" y="197" width="0.0802%" height="15" fill="rgb(249,53,54)" fg:x="1150" fg:w="1"/><text x="92.4713%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2213%" y="181" width="0.0802%" height="15" fill="rgb(211,118,13)" fg:x="1150" fg:w="1"/><text x="92.4713%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="92.3015%" y="117" width="0.0802%" height="15" fill="rgb(237,42,9)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3015%" y="101" width="0.0802%" height="15" fill="rgb(227,68,32)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.3015%" y="149" width="0.1604%" height="15" fill="rgb(238,10,7)" fg:x="1151" fg:w="2"/><text x="92.5515%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.3015%" y="133" width="0.1604%" height="15" fill="rgb(224,42,12)" fg:x="1151" fg:w="2"/><text x="92.5515%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3817%" y="117" width="0.0802%" height="15" fill="rgb(252,190,5)" fg:x="1152" fg:w="1"/><text x="92.6317%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3817%" y="101" width="0.0802%" height="15" fill="rgb(220,214,39)" fg:x="1152" fg:w="1"/><text x="92.6317%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3817%" y="85" width="0.0802%" height="15" fill="rgb(247,98,4)" fg:x="1152" fg:w="1"/><text x="92.6317%" y="95.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="92.2213%" y="229" width="0.4010%" height="15" fill="rgb(211,60,12)" fg:x="1150" fg:w="5"/><text x="92.4713%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="92.2213%" y="213" width="0.4010%" height="15" fill="rgb(224,42,10)" fg:x="1150" fg:w="5"/><text x="92.4713%" y="223.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.3015%" y="197" width="0.3208%" height="15" fill="rgb(217,167,4)" fg:x="1151" fg:w="4"/><text x="92.5515%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="92.3015%" y="181" width="0.3208%" height="15" fill="rgb(253,18,17)" fg:x="1151" fg:w="4"/><text x="92.5515%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.3015%" y="165" width="0.3208%" height="15" fill="rgb(249,186,44)" fg:x="1151" fg:w="4"/><text x="92.5515%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="92.4619%" y="149" width="0.1604%" height="15" fill="rgb(254,124,54)" fg:x="1153" fg:w="2"/><text x="92.7119%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.4619%" y="133" width="0.1604%" height="15" fill="rgb(220,124,39)" fg:x="1153" fg:w="2"/><text x="92.7119%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.4619%" y="117" width="0.1604%" height="15" fill="rgb(225,96,46)" fg:x="1153" fg:w="2"/><text x="92.7119%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.4619%" y="101" width="0.1604%" height="15" fill="rgb(221,106,12)" fg:x="1153" fg:w="2"/><text x="92.7119%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="92.4619%" y="85" width="0.1604%" height="15" fill="rgb(227,133,23)" fg:x="1153" fg:w="2"/><text x="92.7119%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="92.5421%" y="69" width="0.0802%" height="15" fill="rgb(216,44,52)" fg:x="1154" fg:w="1"/><text x="92.7921%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5421%" y="53" width="0.0802%" height="15" fill="rgb(239,149,7)" fg:x="1154" fg:w="1"/><text x="92.7921%" y="63.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.56%)</title><rect x="92.1411%" y="293" width="0.5613%" height="15" fill="rgb(211,157,31)" fg:x="1149" fg:w="7"/><text x="92.3911%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.56%)</title><rect x="92.1411%" y="277" width="0.5613%" height="15" fill="rgb(206,215,22)" fg:x="1149" fg:w="7"/><text x="92.3911%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="92.1411%" y="261" width="0.5613%" height="15" fill="rgb(208,113,15)" fg:x="1149" fg:w="7"/><text x="92.3911%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="92.1411%" y="245" width="0.5613%" height="15" fill="rgb(207,189,15)" fg:x="1149" fg:w="7"/><text x="92.3911%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.6223%" y="229" width="0.0802%" height="15" fill="rgb(231,115,4)" fg:x="1155" fg:w="1"/><text x="92.8723%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6223%" y="213" width="0.0802%" height="15" fill="rgb(253,117,2)" fg:x="1155" fg:w="1"/><text x="92.8723%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.6223%" y="197" width="0.0802%" height="15" fill="rgb(248,48,24)" fg:x="1155" fg:w="1"/><text x="92.8723%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6223%" y="181" width="0.0802%" height="15" fill="rgb(241,28,46)" fg:x="1155" fg:w="1"/><text x="92.8723%" y="191.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="92.6223%" y="165" width="0.0802%" height="15" fill="rgb(216,165,52)" fg:x="1155" fg:w="1"/><text x="92.8723%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7025%" y="245" width="0.0802%" height="15" fill="rgb(220,222,34)" fg:x="1156" fg:w="1"/><text x="92.9525%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.7827%" y="197" width="0.0802%" height="15" fill="rgb(247,222,49)" fg:x="1157" fg:w="1"/><text x="93.0327%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="92.7827%" y="213" width="0.1604%" height="15" fill="rgb(240,10,31)" fg:x="1157" fg:w="2"/><text x="93.0327%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8629%" y="197" width="0.0802%" height="15" fill="rgb(221,199,35)" fg:x="1158" fg:w="1"/><text x="93.1129%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.9431%" y="181" width="0.0802%" height="15" fill="rgb(230,223,11)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9431%" y="165" width="0.0802%" height="15" fill="rgb(218,82,45)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.1034%" y="149" width="0.0802%" height="15" fill="rgb(233,213,33)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="159.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (16 samples, 1.28%)</title><rect x="92.0609%" y="389" width="1.2831%" height="15" fill="rgb(210,143,52)" fg:x="1148" fg:w="16"/><text x="92.3109%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 1.28%)</title><rect x="92.0609%" y="373" width="1.2831%" height="15" fill="rgb(206,95,4)" fg:x="1148" fg:w="16"/><text x="92.3109%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="92.0609%" y="357" width="1.2831%" height="15" fill="rgb(246,164,46)" fg:x="1148" fg:w="16"/><text x="92.3109%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.28%)</title><rect x="92.0609%" y="341" width="1.2831%" height="15" fill="rgb(213,210,47)" fg:x="1148" fg:w="16"/><text x="92.3109%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (16 samples, 1.28%)</title><rect x="92.0609%" y="325" width="1.2831%" height="15" fill="rgb(210,12,38)" fg:x="1148" fg:w="16"/><text x="92.3109%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity (15 samples, 1.20%)</title><rect x="92.1411%" y="309" width="1.2029%" height="15" fill="rgb(252,192,54)" fg:x="1149" fg:w="15"/><text x="92.3911%" y="319.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="92.7025%" y="293" width="0.6415%" height="15" fill="rgb(242,92,6)" fg:x="1156" fg:w="8"/><text x="92.9525%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="92.7025%" y="277" width="0.6415%" height="15" fill="rgb(253,154,15)" fg:x="1156" fg:w="8"/><text x="92.9525%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="92.7025%" y="261" width="0.6415%" height="15" fill="rgb(209,20,43)" fg:x="1156" fg:w="8"/><text x="92.9525%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="92.7827%" y="245" width="0.5613%" height="15" fill="rgb(232,28,49)" fg:x="1157" fg:w="7"/><text x="93.0327%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="92.7827%" y="229" width="0.5613%" height="15" fill="rgb(248,131,53)" fg:x="1157" fg:w="7"/><text x="93.0327%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="92.9431%" y="213" width="0.4010%" height="15" fill="rgb(214,16,30)" fg:x="1159" fg:w="5"/><text x="93.1931%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="92.9431%" y="197" width="0.4010%" height="15" fill="rgb(245,16,0)" fg:x="1159" fg:w="5"/><text x="93.1931%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="93.0233%" y="181" width="0.3208%" height="15" fill="rgb(245,17,35)" fg:x="1160" fg:w="4"/><text x="93.2733%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="93.0233%" y="165" width="0.3208%" height="15" fill="rgb(249,27,53)" fg:x="1160" fg:w="4"/><text x="93.2733%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.1836%" y="149" width="0.1604%" height="15" fill="rgb(214,73,24)" fg:x="1162" fg:w="2"/><text x="93.4336%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.2638%" y="133" width="0.0802%" height="15" fill="rgb(223,84,37)" fg:x="1163" fg:w="1"/><text x="93.5138%" y="143.50"></text></g><g><title>plugins_core::tools::get_contained_keys (21 samples, 1.68%)</title><rect x="91.8204%" y="437" width="1.6840%" height="15" fill="rgb(210,109,28)" fg:x="1145" fg:w="21"/><text x="92.0704%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (21 samples, 1.68%)</title><rect x="91.8204%" y="421" width="1.6840%" height="15" fill="rgb(208,186,6)" fg:x="1145" fg:w="21"/><text x="92.0704%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (21 samples, 1.68%)</title><rect x="91.8204%" y="405" width="1.6840%" height="15" fill="rgb(235,201,30)" fg:x="1145" fg:w="21"/><text x="92.0704%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.3440%" y="389" width="0.1604%" height="15" fill="rgb(216,198,48)" fg:x="1164" fg:w="2"/><text x="93.5940%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.3440%" y="373" width="0.1604%" height="15" fill="rgb(254,186,25)" fg:x="1164" fg:w="2"/><text x="93.5940%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="93.3440%" y="357" width="0.1604%" height="15" fill="rgb(227,87,5)" fg:x="1164" fg:w="2"/><text x="93.5940%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="93.3440%" y="341" width="0.1604%" height="15" fill="rgb(236,205,25)" fg:x="1164" fg:w="2"/><text x="93.5940%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="93.3440%" y="325" width="0.1604%" height="15" fill="rgb(229,99,32)" fg:x="1164" fg:w="2"/><text x="93.5940%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.3440%" y="309" width="0.1604%" height="15" fill="rgb(231,177,31)" fg:x="1164" fg:w="2"/><text x="93.5940%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.3440%" y="293" width="0.1604%" height="15" fill="rgb(246,15,2)" fg:x="1164" fg:w="2"/><text x="93.5940%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5044%" y="389" width="0.0802%" height="15" fill="rgb(207,39,15)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 3.05%)</title><rect x="90.6175%" y="469" width="3.0473%" height="15" fill="rgb(207,44,9)" fg:x="1130" fg:w="38"/><text x="90.8675%" y="479.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 3.05%)</title><rect x="90.6175%" y="453" width="3.0473%" height="15" fill="rgb(225,224,33)" fg:x="1130" fg:w="38"/><text x="90.8675%" y="463.50">&lt;co..</text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="93.5044%" y="437" width="0.1604%" height="15" fill="rgb(252,151,3)" fg:x="1166" fg:w="2"/><text x="93.7544%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="93.5044%" y="421" width="0.1604%" height="15" fill="rgb(211,140,13)" fg:x="1166" fg:w="2"/><text x="93.7544%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="93.5044%" y="405" width="0.1604%" height="15" fill="rgb(239,225,17)" fg:x="1166" fg:w="2"/><text x="93.7544%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5846%" y="389" width="0.0802%" height="15" fill="rgb(223,170,52)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5846%" y="373" width="0.0802%" height="15" fill="rgb(212,64,21)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.5846%" y="357" width="0.0802%" height="15" fill="rgb(236,126,48)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.5846%" y="341" width="0.0802%" height="15" fill="rgb(209,135,11)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.5846%" y="325" width="0.0802%" height="15" fill="rgb(228,126,40)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5846%" y="309" width="0.0802%" height="15" fill="rgb(205,196,36)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5846%" y="293" width="0.0802%" height="15" fill="rgb(243,160,33)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="93.5846%" y="277" width="0.0802%" height="15" fill="rgb(210,84,20)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7450%" y="421" width="0.0802%" height="15" fill="rgb(228,213,30)" fg:x="1169" fg:w="1"/><text x="93.9950%" y="431.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.24%)</title><rect x="93.8252%" y="405" width="0.2406%" height="15" fill="rgb(252,33,45)" fg:x="1170" fg:w="3"/><text x="94.0752%" y="415.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="93.8252%" y="389" width="0.2406%" height="15" fill="rgb(254,227,20)" fg:x="1170" fg:w="3"/><text x="94.0752%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.9054%" y="373" width="0.1604%" height="15" fill="rgb(228,192,2)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.9054%" y="357" width="0.1604%" height="15" fill="rgb(233,32,8)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.9054%" y="341" width="0.1604%" height="15" fill="rgb(220,146,47)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="93.9054%" y="325" width="0.1604%" height="15" fill="rgb(246,194,1)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="93.9054%" y="309" width="0.1604%" height="15" fill="rgb(218,203,9)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="93.9054%" y="293" width="0.1604%" height="15" fill="rgb(237,97,14)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.9054%" y="277" width="0.1604%" height="15" fill="rgb(239,76,15)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.9054%" y="261" width="0.1604%" height="15" fill="rgb(222,53,45)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="93.9054%" y="245" width="0.1604%" height="15" fill="rgb(237,88,5)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="93.9054%" y="229" width="0.1604%" height="15" fill="rgb(218,223,35)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="93.9054%" y="213" width="0.1604%" height="15" fill="rgb(243,229,38)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="93.9054%" y="197" width="0.1604%" height="15" fill="rgb(240,75,41)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.9054%" y="181" width="0.1604%" height="15" fill="rgb(209,110,37)" fg:x="1171" fg:w="2"/><text x="94.1554%" y="191.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="94.0658%" y="405" width="0.1604%" height="15" fill="rgb(221,130,46)" fg:x="1173" fg:w="2"/><text x="94.3158%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1460%" y="389" width="0.0802%" height="15" fill="rgb(237,160,20)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1460%" y="373" width="0.0802%" height="15" fill="rgb(234,126,24)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.1460%" y="357" width="0.0802%" height="15" fill="rgb(207,177,9)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.1460%" y="341" width="0.0802%" height="15" fill="rgb(231,191,33)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.1460%" y="325" width="0.0802%" height="15" fill="rgb(207,42,1)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.1460%" y="309" width="0.0802%" height="15" fill="rgb(218,34,50)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.1460%" y="293" width="0.0802%" height="15" fill="rgb(254,126,39)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.1460%" y="277" width="0.0802%" height="15" fill="rgb(251,17,26)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.1460%" y="261" width="0.0802%" height="15" fill="rgb(252,215,34)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.1460%" y="245" width="0.0802%" height="15" fill="rgb(217,120,44)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.1460%" y="229" width="0.0802%" height="15" fill="rgb(211,31,11)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1460%" y="213" width="0.0802%" height="15" fill="rgb(222,69,51)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.56%)</title><rect x="93.8252%" y="421" width="0.5613%" height="15" fill="rgb(215,229,42)" fg:x="1170" fg:w="7"/><text x="94.0752%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="94.2261%" y="405" width="0.1604%" height="15" fill="rgb(212,102,15)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="94.2261%" y="389" width="0.1604%" height="15" fill="rgb(205,179,41)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="94.2261%" y="373" width="0.1604%" height="15" fill="rgb(219,148,46)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="94.2261%" y="357" width="0.1604%" height="15" fill="rgb(243,40,19)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="94.2261%" y="341" width="0.1604%" height="15" fill="rgb(208,206,34)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="94.2261%" y="325" width="0.1604%" height="15" fill="rgb(244,184,38)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="94.2261%" y="309" width="0.1604%" height="15" fill="rgb(244,151,47)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="94.2261%" y="293" width="0.1604%" height="15" fill="rgb(236,134,42)" fg:x="1175" fg:w="2"/><text x="94.4761%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.3063%" y="277" width="0.0802%" height="15" fill="rgb(233,93,22)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="287.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="94.3063%" y="261" width="0.0802%" height="15" fill="rgb(211,202,10)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="94.3063%" y="245" width="0.0802%" height="15" fill="rgb(240,63,8)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="255.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.3063%" y="229" width="0.0802%" height="15" fill="rgb(214,9,4)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.3063%" y="213" width="0.0802%" height="15" fill="rgb(243,66,45)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.3063%" y="197" width="0.0802%" height="15" fill="rgb(220,50,42)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.3063%" y="181" width="0.0802%" height="15" fill="rgb(220,134,27)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="94.3063%" y="165" width="0.0802%" height="15" fill="rgb(246,151,50)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="94.3063%" y="149" width="0.0802%" height="15" fill="rgb(238,216,27)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="94.3063%" y="133" width="0.0802%" height="15" fill="rgb(250,92,11)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="94.3063%" y="117" width="0.0802%" height="15" fill="rgb(248,183,6)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.3063%" y="101" width="0.0802%" height="15" fill="rgb(211,204,50)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="111.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.3488%" y="165" width="0.0802%" height="15" fill="rgb(252,55,47)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.3488%" y="149" width="0.0802%" height="15" fill="rgb(240,198,32)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="95.3488%" y="213" width="0.1604%" height="15" fill="rgb(224,203,19)" fg:x="1189" fg:w="2"/><text x="95.5988%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="95.3488%" y="197" width="0.1604%" height="15" fill="rgb(205,27,16)" fg:x="1189" fg:w="2"/><text x="95.5988%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="95.3488%" y="181" width="0.1604%" height="15" fill="rgb(224,226,17)" fg:x="1189" fg:w="2"/><text x="95.5988%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4290%" y="165" width="0.0802%" height="15" fill="rgb(205,216,54)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.4290%" y="149" width="0.0802%" height="15" fill="rgb(248,168,46)" fg:x="1190" fg:w="1"/><text x="95.6790%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.5092%" y="213" width="0.0802%" height="15" fill="rgb(226,111,45)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="95.1083%" y="229" width="0.6415%" height="15" fill="rgb(231,15,9)" fg:x="1186" fg:w="8"/><text x="95.3583%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.5894%" y="213" width="0.1604%" height="15" fill="rgb(243,168,3)" fg:x="1192" fg:w="2"/><text x="95.8394%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="95.5894%" y="197" width="0.1604%" height="15" fill="rgb(221,220,54)" fg:x="1192" fg:w="2"/><text x="95.8394%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="95.1083%" y="245" width="0.8019%" height="15" fill="rgb(232,174,38)" fg:x="1186" fg:w="10"/><text x="95.3583%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="95.7498%" y="229" width="0.1604%" height="15" fill="rgb(205,14,38)" fg:x="1194" fg:w="2"/><text x="95.9998%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.7498%" y="213" width="0.1604%" height="15" fill="rgb(234,89,19)" fg:x="1194" fg:w="2"/><text x="95.9998%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.96%)</title><rect x="95.0281%" y="261" width="0.9623%" height="15" fill="rgb(216,68,51)" fg:x="1185" fg:w="12"/><text x="95.2781%" y="271.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.9102%" y="245" width="0.0802%" height="15" fill="rgb(213,49,2)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.9102%" y="229" width="0.0802%" height="15" fill="rgb(242,146,30)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.20%)</title><rect x="94.8677%" y="277" width="1.2029%" height="15" fill="rgb(224,188,11)" fg:x="1183" fg:w="15"/><text x="95.1177%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.9904%" y="261" width="0.0802%" height="15" fill="rgb(213,159,11)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9904%" y="245" width="0.0802%" height="15" fill="rgb(229,13,31)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (16 samples, 1.28%)</title><rect x="94.8677%" y="309" width="1.2831%" height="15" fill="rgb(209,103,11)" fg:x="1183" fg:w="16"/><text x="95.1177%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="94.8677%" y="293" width="1.2831%" height="15" fill="rgb(206,3,4)" fg:x="1183" fg:w="16"/><text x="95.1177%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.0706%" y="277" width="0.0802%" height="15" fill="rgb(252,10,49)" fg:x="1198" fg:w="1"/><text x="96.3206%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0706%" y="261" width="0.0802%" height="15" fill="rgb(217,160,32)" fg:x="1198" fg:w="1"/><text x="96.3206%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.1508%" y="309" width="0.0802%" height="15" fill="rgb(249,196,0)" fg:x="1199" fg:w="1"/><text x="96.4008%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.1508%" y="293" width="0.0802%" height="15" fill="rgb(213,17,48)" fg:x="1199" fg:w="1"/><text x="96.4008%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.52%)</title><rect x="94.7875%" y="325" width="1.5237%" height="15" fill="rgb(206,42,46)" fg:x="1182" fg:w="19"/><text x="95.0375%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.2310%" y="309" width="0.0802%" height="15" fill="rgb(212,105,24)" fg:x="1200" fg:w="1"/><text x="96.4810%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.2310%" y="293" width="0.0802%" height="15" fill="rgb(243,216,30)" fg:x="1200" fg:w="1"/><text x="96.4810%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (24 samples, 1.92%)</title><rect x="94.6271%" y="357" width="1.9246%" height="15" fill="rgb(207,121,3)" fg:x="1180" fg:w="24"/><text x="94.8771%" y="367.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (23 samples, 1.84%)</title><rect x="94.7073%" y="341" width="1.8444%" height="15" fill="rgb(249,78,0)" fg:x="1181" fg:w="23"/><text x="94.9573%" y="351.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="96.3111%" y="325" width="0.2406%" height="15" fill="rgb(244,151,32)" fg:x="1201" fg:w="3"/><text x="96.5611%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="96.3111%" y="309" width="0.2406%" height="15" fill="rgb(228,63,25)" fg:x="1201" fg:w="3"/><text x="96.5611%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="96.5517%" y="357" width="0.1604%" height="15" fill="rgb(231,158,23)" fg:x="1204" fg:w="2"/><text x="96.8017%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 2.73%)</title><rect x="94.3865%" y="373" width="2.7265%" height="15" fill="rgb(248,107,23)" fg:x="1177" fg:w="34"/><text x="94.6365%" y="383.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="96.7121%" y="357" width="0.4010%" height="15" fill="rgb(215,168,21)" fg:x="1206" fg:w="5"/><text x="96.9621%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.40%)</title><rect x="96.7121%" y="341" width="0.4010%" height="15" fill="rgb(227,83,22)" fg:x="1206" fg:w="5"/><text x="96.9621%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.0329%" y="325" width="0.0802%" height="15" fill="rgb(217,118,43)" fg:x="1210" fg:w="1"/><text x="97.2829%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (39 samples, 3.13%)</title><rect x="94.3865%" y="405" width="3.1275%" height="15" fill="rgb(229,220,41)" fg:x="1177" fg:w="39"/><text x="94.6365%" y="415.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (39 samples, 3.13%)</title><rect x="94.3865%" y="389" width="3.1275%" height="15" fill="rgb(254,146,46)" fg:x="1177" fg:w="39"/><text x="94.6365%" y="399.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="97.1131%" y="373" width="0.4010%" height="15" fill="rgb(233,208,31)" fg:x="1211" fg:w="5"/><text x="97.3631%" y="383.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="97.1131%" y="357" width="0.4010%" height="15" fill="rgb(222,162,7)" fg:x="1211" fg:w="5"/><text x="97.3631%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="97.5140%" y="357" width="0.2406%" height="15" fill="rgb(230,117,45)" fg:x="1216" fg:w="3"/><text x="97.7640%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.7546%" y="357" width="0.2406%" height="15" fill="rgb(239,163,6)" fg:x="1219" fg:w="3"/><text x="98.0046%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9150%" y="341" width="0.0802%" height="15" fill="rgb(246,130,17)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="97.9952%" y="357" width="0.0802%" height="15" fill="rgb(216,84,5)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.9952%" y="341" width="0.0802%" height="15" fill="rgb(230,200,21)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9952%" y="325" width="0.0802%" height="15" fill="rgb(224,2,8)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1556%" y="325" width="0.0802%" height="15" fill="rgb(238,178,10)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3160%" y="293" width="0.0802%" height="15" fill="rgb(242,153,24)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="98.0754%" y="357" width="0.4010%" height="15" fill="rgb(242,32,48)" fg:x="1223" fg:w="5"/><text x="98.3254%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="98.1556%" y="341" width="0.3208%" height="15" fill="rgb(227,36,0)" fg:x="1224" fg:w="4"/><text x="98.4056%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="98.2358%" y="325" width="0.2406%" height="15" fill="rgb(251,33,35)" fg:x="1225" fg:w="3"/><text x="98.4858%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.3160%" y="309" width="0.1604%" height="15" fill="rgb(232,168,51)" fg:x="1226" fg:w="2"/><text x="98.5660%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.3962%" y="293" width="0.0802%" height="15" fill="rgb(228,56,10)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4763%" y="309" width="0.0802%" height="15" fill="rgb(231,10,26)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4763%" y="293" width="0.0802%" height="15" fill="rgb(226,202,12)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4763%" y="277" width="0.0802%" height="15" fill="rgb(251,49,21)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="98.4763%" y="357" width="0.1604%" height="15" fill="rgb(206,228,28)" fg:x="1228" fg:w="2"/><text x="98.7263%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.4763%" y="341" width="0.1604%" height="15" fill="rgb(205,198,31)" fg:x="1228" fg:w="2"/><text x="98.7263%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="98.4763%" y="325" width="0.1604%" height="15" fill="rgb(213,69,1)" fg:x="1228" fg:w="2"/><text x="98.7263%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="98.5565%" y="309" width="0.0802%" height="15" fill="rgb(209,177,9)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.5565%" y="293" width="0.0802%" height="15" fill="rgb(227,119,30)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5565%" y="277" width="0.0802%" height="15" fill="rgb(234,106,41)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5565%" y="261" width="0.0802%" height="15" fill="rgb(244,103,47)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5565%" y="245" width="0.0802%" height="15" fill="rgb(212,211,25)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="255.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="98.6367%" y="357" width="0.0802%" height="15" fill="rgb(208,63,53)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="98.8773%" y="309" width="0.2406%" height="15" fill="rgb(213,176,21)" fg:x="1233" fg:w="3"/><text x="99.1273%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="98.8773%" y="293" width="0.2406%" height="15" fill="rgb(243,124,12)" fg:x="1233" fg:w="3"/><text x="99.1273%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.9575%" y="277" width="0.1604%" height="15" fill="rgb(239,2,35)" fg:x="1234" fg:w="2"/><text x="99.2075%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1179%" y="229" width="0.0802%" height="15" fill="rgb(253,169,22)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.1179%" y="261" width="0.1604%" height="15" fill="rgb(254,51,12)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.1179%" y="245" width="0.1604%" height="15" fill="rgb(244,17,47)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.1981%" y="229" width="0.0802%" height="15" fill="rgb(251,45,46)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="99.1179%" y="277" width="0.2406%" height="15" fill="rgb(223,87,43)" fg:x="1236" fg:w="3"/><text x="99.3679%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="99.2783%" y="261" width="0.0802%" height="15" fill="rgb(230,132,31)" fg:x="1238" fg:w="1"/><text x="99.5283%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2783%" y="245" width="0.0802%" height="15" fill="rgb(206,99,1)" fg:x="1238" fg:w="1"/><text x="99.5283%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.3585%" y="277" width="0.0802%" height="15" fill="rgb(227,110,25)" fg:x="1239" fg:w="1"/><text x="99.6085%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="99.1179%" y="309" width="0.4010%" height="15" fill="rgb(217,182,7)" fg:x="1236" fg:w="5"/><text x="99.3679%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="99.1179%" y="293" width="0.4010%" height="15" fill="rgb(250,176,4)" fg:x="1236" fg:w="5"/><text x="99.3679%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="99.4387%" y="277" width="0.0802%" height="15" fill="rgb(244,98,30)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="99.4387%" y="261" width="0.0802%" height="15" fill="rgb(228,150,42)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="99.5990%" y="293" width="0.0802%" height="15" fill="rgb(231,91,46)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="303.50"></text></g><g><title>engine::perform::StandardPerformer::perform (157 samples, 12.59%)</title><rect x="87.2494%" y="565" width="12.5902%" height="15" fill="rgb(252,161,32)" fg:x="1088" fg:w="157"/><text x="87.4994%" y="575.50">engine::perform::St..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (142 samples, 11.39%)</title><rect x="88.4523%" y="549" width="11.3873%" height="15" fill="rgb(236,69,41)" fg:x="1103" fg:w="142"/><text x="88.7023%" y="559.50">kernel::plugins::..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (142 samples, 11.39%)</title><rect x="88.4523%" y="533" width="11.3873%" height="15" fill="rgb(212,160,3)" fg:x="1103" fg:w="142"/><text x="88.7023%" y="543.50">&lt;plugins_dynlib::..</text></g><g><title>plugins_rpc::querying::have_surroundings (118 samples, 9.46%)</title><rect x="90.3769%" y="517" width="9.4627%" height="15" fill="rgb(216,5,50)" fg:x="1127" fg:w="118"/><text x="90.6269%" y="527.50">plugins_rpc::q..</text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (118 samples, 9.46%)</title><rect x="90.3769%" y="501" width="9.4627%" height="15" fill="rgb(241,138,25)" fg:x="1127" fg:w="118"/><text x="90.6269%" y="511.50">&lt;plugins_rpc::..</text></g><g><title>core::iter::adapters::try_process (115 samples, 9.22%)</title><rect x="90.6175%" y="485" width="9.2221%" height="15" fill="rgb(239,42,18)" fg:x="1130" fg:w="115"/><text x="90.8675%" y="495.50">core::iter::a..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (77 samples, 6.17%)</title><rect x="93.6648%" y="469" width="6.1748%" height="15" fill="rgb(239,40,7)" fg:x="1168" fg:w="77"/><text x="93.9148%" y="479.50">alloc::v..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (77 samples, 6.17%)</title><rect x="93.6648%" y="453" width="6.1748%" height="15" fill="rgb(239,11,31)" fg:x="1168" fg:w="77"/><text x="93.9148%" y="463.50">&lt;core::i..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (76 samples, 6.09%)</title><rect x="93.7450%" y="437" width="6.0946%" height="15" fill="rgb(224,77,40)" fg:x="1169" fg:w="76"/><text x="93.9950%" y="447.50">plugins_..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (68 samples, 5.45%)</title><rect x="94.3865%" y="421" width="5.4531%" height="15" fill="rgb(226,15,5)" fg:x="1177" fg:w="68"/><text x="94.6365%" y="431.50">&lt;rpc_pr..</text></g><g><title>kernel::model::EntityPtr::to_json_value (29 samples, 2.33%)</title><rect x="97.5140%" y="405" width="2.3256%" height="15" fill="rgb(254,188,5)" fg:x="1216" fg:w="29"/><text x="97.7640%" y="415.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (29 samples, 2.33%)</title><rect x="97.5140%" y="389" width="2.3256%" height="15" fill="rgb(241,148,52)" fg:x="1216" fg:w="29"/><text x="97.7640%" y="399.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.33%)</title><rect x="97.5140%" y="373" width="2.3256%" height="15" fill="rgb(251,48,36)" fg:x="1216" fg:w="29"/><text x="97.7640%" y="383.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.12%)</title><rect x="98.7169%" y="357" width="1.1227%" height="15" fill="rgb(243,83,13)" fg:x="1231" fg:w="14"/><text x="98.9669%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (12 samples, 0.96%)</title><rect x="98.8773%" y="341" width="0.9623%" height="15" fill="rgb(210,105,0)" fg:x="1233" fg:w="12"/><text x="99.1273%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="98.8773%" y="325" width="0.9623%" height="15" fill="rgb(239,60,36)" fg:x="1233" fg:w="12"/><text x="99.1273%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="99.5188%" y="309" width="0.3208%" height="15" fill="rgb(210,20,0)" fg:x="1241" fg:w="4"/><text x="99.7688%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="99.6792%" y="293" width="0.1604%" height="15" fill="rgb(244,26,53)" fg:x="1243" fg:w="2"/><text x="99.9292%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.6792%" y="277" width="0.1604%" height="15" fill="rgb(240,100,49)" fg:x="1243" fg:w="2"/><text x="99.9292%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7594%" y="261" width="0.0802%" height="15" fill="rgb(250,46,45)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7594%" y="245" width="0.0802%" height="15" fill="rgb(220,181,29)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="255.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (171 samples, 13.71%)</title><rect x="86.2069%" y="597" width="13.7129%" height="15" fill="rgb(213,137,33)" fg:x="1075" fg:w="171"/><text x="86.4569%" y="607.50">engine::session::Sess..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (171 samples, 13.71%)</title><rect x="86.2069%" y="581" width="13.7129%" height="15" fill="rgb(213,27,48)" fg:x="1075" fg:w="171"/><text x="86.4569%" y="591.50">engine::perform::Stan..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="99.8396%" y="565" width="0.0802%" height="15" fill="rgb(245,180,39)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="575.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="99.8396%" y="549" width="0.0802%" height="15" fill="rgb(212,158,42)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="99.8396%" y="533" width="0.0802%" height="15" fill="rgb(228,193,18)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.8396%" y="517" width="0.0802%" height="15" fill="rgb(245,172,29)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="99.8396%" y="501" width="0.0802%" height="15" fill="rgb(207,98,24)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="511.50"></text></g><g><title>all (1,247 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(249,92,26)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="959.50"></text></g><g><title>simple-a8fb0ec0 (1,247 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(217,176,26)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="943.50">simple-a8fb0ec0</text></g><g><title>_start (1,247 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(221,8,39)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(208,90,18)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="911.50">__libc_start_main</text></g><g><title>main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(207,202,30)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (1,247 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(231,124,22)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(206,15,5)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(239,16,52)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(245,213,29)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(213,203,36)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(209,55,18)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(207,133,49)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(240,33,46)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,247 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(212,35,2)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(231,119,28)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,247 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(252,178,7)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(251,91,4)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="703.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,247 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(233,122,19)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="687.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,247 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(231,208,46)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="671.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (366 samples, 29.35%)</title><rect x="70.6496%" y="645" width="29.3504%" height="15" fill="rgb(243,15,41)" fg:x="881" fg:w="366"/><text x="70.8996%" y="655.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criteri..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (366 samples, 29.35%)</title><rect x="70.6496%" y="629" width="29.3504%" height="15" fill="rgb(210,32,43)" fg:x="881" fg:w="366"/><text x="70.8996%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (366 samples, 29.35%)</title><rect x="70.6496%" y="613" width="29.3504%" height="15" fill="rgb(222,177,15)" fg:x="881" fg:w="366"/><text x="70.8996%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9198%" y="597" width="0.0802%" height="15" fill="rgb(244,121,34)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9198%" y="581" width="0.0802%" height="15" fill="rgb(234,138,4)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="591.50"></text></g></svg></svg>