<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1251"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.1599%" y="565" width="0.0799%" height="15" fill="rgb(245,37,26)" fg:x="2" fg:w="1"/><text x="0.4099%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1599%" y="549" width="0.0799%" height="15" fill="rgb(241,127,29)" fg:x="2" fg:w="1"/><text x="0.4099%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2398%" y="533" width="0.0799%" height="15" fill="rgb(241,33,26)" fg:x="3" fg:w="1"/><text x="0.4898%" y="543.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.4796%" y="485" width="0.3197%" height="15" fill="rgb(220,106,21)" fg:x="6" fg:w="4"/><text x="0.7296%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1191%" y="469" width="0.0799%" height="15" fill="rgb(225,125,35)" fg:x="14" fg:w="1"/><text x="1.3691%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.1990%" y="469" width="0.1599%" height="15" fill="rgb(248,80,22)" fg:x="15" fg:w="2"/><text x="1.4490%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2790%" y="453" width="0.0799%" height="15" fill="rgb(231,117,39)" fg:x="16" fg:w="1"/><text x="1.5290%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4388%" y="453" width="0.0799%" height="15" fill="rgb(239,183,16)" fg:x="18" fg:w="1"/><text x="1.6888%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.5987%" y="437" width="0.0799%" height="15" fill="rgb(221,61,19)" fg:x="20" fg:w="1"/><text x="1.8487%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.5987%" y="421" width="0.0799%" height="15" fill="rgb(239,196,44)" fg:x="20" fg:w="1"/><text x="1.8487%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5987%" y="405" width="0.0799%" height="15" fill="rgb(206,113,19)" fg:x="20" fg:w="1"/><text x="1.8487%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6787%" y="421" width="0.0799%" height="15" fill="rgb(245,114,12)" fg:x="21" fg:w="1"/><text x="1.9287%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.3997%" y="501" width="1.5188%" height="15" fill="rgb(247,89,39)" fg:x="5" fg:w="19"/><text x="0.6497%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="0.7994%" y="485" width="1.1191%" height="15" fill="rgb(213,85,14)" fg:x="10" fg:w="14"/><text x="1.0494%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.3589%" y="469" width="0.5596%" height="15" fill="rgb(249,206,33)" fg:x="17" fg:w="7"/><text x="1.6089%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.5188%" y="453" width="0.3997%" height="15" fill="rgb(235,167,47)" fg:x="19" fg:w="5"/><text x="1.7688%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.6787%" y="437" width="0.2398%" height="15" fill="rgb(217,177,16)" fg:x="21" fg:w="3"/><text x="1.9287%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.7586%" y="421" width="0.1599%" height="15" fill="rgb(250,228,29)" fg:x="22" fg:w="2"/><text x="2.0086%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8385%" y="405" width="0.0799%" height="15" fill="rgb(216,195,42)" fg:x="23" fg:w="1"/><text x="2.0885%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.3981%" y="469" width="0.1599%" height="15" fill="rgb(232,192,32)" fg:x="30" fg:w="2"/><text x="2.6481%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.5580%" y="469" width="0.2398%" height="15" fill="rgb(211,8,47)" fg:x="32" fg:w="3"/><text x="2.8080%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.8777%" y="421" width="0.2398%" height="15" fill="rgb(251,201,9)" fg:x="36" fg:w="3"/><text x="3.1277%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="2.8777%" y="453" width="0.3997%" height="15" fill="rgb(206,185,47)" fg:x="36" fg:w="5"/><text x="3.1277%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="2.8777%" y="437" width="0.3997%" height="15" fill="rgb(245,54,32)" fg:x="36" fg:w="5"/><text x="3.1277%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="3.1175%" y="421" width="0.1599%" height="15" fill="rgb(208,1,8)" fg:x="39" fg:w="2"/><text x="3.3675%" y="431.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="3.2774%" y="453" width="0.3197%" height="15" fill="rgb(228,57,24)" fg:x="41" fg:w="4"/><text x="3.5274%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="3.5971%" y="453" width="0.2398%" height="15" fill="rgb(251,24,8)" fg:x="45" fg:w="3"/><text x="3.8471%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.6771%" y="437" width="0.1599%" height="15" fill="rgb(236,196,50)" fg:x="46" fg:w="2"/><text x="3.9271%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8369%" y="437" width="0.0799%" height="15" fill="rgb(246,222,29)" fg:x="48" fg:w="1"/><text x="4.0869%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.16%)</title><rect x="1.9185%" y="501" width="2.1583%" height="15" fill="rgb(211,34,40)" fg:x="24" fg:w="27"/><text x="2.1685%" y="511.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.84%)</title><rect x="2.2382%" y="485" width="1.8385%" height="15" fill="rgb(210,66,51)" fg:x="28" fg:w="23"/><text x="2.4882%" y="495.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="2.7978%" y="469" width="1.2790%" height="15" fill="rgb(250,56,43)" fg:x="35" fg:w="16"/><text x="3.0478%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="3.8369%" y="453" width="0.2398%" height="15" fill="rgb(240,111,50)" fg:x="48" fg:w="3"/><text x="4.0869%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.9169%" y="437" width="0.1599%" height="15" fill="rgb(209,117,13)" fg:x="49" fg:w="2"/><text x="4.1669%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9968%" y="421" width="0.0799%" height="15" fill="rgb(232,164,45)" fg:x="50" fg:w="1"/><text x="4.2468%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 3.92%)</title><rect x="0.3197%" y="517" width="3.9169%" height="15" fill="rgb(205,69,32)" fg:x="4" fg:w="49"/><text x="0.5697%" y="527.50">&lt;all..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.0767%" y="501" width="0.1599%" height="15" fill="rgb(240,147,45)" fg:x="51" fg:w="2"/><text x="4.3267%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 4.32%)</title><rect x="0.0799%" y="581" width="4.3165%" height="15" fill="rgb(221,94,48)" fg:x="1" fg:w="54"/><text x="0.3299%" y="591.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (52 samples, 4.16%)</title><rect x="0.2398%" y="565" width="4.1567%" height="15" fill="rgb(249,209,17)" fg:x="3" fg:w="52"/><text x="0.4898%" y="575.50">core:..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 4.16%)</title><rect x="0.2398%" y="549" width="4.1567%" height="15" fill="rgb(228,57,28)" fg:x="3" fg:w="52"/><text x="0.4898%" y="559.50">&lt;hash..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (51 samples, 4.08%)</title><rect x="0.3197%" y="533" width="4.0767%" height="15" fill="rgb(250,133,26)" fg:x="4" fg:w="51"/><text x="0.5697%" y="543.50">core..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.2366%" y="517" width="0.1599%" height="15" fill="rgb(254,15,16)" fg:x="53" fg:w="2"/><text x="4.4866%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.3965%" y="533" width="0.0799%" height="15" fill="rgb(209,147,42)" fg:x="55" fg:w="1"/><text x="4.6465%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.3965%" y="517" width="0.0799%" height="15" fill="rgb(208,5,29)" fg:x="55" fg:w="1"/><text x="4.6465%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.5564%" y="517" width="0.0799%" height="15" fill="rgb(250,73,31)" fg:x="57" fg:w="1"/><text x="4.8064%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="4.7162%" y="485" width="0.0799%" height="15" fill="rgb(238,45,10)" fg:x="59" fg:w="1"/><text x="4.9662%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="4.7162%" y="469" width="0.0799%" height="15" fill="rgb(214,104,5)" fg:x="59" fg:w="1"/><text x="4.9662%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="4.7162%" y="453" width="0.0799%" height="15" fill="rgb(242,217,19)" fg:x="59" fg:w="1"/><text x="4.9662%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="4.7162%" y="437" width="0.0799%" height="15" fill="rgb(246,113,27)" fg:x="59" fg:w="1"/><text x="4.9662%" y="447.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="4.7162%" y="421" width="0.0799%" height="15" fill="rgb(221,34,27)" fg:x="59" fg:w="1"/><text x="4.9662%" y="431.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="4.7962%" y="469" width="0.0799%" height="15" fill="rgb(246,109,6)" fg:x="60" fg:w="1"/><text x="5.0462%" y="479.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="4.7962%" y="453" width="0.0799%" height="15" fill="rgb(217,12,25)" fg:x="60" fg:w="1"/><text x="5.0462%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="4.7962%" y="437" width="0.0799%" height="15" fill="rgb(250,195,5)" fg:x="60" fg:w="1"/><text x="5.0462%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="4.7962%" y="421" width="0.0799%" height="15" fill="rgb(244,140,45)" fg:x="60" fg:w="1"/><text x="5.0462%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="4.7962%" y="405" width="0.0799%" height="15" fill="rgb(230,64,14)" fg:x="60" fg:w="1"/><text x="5.0462%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="4.7962%" y="389" width="0.0799%" height="15" fill="rgb(206,27,27)" fg:x="60" fg:w="1"/><text x="5.0462%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.7962%" y="373" width="0.0799%" height="15" fill="rgb(230,14,50)" fg:x="60" fg:w="1"/><text x="5.0462%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.7962%" y="357" width="0.0799%" height="15" fill="rgb(237,172,14)" fg:x="60" fg:w="1"/><text x="5.0462%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.7962%" y="341" width="0.0799%" height="15" fill="rgb(209,25,21)" fg:x="60" fg:w="1"/><text x="5.0462%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.7962%" y="325" width="0.0799%" height="15" fill="rgb(248,148,22)" fg:x="60" fg:w="1"/><text x="5.0462%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.7962%" y="309" width="0.0799%" height="15" fill="rgb(234,100,22)" fg:x="60" fg:w="1"/><text x="5.0462%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.7962%" y="293" width="0.0799%" height="15" fill="rgb(210,20,30)" fg:x="60" fg:w="1"/><text x="5.0462%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8761%" y="469" width="0.0799%" height="15" fill="rgb(232,58,0)" fg:x="61" fg:w="1"/><text x="5.1261%" y="479.50"></text></g><g><title>dlopen (11 samples, 0.88%)</title><rect x="4.9560%" y="469" width="0.8793%" height="15" fill="rgb(221,68,13)" fg:x="62" fg:w="11"/><text x="5.2060%" y="479.50"></text></g><g><title>_dl_catch_error (11 samples, 0.88%)</title><rect x="4.9560%" y="453" width="0.8793%" height="15" fill="rgb(231,194,11)" fg:x="62" fg:w="11"/><text x="5.2060%" y="463.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="4.9560%" y="437" width="0.8793%" height="15" fill="rgb(235,51,41)" fg:x="62" fg:w="11"/><text x="5.2060%" y="447.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.80%)</title><rect x="5.0360%" y="421" width="0.7994%" height="15" fill="rgb(240,50,32)" fg:x="63" fg:w="10"/><text x="5.2860%" y="431.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.80%)</title><rect x="5.0360%" y="405" width="0.7994%" height="15" fill="rgb(240,185,36)" fg:x="63" fg:w="10"/><text x="5.2860%" y="415.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="5.7554%" y="389" width="0.0799%" height="15" fill="rgb(211,168,15)" fg:x="72" fg:w="1"/><text x="6.0054%" y="399.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (16 samples, 1.28%)</title><rect x="4.6363%" y="517" width="1.2790%" height="15" fill="rgb(221,70,0)" fg:x="58" fg:w="16"/><text x="4.8863%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (15 samples, 1.20%)</title><rect x="4.7162%" y="501" width="1.1990%" height="15" fill="rgb(205,21,33)" fg:x="59" fg:w="15"/><text x="4.9662%" y="511.50"></text></g><g><title>libloading::safe::Library::new (14 samples, 1.12%)</title><rect x="4.7962%" y="485" width="1.1191%" height="15" fill="rgb(225,106,10)" fg:x="60" fg:w="14"/><text x="5.0462%" y="495.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="5.8353%" y="469" width="0.0799%" height="15" fill="rgb(236,200,50)" fg:x="73" fg:w="1"/><text x="6.0853%" y="479.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="5.8353%" y="453" width="0.0799%" height="15" fill="rgb(249,93,23)" fg:x="73" fg:w="1"/><text x="6.0853%" y="463.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="5.8353%" y="437" width="0.0799%" height="15" fill="rgb(244,115,35)" fg:x="73" fg:w="1"/><text x="6.0853%" y="447.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="5.8353%" y="421" width="0.0799%" height="15" fill="rgb(231,129,47)" fg:x="73" fg:w="1"/><text x="6.0853%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="5.9153%" y="469" width="0.0799%" height="15" fill="rgb(225,160,50)" fg:x="74" fg:w="1"/><text x="6.1653%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="5.9153%" y="453" width="0.0799%" height="15" fill="rgb(218,135,23)" fg:x="74" fg:w="1"/><text x="6.1653%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="5.9153%" y="437" width="0.0799%" height="15" fill="rgb(227,119,14)" fg:x="74" fg:w="1"/><text x="6.1653%" y="447.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (23 samples, 1.84%)</title><rect x="4.3965%" y="581" width="1.8385%" height="15" fill="rgb(242,138,13)" fg:x="55" fg:w="23"/><text x="4.6465%" y="591.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (23 samples, 1.84%)</title><rect x="4.3965%" y="565" width="1.8385%" height="15" fill="rgb(215,11,16)" fg:x="55" fg:w="23"/><text x="4.6465%" y="575.50">e..</text></g><g><title>engine::session::Session::new (23 samples, 1.84%)</title><rect x="4.3965%" y="549" width="1.8385%" height="15" fill="rgb(234,170,50)" fg:x="55" fg:w="23"/><text x="4.6465%" y="559.50">e..</text></g><g><title>engine::session::Session::initialize (22 samples, 1.76%)</title><rect x="4.4764%" y="533" width="1.7586%" height="15" fill="rgb(233,34,20)" fg:x="56" fg:w="22"/><text x="4.7264%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="5.9153%" y="517" width="0.3197%" height="15" fill="rgb(237,100,45)" fg:x="74" fg:w="4"/><text x="6.1653%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="5.9153%" y="501" width="0.3197%" height="15" fill="rgb(231,184,36)" fg:x="74" fg:w="4"/><text x="6.1653%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="5.9153%" y="485" width="0.3197%" height="15" fill="rgb(252,93,2)" fg:x="74" fg:w="4"/><text x="6.1653%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="5.9952%" y="469" width="0.2398%" height="15" fill="rgb(248,176,47)" fg:x="75" fg:w="3"/><text x="6.2452%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="5.9952%" y="453" width="0.2398%" height="15" fill="rgb(249,125,23)" fg:x="75" fg:w="3"/><text x="6.2452%" y="463.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="5.9952%" y="437" width="0.2398%" height="15" fill="rgb(239,67,42)" fg:x="75" fg:w="3"/><text x="6.2452%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="6.3149%" y="565" width="0.0799%" height="15" fill="rgb(244,162,4)" fg:x="79" fg:w="1"/><text x="6.5649%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.3949%" y="565" width="0.0799%" height="15" fill="rgb(214,150,38)" fg:x="80" fg:w="1"/><text x="6.6449%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="6.4748%" y="565" width="0.0799%" height="15" fill="rgb(228,211,28)" fg:x="81" fg:w="1"/><text x="6.7248%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="6.5548%" y="565" width="0.0799%" height="15" fill="rgb(212,98,48)" fg:x="82" fg:w="1"/><text x="6.8048%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.5548%" y="549" width="0.0799%" height="15" fill="rgb(213,45,13)" fg:x="82" fg:w="1"/><text x="6.8048%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="6.6347%" y="565" width="0.0799%" height="15" fill="rgb(218,35,29)" fg:x="83" fg:w="1"/><text x="6.8847%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="6.6347%" y="549" width="0.0799%" height="15" fill="rgb(244,13,3)" fg:x="83" fg:w="1"/><text x="6.8847%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.6347%" y="533" width="0.0799%" height="15" fill="rgb(235,170,19)" fg:x="83" fg:w="1"/><text x="6.8847%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7146%" y="533" width="0.0799%" height="15" fill="rgb(233,193,43)" fg:x="84" fg:w="1"/><text x="6.9646%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7946%" y="517" width="0.0799%" height="15" fill="rgb(228,223,20)" fg:x="85" fg:w="1"/><text x="7.0446%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="6.7146%" y="549" width="0.2398%" height="15" fill="rgb(208,85,54)" fg:x="84" fg:w="3"/><text x="6.9646%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="6.7946%" y="533" width="0.1599%" height="15" fill="rgb(254,14,45)" fg:x="85" fg:w="2"/><text x="7.0446%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="6.8745%" y="517" width="0.0799%" height="15" fill="rgb(247,99,29)" fg:x="86" fg:w="1"/><text x="7.1245%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.9544%" y="517" width="0.0799%" height="15" fill="rgb(225,180,54)" fg:x="87" fg:w="1"/><text x="7.2044%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="7.0344%" y="421" width="0.0799%" height="15" fill="rgb(239,88,43)" fg:x="88" fg:w="1"/><text x="7.2844%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.0344%" y="405" width="0.0799%" height="15" fill="rgb(209,47,11)" fg:x="88" fg:w="1"/><text x="7.2844%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.0344%" y="389" width="0.0799%" height="15" fill="rgb(219,179,23)" fg:x="88" fg:w="1"/><text x="7.2844%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.0344%" y="373" width="0.0799%" height="15" fill="rgb(213,183,19)" fg:x="88" fg:w="1"/><text x="7.2844%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.0344%" y="357" width="0.0799%" height="15" fill="rgb(210,11,9)" fg:x="88" fg:w="1"/><text x="7.2844%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.1143%" y="405" width="0.0799%" height="15" fill="rgb(239,194,16)" fg:x="89" fg:w="1"/><text x="7.3643%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.1143%" y="389" width="0.0799%" height="15" fill="rgb(246,23,50)" fg:x="89" fg:w="1"/><text x="7.3643%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.1942%" y="389" width="0.1599%" height="15" fill="rgb(245,10,41)" fg:x="90" fg:w="2"/><text x="7.4442%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.1942%" y="373" width="0.1599%" height="15" fill="rgb(228,43,24)" fg:x="90" fg:w="2"/><text x="7.4442%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.2742%" y="357" width="0.0799%" height="15" fill="rgb(220,151,0)" fg:x="91" fg:w="1"/><text x="7.5242%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.2742%" y="341" width="0.0799%" height="15" fill="rgb(232,219,10)" fg:x="91" fg:w="1"/><text x="7.5242%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.40%)</title><rect x="7.0344%" y="437" width="0.3997%" height="15" fill="rgb(227,217,48)" fg:x="88" fg:w="5"/><text x="7.2844%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="7.1143%" y="421" width="0.3197%" height="15" fill="rgb(210,66,35)" fg:x="89" fg:w="4"/><text x="7.3643%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="7.1942%" y="405" width="0.2398%" height="15" fill="rgb(254,6,7)" fg:x="90" fg:w="3"/><text x="7.4442%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.3541%" y="389" width="0.0799%" height="15" fill="rgb(235,222,42)" fg:x="92" fg:w="1"/><text x="7.6041%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.3541%" y="373" width="0.0799%" height="15" fill="rgb(245,126,5)" fg:x="92" fg:w="1"/><text x="7.6041%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.4341%" y="405" width="0.0799%" height="15" fill="rgb(215,73,17)" fg:x="93" fg:w="1"/><text x="7.6841%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.5140%" y="389" width="0.0799%" height="15" fill="rgb(219,198,52)" fg:x="94" fg:w="1"/><text x="7.7640%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.5140%" y="373" width="0.0799%" height="15" fill="rgb(217,159,18)" fg:x="94" fg:w="1"/><text x="7.7640%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.5939%" y="373" width="0.0799%" height="15" fill="rgb(212,177,18)" fg:x="95" fg:w="1"/><text x="7.8439%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="7.4341%" y="437" width="0.3197%" height="15" fill="rgb(241,10,11)" fg:x="93" fg:w="4"/><text x="7.6841%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="7.4341%" y="421" width="0.3197%" height="15" fill="rgb(232,114,35)" fg:x="93" fg:w="4"/><text x="7.6841%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="7.5140%" y="405" width="0.2398%" height="15" fill="rgb(238,222,8)" fg:x="94" fg:w="3"/><text x="7.7640%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="7.5939%" y="389" width="0.1599%" height="15" fill="rgb(251,153,44)" fg:x="95" fg:w="2"/><text x="7.8439%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.6739%" y="373" width="0.0799%" height="15" fill="rgb(210,140,51)" fg:x="96" fg:w="1"/><text x="7.9239%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.80%)</title><rect x="7.0344%" y="469" width="0.7994%" height="15" fill="rgb(222,63,0)" fg:x="88" fg:w="10"/><text x="7.2844%" y="479.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (10 samples, 0.80%)</title><rect x="7.0344%" y="453" width="0.7994%" height="15" fill="rgb(240,18,40)" fg:x="88" fg:w="10"/><text x="7.2844%" y="463.50"></text></g><g><title>kernel::model::any_entity_changes (1 samples, 0.08%)</title><rect x="7.7538%" y="437" width="0.0799%" height="15" fill="rgb(237,88,16)" fg:x="97" fg:w="1"/><text x="8.0038%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="7.7538%" y="421" width="0.0799%" height="15" fill="rgb(251,117,13)" fg:x="97" fg:w="1"/><text x="8.0038%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.7538%" y="405" width="0.0799%" height="15" fill="rgb(251,228,8)" fg:x="97" fg:w="1"/><text x="8.0038%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="7.7538%" y="389" width="0.0799%" height="15" fill="rgb(205,107,49)" fg:x="97" fg:w="1"/><text x="8.0038%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.7538%" y="373" width="0.0799%" height="15" fill="rgb(238,72,41)" fg:x="97" fg:w="1"/><text x="8.0038%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.7538%" y="357" width="0.0799%" height="15" fill="rgb(248,183,52)" fg:x="97" fg:w="1"/><text x="8.0038%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.7538%" y="341" width="0.0799%" height="15" fill="rgb(215,58,20)" fg:x="97" fg:w="1"/><text x="8.0038%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.7538%" y="325" width="0.0799%" height="15" fill="rgb(209,49,13)" fg:x="97" fg:w="1"/><text x="8.0038%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.7538%" y="309" width="0.0799%" height="15" fill="rgb(208,113,17)" fg:x="97" fg:w="1"/><text x="8.0038%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.7538%" y="293" width="0.0799%" height="15" fill="rgb(208,14,22)" fg:x="97" fg:w="1"/><text x="8.0038%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.7538%" y="277" width="0.0799%" height="15" fill="rgb(222,95,2)" fg:x="97" fg:w="1"/><text x="8.0038%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.8337%" y="469" width="0.0799%" height="15" fill="rgb(253,180,37)" fg:x="98" fg:w="1"/><text x="8.0837%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.8337%" y="453" width="0.0799%" height="15" fill="rgb(250,81,33)" fg:x="98" fg:w="1"/><text x="8.0837%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.8337%" y="437" width="0.0799%" height="15" fill="rgb(251,151,41)" fg:x="98" fg:w="1"/><text x="8.0837%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="8.0735%" y="453" width="0.0799%" height="15" fill="rgb(210,135,17)" fg:x="101" fg:w="1"/><text x="8.3235%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.0735%" y="437" width="0.0799%" height="15" fill="rgb(239,21,29)" fg:x="101" fg:w="1"/><text x="8.3235%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.0735%" y="421" width="0.0799%" height="15" fill="rgb(231,215,16)" fg:x="101" fg:w="1"/><text x="8.3235%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.0735%" y="405" width="0.0799%" height="15" fill="rgb(239,151,54)" fg:x="101" fg:w="1"/><text x="8.3235%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="8.1535%" y="421" width="0.3197%" height="15" fill="rgb(222,122,38)" fg:x="102" fg:w="4"/><text x="8.4035%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.3133%" y="405" width="0.1599%" height="15" fill="rgb(243,128,1)" fg:x="104" fg:w="2"/><text x="8.5633%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.3933%" y="389" width="0.0799%" height="15" fill="rgb(225,74,21)" fg:x="105" fg:w="1"/><text x="8.6433%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.5532%" y="389" width="0.0799%" height="15" fill="rgb(216,210,10)" fg:x="107" fg:w="1"/><text x="8.8032%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="8.1535%" y="437" width="0.5596%" height="15" fill="rgb(228,76,19)" fg:x="102" fg:w="7"/><text x="8.4035%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.4732%" y="421" width="0.2398%" height="15" fill="rgb(236,80,34)" fg:x="106" fg:w="3"/><text x="8.7232%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.5532%" y="405" width="0.1599%" height="15" fill="rgb(225,173,23)" fg:x="107" fg:w="2"/><text x="8.8032%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.6331%" y="389" width="0.0799%" height="15" fill="rgb(253,38,1)" fg:x="108" fg:w="1"/><text x="8.8831%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.7130%" y="421" width="0.0799%" height="15" fill="rgb(206,155,35)" fg:x="109" fg:w="1"/><text x="8.9630%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.7130%" y="405" width="0.0799%" height="15" fill="rgb(254,27,53)" fg:x="109" fg:w="1"/><text x="8.9630%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.7130%" y="389" width="0.0799%" height="15" fill="rgb(225,52,41)" fg:x="109" fg:w="1"/><text x="8.9630%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="8.7930%" y="405" width="0.1599%" height="15" fill="rgb(244,53,18)" fg:x="110" fg:w="2"/><text x="9.0430%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="8.7930%" y="389" width="0.1599%" height="15" fill="rgb(254,206,48)" fg:x="110" fg:w="2"/><text x="9.0430%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.7930%" y="373" width="0.1599%" height="15" fill="rgb(236,182,23)" fg:x="110" fg:w="2"/><text x="9.0430%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.9528%" y="405" width="0.1599%" height="15" fill="rgb(236,191,37)" fg:x="112" fg:w="2"/><text x="9.2028%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.0328%" y="389" width="0.0799%" height="15" fill="rgb(245,53,8)" fg:x="113" fg:w="1"/><text x="9.2828%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.0328%" y="373" width="0.0799%" height="15" fill="rgb(245,147,9)" fg:x="113" fg:w="1"/><text x="9.2828%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.0328%" y="357" width="0.0799%" height="15" fill="rgb(218,24,48)" fg:x="113" fg:w="1"/><text x="9.2828%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.0328%" y="341" width="0.0799%" height="15" fill="rgb(254,23,9)" fg:x="113" fg:w="1"/><text x="9.2828%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.0328%" y="325" width="0.0799%" height="15" fill="rgb(244,105,9)" fg:x="113" fg:w="1"/><text x="9.2828%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.0328%" y="309" width="0.0799%" height="15" fill="rgb(212,142,22)" fg:x="113" fg:w="1"/><text x="9.2828%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.1926%" y="389" width="0.1599%" height="15" fill="rgb(221,114,49)" fg:x="115" fg:w="2"/><text x="9.4426%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.1926%" y="373" width="0.1599%" height="15" fill="rgb(223,210,25)" fg:x="115" fg:w="2"/><text x="9.4426%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.2726%" y="357" width="0.0799%" height="15" fill="rgb(235,162,44)" fg:x="116" fg:w="1"/><text x="9.5226%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.4325%" y="373" width="0.0799%" height="15" fill="rgb(237,65,45)" fg:x="118" fg:w="1"/><text x="9.6825%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.4325%" y="357" width="0.0799%" height="15" fill="rgb(208,79,9)" fg:x="118" fg:w="1"/><text x="9.6825%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="9.5124%" y="373" width="0.0799%" height="15" fill="rgb(215,228,8)" fg:x="119" fg:w="1"/><text x="9.7624%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.5124%" y="357" width="0.0799%" height="15" fill="rgb(205,185,17)" fg:x="119" fg:w="1"/><text x="9.7624%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="9.3525%" y="389" width="0.3197%" height="15" fill="rgb(213,62,36)" fg:x="117" fg:w="4"/><text x="9.6025%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.5923%" y="373" width="0.0799%" height="15" fill="rgb(209,34,9)" fg:x="120" fg:w="1"/><text x="9.8423%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.5923%" y="357" width="0.0799%" height="15" fill="rgb(246,151,27)" fg:x="120" fg:w="1"/><text x="9.8423%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.5923%" y="341" width="0.0799%" height="15" fill="rgb(218,206,3)" fg:x="120" fg:w="1"/><text x="9.8423%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="9.1127%" y="405" width="0.7194%" height="15" fill="rgb(242,202,1)" fg:x="114" fg:w="9"/><text x="9.3627%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.6723%" y="389" width="0.1599%" height="15" fill="rgb(227,185,16)" fg:x="121" fg:w="2"/><text x="9.9223%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="8.7930%" y="421" width="1.1191%" height="15" fill="rgb(241,1,14)" fg:x="110" fg:w="14"/><text x="9.0430%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.8321%" y="405" width="0.0799%" height="15" fill="rgb(212,113,25)" fg:x="123" fg:w="1"/><text x="10.0821%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.8321%" y="389" width="0.0799%" height="15" fill="rgb(247,37,43)" fg:x="123" fg:w="1"/><text x="10.0821%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.8321%" y="373" width="0.0799%" height="15" fill="rgb(226,54,8)" fg:x="123" fg:w="1"/><text x="10.0821%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (26 samples, 2.08%)</title><rect x="8.1535%" y="453" width="2.0783%" height="15" fill="rgb(251,205,25)" fg:x="102" fg:w="26"/><text x="8.4035%" y="463.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="8.7130%" y="437" width="1.5188%" height="15" fill="rgb(246,87,35)" fg:x="109" fg:w="19"/><text x="8.9630%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.9121%" y="421" width="0.3197%" height="15" fill="rgb(251,145,46)" fg:x="124" fg:w="4"/><text x="10.1621%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="9.9121%" y="405" width="0.3197%" height="15" fill="rgb(210,210,33)" fg:x="124" fg:w="4"/><text x="10.1621%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="9.9121%" y="389" width="0.3197%" height="15" fill="rgb(221,151,11)" fg:x="124" fg:w="4"/><text x="10.1621%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="9.9920%" y="373" width="0.2398%" height="15" fill="rgb(208,160,28)" fg:x="125" fg:w="3"/><text x="10.2420%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="10.0719%" y="357" width="0.1599%" height="15" fill="rgb(243,69,29)" fg:x="126" fg:w="2"/><text x="10.3219%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="10.0719%" y="341" width="0.1599%" height="15" fill="rgb(224,144,4)" fg:x="126" fg:w="2"/><text x="10.3219%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2318%" y="421" width="0.0799%" height="15" fill="rgb(211,140,38)" fg:x="128" fg:w="1"/><text x="10.4818%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.3118%" y="421" width="0.0799%" height="15" fill="rgb(252,189,15)" fg:x="129" fg:w="1"/><text x="10.5618%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.3917%" y="405" width="0.1599%" height="15" fill="rgb(251,175,23)" fg:x="130" fg:w="2"/><text x="10.6417%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="10.5516%" y="405" width="0.2398%" height="15" fill="rgb(212,184,11)" fg:x="132" fg:w="3"/><text x="10.8016%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.6315%" y="389" width="0.1599%" height="15" fill="rgb(217,205,6)" fg:x="133" fg:w="2"/><text x="10.8815%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="10.7914%" y="389" width="0.2398%" height="15" fill="rgb(235,45,45)" fg:x="135" fg:w="3"/><text x="11.0414%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="11.0312%" y="389" width="0.1599%" height="15" fill="rgb(211,157,53)" fg:x="138" fg:w="2"/><text x="11.2812%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="10.2318%" y="453" width="1.1191%" height="15" fill="rgb(212,13,8)" fg:x="128" fg:w="14"/><text x="10.4818%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="10.2318%" y="437" width="1.1191%" height="15" fill="rgb(218,80,36)" fg:x="128" fg:w="14"/><text x="10.4818%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="10.3917%" y="421" width="0.9592%" height="15" fill="rgb(211,123,43)" fg:x="130" fg:w="12"/><text x="10.6417%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="10.7914%" y="405" width="0.5596%" height="15" fill="rgb(206,165,2)" fg:x="135" fg:w="7"/><text x="11.0414%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.1910%" y="389" width="0.1599%" height="15" fill="rgb(248,63,35)" fg:x="140" fg:w="2"/><text x="11.4410%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2710%" y="373" width="0.0799%" height="15" fill="rgb(219,133,41)" fg:x="141" fg:w="1"/><text x="11.5210%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2710%" y="357" width="0.0799%" height="15" fill="rgb(206,175,46)" fg:x="141" fg:w="1"/><text x="11.5210%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="11.3509%" y="437" width="0.0799%" height="15" fill="rgb(224,41,35)" fg:x="142" fg:w="1"/><text x="11.6009%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="11.3509%" y="421" width="0.0799%" height="15" fill="rgb(226,113,24)" fg:x="142" fg:w="1"/><text x="11.6009%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3509%" y="405" width="0.0799%" height="15" fill="rgb(219,51,41)" fg:x="142" fg:w="1"/><text x="11.6009%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4309%" y="405" width="0.0799%" height="15" fill="rgb(220,145,47)" fg:x="143" fg:w="1"/><text x="11.6809%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.5108%" y="405" width="0.1599%" height="15" fill="rgb(239,121,47)" fg:x="144" fg:w="2"/><text x="11.7608%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5907%" y="389" width="0.0799%" height="15" fill="rgb(207,60,40)" fg:x="145" fg:w="1"/><text x="11.8407%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6707%" y="373" width="0.0799%" height="15" fill="rgb(224,229,11)" fg:x="146" fg:w="1"/><text x="11.9207%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="11.6707%" y="405" width="0.2398%" height="15" fill="rgb(252,28,32)" fg:x="146" fg:w="3"/><text x="11.9207%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="11.6707%" y="389" width="0.2398%" height="15" fill="rgb(207,52,49)" fg:x="146" fg:w="3"/><text x="11.9207%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.7506%" y="373" width="0.1599%" height="15" fill="rgb(243,51,50)" fg:x="147" fg:w="2"/><text x="12.0006%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8305%" y="357" width="0.0799%" height="15" fill="rgb(212,92,21)" fg:x="148" fg:w="1"/><text x="12.0805%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9904%" y="357" width="0.0799%" height="15" fill="rgb(230,183,50)" fg:x="150" fg:w="1"/><text x="12.2404%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9904%" y="341" width="0.0799%" height="15" fill="rgb(225,48,9)" fg:x="150" fg:w="1"/><text x="12.2404%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9904%" y="325" width="0.0799%" height="15" fill="rgb(254,44,4)" fg:x="150" fg:w="1"/><text x="12.2404%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="12.0703%" y="357" width="0.2398%" height="15" fill="rgb(252,128,37)" fg:x="151" fg:w="3"/><text x="12.3203%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="12.1503%" y="341" width="0.1599%" height="15" fill="rgb(227,178,8)" fg:x="152" fg:w="2"/><text x="12.4003%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="12.6299%" y="309" width="0.1599%" height="15" fill="rgb(205,206,32)" fg:x="158" fg:w="2"/><text x="12.8799%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="12.4700%" y="341" width="0.3997%" height="15" fill="rgb(220,218,22)" fg:x="156" fg:w="5"/><text x="12.7200%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="12.5500%" y="325" width="0.3197%" height="15" fill="rgb(236,41,28)" fg:x="157" fg:w="4"/><text x="12.8000%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.7898%" y="309" width="0.0799%" height="15" fill="rgb(219,37,7)" fg:x="160" fg:w="1"/><text x="13.0398%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7898%" y="293" width="0.0799%" height="15" fill="rgb(206,160,15)" fg:x="160" fg:w="1"/><text x="13.0398%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7898%" y="277" width="0.0799%" height="15" fill="rgb(208,82,21)" fg:x="160" fg:w="1"/><text x="13.0398%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7898%" y="261" width="0.0799%" height="15" fill="rgb(226,130,25)" fg:x="160" fg:w="1"/><text x="13.0398%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="11.9904%" y="373" width="0.9592%" height="15" fill="rgb(212,72,24)" fg:x="150" fg:w="12"/><text x="12.2404%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="12.3102%" y="357" width="0.6395%" height="15" fill="rgb(206,28,16)" fg:x="154" fg:w="8"/><text x="12.5602%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8697%" y="341" width="0.0799%" height="15" fill="rgb(249,41,5)" fg:x="161" fg:w="1"/><text x="13.1197%" y="351.50"></text></g><g><title>engine::session::Session::flush (79 samples, 6.31%)</title><rect x="6.7146%" y="565" width="6.3149%" height="15" fill="rgb(233,96,48)" fg:x="84" fg:w="79"/><text x="6.9646%" y="575.50">engine::..</text></g><g><title>engine::session::state::State::close (76 samples, 6.08%)</title><rect x="6.9544%" y="549" width="6.0751%" height="15" fill="rgb(240,198,11)" fg:x="87" fg:w="76"/><text x="7.2044%" y="559.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (76 samples, 6.08%)</title><rect x="6.9544%" y="533" width="6.0751%" height="15" fill="rgb(209,175,35)" fg:x="87" fg:w="76"/><text x="7.2044%" y="543.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (75 samples, 6.00%)</title><rect x="7.0344%" y="517" width="5.9952%" height="15" fill="rgb(214,40,51)" fg:x="88" fg:w="75"/><text x="7.2844%" y="527.50">engine::..</text></g><g><title>core::iter::adapters::try_process (75 samples, 6.00%)</title><rect x="7.0344%" y="501" width="5.9952%" height="15" fill="rgb(252,56,4)" fg:x="88" fg:w="75"/><text x="7.2844%" y="511.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (75 samples, 6.00%)</title><rect x="7.0344%" y="485" width="5.9952%" height="15" fill="rgb(219,131,5)" fg:x="88" fg:w="75"/><text x="7.2844%" y="495.50">&lt;alloc::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (64 samples, 5.12%)</title><rect x="7.9137%" y="469" width="5.1159%" height="15" fill="rgb(223,67,53)" fg:x="99" fg:w="64"/><text x="8.1637%" y="479.50">engine..</text></g><g><title>kernel::model::any_entity_changes (21 samples, 1.68%)</title><rect x="11.3509%" y="453" width="1.6787%" height="15" fill="rgb(227,154,8)" fg:x="142" fg:w="21"/><text x="11.6009%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.60%)</title><rect x="11.4309%" y="437" width="1.5987%" height="15" fill="rgb(216,174,51)" fg:x="143" fg:w="20"/><text x="11.6809%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.60%)</title><rect x="11.4309%" y="421" width="1.5987%" height="15" fill="rgb(239,60,34)" fg:x="143" fg:w="20"/><text x="11.6809%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.12%)</title><rect x="11.9105%" y="405" width="1.1191%" height="15" fill="rgb(236,165,48)" fg:x="149" fg:w="14"/><text x="12.1605%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="11.9904%" y="389" width="1.0392%" height="15" fill="rgb(210,37,26)" fg:x="150" fg:w="13"/><text x="12.2404%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9496%" y="373" width="0.0799%" height="15" fill="rgb(211,3,17)" fg:x="162" fg:w="1"/><text x="13.1996%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0296%" y="485" width="0.0799%" height="15" fill="rgb(234,88,49)" fg:x="163" fg:w="1"/><text x="13.2796%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0296%" y="469" width="0.0799%" height="15" fill="rgb(233,40,17)" fg:x="163" fg:w="1"/><text x="13.2796%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0296%" y="453" width="0.0799%" height="15" fill="rgb(235,127,31)" fg:x="163" fg:w="1"/><text x="13.2796%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.0296%" y="437" width="0.0799%" height="15" fill="rgb(248,167,17)" fg:x="163" fg:w="1"/><text x="13.2796%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.0296%" y="421" width="0.0799%" height="15" fill="rgb(218,179,8)" fg:x="163" fg:w="1"/><text x="13.2796%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.0296%" y="405" width="0.0799%" height="15" fill="rgb(216,92,14)" fg:x="163" fg:w="1"/><text x="13.2796%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.0296%" y="389" width="0.0799%" height="15" fill="rgb(221,198,46)" fg:x="163" fg:w="1"/><text x="13.2796%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.0296%" y="373" width="0.0799%" height="15" fill="rgb(244,7,25)" fg:x="163" fg:w="1"/><text x="13.2796%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.0296%" y="357" width="0.0799%" height="15" fill="rgb(233,75,6)" fg:x="163" fg:w="1"/><text x="13.2796%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.0296%" y="341" width="0.0799%" height="15" fill="rgb(240,189,41)" fg:x="163" fg:w="1"/><text x="13.2796%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.0296%" y="325" width="0.0799%" height="15" fill="rgb(237,157,21)" fg:x="163" fg:w="1"/><text x="13.2796%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.0296%" y="309" width="0.0799%" height="15" fill="rgb(210,136,49)" fg:x="163" fg:w="1"/><text x="13.2796%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.0296%" y="293" width="0.0799%" height="15" fill="rgb(210,68,29)" fg:x="163" fg:w="1"/><text x="13.2796%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.0296%" y="277" width="0.0799%" height="15" fill="rgb(247,207,20)" fg:x="163" fg:w="1"/><text x="13.2796%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0296%" y="261" width="0.0799%" height="15" fill="rgb(224,73,48)" fg:x="163" fg:w="1"/><text x="13.2796%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.0296%" y="517" width="0.2398%" height="15" fill="rgb(215,136,47)" fg:x="163" fg:w="3"/><text x="13.2796%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.0296%" y="501" width="0.2398%" height="15" fill="rgb(232,222,16)" fg:x="163" fg:w="3"/><text x="13.2796%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.1095%" y="485" width="0.1599%" height="15" fill="rgb(249,202,47)" fg:x="164" fg:w="2"/><text x="13.3595%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.1095%" y="469" width="0.1599%" height="15" fill="rgb(236,56,8)" fg:x="164" fg:w="2"/><text x="13.3595%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.1894%" y="453" width="0.0799%" height="15" fill="rgb(222,6,3)" fg:x="165" fg:w="1"/><text x="13.4394%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1894%" y="437" width="0.0799%" height="15" fill="rgb(254,222,28)" fg:x="165" fg:w="1"/><text x="13.4394%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1894%" y="421" width="0.0799%" height="15" fill="rgb(219,57,23)" fg:x="165" fg:w="1"/><text x="13.4394%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1894%" y="405" width="0.0799%" height="15" fill="rgb(251,106,48)" fg:x="165" fg:w="1"/><text x="13.4394%" y="415.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="13.3493%" y="469" width="0.0799%" height="15" fill="rgb(242,2,23)" fg:x="167" fg:w="1"/><text x="13.5993%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.3493%" y="453" width="0.0799%" height="15" fill="rgb(212,109,31)" fg:x="167" fg:w="1"/><text x="13.5993%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3493%" y="437" width="0.0799%" height="15" fill="rgb(241,9,22)" fg:x="167" fg:w="1"/><text x="13.5993%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3493%" y="421" width="0.0799%" height="15" fill="rgb(209,64,27)" fg:x="167" fg:w="1"/><text x="13.5993%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.3493%" y="405" width="0.0799%" height="15" fill="rgb(248,13,44)" fg:x="167" fg:w="1"/><text x="13.5993%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.5092%" y="421" width="0.0799%" height="15" fill="rgb(213,86,6)" fg:x="169" fg:w="1"/><text x="13.7592%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5092%" y="405" width="0.0799%" height="15" fill="rgb(247,11,18)" fg:x="169" fg:w="1"/><text x="13.7592%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="13.2694%" y="501" width="0.3997%" height="15" fill="rgb(252,31,11)" fg:x="166" fg:w="5"/><text x="13.5194%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="13.3493%" y="485" width="0.3197%" height="15" fill="rgb(215,63,51)" fg:x="167" fg:w="4"/><text x="13.5993%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.4293%" y="469" width="0.2398%" height="15" fill="rgb(222,180,4)" fg:x="168" fg:w="3"/><text x="13.6793%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.5092%" y="453" width="0.1599%" height="15" fill="rgb(233,4,23)" fg:x="169" fg:w="2"/><text x="13.7592%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.5092%" y="437" width="0.1599%" height="15" fill="rgb(230,116,22)" fg:x="169" fg:w="2"/><text x="13.7592%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="13.5891%" y="421" width="0.0799%" height="15" fill="rgb(222,20,14)" fg:x="170" fg:w="1"/><text x="13.8391%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="13.6691%" y="501" width="0.0799%" height="15" fill="rgb(210,176,43)" fg:x="171" fg:w="1"/><text x="13.9191%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6691%" y="485" width="0.0799%" height="15" fill="rgb(219,67,32)" fg:x="171" fg:w="1"/><text x="13.9191%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6691%" y="469" width="0.0799%" height="15" fill="rgb(228,91,39)" fg:x="171" fg:w="1"/><text x="13.9191%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="13.6691%" y="453" width="0.0799%" height="15" fill="rgb(254,63,14)" fg:x="171" fg:w="1"/><text x="13.9191%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6691%" y="437" width="0.0799%" height="15" fill="rgb(216,171,39)" fg:x="171" fg:w="1"/><text x="13.9191%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="13.7490%" y="485" width="0.0799%" height="15" fill="rgb(248,68,25)" fg:x="172" fg:w="1"/><text x="13.9990%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="13.2694%" y="517" width="0.7194%" height="15" fill="rgb(239,63,16)" fg:x="166" fg:w="9"/><text x="13.5194%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="13.7490%" y="501" width="0.2398%" height="15" fill="rgb(225,111,43)" fg:x="172" fg:w="3"/><text x="13.9990%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.8289%" y="485" width="0.1599%" height="15" fill="rgb(246,165,17)" fg:x="173" fg:w="2"/><text x="14.0789%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="13.8289%" y="469" width="0.1599%" height="15" fill="rgb(208,124,1)" fg:x="173" fg:w="2"/><text x="14.0789%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="13.9089%" y="453" width="0.0799%" height="15" fill="rgb(234,147,33)" fg:x="174" fg:w="1"/><text x="14.1589%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="13.9089%" y="437" width="0.0799%" height="15" fill="rgb(240,86,30)" fg:x="174" fg:w="1"/><text x="14.1589%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.9089%" y="421" width="0.0799%" height="15" fill="rgb(237,34,51)" fg:x="174" fg:w="1"/><text x="14.1589%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9888%" y="469" width="0.0799%" height="15" fill="rgb(232,131,41)" fg:x="175" fg:w="1"/><text x="14.2388%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9888%" y="453" width="0.0799%" height="15" fill="rgb(227,129,53)" fg:x="175" fg:w="1"/><text x="14.2388%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.9888%" y="501" width="0.1599%" height="15" fill="rgb(230,90,35)" fg:x="175" fg:w="2"/><text x="14.2388%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.9888%" y="485" width="0.1599%" height="15" fill="rgb(248,88,27)" fg:x="175" fg:w="2"/><text x="14.2388%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0687%" y="469" width="0.0799%" height="15" fill="rgb(223,18,17)" fg:x="176" fg:w="1"/><text x="14.3187%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0687%" y="453" width="0.0799%" height="15" fill="rgb(241,11,10)" fg:x="176" fg:w="1"/><text x="14.3187%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.0687%" y="437" width="0.0799%" height="15" fill="rgb(232,111,52)" fg:x="176" fg:w="1"/><text x="14.3187%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0687%" y="421" width="0.0799%" height="15" fill="rgb(228,67,8)" fg:x="176" fg:w="1"/><text x="14.3187%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="14.1487%" y="485" width="0.0799%" height="15" fill="rgb(251,168,31)" fg:x="177" fg:w="1"/><text x="14.3987%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2286%" y="469" width="0.0799%" height="15" fill="rgb(249,164,11)" fg:x="178" fg:w="1"/><text x="14.4786%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2286%" y="453" width="0.0799%" height="15" fill="rgb(239,81,9)" fg:x="178" fg:w="1"/><text x="14.4786%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2286%" y="437" width="0.0799%" height="15" fill="rgb(222,145,38)" fg:x="178" fg:w="1"/><text x="14.4786%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.2286%" y="421" width="0.0799%" height="15" fill="rgb(238,80,54)" fg:x="178" fg:w="1"/><text x="14.4786%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="13.9888%" y="517" width="0.3997%" height="15" fill="rgb(237,116,16)" fg:x="175" fg:w="5"/><text x="14.2388%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="14.1487%" y="501" width="0.2398%" height="15" fill="rgb(218,135,19)" fg:x="177" fg:w="3"/><text x="14.3987%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.2286%" y="485" width="0.1599%" height="15" fill="rgb(216,207,44)" fg:x="178" fg:w="2"/><text x="14.4786%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3086%" y="469" width="0.0799%" height="15" fill="rgb(226,152,40)" fg:x="179" fg:w="1"/><text x="14.5586%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3086%" y="453" width="0.0799%" height="15" fill="rgb(219,98,35)" fg:x="179" fg:w="1"/><text x="14.5586%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.3086%" y="437" width="0.0799%" height="15" fill="rgb(222,136,46)" fg:x="179" fg:w="1"/><text x="14.5586%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3086%" y="421" width="0.0799%" height="15" fill="rgb(222,71,8)" fg:x="179" fg:w="1"/><text x="14.5586%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3086%" y="405" width="0.0799%" height="15" fill="rgb(209,89,53)" fg:x="179" fg:w="1"/><text x="14.5586%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.3086%" y="389" width="0.0799%" height="15" fill="rgb(210,97,51)" fg:x="179" fg:w="1"/><text x="14.5586%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="14.3885%" y="501" width="0.0799%" height="15" fill="rgb(248,65,21)" fg:x="180" fg:w="1"/><text x="14.6385%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.4684%" y="485" width="0.0799%" height="15" fill="rgb(222,5,31)" fg:x="181" fg:w="1"/><text x="14.7184%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.4684%" y="469" width="0.0799%" height="15" fill="rgb(241,16,30)" fg:x="181" fg:w="1"/><text x="14.7184%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4684%" y="453" width="0.0799%" height="15" fill="rgb(215,86,30)" fg:x="181" fg:w="1"/><text x="14.7184%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4684%" y="437" width="0.0799%" height="15" fill="rgb(235,26,44)" fg:x="181" fg:w="1"/><text x="14.7184%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.4684%" y="421" width="0.0799%" height="15" fill="rgb(228,147,14)" fg:x="181" fg:w="1"/><text x="14.7184%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4684%" y="405" width="0.0799%" height="15" fill="rgb(253,38,50)" fg:x="181" fg:w="1"/><text x="14.7184%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.4684%" y="389" width="0.0799%" height="15" fill="rgb(251,151,16)" fg:x="181" fg:w="1"/><text x="14.7184%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.4684%" y="373" width="0.0799%" height="15" fill="rgb(224,64,19)" fg:x="181" fg:w="1"/><text x="14.7184%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.60%)</title><rect x="13.0296%" y="533" width="1.5987%" height="15" fill="rgb(235,214,47)" fg:x="163" fg:w="20"/><text x="13.2796%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="14.3885%" y="517" width="0.2398%" height="15" fill="rgb(218,15,19)" fg:x="180" fg:w="3"/><text x="14.6385%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="14.4684%" y="501" width="0.1599%" height="15" fill="rgb(247,209,3)" fg:x="181" fg:w="2"/><text x="14.7184%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="14.5484%" y="485" width="0.0799%" height="15" fill="rgb(217,29,2)" fg:x="182" fg:w="1"/><text x="14.7984%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.5484%" y="469" width="0.0799%" height="15" fill="rgb(234,9,9)" fg:x="182" fg:w="1"/><text x="14.7984%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.5484%" y="453" width="0.0799%" height="15" fill="rgb(207,43,14)" fg:x="182" fg:w="1"/><text x="14.7984%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5484%" y="437" width="0.0799%" height="15" fill="rgb(216,219,36)" fg:x="182" fg:w="1"/><text x="14.7984%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.5484%" y="421" width="0.0799%" height="15" fill="rgb(238,12,26)" fg:x="182" fg:w="1"/><text x="14.7984%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5484%" y="405" width="0.0799%" height="15" fill="rgb(226,67,30)" fg:x="182" fg:w="1"/><text x="14.7984%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.5484%" y="389" width="0.0799%" height="15" fill="rgb(229,154,7)" fg:x="182" fg:w="1"/><text x="14.7984%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5484%" y="373" width="0.0799%" height="15" fill="rgb(249,90,18)" fg:x="182" fg:w="1"/><text x="14.7984%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (21 samples, 1.68%)</title><rect x="13.0296%" y="549" width="1.6787%" height="15" fill="rgb(223,53,15)" fg:x="163" fg:w="21"/><text x="13.2796%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.6283%" y="533" width="0.0799%" height="15" fill="rgb(253,86,38)" fg:x="183" fg:w="1"/><text x="14.8783%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.6283%" y="517" width="0.0799%" height="15" fill="rgb(222,198,9)" fg:x="183" fg:w="1"/><text x="14.8783%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6283%" y="501" width="0.0799%" height="15" fill="rgb(240,146,25)" fg:x="183" fg:w="1"/><text x="14.8783%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6283%" y="485" width="0.0799%" height="15" fill="rgb(225,38,10)" fg:x="183" fg:w="1"/><text x="14.8783%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6283%" y="469" width="0.0799%" height="15" fill="rgb(246,93,4)" fg:x="183" fg:w="1"/><text x="14.8783%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6283%" y="453" width="0.0799%" height="15" fill="rgb(222,55,18)" fg:x="183" fg:w="1"/><text x="14.8783%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6283%" y="437" width="0.0799%" height="15" fill="rgb(233,137,48)" fg:x="183" fg:w="1"/><text x="14.8783%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.6283%" y="421" width="0.0799%" height="15" fill="rgb(214,8,54)" fg:x="183" fg:w="1"/><text x="14.8783%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.6283%" y="405" width="0.0799%" height="15" fill="rgb(206,75,4)" fg:x="183" fg:w="1"/><text x="14.8783%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.6283%" y="389" width="0.0799%" height="15" fill="rgb(238,171,14)" fg:x="183" fg:w="1"/><text x="14.8783%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6283%" y="373" width="0.0799%" height="15" fill="rgb(233,70,41)" fg:x="183" fg:w="1"/><text x="14.8783%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6283%" y="357" width="0.0799%" height="15" fill="rgb(214,68,36)" fg:x="183" fg:w="1"/><text x="14.8783%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.6283%" y="341" width="0.0799%" height="15" fill="rgb(223,29,5)" fg:x="183" fg:w="1"/><text x="14.8783%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.6283%" y="325" width="0.0799%" height="15" fill="rgb(251,22,40)" fg:x="183" fg:w="1"/><text x="14.8783%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.6283%" y="309" width="0.0799%" height="15" fill="rgb(210,67,41)" fg:x="183" fg:w="1"/><text x="14.8783%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.6283%" y="293" width="0.0799%" height="15" fill="rgb(225,177,31)" fg:x="183" fg:w="1"/><text x="14.8783%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6283%" y="277" width="0.0799%" height="15" fill="rgb(221,229,11)" fg:x="183" fg:w="1"/><text x="14.8783%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.7082%" y="501" width="0.0799%" height="15" fill="rgb(247,172,52)" fg:x="184" fg:w="1"/><text x="14.9582%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.7082%" y="485" width="0.0799%" height="15" fill="rgb(212,73,19)" fg:x="184" fg:w="1"/><text x="14.9582%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.7082%" y="469" width="0.0799%" height="15" fill="rgb(244,7,46)" fg:x="184" fg:w="1"/><text x="14.9582%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7082%" y="453" width="0.0799%" height="15" fill="rgb(230,113,20)" fg:x="184" fg:w="1"/><text x="14.9582%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.7082%" y="437" width="0.0799%" height="15" fill="rgb(209,97,30)" fg:x="184" fg:w="1"/><text x="14.9582%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7082%" y="421" width="0.0799%" height="15" fill="rgb(243,89,12)" fg:x="184" fg:w="1"/><text x="14.9582%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.7082%" y="405" width="0.0799%" height="15" fill="rgb(228,32,19)" fg:x="184" fg:w="1"/><text x="14.9582%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7082%" y="389" width="0.0799%" height="15" fill="rgb(248,25,17)" fg:x="184" fg:w="1"/><text x="14.9582%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.7082%" y="373" width="0.0799%" height="15" fill="rgb(232,161,29)" fg:x="184" fg:w="1"/><text x="14.9582%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="14.7082%" y="533" width="0.2398%" height="15" fill="rgb(251,192,11)" fg:x="184" fg:w="3"/><text x="14.9582%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="14.7082%" y="517" width="0.2398%" height="15" fill="rgb(240,47,32)" fg:x="184" fg:w="3"/><text x="14.9582%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="14.7882%" y="501" width="0.1599%" height="15" fill="rgb(250,16,45)" fg:x="185" fg:w="2"/><text x="15.0382%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.7882%" y="485" width="0.1599%" height="15" fill="rgb(227,217,42)" fg:x="185" fg:w="2"/><text x="15.0382%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.7882%" y="469" width="0.1599%" height="15" fill="rgb(206,82,54)" fg:x="185" fg:w="2"/><text x="15.0382%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="14.7882%" y="453" width="0.1599%" height="15" fill="rgb(243,145,25)" fg:x="185" fg:w="2"/><text x="15.0382%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.7882%" y="437" width="0.1599%" height="15" fill="rgb(207,166,24)" fg:x="185" fg:w="2"/><text x="15.0382%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.7882%" y="421" width="0.1599%" height="15" fill="rgb(215,191,44)" fg:x="185" fg:w="2"/><text x="15.0382%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.8681%" y="405" width="0.0799%" height="15" fill="rgb(234,218,51)" fg:x="186" fg:w="1"/><text x="15.1181%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.8681%" y="389" width="0.0799%" height="15" fill="rgb(245,133,21)" fg:x="186" fg:w="1"/><text x="15.1181%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.9480%" y="533" width="0.1599%" height="15" fill="rgb(230,136,45)" fg:x="187" fg:w="2"/><text x="15.1980%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="14.9480%" y="517" width="0.1599%" height="15" fill="rgb(247,63,43)" fg:x="187" fg:w="2"/><text x="15.1980%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.9480%" y="501" width="0.1599%" height="15" fill="rgb(254,223,31)" fg:x="187" fg:w="2"/><text x="15.1980%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0280%" y="485" width="0.0799%" height="15" fill="rgb(236,185,0)" fg:x="188" fg:w="1"/><text x="15.2780%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="15.1079%" y="517" width="0.0799%" height="15" fill="rgb(231,139,46)" fg:x="189" fg:w="1"/><text x="15.3579%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="15.1079%" y="501" width="0.0799%" height="15" fill="rgb(236,147,31)" fg:x="189" fg:w="1"/><text x="15.3579%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (28 samples, 2.24%)</title><rect x="13.0296%" y="565" width="2.2382%" height="15" fill="rgb(225,222,22)" fg:x="163" fg:w="28"/><text x="13.2796%" y="575.50">p..</text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="14.7082%" y="549" width="0.5596%" height="15" fill="rgb(225,193,14)" fg:x="184" fg:w="7"/><text x="14.9582%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="15.1079%" y="533" width="0.1599%" height="15" fill="rgb(253,193,46)" fg:x="189" fg:w="2"/><text x="15.3579%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="15.1878%" y="517" width="0.0799%" height="15" fill="rgb(218,187,39)" fg:x="190" fg:w="1"/><text x="15.4378%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.1878%" y="501" width="0.0799%" height="15" fill="rgb(227,162,48)" fg:x="190" fg:w="1"/><text x="15.4378%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.1878%" y="485" width="0.0799%" height="15" fill="rgb(222,25,5)" fg:x="190" fg:w="1"/><text x="15.4378%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.3477%" y="517" width="0.0799%" height="15" fill="rgb(211,205,16)" fg:x="192" fg:w="1"/><text x="15.5977%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.3477%" y="501" width="0.0799%" height="15" fill="rgb(244,191,2)" fg:x="192" fg:w="1"/><text x="15.5977%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.3477%" y="485" width="0.0799%" height="15" fill="rgb(248,159,12)" fg:x="192" fg:w="1"/><text x="15.5977%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.3477%" y="469" width="0.0799%" height="15" fill="rgb(235,204,17)" fg:x="192" fg:w="1"/><text x="15.5977%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.3477%" y="453" width="0.0799%" height="15" fill="rgb(240,21,27)" fg:x="192" fg:w="1"/><text x="15.5977%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.3477%" y="437" width="0.0799%" height="15" fill="rgb(224,170,31)" fg:x="192" fg:w="1"/><text x="15.5977%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.3477%" y="421" width="0.0799%" height="15" fill="rgb(223,145,32)" fg:x="192" fg:w="1"/><text x="15.5977%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="15.3477%" y="533" width="0.1599%" height="15" fill="rgb(243,100,5)" fg:x="192" fg:w="2"/><text x="15.5977%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.4277%" y="517" width="0.0799%" height="15" fill="rgb(242,131,51)" fg:x="193" fg:w="1"/><text x="15.6777%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="15.4277%" y="501" width="0.0799%" height="15" fill="rgb(223,156,46)" fg:x="193" fg:w="1"/><text x="15.6777%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.4277%" y="485" width="0.0799%" height="15" fill="rgb(215,10,40)" fg:x="193" fg:w="1"/><text x="15.6777%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.4277%" y="469" width="0.0799%" height="15" fill="rgb(233,155,0)" fg:x="193" fg:w="1"/><text x="15.6777%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.4277%" y="453" width="0.0799%" height="15" fill="rgb(247,78,6)" fg:x="193" fg:w="1"/><text x="15.6777%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5076%" y="453" width="0.0799%" height="15" fill="rgb(237,217,21)" fg:x="194" fg:w="1"/><text x="15.7576%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5076%" y="437" width="0.0799%" height="15" fill="rgb(212,1,21)" fg:x="194" fg:w="1"/><text x="15.7576%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5076%" y="421" width="0.0799%" height="15" fill="rgb(213,7,14)" fg:x="194" fg:w="1"/><text x="15.7576%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.5076%" y="405" width="0.0799%" height="15" fill="rgb(225,84,14)" fg:x="194" fg:w="1"/><text x="15.7576%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5875%" y="453" width="0.0799%" height="15" fill="rgb(239,216,39)" fg:x="195" fg:w="1"/><text x="15.8375%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.5875%" y="437" width="0.0799%" height="15" fill="rgb(253,29,23)" fg:x="195" fg:w="1"/><text x="15.8375%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.5875%" y="421" width="0.0799%" height="15" fill="rgb(220,167,50)" fg:x="195" fg:w="1"/><text x="15.8375%" y="431.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="15.5076%" y="485" width="0.2398%" height="15" fill="rgb(232,141,1)" fg:x="194" fg:w="3"/><text x="15.7576%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="15.5076%" y="469" width="0.2398%" height="15" fill="rgb(222,210,1)" fg:x="194" fg:w="3"/><text x="15.7576%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.6675%" y="453" width="0.0799%" height="15" fill="rgb(219,84,10)" fg:x="196" fg:w="1"/><text x="15.9175%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.6675%" y="437" width="0.0799%" height="15" fill="rgb(245,188,6)" fg:x="196" fg:w="1"/><text x="15.9175%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.6675%" y="421" width="0.0799%" height="15" fill="rgb(252,139,39)" fg:x="196" fg:w="1"/><text x="15.9175%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.6675%" y="405" width="0.0799%" height="15" fill="rgb(218,42,26)" fg:x="196" fg:w="1"/><text x="15.9175%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.6675%" y="389" width="0.0799%" height="15" fill="rgb(237,226,51)" fg:x="196" fg:w="1"/><text x="15.9175%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="15.5076%" y="517" width="0.3197%" height="15" fill="rgb(246,15,17)" fg:x="194" fg:w="4"/><text x="15.7576%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="15.5076%" y="501" width="0.3197%" height="15" fill="rgb(228,170,42)" fg:x="194" fg:w="4"/><text x="15.7576%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.7474%" y="485" width="0.0799%" height="15" fill="rgb(248,118,53)" fg:x="197" fg:w="1"/><text x="15.9974%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7474%" y="469" width="0.0799%" height="15" fill="rgb(207,30,10)" fg:x="197" fg:w="1"/><text x="15.9974%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7474%" y="453" width="0.0799%" height="15" fill="rgb(217,104,38)" fg:x="197" fg:w="1"/><text x="15.9974%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="15.5076%" y="533" width="0.3997%" height="15" fill="rgb(211,165,26)" fg:x="194" fg:w="5"/><text x="15.7576%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8273%" y="517" width="0.0799%" height="15" fill="rgb(247,38,9)" fg:x="198" fg:w="1"/><text x="16.0773%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.8273%" y="501" width="0.0799%" height="15" fill="rgb(218,187,8)" fg:x="198" fg:w="1"/><text x="16.0773%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8273%" y="485" width="0.0799%" height="15" fill="rgb(247,94,28)" fg:x="198" fg:w="1"/><text x="16.0773%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.9872%" y="485" width="0.1599%" height="15" fill="rgb(218,173,30)" fg:x="200" fg:w="2"/><text x="16.2372%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="15.9872%" y="469" width="0.1599%" height="15" fill="rgb(245,45,36)" fg:x="200" fg:w="2"/><text x="16.2372%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.0671%" y="453" width="0.0799%" height="15" fill="rgb(221,172,44)" fg:x="201" fg:w="1"/><text x="16.3171%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.0671%" y="437" width="0.0799%" height="15" fill="rgb(222,45,12)" fg:x="201" fg:w="1"/><text x="16.3171%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="15.9073%" y="517" width="0.3197%" height="15" fill="rgb(250,10,22)" fg:x="199" fg:w="4"/><text x="16.1573%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="15.9073%" y="501" width="0.3197%" height="15" fill="rgb(239,27,0)" fg:x="199" fg:w="4"/><text x="16.1573%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.1471%" y="485" width="0.0799%" height="15" fill="rgb(223,118,22)" fg:x="202" fg:w="1"/><text x="16.3971%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1471%" y="469" width="0.0799%" height="15" fill="rgb(251,81,25)" fg:x="202" fg:w="1"/><text x="16.3971%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.1471%" y="453" width="0.0799%" height="15" fill="rgb(237,225,53)" fg:x="202" fg:w="1"/><text x="16.3971%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1471%" y="437" width="0.0799%" height="15" fill="rgb(237,186,51)" fg:x="202" fg:w="1"/><text x="16.3971%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="16.1471%" y="421" width="0.0799%" height="15" fill="rgb(247,209,11)" fg:x="202" fg:w="1"/><text x="16.3971%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="15.9073%" y="533" width="0.4796%" height="15" fill="rgb(223,109,27)" fg:x="199" fg:w="6"/><text x="16.1573%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="16.2270%" y="517" width="0.1599%" height="15" fill="rgb(246,181,13)" fg:x="203" fg:w="2"/><text x="16.4770%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.2270%" y="501" width="0.1599%" height="15" fill="rgb(234,57,44)" fg:x="203" fg:w="2"/><text x="16.4770%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3070%" y="485" width="0.0799%" height="15" fill="rgb(211,227,50)" fg:x="204" fg:w="1"/><text x="16.5570%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3070%" y="469" width="0.0799%" height="15" fill="rgb(254,57,34)" fg:x="204" fg:w="1"/><text x="16.5570%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3070%" y="453" width="0.0799%" height="15" fill="rgb(227,212,26)" fg:x="204" fg:w="1"/><text x="16.5570%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3070%" y="437" width="0.0799%" height="15" fill="rgb(244,169,44)" fg:x="204" fg:w="1"/><text x="16.5570%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.3070%" y="421" width="0.0799%" height="15" fill="rgb(236,135,50)" fg:x="204" fg:w="1"/><text x="16.5570%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.3070%" y="405" width="0.0799%" height="15" fill="rgb(241,89,30)" fg:x="204" fg:w="1"/><text x="16.5570%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.3070%" y="389" width="0.0799%" height="15" fill="rgb(206,113,34)" fg:x="204" fg:w="1"/><text x="16.5570%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3070%" y="373" width="0.0799%" height="15" fill="rgb(218,104,52)" fg:x="204" fg:w="1"/><text x="16.5570%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3070%" y="357" width="0.0799%" height="15" fill="rgb(223,82,32)" fg:x="204" fg:w="1"/><text x="16.5570%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.3070%" y="341" width="0.0799%" height="15" fill="rgb(249,219,30)" fg:x="204" fg:w="1"/><text x="16.5570%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.3070%" y="325" width="0.0799%" height="15" fill="rgb(233,141,21)" fg:x="204" fg:w="1"/><text x="16.5570%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.3070%" y="309" width="0.0799%" height="15" fill="rgb(252,87,44)" fg:x="204" fg:w="1"/><text x="16.5570%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.3070%" y="293" width="0.0799%" height="15" fill="rgb(229,48,33)" fg:x="204" fg:w="1"/><text x="16.5570%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3070%" y="277" width="0.0799%" height="15" fill="rgb(229,23,22)" fg:x="204" fg:w="1"/><text x="16.5570%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3869%" y="469" width="0.0799%" height="15" fill="rgb(244,116,16)" fg:x="205" fg:w="1"/><text x="16.6369%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3869%" y="453" width="0.0799%" height="15" fill="rgb(247,45,10)" fg:x="205" fg:w="1"/><text x="16.6369%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3869%" y="437" width="0.0799%" height="15" fill="rgb(228,60,29)" fg:x="205" fg:w="1"/><text x="16.6369%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3869%" y="421" width="0.0799%" height="15" fill="rgb(205,129,15)" fg:x="205" fg:w="1"/><text x="16.6369%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3869%" y="405" width="0.0799%" height="15" fill="rgb(206,229,4)" fg:x="205" fg:w="1"/><text x="16.6369%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.3869%" y="389" width="0.0799%" height="15" fill="rgb(249,191,30)" fg:x="205" fg:w="1"/><text x="16.6369%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.3869%" y="373" width="0.0799%" height="15" fill="rgb(250,84,54)" fg:x="205" fg:w="1"/><text x="16.6369%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.3869%" y="357" width="0.0799%" height="15" fill="rgb(207,25,53)" fg:x="205" fg:w="1"/><text x="16.6369%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3869%" y="341" width="0.0799%" height="15" fill="rgb(235,40,8)" fg:x="205" fg:w="1"/><text x="16.6369%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3869%" y="325" width="0.0799%" height="15" fill="rgb(226,169,33)" fg:x="205" fg:w="1"/><text x="16.6369%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.3869%" y="309" width="0.0799%" height="15" fill="rgb(238,110,8)" fg:x="205" fg:w="1"/><text x="16.6369%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.3869%" y="293" width="0.0799%" height="15" fill="rgb(251,206,12)" fg:x="205" fg:w="1"/><text x="16.6369%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.3869%" y="277" width="0.0799%" height="15" fill="rgb(248,171,18)" fg:x="205" fg:w="1"/><text x="16.6369%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.3869%" y="261" width="0.0799%" height="15" fill="rgb(213,65,46)" fg:x="205" fg:w="1"/><text x="16.6369%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3869%" y="245" width="0.0799%" height="15" fill="rgb(211,154,15)" fg:x="205" fg:w="1"/><text x="16.6369%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="16.3869%" y="501" width="0.2398%" height="15" fill="rgb(217,75,43)" fg:x="205" fg:w="3"/><text x="16.6369%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.3869%" y="485" width="0.2398%" height="15" fill="rgb(230,32,33)" fg:x="205" fg:w="3"/><text x="16.6369%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.4668%" y="469" width="0.1599%" height="15" fill="rgb(221,100,16)" fg:x="206" fg:w="2"/><text x="16.7168%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.4668%" y="453" width="0.1599%" height="15" fill="rgb(212,129,47)" fg:x="206" fg:w="2"/><text x="16.7168%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="16.4668%" y="437" width="0.1599%" height="15" fill="rgb(239,217,47)" fg:x="206" fg:w="2"/><text x="16.7168%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.4668%" y="421" width="0.1599%" height="15" fill="rgb(230,84,24)" fg:x="206" fg:w="2"/><text x="16.7168%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="16.5468%" y="405" width="0.0799%" height="15" fill="rgb(214,153,51)" fg:x="207" fg:w="1"/><text x="16.7968%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.44%)</title><rect x="15.3477%" y="549" width="1.4388%" height="15" fill="rgb(231,6,35)" fg:x="192" fg:w="18"/><text x="15.5977%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="16.3869%" y="533" width="0.3997%" height="15" fill="rgb(229,122,30)" fg:x="205" fg:w="5"/><text x="16.6369%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="16.3869%" y="517" width="0.3997%" height="15" fill="rgb(234,71,10)" fg:x="205" fg:w="5"/><text x="16.6369%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="16.6267%" y="501" width="0.1599%" height="15" fill="rgb(215,173,26)" fg:x="208" fg:w="2"/><text x="16.8767%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.7066%" y="485" width="0.0799%" height="15" fill="rgb(248,118,52)" fg:x="209" fg:w="1"/><text x="16.9566%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.7066%" y="469" width="0.0799%" height="15" fill="rgb(237,55,46)" fg:x="209" fg:w="1"/><text x="16.9566%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.7066%" y="453" width="0.0799%" height="15" fill="rgb(243,214,43)" fg:x="209" fg:w="1"/><text x="16.9566%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.7066%" y="437" width="0.0799%" height="15" fill="rgb(252,123,30)" fg:x="209" fg:w="1"/><text x="16.9566%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.7066%" y="421" width="0.0799%" height="15" fill="rgb(215,73,39)" fg:x="209" fg:w="1"/><text x="16.9566%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.7066%" y="405" width="0.0799%" height="15" fill="rgb(251,194,29)" fg:x="209" fg:w="1"/><text x="16.9566%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (20 samples, 1.60%)</title><rect x="15.2678%" y="565" width="1.5987%" height="15" fill="rgb(224,58,52)" fg:x="191" fg:w="20"/><text x="15.5178%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.7866%" y="549" width="0.0799%" height="15" fill="rgb(248,106,46)" fg:x="210" fg:w="1"/><text x="17.0366%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.7866%" y="533" width="0.0799%" height="15" fill="rgb(223,80,29)" fg:x="210" fg:w="1"/><text x="17.0366%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.7866%" y="517" width="0.0799%" height="15" fill="rgb(243,137,9)" fg:x="210" fg:w="1"/><text x="17.0366%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.7866%" y="501" width="0.0799%" height="15" fill="rgb(235,121,28)" fg:x="210" fg:w="1"/><text x="17.0366%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.7866%" y="485" width="0.0799%" height="15" fill="rgb(219,121,41)" fg:x="210" fg:w="1"/><text x="17.0366%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.7866%" y="469" width="0.0799%" height="15" fill="rgb(251,60,6)" fg:x="210" fg:w="1"/><text x="17.0366%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.7866%" y="453" width="0.0799%" height="15" fill="rgb(208,12,30)" fg:x="210" fg:w="1"/><text x="17.0366%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.8665%" y="501" width="0.0799%" height="15" fill="rgb(207,176,36)" fg:x="211" fg:w="1"/><text x="17.1165%" y="511.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="16.8665%" y="533" width="0.2398%" height="15" fill="rgb(211,188,29)" fg:x="211" fg:w="3"/><text x="17.1165%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="16.8665%" y="517" width="0.2398%" height="15" fill="rgb(220,184,37)" fg:x="211" fg:w="3"/><text x="17.1165%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="16.9464%" y="501" width="0.1599%" height="15" fill="rgb(239,87,37)" fg:x="212" fg:w="2"/><text x="17.1964%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.9464%" y="485" width="0.1599%" height="15" fill="rgb(232,113,44)" fg:x="212" fg:w="2"/><text x="17.1964%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.9464%" y="469" width="0.1599%" height="15" fill="rgb(246,25,39)" fg:x="212" fg:w="2"/><text x="17.1964%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="16.8665%" y="565" width="0.3197%" height="15" fill="rgb(247,30,13)" fg:x="211" fg:w="4"/><text x="17.1165%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="16.8665%" y="549" width="0.3197%" height="15" fill="rgb(230,176,35)" fg:x="211" fg:w="4"/><text x="17.1165%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.1063%" y="533" width="0.0799%" height="15" fill="rgb(222,23,18)" fg:x="214" fg:w="1"/><text x="17.3563%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.1863%" y="469" width="0.0799%" height="15" fill="rgb(234,86,8)" fg:x="215" fg:w="1"/><text x="17.4363%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.1863%" y="453" width="0.0799%" height="15" fill="rgb(206,218,47)" fg:x="215" fg:w="1"/><text x="17.4363%" y="463.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="17.1863%" y="549" width="0.1599%" height="15" fill="rgb(229,35,31)" fg:x="215" fg:w="2"/><text x="17.4363%" y="559.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="17.1863%" y="533" width="0.1599%" height="15" fill="rgb(242,81,7)" fg:x="215" fg:w="2"/><text x="17.4363%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.1863%" y="517" width="0.1599%" height="15" fill="rgb(231,11,35)" fg:x="215" fg:w="2"/><text x="17.4363%" y="527.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (2 samples, 0.16%)</title><rect x="17.1863%" y="501" width="0.1599%" height="15" fill="rgb(219,218,17)" fg:x="215" fg:w="2"/><text x="17.4363%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.1863%" y="485" width="0.1599%" height="15" fill="rgb(221,83,32)" fg:x="215" fg:w="2"/><text x="17.4363%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.2662%" y="469" width="0.0799%" height="15" fill="rgb(233,49,54)" fg:x="216" fg:w="1"/><text x="17.5162%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2662%" y="453" width="0.0799%" height="15" fill="rgb(206,18,51)" fg:x="216" fg:w="1"/><text x="17.5162%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="17.3461%" y="501" width="0.0799%" height="15" fill="rgb(249,193,15)" fg:x="217" fg:w="1"/><text x="17.5961%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.3461%" y="485" width="0.0799%" height="15" fill="rgb(245,186,19)" fg:x="217" fg:w="1"/><text x="17.5961%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3461%" y="469" width="0.0799%" height="15" fill="rgb(230,4,24)" fg:x="217" fg:w="1"/><text x="17.5961%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.4261%" y="405" width="0.0799%" height="15" fill="rgb(234,75,27)" fg:x="218" fg:w="1"/><text x="17.6761%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4261%" y="389" width="0.0799%" height="15" fill="rgb(244,187,35)" fg:x="218" fg:w="1"/><text x="17.6761%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4261%" y="373" width="0.0799%" height="15" fill="rgb(241,97,43)" fg:x="218" fg:w="1"/><text x="17.6761%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4261%" y="357" width="0.0799%" height="15" fill="rgb(236,94,2)" fg:x="218" fg:w="1"/><text x="17.6761%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="17.4261%" y="437" width="0.1599%" height="15" fill="rgb(231,175,7)" fg:x="218" fg:w="2"/><text x="17.6761%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.4261%" y="421" width="0.1599%" height="15" fill="rgb(236,89,47)" fg:x="218" fg:w="2"/><text x="17.6761%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="17.5060%" y="405" width="0.0799%" height="15" fill="rgb(213,191,37)" fg:x="219" fg:w="1"/><text x="17.7560%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.5060%" y="389" width="0.0799%" height="15" fill="rgb(252,0,34)" fg:x="219" fg:w="1"/><text x="17.7560%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.5060%" y="373" width="0.0799%" height="15" fill="rgb(208,145,44)" fg:x="219" fg:w="1"/><text x="17.7560%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5060%" y="357" width="0.0799%" height="15" fill="rgb(227,95,50)" fg:x="219" fg:w="1"/><text x="17.7560%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="17.4261%" y="453" width="0.2398%" height="15" fill="rgb(222,136,24)" fg:x="218" fg:w="3"/><text x="17.6761%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.5859%" y="437" width="0.0799%" height="15" fill="rgb(218,105,10)" fg:x="220" fg:w="1"/><text x="17.8359%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.6659%" y="389" width="0.0799%" height="15" fill="rgb(216,65,28)" fg:x="221" fg:w="1"/><text x="17.9159%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7458%" y="373" width="0.0799%" height="15" fill="rgb(229,6,28)" fg:x="222" fg:w="1"/><text x="17.9958%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.7458%" y="357" width="0.0799%" height="15" fill="rgb(222,160,42)" fg:x="222" fg:w="1"/><text x="17.9958%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.7458%" y="341" width="0.0799%" height="15" fill="rgb(235,83,49)" fg:x="222" fg:w="1"/><text x="17.9958%" y="351.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="17.6659%" y="405" width="0.2398%" height="15" fill="rgb(236,86,36)" fg:x="221" fg:w="3"/><text x="17.9159%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.7458%" y="389" width="0.1599%" height="15" fill="rgb(236,19,41)" fg:x="222" fg:w="2"/><text x="17.9958%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.8257%" y="373" width="0.0799%" height="15" fill="rgb(217,71,31)" fg:x="223" fg:w="1"/><text x="18.0757%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.8257%" y="357" width="0.0799%" height="15" fill="rgb(236,209,25)" fg:x="223" fg:w="1"/><text x="18.0757%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.8257%" y="341" width="0.0799%" height="15" fill="rgb(247,104,21)" fg:x="223" fg:w="1"/><text x="18.0757%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="17.8257%" y="325" width="0.0799%" height="15" fill="rgb(243,80,38)" fg:x="223" fg:w="1"/><text x="18.0757%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.9057%" y="389" width="0.0799%" height="15" fill="rgb(232,109,38)" fg:x="224" fg:w="1"/><text x="18.1557%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9057%" y="373" width="0.0799%" height="15" fill="rgb(212,177,53)" fg:x="224" fg:w="1"/><text x="18.1557%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9057%" y="357" width="0.0799%" height="15" fill="rgb(227,30,34)" fg:x="224" fg:w="1"/><text x="18.1557%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.9057%" y="341" width="0.0799%" height="15" fill="rgb(205,175,25)" fg:x="224" fg:w="1"/><text x="18.1557%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.9057%" y="325" width="0.0799%" height="15" fill="rgb(249,39,54)" fg:x="224" fg:w="1"/><text x="18.1557%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.9057%" y="309" width="0.0799%" height="15" fill="rgb(215,54,37)" fg:x="224" fg:w="1"/><text x="18.1557%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9057%" y="293" width="0.0799%" height="15" fill="rgb(205,60,46)" fg:x="224" fg:w="1"/><text x="18.1557%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9057%" y="277" width="0.0799%" height="15" fill="rgb(238,89,29)" fg:x="224" fg:w="1"/><text x="18.1557%" y="287.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="17.6659%" y="437" width="0.3997%" height="15" fill="rgb(212,48,10)" fg:x="221" fg:w="5"/><text x="17.9159%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="17.6659%" y="421" width="0.3997%" height="15" fill="rgb(237,186,28)" fg:x="221" fg:w="5"/><text x="17.9159%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.9057%" y="405" width="0.1599%" height="15" fill="rgb(237,204,4)" fg:x="224" fg:w="2"/><text x="18.1557%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9856%" y="389" width="0.0799%" height="15" fill="rgb(237,15,47)" fg:x="225" fg:w="1"/><text x="18.2356%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.9856%" y="373" width="0.0799%" height="15" fill="rgb(244,110,25)" fg:x="225" fg:w="1"/><text x="18.2356%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="18.0655%" y="437" width="0.0799%" height="15" fill="rgb(241,12,16)" fg:x="226" fg:w="1"/><text x="18.3155%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="17.6659%" y="453" width="0.5596%" height="15" fill="rgb(235,25,9)" fg:x="221" fg:w="7"/><text x="17.9159%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1455%" y="437" width="0.0799%" height="15" fill="rgb(245,159,19)" fg:x="227" fg:w="1"/><text x="18.3955%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.1455%" y="421" width="0.0799%" height="15" fill="rgb(236,63,32)" fg:x="227" fg:w="1"/><text x="18.3955%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1455%" y="405" width="0.0799%" height="15" fill="rgb(235,32,52)" fg:x="227" fg:w="1"/><text x="18.3955%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2254%" y="421" width="0.0799%" height="15" fill="rgb(209,176,21)" fg:x="228" fg:w="1"/><text x="18.4754%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.2254%" y="437" width="0.1599%" height="15" fill="rgb(205,90,42)" fg:x="228" fg:w="2"/><text x="18.4754%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.3054%" y="421" width="0.0799%" height="15" fill="rgb(213,132,16)" fg:x="229" fg:w="1"/><text x="18.5554%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3054%" y="405" width="0.0799%" height="15" fill="rgb(232,11,22)" fg:x="229" fg:w="1"/><text x="18.5554%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3054%" y="389" width="0.0799%" height="15" fill="rgb(248,167,41)" fg:x="229" fg:w="1"/><text x="18.5554%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3054%" y="373" width="0.0799%" height="15" fill="rgb(209,127,6)" fg:x="229" fg:w="1"/><text x="18.5554%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.3054%" y="357" width="0.0799%" height="15" fill="rgb(246,210,34)" fg:x="229" fg:w="1"/><text x="18.5554%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.3054%" y="341" width="0.0799%" height="15" fill="rgb(238,165,13)" fg:x="229" fg:w="1"/><text x="18.5554%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.3054%" y="325" width="0.0799%" height="15" fill="rgb(233,98,15)" fg:x="229" fg:w="1"/><text x="18.5554%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.3054%" y="309" width="0.0799%" height="15" fill="rgb(215,215,51)" fg:x="229" fg:w="1"/><text x="18.5554%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.3054%" y="293" width="0.0799%" height="15" fill="rgb(217,161,25)" fg:x="229" fg:w="1"/><text x="18.5554%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="18.2254%" y="453" width="0.2398%" height="15" fill="rgb(217,167,48)" fg:x="228" fg:w="3"/><text x="18.4754%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="18.3853%" y="437" width="0.0799%" height="15" fill="rgb(205,163,34)" fg:x="230" fg:w="1"/><text x="18.6353%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.3853%" y="421" width="0.0799%" height="15" fill="rgb(241,197,31)" fg:x="230" fg:w="1"/><text x="18.6353%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3853%" y="405" width="0.0799%" height="15" fill="rgb(225,123,11)" fg:x="230" fg:w="1"/><text x="18.6353%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.3853%" y="389" width="0.0799%" height="15" fill="rgb(217,4,20)" fg:x="230" fg:w="1"/><text x="18.6353%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3853%" y="373" width="0.0799%" height="15" fill="rgb(215,55,9)" fg:x="230" fg:w="1"/><text x="18.6353%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3853%" y="357" width="0.0799%" height="15" fill="rgb(218,165,5)" fg:x="230" fg:w="1"/><text x="18.6353%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.4652%" y="389" width="0.0799%" height="15" fill="rgb(222,175,15)" fg:x="231" fg:w="1"/><text x="18.7152%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.4652%" y="373" width="0.0799%" height="15" fill="rgb(223,85,34)" fg:x="231" fg:w="1"/><text x="18.7152%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4652%" y="357" width="0.0799%" height="15" fill="rgb(234,228,29)" fg:x="231" fg:w="1"/><text x="18.7152%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4652%" y="341" width="0.0799%" height="15" fill="rgb(239,7,28)" fg:x="231" fg:w="1"/><text x="18.7152%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.4652%" y="325" width="0.0799%" height="15" fill="rgb(252,222,53)" fg:x="231" fg:w="1"/><text x="18.7152%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.4652%" y="309" width="0.0799%" height="15" fill="rgb(232,146,44)" fg:x="231" fg:w="1"/><text x="18.7152%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.4652%" y="293" width="0.0799%" height="15" fill="rgb(243,223,53)" fg:x="231" fg:w="1"/><text x="18.7152%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.4652%" y="277" width="0.0799%" height="15" fill="rgb(219,128,25)" fg:x="231" fg:w="1"/><text x="18.7152%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.4652%" y="261" width="0.0799%" height="15" fill="rgb(223,56,32)" fg:x="231" fg:w="1"/><text x="18.7152%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.4652%" y="245" width="0.0799%" height="15" fill="rgb(237,41,3)" fg:x="231" fg:w="1"/><text x="18.7152%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.4652%" y="229" width="0.0799%" height="15" fill="rgb(235,138,9)" fg:x="231" fg:w="1"/><text x="18.7152%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.4652%" y="213" width="0.0799%" height="15" fill="rgb(214,131,10)" fg:x="231" fg:w="1"/><text x="18.7152%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.4652%" y="197" width="0.0799%" height="15" fill="rgb(229,89,7)" fg:x="231" fg:w="1"/><text x="18.7152%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4652%" y="181" width="0.0799%" height="15" fill="rgb(240,24,42)" fg:x="231" fg:w="1"/><text x="18.7152%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5452%" y="389" width="0.0799%" height="15" fill="rgb(243,188,54)" fg:x="232" fg:w="1"/><text x="18.7952%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="18.4652%" y="421" width="0.2398%" height="15" fill="rgb(246,92,22)" fg:x="231" fg:w="3"/><text x="18.7152%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.4652%" y="405" width="0.2398%" height="15" fill="rgb(211,176,51)" fg:x="231" fg:w="3"/><text x="18.7152%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.6251%" y="389" width="0.0799%" height="15" fill="rgb(246,207,34)" fg:x="233" fg:w="1"/><text x="18.8751%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.6251%" y="373" width="0.0799%" height="15" fill="rgb(239,95,2)" fg:x="233" fg:w="1"/><text x="18.8751%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.6251%" y="357" width="0.0799%" height="15" fill="rgb(211,124,25)" fg:x="233" fg:w="1"/><text x="18.8751%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.6251%" y="341" width="0.0799%" height="15" fill="rgb(231,221,19)" fg:x="233" fg:w="1"/><text x="18.8751%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.6251%" y="325" width="0.0799%" height="15" fill="rgb(239,183,19)" fg:x="233" fg:w="1"/><text x="18.8751%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.36%)</title><rect x="17.4261%" y="469" width="1.3589%" height="15" fill="rgb(221,130,29)" fg:x="218" fg:w="17"/><text x="17.6761%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="18.4652%" y="453" width="0.3197%" height="15" fill="rgb(206,130,36)" fg:x="231" fg:w="4"/><text x="18.7152%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="18.4652%" y="437" width="0.3197%" height="15" fill="rgb(215,70,19)" fg:x="231" fg:w="4"/><text x="18.7152%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="18.7050%" y="421" width="0.0799%" height="15" fill="rgb(244,16,43)" fg:x="234" fg:w="1"/><text x="18.9550%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.7050%" y="405" width="0.0799%" height="15" fill="rgb(222,115,32)" fg:x="234" fg:w="1"/><text x="18.9550%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7050%" y="389" width="0.0799%" height="15" fill="rgb(247,48,25)" fg:x="234" fg:w="1"/><text x="18.9550%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7050%" y="373" width="0.0799%" height="15" fill="rgb(226,180,51)" fg:x="234" fg:w="1"/><text x="18.9550%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.7050%" y="357" width="0.0799%" height="15" fill="rgb(217,142,42)" fg:x="234" fg:w="1"/><text x="18.9550%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7050%" y="341" width="0.0799%" height="15" fill="rgb(220,178,3)" fg:x="234" fg:w="1"/><text x="18.9550%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7050%" y="325" width="0.0799%" height="15" fill="rgb(217,221,4)" fg:x="234" fg:w="1"/><text x="18.9550%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7050%" y="309" width="0.0799%" height="15" fill="rgb(237,63,43)" fg:x="234" fg:w="1"/><text x="18.9550%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.7050%" y="293" width="0.0799%" height="15" fill="rgb(220,57,8)" fg:x="234" fg:w="1"/><text x="18.9550%" y="303.50"></text></g><g><title>plugins_core::build::Build::into_entry (18 samples, 1.44%)</title><rect x="17.4261%" y="485" width="1.4388%" height="15" fill="rgb(254,186,27)" fg:x="218" fg:w="18"/><text x="17.6761%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.7850%" y="469" width="0.0799%" height="15" fill="rgb(251,57,28)" fg:x="235" fg:w="1"/><text x="19.0350%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.7850%" y="453" width="0.0799%" height="15" fill="rgb(215,228,0)" fg:x="235" fg:w="1"/><text x="19.0350%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.7850%" y="437" width="0.0799%" height="15" fill="rgb(237,218,39)" fg:x="235" fg:w="1"/><text x="19.0350%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.7850%" y="421" width="0.0799%" height="15" fill="rgb(207,2,54)" fg:x="235" fg:w="1"/><text x="19.0350%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.7850%" y="405" width="0.0799%" height="15" fill="rgb(232,76,50)" fg:x="235" fg:w="1"/><text x="19.0350%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.7850%" y="389" width="0.0799%" height="15" fill="rgb(211,85,31)" fg:x="235" fg:w="1"/><text x="19.0350%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="18.8649%" y="469" width="0.0799%" height="15" fill="rgb(223,210,27)" fg:x="236" fg:w="1"/><text x="19.1149%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="18.8649%" y="453" width="0.0799%" height="15" fill="rgb(254,36,8)" fg:x="236" fg:w="1"/><text x="19.1149%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.8649%" y="437" width="0.0799%" height="15" fill="rgb(213,4,25)" fg:x="236" fg:w="1"/><text x="19.1149%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.8649%" y="421" width="0.0799%" height="15" fill="rgb(224,2,39)" fg:x="236" fg:w="1"/><text x="19.1149%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.8649%" y="405" width="0.0799%" height="15" fill="rgb(208,8,39)" fg:x="236" fg:w="1"/><text x="19.1149%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.8649%" y="389" width="0.0799%" height="15" fill="rgb(216,226,3)" fg:x="236" fg:w="1"/><text x="19.1149%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.8649%" y="373" width="0.0799%" height="15" fill="rgb(249,139,31)" fg:x="236" fg:w="1"/><text x="19.1149%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.8649%" y="357" width="0.0799%" height="15" fill="rgb(242,170,35)" fg:x="236" fg:w="1"/><text x="19.1149%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (21 samples, 1.68%)</title><rect x="17.3461%" y="549" width="1.6787%" height="15" fill="rgb(238,14,9)" fg:x="217" fg:w="21"/><text x="17.5961%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 1.68%)</title><rect x="17.3461%" y="533" width="1.6787%" height="15" fill="rgb(251,81,46)" fg:x="217" fg:w="21"/><text x="17.5961%" y="543.50"></text></g><g><title>plugins_core::build::QuickThing::make (21 samples, 1.68%)</title><rect x="17.3461%" y="517" width="1.6787%" height="15" fill="rgb(230,23,4)" fg:x="217" fg:w="21"/><text x="17.5961%" y="527.50"></text></g><g><title>plugins_core::build::Build::leads_to (20 samples, 1.60%)</title><rect x="17.4261%" y="501" width="1.5987%" height="15" fill="rgb(211,85,25)" fg:x="218" fg:w="20"/><text x="17.6761%" y="511.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="18.8649%" y="485" width="0.1599%" height="15" fill="rgb(252,23,31)" fg:x="236" fg:w="2"/><text x="19.1149%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.9448%" y="469" width="0.0799%" height="15" fill="rgb(234,163,38)" fg:x="237" fg:w="1"/><text x="19.1948%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9448%" y="453" width="0.0799%" height="15" fill="rgb(210,190,50)" fg:x="237" fg:w="1"/><text x="19.1948%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9448%" y="437" width="0.0799%" height="15" fill="rgb(228,158,3)" fg:x="237" fg:w="1"/><text x="19.1948%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9448%" y="421" width="0.0799%" height="15" fill="rgb(216,130,0)" fg:x="237" fg:w="1"/><text x="19.1948%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9448%" y="405" width="0.0799%" height="15" fill="rgb(224,184,10)" fg:x="237" fg:w="1"/><text x="19.1948%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9448%" y="389" width="0.0799%" height="15" fill="rgb(214,202,18)" fg:x="237" fg:w="1"/><text x="19.1948%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9448%" y="373" width="0.0799%" height="15" fill="rgb(213,229,54)" fg:x="237" fg:w="1"/><text x="19.1948%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0248%" y="517" width="0.0799%" height="15" fill="rgb(246,120,0)" fg:x="238" fg:w="1"/><text x="19.2748%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0248%" y="501" width="0.0799%" height="15" fill="rgb(237,6,15)" fg:x="238" fg:w="1"/><text x="19.2748%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.0248%" y="485" width="0.0799%" height="15" fill="rgb(252,156,15)" fg:x="238" fg:w="1"/><text x="19.2748%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.0248%" y="469" width="0.0799%" height="15" fill="rgb(249,78,18)" fg:x="238" fg:w="1"/><text x="19.2748%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.0248%" y="453" width="0.0799%" height="15" fill="rgb(230,223,44)" fg:x="238" fg:w="1"/><text x="19.2748%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0248%" y="437" width="0.0799%" height="15" fill="rgb(230,222,32)" fg:x="238" fg:w="1"/><text x="19.2748%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0248%" y="421" width="0.0799%" height="15" fill="rgb(247,54,6)" fg:x="238" fg:w="1"/><text x="19.2748%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.0248%" y="405" width="0.0799%" height="15" fill="rgb(247,115,45)" fg:x="238" fg:w="1"/><text x="19.2748%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.0248%" y="389" width="0.0799%" height="15" fill="rgb(213,203,37)" fg:x="238" fg:w="1"/><text x="19.2748%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.0248%" y="373" width="0.0799%" height="15" fill="rgb(248,188,18)" fg:x="238" fg:w="1"/><text x="19.2748%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.0248%" y="357" width="0.0799%" height="15" fill="rgb(206,80,8)" fg:x="238" fg:w="1"/><text x="19.2748%" y="367.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="19.0248%" y="533" width="0.1599%" height="15" fill="rgb(245,217,31)" fg:x="238" fg:w="2"/><text x="19.2748%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.1047%" y="517" width="0.0799%" height="15" fill="rgb(220,193,15)" fg:x="239" fg:w="1"/><text x="19.3547%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.1047%" y="501" width="0.0799%" height="15" fill="rgb(226,7,19)" fg:x="239" fg:w="1"/><text x="19.3547%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="19.1047%" y="485" width="0.0799%" height="15" fill="rgb(222,145,31)" fg:x="239" fg:w="1"/><text x="19.3547%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.1847%" y="485" width="0.0799%" height="15" fill="rgb(241,193,36)" fg:x="240" fg:w="1"/><text x="19.4347%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.1847%" y="469" width="0.0799%" height="15" fill="rgb(225,123,33)" fg:x="240" fg:w="1"/><text x="19.4347%" y="479.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="19.1847%" y="453" width="0.0799%" height="15" fill="rgb(246,136,38)" fg:x="240" fg:w="1"/><text x="19.4347%" y="463.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="19.1847%" y="437" width="0.0799%" height="15" fill="rgb(243,56,24)" fg:x="240" fg:w="1"/><text x="19.4347%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.2646%" y="373" width="0.0799%" height="15" fill="rgb(215,147,2)" fg:x="241" fg:w="1"/><text x="19.5146%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.2646%" y="357" width="0.0799%" height="15" fill="rgb(209,155,27)" fg:x="241" fg:w="1"/><text x="19.5146%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.2646%" y="341" width="0.0799%" height="15" fill="rgb(222,177,11)" fg:x="241" fg:w="1"/><text x="19.5146%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.2646%" y="325" width="0.0799%" height="15" fill="rgb(212,227,15)" fg:x="241" fg:w="1"/><text x="19.5146%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="19.2646%" y="389" width="0.1599%" height="15" fill="rgb(214,138,20)" fg:x="241" fg:w="2"/><text x="19.5146%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.3445%" y="373" width="0.0799%" height="15" fill="rgb(221,170,31)" fg:x="242" fg:w="1"/><text x="19.5945%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.3445%" y="357" width="0.0799%" height="15" fill="rgb(253,207,5)" fg:x="242" fg:w="1"/><text x="19.5945%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.4245%" y="373" width="0.1599%" height="15" fill="rgb(212,64,37)" fg:x="243" fg:w="2"/><text x="19.6745%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.5044%" y="357" width="0.0799%" height="15" fill="rgb(208,113,51)" fg:x="244" fg:w="1"/><text x="19.7544%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.5843%" y="357" width="0.0799%" height="15" fill="rgb(237,15,5)" fg:x="245" fg:w="1"/><text x="19.8343%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.5843%" y="341" width="0.0799%" height="15" fill="rgb(238,33,18)" fg:x="245" fg:w="1"/><text x="19.8343%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.5843%" y="325" width="0.0799%" height="15" fill="rgb(253,206,50)" fg:x="245" fg:w="1"/><text x="19.8343%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.5843%" y="309" width="0.0799%" height="15" fill="rgb(242,158,43)" fg:x="245" fg:w="1"/><text x="19.8343%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.6643%" y="357" width="0.1599%" height="15" fill="rgb(213,125,27)" fg:x="246" fg:w="2"/><text x="19.9143%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.6643%" y="341" width="0.1599%" height="15" fill="rgb(233,161,31)" fg:x="246" fg:w="2"/><text x="19.9143%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.7442%" y="325" width="0.0799%" height="15" fill="rgb(218,135,6)" fg:x="247" fg:w="1"/><text x="19.9942%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7442%" y="309" width="0.0799%" height="15" fill="rgb(222,73,53)" fg:x="247" fg:w="1"/><text x="19.9942%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (8 samples, 0.64%)</title><rect x="19.2646%" y="405" width="0.6395%" height="15" fill="rgb(229,66,53)" fg:x="241" fg:w="8"/><text x="19.5146%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="19.4245%" y="389" width="0.4796%" height="15" fill="rgb(208,128,19)" fg:x="243" fg:w="6"/><text x="19.6745%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="19.5843%" y="373" width="0.3197%" height="15" fill="rgb(235,70,27)" fg:x="245" fg:w="4"/><text x="19.8343%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.8241%" y="357" width="0.0799%" height="15" fill="rgb(241,130,30)" fg:x="248" fg:w="1"/><text x="20.0741%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.8241%" y="341" width="0.0799%" height="15" fill="rgb(222,57,48)" fg:x="248" fg:w="1"/><text x="20.0741%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8241%" y="325" width="0.0799%" height="15" fill="rgb(225,204,29)" fg:x="248" fg:w="1"/><text x="20.0741%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.9041%" y="405" width="0.1599%" height="15" fill="rgb(240,196,35)" fg:x="249" fg:w="2"/><text x="20.1541%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9840%" y="389" width="0.0799%" height="15" fill="rgb(215,150,16)" fg:x="250" fg:w="1"/><text x="20.2340%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9840%" y="373" width="0.0799%" height="15" fill="rgb(209,170,13)" fg:x="250" fg:w="1"/><text x="20.2340%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9840%" y="357" width="0.0799%" height="15" fill="rgb(235,75,31)" fg:x="250" fg:w="1"/><text x="20.2340%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9840%" y="341" width="0.0799%" height="15" fill="rgb(252,1,47)" fg:x="250" fg:w="1"/><text x="20.2340%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9840%" y="325" width="0.0799%" height="15" fill="rgb(241,2,36)" fg:x="250" fg:w="1"/><text x="20.2340%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.9840%" y="309" width="0.0799%" height="15" fill="rgb(236,191,4)" fg:x="250" fg:w="1"/><text x="20.2340%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="20.0639%" y="373" width="0.0799%" height="15" fill="rgb(212,65,35)" fg:x="251" fg:w="1"/><text x="20.3139%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0639%" y="357" width="0.0799%" height="15" fill="rgb(209,49,33)" fg:x="251" fg:w="1"/><text x="20.3139%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="20.0639%" y="389" width="0.1599%" height="15" fill="rgb(208,36,46)" fg:x="251" fg:w="2"/><text x="20.3139%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.1439%" y="373" width="0.0799%" height="15" fill="rgb(210,125,2)" fg:x="252" fg:w="1"/><text x="20.3939%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3837%" y="357" width="0.0799%" height="15" fill="rgb(225,62,6)" fg:x="255" fg:w="1"/><text x="20.6337%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.3837%" y="341" width="0.0799%" height="15" fill="rgb(210,54,27)" fg:x="255" fg:w="1"/><text x="20.6337%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="20.5436%" y="325" width="0.0799%" height="15" fill="rgb(249,189,52)" fg:x="257" fg:w="1"/><text x="20.7936%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6235%" y="309" width="0.0799%" height="15" fill="rgb(225,134,40)" fg:x="258" fg:w="1"/><text x="20.8735%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6235%" y="293" width="0.0799%" height="15" fill="rgb(206,13,37)" fg:x="258" fg:w="1"/><text x="20.8735%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6235%" y="277" width="0.0799%" height="15" fill="rgb(232,114,28)" fg:x="258" fg:w="1"/><text x="20.8735%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.52%)</title><rect x="19.2646%" y="437" width="1.5188%" height="15" fill="rgb(253,215,8)" fg:x="241" fg:w="19"/><text x="19.5146%" y="447.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (19 samples, 1.52%)</title><rect x="19.2646%" y="421" width="1.5188%" height="15" fill="rgb(254,64,19)" fg:x="241" fg:w="19"/><text x="19.5146%" y="431.50"></text></g><g><title>kernel::model::any_entity_changes (9 samples, 0.72%)</title><rect x="20.0639%" y="405" width="0.7194%" height="15" fill="rgb(242,18,46)" fg:x="251" fg:w="9"/><text x="20.3139%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="20.2238%" y="389" width="0.5596%" height="15" fill="rgb(239,192,30)" fg:x="253" fg:w="7"/><text x="20.4738%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="20.2238%" y="373" width="0.5596%" height="15" fill="rgb(232,73,14)" fg:x="253" fg:w="7"/><text x="20.4738%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="20.4636%" y="357" width="0.3197%" height="15" fill="rgb(225,51,9)" fg:x="256" fg:w="4"/><text x="20.7136%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="20.4636%" y="341" width="0.3197%" height="15" fill="rgb(242,217,54)" fg:x="256" fg:w="4"/><text x="20.7136%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="20.6235%" y="325" width="0.1599%" height="15" fill="rgb(216,93,3)" fg:x="258" fg:w="2"/><text x="20.8735%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.7034%" y="309" width="0.0799%" height="15" fill="rgb(230,119,33)" fg:x="259" fg:w="1"/><text x="20.9534%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="20.7034%" y="293" width="0.0799%" height="15" fill="rgb(238,170,27)" fg:x="259" fg:w="1"/><text x="20.9534%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.7034%" y="277" width="0.0799%" height="15" fill="rgb(229,8,2)" fg:x="259" fg:w="1"/><text x="20.9534%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.7034%" y="261" width="0.0799%" height="15" fill="rgb(205,214,42)" fg:x="259" fg:w="1"/><text x="20.9534%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="20.7834%" y="421" width="0.0799%" height="15" fill="rgb(245,113,1)" fg:x="260" fg:w="1"/><text x="21.0334%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="20.7834%" y="405" width="0.0799%" height="15" fill="rgb(252,50,2)" fg:x="260" fg:w="1"/><text x="21.0334%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.7834%" y="389" width="0.0799%" height="15" fill="rgb(225,122,24)" fg:x="260" fg:w="1"/><text x="21.0334%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.7834%" y="373" width="0.0799%" height="15" fill="rgb(234,129,31)" fg:x="260" fg:w="1"/><text x="21.0334%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.7834%" y="357" width="0.0799%" height="15" fill="rgb(219,177,4)" fg:x="260" fg:w="1"/><text x="21.0334%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.7834%" y="341" width="0.0799%" height="15" fill="rgb(225,142,27)" fg:x="260" fg:w="1"/><text x="21.0334%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.8633%" y="405" width="0.0799%" height="15" fill="rgb(205,107,51)" fg:x="261" fg:w="1"/><text x="21.1133%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="20.9432%" y="389" width="0.3997%" height="15" fill="rgb(236,223,15)" fg:x="262" fg:w="5"/><text x="21.1932%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="21.0232%" y="373" width="0.3197%" height="15" fill="rgb(235,133,11)" fg:x="263" fg:w="4"/><text x="21.2732%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="20.9432%" y="405" width="0.4796%" height="15" fill="rgb(247,172,13)" fg:x="262" fg:w="6"/><text x="21.1932%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.3429%" y="389" width="0.0799%" height="15" fill="rgb(233,191,41)" fg:x="267" fg:w="1"/><text x="21.5929%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.3429%" y="373" width="0.0799%" height="15" fill="rgb(250,65,16)" fg:x="267" fg:w="1"/><text x="21.5929%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.4229%" y="389" width="0.0799%" height="15" fill="rgb(206,10,27)" fg:x="268" fg:w="1"/><text x="21.6729%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.4229%" y="373" width="0.0799%" height="15" fill="rgb(212,96,22)" fg:x="268" fg:w="1"/><text x="21.6729%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="21.5028%" y="389" width="0.1599%" height="15" fill="rgb(206,50,0)" fg:x="269" fg:w="2"/><text x="21.7528%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.5827%" y="373" width="0.0799%" height="15" fill="rgb(249,105,52)" fg:x="270" fg:w="1"/><text x="21.8327%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.7426%" y="341" width="0.0799%" height="15" fill="rgb(216,93,51)" fg:x="272" fg:w="1"/><text x="21.9926%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="21.8225%" y="341" width="0.0799%" height="15" fill="rgb(217,172,13)" fg:x="273" fg:w="1"/><text x="22.0725%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="21.8225%" y="325" width="0.0799%" height="15" fill="rgb(235,199,38)" fg:x="273" fg:w="1"/><text x="22.0725%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.8225%" y="309" width="0.0799%" height="15" fill="rgb(221,97,33)" fg:x="273" fg:w="1"/><text x="22.0725%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="21.7426%" y="373" width="0.3197%" height="15" fill="rgb(205,156,50)" fg:x="272" fg:w="4"/><text x="21.9926%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="21.7426%" y="357" width="0.3197%" height="15" fill="rgb(215,142,19)" fg:x="272" fg:w="4"/><text x="21.9926%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.9025%" y="341" width="0.1599%" height="15" fill="rgb(232,170,7)" fg:x="274" fg:w="2"/><text x="22.1525%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.9824%" y="325" width="0.0799%" height="15" fill="rgb(223,50,17)" fg:x="275" fg:w="1"/><text x="22.2324%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.9824%" y="309" width="0.0799%" height="15" fill="rgb(230,103,46)" fg:x="275" fg:w="1"/><text x="22.2324%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="22.0624%" y="373" width="0.1599%" height="15" fill="rgb(254,30,34)" fg:x="276" fg:w="2"/><text x="22.3124%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.0624%" y="357" width="0.1599%" height="15" fill="rgb(235,198,1)" fg:x="276" fg:w="2"/><text x="22.3124%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.1423%" y="341" width="0.0799%" height="15" fill="rgb(217,105,47)" fg:x="277" fg:w="1"/><text x="22.3923%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.1423%" y="325" width="0.0799%" height="15" fill="rgb(231,18,12)" fg:x="277" fg:w="1"/><text x="22.3923%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="22.2222%" y="357" width="0.1599%" height="15" fill="rgb(218,196,1)" fg:x="278" fg:w="2"/><text x="22.4722%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="22.3821%" y="341" width="0.3997%" height="15" fill="rgb(210,32,3)" fg:x="280" fg:w="5"/><text x="22.6321%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="22.5420%" y="325" width="0.2398%" height="15" fill="rgb(227,178,30)" fg:x="282" fg:w="3"/><text x="22.7920%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.6219%" y="309" width="0.1599%" height="15" fill="rgb(231,140,27)" fg:x="283" fg:w="2"/><text x="22.8719%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.7018%" y="293" width="0.0799%" height="15" fill="rgb(206,66,35)" fg:x="284" fg:w="1"/><text x="22.9518%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="22.7818%" y="325" width="0.0799%" height="15" fill="rgb(212,34,2)" fg:x="285" fg:w="1"/><text x="23.0318%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="22.7818%" y="341" width="0.1599%" height="15" fill="rgb(207,201,33)" fg:x="285" fg:w="2"/><text x="23.0318%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.8617%" y="325" width="0.0799%" height="15" fill="rgb(221,135,32)" fg:x="286" fg:w="1"/><text x="23.1117%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="22.3821%" y="357" width="0.6395%" height="15" fill="rgb(206,77,31)" fg:x="280" fg:w="8"/><text x="22.6321%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.9416%" y="341" width="0.0799%" height="15" fill="rgb(252,198,50)" fg:x="287" fg:w="1"/><text x="23.1916%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.9416%" y="325" width="0.0799%" height="15" fill="rgb(206,79,27)" fg:x="287" fg:w="1"/><text x="23.1916%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="22.9416%" y="309" width="0.0799%" height="15" fill="rgb(228,108,9)" fg:x="287" fg:w="1"/><text x="23.1916%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="22.2222%" y="373" width="1.0392%" height="15" fill="rgb(213,9,39)" fg:x="278" fg:w="13"/><text x="22.4722%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="23.0216%" y="357" width="0.2398%" height="15" fill="rgb(252,51,13)" fg:x="288" fg:w="3"/><text x="23.2716%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="23.0216%" y="341" width="0.2398%" height="15" fill="rgb(218,202,39)" fg:x="288" fg:w="3"/><text x="23.2716%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="23.0216%" y="325" width="0.2398%" height="15" fill="rgb(214,122,21)" fg:x="288" fg:w="3"/><text x="23.2716%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="21.6627%" y="389" width="1.6787%" height="15" fill="rgb(217,205,48)" fg:x="271" fg:w="21"/><text x="21.9127%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.2614%" y="373" width="0.0799%" height="15" fill="rgb(230,216,13)" fg:x="291" fg:w="1"/><text x="23.5114%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.2614%" y="357" width="0.0799%" height="15" fill="rgb(249,118,4)" fg:x="291" fg:w="1"/><text x="23.5114%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.2614%" y="341" width="0.0799%" height="15" fill="rgb(212,207,40)" fg:x="291" fg:w="1"/><text x="23.5114%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (38 samples, 3.04%)</title><rect x="20.8633%" y="421" width="3.0376%" height="15" fill="rgb(217,156,26)" fg:x="261" fg:w="38"/><text x="21.1133%" y="431.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.48%)</title><rect x="21.4229%" y="405" width="2.4780%" height="15" fill="rgb(226,86,34)" fg:x="268" fg:w="31"/><text x="21.6729%" y="415.50">se..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="23.3413%" y="389" width="0.5596%" height="15" fill="rgb(217,111,30)" fg:x="292" fg:w="7"/><text x="23.5913%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="23.5012%" y="373" width="0.3997%" height="15" fill="rgb(228,64,18)" fg:x="294" fg:w="5"/><text x="23.7512%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="23.5811%" y="357" width="0.3197%" height="15" fill="rgb(254,217,48)" fg:x="295" fg:w="4"/><text x="23.8311%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="23.7410%" y="341" width="0.1599%" height="15" fill="rgb(226,156,48)" fg:x="297" fg:w="2"/><text x="23.9910%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="23.7410%" y="325" width="0.1599%" height="15" fill="rgb(236,168,20)" fg:x="297" fg:w="2"/><text x="23.9910%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="23.7410%" y="309" width="0.1599%" height="15" fill="rgb(239,210,33)" fg:x="297" fg:w="2"/><text x="23.9910%" y="319.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="24.0608%" y="373" width="0.2398%" height="15" fill="rgb(242,85,17)" fg:x="301" fg:w="3"/><text x="24.3108%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.3006%" y="373" width="0.0799%" height="15" fill="rgb(221,196,15)" fg:x="304" fg:w="1"/><text x="24.5506%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.3805%" y="357" width="0.0799%" height="15" fill="rgb(249,76,21)" fg:x="305" fg:w="1"/><text x="24.6305%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="23.9009%" y="421" width="0.7194%" height="15" fill="rgb(243,67,29)" fg:x="299" fg:w="9"/><text x="24.1509%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="23.9009%" y="405" width="0.7194%" height="15" fill="rgb(240,159,2)" fg:x="299" fg:w="9"/><text x="24.1509%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="23.9808%" y="389" width="0.6395%" height="15" fill="rgb(244,64,3)" fg:x="300" fg:w="8"/><text x="24.2308%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="24.3805%" y="373" width="0.2398%" height="15" fill="rgb(220,86,40)" fg:x="305" fg:w="3"/><text x="24.6305%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.4604%" y="357" width="0.1599%" height="15" fill="rgb(222,194,51)" fg:x="306" fg:w="2"/><text x="24.7104%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.5404%" y="341" width="0.0799%" height="15" fill="rgb(207,154,19)" fg:x="307" fg:w="1"/><text x="24.7904%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="24.6203%" y="405" width="0.1599%" height="15" fill="rgb(206,178,36)" fg:x="308" fg:w="2"/><text x="24.8703%" y="415.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="24.7002%" y="389" width="0.0799%" height="15" fill="rgb(218,8,24)" fg:x="309" fg:w="1"/><text x="24.9502%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="24.7002%" y="373" width="0.0799%" height="15" fill="rgb(226,83,41)" fg:x="309" fg:w="1"/><text x="24.9502%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.7002%" y="357" width="0.0799%" height="15" fill="rgb(224,23,22)" fg:x="309" fg:w="1"/><text x="24.9502%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7802%" y="373" width="0.0799%" height="15" fill="rgb(218,198,45)" fg:x="310" fg:w="1"/><text x="25.0302%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8601%" y="373" width="0.0799%" height="15" fill="rgb(249,147,41)" fg:x="311" fg:w="1"/><text x="25.1101%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="24.9400%" y="373" width="0.0799%" height="15" fill="rgb(244,224,13)" fg:x="312" fg:w="1"/><text x="25.1900%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.9400%" y="357" width="0.0799%" height="15" fill="rgb(225,97,27)" fg:x="312" fg:w="1"/><text x="25.1900%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9400%" y="341" width="0.0799%" height="15" fill="rgb(254,64,0)" fg:x="312" fg:w="1"/><text x="25.1900%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9400%" y="325" width="0.0799%" height="15" fill="rgb(208,130,43)" fg:x="312" fg:w="1"/><text x="25.1900%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="24.9400%" y="309" width="0.0799%" height="15" fill="rgb(247,91,25)" fg:x="312" fg:w="1"/><text x="25.1900%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="24.9400%" y="293" width="0.0799%" height="15" fill="rgb(215,218,42)" fg:x="312" fg:w="1"/><text x="25.1900%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.0200%" y="357" width="0.0799%" height="15" fill="rgb(233,9,24)" fg:x="313" fg:w="1"/><text x="25.2700%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0200%" y="341" width="0.0799%" height="15" fill="rgb(252,105,38)" fg:x="313" fg:w="1"/><text x="25.2700%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="25.0200%" y="373" width="0.1599%" height="15" fill="rgb(225,40,49)" fg:x="313" fg:w="2"/><text x="25.2700%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="25.0999%" y="357" width="0.0799%" height="15" fill="rgb(232,196,19)" fg:x="314" fg:w="1"/><text x="25.3499%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2598%" y="325" width="0.0799%" height="15" fill="rgb(207,35,15)" fg:x="316" fg:w="1"/><text x="25.5098%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.2598%" y="357" width="0.1599%" height="15" fill="rgb(238,68,36)" fg:x="316" fg:w="2"/><text x="25.5098%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.2598%" y="341" width="0.1599%" height="15" fill="rgb(205,158,20)" fg:x="316" fg:w="2"/><text x="25.5098%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.3397%" y="325" width="0.0799%" height="15" fill="rgb(232,32,22)" fg:x="317" fg:w="1"/><text x="25.5897%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.6595%" y="341" width="0.0799%" height="15" fill="rgb(210,169,6)" fg:x="321" fg:w="1"/><text x="25.9095%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="25.8193%" y="325" width="0.3197%" height="15" fill="rgb(229,28,12)" fg:x="323" fg:w="4"/><text x="26.0693%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.9792%" y="309" width="0.1599%" height="15" fill="rgb(229,78,10)" fg:x="325" fg:w="2"/><text x="26.2292%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.9792%" y="293" width="0.1599%" height="15" fill="rgb(223,139,54)" fg:x="325" fg:w="2"/><text x="26.2292%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="26.1391%" y="325" width="0.1599%" height="15" fill="rgb(207,110,4)" fg:x="327" fg:w="2"/><text x="26.3891%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="26.1391%" y="309" width="0.1599%" height="15" fill="rgb(248,30,41)" fg:x="327" fg:w="2"/><text x="26.3891%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="26.1391%" y="293" width="0.1599%" height="15" fill="rgb(235,54,25)" fg:x="327" fg:w="2"/><text x="26.3891%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.1391%" y="277" width="0.1599%" height="15" fill="rgb(213,107,41)" fg:x="327" fg:w="2"/><text x="26.3891%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.2190%" y="261" width="0.0799%" height="15" fill="rgb(237,102,9)" fg:x="328" fg:w="1"/><text x="26.4690%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.5388%" y="293" width="0.0799%" height="15" fill="rgb(252,137,49)" fg:x="332" fg:w="1"/><text x="26.7888%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.5388%" y="277" width="0.0799%" height="15" fill="rgb(233,202,33)" fg:x="332" fg:w="1"/><text x="26.7888%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5388%" y="261" width="0.0799%" height="15" fill="rgb(223,14,51)" fg:x="332" fg:w="1"/><text x="26.7888%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.6986%" y="277" width="0.0799%" height="15" fill="rgb(248,70,23)" fg:x="334" fg:w="1"/><text x="26.9486%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="26.7786%" y="277" width="0.0799%" height="15" fill="rgb(209,207,47)" fg:x="335" fg:w="1"/><text x="27.0286%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="26.8585%" y="277" width="0.0799%" height="15" fill="rgb(245,124,2)" fg:x="336" fg:w="1"/><text x="27.1085%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="25.7394%" y="341" width="1.2790%" height="15" fill="rgb(249,208,11)" fg:x="322" fg:w="16"/><text x="25.9894%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="26.2990%" y="325" width="0.7194%" height="15" fill="rgb(247,112,7)" fg:x="329" fg:w="9"/><text x="26.5490%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="26.4588%" y="309" width="0.5596%" height="15" fill="rgb(209,192,31)" fg:x="331" fg:w="7"/><text x="26.7088%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="26.6187%" y="293" width="0.3997%" height="15" fill="rgb(236,55,19)" fg:x="333" fg:w="5"/><text x="26.8687%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9384%" y="277" width="0.0799%" height="15" fill="rgb(252,89,41)" fg:x="337" fg:w="1"/><text x="27.1884%" y="287.50"></text></g><g><title>engine::session::Session::flush (101 samples, 8.07%)</title><rect x="19.0248%" y="549" width="8.0735%" height="15" fill="rgb(220,172,14)" fg:x="238" fg:w="101"/><text x="19.2748%" y="559.50">engine::ses..</text></g><g><title>engine::session::Session::save_changes (99 samples, 7.91%)</title><rect x="19.1847%" y="533" width="7.9137%" height="15" fill="rgb(252,65,2)" fg:x="240" fg:w="99"/><text x="19.4347%" y="543.50">engine::ses..</text></g><g><title>engine::session::state::State::close (99 samples, 7.91%)</title><rect x="19.1847%" y="517" width="7.9137%" height="15" fill="rgb(250,20,8)" fg:x="240" fg:w="99"/><text x="19.4347%" y="527.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (99 samples, 7.91%)</title><rect x="19.1847%" y="501" width="7.9137%" height="15" fill="rgb(234,149,13)" fg:x="240" fg:w="99"/><text x="19.4347%" y="511.50">engine::ses..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (98 samples, 7.83%)</title><rect x="19.2646%" y="485" width="7.8337%" height="15" fill="rgb(223,219,12)" fg:x="241" fg:w="98"/><text x="19.5146%" y="495.50">engine::ses..</text></g><g><title>core::iter::adapters::try_process (98 samples, 7.83%)</title><rect x="19.2646%" y="469" width="7.8337%" height="15" fill="rgb(234,13,49)" fg:x="241" fg:w="98"/><text x="19.5146%" y="479.50">core::iter:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (98 samples, 7.83%)</title><rect x="19.2646%" y="453" width="7.8337%" height="15" fill="rgb(214,41,25)" fg:x="241" fg:w="98"/><text x="19.5146%" y="463.50">&lt;alloc::vec..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (79 samples, 6.31%)</title><rect x="20.7834%" y="437" width="6.3149%" height="15" fill="rgb(232,198,52)" fg:x="260" fg:w="79"/><text x="21.0334%" y="447.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (31 samples, 2.48%)</title><rect x="24.6203%" y="421" width="2.4780%" height="15" fill="rgb(236,111,46)" fg:x="308" fg:w="31"/><text x="24.8703%" y="431.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (29 samples, 2.32%)</title><rect x="24.7802%" y="405" width="2.3181%" height="15" fill="rgb(253,30,20)" fg:x="310" fg:w="29"/><text x="25.0302%" y="415.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.32%)</title><rect x="24.7802%" y="389" width="2.3181%" height="15" fill="rgb(247,141,17)" fg:x="310" fg:w="29"/><text x="25.0302%" y="399.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.92%)</title><rect x="25.1799%" y="373" width="1.9185%" height="15" fill="rgb(214,195,21)" fg:x="315" fg:w="24"/><text x="25.4299%" y="383.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="25.4197%" y="357" width="1.6787%" height="15" fill="rgb(214,98,12)" fg:x="318" fg:w="21"/><text x="25.6697%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0184%" y="341" width="0.0799%" height="15" fill="rgb(239,4,26)" fg:x="338" fg:w="1"/><text x="27.2684%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="27.0983%" y="517" width="0.0799%" height="15" fill="rgb(234,210,35)" fg:x="339" fg:w="1"/><text x="27.3483%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="27.0983%" y="501" width="0.0799%" height="15" fill="rgb(252,178,27)" fg:x="339" fg:w="1"/><text x="27.3483%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="27.1783%" y="469" width="0.0799%" height="15" fill="rgb(217,50,1)" fg:x="340" fg:w="1"/><text x="27.4283%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.1783%" y="453" width="0.0799%" height="15" fill="rgb(233,137,5)" fg:x="340" fg:w="1"/><text x="27.4283%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="27.1783%" y="437" width="0.0799%" height="15" fill="rgb(217,227,25)" fg:x="340" fg:w="1"/><text x="27.4283%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.2582%" y="453" width="0.0799%" height="15" fill="rgb(242,89,38)" fg:x="341" fg:w="1"/><text x="27.5082%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.3381%" y="453" width="0.0799%" height="15" fill="rgb(212,190,30)" fg:x="342" fg:w="1"/><text x="27.5881%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.3381%" y="437" width="0.0799%" height="15" fill="rgb(222,120,8)" fg:x="342" fg:w="1"/><text x="27.5881%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.3381%" y="421" width="0.0799%" height="15" fill="rgb(227,181,9)" fg:x="342" fg:w="1"/><text x="27.5881%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="27.1783%" y="485" width="0.3997%" height="15" fill="rgb(222,125,29)" fg:x="340" fg:w="5"/><text x="27.4283%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="27.2582%" y="469" width="0.3197%" height="15" fill="rgb(215,153,31)" fg:x="341" fg:w="4"/><text x="27.5082%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.4181%" y="453" width="0.1599%" height="15" fill="rgb(228,77,30)" fg:x="343" fg:w="2"/><text x="27.6681%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.4181%" y="437" width="0.1599%" height="15" fill="rgb(226,110,9)" fg:x="343" fg:w="2"/><text x="27.6681%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="27.4181%" y="421" width="0.1599%" height="15" fill="rgb(219,111,7)" fg:x="343" fg:w="2"/><text x="27.6681%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.4181%" y="405" width="0.1599%" height="15" fill="rgb(229,167,25)" fg:x="343" fg:w="2"/><text x="27.6681%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.4980%" y="389" width="0.0799%" height="15" fill="rgb(209,77,43)" fg:x="344" fg:w="1"/><text x="27.7480%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.4980%" y="373" width="0.0799%" height="15" fill="rgb(233,70,39)" fg:x="344" fg:w="1"/><text x="27.7480%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="27.5779%" y="453" width="0.3197%" height="15" fill="rgb(207,171,44)" fg:x="345" fg:w="4"/><text x="27.8279%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="27.5779%" y="437" width="0.3197%" height="15" fill="rgb(244,91,6)" fg:x="345" fg:w="4"/><text x="27.8279%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.6579%" y="421" width="0.2398%" height="15" fill="rgb(234,136,12)" fg:x="346" fg:w="3"/><text x="27.9079%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8177%" y="405" width="0.0799%" height="15" fill="rgb(216,210,38)" fg:x="348" fg:w="1"/><text x="28.0677%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8177%" y="389" width="0.0799%" height="15" fill="rgb(241,227,7)" fg:x="348" fg:w="1"/><text x="28.0677%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.8177%" y="373" width="0.0799%" height="15" fill="rgb(241,222,11)" fg:x="348" fg:w="1"/><text x="28.0677%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.8177%" y="357" width="0.0799%" height="15" fill="rgb(246,86,18)" fg:x="348" fg:w="1"/><text x="28.0677%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.8177%" y="341" width="0.0799%" height="15" fill="rgb(224,151,49)" fg:x="348" fg:w="1"/><text x="28.0677%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8177%" y="325" width="0.0799%" height="15" fill="rgb(235,4,41)" fg:x="348" fg:w="1"/><text x="28.0677%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8177%" y="309" width="0.0799%" height="15" fill="rgb(218,30,52)" fg:x="348" fg:w="1"/><text x="28.0677%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.8177%" y="293" width="0.0799%" height="15" fill="rgb(205,124,51)" fg:x="348" fg:w="1"/><text x="28.0677%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.8177%" y="277" width="0.0799%" height="15" fill="rgb(237,126,51)" fg:x="348" fg:w="1"/><text x="28.0677%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.8177%" y="261" width="0.0799%" height="15" fill="rgb(225,32,46)" fg:x="348" fg:w="1"/><text x="28.0677%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.8177%" y="245" width="0.0799%" height="15" fill="rgb(251,60,49)" fg:x="348" fg:w="1"/><text x="28.0677%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.8177%" y="229" width="0.0799%" height="15" fill="rgb(234,18,23)" fg:x="348" fg:w="1"/><text x="28.0677%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.8977%" y="453" width="0.0799%" height="15" fill="rgb(234,25,23)" fg:x="349" fg:w="1"/><text x="28.1477%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.8977%" y="437" width="0.0799%" height="15" fill="rgb(210,43,52)" fg:x="349" fg:w="1"/><text x="28.1477%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.8977%" y="421" width="0.0799%" height="15" fill="rgb(237,198,21)" fg:x="349" fg:w="1"/><text x="28.1477%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.8977%" y="405" width="0.0799%" height="15" fill="rgb(211,20,34)" fg:x="349" fg:w="1"/><text x="28.1477%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.8977%" y="389" width="0.0799%" height="15" fill="rgb(221,155,50)" fg:x="349" fg:w="1"/><text x="28.1477%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (12 samples, 0.96%)</title><rect x="27.1783%" y="517" width="0.9592%" height="15" fill="rgb(213,214,53)" fg:x="340" fg:w="12"/><text x="27.4283%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (12 samples, 0.96%)</title><rect x="27.1783%" y="501" width="0.9592%" height="15" fill="rgb(215,229,48)" fg:x="340" fg:w="12"/><text x="27.4283%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="27.5779%" y="485" width="0.5596%" height="15" fill="rgb(243,88,5)" fg:x="345" fg:w="7"/><text x="27.8279%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="27.5779%" y="469" width="0.5596%" height="15" fill="rgb(216,199,8)" fg:x="345" fg:w="7"/><text x="27.8279%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.9776%" y="453" width="0.1599%" height="15" fill="rgb(241,22,4)" fg:x="350" fg:w="2"/><text x="28.2276%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.9776%" y="437" width="0.1599%" height="15" fill="rgb(209,190,22)" fg:x="350" fg:w="2"/><text x="28.2276%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.0576%" y="421" width="0.0799%" height="15" fill="rgb(251,138,45)" fg:x="351" fg:w="1"/><text x="28.3076%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.0576%" y="405" width="0.0799%" height="15" fill="rgb(219,111,22)" fg:x="351" fg:w="1"/><text x="28.3076%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.0576%" y="389" width="0.0799%" height="15" fill="rgb(253,29,49)" fg:x="351" fg:w="1"/><text x="28.3076%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.0576%" y="373" width="0.0799%" height="15" fill="rgb(238,129,49)" fg:x="351" fg:w="1"/><text x="28.3076%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="28.1375%" y="517" width="0.0799%" height="15" fill="rgb(240,26,41)" fg:x="352" fg:w="1"/><text x="28.3875%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.1375%" y="501" width="0.0799%" height="15" fill="rgb(221,47,33)" fg:x="352" fg:w="1"/><text x="28.3875%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.1375%" y="485" width="0.0799%" height="15" fill="rgb(216,200,17)" fg:x="352" fg:w="1"/><text x="28.3875%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="28.1375%" y="469" width="0.0799%" height="15" fill="rgb(230,151,26)" fg:x="352" fg:w="1"/><text x="28.3875%" y="479.50"></text></g><g><title>&lt;replies::Json as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="28.2174%" y="501" width="0.0799%" height="15" fill="rgb(242,182,16)" fg:x="353" fg:w="1"/><text x="28.4674%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="28.2174%" y="517" width="0.3197%" height="15" fill="rgb(236,35,53)" fg:x="353" fg:w="4"/><text x="28.4674%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="28.2974%" y="501" width="0.2398%" height="15" fill="rgb(214,180,28)" fg:x="354" fg:w="3"/><text x="28.5474%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="28.2974%" y="485" width="0.2398%" height="15" fill="rgb(208,173,36)" fg:x="354" fg:w="3"/><text x="28.5474%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="28.2974%" y="469" width="0.2398%" height="15" fill="rgb(218,39,15)" fg:x="354" fg:w="3"/><text x="28.5474%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="28.2974%" y="453" width="0.2398%" height="15" fill="rgb(213,145,15)" fg:x="354" fg:w="3"/><text x="28.5474%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="28.2974%" y="437" width="0.2398%" height="15" fill="rgb(242,110,37)" fg:x="354" fg:w="3"/><text x="28.5474%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.3773%" y="421" width="0.1599%" height="15" fill="rgb(247,146,22)" fg:x="355" fg:w="2"/><text x="28.6273%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.5372%" y="453" width="0.0799%" height="15" fill="rgb(215,191,7)" fg:x="357" fg:w="1"/><text x="28.7872%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.6171%" y="437" width="0.0799%" height="15" fill="rgb(240,158,1)" fg:x="358" fg:w="1"/><text x="28.8671%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.6171%" y="421" width="0.0799%" height="15" fill="rgb(241,78,32)" fg:x="358" fg:w="1"/><text x="28.8671%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.6171%" y="405" width="0.0799%" height="15" fill="rgb(248,83,10)" fg:x="358" fg:w="1"/><text x="28.8671%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6970%" y="437" width="0.0799%" height="15" fill="rgb(241,52,0)" fg:x="359" fg:w="1"/><text x="28.9470%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.6970%" y="421" width="0.0799%" height="15" fill="rgb(238,37,13)" fg:x="359" fg:w="1"/><text x="28.9470%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6970%" y="405" width="0.0799%" height="15" fill="rgb(242,194,17)" fg:x="359" fg:w="1"/><text x="28.9470%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.6970%" y="389" width="0.0799%" height="15" fill="rgb(236,96,3)" fg:x="359" fg:w="1"/><text x="28.9470%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.6970%" y="373" width="0.0799%" height="15" fill="rgb(235,148,34)" fg:x="359" fg:w="1"/><text x="28.9470%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="28.5372%" y="469" width="0.3197%" height="15" fill="rgb(254,12,11)" fg:x="357" fg:w="4"/><text x="28.7872%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.6171%" y="453" width="0.2398%" height="15" fill="rgb(207,31,54)" fg:x="358" fg:w="3"/><text x="28.8671%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.7770%" y="437" width="0.0799%" height="15" fill="rgb(252,14,28)" fg:x="360" fg:w="1"/><text x="29.0270%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7770%" y="421" width="0.0799%" height="15" fill="rgb(252,108,36)" fg:x="360" fg:w="1"/><text x="29.0270%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.7770%" y="405" width="0.0799%" height="15" fill="rgb(214,149,7)" fg:x="360" fg:w="1"/><text x="29.0270%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7770%" y="389" width="0.0799%" height="15" fill="rgb(243,94,12)" fg:x="360" fg:w="1"/><text x="29.0270%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.8569%" y="437" width="0.0799%" height="15" fill="rgb(208,36,10)" fg:x="361" fg:w="1"/><text x="29.1069%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.8569%" y="421" width="0.0799%" height="15" fill="rgb(233,185,52)" fg:x="361" fg:w="1"/><text x="29.1069%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.8569%" y="405" width="0.0799%" height="15" fill="rgb(234,50,45)" fg:x="361" fg:w="1"/><text x="29.1069%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8569%" y="389" width="0.0799%" height="15" fill="rgb(228,92,54)" fg:x="361" fg:w="1"/><text x="29.1069%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8569%" y="373" width="0.0799%" height="15" fill="rgb(224,85,25)" fg:x="361" fg:w="1"/><text x="29.1069%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.8569%" y="357" width="0.0799%" height="15" fill="rgb(246,1,45)" fg:x="361" fg:w="1"/><text x="29.1069%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.8569%" y="341" width="0.0799%" height="15" fill="rgb(240,66,23)" fg:x="361" fg:w="1"/><text x="29.1069%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.8569%" y="325" width="0.0799%" height="15" fill="rgb(222,96,27)" fg:x="361" fg:w="1"/><text x="29.1069%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8569%" y="309" width="0.0799%" height="15" fill="rgb(212,136,10)" fg:x="361" fg:w="1"/><text x="29.1069%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8569%" y="293" width="0.0799%" height="15" fill="rgb(226,192,50)" fg:x="361" fg:w="1"/><text x="29.1069%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.8569%" y="277" width="0.0799%" height="15" fill="rgb(241,182,31)" fg:x="361" fg:w="1"/><text x="29.1069%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.8569%" y="261" width="0.0799%" height="15" fill="rgb(219,205,47)" fg:x="361" fg:w="1"/><text x="29.1069%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.8569%" y="245" width="0.0799%" height="15" fill="rgb(207,96,14)" fg:x="361" fg:w="1"/><text x="29.1069%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.8569%" y="229" width="0.0799%" height="15" fill="rgb(216,119,9)" fg:x="361" fg:w="1"/><text x="29.1069%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="28.8569%" y="213" width="0.0799%" height="15" fill="rgb(235,62,36)" fg:x="361" fg:w="1"/><text x="29.1069%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="28.8569%" y="197" width="0.0799%" height="15" fill="rgb(214,41,27)" fg:x="361" fg:w="1"/><text x="29.1069%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.9369%" y="437" width="0.0799%" height="15" fill="rgb(214,174,37)" fg:x="362" fg:w="1"/><text x="29.1869%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.9369%" y="421" width="0.0799%" height="15" fill="rgb(212,11,25)" fg:x="362" fg:w="1"/><text x="29.1869%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.9369%" y="405" width="0.0799%" height="15" fill="rgb(217,71,35)" fg:x="362" fg:w="1"/><text x="29.1869%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.9369%" y="389" width="0.0799%" height="15" fill="rgb(234,152,9)" fg:x="362" fg:w="1"/><text x="29.1869%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="28.5372%" y="501" width="0.5596%" height="15" fill="rgb(228,32,51)" fg:x="357" fg:w="7"/><text x="28.7872%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="28.5372%" y="485" width="0.5596%" height="15" fill="rgb(209,14,47)" fg:x="357" fg:w="7"/><text x="28.7872%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="28.8569%" y="469" width="0.2398%" height="15" fill="rgb(218,201,17)" fg:x="361" fg:w="3"/><text x="29.1069%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.8569%" y="453" width="0.2398%" height="15" fill="rgb(218,98,15)" fg:x="361" fg:w="3"/><text x="29.1069%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.0168%" y="437" width="0.0799%" height="15" fill="rgb(233,202,29)" fg:x="363" fg:w="1"/><text x="29.2668%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (1 samples, 0.08%)</title><rect x="29.0967%" y="485" width="0.0799%" height="15" fill="rgb(207,196,44)" fg:x="364" fg:w="1"/><text x="29.3467%" y="495.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="28.5372%" y="517" width="0.7194%" height="15" fill="rgb(218,63,34)" fg:x="357" fg:w="9"/><text x="28.7872%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="29.0967%" y="501" width="0.1599%" height="15" fill="rgb(209,10,5)" fg:x="364" fg:w="2"/><text x="29.3467%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.1767%" y="485" width="0.0799%" height="15" fill="rgb(224,36,28)" fg:x="365" fg:w="1"/><text x="29.4267%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="29.1767%" y="469" width="0.0799%" height="15" fill="rgb(249,178,7)" fg:x="365" fg:w="1"/><text x="29.4267%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="29.1767%" y="453" width="0.0799%" height="15" fill="rgb(253,163,10)" fg:x="365" fg:w="1"/><text x="29.4267%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="29.1767%" y="437" width="0.0799%" height="15" fill="rgb(245,67,46)" fg:x="365" fg:w="1"/><text x="29.4267%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.1767%" y="421" width="0.0799%" height="15" fill="rgb(225,14,18)" fg:x="365" fg:w="1"/><text x="29.4267%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.1767%" y="405" width="0.0799%" height="15" fill="rgb(217,41,54)" fg:x="365" fg:w="1"/><text x="29.4267%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.1767%" y="389" width="0.0799%" height="15" fill="rgb(222,111,11)" fg:x="365" fg:w="1"/><text x="29.4267%" y="399.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="29.1767%" y="373" width="0.0799%" height="15" fill="rgb(211,85,31)" fg:x="365" fg:w="1"/><text x="29.4267%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (29 samples, 2.32%)</title><rect x="27.0983%" y="549" width="2.3181%" height="15" fill="rgb(223,29,26)" fg:x="339" fg:w="29"/><text x="27.3483%" y="559.50">p..</text></g><g><title>plugins_core::tools::set_container (29 samples, 2.32%)</title><rect x="27.0983%" y="533" width="2.3181%" height="15" fill="rgb(236,124,50)" fg:x="339" fg:w="29"/><text x="27.3483%" y="543.50">p..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="29.2566%" y="517" width="0.1599%" height="15" fill="rgb(219,148,15)" fg:x="366" fg:w="2"/><text x="29.5066%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (2 samples, 0.16%)</title><rect x="29.2566%" y="501" width="0.1599%" height="15" fill="rgb(248,159,33)" fg:x="366" fg:w="2"/><text x="29.5066%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="29.3365%" y="485" width="0.0799%" height="15" fill="rgb(252,65,8)" fg:x="367" fg:w="1"/><text x="29.5865%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="29.4165%" y="549" width="0.0799%" height="15" fill="rgb(236,45,7)" fg:x="368" fg:w="1"/><text x="29.6665%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="29.4165%" y="533" width="0.0799%" height="15" fill="rgb(244,3,48)" fg:x="368" fg:w="1"/><text x="29.6665%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="29.4165%" y="517" width="0.0799%" height="15" fill="rgb(224,123,53)" fg:x="368" fg:w="1"/><text x="29.6665%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.4165%" y="501" width="0.0799%" height="15" fill="rgb(223,173,15)" fg:x="368" fg:w="1"/><text x="29.6665%" y="511.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="29.4964%" y="549" width="0.0799%" height="15" fill="rgb(254,181,5)" fg:x="369" fg:w="1"/><text x="29.7464%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="29.4964%" y="533" width="0.0799%" height="15" fill="rgb(243,124,33)" fg:x="369" fg:w="1"/><text x="29.7464%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="29.4964%" y="517" width="0.0799%" height="15" fill="rgb(253,220,11)" fg:x="369" fg:w="1"/><text x="29.7464%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="29.4964%" y="501" width="0.0799%" height="15" fill="rgb(217,14,4)" fg:x="369" fg:w="1"/><text x="29.7464%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="29.5763%" y="533" width="0.0799%" height="15" fill="rgb(209,196,12)" fg:x="370" fg:w="1"/><text x="29.8263%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.6563%" y="485" width="0.0799%" height="15" fill="rgb(237,108,29)" fg:x="371" fg:w="1"/><text x="29.9063%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.6563%" y="501" width="0.1599%" height="15" fill="rgb(216,173,20)" fg:x="371" fg:w="2"/><text x="29.9063%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.7362%" y="485" width="0.0799%" height="15" fill="rgb(245,27,6)" fg:x="372" fg:w="1"/><text x="29.9862%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.7362%" y="469" width="0.0799%" height="15" fill="rgb(210,181,20)" fg:x="372" fg:w="1"/><text x="29.9862%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.7362%" y="453" width="0.0799%" height="15" fill="rgb(235,213,1)" fg:x="372" fg:w="1"/><text x="29.9862%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.7362%" y="437" width="0.0799%" height="15" fill="rgb(239,68,43)" fg:x="372" fg:w="1"/><text x="29.9862%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.7362%" y="421" width="0.0799%" height="15" fill="rgb(254,137,43)" fg:x="372" fg:w="1"/><text x="29.9862%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.7362%" y="405" width="0.0799%" height="15" fill="rgb(252,170,38)" fg:x="372" fg:w="1"/><text x="29.9862%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.7362%" y="389" width="0.0799%" height="15" fill="rgb(234,21,42)" fg:x="372" fg:w="1"/><text x="29.9862%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8961%" y="421" width="0.0799%" height="15" fill="rgb(216,145,40)" fg:x="374" fg:w="1"/><text x="30.1461%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="29.8161%" y="485" width="0.2398%" height="15" fill="rgb(251,73,9)" fg:x="373" fg:w="3"/><text x="30.0661%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="29.8161%" y="469" width="0.2398%" height="15" fill="rgb(242,54,6)" fg:x="373" fg:w="3"/><text x="30.0661%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="29.8161%" y="453" width="0.2398%" height="15" fill="rgb(239,70,7)" fg:x="373" fg:w="3"/><text x="30.0661%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.8161%" y="437" width="0.2398%" height="15" fill="rgb(216,159,35)" fg:x="373" fg:w="3"/><text x="30.0661%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9760%" y="421" width="0.0799%" height="15" fill="rgb(224,50,39)" fg:x="375" fg:w="1"/><text x="30.2260%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9760%" y="405" width="0.0799%" height="15" fill="rgb(235,9,35)" fg:x="375" fg:w="1"/><text x="30.2260%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.9760%" y="389" width="0.0799%" height="15" fill="rgb(239,34,21)" fg:x="375" fg:w="1"/><text x="30.2260%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.9760%" y="373" width="0.0799%" height="15" fill="rgb(218,162,43)" fg:x="375" fg:w="1"/><text x="30.2260%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.9760%" y="357" width="0.0799%" height="15" fill="rgb(219,89,33)" fg:x="375" fg:w="1"/><text x="30.2260%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9760%" y="341" width="0.0799%" height="15" fill="rgb(226,125,37)" fg:x="375" fg:w="1"/><text x="30.2260%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9760%" y="325" width="0.0799%" height="15" fill="rgb(233,149,30)" fg:x="375" fg:w="1"/><text x="30.2260%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.9760%" y="309" width="0.0799%" height="15" fill="rgb(236,8,18)" fg:x="375" fg:w="1"/><text x="30.2260%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.9760%" y="293" width="0.0799%" height="15" fill="rgb(205,176,9)" fg:x="375" fg:w="1"/><text x="30.2260%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.9760%" y="277" width="0.0799%" height="15" fill="rgb(252,103,44)" fg:x="375" fg:w="1"/><text x="30.2260%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.9760%" y="261" width="0.0799%" height="15" fill="rgb(207,68,53)" fg:x="375" fg:w="1"/><text x="30.2260%" y="271.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="29.8161%" y="501" width="0.3997%" height="15" fill="rgb(218,193,48)" fg:x="373" fg:w="5"/><text x="30.0661%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="30.0560%" y="485" width="0.1599%" height="15" fill="rgb(234,121,52)" fg:x="376" fg:w="2"/><text x="30.3060%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="30.1359%" y="469" width="0.0799%" height="15" fill="rgb(227,218,49)" fg:x="377" fg:w="1"/><text x="30.3859%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.1359%" y="453" width="0.0799%" height="15" fill="rgb(221,8,7)" fg:x="377" fg:w="1"/><text x="30.3859%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.1359%" y="437" width="0.0799%" height="15" fill="rgb(217,151,36)" fg:x="377" fg:w="1"/><text x="30.3859%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.1359%" y="421" width="0.0799%" height="15" fill="rgb(213,71,5)" fg:x="377" fg:w="1"/><text x="30.3859%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="30.2158%" y="485" width="0.0799%" height="15" fill="rgb(225,145,43)" fg:x="378" fg:w="1"/><text x="30.4658%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="30.2158%" y="469" width="0.0799%" height="15" fill="rgb(235,118,19)" fg:x="378" fg:w="1"/><text x="30.4658%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="30.2158%" y="453" width="0.0799%" height="15" fill="rgb(214,102,36)" fg:x="378" fg:w="1"/><text x="30.4658%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.2158%" y="437" width="0.0799%" height="15" fill="rgb(220,56,43)" fg:x="378" fg:w="1"/><text x="30.4658%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2158%" y="421" width="0.0799%" height="15" fill="rgb(246,136,46)" fg:x="378" fg:w="1"/><text x="30.4658%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2158%" y="405" width="0.0799%" height="15" fill="rgb(249,99,12)" fg:x="378" fg:w="1"/><text x="30.4658%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2158%" y="389" width="0.0799%" height="15" fill="rgb(224,31,42)" fg:x="378" fg:w="1"/><text x="30.4658%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="30.2158%" y="501" width="0.1599%" height="15" fill="rgb(208,96,21)" fg:x="378" fg:w="2"/><text x="30.4658%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="30.2958%" y="485" width="0.0799%" height="15" fill="rgb(237,229,7)" fg:x="379" fg:w="1"/><text x="30.5458%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.2958%" y="469" width="0.0799%" height="15" fill="rgb(210,12,6)" fg:x="379" fg:w="1"/><text x="30.5458%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="30.2958%" y="453" width="0.0799%" height="15" fill="rgb(240,9,34)" fg:x="379" fg:w="1"/><text x="30.5458%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="30.2958%" y="437" width="0.0799%" height="15" fill="rgb(211,68,37)" fg:x="379" fg:w="1"/><text x="30.5458%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="30.2958%" y="421" width="0.0799%" height="15" fill="rgb(249,138,50)" fg:x="379" fg:w="1"/><text x="30.5458%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="30.2958%" y="405" width="0.0799%" height="15" fill="rgb(243,185,40)" fg:x="379" fg:w="1"/><text x="30.5458%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="30.2958%" y="389" width="0.0799%" height="15" fill="rgb(242,92,35)" fg:x="379" fg:w="1"/><text x="30.5458%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="30.2958%" y="373" width="0.0799%" height="15" fill="rgb(244,98,5)" fg:x="379" fg:w="1"/><text x="30.5458%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="30.2958%" y="357" width="0.0799%" height="15" fill="rgb(228,186,29)" fg:x="379" fg:w="1"/><text x="30.5458%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2958%" y="341" width="0.0799%" height="15" fill="rgb(253,7,44)" fg:x="379" fg:w="1"/><text x="30.5458%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2958%" y="325" width="0.0799%" height="15" fill="rgb(216,11,45)" fg:x="379" fg:w="1"/><text x="30.5458%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2958%" y="309" width="0.0799%" height="15" fill="rgb(205,67,3)" fg:x="379" fg:w="1"/><text x="30.5458%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.3757%" y="485" width="0.0799%" height="15" fill="rgb(250,18,3)" fg:x="380" fg:w="1"/><text x="30.6257%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.3757%" y="469" width="0.0799%" height="15" fill="rgb(241,222,43)" fg:x="380" fg:w="1"/><text x="30.6257%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.3757%" y="453" width="0.0799%" height="15" fill="rgb(233,115,3)" fg:x="380" fg:w="1"/><text x="30.6257%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.3757%" y="437" width="0.0799%" height="15" fill="rgb(215,165,25)" fg:x="380" fg:w="1"/><text x="30.6257%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.3757%" y="421" width="0.0799%" height="15" fill="rgb(234,179,6)" fg:x="380" fg:w="1"/><text x="30.6257%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.3757%" y="405" width="0.0799%" height="15" fill="rgb(215,82,23)" fg:x="380" fg:w="1"/><text x="30.6257%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.3757%" y="389" width="0.0799%" height="15" fill="rgb(211,47,18)" fg:x="380" fg:w="1"/><text x="30.6257%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.3757%" y="373" width="0.0799%" height="15" fill="rgb(248,17,9)" fg:x="380" fg:w="1"/><text x="30.6257%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.4556%" y="453" width="0.1599%" height="15" fill="rgb(210,212,12)" fg:x="381" fg:w="2"/><text x="30.7056%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.4556%" y="437" width="0.1599%" height="15" fill="rgb(230,135,45)" fg:x="381" fg:w="2"/><text x="30.7056%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.4556%" y="421" width="0.1599%" height="15" fill="rgb(214,121,41)" fg:x="381" fg:w="2"/><text x="30.7056%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5356%" y="405" width="0.0799%" height="15" fill="rgb(239,165,45)" fg:x="382" fg:w="1"/><text x="30.7856%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="30.3757%" y="501" width="0.3997%" height="15" fill="rgb(214,85,51)" fg:x="380" fg:w="5"/><text x="30.6257%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="30.4556%" y="485" width="0.3197%" height="15" fill="rgb(223,90,27)" fg:x="381" fg:w="4"/><text x="30.7056%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="30.4556%" y="469" width="0.3197%" height="15" fill="rgb(244,84,11)" fg:x="381" fg:w="4"/><text x="30.7056%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.6155%" y="453" width="0.1599%" height="15" fill="rgb(253,41,47)" fg:x="383" fg:w="2"/><text x="30.8655%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.6155%" y="437" width="0.1599%" height="15" fill="rgb(232,39,5)" fg:x="383" fg:w="2"/><text x="30.8655%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="30.6155%" y="421" width="0.1599%" height="15" fill="rgb(211,93,4)" fg:x="383" fg:w="2"/><text x="30.8655%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.6155%" y="405" width="0.1599%" height="15" fill="rgb(219,50,49)" fg:x="383" fg:w="2"/><text x="30.8655%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.6155%" y="389" width="0.1599%" height="15" fill="rgb(232,80,19)" fg:x="383" fg:w="2"/><text x="30.8655%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.6155%" y="373" width="0.1599%" height="15" fill="rgb(215,227,39)" fg:x="383" fg:w="2"/><text x="30.8655%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.6954%" y="357" width="0.0799%" height="15" fill="rgb(211,99,12)" fg:x="384" fg:w="1"/><text x="30.9454%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.7754%" y="437" width="0.0799%" height="15" fill="rgb(214,158,5)" fg:x="385" fg:w="1"/><text x="31.0254%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.7754%" y="421" width="0.0799%" height="15" fill="rgb(242,19,53)" fg:x="385" fg:w="1"/><text x="31.0254%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.7754%" y="405" width="0.0799%" height="15" fill="rgb(208,18,20)" fg:x="385" fg:w="1"/><text x="31.0254%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.7754%" y="389" width="0.0799%" height="15" fill="rgb(250,44,11)" fg:x="385" fg:w="1"/><text x="31.0254%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7754%" y="373" width="0.0799%" height="15" fill="rgb(238,159,13)" fg:x="385" fg:w="1"/><text x="31.0254%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.7754%" y="469" width="0.1599%" height="15" fill="rgb(231,74,18)" fg:x="385" fg:w="2"/><text x="31.0254%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.7754%" y="453" width="0.1599%" height="15" fill="rgb(229,219,45)" fg:x="385" fg:w="2"/><text x="31.0254%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.8553%" y="437" width="0.0799%" height="15" fill="rgb(210,221,1)" fg:x="386" fg:w="1"/><text x="31.1053%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8553%" y="421" width="0.0799%" height="15" fill="rgb(209,60,51)" fg:x="386" fg:w="1"/><text x="31.1053%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.8553%" y="405" width="0.0799%" height="15" fill="rgb(252,97,34)" fg:x="386" fg:w="1"/><text x="31.1053%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8553%" y="389" width="0.0799%" height="15" fill="rgb(243,211,37)" fg:x="386" fg:w="1"/><text x="31.1053%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.8553%" y="373" width="0.0799%" height="15" fill="rgb(210,229,37)" fg:x="386" fg:w="1"/><text x="31.1053%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.8553%" y="357" width="0.0799%" height="15" fill="rgb(220,208,43)" fg:x="386" fg:w="1"/><text x="31.1053%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9353%" y="421" width="0.0799%" height="15" fill="rgb(218,118,50)" fg:x="387" fg:w="1"/><text x="31.1853%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.9353%" y="437" width="0.1599%" height="15" fill="rgb(254,169,52)" fg:x="387" fg:w="2"/><text x="31.1853%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.0152%" y="421" width="0.0799%" height="15" fill="rgb(221,214,37)" fg:x="388" fg:w="1"/><text x="31.2652%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.0951%" y="437" width="0.0799%" height="15" fill="rgb(254,186,32)" fg:x="389" fg:w="1"/><text x="31.3451%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.0951%" y="421" width="0.0799%" height="15" fill="rgb(215,144,43)" fg:x="389" fg:w="1"/><text x="31.3451%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.0951%" y="405" width="0.0799%" height="15" fill="rgb(252,21,46)" fg:x="389" fg:w="1"/><text x="31.3451%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.0951%" y="389" width="0.0799%" height="15" fill="rgb(207,166,46)" fg:x="389" fg:w="1"/><text x="31.3451%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.60%)</title><rect x="29.6563%" y="517" width="1.5987%" height="15" fill="rgb(253,37,49)" fg:x="371" fg:w="20"/><text x="29.9063%" y="527.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="30.7754%" y="501" width="0.4796%" height="15" fill="rgb(222,97,20)" fg:x="385" fg:w="6"/><text x="31.0254%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="30.7754%" y="485" width="0.4796%" height="15" fill="rgb(244,181,26)" fg:x="385" fg:w="6"/><text x="31.0254%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="30.9353%" y="469" width="0.3197%" height="15" fill="rgb(241,22,29)" fg:x="387" fg:w="4"/><text x="31.1853%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="30.9353%" y="453" width="0.3197%" height="15" fill="rgb(206,200,43)" fg:x="387" fg:w="4"/><text x="31.1853%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.1751%" y="437" width="0.0799%" height="15" fill="rgb(226,224,43)" fg:x="390" fg:w="1"/><text x="31.4251%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (21 samples, 1.68%)</title><rect x="29.6563%" y="533" width="1.6787%" height="15" fill="rgb(253,129,28)" fg:x="371" fg:w="21"/><text x="29.9063%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.2550%" y="517" width="0.0799%" height="15" fill="rgb(252,99,33)" fg:x="391" fg:w="1"/><text x="31.5050%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="31.2550%" y="501" width="0.0799%" height="15" fill="rgb(208,123,45)" fg:x="391" fg:w="1"/><text x="31.5050%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3349%" y="421" width="0.0799%" height="15" fill="rgb(251,106,12)" fg:x="392" fg:w="1"/><text x="31.5849%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="31.3349%" y="485" width="0.2398%" height="15" fill="rgb(240,209,35)" fg:x="392" fg:w="3"/><text x="31.5849%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.3349%" y="469" width="0.2398%" height="15" fill="rgb(214,52,50)" fg:x="392" fg:w="3"/><text x="31.5849%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="31.3349%" y="453" width="0.2398%" height="15" fill="rgb(234,119,4)" fg:x="392" fg:w="3"/><text x="31.5849%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.3349%" y="437" width="0.2398%" height="15" fill="rgb(228,181,36)" fg:x="392" fg:w="3"/><text x="31.5849%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.4149%" y="421" width="0.1599%" height="15" fill="rgb(213,171,42)" fg:x="393" fg:w="2"/><text x="31.6649%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.4149%" y="405" width="0.1599%" height="15" fill="rgb(239,14,41)" fg:x="393" fg:w="2"/><text x="31.6649%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.4149%" y="389" width="0.1599%" height="15" fill="rgb(239,111,46)" fg:x="393" fg:w="2"/><text x="31.6649%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.4948%" y="373" width="0.0799%" height="15" fill="rgb(214,72,7)" fg:x="394" fg:w="1"/><text x="31.7448%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="31.5747%" y="469" width="0.0799%" height="15" fill="rgb(221,114,1)" fg:x="395" fg:w="1"/><text x="31.8247%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.6547%" y="453" width="0.0799%" height="15" fill="rgb(213,143,14)" fg:x="396" fg:w="1"/><text x="31.9047%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.6547%" y="437" width="0.0799%" height="15" fill="rgb(220,221,53)" fg:x="396" fg:w="1"/><text x="31.9047%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.6547%" y="421" width="0.0799%" height="15" fill="rgb(236,189,27)" fg:x="396" fg:w="1"/><text x="31.9047%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.6547%" y="405" width="0.0799%" height="15" fill="rgb(252,139,49)" fg:x="396" fg:w="1"/><text x="31.9047%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7346%" y="453" width="0.0799%" height="15" fill="rgb(231,158,33)" fg:x="397" fg:w="1"/><text x="31.9846%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.7346%" y="437" width="0.0799%" height="15" fill="rgb(207,201,15)" fg:x="397" fg:w="1"/><text x="31.9846%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.8145%" y="389" width="0.0799%" height="15" fill="rgb(218,43,48)" fg:x="398" fg:w="1"/><text x="32.0645%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="31.3349%" y="517" width="0.6395%" height="15" fill="rgb(244,63,52)" fg:x="392" fg:w="8"/><text x="31.5849%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="31.3349%" y="501" width="0.6395%" height="15" fill="rgb(236,60,17)" fg:x="392" fg:w="8"/><text x="31.5849%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="31.5747%" y="485" width="0.3997%" height="15" fill="rgb(205,206,29)" fg:x="395" fg:w="5"/><text x="31.8247%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="31.6547%" y="469" width="0.3197%" height="15" fill="rgb(205,209,35)" fg:x="396" fg:w="4"/><text x="31.9047%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.8145%" y="453" width="0.1599%" height="15" fill="rgb(227,112,14)" fg:x="398" fg:w="2"/><text x="32.0645%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.8145%" y="437" width="0.1599%" height="15" fill="rgb(248,151,9)" fg:x="398" fg:w="2"/><text x="32.0645%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.8145%" y="421" width="0.1599%" height="15" fill="rgb(247,45,40)" fg:x="398" fg:w="2"/><text x="32.0645%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.8145%" y="405" width="0.1599%" height="15" fill="rgb(232,185,16)" fg:x="398" fg:w="2"/><text x="32.0645%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.8945%" y="389" width="0.0799%" height="15" fill="rgb(215,45,44)" fg:x="399" fg:w="1"/><text x="32.1445%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.8945%" y="373" width="0.0799%" height="15" fill="rgb(206,69,32)" fg:x="399" fg:w="1"/><text x="32.1445%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.8945%" y="357" width="0.0799%" height="15" fill="rgb(233,98,50)" fg:x="399" fg:w="1"/><text x="32.1445%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0544%" y="469" width="0.0799%" height="15" fill="rgb(232,217,52)" fg:x="401" fg:w="1"/><text x="32.3044%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.0544%" y="453" width="0.0799%" height="15" fill="rgb(250,42,51)" fg:x="401" fg:w="1"/><text x="32.3044%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.0544%" y="437" width="0.0799%" height="15" fill="rgb(241,200,26)" fg:x="401" fg:w="1"/><text x="32.3044%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="32.0544%" y="421" width="0.0799%" height="15" fill="rgb(207,10,32)" fg:x="401" fg:w="1"/><text x="32.3044%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2142%" y="421" width="0.0799%" height="15" fill="rgb(214,63,15)" fg:x="403" fg:w="1"/><text x="32.4642%" y="431.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (4 samples, 0.32%)</title><rect x="32.0544%" y="501" width="0.3197%" height="15" fill="rgb(234,176,14)" fg:x="401" fg:w="4"/><text x="32.3044%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="32.0544%" y="485" width="0.3197%" height="15" fill="rgb(226,104,52)" fg:x="401" fg:w="4"/><text x="32.3044%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="32.1343%" y="469" width="0.2398%" height="15" fill="rgb(211,222,1)" fg:x="402" fg:w="3"/><text x="32.3843%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="32.1343%" y="453" width="0.2398%" height="15" fill="rgb(237,7,3)" fg:x="402" fg:w="3"/><text x="32.3843%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.2142%" y="437" width="0.1599%" height="15" fill="rgb(218,143,7)" fg:x="403" fg:w="2"/><text x="32.4642%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="32.2942%" y="421" width="0.0799%" height="15" fill="rgb(208,25,22)" fg:x="404" fg:w="1"/><text x="32.5442%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="32.2942%" y="405" width="0.0799%" height="15" fill="rgb(228,127,16)" fg:x="404" fg:w="1"/><text x="32.5442%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="31.9744%" y="517" width="0.4796%" height="15" fill="rgb(237,86,27)" fg:x="400" fg:w="6"/><text x="32.2244%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="32.3741%" y="501" width="0.0799%" height="15" fill="rgb(207,125,19)" fg:x="405" fg:w="1"/><text x="32.6241%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.3741%" y="485" width="0.0799%" height="15" fill="rgb(243,195,0)" fg:x="405" fg:w="1"/><text x="32.6241%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="32.3741%" y="469" width="0.0799%" height="15" fill="rgb(230,95,18)" fg:x="405" fg:w="1"/><text x="32.6241%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.3741%" y="453" width="0.0799%" height="15" fill="rgb(232,157,21)" fg:x="405" fg:w="1"/><text x="32.6241%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3741%" y="437" width="0.0799%" height="15" fill="rgb(212,120,50)" fg:x="405" fg:w="1"/><text x="32.6241%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.4540%" y="373" width="0.0799%" height="15" fill="rgb(222,204,44)" fg:x="406" fg:w="1"/><text x="32.7040%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.4540%" y="357" width="0.0799%" height="15" fill="rgb(236,6,33)" fg:x="406" fg:w="1"/><text x="32.7040%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="32.4540%" y="469" width="0.1599%" height="15" fill="rgb(247,11,38)" fg:x="406" fg:w="2"/><text x="32.7040%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.4540%" y="453" width="0.1599%" height="15" fill="rgb(215,111,0)" fg:x="406" fg:w="2"/><text x="32.7040%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.4540%" y="437" width="0.1599%" height="15" fill="rgb(211,65,46)" fg:x="406" fg:w="2"/><text x="32.7040%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.4540%" y="421" width="0.1599%" height="15" fill="rgb(216,5,12)" fg:x="406" fg:w="2"/><text x="32.7040%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.4540%" y="405" width="0.1599%" height="15" fill="rgb(226,7,2)" fg:x="406" fg:w="2"/><text x="32.7040%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.4540%" y="389" width="0.1599%" height="15" fill="rgb(242,116,12)" fg:x="406" fg:w="2"/><text x="32.7040%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.5340%" y="373" width="0.0799%" height="15" fill="rgb(249,209,7)" fg:x="407" fg:w="1"/><text x="32.7840%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.6938%" y="421" width="0.1599%" height="15" fill="rgb(232,73,17)" fg:x="409" fg:w="2"/><text x="32.9438%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.6938%" y="405" width="0.1599%" height="15" fill="rgb(214,13,32)" fg:x="409" fg:w="2"/><text x="32.9438%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.6938%" y="389" width="0.1599%" height="15" fill="rgb(221,125,10)" fg:x="409" fg:w="2"/><text x="32.9438%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.6938%" y="373" width="0.1599%" height="15" fill="rgb(246,7,44)" fg:x="409" fg:w="2"/><text x="32.9438%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="32.6938%" y="357" width="0.1599%" height="15" fill="rgb(239,18,35)" fg:x="409" fg:w="2"/><text x="32.9438%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="32.6938%" y="341" width="0.1599%" height="15" fill="rgb(250,222,16)" fg:x="409" fg:w="2"/><text x="32.9438%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="32.6938%" y="325" width="0.1599%" height="15" fill="rgb(219,100,8)" fg:x="409" fg:w="2"/><text x="32.9438%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.6938%" y="309" width="0.1599%" height="15" fill="rgb(240,62,13)" fg:x="409" fg:w="2"/><text x="32.9438%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.6938%" y="293" width="0.1599%" height="15" fill="rgb(253,194,2)" fg:x="409" fg:w="2"/><text x="32.9438%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="32.6938%" y="277" width="0.1599%" height="15" fill="rgb(235,58,31)" fg:x="409" fg:w="2"/><text x="32.9438%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="32.6938%" y="261" width="0.1599%" height="15" fill="rgb(231,37,11)" fg:x="409" fg:w="2"/><text x="32.9438%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="32.6938%" y="245" width="0.1599%" height="15" fill="rgb(235,133,0)" fg:x="409" fg:w="2"/><text x="32.9438%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="32.6938%" y="229" width="0.1599%" height="15" fill="rgb(212,185,40)" fg:x="409" fg:w="2"/><text x="32.9438%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.6938%" y="213" width="0.1599%" height="15" fill="rgb(216,68,42)" fg:x="409" fg:w="2"/><text x="32.9438%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.6938%" y="437" width="0.2398%" height="15" fill="rgb(239,81,4)" fg:x="409" fg:w="3"/><text x="32.9438%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.8537%" y="421" width="0.0799%" height="15" fill="rgb(206,86,6)" fg:x="411" fg:w="1"/><text x="33.1037%" y="431.50"></text></g><g><title>plugins_core::build::Build::occupying (43 samples, 3.44%)</title><rect x="29.5763%" y="549" width="3.4373%" height="15" fill="rgb(249,95,27)" fg:x="370" fg:w="43"/><text x="29.8263%" y="559.50">plu..</text></g><g><title>plugins_core::tools::set_occupying (21 samples, 1.68%)</title><rect x="31.3349%" y="533" width="1.6787%" height="15" fill="rgb(205,155,45)" fg:x="392" fg:w="21"/><text x="31.5849%" y="543.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.56%)</title><rect x="32.4540%" y="517" width="0.5596%" height="15" fill="rgb(213,55,42)" fg:x="406" fg:w="7"/><text x="32.7040%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="32.4540%" y="501" width="0.5596%" height="15" fill="rgb(249,197,4)" fg:x="406" fg:w="7"/><text x="32.7040%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="32.4540%" y="485" width="0.5596%" height="15" fill="rgb(212,128,32)" fg:x="406" fg:w="7"/><text x="32.7040%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="32.6139%" y="469" width="0.3997%" height="15" fill="rgb(252,47,30)" fg:x="408" fg:w="5"/><text x="32.8639%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="32.6139%" y="453" width="0.3997%" height="15" fill="rgb(209,79,18)" fg:x="408" fg:w="5"/><text x="32.8639%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.9337%" y="437" width="0.0799%" height="15" fill="rgb(225,81,38)" fg:x="412" fg:w="1"/><text x="33.1837%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9337%" y="421" width="0.0799%" height="15" fill="rgb(205,95,16)" fg:x="412" fg:w="1"/><text x="33.1837%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.9337%" y="405" width="0.0799%" height="15" fill="rgb(214,30,4)" fg:x="412" fg:w="1"/><text x="33.1837%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9337%" y="389" width="0.0799%" height="15" fill="rgb(232,137,22)" fg:x="412" fg:w="1"/><text x="33.1837%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.9337%" y="373" width="0.0799%" height="15" fill="rgb(232,156,19)" fg:x="412" fg:w="1"/><text x="33.1837%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.9337%" y="357" width="0.0799%" height="15" fill="rgb(248,157,26)" fg:x="412" fg:w="1"/><text x="33.1837%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.0136%" y="501" width="0.0799%" height="15" fill="rgb(242,24,3)" fg:x="413" fg:w="1"/><text x="33.2636%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="33.0935%" y="501" width="0.0799%" height="15" fill="rgb(218,195,48)" fg:x="414" fg:w="1"/><text x="33.3435%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="33.0935%" y="485" width="0.0799%" height="15" fill="rgb(214,193,36)" fg:x="414" fg:w="1"/><text x="33.3435%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.0935%" y="469" width="0.0799%" height="15" fill="rgb(242,110,40)" fg:x="414" fg:w="1"/><text x="33.3435%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="33.0935%" y="453" width="0.0799%" height="15" fill="rgb(233,150,26)" fg:x="414" fg:w="1"/><text x="33.3435%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.0935%" y="437" width="0.0799%" height="15" fill="rgb(239,200,30)" fg:x="414" fg:w="1"/><text x="33.3435%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.0935%" y="421" width="0.0799%" height="15" fill="rgb(226,28,11)" fg:x="414" fg:w="1"/><text x="33.3435%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.0935%" y="405" width="0.0799%" height="15" fill="rgb(220,26,48)" fg:x="414" fg:w="1"/><text x="33.3435%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1735%" y="421" width="0.0799%" height="15" fill="rgb(232,10,11)" fg:x="415" fg:w="1"/><text x="33.4235%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1735%" y="405" width="0.0799%" height="15" fill="rgb(252,143,50)" fg:x="415" fg:w="1"/><text x="33.4235%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1735%" y="389" width="0.0799%" height="15" fill="rgb(206,58,22)" fg:x="415" fg:w="1"/><text x="33.4235%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.1735%" y="373" width="0.0799%" height="15" fill="rgb(250,9,45)" fg:x="415" fg:w="1"/><text x="33.4235%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.2534%" y="421" width="0.0799%" height="15" fill="rgb(225,148,14)" fg:x="416" fg:w="1"/><text x="33.5034%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.2534%" y="405" width="0.0799%" height="15" fill="rgb(205,178,40)" fg:x="416" fg:w="1"/><text x="33.5034%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2534%" y="389" width="0.0799%" height="15" fill="rgb(215,201,4)" fg:x="416" fg:w="1"/><text x="33.5034%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2534%" y="373" width="0.0799%" height="15" fill="rgb(219,223,24)" fg:x="416" fg:w="1"/><text x="33.5034%" y="383.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="33.1735%" y="453" width="0.2398%" height="15" fill="rgb(217,19,31)" fg:x="415" fg:w="3"/><text x="33.4235%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="33.1735%" y="437" width="0.2398%" height="15" fill="rgb(235,33,3)" fg:x="415" fg:w="3"/><text x="33.4235%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="33.3333%" y="421" width="0.0799%" height="15" fill="rgb(221,39,18)" fg:x="417" fg:w="1"/><text x="33.5833%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.3333%" y="405" width="0.0799%" height="15" fill="rgb(242,162,33)" fg:x="417" fg:w="1"/><text x="33.5833%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="33.3333%" y="389" width="0.0799%" height="15" fill="rgb(233,215,28)" fg:x="417" fg:w="1"/><text x="33.5833%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="33.1735%" y="485" width="0.3197%" height="15" fill="rgb(212,117,9)" fg:x="415" fg:w="4"/><text x="33.4235%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="33.1735%" y="469" width="0.3197%" height="15" fill="rgb(237,70,47)" fg:x="415" fg:w="4"/><text x="33.4235%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.4133%" y="453" width="0.0799%" height="15" fill="rgb(206,177,13)" fg:x="418" fg:w="1"/><text x="33.6633%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.4133%" y="437" width="0.0799%" height="15" fill="rgb(209,174,33)" fg:x="418" fg:w="1"/><text x="33.6633%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.4133%" y="421" width="0.0799%" height="15" fill="rgb(226,6,11)" fg:x="418" fg:w="1"/><text x="33.6633%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="33.4932%" y="453" width="0.0799%" height="15" fill="rgb(240,214,6)" fg:x="419" fg:w="1"/><text x="33.7432%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.4932%" y="437" width="0.0799%" height="15" fill="rgb(254,214,40)" fg:x="419" fg:w="1"/><text x="33.7432%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="33.5731%" y="453" width="0.0799%" height="15" fill="rgb(230,187,15)" fg:x="420" fg:w="1"/><text x="33.8231%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.5731%" y="437" width="0.0799%" height="15" fill="rgb(250,11,27)" fg:x="420" fg:w="1"/><text x="33.8231%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.5731%" y="421" width="0.0799%" height="15" fill="rgb(243,107,19)" fg:x="420" fg:w="1"/><text x="33.8231%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="33.1735%" y="501" width="0.5596%" height="15" fill="rgb(253,66,26)" fg:x="415" fg:w="7"/><text x="33.4235%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="33.4932%" y="485" width="0.2398%" height="15" fill="rgb(228,43,8)" fg:x="419" fg:w="3"/><text x="33.7432%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="33.4932%" y="469" width="0.2398%" height="15" fill="rgb(232,197,36)" fg:x="419" fg:w="3"/><text x="33.7432%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="33.6531%" y="453" width="0.0799%" height="15" fill="rgb(221,182,31)" fg:x="421" fg:w="1"/><text x="33.9031%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="33.6531%" y="437" width="0.0799%" height="15" fill="rgb(244,25,36)" fg:x="421" fg:w="1"/><text x="33.9031%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="33.6531%" y="421" width="0.0799%" height="15" fill="rgb(247,101,19)" fg:x="421" fg:w="1"/><text x="33.9031%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="33.6531%" y="405" width="0.0799%" height="15" fill="rgb(223,117,19)" fg:x="421" fg:w="1"/><text x="33.9031%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="33.6531%" y="389" width="0.0799%" height="15" fill="rgb(249,63,38)" fg:x="421" fg:w="1"/><text x="33.9031%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7330%" y="453" width="0.0799%" height="15" fill="rgb(220,143,23)" fg:x="422" fg:w="1"/><text x="33.9830%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7330%" y="437" width="0.0799%" height="15" fill="rgb(252,183,22)" fg:x="422" fg:w="1"/><text x="33.9830%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7330%" y="421" width="0.0799%" height="15" fill="rgb(243,176,15)" fg:x="422" fg:w="1"/><text x="33.9830%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.7330%" y="405" width="0.0799%" height="15" fill="rgb(244,204,46)" fg:x="422" fg:w="1"/><text x="33.9830%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.7330%" y="389" width="0.0799%" height="15" fill="rgb(227,28,54)" fg:x="422" fg:w="1"/><text x="33.9830%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.7330%" y="373" width="0.0799%" height="15" fill="rgb(231,10,15)" fg:x="422" fg:w="1"/><text x="33.9830%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.7330%" y="357" width="0.0799%" height="15" fill="rgb(210,200,17)" fg:x="422" fg:w="1"/><text x="33.9830%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.7330%" y="341" width="0.0799%" height="15" fill="rgb(251,106,46)" fg:x="422" fg:w="1"/><text x="33.9830%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.7330%" y="325" width="0.0799%" height="15" fill="rgb(218,211,15)" fg:x="422" fg:w="1"/><text x="33.9830%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.7330%" y="309" width="0.0799%" height="15" fill="rgb(239,62,10)" fg:x="422" fg:w="1"/><text x="33.9830%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.7330%" y="293" width="0.0799%" height="15" fill="rgb(225,53,53)" fg:x="422" fg:w="1"/><text x="33.9830%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.7330%" y="277" width="0.0799%" height="15" fill="rgb(207,16,24)" fg:x="422" fg:w="1"/><text x="33.9830%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.7330%" y="261" width="0.0799%" height="15" fill="rgb(217,52,28)" fg:x="422" fg:w="1"/><text x="33.9830%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.7330%" y="245" width="0.0799%" height="15" fill="rgb(246,1,5)" fg:x="422" fg:w="1"/><text x="33.9830%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7330%" y="229" width="0.0799%" height="15" fill="rgb(221,29,26)" fg:x="422" fg:w="1"/><text x="33.9830%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="33.7330%" y="485" width="0.2398%" height="15" fill="rgb(250,133,32)" fg:x="422" fg:w="3"/><text x="33.9830%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="33.7330%" y="469" width="0.2398%" height="15" fill="rgb(236,63,16)" fg:x="422" fg:w="3"/><text x="33.9830%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.8129%" y="453" width="0.1599%" height="15" fill="rgb(231,159,14)" fg:x="423" fg:w="2"/><text x="34.0629%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.8129%" y="437" width="0.1599%" height="15" fill="rgb(207,102,36)" fg:x="423" fg:w="2"/><text x="34.0629%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="33.8129%" y="421" width="0.1599%" height="15" fill="rgb(230,224,31)" fg:x="423" fg:w="2"/><text x="34.0629%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.8129%" y="405" width="0.1599%" height="15" fill="rgb(215,182,16)" fg:x="423" fg:w="2"/><text x="34.0629%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.8129%" y="389" width="0.1599%" height="15" fill="rgb(226,113,2)" fg:x="423" fg:w="2"/><text x="34.0629%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.8929%" y="373" width="0.0799%" height="15" fill="rgb(241,18,35)" fg:x="424" fg:w="1"/><text x="34.1429%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.8929%" y="357" width="0.0799%" height="15" fill="rgb(240,165,44)" fg:x="424" fg:w="1"/><text x="34.1429%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.9728%" y="421" width="0.0799%" height="15" fill="rgb(229,130,47)" fg:x="425" fg:w="1"/><text x="34.2228%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.9728%" y="405" width="0.0799%" height="15" fill="rgb(223,93,7)" fg:x="425" fg:w="1"/><text x="34.2228%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.9728%" y="389" width="0.0799%" height="15" fill="rgb(205,180,36)" fg:x="425" fg:w="1"/><text x="34.2228%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.9728%" y="373" width="0.0799%" height="15" fill="rgb(221,103,28)" fg:x="425" fg:w="1"/><text x="34.2228%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.9728%" y="357" width="0.0799%" height="15" fill="rgb(212,4,3)" fg:x="425" fg:w="1"/><text x="34.2228%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.9728%" y="341" width="0.0799%" height="15" fill="rgb(209,221,53)" fg:x="425" fg:w="1"/><text x="34.2228%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.9728%" y="325" width="0.0799%" height="15" fill="rgb(233,229,52)" fg:x="425" fg:w="1"/><text x="34.2228%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.9728%" y="309" width="0.0799%" height="15" fill="rgb(254,127,37)" fg:x="425" fg:w="1"/><text x="34.2228%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="33.9728%" y="485" width="0.1599%" height="15" fill="rgb(207,161,26)" fg:x="425" fg:w="2"/><text x="34.2228%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="33.9728%" y="469" width="0.1599%" height="15" fill="rgb(223,75,5)" fg:x="425" fg:w="2"/><text x="34.2228%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.9728%" y="453" width="0.1599%" height="15" fill="rgb(235,115,52)" fg:x="425" fg:w="2"/><text x="34.2228%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.9728%" y="437" width="0.1599%" height="15" fill="rgb(240,91,46)" fg:x="425" fg:w="2"/><text x="34.2228%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0528%" y="421" width="0.0799%" height="15" fill="rgb(251,144,21)" fg:x="426" fg:w="1"/><text x="34.3028%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="33.7330%" y="501" width="0.4796%" height="15" fill="rgb(247,220,47)" fg:x="422" fg:w="6"/><text x="33.9830%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.1327%" y="485" width="0.0799%" height="15" fill="rgb(253,122,1)" fg:x="427" fg:w="1"/><text x="34.3827%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2126%" y="469" width="0.0799%" height="15" fill="rgb(221,0,24)" fg:x="428" fg:w="1"/><text x="34.4626%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="34.2926%" y="453" width="0.0799%" height="15" fill="rgb(220,204,54)" fg:x="429" fg:w="1"/><text x="34.5426%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.3725%" y="309" width="0.0799%" height="15" fill="rgb(205,96,25)" fg:x="430" fg:w="1"/><text x="34.6225%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.3725%" y="293" width="0.0799%" height="15" fill="rgb(247,77,20)" fg:x="430" fg:w="1"/><text x="34.6225%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.3725%" y="277" width="0.0799%" height="15" fill="rgb(245,151,8)" fg:x="430" fg:w="1"/><text x="34.6225%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.3725%" y="261" width="0.0799%" height="15" fill="rgb(242,158,39)" fg:x="430" fg:w="1"/><text x="34.6225%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.3725%" y="245" width="0.0799%" height="15" fill="rgb(222,214,50)" fg:x="430" fg:w="1"/><text x="34.6225%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.3725%" y="229" width="0.0799%" height="15" fill="rgb(229,60,39)" fg:x="430" fg:w="1"/><text x="34.6225%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.3725%" y="213" width="0.0799%" height="15" fill="rgb(240,148,18)" fg:x="430" fg:w="1"/><text x="34.6225%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.3725%" y="405" width="0.1599%" height="15" fill="rgb(215,96,11)" fg:x="430" fg:w="2"/><text x="34.6225%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.3725%" y="389" width="0.1599%" height="15" fill="rgb(238,162,53)" fg:x="430" fg:w="2"/><text x="34.6225%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.3725%" y="373" width="0.1599%" height="15" fill="rgb(214,83,18)" fg:x="430" fg:w="2"/><text x="34.6225%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="34.3725%" y="357" width="0.1599%" height="15" fill="rgb(248,117,24)" fg:x="430" fg:w="2"/><text x="34.6225%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="34.3725%" y="341" width="0.1599%" height="15" fill="rgb(238,190,6)" fg:x="430" fg:w="2"/><text x="34.6225%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="34.3725%" y="325" width="0.1599%" height="15" fill="rgb(213,51,6)" fg:x="430" fg:w="2"/><text x="34.6225%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.4524%" y="309" width="0.0799%" height="15" fill="rgb(212,136,1)" fg:x="431" fg:w="1"/><text x="34.7024%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.4524%" y="293" width="0.0799%" height="15" fill="rgb(221,192,14)" fg:x="431" fg:w="1"/><text x="34.7024%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="34.2926%" y="469" width="0.3197%" height="15" fill="rgb(244,38,54)" fg:x="429" fg:w="4"/><text x="34.5426%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="34.3725%" y="453" width="0.2398%" height="15" fill="rgb(240,45,28)" fg:x="430" fg:w="3"/><text x="34.6225%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.3725%" y="437" width="0.2398%" height="15" fill="rgb(240,123,12)" fg:x="430" fg:w="3"/><text x="34.6225%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.3725%" y="421" width="0.2398%" height="15" fill="rgb(216,14,30)" fg:x="430" fg:w="3"/><text x="34.6225%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5324%" y="405" width="0.0799%" height="15" fill="rgb(212,50,24)" fg:x="432" fg:w="1"/><text x="34.7824%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.6123%" y="437" width="0.0799%" height="15" fill="rgb(253,229,47)" fg:x="433" fg:w="1"/><text x="34.8623%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.6123%" y="421" width="0.0799%" height="15" fill="rgb(214,26,17)" fg:x="433" fg:w="1"/><text x="34.8623%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.6123%" y="405" width="0.0799%" height="15" fill="rgb(252,60,11)" fg:x="433" fg:w="1"/><text x="34.8623%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.6123%" y="389" width="0.0799%" height="15" fill="rgb(209,59,37)" fg:x="433" fg:w="1"/><text x="34.8623%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.6123%" y="373" width="0.0799%" height="15" fill="rgb(228,126,53)" fg:x="433" fg:w="1"/><text x="34.8623%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.6123%" y="357" width="0.0799%" height="15" fill="rgb(233,99,2)" fg:x="433" fg:w="1"/><text x="34.8623%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.6123%" y="341" width="0.0799%" height="15" fill="rgb(217,106,34)" fg:x="433" fg:w="1"/><text x="34.8623%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.6123%" y="325" width="0.0799%" height="15" fill="rgb(222,46,19)" fg:x="433" fg:w="1"/><text x="34.8623%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.6123%" y="309" width="0.0799%" height="15" fill="rgb(251,87,31)" fg:x="433" fg:w="1"/><text x="34.8623%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.6123%" y="293" width="0.0799%" height="15" fill="rgb(213,70,51)" fg:x="433" fg:w="1"/><text x="34.8623%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.6123%" y="277" width="0.0799%" height="15" fill="rgb(229,144,18)" fg:x="433" fg:w="1"/><text x="34.8623%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.6123%" y="261" width="0.0799%" height="15" fill="rgb(254,60,26)" fg:x="433" fg:w="1"/><text x="34.8623%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.6123%" y="245" width="0.0799%" height="15" fill="rgb(243,127,51)" fg:x="433" fg:w="1"/><text x="34.8623%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.6123%" y="229" width="0.0799%" height="15" fill="rgb(221,51,25)" fg:x="433" fg:w="1"/><text x="34.8623%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6123%" y="213" width="0.0799%" height="15" fill="rgb(205,42,7)" fg:x="433" fg:w="1"/><text x="34.8623%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.6922%" y="405" width="0.0799%" height="15" fill="rgb(236,177,48)" fg:x="434" fg:w="1"/><text x="34.9422%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.6922%" y="389" width="0.0799%" height="15" fill="rgb(226,79,31)" fg:x="434" fg:w="1"/><text x="34.9422%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="34.6123%" y="469" width="0.2398%" height="15" fill="rgb(216,170,12)" fg:x="433" fg:w="3"/><text x="34.8623%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="34.6123%" y="453" width="0.2398%" height="15" fill="rgb(208,62,51)" fg:x="433" fg:w="3"/><text x="34.8623%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.6922%" y="437" width="0.1599%" height="15" fill="rgb(254,129,9)" fg:x="434" fg:w="2"/><text x="34.9422%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.6922%" y="421" width="0.1599%" height="15" fill="rgb(243,209,31)" fg:x="434" fg:w="2"/><text x="34.9422%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.7722%" y="405" width="0.0799%" height="15" fill="rgb(213,159,23)" fg:x="435" fg:w="1"/><text x="35.0222%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.7722%" y="389" width="0.0799%" height="15" fill="rgb(249,77,39)" fg:x="435" fg:w="1"/><text x="35.0222%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.7722%" y="373" width="0.0799%" height="15" fill="rgb(230,13,33)" fg:x="435" fg:w="1"/><text x="35.0222%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.7722%" y="357" width="0.0799%" height="15" fill="rgb(215,215,7)" fg:x="435" fg:w="1"/><text x="35.0222%" y="367.50"></text></g><g><title>plugins_core::build::Build::into_entry (24 samples, 1.92%)</title><rect x="33.0136%" y="533" width="1.9185%" height="15" fill="rgb(222,92,25)" fg:x="413" fg:w="24"/><text x="33.2636%" y="543.50">p..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (24 samples, 1.92%)</title><rect x="33.0136%" y="517" width="1.9185%" height="15" fill="rgb(215,173,22)" fg:x="413" fg:w="24"/><text x="33.2636%" y="527.50">&lt;..</text></g><g><title>kernel::model::entry::EntryResolver::world (9 samples, 0.72%)</title><rect x="34.2126%" y="501" width="0.7194%" height="15" fill="rgb(247,205,52)" fg:x="428" fg:w="9"/><text x="34.4626%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="34.2126%" y="485" width="0.7194%" height="15" fill="rgb(240,210,37)" fg:x="428" fg:w="9"/><text x="34.4626%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.8521%" y="469" width="0.0799%" height="15" fill="rgb(224,13,10)" fg:x="436" fg:w="1"/><text x="35.1021%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.8521%" y="453" width="0.0799%" height="15" fill="rgb(209,48,33)" fg:x="436" fg:w="1"/><text x="35.1021%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.8521%" y="437" width="0.0799%" height="15" fill="rgb(228,219,23)" fg:x="436" fg:w="1"/><text x="35.1021%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.8521%" y="421" width="0.0799%" height="15" fill="rgb(239,46,49)" fg:x="436" fg:w="1"/><text x="35.1021%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="34.8521%" y="405" width="0.0799%" height="15" fill="rgb(206,172,51)" fg:x="436" fg:w="1"/><text x="35.1021%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.8521%" y="389" width="0.0799%" height="15" fill="rgb(213,212,35)" fg:x="436" fg:w="1"/><text x="35.1021%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.8521%" y="373" width="0.0799%" height="15" fill="rgb(252,40,27)" fg:x="436" fg:w="1"/><text x="35.1021%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.8521%" y="357" width="0.0799%" height="15" fill="rgb(212,33,41)" fg:x="436" fg:w="1"/><text x="35.1021%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="34.8521%" y="341" width="0.0799%" height="15" fill="rgb(232,160,27)" fg:x="436" fg:w="1"/><text x="35.1021%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="34.8521%" y="325" width="0.0799%" height="15" fill="rgb(244,160,20)" fg:x="436" fg:w="1"/><text x="35.1021%" y="335.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="34.8521%" y="309" width="0.0799%" height="15" fill="rgb(205,66,20)" fg:x="436" fg:w="1"/><text x="35.1021%" y="319.50"></text></g><g><title>core::fmt::Formatter::sign_plus (1 samples, 0.08%)</title><rect x="34.8521%" y="293" width="0.0799%" height="15" fill="rgb(236,158,6)" fg:x="436" fg:w="1"/><text x="35.1021%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="34.9321%" y="517" width="0.0799%" height="15" fill="rgb(232,25,36)" fg:x="437" fg:w="1"/><text x="35.1821%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (224 samples, 17.91%)</title><rect x="17.1863%" y="565" width="17.9057%" height="15" fill="rgb(220,153,35)" fg:x="215" fg:w="224"/><text x="17.4363%" y="575.50">plugins_core::build::BuildSu..</text></g><g><title>plugins_core::build::Build::wearing (26 samples, 2.08%)</title><rect x="33.0136%" y="549" width="2.0783%" height="15" fill="rgb(216,5,8)" fg:x="413" fg:w="26"/><text x="33.2636%" y="559.50">p..</text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="34.9321%" y="533" width="0.1599%" height="15" fill="rgb(240,97,3)" fg:x="437" fg:w="2"/><text x="35.1821%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="35.0120%" y="517" width="0.0799%" height="15" fill="rgb(220,99,26)" fg:x="438" fg:w="1"/><text x="35.2620%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.0120%" y="501" width="0.0799%" height="15" fill="rgb(237,96,2)" fg:x="438" fg:w="1"/><text x="35.2620%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.0120%" y="485" width="0.0799%" height="15" fill="rgb(217,197,47)" fg:x="438" fg:w="1"/><text x="35.2620%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0919%" y="549" width="0.0799%" height="15" fill="rgb(252,133,54)" fg:x="439" fg:w="1"/><text x="35.3419%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (2 samples, 0.16%)</title><rect x="35.0919%" y="565" width="0.1599%" height="15" fill="rgb(233,37,30)" fg:x="439" fg:w="2"/><text x="35.3419%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.1719%" y="549" width="0.0799%" height="15" fill="rgb(239,182,12)" fg:x="440" fg:w="1"/><text x="35.4219%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.1719%" y="533" width="0.0799%" height="15" fill="rgb(245,83,39)" fg:x="440" fg:w="1"/><text x="35.4219%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.2518%" y="501" width="0.0799%" height="15" fill="rgb(222,109,36)" fg:x="441" fg:w="1"/><text x="35.5018%" y="511.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="35.2518%" y="517" width="0.1599%" height="15" fill="rgb(237,95,44)" fg:x="441" fg:w="2"/><text x="35.5018%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="35.3317%" y="501" width="0.0799%" height="15" fill="rgb(216,36,54)" fg:x="442" fg:w="1"/><text x="35.5817%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="35.3317%" y="485" width="0.0799%" height="15" fill="rgb(236,164,3)" fg:x="442" fg:w="1"/><text x="35.5817%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="35.2518%" y="533" width="0.3197%" height="15" fill="rgb(223,15,21)" fg:x="441" fg:w="4"/><text x="35.5018%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="35.4117%" y="517" width="0.1599%" height="15" fill="rgb(239,191,12)" fg:x="443" fg:w="2"/><text x="35.6617%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.4117%" y="501" width="0.1599%" height="15" fill="rgb(231,191,37)" fg:x="443" fg:w="2"/><text x="35.6617%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.4916%" y="485" width="0.0799%" height="15" fill="rgb(209,155,36)" fg:x="444" fg:w="1"/><text x="35.7416%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.4916%" y="469" width="0.0799%" height="15" fill="rgb(216,222,49)" fg:x="444" fg:w="1"/><text x="35.7416%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.4916%" y="453" width="0.0799%" height="15" fill="rgb(218,181,2)" fg:x="444" fg:w="1"/><text x="35.7416%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.4916%" y="437" width="0.0799%" height="15" fill="rgb(239,125,9)" fg:x="444" fg:w="1"/><text x="35.7416%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.4916%" y="421" width="0.0799%" height="15" fill="rgb(233,103,7)" fg:x="444" fg:w="1"/><text x="35.7416%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.4916%" y="405" width="0.0799%" height="15" fill="rgb(209,223,5)" fg:x="444" fg:w="1"/><text x="35.7416%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.4916%" y="389" width="0.0799%" height="15" fill="rgb(234,71,27)" fg:x="444" fg:w="1"/><text x="35.7416%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.4916%" y="373" width="0.0799%" height="15" fill="rgb(251,202,16)" fg:x="444" fg:w="1"/><text x="35.7416%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.4916%" y="357" width="0.0799%" height="15" fill="rgb(231,180,0)" fg:x="444" fg:w="1"/><text x="35.7416%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.4916%" y="341" width="0.0799%" height="15" fill="rgb(223,58,28)" fg:x="444" fg:w="1"/><text x="35.7416%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.4916%" y="325" width="0.0799%" height="15" fill="rgb(250,34,24)" fg:x="444" fg:w="1"/><text x="35.7416%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="35.4916%" y="309" width="0.0799%" height="15" fill="rgb(235,24,16)" fg:x="444" fg:w="1"/><text x="35.7416%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="35.4916%" y="293" width="0.0799%" height="15" fill="rgb(219,28,33)" fg:x="444" fg:w="1"/><text x="35.7416%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6515%" y="453" width="0.0799%" height="15" fill="rgb(228,150,43)" fg:x="446" fg:w="1"/><text x="35.9015%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6515%" y="437" width="0.0799%" height="15" fill="rgb(221,228,36)" fg:x="446" fg:w="1"/><text x="35.9015%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6515%" y="421" width="0.0799%" height="15" fill="rgb(232,116,17)" fg:x="446" fg:w="1"/><text x="35.9015%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6515%" y="405" width="0.0799%" height="15" fill="rgb(220,110,51)" fg:x="446" fg:w="1"/><text x="35.9015%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.6515%" y="389" width="0.0799%" height="15" fill="rgb(207,26,25)" fg:x="446" fg:w="1"/><text x="35.9015%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.6515%" y="373" width="0.0799%" height="15" fill="rgb(223,58,19)" fg:x="446" fg:w="1"/><text x="35.9015%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.6515%" y="357" width="0.0799%" height="15" fill="rgb(234,125,39)" fg:x="446" fg:w="1"/><text x="35.9015%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="35.6515%" y="341" width="0.0799%" height="15" fill="rgb(241,48,36)" fg:x="446" fg:w="1"/><text x="35.9015%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="35.6515%" y="325" width="0.0799%" height="15" fill="rgb(217,148,51)" fg:x="446" fg:w="1"/><text x="35.9015%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="35.5715%" y="501" width="0.2398%" height="15" fill="rgb(247,17,25)" fg:x="445" fg:w="3"/><text x="35.8215%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.5715%" y="485" width="0.2398%" height="15" fill="rgb(219,89,38)" fg:x="445" fg:w="3"/><text x="35.8215%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.6515%" y="469" width="0.1599%" height="15" fill="rgb(220,145,2)" fg:x="446" fg:w="2"/><text x="35.9015%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.7314%" y="453" width="0.0799%" height="15" fill="rgb(244,66,47)" fg:x="447" fg:w="1"/><text x="35.9814%" y="463.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="35.8114%" y="469" width="0.0799%" height="15" fill="rgb(226,182,5)" fg:x="448" fg:w="1"/><text x="36.0614%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="35.8114%" y="501" width="0.1599%" height="15" fill="rgb(211,98,20)" fg:x="448" fg:w="2"/><text x="36.0614%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="35.8114%" y="485" width="0.1599%" height="15" fill="rgb(217,103,52)" fg:x="448" fg:w="2"/><text x="36.0614%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.8913%" y="469" width="0.0799%" height="15" fill="rgb(208,125,52)" fg:x="449" fg:w="1"/><text x="36.1413%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.8913%" y="453" width="0.0799%" height="15" fill="rgb(244,70,13)" fg:x="449" fg:w="1"/><text x="36.1413%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.9712%" y="421" width="0.0799%" height="15" fill="rgb(253,124,3)" fg:x="450" fg:w="1"/><text x="36.2212%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.9712%" y="405" width="0.0799%" height="15" fill="rgb(222,145,32)" fg:x="450" fg:w="1"/><text x="36.2212%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.9712%" y="389" width="0.0799%" height="15" fill="rgb(232,183,47)" fg:x="450" fg:w="1"/><text x="36.2212%" y="399.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="35.9712%" y="453" width="0.1599%" height="15" fill="rgb(246,226,4)" fg:x="450" fg:w="2"/><text x="36.2212%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="35.9712%" y="437" width="0.1599%" height="15" fill="rgb(228,185,46)" fg:x="450" fg:w="2"/><text x="36.2212%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0512%" y="421" width="0.0799%" height="15" fill="rgb(213,196,4)" fg:x="451" fg:w="1"/><text x="36.3012%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0512%" y="405" width="0.0799%" height="15" fill="rgb(212,2,45)" fg:x="451" fg:w="1"/><text x="36.3012%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.0512%" y="389" width="0.0799%" height="15" fill="rgb(217,145,50)" fg:x="451" fg:w="1"/><text x="36.3012%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1311%" y="437" width="0.0799%" height="15" fill="rgb(242,10,46)" fg:x="452" fg:w="1"/><text x="36.3811%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1311%" y="421" width="0.0799%" height="15" fill="rgb(252,91,48)" fg:x="452" fg:w="1"/><text x="36.3811%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1311%" y="405" width="0.0799%" height="15" fill="rgb(216,72,13)" fg:x="452" fg:w="1"/><text x="36.3811%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1311%" y="389" width="0.0799%" height="15" fill="rgb(219,6,37)" fg:x="452" fg:w="1"/><text x="36.3811%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1311%" y="373" width="0.0799%" height="15" fill="rgb(236,185,40)" fg:x="452" fg:w="1"/><text x="36.3811%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.1311%" y="357" width="0.0799%" height="15" fill="rgb(208,81,48)" fg:x="452" fg:w="1"/><text x="36.3811%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.1311%" y="341" width="0.0799%" height="15" fill="rgb(211,42,33)" fg:x="452" fg:w="1"/><text x="36.3811%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.1311%" y="325" width="0.0799%" height="15" fill="rgb(211,90,39)" fg:x="452" fg:w="1"/><text x="36.3811%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1311%" y="309" width="0.0799%" height="15" fill="rgb(218,136,12)" fg:x="452" fg:w="1"/><text x="36.3811%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1311%" y="293" width="0.0799%" height="15" fill="rgb(234,12,32)" fg:x="452" fg:w="1"/><text x="36.3811%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.1311%" y="277" width="0.0799%" height="15" fill="rgb(221,164,18)" fg:x="452" fg:w="1"/><text x="36.3811%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.1311%" y="261" width="0.0799%" height="15" fill="rgb(239,135,14)" fg:x="452" fg:w="1"/><text x="36.3811%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.1311%" y="245" width="0.0799%" height="15" fill="rgb(226,198,47)" fg:x="452" fg:w="1"/><text x="36.3811%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.1311%" y="229" width="0.0799%" height="15" fill="rgb(244,121,47)" fg:x="452" fg:w="1"/><text x="36.3811%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1311%" y="213" width="0.0799%" height="15" fill="rgb(226,21,48)" fg:x="452" fg:w="1"/><text x="36.3811%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2110%" y="437" width="0.0799%" height="15" fill="rgb(215,178,47)" fg:x="453" fg:w="1"/><text x="36.4610%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="35.9712%" y="485" width="0.3997%" height="15" fill="rgb(206,212,19)" fg:x="450" fg:w="5"/><text x="36.2212%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="35.9712%" y="469" width="0.3997%" height="15" fill="rgb(230,104,34)" fg:x="450" fg:w="5"/><text x="36.2212%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="36.1311%" y="453" width="0.2398%" height="15" fill="rgb(210,96,51)" fg:x="452" fg:w="3"/><text x="36.3811%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2910%" y="437" width="0.0799%" height="15" fill="rgb(229,111,47)" fg:x="454" fg:w="1"/><text x="36.5410%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2910%" y="421" width="0.0799%" height="15" fill="rgb(218,174,45)" fg:x="454" fg:w="1"/><text x="36.5410%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.2910%" y="405" width="0.0799%" height="15" fill="rgb(215,21,32)" fg:x="454" fg:w="1"/><text x="36.5410%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2910%" y="389" width="0.0799%" height="15" fill="rgb(235,72,21)" fg:x="454" fg:w="1"/><text x="36.5410%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.2910%" y="373" width="0.0799%" height="15" fill="rgb(250,113,30)" fg:x="454" fg:w="1"/><text x="36.5410%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.2910%" y="357" width="0.0799%" height="15" fill="rgb(244,136,34)" fg:x="454" fg:w="1"/><text x="36.5410%" y="367.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="36.3709%" y="485" width="0.0799%" height="15" fill="rgb(213,226,47)" fg:x="455" fg:w="1"/><text x="36.6209%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3709%" y="469" width="0.0799%" height="15" fill="rgb(224,136,40)" fg:x="455" fg:w="1"/><text x="36.6209%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3709%" y="453" width="0.0799%" height="15" fill="rgb(253,124,12)" fg:x="455" fg:w="1"/><text x="36.6209%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="35.9712%" y="501" width="0.5596%" height="15" fill="rgb(210,67,8)" fg:x="450" fg:w="7"/><text x="36.2212%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="36.4508%" y="485" width="0.0799%" height="15" fill="rgb(210,204,0)" fg:x="456" fg:w="1"/><text x="36.7008%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.4508%" y="469" width="0.0799%" height="15" fill="rgb(217,179,22)" fg:x="456" fg:w="1"/><text x="36.7008%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.4508%" y="453" width="0.0799%" height="15" fill="rgb(237,192,33)" fg:x="456" fg:w="1"/><text x="36.7008%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="36.4508%" y="437" width="0.0799%" height="15" fill="rgb(211,104,28)" fg:x="456" fg:w="1"/><text x="36.7008%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="36.4508%" y="421" width="0.0799%" height="15" fill="rgb(214,75,30)" fg:x="456" fg:w="1"/><text x="36.7008%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="36.4508%" y="405" width="0.0799%" height="15" fill="rgb(220,227,12)" fg:x="456" fg:w="1"/><text x="36.7008%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="36.4508%" y="389" width="0.0799%" height="15" fill="rgb(233,134,28)" fg:x="456" fg:w="1"/><text x="36.7008%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="36.4508%" y="373" width="0.0799%" height="15" fill="rgb(215,146,24)" fg:x="456" fg:w="1"/><text x="36.7008%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.4508%" y="357" width="0.0799%" height="15" fill="rgb(248,227,20)" fg:x="456" fg:w="1"/><text x="36.7008%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="36.5308%" y="485" width="0.1599%" height="15" fill="rgb(250,44,42)" fg:x="457" fg:w="2"/><text x="36.7808%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="36.5308%" y="469" width="0.1599%" height="15" fill="rgb(219,5,35)" fg:x="457" fg:w="2"/><text x="36.7808%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.5308%" y="453" width="0.1599%" height="15" fill="rgb(241,132,32)" fg:x="457" fg:w="2"/><text x="36.7808%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6107%" y="437" width="0.0799%" height="15" fill="rgb(234,212,51)" fg:x="458" fg:w="1"/><text x="36.8607%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.6107%" y="421" width="0.0799%" height="15" fill="rgb(242,173,29)" fg:x="458" fg:w="1"/><text x="36.8607%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.6107%" y="405" width="0.0799%" height="15" fill="rgb(212,159,2)" fg:x="458" fg:w="1"/><text x="36.8607%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.6107%" y="389" width="0.0799%" height="15" fill="rgb(238,165,31)" fg:x="458" fg:w="1"/><text x="36.8607%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.6107%" y="373" width="0.0799%" height="15" fill="rgb(241,57,36)" fg:x="458" fg:w="1"/><text x="36.8607%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.6107%" y="357" width="0.0799%" height="15" fill="rgb(249,7,4)" fg:x="458" fg:w="1"/><text x="36.8607%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.6107%" y="341" width="0.0799%" height="15" fill="rgb(250,137,44)" fg:x="458" fg:w="1"/><text x="36.8607%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.6107%" y="325" width="0.0799%" height="15" fill="rgb(244,185,1)" fg:x="458" fg:w="1"/><text x="36.8607%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.7706%" y="453" width="0.0799%" height="15" fill="rgb(216,5,53)" fg:x="460" fg:w="1"/><text x="37.0206%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.8505%" y="389" width="0.0799%" height="15" fill="rgb(234,89,21)" fg:x="461" fg:w="1"/><text x="37.1005%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="36.5308%" y="501" width="0.4796%" height="15" fill="rgb(250,81,43)" fg:x="457" fg:w="6"/><text x="36.7808%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="36.6906%" y="485" width="0.3197%" height="15" fill="rgb(243,132,11)" fg:x="459" fg:w="4"/><text x="36.9406%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="36.7706%" y="469" width="0.2398%" height="15" fill="rgb(253,159,28)" fg:x="460" fg:w="3"/><text x="37.0206%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.8505%" y="453" width="0.1599%" height="15" fill="rgb(237,167,34)" fg:x="461" fg:w="2"/><text x="37.1005%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.8505%" y="437" width="0.1599%" height="15" fill="rgb(237,16,50)" fg:x="461" fg:w="2"/><text x="37.1005%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.8505%" y="421" width="0.1599%" height="15" fill="rgb(247,125,2)" fg:x="461" fg:w="2"/><text x="37.1005%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.8505%" y="405" width="0.1599%" height="15" fill="rgb(254,35,3)" fg:x="461" fg:w="2"/><text x="37.1005%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9305%" y="389" width="0.0799%" height="15" fill="rgb(237,209,21)" fg:x="462" fg:w="1"/><text x="37.1805%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9305%" y="373" width="0.0799%" height="15" fill="rgb(224,122,20)" fg:x="462" fg:w="1"/><text x="37.1805%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.0104%" y="453" width="0.0799%" height="15" fill="rgb(224,11,46)" fg:x="463" fg:w="1"/><text x="37.2604%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="37.0903%" y="453" width="0.0799%" height="15" fill="rgb(248,21,33)" fg:x="464" fg:w="1"/><text x="37.3403%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.0903%" y="437" width="0.0799%" height="15" fill="rgb(222,144,7)" fg:x="464" fg:w="1"/><text x="37.3403%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.0903%" y="421" width="0.0799%" height="15" fill="rgb(205,141,37)" fg:x="464" fg:w="1"/><text x="37.3403%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.1703%" y="437" width="0.1599%" height="15" fill="rgb(237,130,8)" fg:x="465" fg:w="2"/><text x="37.4203%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.1703%" y="421" width="0.1599%" height="15" fill="rgb(209,179,39)" fg:x="465" fg:w="2"/><text x="37.4203%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.1703%" y="405" width="0.1599%" height="15" fill="rgb(207,52,17)" fg:x="465" fg:w="2"/><text x="37.4203%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.2502%" y="389" width="0.0799%" height="15" fill="rgb(253,158,17)" fg:x="466" fg:w="1"/><text x="37.5002%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.2502%" y="373" width="0.0799%" height="15" fill="rgb(208,19,53)" fg:x="466" fg:w="1"/><text x="37.5002%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.2502%" y="357" width="0.0799%" height="15" fill="rgb(233,152,13)" fg:x="466" fg:w="1"/><text x="37.5002%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.2502%" y="341" width="0.0799%" height="15" fill="rgb(231,84,1)" fg:x="466" fg:w="1"/><text x="37.5002%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.2502%" y="325" width="0.0799%" height="15" fill="rgb(229,142,48)" fg:x="466" fg:w="1"/><text x="37.5002%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.2502%" y="309" width="0.0799%" height="15" fill="rgb(248,70,29)" fg:x="466" fg:w="1"/><text x="37.5002%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.2502%" y="293" width="0.0799%" height="15" fill="rgb(250,85,7)" fg:x="466" fg:w="1"/><text x="37.5002%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.2502%" y="277" width="0.0799%" height="15" fill="rgb(235,140,43)" fg:x="466" fg:w="1"/><text x="37.5002%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.2502%" y="261" width="0.0799%" height="15" fill="rgb(216,0,5)" fg:x="466" fg:w="1"/><text x="37.5002%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.2502%" y="245" width="0.0799%" height="15" fill="rgb(223,167,29)" fg:x="466" fg:w="1"/><text x="37.5002%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.2502%" y="229" width="0.0799%" height="15" fill="rgb(229,150,33)" fg:x="466" fg:w="1"/><text x="37.5002%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2502%" y="213" width="0.0799%" height="15" fill="rgb(227,26,52)" fg:x="466" fg:w="1"/><text x="37.5002%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3301%" y="437" width="0.0799%" height="15" fill="rgb(250,60,52)" fg:x="467" fg:w="1"/><text x="37.5801%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.3301%" y="421" width="0.0799%" height="15" fill="rgb(228,81,46)" fg:x="467" fg:w="1"/><text x="37.5801%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3301%" y="405" width="0.0799%" height="15" fill="rgb(225,218,31)" fg:x="467" fg:w="1"/><text x="37.5801%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3301%" y="389" width="0.0799%" height="15" fill="rgb(230,35,16)" fg:x="467" fg:w="1"/><text x="37.5801%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="37.0104%" y="469" width="0.4796%" height="15" fill="rgb(247,100,0)" fg:x="463" fg:w="6"/><text x="37.2604%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="37.1703%" y="453" width="0.3197%" height="15" fill="rgb(223,135,11)" fg:x="465" fg:w="4"/><text x="37.4203%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.4101%" y="437" width="0.0799%" height="15" fill="rgb(207,136,0)" fg:x="468" fg:w="1"/><text x="37.6601%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4101%" y="421" width="0.0799%" height="15" fill="rgb(246,131,25)" fg:x="468" fg:w="1"/><text x="37.6601%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.4101%" y="405" width="0.0799%" height="15" fill="rgb(209,47,12)" fg:x="468" fg:w="1"/><text x="37.6601%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4101%" y="389" width="0.0799%" height="15" fill="rgb(221,25,16)" fg:x="468" fg:w="1"/><text x="37.6601%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.4101%" y="373" width="0.0799%" height="15" fill="rgb(223,164,33)" fg:x="468" fg:w="1"/><text x="37.6601%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4101%" y="357" width="0.0799%" height="15" fill="rgb(220,26,23)" fg:x="468" fg:w="1"/><text x="37.6601%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.4101%" y="341" width="0.0799%" height="15" fill="rgb(231,224,1)" fg:x="468" fg:w="1"/><text x="37.6601%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4900%" y="453" width="0.0799%" height="15" fill="rgb(229,221,24)" fg:x="469" fg:w="1"/><text x="37.7400%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4900%" y="437" width="0.0799%" height="15" fill="rgb(213,34,10)" fg:x="469" fg:w="1"/><text x="37.7400%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.4900%" y="421" width="0.0799%" height="15" fill="rgb(215,33,11)" fg:x="469" fg:w="1"/><text x="37.7400%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.4900%" y="405" width="0.0799%" height="15" fill="rgb(216,20,41)" fg:x="469" fg:w="1"/><text x="37.7400%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.4900%" y="389" width="0.0799%" height="15" fill="rgb(228,43,31)" fg:x="469" fg:w="1"/><text x="37.7400%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4900%" y="373" width="0.0799%" height="15" fill="rgb(227,83,26)" fg:x="469" fg:w="1"/><text x="37.7400%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4900%" y="357" width="0.0799%" height="15" fill="rgb(217,168,19)" fg:x="469" fg:w="1"/><text x="37.7400%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.4900%" y="341" width="0.0799%" height="15" fill="rgb(231,34,33)" fg:x="469" fg:w="1"/><text x="37.7400%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.4900%" y="325" width="0.0799%" height="15" fill="rgb(230,120,51)" fg:x="469" fg:w="1"/><text x="37.7400%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.4900%" y="309" width="0.0799%" height="15" fill="rgb(215,138,27)" fg:x="469" fg:w="1"/><text x="37.7400%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.4900%" y="293" width="0.0799%" height="15" fill="rgb(246,80,47)" fg:x="469" fg:w="1"/><text x="37.7400%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.5699%" y="437" width="0.0799%" height="15" fill="rgb(215,57,53)" fg:x="470" fg:w="1"/><text x="37.8199%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.6499%" y="437" width="0.0799%" height="15" fill="rgb(229,137,5)" fg:x="471" fg:w="1"/><text x="37.8999%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.6499%" y="421" width="0.0799%" height="15" fill="rgb(210,86,2)" fg:x="471" fg:w="1"/><text x="37.8999%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.6499%" y="405" width="0.0799%" height="15" fill="rgb(231,226,51)" fg:x="471" fg:w="1"/><text x="37.8999%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.6499%" y="389" width="0.0799%" height="15" fill="rgb(216,62,29)" fg:x="471" fg:w="1"/><text x="37.8999%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (29 samples, 2.32%)</title><rect x="35.5715%" y="517" width="2.3181%" height="15" fill="rgb(248,202,3)" fg:x="445" fg:w="29"/><text x="35.8215%" y="527.50">&lt;..</text></g><g><title>kernel::model::entry::EntryResolver::world (11 samples, 0.88%)</title><rect x="37.0104%" y="501" width="0.8793%" height="15" fill="rgb(225,181,7)" fg:x="463" fg:w="11"/><text x="37.2604%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="37.0104%" y="485" width="0.8793%" height="15" fill="rgb(247,170,54)" fg:x="463" fg:w="11"/><text x="37.2604%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="37.4900%" y="469" width="0.3997%" height="15" fill="rgb(236,204,33)" fg:x="469" fg:w="5"/><text x="37.7400%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="37.5699%" y="453" width="0.3197%" height="15" fill="rgb(216,45,30)" fg:x="470" fg:w="4"/><text x="37.8199%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.7298%" y="437" width="0.1599%" height="15" fill="rgb(213,203,16)" fg:x="472" fg:w="2"/><text x="37.9798%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.7298%" y="421" width="0.1599%" height="15" fill="rgb(215,46,16)" fg:x="472" fg:w="2"/><text x="37.9798%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="37.7298%" y="405" width="0.1599%" height="15" fill="rgb(217,162,46)" fg:x="472" fg:w="2"/><text x="37.9798%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.7298%" y="389" width="0.1599%" height="15" fill="rgb(224,189,20)" fg:x="472" fg:w="2"/><text x="37.9798%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.7298%" y="373" width="0.1599%" height="15" fill="rgb(232,35,51)" fg:x="472" fg:w="2"/><text x="37.9798%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.8098%" y="357" width="0.0799%" height="15" fill="rgb(243,221,46)" fg:x="473" fg:w="1"/><text x="38.0598%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="37.8897%" y="501" width="0.0799%" height="15" fill="rgb(248,16,16)" fg:x="474" fg:w="1"/><text x="38.1397%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.8897%" y="485" width="0.0799%" height="15" fill="rgb(220,168,13)" fg:x="474" fg:w="1"/><text x="38.1397%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (31 samples, 2.48%)</title><rect x="35.5715%" y="533" width="2.4780%" height="15" fill="rgb(243,102,39)" fg:x="445" fg:w="31"/><text x="35.8215%" y="543.50">pl..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="37.8897%" y="517" width="0.1599%" height="15" fill="rgb(245,82,32)" fg:x="474" fg:w="2"/><text x="38.1397%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.9696%" y="501" width="0.0799%" height="15" fill="rgb(230,164,19)" fg:x="475" fg:w="1"/><text x="38.2196%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.9696%" y="485" width="0.0799%" height="15" fill="rgb(221,9,41)" fg:x="475" fg:w="1"/><text x="38.2196%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.9696%" y="469" width="0.0799%" height="15" fill="rgb(216,93,0)" fg:x="475" fg:w="1"/><text x="38.2196%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.9696%" y="453" width="0.0799%" height="15" fill="rgb(235,113,9)" fg:x="475" fg:w="1"/><text x="38.2196%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.9696%" y="437" width="0.0799%" height="15" fill="rgb(209,224,10)" fg:x="475" fg:w="1"/><text x="38.2196%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.9696%" y="421" width="0.0799%" height="15" fill="rgb(226,54,34)" fg:x="475" fg:w="1"/><text x="38.2196%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (37 samples, 2.96%)</title><rect x="35.2518%" y="565" width="2.9576%" height="15" fill="rgb(222,60,8)" fg:x="441" fg:w="37"/><text x="35.5018%" y="575.50">plu..</text></g><g><title>plugins_core::build::QuickThing::make (37 samples, 2.96%)</title><rect x="35.2518%" y="549" width="2.9576%" height="15" fill="rgb(248,228,41)" fg:x="441" fg:w="37"/><text x="35.5018%" y="559.50">plu..</text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="38.0496%" y="533" width="0.1599%" height="15" fill="rgb(226,31,32)" fg:x="476" fg:w="2"/><text x="38.2996%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="38.1295%" y="517" width="0.0799%" height="15" fill="rgb(242,132,49)" fg:x="477" fg:w="1"/><text x="38.3795%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="38.1295%" y="501" width="0.0799%" height="15" fill="rgb(224,194,19)" fg:x="477" fg:w="1"/><text x="38.3795%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.1295%" y="485" width="0.0799%" height="15" fill="rgb(232,200,51)" fg:x="477" fg:w="1"/><text x="38.3795%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.1295%" y="469" width="0.0799%" height="15" fill="rgb(235,60,46)" fg:x="477" fg:w="1"/><text x="38.3795%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="38.1295%" y="453" width="0.0799%" height="15" fill="rgb(240,109,52)" fg:x="477" fg:w="1"/><text x="38.3795%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2094%" y="501" width="0.0799%" height="15" fill="rgb(215,78,37)" fg:x="478" fg:w="1"/><text x="38.4594%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="38.2094%" y="549" width="0.1599%" height="15" fill="rgb(225,141,7)" fg:x="478" fg:w="2"/><text x="38.4594%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="38.2094%" y="533" width="0.1599%" height="15" fill="rgb(216,102,54)" fg:x="478" fg:w="2"/><text x="38.4594%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="38.2094%" y="517" width="0.1599%" height="15" fill="rgb(238,143,13)" fg:x="478" fg:w="2"/><text x="38.4594%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.2894%" y="501" width="0.0799%" height="15" fill="rgb(219,45,51)" fg:x="479" fg:w="1"/><text x="38.5394%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.2894%" y="485" width="0.0799%" height="15" fill="rgb(242,105,46)" fg:x="479" fg:w="1"/><text x="38.5394%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.2894%" y="469" width="0.0799%" height="15" fill="rgb(206,154,49)" fg:x="479" fg:w="1"/><text x="38.5394%" y="479.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="38.3693%" y="549" width="0.0799%" height="15" fill="rgb(239,215,4)" fg:x="480" fg:w="1"/><text x="38.6193%" y="559.50"></text></g><g><title>kernel::session::SetSession&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="38.3693%" y="533" width="0.0799%" height="15" fill="rgb(238,82,17)" fg:x="480" fg:w="1"/><text x="38.6193%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.4492%" y="517" width="0.1599%" height="15" fill="rgb(242,49,30)" fg:x="481" fg:w="2"/><text x="38.6992%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.5292%" y="501" width="0.0799%" height="15" fill="rgb(248,5,16)" fg:x="482" fg:w="1"/><text x="38.7792%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.5292%" y="485" width="0.0799%" height="15" fill="rgb(237,138,32)" fg:x="482" fg:w="1"/><text x="38.7792%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.5292%" y="469" width="0.0799%" height="15" fill="rgb(235,79,45)" fg:x="482" fg:w="1"/><text x="38.7792%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.5292%" y="453" width="0.0799%" height="15" fill="rgb(213,105,25)" fg:x="482" fg:w="1"/><text x="38.7792%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.5292%" y="437" width="0.0799%" height="15" fill="rgb(251,131,7)" fg:x="482" fg:w="1"/><text x="38.7792%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.5292%" y="421" width="0.0799%" height="15" fill="rgb(211,155,7)" fg:x="482" fg:w="1"/><text x="38.7792%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.5292%" y="405" width="0.0799%" height="15" fill="rgb(243,70,15)" fg:x="482" fg:w="1"/><text x="38.7792%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5292%" y="389" width="0.0799%" height="15" fill="rgb(215,171,2)" fg:x="482" fg:w="1"/><text x="38.7792%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.6890%" y="437" width="0.0799%" height="15" fill="rgb(244,121,35)" fg:x="484" fg:w="1"/><text x="38.9390%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.6890%" y="421" width="0.0799%" height="15" fill="rgb(249,147,17)" fg:x="484" fg:w="1"/><text x="38.9390%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.6890%" y="405" width="0.0799%" height="15" fill="rgb(241,193,52)" fg:x="484" fg:w="1"/><text x="38.9390%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.6890%" y="389" width="0.0799%" height="15" fill="rgb(217,159,39)" fg:x="484" fg:w="1"/><text x="38.9390%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.6890%" y="373" width="0.0799%" height="15" fill="rgb(248,110,0)" fg:x="484" fg:w="1"/><text x="38.9390%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.6890%" y="357" width="0.0799%" height="15" fill="rgb(233,227,0)" fg:x="484" fg:w="1"/><text x="38.9390%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="38.7690%" y="373" width="0.0799%" height="15" fill="rgb(252,55,2)" fg:x="485" fg:w="1"/><text x="39.0190%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="38.6091%" y="501" width="0.3197%" height="15" fill="rgb(224,194,24)" fg:x="483" fg:w="4"/><text x="38.8591%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="38.6091%" y="485" width="0.3197%" height="15" fill="rgb(247,5,33)" fg:x="483" fg:w="4"/><text x="38.8591%" y="495.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="38.6890%" y="469" width="0.2398%" height="15" fill="rgb(242,66,47)" fg:x="484" fg:w="3"/><text x="38.9390%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="38.6890%" y="453" width="0.2398%" height="15" fill="rgb(213,107,12)" fg:x="484" fg:w="3"/><text x="38.9390%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="38.7690%" y="437" width="0.1599%" height="15" fill="rgb(206,131,1)" fg:x="485" fg:w="2"/><text x="39.0190%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="38.7690%" y="421" width="0.1599%" height="15" fill="rgb(214,9,36)" fg:x="485" fg:w="2"/><text x="39.0190%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="38.7690%" y="405" width="0.1599%" height="15" fill="rgb(251,215,18)" fg:x="485" fg:w="2"/><text x="39.0190%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="38.7690%" y="389" width="0.1599%" height="15" fill="rgb(251,64,9)" fg:x="485" fg:w="2"/><text x="39.0190%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.8489%" y="373" width="0.0799%" height="15" fill="rgb(235,68,21)" fg:x="486" fg:w="1"/><text x="39.0989%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.9289%" y="469" width="0.0799%" height="15" fill="rgb(240,69,38)" fg:x="487" fg:w="1"/><text x="39.1789%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="39.0088%" y="469" width="0.0799%" height="15" fill="rgb(231,18,27)" fg:x="488" fg:w="1"/><text x="39.2588%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.0088%" y="453" width="0.0799%" height="15" fill="rgb(215,154,25)" fg:x="488" fg:w="1"/><text x="39.2588%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="38.6091%" y="517" width="0.5596%" height="15" fill="rgb(224,33,46)" fg:x="483" fg:w="7"/><text x="38.8591%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="38.9289%" y="501" width="0.2398%" height="15" fill="rgb(248,191,53)" fg:x="487" fg:w="3"/><text x="39.1789%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.9289%" y="485" width="0.2398%" height="15" fill="rgb(231,3,37)" fg:x="487" fg:w="3"/><text x="39.1789%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="39.0887%" y="469" width="0.0799%" height="15" fill="rgb(209,152,2)" fg:x="489" fg:w="1"/><text x="39.3387%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="39.0887%" y="453" width="0.0799%" height="15" fill="rgb(212,208,43)" fg:x="489" fg:w="1"/><text x="39.3387%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="39.0887%" y="437" width="0.0799%" height="15" fill="rgb(208,60,49)" fg:x="489" fg:w="1"/><text x="39.3387%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="39.0887%" y="421" width="0.0799%" height="15" fill="rgb(245,135,6)" fg:x="489" fg:w="1"/><text x="39.3387%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.0887%" y="405" width="0.0799%" height="15" fill="rgb(243,86,23)" fg:x="489" fg:w="1"/><text x="39.3387%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="39.1687%" y="517" width="0.0799%" height="15" fill="rgb(223,7,20)" fg:x="490" fg:w="1"/><text x="39.4187%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2486%" y="469" width="0.0799%" height="15" fill="rgb(212,182,17)" fg:x="491" fg:w="1"/><text x="39.4986%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="39.2486%" y="453" width="0.0799%" height="15" fill="rgb(237,94,50)" fg:x="491" fg:w="1"/><text x="39.4986%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="39.2486%" y="437" width="0.0799%" height="15" fill="rgb(232,185,44)" fg:x="491" fg:w="1"/><text x="39.4986%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="39.2486%" y="501" width="0.1599%" height="15" fill="rgb(205,50,36)" fg:x="491" fg:w="2"/><text x="39.4986%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.2486%" y="485" width="0.1599%" height="15" fill="rgb(252,32,32)" fg:x="491" fg:w="2"/><text x="39.4986%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.3285%" y="469" width="0.0799%" height="15" fill="rgb(241,123,33)" fg:x="492" fg:w="1"/><text x="39.5785%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.3285%" y="453" width="0.0799%" height="15" fill="rgb(212,140,16)" fg:x="492" fg:w="1"/><text x="39.5785%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.3285%" y="437" width="0.0799%" height="15" fill="rgb(247,132,5)" fg:x="492" fg:w="1"/><text x="39.5785%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.3285%" y="421" width="0.0799%" height="15" fill="rgb(209,137,38)" fg:x="492" fg:w="1"/><text x="39.5785%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.3285%" y="405" width="0.0799%" height="15" fill="rgb(248,32,42)" fg:x="492" fg:w="1"/><text x="39.5785%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.4085%" y="453" width="0.0799%" height="15" fill="rgb(216,188,40)" fg:x="493" fg:w="1"/><text x="39.6585%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.4085%" y="437" width="0.0799%" height="15" fill="rgb(209,127,53)" fg:x="493" fg:w="1"/><text x="39.6585%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.4085%" y="421" width="0.0799%" height="15" fill="rgb(254,162,9)" fg:x="493" fg:w="1"/><text x="39.6585%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.4085%" y="405" width="0.0799%" height="15" fill="rgb(219,183,10)" fg:x="493" fg:w="1"/><text x="39.6585%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.4085%" y="389" width="0.0799%" height="15" fill="rgb(217,192,21)" fg:x="493" fg:w="1"/><text x="39.6585%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.4085%" y="373" width="0.0799%" height="15" fill="rgb(251,89,27)" fg:x="493" fg:w="1"/><text x="39.6585%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.4085%" y="357" width="0.0799%" height="15" fill="rgb(253,55,28)" fg:x="493" fg:w="1"/><text x="39.6585%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.4085%" y="341" width="0.0799%" height="15" fill="rgb(216,159,8)" fg:x="493" fg:w="1"/><text x="39.6585%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.4085%" y="325" width="0.0799%" height="15" fill="rgb(231,228,44)" fg:x="493" fg:w="1"/><text x="39.6585%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.4085%" y="309" width="0.0799%" height="15" fill="rgb(247,34,48)" fg:x="493" fg:w="1"/><text x="39.6585%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.4085%" y="293" width="0.0799%" height="15" fill="rgb(247,222,18)" fg:x="493" fg:w="1"/><text x="39.6585%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="39.4085%" y="277" width="0.0799%" height="15" fill="rgb(227,49,4)" fg:x="493" fg:w="1"/><text x="39.6585%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="39.4085%" y="261" width="0.0799%" height="15" fill="rgb(219,189,53)" fg:x="493" fg:w="1"/><text x="39.6585%" y="271.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="39.2486%" y="517" width="0.3197%" height="15" fill="rgb(241,160,53)" fg:x="491" fg:w="4"/><text x="39.4986%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="39.4085%" y="501" width="0.1599%" height="15" fill="rgb(227,115,4)" fg:x="493" fg:w="2"/><text x="39.6585%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.4085%" y="485" width="0.1599%" height="15" fill="rgb(215,28,28)" fg:x="493" fg:w="2"/><text x="39.6585%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.4085%" y="469" width="0.1599%" height="15" fill="rgb(237,143,40)" fg:x="493" fg:w="2"/><text x="39.6585%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4884%" y="453" width="0.0799%" height="15" fill="rgb(205,107,24)" fg:x="494" fg:w="1"/><text x="39.7384%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="39.5683%" y="501" width="0.0799%" height="15" fill="rgb(209,112,35)" fg:x="495" fg:w="1"/><text x="39.8183%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="39.5683%" y="485" width="0.0799%" height="15" fill="rgb(206,135,5)" fg:x="495" fg:w="1"/><text x="39.8183%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="38.4492%" y="533" width="1.2790%" height="15" fill="rgb(227,217,38)" fg:x="481" fg:w="16"/><text x="38.6992%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="39.5683%" y="517" width="0.1599%" height="15" fill="rgb(205,0,41)" fg:x="495" fg:w="2"/><text x="39.8183%" y="527.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="39.6483%" y="501" width="0.0799%" height="15" fill="rgb(220,20,40)" fg:x="496" fg:w="1"/><text x="39.8983%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6483%" y="485" width="0.0799%" height="15" fill="rgb(216,145,3)" fg:x="496" fg:w="1"/><text x="39.8983%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7282%" y="501" width="0.0799%" height="15" fill="rgb(207,130,51)" fg:x="497" fg:w="1"/><text x="39.9782%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.52%)</title><rect x="38.4492%" y="549" width="1.5188%" height="15" fill="rgb(252,93,13)" fg:x="481" fg:w="19"/><text x="38.6992%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="39.7282%" y="533" width="0.2398%" height="15" fill="rgb(210,105,15)" fg:x="497" fg:w="3"/><text x="39.9782%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="39.7282%" y="517" width="0.2398%" height="15" fill="rgb(212,126,31)" fg:x="497" fg:w="3"/><text x="39.9782%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.8082%" y="501" width="0.1599%" height="15" fill="rgb(241,167,46)" fg:x="498" fg:w="2"/><text x="40.0582%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.8082%" y="485" width="0.1599%" height="15" fill="rgb(217,143,19)" fg:x="498" fg:w="2"/><text x="40.0582%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.8082%" y="469" width="0.1599%" height="15" fill="rgb(235,117,33)" fg:x="498" fg:w="2"/><text x="40.0582%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.8082%" y="453" width="0.1599%" height="15" fill="rgb(247,95,6)" fg:x="498" fg:w="2"/><text x="40.0582%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.8082%" y="437" width="0.1599%" height="15" fill="rgb(243,206,43)" fg:x="498" fg:w="2"/><text x="40.0582%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.8082%" y="421" width="0.1599%" height="15" fill="rgb(229,65,54)" fg:x="498" fg:w="2"/><text x="40.0582%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.8881%" y="405" width="0.0799%" height="15" fill="rgb(247,137,34)" fg:x="499" fg:w="1"/><text x="40.1381%" y="415.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (424 samples, 33.89%)</title><rect x="6.2350%" y="581" width="33.8929%" height="15" fill="rgb(245,174,44)" fg:x="78" fg:w="424"/><text x="6.4850%" y="591.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::pre..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (24 samples, 1.92%)</title><rect x="38.2094%" y="565" width="1.9185%" height="15" fill="rgb(223,64,15)" fg:x="478" fg:w="24"/><text x="38.4594%" y="575.50">p..</text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="39.9680%" y="549" width="0.1599%" height="15" fill="rgb(243,153,36)" fg:x="500" fg:w="2"/><text x="40.2180%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="39.9680%" y="533" width="0.1599%" height="15" fill="rgb(252,23,4)" fg:x="500" fg:w="2"/><text x="40.2180%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="40.0480%" y="517" width="0.0799%" height="15" fill="rgb(209,132,13)" fg:x="501" fg:w="1"/><text x="40.2980%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="40.1279%" y="549" width="0.1599%" height="15" fill="rgb(209,196,21)" fg:x="502" fg:w="2"/><text x="40.3779%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="40.1279%" y="533" width="0.1599%" height="15" fill="rgb(252,197,1)" fg:x="502" fg:w="2"/><text x="40.3779%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.1279%" y="517" width="0.1599%" height="15" fill="rgb(229,42,46)" fg:x="502" fg:w="2"/><text x="40.3779%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (3 samples, 0.24%)</title><rect x="40.1279%" y="581" width="0.2398%" height="15" fill="rgb(219,85,8)" fg:x="502" fg:w="3"/><text x="40.3779%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="40.1279%" y="565" width="0.2398%" height="15" fill="rgb(223,185,14)" fg:x="502" fg:w="3"/><text x="40.3779%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorageFactory&gt; (1 samples, 0.08%)</title><rect x="40.2878%" y="549" width="0.0799%" height="15" fill="rgb(217,196,18)" fg:x="504" fg:w="1"/><text x="40.5378%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.4476%" y="549" width="0.1599%" height="15" fill="rgb(220,122,37)" fg:x="506" fg:w="2"/><text x="40.6976%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.4476%" y="533" width="0.1599%" height="15" fill="rgb(236,135,33)" fg:x="506" fg:w="2"/><text x="40.6976%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="40.4476%" y="517" width="0.1599%" height="15" fill="rgb(222,86,54)" fg:x="506" fg:w="2"/><text x="40.6976%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="40.4476%" y="501" width="0.1599%" height="15" fill="rgb(227,42,22)" fg:x="506" fg:w="2"/><text x="40.6976%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="40.4476%" y="485" width="0.1599%" height="15" fill="rgb(243,101,27)" fg:x="506" fg:w="2"/><text x="40.6976%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.4476%" y="469" width="0.1599%" height="15" fill="rgb(229,100,8)" fg:x="506" fg:w="2"/><text x="40.6976%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.4476%" y="453" width="0.1599%" height="15" fill="rgb(252,68,10)" fg:x="506" fg:w="2"/><text x="40.6976%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="40.4476%" y="437" width="0.1599%" height="15" fill="rgb(219,19,31)" fg:x="506" fg:w="2"/><text x="40.6976%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="40.4476%" y="421" width="0.1599%" height="15" fill="rgb(246,150,44)" fg:x="506" fg:w="2"/><text x="40.6976%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="40.4476%" y="405" width="0.1599%" height="15" fill="rgb(211,14,39)" fg:x="506" fg:w="2"/><text x="40.6976%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="40.4476%" y="389" width="0.1599%" height="15" fill="rgb(221,98,29)" fg:x="506" fg:w="2"/><text x="40.6976%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.4476%" y="373" width="0.1599%" height="15" fill="rgb(221,70,26)" fg:x="506" fg:w="2"/><text x="40.6976%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6075%" y="549" width="0.0799%" height="15" fill="rgb(236,146,30)" fg:x="508" fg:w="1"/><text x="40.8575%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.6875%" y="549" width="0.0799%" height="15" fill="rgb(226,94,34)" fg:x="509" fg:w="1"/><text x="40.9375%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.6875%" y="533" width="0.0799%" height="15" fill="rgb(248,132,21)" fg:x="509" fg:w="1"/><text x="40.9375%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.6875%" y="517" width="0.0799%" height="15" fill="rgb(245,43,50)" fg:x="509" fg:w="1"/><text x="40.9375%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (6 samples, 0.48%)</title><rect x="40.3677%" y="565" width="0.4796%" height="15" fill="rgb(245,132,31)" fg:x="505" fg:w="6"/><text x="40.6177%" y="575.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="40.7674%" y="549" width="0.0799%" height="15" fill="rgb(230,171,4)" fg:x="510" fg:w="1"/><text x="41.0174%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="40.8473%" y="565" width="0.0799%" height="15" fill="rgb(235,6,45)" fg:x="511" fg:w="1"/><text x="41.0973%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="40.8473%" y="549" width="0.0799%" height="15" fill="rgb(220,80,28)" fg:x="511" fg:w="1"/><text x="41.0973%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="40.8473%" y="533" width="0.0799%" height="15" fill="rgb(242,171,9)" fg:x="511" fg:w="1"/><text x="41.0973%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="40.8473%" y="517" width="0.0799%" height="15" fill="rgb(214,135,29)" fg:x="511" fg:w="1"/><text x="41.0973%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="40.8473%" y="501" width="0.0799%" height="15" fill="rgb(221,229,16)" fg:x="511" fg:w="1"/><text x="41.0973%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="40.8473%" y="485" width="0.0799%" height="15" fill="rgb(253,59,46)" fg:x="511" fg:w="1"/><text x="41.0973%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="40.8473%" y="469" width="0.0799%" height="15" fill="rgb(250,147,20)" fg:x="511" fg:w="1"/><text x="41.0973%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="40.8473%" y="453" width="0.0799%" height="15" fill="rgb(236,64,48)" fg:x="511" fg:w="1"/><text x="41.0973%" y="463.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="41.0072%" y="469" width="0.0799%" height="15" fill="rgb(240,37,42)" fg:x="513" fg:w="1"/><text x="41.2572%" y="479.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="41.0072%" y="453" width="0.0799%" height="15" fill="rgb(220,41,50)" fg:x="513" fg:w="1"/><text x="41.2572%" y="463.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="41.0072%" y="437" width="0.0799%" height="15" fill="rgb(216,51,14)" fg:x="513" fg:w="1"/><text x="41.2572%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (3 samples, 0.24%)</title><rect x="40.9273%" y="565" width="0.2398%" height="15" fill="rgb(215,83,10)" fg:x="512" fg:w="3"/><text x="41.1773%" y="575.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="41.0072%" y="549" width="0.1599%" height="15" fill="rgb(206,144,17)" fg:x="513" fg:w="2"/><text x="41.2572%" y="559.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="41.0072%" y="533" width="0.1599%" height="15" fill="rgb(219,196,37)" fg:x="513" fg:w="2"/><text x="41.2572%" y="543.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="41.0072%" y="517" width="0.1599%" height="15" fill="rgb(226,135,26)" fg:x="513" fg:w="2"/><text x="41.2572%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="41.0072%" y="501" width="0.1599%" height="15" fill="rgb(237,195,40)" fg:x="513" fg:w="2"/><text x="41.2572%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="41.0072%" y="485" width="0.1599%" height="15" fill="rgb(228,182,42)" fg:x="513" fg:w="2"/><text x="41.2572%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="41.0871%" y="469" width="0.0799%" height="15" fill="rgb(224,135,50)" fg:x="514" fg:w="1"/><text x="41.3371%" y="479.50"></text></g><g><title>std::sys::unix::os::env_read_lock (1 samples, 0.08%)</title><rect x="41.0871%" y="453" width="0.0799%" height="15" fill="rgb(236,215,34)" fg:x="514" fg:w="1"/><text x="41.3371%" y="463.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.08%)</title><rect x="41.0871%" y="437" width="0.0799%" height="15" fill="rgb(244,213,27)" fg:x="514" fg:w="1"/><text x="41.3371%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (1 samples, 0.08%)</title><rect x="41.0871%" y="421" width="0.0799%" height="15" fill="rgb(233,37,53)" fg:x="514" fg:w="1"/><text x="41.3371%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.08%)</title><rect x="41.0871%" y="405" width="0.0799%" height="15" fill="rgb(222,132,14)" fg:x="514" fg:w="1"/><text x="41.3371%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.08%)</title><rect x="41.0871%" y="389" width="0.0799%" height="15" fill="rgb(219,202,29)" fg:x="514" fg:w="1"/><text x="41.3371%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.1671%" y="437" width="0.0799%" height="15" fill="rgb(226,157,39)" fg:x="515" fg:w="1"/><text x="41.4171%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="41.2470%" y="421" width="0.1599%" height="15" fill="rgb(235,213,2)" fg:x="516" fg:w="2"/><text x="41.4970%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.4069%" y="373" width="0.0799%" height="15" fill="rgb(250,121,2)" fg:x="518" fg:w="1"/><text x="41.6569%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="41.4868%" y="373" width="0.0799%" height="15" fill="rgb(206,192,33)" fg:x="519" fg:w="1"/><text x="41.7368%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.48%)</title><rect x="41.1671%" y="453" width="0.4796%" height="15" fill="rgb(240,161,6)" fg:x="515" fg:w="6"/><text x="41.4171%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="41.2470%" y="437" width="0.3997%" height="15" fill="rgb(246,53,30)" fg:x="516" fg:w="5"/><text x="41.4970%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="41.4069%" y="421" width="0.2398%" height="15" fill="rgb(219,123,43)" fg:x="518" fg:w="3"/><text x="41.6569%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="41.4069%" y="405" width="0.2398%" height="15" fill="rgb(236,53,49)" fg:x="518" fg:w="3"/><text x="41.6569%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="41.4069%" y="389" width="0.2398%" height="15" fill="rgb(241,156,1)" fg:x="518" fg:w="3"/><text x="41.6569%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.5667%" y="373" width="0.0799%" height="15" fill="rgb(209,73,26)" fg:x="520" fg:w="1"/><text x="41.8167%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.5667%" y="357" width="0.0799%" height="15" fill="rgb(206,114,3)" fg:x="520" fg:w="1"/><text x="41.8167%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.5667%" y="341" width="0.0799%" height="15" fill="rgb(230,214,9)" fg:x="520" fg:w="1"/><text x="41.8167%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.6467%" y="373" width="0.0799%" height="15" fill="rgb(240,184,46)" fg:x="521" fg:w="1"/><text x="41.8967%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.6467%" y="357" width="0.0799%" height="15" fill="rgb(242,169,54)" fg:x="521" fg:w="1"/><text x="41.8967%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.6467%" y="453" width="0.1599%" height="15" fill="rgb(207,168,50)" fg:x="521" fg:w="2"/><text x="41.8967%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="41.6467%" y="437" width="0.1599%" height="15" fill="rgb(240,114,2)" fg:x="521" fg:w="2"/><text x="41.8967%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.6467%" y="421" width="0.1599%" height="15" fill="rgb(211,17,40)" fg:x="521" fg:w="2"/><text x="41.8967%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.6467%" y="405" width="0.1599%" height="15" fill="rgb(235,97,36)" fg:x="521" fg:w="2"/><text x="41.8967%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.6467%" y="389" width="0.1599%" height="15" fill="rgb(208,164,11)" fg:x="521" fg:w="2"/><text x="41.8967%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="41.7266%" y="373" width="0.0799%" height="15" fill="rgb(242,11,17)" fg:x="522" fg:w="1"/><text x="41.9766%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.7266%" y="357" width="0.0799%" height="15" fill="rgb(215,86,33)" fg:x="522" fg:w="1"/><text x="41.9766%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.7266%" y="341" width="0.0799%" height="15" fill="rgb(245,185,28)" fg:x="522" fg:w="1"/><text x="41.9766%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="41.9664%" y="357" width="0.1599%" height="15" fill="rgb(231,89,42)" fg:x="525" fg:w="2"/><text x="42.2164%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.9664%" y="341" width="0.1599%" height="15" fill="rgb(210,18,47)" fg:x="525" fg:w="2"/><text x="42.2164%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="41.8066%" y="421" width="0.3997%" height="15" fill="rgb(214,84,8)" fg:x="523" fg:w="5"/><text x="42.0566%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="41.8066%" y="405" width="0.3997%" height="15" fill="rgb(214,222,23)" fg:x="523" fg:w="5"/><text x="42.0566%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="41.8865%" y="389" width="0.3197%" height="15" fill="rgb(213,104,21)" fg:x="524" fg:w="4"/><text x="42.1365%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="41.9664%" y="373" width="0.2398%" height="15" fill="rgb(238,138,6)" fg:x="525" fg:w="3"/><text x="42.2164%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.1263%" y="357" width="0.0799%" height="15" fill="rgb(205,167,50)" fg:x="527" fg:w="1"/><text x="42.3763%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.1263%" y="341" width="0.0799%" height="15" fill="rgb(230,105,27)" fg:x="527" fg:w="1"/><text x="42.3763%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="42.2062%" y="405" width="0.1599%" height="15" fill="rgb(222,97,48)" fg:x="528" fg:w="2"/><text x="42.4562%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.64%)</title><rect x="41.8066%" y="437" width="0.6395%" height="15" fill="rgb(222,197,14)" fg:x="523" fg:w="8"/><text x="42.0566%" y="447.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="42.2062%" y="421" width="0.2398%" height="15" fill="rgb(210,105,47)" fg:x="528" fg:w="3"/><text x="42.4562%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="42.3661%" y="405" width="0.0799%" height="15" fill="rgb(238,158,19)" fg:x="530" fg:w="1"/><text x="42.6161%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.3661%" y="389" width="0.0799%" height="15" fill="rgb(226,176,23)" fg:x="530" fg:w="1"/><text x="42.6161%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.3661%" y="373" width="0.0799%" height="15" fill="rgb(208,79,31)" fg:x="530" fg:w="1"/><text x="42.6161%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.4460%" y="405" width="0.1599%" height="15" fill="rgb(221,154,21)" fg:x="531" fg:w="2"/><text x="42.6960%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5260%" y="389" width="0.0799%" height="15" fill="rgb(213,61,41)" fg:x="532" fg:w="1"/><text x="42.7760%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.5260%" y="373" width="0.0799%" height="15" fill="rgb(215,28,33)" fg:x="532" fg:w="1"/><text x="42.7760%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="42.6059%" y="405" width="0.0799%" height="15" fill="rgb(231,139,26)" fg:x="533" fg:w="1"/><text x="42.8559%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.6059%" y="389" width="0.0799%" height="15" fill="rgb(232,159,16)" fg:x="533" fg:w="1"/><text x="42.8559%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7658%" y="389" width="0.0799%" height="15" fill="rgb(233,80,10)" fg:x="535" fg:w="1"/><text x="43.0158%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.8457%" y="357" width="0.0799%" height="15" fill="rgb(208,147,29)" fg:x="536" fg:w="1"/><text x="43.0957%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.8457%" y="341" width="0.0799%" height="15" fill="rgb(213,10,12)" fg:x="536" fg:w="1"/><text x="43.0957%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8457%" y="325" width="0.0799%" height="15" fill="rgb(231,218,13)" fg:x="536" fg:w="1"/><text x="43.0957%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.9257%" y="357" width="0.0799%" height="15" fill="rgb(244,199,44)" fg:x="537" fg:w="1"/><text x="43.1757%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="42.9257%" y="341" width="0.0799%" height="15" fill="rgb(240,144,53)" fg:x="537" fg:w="1"/><text x="43.1757%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9257%" y="325" width="0.0799%" height="15" fill="rgb(223,57,28)" fg:x="537" fg:w="1"/><text x="43.1757%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0056%" y="325" width="0.0799%" height="15" fill="rgb(213,134,38)" fg:x="538" fg:w="1"/><text x="43.2556%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0056%" y="309" width="0.0799%" height="15" fill="rgb(251,182,42)" fg:x="538" fg:w="1"/><text x="43.2556%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.0056%" y="293" width="0.0799%" height="15" fill="rgb(229,93,13)" fg:x="538" fg:w="1"/><text x="43.2556%" y="303.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="42.4460%" y="437" width="0.7194%" height="15" fill="rgb(234,171,3)" fg:x="531" fg:w="9"/><text x="42.6960%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="42.4460%" y="421" width="0.7194%" height="15" fill="rgb(241,105,32)" fg:x="531" fg:w="9"/><text x="42.6960%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="42.6859%" y="405" width="0.4796%" height="15" fill="rgb(221,66,3)" fg:x="534" fg:w="6"/><text x="42.9359%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="42.8457%" y="389" width="0.3197%" height="15" fill="rgb(248,155,29)" fg:x="536" fg:w="4"/><text x="43.0957%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="42.8457%" y="373" width="0.3197%" height="15" fill="rgb(231,31,5)" fg:x="536" fg:w="4"/><text x="43.0957%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="43.0056%" y="357" width="0.1599%" height="15" fill="rgb(213,188,31)" fg:x="538" fg:w="2"/><text x="43.2556%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="43.0056%" y="341" width="0.1599%" height="15" fill="rgb(212,104,33)" fg:x="538" fg:w="2"/><text x="43.2556%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="43.0855%" y="325" width="0.0799%" height="15" fill="rgb(254,77,51)" fg:x="539" fg:w="1"/><text x="43.3355%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="43.0855%" y="309" width="0.0799%" height="15" fill="rgb(234,39,26)" fg:x="539" fg:w="1"/><text x="43.3355%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.1655%" y="245" width="0.0799%" height="15" fill="rgb(208,88,36)" fg:x="540" fg:w="1"/><text x="43.4155%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.1655%" y="229" width="0.0799%" height="15" fill="rgb(243,222,10)" fg:x="540" fg:w="1"/><text x="43.4155%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="43.1655%" y="309" width="0.1599%" height="15" fill="rgb(218,133,52)" fg:x="540" fg:w="2"/><text x="43.4155%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.1655%" y="293" width="0.1599%" height="15" fill="rgb(222,25,26)" fg:x="540" fg:w="2"/><text x="43.4155%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="43.1655%" y="277" width="0.1599%" height="15" fill="rgb(243,174,24)" fg:x="540" fg:w="2"/><text x="43.4155%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.1655%" y="261" width="0.1599%" height="15" fill="rgb(233,188,52)" fg:x="540" fg:w="2"/><text x="43.4155%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2454%" y="245" width="0.0799%" height="15" fill="rgb(208,89,14)" fg:x="541" fg:w="1"/><text x="43.4954%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="43.1655%" y="341" width="0.2398%" height="15" fill="rgb(205,204,21)" fg:x="540" fg:w="3"/><text x="43.4155%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="43.1655%" y="325" width="0.2398%" height="15" fill="rgb(246,39,28)" fg:x="540" fg:w="3"/><text x="43.4155%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.3253%" y="309" width="0.0799%" height="15" fill="rgb(235,71,19)" fg:x="542" fg:w="1"/><text x="43.5753%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="43.1655%" y="373" width="0.3197%" height="15" fill="rgb(211,62,39)" fg:x="540" fg:w="4"/><text x="43.4155%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="43.1655%" y="357" width="0.3197%" height="15" fill="rgb(246,118,20)" fg:x="540" fg:w="4"/><text x="43.4155%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4053%" y="341" width="0.0799%" height="15" fill="rgb(230,82,12)" fg:x="543" fg:w="1"/><text x="43.6553%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4053%" y="325" width="0.0799%" height="15" fill="rgb(205,212,34)" fg:x="543" fg:w="1"/><text x="43.6553%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.4053%" y="309" width="0.0799%" height="15" fill="rgb(239,90,1)" fg:x="543" fg:w="1"/><text x="43.6553%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 2.48%)</title><rect x="41.1671%" y="485" width="2.4780%" height="15" fill="rgb(225,198,50)" fg:x="515" fg:w="31"/><text x="41.4171%" y="495.50">&lt;c..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.48%)</title><rect x="41.1671%" y="469" width="2.4780%" height="15" fill="rgb(227,208,48)" fg:x="515" fg:w="31"/><text x="41.4171%" y="479.50">en..</text></g><g><title>kernel::model::any_entity_changes (23 samples, 1.84%)</title><rect x="41.8066%" y="453" width="1.8385%" height="15" fill="rgb(238,134,41)" fg:x="523" fg:w="23"/><text x="42.0566%" y="463.50">k..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="43.1655%" y="437" width="0.4796%" height="15" fill="rgb(241,58,39)" fg:x="540" fg:w="6"/><text x="43.4155%" y="447.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="43.1655%" y="421" width="0.4796%" height="15" fill="rgb(214,126,4)" fg:x="540" fg:w="6"/><text x="43.4155%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="43.1655%" y="405" width="0.4796%" height="15" fill="rgb(235,149,4)" fg:x="540" fg:w="6"/><text x="43.4155%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="43.1655%" y="389" width="0.4796%" height="15" fill="rgb(236,59,29)" fg:x="540" fg:w="6"/><text x="43.4155%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="43.4852%" y="373" width="0.1599%" height="15" fill="rgb(246,11,33)" fg:x="544" fg:w="2"/><text x="43.7352%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.5651%" y="357" width="0.0799%" height="15" fill="rgb(232,180,35)" fg:x="545" fg:w="1"/><text x="43.8151%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.6451%" y="485" width="0.0799%" height="15" fill="rgb(220,35,37)" fg:x="546" fg:w="1"/><text x="43.8951%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.6451%" y="469" width="0.0799%" height="15" fill="rgb(238,107,48)" fg:x="546" fg:w="1"/><text x="43.8951%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="43.6451%" y="453" width="0.0799%" height="15" fill="rgb(205,65,21)" fg:x="546" fg:w="1"/><text x="43.8951%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="43.7250%" y="469" width="0.0799%" height="15" fill="rgb(246,138,48)" fg:x="547" fg:w="1"/><text x="43.9750%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.7250%" y="453" width="0.0799%" height="15" fill="rgb(209,220,47)" fg:x="547" fg:w="1"/><text x="43.9750%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.7250%" y="437" width="0.0799%" height="15" fill="rgb(222,162,49)" fg:x="547" fg:w="1"/><text x="43.9750%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.7250%" y="421" width="0.0799%" height="15" fill="rgb(243,123,11)" fg:x="547" fg:w="1"/><text x="43.9750%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.7250%" y="405" width="0.0799%" height="15" fill="rgb(221,229,41)" fg:x="547" fg:w="1"/><text x="43.9750%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.8849%" y="389" width="0.0799%" height="15" fill="rgb(216,68,4)" fg:x="549" fg:w="1"/><text x="44.1349%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="43.8849%" y="437" width="0.1599%" height="15" fill="rgb(207,88,35)" fg:x="549" fg:w="2"/><text x="44.1349%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="43.8849%" y="421" width="0.1599%" height="15" fill="rgb(252,2,5)" fg:x="549" fg:w="2"/><text x="44.1349%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="43.8849%" y="405" width="0.1599%" height="15" fill="rgb(209,173,7)" fg:x="549" fg:w="2"/><text x="44.1349%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="43.9648%" y="389" width="0.0799%" height="15" fill="rgb(210,198,52)" fg:x="550" fg:w="1"/><text x="44.2148%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="43.8849%" y="453" width="0.2398%" height="15" fill="rgb(228,152,32)" fg:x="549" fg:w="3"/><text x="44.1349%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.0448%" y="437" width="0.0799%" height="15" fill="rgb(249,98,29)" fg:x="551" fg:w="1"/><text x="44.2948%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.0448%" y="421" width="0.0799%" height="15" fill="rgb(205,148,48)" fg:x="551" fg:w="1"/><text x="44.2948%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="44.0448%" y="405" width="0.0799%" height="15" fill="rgb(236,69,34)" fg:x="551" fg:w="1"/><text x="44.2948%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.2046%" y="437" width="0.0799%" height="15" fill="rgb(220,151,41)" fg:x="553" fg:w="1"/><text x="44.4546%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="44.2846%" y="437" width="0.1599%" height="15" fill="rgb(254,106,24)" fg:x="554" fg:w="2"/><text x="44.5346%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="44.2846%" y="421" width="0.1599%" height="15" fill="rgb(210,37,48)" fg:x="554" fg:w="2"/><text x="44.5346%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="44.2846%" y="405" width="0.1599%" height="15" fill="rgb(254,131,5)" fg:x="554" fg:w="2"/><text x="44.5346%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.3645%" y="389" width="0.0799%" height="15" fill="rgb(216,55,41)" fg:x="555" fg:w="1"/><text x="44.6145%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="44.5244%" y="389" width="0.0799%" height="15" fill="rgb(250,35,31)" fg:x="557" fg:w="1"/><text x="44.7744%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.5244%" y="373" width="0.0799%" height="15" fill="rgb(207,124,33)" fg:x="557" fg:w="1"/><text x="44.7744%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.5244%" y="357" width="0.0799%" height="15" fill="rgb(249,175,17)" fg:x="557" fg:w="1"/><text x="44.7744%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.5244%" y="341" width="0.0799%" height="15" fill="rgb(224,175,39)" fg:x="557" fg:w="1"/><text x="44.7744%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="44.6043%" y="373" width="0.0799%" height="15" fill="rgb(208,67,49)" fg:x="558" fg:w="1"/><text x="44.8543%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.6043%" y="357" width="0.0799%" height="15" fill="rgb(222,188,41)" fg:x="558" fg:w="1"/><text x="44.8543%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.6043%" y="341" width="0.0799%" height="15" fill="rgb(243,213,30)" fg:x="558" fg:w="1"/><text x="44.8543%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.6043%" y="325" width="0.0799%" height="15" fill="rgb(253,100,45)" fg:x="558" fg:w="1"/><text x="44.8543%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="44.5244%" y="405" width="0.2398%" height="15" fill="rgb(226,24,44)" fg:x="557" fg:w="3"/><text x="44.7744%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="44.6043%" y="389" width="0.1599%" height="15" fill="rgb(215,41,24)" fg:x="558" fg:w="2"/><text x="44.8543%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.6843%" y="373" width="0.0799%" height="15" fill="rgb(254,53,33)" fg:x="559" fg:w="1"/><text x="44.9343%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.6843%" y="357" width="0.0799%" height="15" fill="rgb(242,103,10)" fg:x="559" fg:w="1"/><text x="44.9343%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.6843%" y="341" width="0.0799%" height="15" fill="rgb(246,29,21)" fg:x="559" fg:w="1"/><text x="44.9343%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="44.5244%" y="421" width="0.3197%" height="15" fill="rgb(251,154,1)" fg:x="557" fg:w="4"/><text x="44.7744%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.7642%" y="405" width="0.0799%" height="15" fill="rgb(254,212,26)" fg:x="560" fg:w="1"/><text x="45.0142%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.7642%" y="389" width="0.0799%" height="15" fill="rgb(251,187,46)" fg:x="560" fg:w="1"/><text x="45.0142%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.7642%" y="373" width="0.0799%" height="15" fill="rgb(224,208,14)" fg:x="560" fg:w="1"/><text x="45.0142%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="44.8441%" y="421" width="0.3997%" height="15" fill="rgb(222,176,26)" fg:x="561" fg:w="5"/><text x="45.0941%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="44.9241%" y="405" width="0.3197%" height="15" fill="rgb(241,219,52)" fg:x="562" fg:w="4"/><text x="45.1741%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="45.0040%" y="389" width="0.2398%" height="15" fill="rgb(252,198,21)" fg:x="563" fg:w="3"/><text x="45.2540%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="45.0040%" y="373" width="0.2398%" height="15" fill="rgb(244,196,23)" fg:x="563" fg:w="3"/><text x="45.2540%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="45.0839%" y="357" width="0.1599%" height="15" fill="rgb(239,121,44)" fg:x="564" fg:w="2"/><text x="45.3339%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="45.0839%" y="341" width="0.1599%" height="15" fill="rgb(249,203,23)" fg:x="564" fg:w="2"/><text x="45.3339%" y="351.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="45.0839%" y="325" width="0.1599%" height="15" fill="rgb(238,219,10)" fg:x="564" fg:w="2"/><text x="45.3339%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.4037%" y="357" width="0.0799%" height="15" fill="rgb(241,35,46)" fg:x="568" fg:w="1"/><text x="45.6537%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="45.2438%" y="405" width="0.3197%" height="15" fill="rgb(218,28,6)" fg:x="566" fg:w="4"/><text x="45.4938%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="45.3237%" y="389" width="0.2398%" height="15" fill="rgb(233,151,50)" fg:x="567" fg:w="3"/><text x="45.5737%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="45.3237%" y="373" width="0.2398%" height="15" fill="rgb(208,57,8)" fg:x="567" fg:w="3"/><text x="45.5737%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="45.4836%" y="357" width="0.0799%" height="15" fill="rgb(253,99,10)" fg:x="569" fg:w="1"/><text x="45.7336%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="45.5635%" y="389" width="0.1599%" height="15" fill="rgb(237,196,49)" fg:x="570" fg:w="2"/><text x="45.8135%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="45.5635%" y="373" width="0.1599%" height="15" fill="rgb(209,51,3)" fg:x="570" fg:w="2"/><text x="45.8135%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="45.5635%" y="357" width="0.1599%" height="15" fill="rgb(238,129,10)" fg:x="570" fg:w="2"/><text x="45.8135%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="45.5635%" y="341" width="0.1599%" height="15" fill="rgb(246,201,16)" fg:x="570" fg:w="2"/><text x="45.8135%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="45.5635%" y="405" width="0.3197%" height="15" fill="rgb(250,160,20)" fg:x="570" fg:w="4"/><text x="45.8135%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="45.7234%" y="389" width="0.1599%" height="15" fill="rgb(251,107,25)" fg:x="572" fg:w="2"/><text x="45.9734%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="45.8034%" y="373" width="0.0799%" height="15" fill="rgb(212,103,39)" fg:x="573" fg:w="1"/><text x="46.0534%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.8034%" y="357" width="0.0799%" height="15" fill="rgb(207,9,29)" fg:x="573" fg:w="1"/><text x="46.0534%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="45.2438%" y="421" width="0.7194%" height="15" fill="rgb(227,84,3)" fg:x="566" fg:w="9"/><text x="45.4938%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.8833%" y="405" width="0.0799%" height="15" fill="rgb(242,194,7)" fg:x="574" fg:w="1"/><text x="46.1333%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.8833%" y="389" width="0.0799%" height="15" fill="rgb(230,40,4)" fg:x="574" fg:w="1"/><text x="46.1333%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="44.4444%" y="437" width="1.5987%" height="15" fill="rgb(243,229,33)" fg:x="556" fg:w="20"/><text x="44.6944%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.9632%" y="421" width="0.0799%" height="15" fill="rgb(240,65,24)" fg:x="575" fg:w="1"/><text x="46.2132%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.0432%" y="405" width="0.0799%" height="15" fill="rgb(212,28,20)" fg:x="576" fg:w="1"/><text x="46.2932%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.0432%" y="389" width="0.0799%" height="15" fill="rgb(209,72,3)" fg:x="576" fg:w="1"/><text x="46.2932%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.0432%" y="373" width="0.0799%" height="15" fill="rgb(238,170,36)" fg:x="576" fg:w="1"/><text x="46.2932%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.0432%" y="357" width="0.0799%" height="15" fill="rgb(236,19,38)" fg:x="576" fg:w="1"/><text x="46.2932%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.08%)</title><rect x="44.1247%" y="453" width="2.0783%" height="15" fill="rgb(230,67,43)" fg:x="552" fg:w="26"/><text x="44.3747%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="46.0432%" y="437" width="0.1599%" height="15" fill="rgb(227,14,36)" fg:x="576" fg:w="2"/><text x="46.2932%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="46.0432%" y="421" width="0.1599%" height="15" fill="rgb(247,171,49)" fg:x="576" fg:w="2"/><text x="46.2932%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="46.1231%" y="405" width="0.0799%" height="15" fill="rgb(235,164,51)" fg:x="577" fg:w="1"/><text x="46.3731%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (31 samples, 2.48%)</title><rect x="43.8050%" y="469" width="2.4780%" height="15" fill="rgb(246,107,20)" fg:x="548" fg:w="31"/><text x="44.0550%" y="479.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.2030%" y="453" width="0.0799%" height="15" fill="rgb(226,88,18)" fg:x="578" fg:w="1"/><text x="46.4530%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.2030%" y="437" width="0.0799%" height="15" fill="rgb(235,136,9)" fg:x="578" fg:w="1"/><text x="46.4530%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="46.2030%" y="421" width="0.0799%" height="15" fill="rgb(209,3,34)" fg:x="578" fg:w="1"/><text x="46.4530%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.2830%" y="437" width="0.1599%" height="15" fill="rgb(213,38,19)" fg:x="579" fg:w="2"/><text x="46.5330%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.5228%" y="421" width="0.0799%" height="15" fill="rgb(254,24,24)" fg:x="582" fg:w="1"/><text x="46.7728%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="46.6027%" y="421" width="0.1599%" height="15" fill="rgb(219,122,42)" fg:x="583" fg:w="2"/><text x="46.8527%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.6827%" y="405" width="0.0799%" height="15" fill="rgb(205,128,31)" fg:x="584" fg:w="1"/><text x="46.9327%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.7626%" y="405" width="0.1599%" height="15" fill="rgb(212,142,0)" fg:x="585" fg:w="2"/><text x="47.0126%" y="415.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="46.9225%" y="389" width="0.3197%" height="15" fill="rgb(211,25,35)" fg:x="587" fg:w="4"/><text x="47.1725%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.2422%" y="389" width="0.0799%" height="15" fill="rgb(220,150,53)" fg:x="591" fg:w="1"/><text x="47.4922%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.2422%" y="373" width="0.0799%" height="15" fill="rgb(220,30,24)" fg:x="591" fg:w="1"/><text x="47.4922%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="47.3221%" y="389" width="0.0799%" height="15" fill="rgb(218,86,23)" fg:x="592" fg:w="1"/><text x="47.5721%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="47.3221%" y="373" width="0.0799%" height="15" fill="rgb(206,62,27)" fg:x="592" fg:w="1"/><text x="47.5721%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="46.2830%" y="469" width="1.2790%" height="15" fill="rgb(249,174,0)" fg:x="579" fg:w="16"/><text x="46.5330%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.28%)</title><rect x="46.2830%" y="453" width="1.2790%" height="15" fill="rgb(246,67,27)" fg:x="579" fg:w="16"/><text x="46.5330%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="46.4428%" y="437" width="1.1191%" height="15" fill="rgb(250,195,30)" fg:x="581" fg:w="14"/><text x="46.6928%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="46.7626%" y="421" width="0.7994%" height="15" fill="rgb(251,171,50)" fg:x="585" fg:w="10"/><text x="47.0126%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="46.9225%" y="405" width="0.6395%" height="15" fill="rgb(236,196,10)" fg:x="587" fg:w="8"/><text x="47.1725%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="47.4021%" y="389" width="0.1599%" height="15" fill="rgb(249,228,52)" fg:x="593" fg:w="2"/><text x="47.6521%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="47.4021%" y="373" width="0.1599%" height="15" fill="rgb(219,60,51)" fg:x="593" fg:w="2"/><text x="47.6521%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.4021%" y="357" width="0.1599%" height="15" fill="rgb(240,198,24)" fg:x="593" fg:w="2"/><text x="47.6521%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.5620%" y="437" width="0.0799%" height="15" fill="rgb(240,192,40)" fg:x="595" fg:w="1"/><text x="47.8120%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.6419%" y="405" width="0.1599%" height="15" fill="rgb(219,118,5)" fg:x="596" fg:w="2"/><text x="47.8919%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="47.8018%" y="405" width="0.1599%" height="15" fill="rgb(205,202,34)" fg:x="598" fg:w="2"/><text x="48.0518%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8817%" y="389" width="0.0799%" height="15" fill="rgb(234,153,26)" fg:x="599" fg:w="1"/><text x="48.1317%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.9616%" y="389" width="0.0799%" height="15" fill="rgb(229,26,29)" fg:x="600" fg:w="1"/><text x="48.2116%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.1215%" y="373" width="0.0799%" height="15" fill="rgb(237,115,21)" fg:x="602" fg:w="1"/><text x="48.3715%" y="383.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="48.2014%" y="357" width="0.2398%" height="15" fill="rgb(252,144,15)" fg:x="603" fg:w="3"/><text x="48.4514%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="48.4412%" y="357" width="0.1599%" height="15" fill="rgb(232,26,13)" fg:x="606" fg:w="2"/><text x="48.6912%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5212%" y="341" width="0.0799%" height="15" fill="rgb(206,44,19)" fg:x="607" fg:w="1"/><text x="48.7712%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="48.6011%" y="357" width="0.1599%" height="15" fill="rgb(249,159,2)" fg:x="608" fg:w="2"/><text x="48.8511%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.6811%" y="341" width="0.0799%" height="15" fill="rgb(231,5,32)" fg:x="609" fg:w="1"/><text x="48.9311%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.6811%" y="325" width="0.0799%" height="15" fill="rgb(249,210,18)" fg:x="609" fg:w="1"/><text x="48.9311%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.8409%" y="341" width="0.0799%" height="15" fill="rgb(215,223,36)" fg:x="611" fg:w="1"/><text x="49.0909%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.9209%" y="341" width="0.0799%" height="15" fill="rgb(245,185,20)" fg:x="612" fg:w="1"/><text x="49.1709%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9209%" y="325" width="0.0799%" height="15" fill="rgb(206,224,11)" fg:x="612" fg:w="1"/><text x="49.1709%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.52%)</title><rect x="47.6419%" y="437" width="1.5188%" height="15" fill="rgb(248,73,42)" fg:x="596" fg:w="19"/><text x="47.8919%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.52%)</title><rect x="47.6419%" y="421" width="1.5188%" height="15" fill="rgb(219,149,31)" fg:x="596" fg:w="19"/><text x="47.8919%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="47.9616%" y="405" width="1.1990%" height="15" fill="rgb(243,104,17)" fg:x="600" fg:w="15"/><text x="48.2116%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="48.0416%" y="389" width="1.1191%" height="15" fill="rgb(244,117,33)" fg:x="601" fg:w="14"/><text x="48.2916%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="48.2014%" y="373" width="0.9592%" height="15" fill="rgb(251,25,47)" fg:x="603" fg:w="12"/><text x="48.4514%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="48.7610%" y="357" width="0.3997%" height="15" fill="rgb(249,70,13)" fg:x="610" fg:w="5"/><text x="49.0110%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="49.0008%" y="341" width="0.1599%" height="15" fill="rgb(217,133,18)" fg:x="613" fg:w="2"/><text x="49.2508%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="49.3205%" y="389" width="0.3997%" height="15" fill="rgb(248,97,28)" fg:x="617" fg:w="5"/><text x="49.5705%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="49.4804%" y="373" width="0.2398%" height="15" fill="rgb(237,193,4)" fg:x="619" fg:w="3"/><text x="49.7304%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="49.5604%" y="357" width="0.1599%" height="15" fill="rgb(247,198,45)" fg:x="620" fg:w="2"/><text x="49.8104%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="49.3205%" y="405" width="0.4796%" height="15" fill="rgb(245,2,20)" fg:x="617" fg:w="6"/><text x="49.5705%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.7202%" y="389" width="0.0799%" height="15" fill="rgb(210,71,36)" fg:x="622" fg:w="1"/><text x="49.9702%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (29 samples, 2.32%)</title><rect x="47.5620%" y="453" width="2.3181%" height="15" fill="rgb(238,114,30)" fg:x="595" fg:w="29"/><text x="47.8120%" y="463.50">&lt;..</text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="49.1607%" y="437" width="0.7194%" height="15" fill="rgb(241,200,2)" fg:x="615" fg:w="9"/><text x="49.4107%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="49.1607%" y="421" width="0.7194%" height="15" fill="rgb(232,106,18)" fg:x="615" fg:w="9"/><text x="49.4107%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.8002%" y="405" width="0.0799%" height="15" fill="rgb(211,141,18)" fg:x="623" fg:w="1"/><text x="50.0502%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="49.8801%" y="421" width="0.3997%" height="15" fill="rgb(224,9,9)" fg:x="624" fg:w="5"/><text x="50.1301%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="49.9600%" y="405" width="0.3197%" height="15" fill="rgb(249,137,46)" fg:x="625" fg:w="4"/><text x="50.2100%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.1998%" y="389" width="0.0799%" height="15" fill="rgb(236,44,45)" fg:x="628" fg:w="1"/><text x="50.4498%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="50.2798%" y="421" width="0.0799%" height="15" fill="rgb(205,68,40)" fg:x="629" fg:w="1"/><text x="50.5298%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="50.2798%" y="405" width="0.0799%" height="15" fill="rgb(214,198,49)" fg:x="629" fg:w="1"/><text x="50.5298%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2798%" y="389" width="0.0799%" height="15" fill="rgb(226,140,45)" fg:x="629" fg:w="1"/><text x="50.5298%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3597%" y="389" width="0.0799%" height="15" fill="rgb(209,109,20)" fg:x="630" fg:w="1"/><text x="50.6097%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="50.3597%" y="421" width="0.1599%" height="15" fill="rgb(217,33,46)" fg:x="630" fg:w="2"/><text x="50.6097%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="50.3597%" y="405" width="0.1599%" height="15" fill="rgb(232,150,33)" fg:x="630" fg:w="2"/><text x="50.6097%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4396%" y="389" width="0.0799%" height="15" fill="rgb(233,76,25)" fg:x="631" fg:w="1"/><text x="50.6896%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4396%" y="373" width="0.0799%" height="15" fill="rgb(254,219,23)" fg:x="631" fg:w="1"/><text x="50.6896%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.4396%" y="357" width="0.0799%" height="15" fill="rgb(233,108,4)" fg:x="631" fg:w="1"/><text x="50.6896%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.6795%" y="405" width="0.1599%" height="15" fill="rgb(229,98,6)" fg:x="634" fg:w="2"/><text x="50.9295%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="50.8393%" y="389" width="0.1599%" height="15" fill="rgb(217,40,27)" fg:x="636" fg:w="2"/><text x="51.0893%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="51.2390%" y="341" width="0.2398%" height="15" fill="rgb(221,35,43)" fg:x="641" fg:w="3"/><text x="51.4890%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="51.0791%" y="373" width="0.4796%" height="15" fill="rgb(212,107,11)" fg:x="639" fg:w="6"/><text x="51.3291%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="51.2390%" y="357" width="0.3197%" height="15" fill="rgb(245,42,44)" fg:x="641" fg:w="4"/><text x="51.4890%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="51.4788%" y="341" width="0.0799%" height="15" fill="rgb(209,31,12)" fg:x="644" fg:w="1"/><text x="51.7288%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="51.7186%" y="341" width="0.0799%" height="15" fill="rgb(210,228,54)" fg:x="647" fg:w="1"/><text x="51.9686%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="51.7986%" y="341" width="0.0799%" height="15" fill="rgb(241,19,33)" fg:x="648" fg:w="1"/><text x="52.0486%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="51.5588%" y="373" width="0.3997%" height="15" fill="rgb(229,51,27)" fg:x="645" fg:w="5"/><text x="51.8088%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="51.6387%" y="357" width="0.3197%" height="15" fill="rgb(214,167,49)" fg:x="646" fg:w="4"/><text x="51.8887%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8785%" y="341" width="0.0799%" height="15" fill="rgb(248,140,47)" fg:x="649" fg:w="1"/><text x="52.1285%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.3581%" y="341" width="0.2398%" height="15" fill="rgb(228,6,51)" fg:x="655" fg:w="3"/><text x="52.6081%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.4380%" y="325" width="0.1599%" height="15" fill="rgb(242,44,53)" fg:x="656" fg:w="2"/><text x="52.6880%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5180%" y="309" width="0.0799%" height="15" fill="rgb(249,90,50)" fg:x="657" fg:w="1"/><text x="52.7680%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="52.6779%" y="325" width="0.0799%" height="15" fill="rgb(222,84,19)" fg:x="659" fg:w="1"/><text x="52.9279%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="52.7578%" y="325" width="0.0799%" height="15" fill="rgb(214,140,12)" fg:x="660" fg:w="1"/><text x="53.0078%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="52.7578%" y="309" width="0.0799%" height="15" fill="rgb(210,20,43)" fg:x="660" fg:w="1"/><text x="53.0078%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7578%" y="293" width="0.0799%" height="15" fill="rgb(243,1,40)" fg:x="660" fg:w="1"/><text x="53.0078%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="52.1183%" y="357" width="0.8793%" height="15" fill="rgb(224,102,26)" fg:x="652" fg:w="11"/><text x="52.3683%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="52.5979%" y="341" width="0.3997%" height="15" fill="rgb(221,179,1)" fg:x="658" fg:w="5"/><text x="52.8479%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.8377%" y="325" width="0.1599%" height="15" fill="rgb(216,209,47)" fg:x="661" fg:w="2"/><text x="53.0877%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (26 samples, 2.08%)</title><rect x="50.9992%" y="389" width="2.0783%" height="15" fill="rgb(251,135,9)" fg:x="638" fg:w="26"/><text x="51.2492%" y="399.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="51.9584%" y="373" width="1.1191%" height="15" fill="rgb(242,9,36)" fg:x="650" fg:w="14"/><text x="52.2084%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9976%" y="357" width="0.0799%" height="15" fill="rgb(249,60,37)" fg:x="663" fg:w="1"/><text x="53.2476%" y="367.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (41 samples, 3.28%)</title><rect x="49.8801%" y="453" width="3.2774%" height="15" fill="rgb(230,66,45)" fg:x="624" fg:w="41"/><text x="50.1301%" y="463.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (41 samples, 3.28%)</title><rect x="49.8801%" y="437" width="3.2774%" height="15" fill="rgb(216,1,47)" fg:x="624" fg:w="41"/><text x="50.1301%" y="447.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (33 samples, 2.64%)</title><rect x="50.5196%" y="421" width="2.6379%" height="15" fill="rgb(235,8,23)" fg:x="632" fg:w="33"/><text x="50.7696%" y="431.50">se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.32%)</title><rect x="50.8393%" y="405" width="2.3181%" height="15" fill="rgb(225,136,11)" fg:x="636" fg:w="29"/><text x="51.0893%" y="415.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.0775%" y="389" width="0.0799%" height="15" fill="rgb(228,63,44)" fg:x="664" fg:w="1"/><text x="53.3275%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.6371%" y="261" width="0.0799%" height="15" fill="rgb(240,43,52)" fg:x="671" fg:w="1"/><text x="53.8871%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.6371%" y="245" width="0.0799%" height="15" fill="rgb(217,167,36)" fg:x="671" fg:w="1"/><text x="53.8871%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="53.4772%" y="277" width="0.3997%" height="15" fill="rgb(250,19,6)" fg:x="669" fg:w="5"/><text x="53.7272%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.7170%" y="261" width="0.1599%" height="15" fill="rgb(236,60,51)" fg:x="672" fg:w="2"/><text x="53.9670%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.7170%" y="245" width="0.1599%" height="15" fill="rgb(222,217,20)" fg:x="672" fg:w="2"/><text x="53.9670%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.7170%" y="229" width="0.1599%" height="15" fill="rgb(242,65,52)" fg:x="672" fg:w="2"/><text x="53.9670%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="53.3173%" y="293" width="0.6395%" height="15" fill="rgb(217,5,41)" fg:x="667" fg:w="8"/><text x="53.5673%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8769%" y="277" width="0.0799%" height="15" fill="rgb(223,208,53)" fg:x="674" fg:w="1"/><text x="54.1269%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="53.3173%" y="325" width="0.8793%" height="15" fill="rgb(221,104,30)" fg:x="667" fg:w="11"/><text x="53.5673%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="53.3173%" y="309" width="0.8793%" height="15" fill="rgb(230,210,42)" fg:x="667" fg:w="11"/><text x="53.5673%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.9568%" y="293" width="0.2398%" height="15" fill="rgb(206,205,27)" fg:x="675" fg:w="3"/><text x="54.2068%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.0368%" y="277" width="0.1599%" height="15" fill="rgb(233,114,38)" fg:x="676" fg:w="2"/><text x="54.2868%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.0368%" y="261" width="0.1599%" height="15" fill="rgb(216,174,36)" fg:x="676" fg:w="2"/><text x="54.2868%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.1966%" y="325" width="0.1599%" height="15" fill="rgb(211,30,9)" fg:x="678" fg:w="2"/><text x="54.4466%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="54.2766%" y="309" width="0.0799%" height="15" fill="rgb(216,8,21)" fg:x="679" fg:w="1"/><text x="54.5266%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="54.2766%" y="293" width="0.0799%" height="15" fill="rgb(237,209,39)" fg:x="679" fg:w="1"/><text x="54.5266%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="53.2374%" y="357" width="1.4388%" height="15" fill="rgb(235,111,47)" fg:x="666" fg:w="18"/><text x="53.4874%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.44%)</title><rect x="53.2374%" y="341" width="1.4388%" height="15" fill="rgb(216,139,9)" fg:x="666" fg:w="18"/><text x="53.4874%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="54.3565%" y="325" width="0.3197%" height="15" fill="rgb(248,185,4)" fg:x="680" fg:w="4"/><text x="54.6065%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="54.3565%" y="309" width="0.3197%" height="15" fill="rgb(239,185,25)" fg:x="680" fg:w="4"/><text x="54.6065%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="54.4365%" y="293" width="0.2398%" height="15" fill="rgb(233,207,8)" fg:x="681" fg:w="3"/><text x="54.6865%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.6763%" y="357" width="0.0799%" height="15" fill="rgb(249,220,24)" fg:x="684" fg:w="1"/><text x="54.9263%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.76%)</title><rect x="53.1575%" y="389" width="1.7586%" height="15" fill="rgb(221,50,14)" fg:x="665" fg:w="22"/><text x="53.4075%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.76%)</title><rect x="53.1575%" y="373" width="1.7586%" height="15" fill="rgb(227,79,42)" fg:x="665" fg:w="22"/><text x="53.4075%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.7562%" y="357" width="0.1599%" height="15" fill="rgb(228,218,49)" fg:x="685" fg:w="2"/><text x="55.0062%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.9161%" y="389" width="0.0799%" height="15" fill="rgb(249,18,15)" fg:x="687" fg:w="1"/><text x="55.1661%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9161%" y="373" width="0.0799%" height="15" fill="rgb(212,84,27)" fg:x="687" fg:w="1"/><text x="55.1661%" y="383.50"></text></g><g><title>engine::session::state::State::close (176 samples, 14.07%)</title><rect x="41.1671%" y="565" width="14.0687%" height="15" fill="rgb(207,83,24)" fg:x="515" fg:w="176"/><text x="41.4171%" y="575.50">engine::session::stat..</text></g><g><title>engine::session::state::State::flush_entities (176 samples, 14.07%)</title><rect x="41.1671%" y="549" width="14.0687%" height="15" fill="rgb(219,61,7)" fg:x="515" fg:w="176"/><text x="41.4171%" y="559.50">engine::session::stat..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (176 samples, 14.07%)</title><rect x="41.1671%" y="533" width="14.0687%" height="15" fill="rgb(211,43,29)" fg:x="515" fg:w="176"/><text x="41.4171%" y="543.50">engine::session::inte..</text></g><g><title>core::iter::adapters::try_process (176 samples, 14.07%)</title><rect x="41.1671%" y="517" width="14.0687%" height="15" fill="rgb(243,15,23)" fg:x="515" fg:w="176"/><text x="41.4171%" y="527.50">core::iter::adapters:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (176 samples, 14.07%)</title><rect x="41.1671%" y="501" width="14.0687%" height="15" fill="rgb(217,52,28)" fg:x="515" fg:w="176"/><text x="41.4171%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (144 samples, 11.51%)</title><rect x="43.7250%" y="485" width="11.5108%" height="15" fill="rgb(210,35,6)" fg:x="547" fg:w="144"/><text x="43.9750%" y="495.50">engine::session::..</text></g><g><title>kernel::model::any_entity_changes (96 samples, 7.67%)</title><rect x="47.5620%" y="469" width="7.6739%" height="15" fill="rgb(237,187,28)" fg:x="595" fg:w="96"/><text x="47.8120%" y="479.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (26 samples, 2.08%)</title><rect x="53.1575%" y="453" width="2.0783%" height="15" fill="rgb(231,136,24)" fg:x="665" fg:w="26"/><text x="53.4075%" y="463.50">s..</text></g><g><title>serde_json::de::from_trait (26 samples, 2.08%)</title><rect x="53.1575%" y="437" width="2.0783%" height="15" fill="rgb(205,176,52)" fg:x="665" fg:w="26"/><text x="53.4075%" y="447.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.08%)</title><rect x="53.1575%" y="421" width="2.0783%" height="15" fill="rgb(218,65,12)" fg:x="665" fg:w="26"/><text x="53.4075%" y="431.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (26 samples, 2.08%)</title><rect x="53.1575%" y="405" width="2.0783%" height="15" fill="rgb(234,101,21)" fg:x="665" fg:w="26"/><text x="53.4075%" y="415.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.9960%" y="389" width="0.2398%" height="15" fill="rgb(206,13,20)" fg:x="688" fg:w="3"/><text x="55.2460%" y="399.50"></text></g><g><title>engine::session::Session::close (187 samples, 14.95%)</title><rect x="40.3677%" y="581" width="14.9480%" height="15" fill="rgb(236,89,44)" fg:x="505" fg:w="187"/><text x="40.6177%" y="591.50">engine::session::Sessio..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="55.2358%" y="565" width="0.0799%" height="15" fill="rgb(225,52,17)" fg:x="691" fg:w="1"/><text x="55.4858%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="55.4756%" y="405" width="0.0799%" height="15" fill="rgb(214,27,25)" fg:x="694" fg:w="1"/><text x="55.7256%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="55.4756%" y="389" width="0.0799%" height="15" fill="rgb(240,141,35)" fg:x="694" fg:w="1"/><text x="55.7256%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.4756%" y="373" width="0.0799%" height="15" fill="rgb(216,126,3)" fg:x="694" fg:w="1"/><text x="55.7256%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4756%" y="357" width="0.0799%" height="15" fill="rgb(249,196,23)" fg:x="694" fg:w="1"/><text x="55.7256%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.4756%" y="341" width="0.0799%" height="15" fill="rgb(215,185,43)" fg:x="694" fg:w="1"/><text x="55.7256%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4756%" y="325" width="0.0799%" height="15" fill="rgb(208,194,36)" fg:x="694" fg:w="1"/><text x="55.7256%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.4756%" y="309" width="0.0799%" height="15" fill="rgb(245,182,12)" fg:x="694" fg:w="1"/><text x="55.7256%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4756%" y="293" width="0.0799%" height="15" fill="rgb(244,222,52)" fg:x="694" fg:w="1"/><text x="55.7256%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.4756%" y="277" width="0.0799%" height="15" fill="rgb(236,222,51)" fg:x="694" fg:w="1"/><text x="55.7256%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="55.5556%" y="389" width="0.0799%" height="15" fill="rgb(254,71,22)" fg:x="695" fg:w="1"/><text x="55.8056%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.7154%" y="373" width="0.0799%" height="15" fill="rgb(250,104,15)" fg:x="697" fg:w="1"/><text x="55.9654%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.7154%" y="357" width="0.0799%" height="15" fill="rgb(229,223,46)" fg:x="697" fg:w="1"/><text x="55.9654%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.7154%" y="341" width="0.0799%" height="15" fill="rgb(209,129,18)" fg:x="697" fg:w="1"/><text x="55.9654%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7954%" y="309" width="0.0799%" height="15" fill="rgb(224,160,1)" fg:x="698" fg:w="1"/><text x="56.0454%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.7954%" y="293" width="0.0799%" height="15" fill="rgb(237,112,21)" fg:x="698" fg:w="1"/><text x="56.0454%" y="303.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (6 samples, 0.48%)</title><rect x="55.4756%" y="453" width="0.4796%" height="15" fill="rgb(215,198,53)" fg:x="694" fg:w="6"/><text x="55.7256%" y="463.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (6 samples, 0.48%)</title><rect x="55.4756%" y="437" width="0.4796%" height="15" fill="rgb(218,227,35)" fg:x="694" fg:w="6"/><text x="55.7256%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="55.4756%" y="421" width="0.4796%" height="15" fill="rgb(232,121,22)" fg:x="694" fg:w="6"/><text x="55.7256%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="55.5556%" y="405" width="0.3997%" height="15" fill="rgb(235,52,54)" fg:x="695" fg:w="5"/><text x="55.8056%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="55.6355%" y="389" width="0.3197%" height="15" fill="rgb(219,21,44)" fg:x="696" fg:w="4"/><text x="55.8855%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.7954%" y="373" width="0.1599%" height="15" fill="rgb(221,51,43)" fg:x="698" fg:w="2"/><text x="56.0454%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.7954%" y="357" width="0.1599%" height="15" fill="rgb(225,77,42)" fg:x="698" fg:w="2"/><text x="56.0454%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="55.7954%" y="341" width="0.1599%" height="15" fill="rgb(214,117,53)" fg:x="698" fg:w="2"/><text x="56.0454%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.7954%" y="325" width="0.1599%" height="15" fill="rgb(218,227,27)" fg:x="698" fg:w="2"/><text x="56.0454%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.8753%" y="309" width="0.0799%" height="15" fill="rgb(223,214,36)" fg:x="699" fg:w="1"/><text x="56.1253%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.8753%" y="293" width="0.0799%" height="15" fill="rgb(235,21,7)" fg:x="699" fg:w="1"/><text x="56.1253%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8753%" y="277" width="0.0799%" height="15" fill="rgb(244,216,4)" fg:x="699" fg:w="1"/><text x="56.1253%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.0352%" y="357" width="0.0799%" height="15" fill="rgb(249,197,24)" fg:x="701" fg:w="1"/><text x="56.2852%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="56.0352%" y="373" width="0.1599%" height="15" fill="rgb(222,169,49)" fg:x="701" fg:w="2"/><text x="56.2852%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="56.1151%" y="357" width="0.0799%" height="15" fill="rgb(207,137,33)" fg:x="702" fg:w="1"/><text x="56.3651%" y="367.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="56.1151%" y="341" width="0.0799%" height="15" fill="rgb(219,180,40)" fg:x="702" fg:w="1"/><text x="56.3651%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.1950%" y="309" width="0.0799%" height="15" fill="rgb(250,163,42)" fg:x="703" fg:w="1"/><text x="56.4450%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.1950%" y="293" width="0.0799%" height="15" fill="rgb(239,163,0)" fg:x="703" fg:w="1"/><text x="56.4450%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.1950%" y="277" width="0.0799%" height="15" fill="rgb(252,38,28)" fg:x="703" fg:w="1"/><text x="56.4450%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.1950%" y="261" width="0.0799%" height="15" fill="rgb(254,203,26)" fg:x="703" fg:w="1"/><text x="56.4450%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.1950%" y="245" width="0.0799%" height="15" fill="rgb(209,129,32)" fg:x="703" fg:w="1"/><text x="56.4450%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.1950%" y="229" width="0.0799%" height="15" fill="rgb(207,177,52)" fg:x="703" fg:w="1"/><text x="56.4450%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.1950%" y="213" width="0.0799%" height="15" fill="rgb(230,209,36)" fg:x="703" fg:w="1"/><text x="56.4450%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.1950%" y="197" width="0.0799%" height="15" fill="rgb(238,131,0)" fg:x="703" fg:w="1"/><text x="56.4450%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.1950%" y="341" width="0.1599%" height="15" fill="rgb(218,61,31)" fg:x="703" fg:w="2"/><text x="56.4450%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.1950%" y="325" width="0.1599%" height="15" fill="rgb(232,6,53)" fg:x="703" fg:w="2"/><text x="56.4450%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2750%" y="309" width="0.0799%" height="15" fill="rgb(254,100,32)" fg:x="704" fg:w="1"/><text x="56.5250%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2750%" y="293" width="0.0799%" height="15" fill="rgb(229,194,49)" fg:x="704" fg:w="1"/><text x="56.5250%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.2750%" y="277" width="0.0799%" height="15" fill="rgb(206,208,39)" fg:x="704" fg:w="1"/><text x="56.5250%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.2750%" y="261" width="0.0799%" height="15" fill="rgb(246,226,14)" fg:x="704" fg:w="1"/><text x="56.5250%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.2750%" y="245" width="0.0799%" height="15" fill="rgb(226,48,32)" fg:x="704" fg:w="1"/><text x="56.5250%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.2750%" y="229" width="0.0799%" height="15" fill="rgb(252,43,54)" fg:x="704" fg:w="1"/><text x="56.5250%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.2750%" y="213" width="0.0799%" height="15" fill="rgb(207,124,0)" fg:x="704" fg:w="1"/><text x="56.5250%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.3549%" y="341" width="0.0799%" height="15" fill="rgb(248,188,30)" fg:x="705" fg:w="1"/><text x="56.6049%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.3549%" y="325" width="0.0799%" height="15" fill="rgb(232,14,43)" fg:x="705" fg:w="1"/><text x="56.6049%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.5148%" y="277" width="0.0799%" height="15" fill="rgb(218,52,29)" fg:x="707" fg:w="1"/><text x="56.7648%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5947%" y="277" width="0.0799%" height="15" fill="rgb(218,176,50)" fg:x="708" fg:w="1"/><text x="56.8447%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.5947%" y="261" width="0.0799%" height="15" fill="rgb(213,112,0)" fg:x="708" fg:w="1"/><text x="56.8447%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.5947%" y="245" width="0.0799%" height="15" fill="rgb(244,216,8)" fg:x="708" fg:w="1"/><text x="56.8447%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.72%)</title><rect x="56.0352%" y="421" width="0.7194%" height="15" fill="rgb(224,148,53)" fg:x="701" fg:w="9"/><text x="56.2852%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (9 samples, 0.72%)</title><rect x="56.0352%" y="405" width="0.7194%" height="15" fill="rgb(241,133,40)" fg:x="701" fg:w="9"/><text x="56.2852%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="56.0352%" y="389" width="0.7194%" height="15" fill="rgb(232,17,44)" fg:x="701" fg:w="9"/><text x="56.2852%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="56.1950%" y="373" width="0.5596%" height="15" fill="rgb(213,32,25)" fg:x="703" fg:w="7"/><text x="56.4450%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="56.1950%" y="357" width="0.5596%" height="15" fill="rgb(249,115,27)" fg:x="703" fg:w="7"/><text x="56.4450%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="56.4349%" y="341" width="0.3197%" height="15" fill="rgb(241,50,1)" fg:x="706" fg:w="4"/><text x="56.6849%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="56.4349%" y="325" width="0.3197%" height="15" fill="rgb(244,175,40)" fg:x="706" fg:w="4"/><text x="56.6849%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="56.5148%" y="309" width="0.2398%" height="15" fill="rgb(230,94,34)" fg:x="707" fg:w="3"/><text x="56.7648%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.5148%" y="293" width="0.2398%" height="15" fill="rgb(223,185,29)" fg:x="707" fg:w="3"/><text x="56.7648%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.6747%" y="277" width="0.0799%" height="15" fill="rgb(225,193,15)" fg:x="709" fg:w="1"/><text x="56.9247%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6747%" y="261" width="0.0799%" height="15" fill="rgb(252,121,38)" fg:x="709" fg:w="1"/><text x="56.9247%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7546%" y="421" width="0.0799%" height="15" fill="rgb(232,44,12)" fg:x="710" fg:w="1"/><text x="57.0046%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.7546%" y="405" width="0.0799%" height="15" fill="rgb(226,45,54)" fg:x="710" fg:w="1"/><text x="57.0046%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.7546%" y="389" width="0.0799%" height="15" fill="rgb(209,67,17)" fg:x="710" fg:w="1"/><text x="57.0046%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7546%" y="373" width="0.0799%" height="15" fill="rgb(219,108,52)" fg:x="710" fg:w="1"/><text x="57.0046%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7546%" y="357" width="0.0799%" height="15" fill="rgb(216,118,19)" fg:x="710" fg:w="1"/><text x="57.0046%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.7546%" y="341" width="0.0799%" height="15" fill="rgb(228,120,40)" fg:x="710" fg:w="1"/><text x="57.0046%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.7546%" y="325" width="0.0799%" height="15" fill="rgb(221,218,34)" fg:x="710" fg:w="1"/><text x="57.0046%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.7546%" y="309" width="0.0799%" height="15" fill="rgb(235,89,14)" fg:x="710" fg:w="1"/><text x="57.0046%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.7546%" y="293" width="0.0799%" height="15" fill="rgb(248,89,7)" fg:x="710" fg:w="1"/><text x="57.0046%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.7546%" y="277" width="0.0799%" height="15" fill="rgb(212,114,34)" fg:x="710" fg:w="1"/><text x="57.0046%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8345%" y="421" width="0.0799%" height="15" fill="rgb(246,88,32)" fg:x="711" fg:w="1"/><text x="57.0845%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.9145%" y="421" width="0.0799%" height="15" fill="rgb(237,135,0)" fg:x="712" fg:w="1"/><text x="57.1645%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.9145%" y="405" width="0.0799%" height="15" fill="rgb(220,201,54)" fg:x="712" fg:w="1"/><text x="57.1645%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (21 samples, 1.68%)</title><rect x="55.4756%" y="469" width="1.6787%" height="15" fill="rgb(210,142,36)" fg:x="694" fg:w="21"/><text x="55.7256%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.20%)</title><rect x="55.9552%" y="453" width="1.1990%" height="15" fill="rgb(247,189,26)" fg:x="700" fg:w="15"/><text x="56.2052%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.12%)</title><rect x="56.0352%" y="437" width="1.1191%" height="15" fill="rgb(223,89,24)" fg:x="701" fg:w="14"/><text x="56.2852%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.9944%" y="421" width="0.1599%" height="15" fill="rgb(205,90,19)" fg:x="713" fg:w="2"/><text x="57.2444%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.9944%" y="405" width="0.1599%" height="15" fill="rgb(234,57,40)" fg:x="713" fg:w="2"/><text x="57.2444%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.0743%" y="389" width="0.0799%" height="15" fill="rgb(213,109,10)" fg:x="714" fg:w="1"/><text x="57.3243%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.0743%" y="373" width="0.0799%" height="15" fill="rgb(214,189,23)" fg:x="714" fg:w="1"/><text x="57.3243%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.0743%" y="357" width="0.0799%" height="15" fill="rgb(234,200,10)" fg:x="714" fg:w="1"/><text x="57.3243%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1543%" y="357" width="0.0799%" height="15" fill="rgb(221,148,16)" fg:x="715" fg:w="1"/><text x="57.4043%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.1543%" y="389" width="0.1599%" height="15" fill="rgb(230,115,10)" fg:x="715" fg:w="2"/><text x="57.4043%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.1543%" y="373" width="0.1599%" height="15" fill="rgb(220,106,42)" fg:x="715" fg:w="2"/><text x="57.4043%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2342%" y="357" width="0.0799%" height="15" fill="rgb(225,105,39)" fg:x="716" fg:w="1"/><text x="57.4842%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2342%" y="341" width="0.0799%" height="15" fill="rgb(211,161,38)" fg:x="716" fg:w="1"/><text x="57.4842%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.2342%" y="325" width="0.0799%" height="15" fill="rgb(213,23,19)" fg:x="716" fg:w="1"/><text x="57.4842%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.2342%" y="309" width="0.0799%" height="15" fill="rgb(240,2,33)" fg:x="716" fg:w="1"/><text x="57.4842%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.2342%" y="293" width="0.0799%" height="15" fill="rgb(221,29,45)" fg:x="716" fg:w="1"/><text x="57.4842%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.2342%" y="277" width="0.0799%" height="15" fill="rgb(242,10,19)" fg:x="716" fg:w="1"/><text x="57.4842%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.2342%" y="261" width="0.0799%" height="15" fill="rgb(250,84,37)" fg:x="716" fg:w="1"/><text x="57.4842%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.3141%" y="389" width="0.0799%" height="15" fill="rgb(214,136,7)" fg:x="717" fg:w="1"/><text x="57.5641%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="57.3141%" y="373" width="0.0799%" height="15" fill="rgb(231,189,12)" fg:x="717" fg:w="1"/><text x="57.5641%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.3141%" y="357" width="0.0799%" height="15" fill="rgb(244,40,16)" fg:x="717" fg:w="1"/><text x="57.5641%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="57.1543%" y="421" width="0.3197%" height="15" fill="rgb(217,29,15)" fg:x="715" fg:w="4"/><text x="57.4043%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="57.1543%" y="405" width="0.3197%" height="15" fill="rgb(235,172,33)" fg:x="715" fg:w="4"/><text x="57.4043%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.3941%" y="389" width="0.0799%" height="15" fill="rgb(206,148,28)" fg:x="718" fg:w="1"/><text x="57.6441%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.3941%" y="373" width="0.0799%" height="15" fill="rgb(251,167,37)" fg:x="718" fg:w="1"/><text x="57.6441%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="57.3941%" y="357" width="0.0799%" height="15" fill="rgb(229,94,52)" fg:x="718" fg:w="1"/><text x="57.6441%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.3941%" y="341" width="0.0799%" height="15" fill="rgb(216,132,9)" fg:x="718" fg:w="1"/><text x="57.6441%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="57.3941%" y="325" width="0.0799%" height="15" fill="rgb(208,110,29)" fg:x="718" fg:w="1"/><text x="57.6441%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.4740%" y="405" width="0.0799%" height="15" fill="rgb(241,23,8)" fg:x="719" fg:w="1"/><text x="57.7240%" y="415.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (28 samples, 2.24%)</title><rect x="55.3957%" y="485" width="2.2382%" height="15" fill="rgb(208,26,35)" fg:x="693" fg:w="28"/><text x="55.6457%" y="495.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (6 samples, 0.48%)</title><rect x="57.1543%" y="469" width="0.4796%" height="15" fill="rgb(242,165,34)" fg:x="715" fg:w="6"/><text x="57.4043%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="57.1543%" y="453" width="0.4796%" height="15" fill="rgb(222,222,33)" fg:x="715" fg:w="6"/><text x="57.4043%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="57.1543%" y="437" width="0.4796%" height="15" fill="rgb(227,16,52)" fg:x="715" fg:w="6"/><text x="57.4043%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="57.4740%" y="421" width="0.1599%" height="15" fill="rgb(213,93,12)" fg:x="719" fg:w="2"/><text x="57.7240%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="57.5540%" y="405" width="0.0799%" height="15" fill="rgb(238,41,5)" fg:x="720" fg:w="1"/><text x="57.8040%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.5540%" y="389" width="0.0799%" height="15" fill="rgb(211,60,15)" fg:x="720" fg:w="1"/><text x="57.8040%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.5540%" y="373" width="0.0799%" height="15" fill="rgb(209,11,34)" fg:x="720" fg:w="1"/><text x="57.8040%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="57.5540%" y="357" width="0.0799%" height="15" fill="rgb(254,155,53)" fg:x="720" fg:w="1"/><text x="57.8040%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.5540%" y="341" width="0.0799%" height="15" fill="rgb(236,174,8)" fg:x="720" fg:w="1"/><text x="57.8040%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.5540%" y="325" width="0.0799%" height="15" fill="rgb(229,31,27)" fg:x="720" fg:w="1"/><text x="57.8040%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.5540%" y="309" width="0.0799%" height="15" fill="rgb(242,226,26)" fg:x="720" fg:w="1"/><text x="57.8040%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6339%" y="485" width="0.0799%" height="15" fill="rgb(234,32,40)" fg:x="721" fg:w="1"/><text x="57.8839%" y="495.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="57.8737%" y="357" width="0.0799%" height="15" fill="rgb(249,226,47)" fg:x="724" fg:w="1"/><text x="58.1237%" y="367.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="57.8737%" y="341" width="0.0799%" height="15" fill="rgb(212,6,26)" fg:x="724" fg:w="1"/><text x="58.1237%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.8737%" y="325" width="0.0799%" height="15" fill="rgb(249,202,29)" fg:x="724" fg:w="1"/><text x="58.1237%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.8737%" y="309" width="0.0799%" height="15" fill="rgb(226,106,4)" fg:x="724" fg:w="1"/><text x="58.1237%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="57.8737%" y="293" width="0.0799%" height="15" fill="rgb(251,2,27)" fg:x="724" fg:w="1"/><text x="58.1237%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (34 samples, 2.72%)</title><rect x="55.3157%" y="549" width="2.7178%" height="15" fill="rgb(236,208,0)" fg:x="692" fg:w="34"/><text x="55.5657%" y="559.50">&lt;e..</text></g><g><title>kernel::plugins::mw::apply_middleware (33 samples, 2.64%)</title><rect x="55.3957%" y="533" width="2.6379%" height="15" fill="rgb(211,66,17)" fg:x="693" fg:w="33"/><text x="55.6457%" y="543.50">ke..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (33 samples, 2.64%)</title><rect x="55.3957%" y="517" width="2.6379%" height="15" fill="rgb(216,129,9)" fg:x="693" fg:w="33"/><text x="55.6457%" y="527.50">ke..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (33 samples, 2.64%)</title><rect x="55.3957%" y="501" width="2.6379%" height="15" fill="rgb(215,130,23)" fg:x="693" fg:w="33"/><text x="55.6457%" y="511.50">&lt;e..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="57.7138%" y="485" width="0.3197%" height="15" fill="rgb(253,157,11)" fg:x="722" fg:w="4"/><text x="57.9638%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="57.7138%" y="469" width="0.3197%" height="15" fill="rgb(224,25,14)" fg:x="722" fg:w="4"/><text x="57.9638%" y="479.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="57.7138%" y="453" width="0.3197%" height="15" fill="rgb(238,16,7)" fg:x="722" fg:w="4"/><text x="57.9638%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="57.7138%" y="437" width="0.3197%" height="15" fill="rgb(228,74,11)" fg:x="722" fg:w="4"/><text x="57.9638%" y="447.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="57.7138%" y="421" width="0.3197%" height="15" fill="rgb(239,221,27)" fg:x="722" fg:w="4"/><text x="57.9638%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.32%)</title><rect x="57.7138%" y="405" width="0.3197%" height="15" fill="rgb(229,166,18)" fg:x="722" fg:w="4"/><text x="57.9638%" y="415.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (4 samples, 0.32%)</title><rect x="57.7138%" y="389" width="0.3197%" height="15" fill="rgb(254,94,46)" fg:x="722" fg:w="4"/><text x="57.9638%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="57.8737%" y="373" width="0.1599%" height="15" fill="rgb(241,79,19)" fg:x="724" fg:w="2"/><text x="58.1237%" y="383.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="57.9536%" y="357" width="0.0799%" height="15" fill="rgb(228,99,51)" fg:x="725" fg:w="1"/><text x="58.2036%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9536%" y="341" width="0.0799%" height="15" fill="rgb(211,15,6)" fg:x="725" fg:w="1"/><text x="58.2036%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9536%" y="325" width="0.0799%" height="15" fill="rgb(245,107,54)" fg:x="725" fg:w="1"/><text x="58.2036%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.9536%" y="309" width="0.0799%" height="15" fill="rgb(243,3,2)" fg:x="725" fg:w="1"/><text x="58.2036%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.9536%" y="293" width="0.0799%" height="15" fill="rgb(206,122,10)" fg:x="725" fg:w="1"/><text x="58.2036%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.9536%" y="277" width="0.0799%" height="15" fill="rgb(224,88,4)" fg:x="725" fg:w="1"/><text x="58.2036%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.9536%" y="261" width="0.0799%" height="15" fill="rgb(230,1,41)" fg:x="725" fg:w="1"/><text x="58.2036%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.9536%" y="245" width="0.0799%" height="15" fill="rgb(230,1,31)" fg:x="725" fg:w="1"/><text x="58.2036%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="58.0336%" y="549" width="0.0799%" height="15" fill="rgb(232,67,19)" fg:x="726" fg:w="1"/><text x="58.2836%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.3533%" y="421" width="0.0799%" height="15" fill="rgb(222,206,20)" fg:x="730" fg:w="1"/><text x="58.6033%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.3533%" y="405" width="0.0799%" height="15" fill="rgb(217,225,19)" fg:x="730" fg:w="1"/><text x="58.6033%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.3533%" y="389" width="0.0799%" height="15" fill="rgb(234,13,33)" fg:x="730" fg:w="1"/><text x="58.6033%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.3533%" y="373" width="0.0799%" height="15" fill="rgb(254,5,1)" fg:x="730" fg:w="1"/><text x="58.6033%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.3533%" y="357" width="0.0799%" height="15" fill="rgb(211,121,41)" fg:x="730" fg:w="1"/><text x="58.6033%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.3533%" y="341" width="0.0799%" height="15" fill="rgb(213,199,35)" fg:x="730" fg:w="1"/><text x="58.6033%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.3533%" y="325" width="0.0799%" height="15" fill="rgb(240,118,22)" fg:x="730" fg:w="1"/><text x="58.6033%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.3533%" y="309" width="0.0799%" height="15" fill="rgb(238,184,25)" fg:x="730" fg:w="1"/><text x="58.6033%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.3533%" y="293" width="0.0799%" height="15" fill="rgb(210,165,6)" fg:x="730" fg:w="1"/><text x="58.6033%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.3533%" y="277" width="0.0799%" height="15" fill="rgb(235,149,5)" fg:x="730" fg:w="1"/><text x="58.6033%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.3533%" y="261" width="0.0799%" height="15" fill="rgb(221,63,5)" fg:x="730" fg:w="1"/><text x="58.6033%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.3533%" y="245" width="0.0799%" height="15" fill="rgb(250,44,41)" fg:x="730" fg:w="1"/><text x="58.6033%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.3533%" y="229" width="0.0799%" height="15" fill="rgb(235,112,47)" fg:x="730" fg:w="1"/><text x="58.6033%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.3533%" y="453" width="0.2398%" height="15" fill="rgb(252,176,34)" fg:x="730" fg:w="3"/><text x="58.6033%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.3533%" y="437" width="0.2398%" height="15" fill="rgb(234,50,19)" fg:x="730" fg:w="3"/><text x="58.6033%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.4333%" y="421" width="0.1599%" height="15" fill="rgb(241,195,31)" fg:x="731" fg:w="2"/><text x="58.6833%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.4333%" y="405" width="0.1599%" height="15" fill="rgb(212,93,11)" fg:x="731" fg:w="2"/><text x="58.6833%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.4333%" y="389" width="0.1599%" height="15" fill="rgb(254,98,51)" fg:x="731" fg:w="2"/><text x="58.6833%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.4333%" y="373" width="0.1599%" height="15" fill="rgb(246,18,45)" fg:x="731" fg:w="2"/><text x="58.6833%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.4333%" y="357" width="0.1599%" height="15" fill="rgb(215,148,23)" fg:x="731" fg:w="2"/><text x="58.6833%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.4333%" y="341" width="0.1599%" height="15" fill="rgb(227,22,7)" fg:x="731" fg:w="2"/><text x="58.6833%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.4333%" y="325" width="0.1599%" height="15" fill="rgb(207,210,37)" fg:x="731" fg:w="2"/><text x="58.6833%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="58.4333%" y="309" width="0.1599%" height="15" fill="rgb(247,147,42)" fg:x="731" fg:w="2"/><text x="58.6833%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.5132%" y="293" width="0.0799%" height="15" fill="rgb(226,213,14)" fg:x="732" fg:w="1"/><text x="58.7632%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.5132%" y="277" width="0.0799%" height="15" fill="rgb(223,18,10)" fg:x="732" fg:w="1"/><text x="58.7632%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.5132%" y="261" width="0.0799%" height="15" fill="rgb(253,34,22)" fg:x="732" fg:w="1"/><text x="58.7632%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5132%" y="245" width="0.0799%" height="15" fill="rgb(222,90,31)" fg:x="732" fg:w="1"/><text x="58.7632%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="58.3533%" y="469" width="0.3197%" height="15" fill="rgb(220,182,30)" fg:x="730" fg:w="4"/><text x="58.6033%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5931%" y="453" width="0.0799%" height="15" fill="rgb(229,170,12)" fg:x="733" fg:w="1"/><text x="58.8431%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5931%" y="437" width="0.0799%" height="15" fill="rgb(210,101,21)" fg:x="733" fg:w="1"/><text x="58.8431%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.5931%" y="421" width="0.0799%" height="15" fill="rgb(237,177,31)" fg:x="733" fg:w="1"/><text x="58.8431%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.5931%" y="405" width="0.0799%" height="15" fill="rgb(215,91,34)" fg:x="733" fg:w="1"/><text x="58.8431%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.5931%" y="389" width="0.0799%" height="15" fill="rgb(229,206,16)" fg:x="733" fg:w="1"/><text x="58.8431%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.5931%" y="373" width="0.0799%" height="15" fill="rgb(235,207,10)" fg:x="733" fg:w="1"/><text x="58.8431%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.5931%" y="357" width="0.0799%" height="15" fill="rgb(247,18,10)" fg:x="733" fg:w="1"/><text x="58.8431%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.5931%" y="341" width="0.0799%" height="15" fill="rgb(232,4,6)" fg:x="733" fg:w="1"/><text x="58.8431%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.5931%" y="325" width="0.0799%" height="15" fill="rgb(247,93,45)" fg:x="733" fg:w="1"/><text x="58.8431%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.5931%" y="309" width="0.0799%" height="15" fill="rgb(240,181,18)" fg:x="733" fg:w="1"/><text x="58.8431%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.5931%" y="293" width="0.0799%" height="15" fill="rgb(208,224,0)" fg:x="733" fg:w="1"/><text x="58.8431%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5931%" y="277" width="0.0799%" height="15" fill="rgb(224,207,54)" fg:x="733" fg:w="1"/><text x="58.8431%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="58.3533%" y="485" width="0.3997%" height="15" fill="rgb(217,152,29)" fg:x="730" fg:w="5"/><text x="58.6033%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6731%" y="469" width="0.0799%" height="15" fill="rgb(243,78,27)" fg:x="734" fg:w="1"/><text x="58.9231%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6731%" y="453" width="0.0799%" height="15" fill="rgb(228,111,9)" fg:x="734" fg:w="1"/><text x="58.9231%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.6731%" y="437" width="0.0799%" height="15" fill="rgb(230,213,21)" fg:x="734" fg:w="1"/><text x="58.9231%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.6731%" y="421" width="0.0799%" height="15" fill="rgb(248,50,36)" fg:x="734" fg:w="1"/><text x="58.9231%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.6731%" y="405" width="0.0799%" height="15" fill="rgb(226,19,31)" fg:x="734" fg:w="1"/><text x="58.9231%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6731%" y="389" width="0.0799%" height="15" fill="rgb(205,132,21)" fg:x="734" fg:w="1"/><text x="58.9231%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6731%" y="373" width="0.0799%" height="15" fill="rgb(207,42,19)" fg:x="734" fg:w="1"/><text x="58.9231%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.6731%" y="357" width="0.0799%" height="15" fill="rgb(229,69,35)" fg:x="734" fg:w="1"/><text x="58.9231%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.6731%" y="341" width="0.0799%" height="15" fill="rgb(226,96,11)" fg:x="734" fg:w="1"/><text x="58.9231%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.6731%" y="325" width="0.0799%" height="15" fill="rgb(236,133,54)" fg:x="734" fg:w="1"/><text x="58.9231%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.6731%" y="309" width="0.0799%" height="15" fill="rgb(247,166,21)" fg:x="734" fg:w="1"/><text x="58.9231%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6731%" y="293" width="0.0799%" height="15" fill="rgb(220,132,12)" fg:x="734" fg:w="1"/><text x="58.9231%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="58.7530%" y="485" width="0.0799%" height="15" fill="rgb(233,27,30)" fg:x="735" fg:w="1"/><text x="59.0030%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="58.7530%" y="469" width="0.0799%" height="15" fill="rgb(246,161,27)" fg:x="735" fg:w="1"/><text x="59.0030%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.7530%" y="453" width="0.0799%" height="15" fill="rgb(240,56,3)" fg:x="735" fg:w="1"/><text x="59.0030%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.7530%" y="437" width="0.0799%" height="15" fill="rgb(242,190,9)" fg:x="735" fg:w="1"/><text x="59.0030%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.7530%" y="421" width="0.0799%" height="15" fill="rgb(234,3,52)" fg:x="735" fg:w="1"/><text x="59.0030%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.7530%" y="405" width="0.0799%" height="15" fill="rgb(220,221,19)" fg:x="735" fg:w="1"/><text x="59.0030%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="58.8329%" y="485" width="0.0799%" height="15" fill="rgb(247,178,30)" fg:x="736" fg:w="1"/><text x="59.0829%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.8329%" y="469" width="0.0799%" height="15" fill="rgb(234,212,27)" fg:x="736" fg:w="1"/><text x="59.0829%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.8329%" y="453" width="0.0799%" height="15" fill="rgb(226,199,38)" fg:x="736" fg:w="1"/><text x="59.0829%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.8329%" y="437" width="0.0799%" height="15" fill="rgb(248,114,22)" fg:x="736" fg:w="1"/><text x="59.0829%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="59.0727%" y="405" width="0.1599%" height="15" fill="rgb(221,180,4)" fg:x="739" fg:w="2"/><text x="59.3227%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.2326%" y="325" width="0.0799%" height="15" fill="rgb(220,229,24)" fg:x="741" fg:w="1"/><text x="59.4826%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.2326%" y="309" width="0.0799%" height="15" fill="rgb(226,184,27)" fg:x="741" fg:w="1"/><text x="59.4826%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="59.3125%" y="325" width="0.0799%" height="15" fill="rgb(232,99,15)" fg:x="742" fg:w="1"/><text x="59.5625%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="59.2326%" y="389" width="0.2398%" height="15" fill="rgb(250,167,16)" fg:x="741" fg:w="3"/><text x="59.4826%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.2326%" y="373" width="0.2398%" height="15" fill="rgb(243,113,6)" fg:x="741" fg:w="3"/><text x="59.4826%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="59.2326%" y="357" width="0.2398%" height="15" fill="rgb(244,147,52)" fg:x="741" fg:w="3"/><text x="59.4826%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.2326%" y="341" width="0.2398%" height="15" fill="rgb(235,59,50)" fg:x="741" fg:w="3"/><text x="59.4826%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3925%" y="325" width="0.0799%" height="15" fill="rgb(250,188,6)" fg:x="743" fg:w="1"/><text x="59.6425%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3925%" y="309" width="0.0799%" height="15" fill="rgb(236,173,11)" fg:x="743" fg:w="1"/><text x="59.6425%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="59.4724%" y="389" width="0.0799%" height="15" fill="rgb(233,64,3)" fg:x="744" fg:w="1"/><text x="59.7224%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.4724%" y="373" width="0.0799%" height="15" fill="rgb(207,92,7)" fg:x="744" fg:w="1"/><text x="59.7224%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="59.4724%" y="357" width="0.0799%" height="15" fill="rgb(221,30,19)" fg:x="744" fg:w="1"/><text x="59.7224%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="59.4724%" y="341" width="0.0799%" height="15" fill="rgb(245,22,49)" fg:x="744" fg:w="1"/><text x="59.7224%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.72%)</title><rect x="58.9129%" y="485" width="0.7194%" height="15" fill="rgb(218,39,20)" fg:x="737" fg:w="9"/><text x="59.1629%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="58.9129%" y="469" width="0.7194%" height="15" fill="rgb(222,144,21)" fg:x="737" fg:w="9"/><text x="59.1629%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="58.9129%" y="453" width="0.7194%" height="15" fill="rgb(222,78,51)" fg:x="737" fg:w="9"/><text x="59.1629%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="59.0727%" y="437" width="0.5596%" height="15" fill="rgb(248,213,53)" fg:x="739" fg:w="7"/><text x="59.3227%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="59.0727%" y="421" width="0.5596%" height="15" fill="rgb(245,28,34)" fg:x="739" fg:w="7"/><text x="59.3227%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="59.2326%" y="405" width="0.3997%" height="15" fill="rgb(229,186,26)" fg:x="741" fg:w="5"/><text x="59.4826%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.5524%" y="389" width="0.0799%" height="15" fill="rgb(224,0,41)" fg:x="745" fg:w="1"/><text x="59.8024%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.5524%" y="373" width="0.0799%" height="15" fill="rgb(223,136,51)" fg:x="745" fg:w="1"/><text x="59.8024%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="59.5524%" y="357" width="0.0799%" height="15" fill="rgb(234,50,9)" fg:x="745" fg:w="1"/><text x="59.8024%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="59.5524%" y="341" width="0.0799%" height="15" fill="rgb(242,164,20)" fg:x="745" fg:w="1"/><text x="59.8024%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.7922%" y="325" width="0.0799%" height="15" fill="rgb(230,169,22)" fg:x="748" fg:w="1"/><text x="60.0422%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7922%" y="309" width="0.0799%" height="15" fill="rgb(228,82,26)" fg:x="748" fg:w="1"/><text x="60.0422%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="59.8721%" y="325" width="0.2398%" height="15" fill="rgb(244,220,31)" fg:x="749" fg:w="3"/><text x="60.1221%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0320%" y="309" width="0.0799%" height="15" fill="rgb(214,35,25)" fg:x="751" fg:w="1"/><text x="60.2820%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="59.7122%" y="357" width="0.5596%" height="15" fill="rgb(245,162,54)" fg:x="747" fg:w="7"/><text x="59.9622%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="59.7922%" y="341" width="0.4796%" height="15" fill="rgb(210,43,24)" fg:x="748" fg:w="6"/><text x="60.0422%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.1119%" y="325" width="0.1599%" height="15" fill="rgb(226,145,51)" fg:x="752" fg:w="2"/><text x="60.3619%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="59.7122%" y="389" width="0.7194%" height="15" fill="rgb(237,52,53)" fg:x="747" fg:w="9"/><text x="59.9622%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="59.7122%" y="373" width="0.7194%" height="15" fill="rgb(216,226,7)" fg:x="747" fg:w="9"/><text x="59.9622%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="60.2718%" y="357" width="0.1599%" height="15" fill="rgb(206,223,18)" fg:x="754" fg:w="2"/><text x="60.5218%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="60.2718%" y="341" width="0.1599%" height="15" fill="rgb(221,1,10)" fg:x="754" fg:w="2"/><text x="60.5218%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="59.7122%" y="421" width="0.7994%" height="15" fill="rgb(221,151,42)" fg:x="747" fg:w="10"/><text x="59.9622%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="59.7122%" y="405" width="0.7994%" height="15" fill="rgb(205,183,46)" fg:x="747" fg:w="10"/><text x="59.9622%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.4317%" y="389" width="0.0799%" height="15" fill="rgb(239,229,1)" fg:x="756" fg:w="1"/><text x="60.6817%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (29 samples, 2.32%)</title><rect x="58.2734%" y="517" width="2.3181%" height="15" fill="rgb(236,192,23)" fg:x="729" fg:w="29"/><text x="58.5234%" y="527.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (28 samples, 2.24%)</title><rect x="58.3533%" y="501" width="2.2382%" height="15" fill="rgb(215,146,3)" fg:x="730" fg:w="28"/><text x="58.6033%" y="511.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="59.6323%" y="485" width="0.9592%" height="15" fill="rgb(235,52,27)" fg:x="746" fg:w="12"/><text x="59.8823%" y="495.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="59.6323%" y="469" width="0.9592%" height="15" fill="rgb(236,45,20)" fg:x="746" fg:w="12"/><text x="59.8823%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="59.7122%" y="453" width="0.8793%" height="15" fill="rgb(235,86,41)" fg:x="747" fg:w="11"/><text x="59.9622%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="59.7122%" y="437" width="0.8793%" height="15" fill="rgb(235,27,27)" fg:x="747" fg:w="11"/><text x="59.9622%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.5116%" y="421" width="0.0799%" height="15" fill="rgb(232,4,34)" fg:x="757" fg:w="1"/><text x="60.7616%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="60.5116%" y="405" width="0.0799%" height="15" fill="rgb(215,22,10)" fg:x="757" fg:w="1"/><text x="60.7616%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="60.5116%" y="389" width="0.0799%" height="15" fill="rgb(230,228,27)" fg:x="757" fg:w="1"/><text x="60.7616%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="60.5915%" y="501" width="0.0799%" height="15" fill="rgb(216,26,51)" fg:x="758" fg:w="1"/><text x="60.8415%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5915%" y="485" width="0.0799%" height="15" fill="rgb(225,180,50)" fg:x="758" fg:w="1"/><text x="60.8415%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7514%" y="437" width="0.0799%" height="15" fill="rgb(236,211,2)" fg:x="760" fg:w="1"/><text x="61.0014%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7514%" y="421" width="0.0799%" height="15" fill="rgb(250,51,20)" fg:x="760" fg:w="1"/><text x="61.0014%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="60.6715%" y="485" width="0.2398%" height="15" fill="rgb(232,70,37)" fg:x="759" fg:w="3"/><text x="60.9215%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7514%" y="469" width="0.1599%" height="15" fill="rgb(226,183,39)" fg:x="760" fg:w="2"/><text x="61.0014%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7514%" y="453" width="0.1599%" height="15" fill="rgb(232,228,21)" fg:x="760" fg:w="2"/><text x="61.0014%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8313%" y="437" width="0.0799%" height="15" fill="rgb(251,118,32)" fg:x="761" fg:w="1"/><text x="61.0813%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8313%" y="421" width="0.0799%" height="15" fill="rgb(235,172,38)" fg:x="761" fg:w="1"/><text x="61.0813%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.8313%" y="405" width="0.0799%" height="15" fill="rgb(235,63,18)" fg:x="761" fg:w="1"/><text x="61.0813%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.8313%" y="389" width="0.0799%" height="15" fill="rgb(225,4,7)" fg:x="761" fg:w="1"/><text x="61.0813%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.8313%" y="373" width="0.0799%" height="15" fill="rgb(231,61,1)" fg:x="761" fg:w="1"/><text x="61.0813%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8313%" y="357" width="0.0799%" height="15" fill="rgb(241,155,22)" fg:x="761" fg:w="1"/><text x="61.0813%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8313%" y="341" width="0.0799%" height="15" fill="rgb(209,100,26)" fg:x="761" fg:w="1"/><text x="61.0813%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.8313%" y="325" width="0.0799%" height="15" fill="rgb(248,181,15)" fg:x="761" fg:w="1"/><text x="61.0813%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.8313%" y="309" width="0.0799%" height="15" fill="rgb(214,94,31)" fg:x="761" fg:w="1"/><text x="61.0813%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.8313%" y="293" width="0.0799%" height="15" fill="rgb(207,16,42)" fg:x="761" fg:w="1"/><text x="61.0813%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.8313%" y="277" width="0.0799%" height="15" fill="rgb(208,127,13)" fg:x="761" fg:w="1"/><text x="61.0813%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8313%" y="261" width="0.0799%" height="15" fill="rgb(220,211,18)" fg:x="761" fg:w="1"/><text x="61.0813%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.0711%" y="389" width="0.0799%" height="15" fill="rgb(221,55,38)" fg:x="764" fg:w="1"/><text x="61.3211%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0711%" y="373" width="0.0799%" height="15" fill="rgb(252,219,45)" fg:x="764" fg:w="1"/><text x="61.3211%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0711%" y="357" width="0.0799%" height="15" fill="rgb(248,53,35)" fg:x="764" fg:w="1"/><text x="61.3211%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.0711%" y="341" width="0.0799%" height="15" fill="rgb(210,87,2)" fg:x="764" fg:w="1"/><text x="61.3211%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.0711%" y="325" width="0.0799%" height="15" fill="rgb(239,133,9)" fg:x="764" fg:w="1"/><text x="61.3211%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.0711%" y="309" width="0.0799%" height="15" fill="rgb(214,114,5)" fg:x="764" fg:w="1"/><text x="61.3211%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.0711%" y="293" width="0.0799%" height="15" fill="rgb(206,124,24)" fg:x="764" fg:w="1"/><text x="61.3211%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.0711%" y="277" width="0.0799%" height="15" fill="rgb(212,57,33)" fg:x="764" fg:w="1"/><text x="61.3211%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.0711%" y="261" width="0.0799%" height="15" fill="rgb(246,21,20)" fg:x="764" fg:w="1"/><text x="61.3211%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.0711%" y="245" width="0.0799%" height="15" fill="rgb(253,210,39)" fg:x="764" fg:w="1"/><text x="61.3211%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.0711%" y="229" width="0.0799%" height="15" fill="rgb(209,187,24)" fg:x="764" fg:w="1"/><text x="61.3211%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.0711%" y="213" width="0.0799%" height="15" fill="rgb(246,136,17)" fg:x="764" fg:w="1"/><text x="61.3211%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.0711%" y="197" width="0.0799%" height="15" fill="rgb(211,0,30)" fg:x="764" fg:w="1"/><text x="61.3211%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="60.9912%" y="421" width="0.2398%" height="15" fill="rgb(216,199,7)" fg:x="763" fg:w="3"/><text x="61.2412%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.0711%" y="405" width="0.1599%" height="15" fill="rgb(207,210,19)" fg:x="764" fg:w="2"/><text x="61.3211%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1511%" y="389" width="0.0799%" height="15" fill="rgb(237,187,39)" fg:x="765" fg:w="1"/><text x="61.4011%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.2310%" y="245" width="0.0799%" height="15" fill="rgb(243,194,42)" fg:x="766" fg:w="1"/><text x="61.4810%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="60.9113%" y="437" width="0.4796%" height="15" fill="rgb(225,194,19)" fg:x="762" fg:w="6"/><text x="61.1613%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.2310%" y="421" width="0.1599%" height="15" fill="rgb(224,192,14)" fg:x="766" fg:w="2"/><text x="61.4810%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.2310%" y="405" width="0.1599%" height="15" fill="rgb(252,21,18)" fg:x="766" fg:w="2"/><text x="61.4810%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="61.2310%" y="389" width="0.1599%" height="15" fill="rgb(229,69,19)" fg:x="766" fg:w="2"/><text x="61.4810%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="61.2310%" y="373" width="0.1599%" height="15" fill="rgb(251,31,53)" fg:x="766" fg:w="2"/><text x="61.4810%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="61.2310%" y="357" width="0.1599%" height="15" fill="rgb(218,39,50)" fg:x="766" fg:w="2"/><text x="61.4810%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.2310%" y="341" width="0.1599%" height="15" fill="rgb(231,50,17)" fg:x="766" fg:w="2"/><text x="61.4810%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.2310%" y="325" width="0.1599%" height="15" fill="rgb(223,217,31)" fg:x="766" fg:w="2"/><text x="61.4810%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="61.2310%" y="309" width="0.1599%" height="15" fill="rgb(225,91,12)" fg:x="766" fg:w="2"/><text x="61.4810%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="61.2310%" y="293" width="0.1599%" height="15" fill="rgb(242,58,43)" fg:x="766" fg:w="2"/><text x="61.4810%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="61.2310%" y="277" width="0.1599%" height="15" fill="rgb(242,32,21)" fg:x="766" fg:w="2"/><text x="61.4810%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="61.2310%" y="261" width="0.1599%" height="15" fill="rgb(211,127,1)" fg:x="766" fg:w="2"/><text x="61.4810%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="61.3110%" y="245" width="0.0799%" height="15" fill="rgb(231,93,13)" fg:x="767" fg:w="1"/><text x="61.5610%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="61.3110%" y="229" width="0.0799%" height="15" fill="rgb(218,83,4)" fg:x="767" fg:w="1"/><text x="61.5610%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.3909%" y="373" width="0.0799%" height="15" fill="rgb(230,218,10)" fg:x="768" fg:w="1"/><text x="61.6409%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3909%" y="357" width="0.0799%" height="15" fill="rgb(235,127,18)" fg:x="768" fg:w="1"/><text x="61.6409%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3909%" y="341" width="0.0799%" height="15" fill="rgb(213,137,46)" fg:x="768" fg:w="1"/><text x="61.6409%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.3909%" y="325" width="0.0799%" height="15" fill="rgb(235,179,24)" fg:x="768" fg:w="1"/><text x="61.6409%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.3909%" y="309" width="0.0799%" height="15" fill="rgb(247,58,49)" fg:x="768" fg:w="1"/><text x="61.6409%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.3909%" y="293" width="0.0799%" height="15" fill="rgb(242,222,5)" fg:x="768" fg:w="1"/><text x="61.6409%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3909%" y="277" width="0.0799%" height="15" fill="rgb(230,16,48)" fg:x="768" fg:w="1"/><text x="61.6409%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3909%" y="261" width="0.0799%" height="15" fill="rgb(241,192,16)" fg:x="768" fg:w="1"/><text x="61.6409%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.3909%" y="245" width="0.0799%" height="15" fill="rgb(209,25,37)" fg:x="768" fg:w="1"/><text x="61.6409%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.3909%" y="229" width="0.0799%" height="15" fill="rgb(229,215,13)" fg:x="768" fg:w="1"/><text x="61.6409%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.3909%" y="213" width="0.0799%" height="15" fill="rgb(213,199,8)" fg:x="768" fg:w="1"/><text x="61.6409%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.3909%" y="197" width="0.0799%" height="15" fill="rgb(226,151,19)" fg:x="768" fg:w="1"/><text x="61.6409%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3909%" y="181" width="0.0799%" height="15" fill="rgb(254,183,12)" fg:x="768" fg:w="1"/><text x="61.6409%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.3909%" y="389" width="0.1599%" height="15" fill="rgb(245,8,3)" fg:x="768" fg:w="2"/><text x="61.6409%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4708%" y="373" width="0.0799%" height="15" fill="rgb(229,159,35)" fg:x="769" fg:w="1"/><text x="61.7208%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4708%" y="357" width="0.0799%" height="15" fill="rgb(209,145,1)" fg:x="769" fg:w="1"/><text x="61.7208%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6307%" y="325" width="0.0799%" height="15" fill="rgb(228,183,16)" fg:x="771" fg:w="1"/><text x="61.8807%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6307%" y="309" width="0.0799%" height="15" fill="rgb(222,68,0)" fg:x="771" fg:w="1"/><text x="61.8807%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.6307%" y="293" width="0.0799%" height="15" fill="rgb(209,130,50)" fg:x="771" fg:w="1"/><text x="61.8807%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.6307%" y="277" width="0.0799%" height="15" fill="rgb(228,176,44)" fg:x="771" fg:w="1"/><text x="61.8807%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.6307%" y="261" width="0.0799%" height="15" fill="rgb(221,164,2)" fg:x="771" fg:w="1"/><text x="61.8807%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.6307%" y="245" width="0.0799%" height="15" fill="rgb(249,199,49)" fg:x="771" fg:w="1"/><text x="61.8807%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.6307%" y="229" width="0.0799%" height="15" fill="rgb(228,205,53)" fg:x="771" fg:w="1"/><text x="61.8807%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.6307%" y="213" width="0.0799%" height="15" fill="rgb(235,77,20)" fg:x="771" fg:w="1"/><text x="61.8807%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.6307%" y="197" width="0.0799%" height="15" fill="rgb(227,147,34)" fg:x="771" fg:w="1"/><text x="61.8807%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.6307%" y="181" width="0.0799%" height="15" fill="rgb(226,203,52)" fg:x="771" fg:w="1"/><text x="61.8807%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.6307%" y="165" width="0.0799%" height="15" fill="rgb(226,186,23)" fg:x="771" fg:w="1"/><text x="61.8807%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.6307%" y="149" width="0.0799%" height="15" fill="rgb(236,13,30)" fg:x="771" fg:w="1"/><text x="61.8807%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.6307%" y="341" width="0.1599%" height="15" fill="rgb(228,121,22)" fg:x="771" fg:w="2"/><text x="61.8807%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7106%" y="325" width="0.0799%" height="15" fill="rgb(248,222,26)" fg:x="772" fg:w="1"/><text x="61.9606%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7906%" y="293" width="0.0799%" height="15" fill="rgb(251,72,25)" fg:x="773" fg:w="1"/><text x="62.0406%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7906%" y="277" width="0.0799%" height="15" fill="rgb(223,114,24)" fg:x="773" fg:w="1"/><text x="62.0406%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7906%" y="261" width="0.0799%" height="15" fill="rgb(232,190,43)" fg:x="773" fg:w="1"/><text x="62.0406%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.7906%" y="245" width="0.0799%" height="15" fill="rgb(208,90,0)" fg:x="773" fg:w="1"/><text x="62.0406%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.7906%" y="229" width="0.0799%" height="15" fill="rgb(234,149,31)" fg:x="773" fg:w="1"/><text x="62.0406%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.7906%" y="213" width="0.0799%" height="15" fill="rgb(235,188,36)" fg:x="773" fg:w="1"/><text x="62.0406%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7906%" y="197" width="0.0799%" height="15" fill="rgb(219,59,51)" fg:x="773" fg:w="1"/><text x="62.0406%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7906%" y="181" width="0.0799%" height="15" fill="rgb(236,101,40)" fg:x="773" fg:w="1"/><text x="62.0406%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.7906%" y="165" width="0.0799%" height="15" fill="rgb(235,33,7)" fg:x="773" fg:w="1"/><text x="62.0406%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.7906%" y="149" width="0.0799%" height="15" fill="rgb(213,169,26)" fg:x="773" fg:w="1"/><text x="62.0406%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.7906%" y="133" width="0.0799%" height="15" fill="rgb(218,99,34)" fg:x="773" fg:w="1"/><text x="62.0406%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.7906%" y="117" width="0.0799%" height="15" fill="rgb(210,57,24)" fg:x="773" fg:w="1"/><text x="62.0406%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7906%" y="101" width="0.0799%" height="15" fill="rgb(231,181,54)" fg:x="773" fg:w="1"/><text x="62.0406%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.8705%" y="293" width="0.0799%" height="15" fill="rgb(251,188,48)" fg:x="774" fg:w="1"/><text x="62.1205%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.8705%" y="277" width="0.0799%" height="15" fill="rgb(243,12,45)" fg:x="774" fg:w="1"/><text x="62.1205%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="61.7906%" y="341" width="0.2398%" height="15" fill="rgb(250,197,9)" fg:x="773" fg:w="3"/><text x="62.0406%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="61.7906%" y="325" width="0.2398%" height="15" fill="rgb(235,149,35)" fg:x="773" fg:w="3"/><text x="62.0406%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="61.7906%" y="309" width="0.2398%" height="15" fill="rgb(219,27,19)" fg:x="773" fg:w="3"/><text x="62.0406%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.9504%" y="293" width="0.0799%" height="15" fill="rgb(244,78,31)" fg:x="775" fg:w="1"/><text x="62.2004%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9504%" y="277" width="0.0799%" height="15" fill="rgb(241,13,4)" fg:x="775" fg:w="1"/><text x="62.2004%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="61.9504%" y="261" width="0.0799%" height="15" fill="rgb(212,194,26)" fg:x="775" fg:w="1"/><text x="62.2004%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="61.5508%" y="389" width="0.6395%" height="15" fill="rgb(236,80,11)" fg:x="770" fg:w="8"/><text x="61.8008%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="61.5508%" y="373" width="0.6395%" height="15" fill="rgb(206,1,24)" fg:x="770" fg:w="8"/><text x="61.8008%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="61.6307%" y="357" width="0.5596%" height="15" fill="rgb(238,215,50)" fg:x="771" fg:w="7"/><text x="61.8807%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.0304%" y="341" width="0.1599%" height="15" fill="rgb(254,126,32)" fg:x="776" fg:w="2"/><text x="62.2804%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.0304%" y="325" width="0.1599%" height="15" fill="rgb(206,111,53)" fg:x="776" fg:w="2"/><text x="62.2804%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="62.0304%" y="309" width="0.1599%" height="15" fill="rgb(218,72,44)" fg:x="776" fg:w="2"/><text x="62.2804%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="62.0304%" y="293" width="0.1599%" height="15" fill="rgb(238,25,3)" fg:x="776" fg:w="2"/><text x="62.2804%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="62.0304%" y="277" width="0.1599%" height="15" fill="rgb(250,191,7)" fg:x="776" fg:w="2"/><text x="62.2804%" y="287.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="62.0304%" y="261" width="0.1599%" height="15" fill="rgb(238,56,30)" fg:x="776" fg:w="2"/><text x="62.2804%" y="271.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="62.0304%" y="245" width="0.1599%" height="15" fill="rgb(210,27,45)" fg:x="776" fg:w="2"/><text x="62.2804%" y="255.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="62.0304%" y="229" width="0.1599%" height="15" fill="rgb(207,10,50)" fg:x="776" fg:w="2"/><text x="62.2804%" y="239.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="62.0304%" y="213" width="0.1599%" height="15" fill="rgb(249,30,23)" fg:x="776" fg:w="2"/><text x="62.2804%" y="223.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="62.0304%" y="197" width="0.1599%" height="15" fill="rgb(250,80,12)" fg:x="776" fg:w="2"/><text x="62.2804%" y="207.50"></text></g><g><title>&lt;serde::de::Unexpected as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="62.1103%" y="181" width="0.0799%" height="15" fill="rgb(210,221,37)" fg:x="777" fg:w="1"/><text x="62.3603%" y="191.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="62.1103%" y="165" width="0.0799%" height="15" fill="rgb(205,96,24)" fg:x="777" fg:w="1"/><text x="62.3603%" y="175.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.1103%" y="149" width="0.0799%" height="15" fill="rgb(247,104,22)" fg:x="777" fg:w="1"/><text x="62.3603%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1103%" y="133" width="0.0799%" height="15" fill="rgb(222,61,53)" fg:x="777" fg:w="1"/><text x="62.3603%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.1103%" y="117" width="0.0799%" height="15" fill="rgb(241,11,53)" fg:x="777" fg:w="1"/><text x="62.3603%" y="127.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.1103%" y="101" width="0.0799%" height="15" fill="rgb(230,111,47)" fg:x="777" fg:w="1"/><text x="62.3603%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.1103%" y="85" width="0.0799%" height="15" fill="rgb(218,187,29)" fg:x="777" fg:w="1"/><text x="62.3603%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.1103%" y="69" width="0.0799%" height="15" fill="rgb(210,121,46)" fg:x="777" fg:w="1"/><text x="62.3603%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.1103%" y="53" width="0.0799%" height="15" fill="rgb(250,43,19)" fg:x="777" fg:w="1"/><text x="62.3603%" y="63.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.1103%" y="37" width="0.0799%" height="15" fill="rgb(238,61,12)" fg:x="777" fg:w="1"/><text x="62.3603%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="62.3501%" y="341" width="0.0799%" height="15" fill="rgb(251,198,9)" fg:x="780" fg:w="1"/><text x="62.6001%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.3501%" y="325" width="0.0799%" height="15" fill="rgb(214,192,38)" fg:x="780" fg:w="1"/><text x="62.6001%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.3501%" y="309" width="0.0799%" height="15" fill="rgb(214,73,19)" fg:x="780" fg:w="1"/><text x="62.6001%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="61.3909%" y="437" width="1.1191%" height="15" fill="rgb(249,222,49)" fg:x="768" fg:w="14"/><text x="61.6409%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.12%)</title><rect x="61.3909%" y="421" width="1.1191%" height="15" fill="rgb(231,181,54)" fg:x="768" fg:w="14"/><text x="61.6409%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.12%)</title><rect x="61.3909%" y="405" width="1.1191%" height="15" fill="rgb(240,1,13)" fg:x="768" fg:w="14"/><text x="61.6409%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.1902%" y="389" width="0.3197%" height="15" fill="rgb(225,21,16)" fg:x="778" fg:w="4"/><text x="62.4402%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.1902%" y="373" width="0.3197%" height="15" fill="rgb(246,176,50)" fg:x="778" fg:w="4"/><text x="62.4402%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="62.2702%" y="357" width="0.2398%" height="15" fill="rgb(208,96,50)" fg:x="779" fg:w="3"/><text x="62.5202%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.4301%" y="341" width="0.0799%" height="15" fill="rgb(240,219,19)" fg:x="781" fg:w="1"/><text x="62.6801%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.4301%" y="325" width="0.0799%" height="15" fill="rgb(234,73,5)" fg:x="781" fg:w="1"/><text x="62.6801%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4301%" y="309" width="0.0799%" height="15" fill="rgb(225,52,53)" fg:x="781" fg:w="1"/><text x="62.6801%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.5100%" y="373" width="0.0799%" height="15" fill="rgb(250,12,14)" fg:x="782" fg:w="1"/><text x="62.7600%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.5100%" y="357" width="0.0799%" height="15" fill="rgb(242,185,54)" fg:x="782" fg:w="1"/><text x="62.7600%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.5899%" y="357" width="0.0799%" height="15" fill="rgb(211,206,31)" fg:x="783" fg:w="1"/><text x="62.8399%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.5899%" y="341" width="0.0799%" height="15" fill="rgb(252,10,33)" fg:x="783" fg:w="1"/><text x="62.8399%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="62.6699%" y="357" width="0.0799%" height="15" fill="rgb(216,26,7)" fg:x="784" fg:w="1"/><text x="62.9199%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.6699%" y="341" width="0.0799%" height="15" fill="rgb(228,112,40)" fg:x="784" fg:w="1"/><text x="62.9199%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.6699%" y="325" width="0.0799%" height="15" fill="rgb(212,21,16)" fg:x="784" fg:w="1"/><text x="62.9199%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7498%" y="341" width="0.0799%" height="15" fill="rgb(249,3,29)" fg:x="785" fg:w="1"/><text x="62.9998%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 2.00%)</title><rect x="60.9113%" y="485" width="1.9984%" height="15" fill="rgb(221,42,51)" fg:x="762" fg:w="25"/><text x="61.1613%" y="495.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 2.00%)</title><rect x="60.9113%" y="469" width="1.9984%" height="15" fill="rgb(225,90,21)" fg:x="762" fg:w="25"/><text x="61.1613%" y="479.50">&lt;..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (25 samples, 2.00%)</title><rect x="60.9113%" y="453" width="1.9984%" height="15" fill="rgb(242,131,5)" fg:x="762" fg:w="25"/><text x="61.1613%" y="463.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.5100%" y="437" width="0.3997%" height="15" fill="rgb(220,187,28)" fg:x="782" fg:w="5"/><text x="62.7600%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.5100%" y="421" width="0.3997%" height="15" fill="rgb(210,75,48)" fg:x="782" fg:w="5"/><text x="62.7600%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="62.5100%" y="405" width="0.3997%" height="15" fill="rgb(211,91,40)" fg:x="782" fg:w="5"/><text x="62.7600%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="62.5100%" y="389" width="0.3997%" height="15" fill="rgb(205,43,18)" fg:x="782" fg:w="5"/><text x="62.7600%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="62.5899%" y="373" width="0.3197%" height="15" fill="rgb(207,123,11)" fg:x="783" fg:w="4"/><text x="62.8399%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="62.7498%" y="357" width="0.1599%" height="15" fill="rgb(235,89,39)" fg:x="785" fg:w="2"/><text x="62.9998%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.8297%" y="341" width="0.0799%" height="15" fill="rgb(245,217,27)" fg:x="786" fg:w="1"/><text x="63.0797%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.9097%" y="421" width="0.0799%" height="15" fill="rgb(216,55,17)" fg:x="787" fg:w="1"/><text x="63.1597%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9097%" y="405" width="0.0799%" height="15" fill="rgb(252,116,44)" fg:x="787" fg:w="1"/><text x="63.1597%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9896%" y="405" width="0.0799%" height="15" fill="rgb(229,153,4)" fg:x="788" fg:w="1"/><text x="63.2396%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="63.0695%" y="389" width="0.1599%" height="15" fill="rgb(222,24,35)" fg:x="789" fg:w="2"/><text x="63.3195%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="63.0695%" y="373" width="0.1599%" height="15" fill="rgb(214,26,20)" fg:x="789" fg:w="2"/><text x="63.3195%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.1495%" y="357" width="0.0799%" height="15" fill="rgb(215,14,45)" fg:x="790" fg:w="1"/><text x="63.3995%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="62.9097%" y="453" width="0.5596%" height="15" fill="rgb(217,212,50)" fg:x="787" fg:w="7"/><text x="63.1597%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="62.9097%" y="437" width="0.5596%" height="15" fill="rgb(230,172,52)" fg:x="787" fg:w="7"/><text x="63.1597%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="62.9896%" y="421" width="0.4796%" height="15" fill="rgb(210,48,36)" fg:x="788" fg:w="6"/><text x="63.2396%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="63.0695%" y="405" width="0.3997%" height="15" fill="rgb(216,213,32)" fg:x="789" fg:w="5"/><text x="63.3195%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.2294%" y="389" width="0.2398%" height="15" fill="rgb(237,202,41)" fg:x="791" fg:w="3"/><text x="63.4794%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="63.3094%" y="373" width="0.1599%" height="15" fill="rgb(209,14,29)" fg:x="792" fg:w="2"/><text x="63.5594%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4692%" y="437" width="0.0799%" height="15" fill="rgb(219,29,3)" fg:x="794" fg:w="1"/><text x="63.7192%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="63.4692%" y="421" width="0.0799%" height="15" fill="rgb(229,13,49)" fg:x="794" fg:w="1"/><text x="63.7192%" y="431.50"></text></g><g><title>engine::session::internal::Added::find_refs (38 samples, 3.04%)</title><rect x="60.5915%" y="517" width="3.0376%" height="15" fill="rgb(210,206,2)" fg:x="758" fg:w="38"/><text x="60.8415%" y="527.50">eng..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (37 samples, 2.96%)</title><rect x="60.6715%" y="501" width="2.9576%" height="15" fill="rgb(216,154,46)" fg:x="759" fg:w="37"/><text x="60.9215%" y="511.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="62.9097%" y="485" width="0.7194%" height="15" fill="rgb(211,170,52)" fg:x="787" fg:w="9"/><text x="63.1597%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="62.9097%" y="469" width="0.7194%" height="15" fill="rgb(233,109,47)" fg:x="787" fg:w="9"/><text x="63.1597%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="63.4692%" y="453" width="0.1599%" height="15" fill="rgb(208,212,30)" fg:x="794" fg:w="2"/><text x="63.7192%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="63.5492%" y="437" width="0.0799%" height="15" fill="rgb(215,190,19)" fg:x="795" fg:w="1"/><text x="63.7992%" y="447.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="63.5492%" y="421" width="0.0799%" height="15" fill="rgb(207,164,53)" fg:x="795" fg:w="1"/><text x="63.7992%" y="431.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="63.5492%" y="405" width="0.0799%" height="15" fill="rgb(213,87,49)" fg:x="795" fg:w="1"/><text x="63.7992%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="63.5492%" y="389" width="0.0799%" height="15" fill="rgb(241,216,24)" fg:x="795" fg:w="1"/><text x="63.7992%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.5492%" y="373" width="0.0799%" height="15" fill="rgb(241,123,45)" fg:x="795" fg:w="1"/><text x="63.7992%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.5492%" y="357" width="0.0799%" height="15" fill="rgb(220,36,15)" fg:x="795" fg:w="1"/><text x="63.7992%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.5492%" y="341" width="0.0799%" height="15" fill="rgb(215,202,9)" fg:x="795" fg:w="1"/><text x="63.7992%" y="351.50"></text></g><g><title>&lt;serde::de::Unexpected as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="63.5492%" y="325" width="0.0799%" height="15" fill="rgb(252,71,26)" fg:x="795" fg:w="1"/><text x="63.7992%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="63.5492%" y="309" width="0.0799%" height="15" fill="rgb(243,195,19)" fg:x="795" fg:w="1"/><text x="63.7992%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.5492%" y="293" width="0.0799%" height="15" fill="rgb(207,167,27)" fg:x="795" fg:w="1"/><text x="63.7992%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.5492%" y="277" width="0.0799%" height="15" fill="rgb(250,146,54)" fg:x="795" fg:w="1"/><text x="63.7992%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.5492%" y="261" width="0.0799%" height="15" fill="rgb(245,79,9)" fg:x="795" fg:w="1"/><text x="63.7992%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="63.5492%" y="245" width="0.0799%" height="15" fill="rgb(234,197,22)" fg:x="795" fg:w="1"/><text x="63.7992%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="63.5492%" y="229" width="0.0799%" height="15" fill="rgb(221,52,48)" fg:x="795" fg:w="1"/><text x="63.7992%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="63.5492%" y="213" width="0.0799%" height="15" fill="rgb(235,80,0)" fg:x="795" fg:w="1"/><text x="63.7992%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="63.5492%" y="197" width="0.0799%" height="15" fill="rgb(221,117,53)" fg:x="795" fg:w="1"/><text x="63.7992%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.5492%" y="181" width="0.0799%" height="15" fill="rgb(239,48,47)" fg:x="795" fg:w="1"/><text x="63.7992%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="63.5492%" y="165" width="0.0799%" height="15" fill="rgb(227,191,52)" fg:x="795" fg:w="1"/><text x="63.7992%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="63.5492%" y="149" width="0.0799%" height="15" fill="rgb(241,118,1)" fg:x="795" fg:w="1"/><text x="63.7992%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="63.5492%" y="133" width="0.0799%" height="15" fill="rgb(240,85,3)" fg:x="795" fg:w="1"/><text x="63.7992%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.6291%" y="469" width="0.1599%" height="15" fill="rgb(237,68,37)" fg:x="796" fg:w="2"/><text x="63.8791%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.6291%" y="453" width="0.1599%" height="15" fill="rgb(212,9,20)" fg:x="796" fg:w="2"/><text x="63.8791%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.6291%" y="437" width="0.1599%" height="15" fill="rgb(218,84,17)" fg:x="796" fg:w="2"/><text x="63.8791%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7090%" y="421" width="0.0799%" height="15" fill="rgb(235,147,20)" fg:x="797" fg:w="1"/><text x="63.9590%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7090%" y="405" width="0.0799%" height="15" fill="rgb(208,224,1)" fg:x="797" fg:w="1"/><text x="63.9590%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.7090%" y="389" width="0.0799%" height="15" fill="rgb(232,97,50)" fg:x="797" fg:w="1"/><text x="63.9590%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.7090%" y="373" width="0.0799%" height="15" fill="rgb(238,15,45)" fg:x="797" fg:w="1"/><text x="63.9590%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.7090%" y="357" width="0.0799%" height="15" fill="rgb(231,46,18)" fg:x="797" fg:w="1"/><text x="63.9590%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.7090%" y="341" width="0.0799%" height="15" fill="rgb(254,169,10)" fg:x="797" fg:w="1"/><text x="63.9590%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.7090%" y="325" width="0.0799%" height="15" fill="rgb(243,169,30)" fg:x="797" fg:w="1"/><text x="63.9590%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.7090%" y="309" width="0.0799%" height="15" fill="rgb(236,90,49)" fg:x="797" fg:w="1"/><text x="63.9590%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.7090%" y="293" width="0.0799%" height="15" fill="rgb(218,80,15)" fg:x="797" fg:w="1"/><text x="63.9590%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.7090%" y="277" width="0.0799%" height="15" fill="rgb(222,115,37)" fg:x="797" fg:w="1"/><text x="63.9590%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.7090%" y="261" width="0.0799%" height="15" fill="rgb(227,0,6)" fg:x="797" fg:w="1"/><text x="63.9590%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.7090%" y="245" width="0.0799%" height="15" fill="rgb(217,189,13)" fg:x="797" fg:w="1"/><text x="63.9590%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="63.7890%" y="469" width="0.2398%" height="15" fill="rgb(220,74,19)" fg:x="798" fg:w="3"/><text x="64.0390%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.8689%" y="453" width="0.1599%" height="15" fill="rgb(224,81,18)" fg:x="799" fg:w="2"/><text x="64.1189%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="63.8689%" y="437" width="0.1599%" height="15" fill="rgb(245,178,48)" fg:x="799" fg:w="2"/><text x="64.1189%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="63.8689%" y="421" width="0.1599%" height="15" fill="rgb(207,78,24)" fg:x="799" fg:w="2"/><text x="64.1189%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="63.8689%" y="405" width="0.1599%" height="15" fill="rgb(223,222,30)" fg:x="799" fg:w="2"/><text x="64.1189%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.8689%" y="389" width="0.1599%" height="15" fill="rgb(234,101,12)" fg:x="799" fg:w="2"/><text x="64.1189%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.8689%" y="373" width="0.1599%" height="15" fill="rgb(209,80,46)" fg:x="799" fg:w="2"/><text x="64.1189%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="63.8689%" y="357" width="0.1599%" height="15" fill="rgb(228,79,14)" fg:x="799" fg:w="2"/><text x="64.1189%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="63.8689%" y="341" width="0.1599%" height="15" fill="rgb(220,219,34)" fg:x="799" fg:w="2"/><text x="64.1189%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="63.8689%" y="325" width="0.1599%" height="15" fill="rgb(207,80,21)" fg:x="799" fg:w="2"/><text x="64.1189%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="63.8689%" y="309" width="0.1599%" height="15" fill="rgb(210,154,44)" fg:x="799" fg:w="2"/><text x="64.1189%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.8689%" y="293" width="0.1599%" height="15" fill="rgb(246,44,39)" fg:x="799" fg:w="2"/><text x="64.1189%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="63.6291%" y="501" width="0.4796%" height="15" fill="rgb(252,175,13)" fg:x="796" fg:w="6"/><text x="63.8791%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="63.6291%" y="485" width="0.4796%" height="15" fill="rgb(211,50,39)" fg:x="796" fg:w="6"/><text x="63.8791%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0288%" y="469" width="0.0799%" height="15" fill="rgb(231,204,27)" fg:x="801" fg:w="1"/><text x="64.2788%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.1087%" y="469" width="0.0799%" height="15" fill="rgb(253,26,34)" fg:x="802" fg:w="1"/><text x="64.3587%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.1087%" y="453" width="0.0799%" height="15" fill="rgb(207,139,38)" fg:x="802" fg:w="1"/><text x="64.3587%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.1087%" y="437" width="0.0799%" height="15" fill="rgb(248,54,27)" fg:x="802" fg:w="1"/><text x="64.3587%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="64.1087%" y="501" width="0.1599%" height="15" fill="rgb(234,25,33)" fg:x="802" fg:w="2"/><text x="64.3587%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="64.1087%" y="485" width="0.1599%" height="15" fill="rgb(249,107,47)" fg:x="802" fg:w="2"/><text x="64.3587%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.1886%" y="469" width="0.0799%" height="15" fill="rgb(230,190,31)" fg:x="803" fg:w="1"/><text x="64.4386%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.1886%" y="453" width="0.0799%" height="15" fill="rgb(238,173,45)" fg:x="803" fg:w="1"/><text x="64.4386%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="64.1886%" y="437" width="0.0799%" height="15" fill="rgb(222,16,50)" fg:x="803" fg:w="1"/><text x="64.4386%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.1886%" y="421" width="0.0799%" height="15" fill="rgb(251,204,47)" fg:x="803" fg:w="1"/><text x="64.4386%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.1886%" y="405" width="0.0799%" height="15" fill="rgb(225,12,3)" fg:x="803" fg:w="1"/><text x="64.4386%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.1886%" y="389" width="0.0799%" height="15" fill="rgb(214,208,22)" fg:x="803" fg:w="1"/><text x="64.4386%" y="399.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="64.2686%" y="501" width="0.0799%" height="15" fill="rgb(240,57,32)" fg:x="804" fg:w="1"/><text x="64.5186%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.2686%" y="485" width="0.0799%" height="15" fill="rgb(243,113,48)" fg:x="804" fg:w="1"/><text x="64.5186%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.2686%" y="469" width="0.0799%" height="15" fill="rgb(225,135,30)" fg:x="804" fg:w="1"/><text x="64.5186%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="64.4285%" y="341" width="0.0799%" height="15" fill="rgb(222,3,53)" fg:x="806" fg:w="1"/><text x="64.6785%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.5084%" y="341" width="0.0799%" height="15" fill="rgb(243,142,2)" fg:x="807" fg:w="1"/><text x="64.7584%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.4285%" y="373" width="0.2398%" height="15" fill="rgb(233,67,14)" fg:x="806" fg:w="3"/><text x="64.6785%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.4285%" y="357" width="0.2398%" height="15" fill="rgb(245,125,36)" fg:x="806" fg:w="3"/><text x="64.6785%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5883%" y="341" width="0.0799%" height="15" fill="rgb(225,199,6)" fg:x="808" fg:w="1"/><text x="64.8383%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.7482%" y="309" width="0.0799%" height="15" fill="rgb(244,71,6)" fg:x="810" fg:w="1"/><text x="64.9982%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="64.7482%" y="293" width="0.0799%" height="15" fill="rgb(225,62,9)" fg:x="810" fg:w="1"/><text x="64.9982%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (5 samples, 0.40%)</title><rect x="64.6683%" y="373" width="0.3997%" height="15" fill="rgb(246,139,53)" fg:x="809" fg:w="5"/><text x="64.9183%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="64.7482%" y="357" width="0.3197%" height="15" fill="rgb(243,161,46)" fg:x="810" fg:w="4"/><text x="64.9982%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="64.7482%" y="341" width="0.3197%" height="15" fill="rgb(236,153,7)" fg:x="810" fg:w="4"/><text x="64.9982%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="64.7482%" y="325" width="0.3197%" height="15" fill="rgb(248,42,35)" fg:x="810" fg:w="4"/><text x="64.9982%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="64.8281%" y="309" width="0.2398%" height="15" fill="rgb(250,17,31)" fg:x="811" fg:w="3"/><text x="65.0781%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.9081%" y="293" width="0.1599%" height="15" fill="rgb(248,138,14)" fg:x="812" fg:w="2"/><text x="65.1581%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="64.9081%" y="277" width="0.1599%" height="15" fill="rgb(228,161,3)" fg:x="812" fg:w="2"/><text x="65.1581%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="64.4285%" y="405" width="0.7194%" height="15" fill="rgb(248,116,17)" fg:x="806" fg:w="9"/><text x="64.6785%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="64.4285%" y="389" width="0.7194%" height="15" fill="rgb(207,78,24)" fg:x="806" fg:w="9"/><text x="64.6785%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.0679%" y="373" width="0.0799%" height="15" fill="rgb(234,99,48)" fg:x="814" fg:w="1"/><text x="65.3179%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.0679%" y="357" width="0.0799%" height="15" fill="rgb(242,22,26)" fg:x="814" fg:w="1"/><text x="65.3179%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.1479%" y="341" width="0.0799%" height="15" fill="rgb(227,78,32)" fg:x="815" fg:w="1"/><text x="65.3979%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.1479%" y="405" width="0.1599%" height="15" fill="rgb(226,189,43)" fg:x="815" fg:w="2"/><text x="65.3979%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.1479%" y="389" width="0.1599%" height="15" fill="rgb(227,218,35)" fg:x="815" fg:w="2"/><text x="65.3979%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.1479%" y="373" width="0.1599%" height="15" fill="rgb(206,111,40)" fg:x="815" fg:w="2"/><text x="65.3979%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="65.1479%" y="357" width="0.1599%" height="15" fill="rgb(208,217,22)" fg:x="815" fg:w="2"/><text x="65.3979%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="65.2278%" y="341" width="0.0799%" height="15" fill="rgb(248,20,20)" fg:x="816" fg:w="1"/><text x="65.4778%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="65.3078%" y="357" width="0.1599%" height="15" fill="rgb(239,155,16)" fg:x="817" fg:w="2"/><text x="65.5578%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="65.3078%" y="341" width="0.1599%" height="15" fill="rgb(238,171,46)" fg:x="817" fg:w="2"/><text x="65.5578%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3078%" y="325" width="0.1599%" height="15" fill="rgb(248,11,36)" fg:x="817" fg:w="2"/><text x="65.5578%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.3078%" y="309" width="0.1599%" height="15" fill="rgb(220,148,37)" fg:x="817" fg:w="2"/><text x="65.5578%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.3877%" y="293" width="0.0799%" height="15" fill="rgb(218,144,42)" fg:x="818" fg:w="1"/><text x="65.6377%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.4676%" y="341" width="0.1599%" height="15" fill="rgb(245,20,20)" fg:x="819" fg:w="2"/><text x="65.7176%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.5476%" y="325" width="0.0799%" height="15" fill="rgb(240,111,48)" fg:x="820" fg:w="1"/><text x="65.7976%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5476%" y="309" width="0.0799%" height="15" fill="rgb(237,225,32)" fg:x="820" fg:w="1"/><text x="65.7976%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.5476%" y="293" width="0.0799%" height="15" fill="rgb(228,161,46)" fg:x="820" fg:w="1"/><text x="65.7976%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.5476%" y="277" width="0.0799%" height="15" fill="rgb(235,196,21)" fg:x="820" fg:w="1"/><text x="65.7976%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (16 samples, 1.28%)</title><rect x="64.4285%" y="453" width="1.2790%" height="15" fill="rgb(250,133,21)" fg:x="806" fg:w="16"/><text x="64.6785%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (16 samples, 1.28%)</title><rect x="64.4285%" y="437" width="1.2790%" height="15" fill="rgb(236,94,32)" fg:x="806" fg:w="16"/><text x="64.6785%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (16 samples, 1.28%)</title><rect x="64.4285%" y="421" width="1.2790%" height="15" fill="rgb(219,176,25)" fg:x="806" fg:w="16"/><text x="64.6785%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="65.3078%" y="405" width="0.3997%" height="15" fill="rgb(211,17,43)" fg:x="817" fg:w="5"/><text x="65.5578%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="65.3078%" y="389" width="0.3997%" height="15" fill="rgb(220,75,23)" fg:x="817" fg:w="5"/><text x="65.5578%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="65.3078%" y="373" width="0.3997%" height="15" fill="rgb(215,122,32)" fg:x="817" fg:w="5"/><text x="65.5578%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.4676%" y="357" width="0.2398%" height="15" fill="rgb(218,57,38)" fg:x="819" fg:w="3"/><text x="65.7176%" y="367.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="65.6275%" y="341" width="0.0799%" height="15" fill="rgb(233,208,46)" fg:x="821" fg:w="1"/><text x="65.8775%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (19 samples, 1.52%)</title><rect x="64.3485%" y="501" width="1.5188%" height="15" fill="rgb(221,35,50)" fg:x="805" fg:w="19"/><text x="64.5985%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (19 samples, 1.52%)</title><rect x="64.3485%" y="485" width="1.5188%" height="15" fill="rgb(229,213,29)" fg:x="805" fg:w="19"/><text x="64.5985%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (19 samples, 1.52%)</title><rect x="64.3485%" y="469" width="1.5188%" height="15" fill="rgb(229,110,40)" fg:x="805" fg:w="19"/><text x="64.5985%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.7074%" y="453" width="0.1599%" height="15" fill="rgb(247,206,19)" fg:x="822" fg:w="2"/><text x="65.9574%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.7074%" y="437" width="0.1599%" height="15" fill="rgb(216,229,45)" fg:x="822" fg:w="2"/><text x="65.9574%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.7074%" y="421" width="0.1599%" height="15" fill="rgb(205,184,31)" fg:x="822" fg:w="2"/><text x="65.9574%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.7074%" y="405" width="0.1599%" height="15" fill="rgb(213,91,10)" fg:x="822" fg:w="2"/><text x="65.9574%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="66.1871%" y="325" width="0.1599%" height="15" fill="rgb(250,49,8)" fg:x="828" fg:w="2"/><text x="66.4371%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2670%" y="309" width="0.0799%" height="15" fill="rgb(207,26,8)" fg:x="829" fg:w="1"/><text x="66.5170%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="66.0272%" y="357" width="0.3997%" height="15" fill="rgb(224,2,13)" fg:x="826" fg:w="5"/><text x="66.2772%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="66.1071%" y="341" width="0.3197%" height="15" fill="rgb(219,108,27)" fg:x="827" fg:w="4"/><text x="66.3571%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.3469%" y="325" width="0.0799%" height="15" fill="rgb(240,89,32)" fg:x="830" fg:w="1"/><text x="66.5969%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="66.3469%" y="309" width="0.0799%" height="15" fill="rgb(248,205,3)" fg:x="830" fg:w="1"/><text x="66.5969%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="66.0272%" y="373" width="0.6395%" height="15" fill="rgb(236,197,47)" fg:x="826" fg:w="8"/><text x="66.2772%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="66.4269%" y="357" width="0.2398%" height="15" fill="rgb(244,185,52)" fg:x="831" fg:w="3"/><text x="66.6769%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.5867%" y="341" width="0.0799%" height="15" fill="rgb(210,206,23)" fg:x="833" fg:w="1"/><text x="66.8367%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.5867%" y="325" width="0.0799%" height="15" fill="rgb(251,177,30)" fg:x="833" fg:w="1"/><text x="66.8367%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.5867%" y="309" width="0.0799%" height="15" fill="rgb(243,27,45)" fg:x="833" fg:w="1"/><text x="66.8367%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5867%" y="293" width="0.0799%" height="15" fill="rgb(248,141,51)" fg:x="833" fg:w="1"/><text x="66.8367%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="66.0272%" y="405" width="0.7994%" height="15" fill="rgb(235,102,15)" fg:x="826" fg:w="10"/><text x="66.2772%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="66.0272%" y="389" width="0.7994%" height="15" fill="rgb(214,164,53)" fg:x="826" fg:w="10"/><text x="66.2772%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="66.6667%" y="373" width="0.1599%" height="15" fill="rgb(228,18,51)" fg:x="834" fg:w="2"/><text x="66.9167%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="66.6667%" y="357" width="0.1599%" height="15" fill="rgb(205,211,11)" fg:x="834" fg:w="2"/><text x="66.9167%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (110 samples, 8.79%)</title><rect x="58.1135%" y="533" width="8.7930%" height="15" fill="rgb(208,63,6)" fg:x="727" fg:w="110"/><text x="58.3635%" y="543.50">engine::sess..</text></g><g><title>engine::session::internal::Entities::add_persisted (41 samples, 3.28%)</title><rect x="63.6291%" y="517" width="3.2774%" height="15" fill="rgb(245,76,14)" fg:x="796" fg:w="41"/><text x="63.8791%" y="527.50">eng..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (13 samples, 1.04%)</title><rect x="65.8673%" y="501" width="1.0392%" height="15" fill="rgb(234,176,34)" fg:x="824" fg:w="13"/><text x="66.1173%" y="511.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.04%)</title><rect x="65.8673%" y="485" width="1.0392%" height="15" fill="rgb(243,156,42)" fg:x="824" fg:w="13"/><text x="66.1173%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="65.8673%" y="469" width="1.0392%" height="15" fill="rgb(237,182,10)" fg:x="824" fg:w="13"/><text x="66.1173%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="65.8673%" y="453" width="1.0392%" height="15" fill="rgb(244,117,0)" fg:x="824" fg:w="13"/><text x="66.1173%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="66.0272%" y="437" width="0.8793%" height="15" fill="rgb(239,91,50)" fg:x="826" fg:w="11"/><text x="66.2772%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="66.0272%" y="421" width="0.8793%" height="15" fill="rgb(206,38,9)" fg:x="826" fg:w="11"/><text x="66.2772%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8265%" y="405" width="0.0799%" height="15" fill="rgb(205,25,10)" fg:x="836" fg:w="1"/><text x="67.0765%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8265%" y="389" width="0.0799%" height="15" fill="rgb(206,224,7)" fg:x="836" fg:w="1"/><text x="67.0765%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.8265%" y="373" width="0.0799%" height="15" fill="rgb(227,157,10)" fg:x="836" fg:w="1"/><text x="67.0765%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0663%" y="245" width="0.0799%" height="15" fill="rgb(214,157,37)" fg:x="839" fg:w="1"/><text x="67.3163%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.9864%" y="501" width="0.2398%" height="15" fill="rgb(209,180,35)" fg:x="838" fg:w="3"/><text x="67.2364%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0663%" y="485" width="0.1599%" height="15" fill="rgb(216,174,49)" fg:x="839" fg:w="2"/><text x="67.3163%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0663%" y="469" width="0.1599%" height="15" fill="rgb(205,96,20)" fg:x="839" fg:w="2"/><text x="67.3163%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.0663%" y="453" width="0.1599%" height="15" fill="rgb(214,220,39)" fg:x="839" fg:w="2"/><text x="67.3163%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.0663%" y="437" width="0.1599%" height="15" fill="rgb(245,126,30)" fg:x="839" fg:w="2"/><text x="67.3163%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.0663%" y="421" width="0.1599%" height="15" fill="rgb(215,88,33)" fg:x="839" fg:w="2"/><text x="67.3163%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.0663%" y="405" width="0.1599%" height="15" fill="rgb(210,1,49)" fg:x="839" fg:w="2"/><text x="67.3163%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="67.0663%" y="389" width="0.1599%" height="15" fill="rgb(207,133,3)" fg:x="839" fg:w="2"/><text x="67.3163%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="67.0663%" y="373" width="0.1599%" height="15" fill="rgb(231,47,43)" fg:x="839" fg:w="2"/><text x="67.3163%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="67.0663%" y="357" width="0.1599%" height="15" fill="rgb(245,64,1)" fg:x="839" fg:w="2"/><text x="67.3163%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.0663%" y="341" width="0.1599%" height="15" fill="rgb(253,145,20)" fg:x="839" fg:w="2"/><text x="67.3163%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.0663%" y="325" width="0.1599%" height="15" fill="rgb(211,39,18)" fg:x="839" fg:w="2"/><text x="67.3163%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="67.0663%" y="309" width="0.1599%" height="15" fill="rgb(223,225,18)" fg:x="839" fg:w="2"/><text x="67.3163%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="67.0663%" y="293" width="0.1599%" height="15" fill="rgb(210,202,44)" fg:x="839" fg:w="2"/><text x="67.3163%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="67.0663%" y="277" width="0.1599%" height="15" fill="rgb(231,138,36)" fg:x="839" fg:w="2"/><text x="67.3163%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="67.0663%" y="261" width="0.1599%" height="15" fill="rgb(237,115,25)" fg:x="839" fg:w="2"/><text x="67.3163%" y="271.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="67.1463%" y="245" width="0.0799%" height="15" fill="rgb(215,53,48)" fg:x="840" fg:w="1"/><text x="67.3963%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.2262%" y="453" width="0.0799%" height="15" fill="rgb(243,193,24)" fg:x="841" fg:w="1"/><text x="67.4762%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.2262%" y="437" width="0.0799%" height="15" fill="rgb(210,106,28)" fg:x="841" fg:w="1"/><text x="67.4762%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.2262%" y="421" width="0.0799%" height="15" fill="rgb(249,192,0)" fg:x="841" fg:w="1"/><text x="67.4762%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.2262%" y="405" width="0.0799%" height="15" fill="rgb(224,96,21)" fg:x="841" fg:w="1"/><text x="67.4762%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.3062%" y="421" width="0.0799%" height="15" fill="rgb(243,160,19)" fg:x="842" fg:w="1"/><text x="67.5562%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.4660%" y="405" width="0.2398%" height="15" fill="rgb(219,205,50)" fg:x="844" fg:w="3"/><text x="67.7160%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.5460%" y="389" width="0.1599%" height="15" fill="rgb(218,175,44)" fg:x="845" fg:w="2"/><text x="67.7960%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.5460%" y="373" width="0.1599%" height="15" fill="rgb(251,84,47)" fg:x="845" fg:w="2"/><text x="67.7960%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8657%" y="357" width="0.0799%" height="15" fill="rgb(241,14,16)" fg:x="849" fg:w="1"/><text x="68.1157%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8657%" y="341" width="0.0799%" height="15" fill="rgb(207,142,28)" fg:x="849" fg:w="1"/><text x="68.1157%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8657%" y="325" width="0.0799%" height="15" fill="rgb(208,116,22)" fg:x="849" fg:w="1"/><text x="68.1157%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8657%" y="309" width="0.0799%" height="15" fill="rgb(210,0,43)" fg:x="849" fg:w="1"/><text x="68.1157%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8657%" y="293" width="0.0799%" height="15" fill="rgb(246,33,21)" fg:x="849" fg:w="1"/><text x="68.1157%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8657%" y="277" width="0.0799%" height="15" fill="rgb(208,158,54)" fg:x="849" fg:w="1"/><text x="68.1157%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.8657%" y="261" width="0.0799%" height="15" fill="rgb(218,99,29)" fg:x="849" fg:w="1"/><text x="68.1157%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.8657%" y="245" width="0.0799%" height="15" fill="rgb(226,29,7)" fg:x="849" fg:w="1"/><text x="68.1157%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.9456%" y="357" width="0.0799%" height="15" fill="rgb(206,178,46)" fg:x="850" fg:w="1"/><text x="68.1956%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.9456%" y="341" width="0.0799%" height="15" fill="rgb(205,169,32)" fg:x="850" fg:w="1"/><text x="68.1956%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="67.9456%" y="325" width="0.0799%" height="15" fill="rgb(217,4,13)" fg:x="850" fg:w="1"/><text x="68.1956%" y="335.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="67.9456%" y="309" width="0.0799%" height="15" fill="rgb(210,140,37)" fg:x="850" fg:w="1"/><text x="68.1956%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9456%" y="293" width="0.0799%" height="15" fill="rgb(229,80,10)" fg:x="850" fg:w="1"/><text x="68.1956%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.0256%" y="357" width="0.0799%" height="15" fill="rgb(212,175,34)" fg:x="851" fg:w="1"/><text x="68.2756%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.88%)</title><rect x="67.3062%" y="437" width="0.8793%" height="15" fill="rgb(216,207,24)" fg:x="842" fg:w="11"/><text x="67.5562%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.80%)</title><rect x="67.3861%" y="421" width="0.7994%" height="15" fill="rgb(234,163,3)" fg:x="843" fg:w="10"/><text x="67.6361%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="67.7058%" y="405" width="0.4796%" height="15" fill="rgb(248,101,16)" fg:x="847" fg:w="6"/><text x="67.9558%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="67.7058%" y="389" width="0.4796%" height="15" fill="rgb(209,152,54)" fg:x="847" fg:w="6"/><text x="67.9558%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="67.7858%" y="373" width="0.3997%" height="15" fill="rgb(229,124,51)" fg:x="848" fg:w="5"/><text x="68.0358%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.1055%" y="357" width="0.0799%" height="15" fill="rgb(219,83,18)" fg:x="852" fg:w="1"/><text x="68.3555%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.1055%" y="341" width="0.0799%" height="15" fill="rgb(206,29,38)" fg:x="852" fg:w="1"/><text x="68.3555%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="67.3062%" y="453" width="0.9592%" height="15" fill="rgb(245,123,23)" fg:x="842" fg:w="12"/><text x="67.5562%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;core::iter::adapters::flatten::Flatten&lt;core::iter::adapters::map::Map&lt;serde_json::map::Iter,kernel::model::entity_ref::find_entity_refs::{{closure}}&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="68.1855%" y="437" width="0.0799%" height="15" fill="rgb(238,50,33)" fg:x="853" fg:w="1"/><text x="68.4355%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.2654%" y="421" width="0.0799%" height="15" fill="rgb(234,165,23)" fg:x="854" fg:w="1"/><text x="68.5154%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="67.2262%" y="501" width="1.2790%" height="15" fill="rgb(211,82,31)" fg:x="841" fg:w="16"/><text x="67.4762%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.28%)</title><rect x="67.2262%" y="485" width="1.2790%" height="15" fill="rgb(224,166,46)" fg:x="841" fg:w="16"/><text x="67.4762%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (16 samples, 1.28%)</title><rect x="67.2262%" y="469" width="1.2790%" height="15" fill="rgb(211,13,8)" fg:x="841" fg:w="16"/><text x="67.4762%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.2654%" y="453" width="0.2398%" height="15" fill="rgb(212,7,42)" fg:x="854" fg:w="3"/><text x="68.5154%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.2654%" y="437" width="0.2398%" height="15" fill="rgb(249,102,19)" fg:x="854" fg:w="3"/><text x="68.5154%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.3453%" y="421" width="0.1599%" height="15" fill="rgb(225,41,13)" fg:x="855" fg:w="2"/><text x="68.5953%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.4253%" y="405" width="0.0799%" height="15" fill="rgb(220,65,27)" fg:x="856" fg:w="1"/><text x="68.6753%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="68.5052%" y="469" width="0.1599%" height="15" fill="rgb(206,4,41)" fg:x="857" fg:w="2"/><text x="68.7552%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.5052%" y="453" width="0.1599%" height="15" fill="rgb(219,60,39)" fg:x="857" fg:w="2"/><text x="68.7552%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.5052%" y="437" width="0.1599%" height="15" fill="rgb(226,4,38)" fg:x="857" fg:w="2"/><text x="68.7552%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.5052%" y="421" width="0.1599%" height="15" fill="rgb(250,52,3)" fg:x="857" fg:w="2"/><text x="68.7552%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="68.5052%" y="405" width="0.1599%" height="15" fill="rgb(234,93,0)" fg:x="857" fg:w="2"/><text x="68.7552%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5851%" y="389" width="0.0799%" height="15" fill="rgb(251,47,47)" fg:x="858" fg:w="1"/><text x="68.8351%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.6651%" y="469" width="0.0799%" height="15" fill="rgb(205,166,47)" fg:x="859" fg:w="1"/><text x="68.9151%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.6651%" y="453" width="0.0799%" height="15" fill="rgb(231,148,8)" fg:x="859" fg:w="1"/><text x="68.9151%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.6651%" y="437" width="0.0799%" height="15" fill="rgb(244,185,19)" fg:x="859" fg:w="1"/><text x="68.9151%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.7450%" y="357" width="0.0799%" height="15" fill="rgb(224,201,45)" fg:x="860" fg:w="1"/><text x="68.9950%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.7450%" y="341" width="0.0799%" height="15" fill="rgb(240,77,39)" fg:x="860" fg:w="1"/><text x="68.9950%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="68.7450%" y="325" width="0.0799%" height="15" fill="rgb(248,211,29)" fg:x="860" fg:w="1"/><text x="68.9950%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="68.7450%" y="309" width="0.0799%" height="15" fill="rgb(232,214,46)" fg:x="860" fg:w="1"/><text x="68.9950%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="68.7450%" y="293" width="0.0799%" height="15" fill="rgb(213,99,54)" fg:x="860" fg:w="1"/><text x="68.9950%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="68.7450%" y="277" width="0.0799%" height="15" fill="rgb(240,19,46)" fg:x="860" fg:w="1"/><text x="68.9950%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.7450%" y="261" width="0.0799%" height="15" fill="rgb(243,89,10)" fg:x="860" fg:w="1"/><text x="68.9950%" y="271.50"></text></g><g><title>engine::session::internal::Added::find_refs (25 samples, 2.00%)</title><rect x="66.9065%" y="533" width="1.9984%" height="15" fill="rgb(249,28,32)" fg:x="837" fg:w="25"/><text x="67.1565%" y="543.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (25 samples, 2.00%)</title><rect x="66.9065%" y="517" width="1.9984%" height="15" fill="rgb(253,30,9)" fg:x="837" fg:w="25"/><text x="67.1565%" y="527.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="68.5052%" y="501" width="0.3997%" height="15" fill="rgb(217,2,26)" fg:x="857" fg:w="5"/><text x="68.7552%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="68.5052%" y="485" width="0.3997%" height="15" fill="rgb(220,28,10)" fg:x="857" fg:w="5"/><text x="68.7552%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="68.7450%" y="469" width="0.1599%" height="15" fill="rgb(228,167,49)" fg:x="860" fg:w="2"/><text x="68.9950%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="68.7450%" y="453" width="0.1599%" height="15" fill="rgb(238,212,3)" fg:x="860" fg:w="2"/><text x="68.9950%" y="463.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="68.7450%" y="437" width="0.1599%" height="15" fill="rgb(229,134,44)" fg:x="860" fg:w="2"/><text x="68.9950%" y="447.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="68.7450%" y="421" width="0.1599%" height="15" fill="rgb(208,71,4)" fg:x="860" fg:w="2"/><text x="68.9950%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="68.7450%" y="405" width="0.1599%" height="15" fill="rgb(221,205,45)" fg:x="860" fg:w="2"/><text x="68.9950%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="68.7450%" y="389" width="0.1599%" height="15" fill="rgb(215,132,38)" fg:x="860" fg:w="2"/><text x="68.9950%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="68.7450%" y="373" width="0.1599%" height="15" fill="rgb(227,158,6)" fg:x="860" fg:w="2"/><text x="68.9950%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="68.8249%" y="357" width="0.0799%" height="15" fill="rgb(250,10,38)" fg:x="861" fg:w="1"/><text x="69.0749%" y="367.50"></text></g><g><title>&lt;serde::de::Unexpected as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="68.8249%" y="341" width="0.0799%" height="15" fill="rgb(225,171,40)" fg:x="861" fg:w="1"/><text x="69.0749%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.9848%" y="469" width="0.0799%" height="15" fill="rgb(238,17,43)" fg:x="863" fg:w="1"/><text x="69.2348%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.9848%" y="453" width="0.0799%" height="15" fill="rgb(208,145,4)" fg:x="863" fg:w="1"/><text x="69.2348%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.9848%" y="437" width="0.0799%" height="15" fill="rgb(232,82,7)" fg:x="863" fg:w="1"/><text x="69.2348%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.9848%" y="421" width="0.0799%" height="15" fill="rgb(205,166,38)" fg:x="863" fg:w="1"/><text x="69.2348%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.9848%" y="405" width="0.0799%" height="15" fill="rgb(240,228,4)" fg:x="863" fg:w="1"/><text x="69.2348%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.9848%" y="389" width="0.0799%" height="15" fill="rgb(233,121,40)" fg:x="863" fg:w="1"/><text x="69.2348%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.9848%" y="373" width="0.0799%" height="15" fill="rgb(243,84,30)" fg:x="863" fg:w="1"/><text x="69.2348%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.9848%" y="357" width="0.0799%" height="15" fill="rgb(235,81,48)" fg:x="863" fg:w="1"/><text x="69.2348%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.9848%" y="341" width="0.0799%" height="15" fill="rgb(218,137,0)" fg:x="863" fg:w="1"/><text x="69.2348%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.9848%" y="325" width="0.0799%" height="15" fill="rgb(223,151,48)" fg:x="863" fg:w="1"/><text x="69.2348%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.9848%" y="309" width="0.0799%" height="15" fill="rgb(247,30,19)" fg:x="863" fg:w="1"/><text x="69.2348%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.9848%" y="293" width="0.0799%" height="15" fill="rgb(205,129,29)" fg:x="863" fg:w="1"/><text x="69.2348%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.9848%" y="277" width="0.0799%" height="15" fill="rgb(222,29,2)" fg:x="863" fg:w="1"/><text x="69.2348%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.9848%" y="501" width="0.2398%" height="15" fill="rgb(232,145,33)" fg:x="863" fg:w="3"/><text x="69.2348%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.9848%" y="485" width="0.2398%" height="15" fill="rgb(217,30,31)" fg:x="863" fg:w="3"/><text x="69.2348%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.0647%" y="469" width="0.1599%" height="15" fill="rgb(243,22,52)" fg:x="864" fg:w="2"/><text x="69.3147%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.0647%" y="453" width="0.1599%" height="15" fill="rgb(254,228,14)" fg:x="864" fg:w="2"/><text x="69.3147%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.0647%" y="437" width="0.1599%" height="15" fill="rgb(231,45,50)" fg:x="864" fg:w="2"/><text x="69.3147%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.0647%" y="421" width="0.1599%" height="15" fill="rgb(248,125,3)" fg:x="864" fg:w="2"/><text x="69.3147%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="69.0647%" y="405" width="0.1599%" height="15" fill="rgb(213,76,9)" fg:x="864" fg:w="2"/><text x="69.3147%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="69.0647%" y="389" width="0.1599%" height="15" fill="rgb(238,108,21)" fg:x="864" fg:w="2"/><text x="69.3147%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="69.0647%" y="373" width="0.1599%" height="15" fill="rgb(229,214,19)" fg:x="864" fg:w="2"/><text x="69.3147%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.0647%" y="357" width="0.1599%" height="15" fill="rgb(252,201,5)" fg:x="864" fg:w="2"/><text x="69.3147%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.0647%" y="341" width="0.1599%" height="15" fill="rgb(233,165,49)" fg:x="864" fg:w="2"/><text x="69.3147%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="69.0647%" y="325" width="0.1599%" height="15" fill="rgb(208,165,19)" fg:x="864" fg:w="2"/><text x="69.3147%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="69.0647%" y="309" width="0.1599%" height="15" fill="rgb(216,220,31)" fg:x="864" fg:w="2"/><text x="69.3147%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="69.0647%" y="293" width="0.1599%" height="15" fill="rgb(214,8,31)" fg:x="864" fg:w="2"/><text x="69.3147%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="69.0647%" y="277" width="0.1599%" height="15" fill="rgb(220,32,32)" fg:x="864" fg:w="2"/><text x="69.3147%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.0647%" y="261" width="0.1599%" height="15" fill="rgb(237,172,34)" fg:x="864" fg:w="2"/><text x="69.3147%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="68.9049%" y="517" width="0.4796%" height="15" fill="rgb(240,209,5)" fg:x="862" fg:w="6"/><text x="69.1549%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.2246%" y="501" width="0.1599%" height="15" fill="rgb(221,219,1)" fg:x="866" fg:w="2"/><text x="69.4746%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.2246%" y="485" width="0.1599%" height="15" fill="rgb(237,90,36)" fg:x="866" fg:w="2"/><text x="69.4746%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="69.2246%" y="469" width="0.1599%" height="15" fill="rgb(245,14,51)" fg:x="866" fg:w="2"/><text x="69.4746%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="69.2246%" y="453" width="0.1599%" height="15" fill="rgb(211,71,49)" fg:x="866" fg:w="2"/><text x="69.4746%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="69.2246%" y="437" width="0.1599%" height="15" fill="rgb(230,223,9)" fg:x="866" fg:w="2"/><text x="69.4746%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.2246%" y="421" width="0.1599%" height="15" fill="rgb(212,33,31)" fg:x="866" fg:w="2"/><text x="69.4746%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.2246%" y="405" width="0.1599%" height="15" fill="rgb(218,141,5)" fg:x="866" fg:w="2"/><text x="69.4746%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="69.2246%" y="389" width="0.1599%" height="15" fill="rgb(239,194,8)" fg:x="866" fg:w="2"/><text x="69.4746%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="69.2246%" y="373" width="0.1599%" height="15" fill="rgb(225,119,29)" fg:x="866" fg:w="2"/><text x="69.4746%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="69.2246%" y="357" width="0.1599%" height="15" fill="rgb(233,32,3)" fg:x="866" fg:w="2"/><text x="69.4746%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="69.2246%" y="341" width="0.1599%" height="15" fill="rgb(248,126,40)" fg:x="866" fg:w="2"/><text x="69.4746%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.2246%" y="325" width="0.1599%" height="15" fill="rgb(213,102,53)" fg:x="866" fg:w="2"/><text x="69.4746%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="69.3845%" y="517" width="0.0799%" height="15" fill="rgb(212,69,15)" fg:x="868" fg:w="1"/><text x="69.6345%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.3845%" y="501" width="0.0799%" height="15" fill="rgb(253,39,34)" fg:x="868" fg:w="1"/><text x="69.6345%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3845%" y="485" width="0.0799%" height="15" fill="rgb(205,189,54)" fg:x="868" fg:w="1"/><text x="69.6345%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3845%" y="469" width="0.0799%" height="15" fill="rgb(234,229,45)" fg:x="868" fg:w="1"/><text x="69.6345%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.5444%" y="421" width="0.0799%" height="15" fill="rgb(243,79,48)" fg:x="870" fg:w="1"/><text x="69.7944%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.5444%" y="405" width="0.0799%" height="15" fill="rgb(206,71,50)" fg:x="870" fg:w="1"/><text x="69.7944%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="69.5444%" y="389" width="0.0799%" height="15" fill="rgb(209,32,17)" fg:x="870" fg:w="1"/><text x="69.7944%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="69.5444%" y="373" width="0.0799%" height="15" fill="rgb(219,229,6)" fg:x="870" fg:w="1"/><text x="69.7944%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="69.4644%" y="517" width="0.2398%" height="15" fill="rgb(226,25,27)" fg:x="869" fg:w="3"/><text x="69.7144%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="69.4644%" y="501" width="0.2398%" height="15" fill="rgb(218,185,23)" fg:x="869" fg:w="3"/><text x="69.7144%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.4644%" y="485" width="0.2398%" height="15" fill="rgb(242,123,5)" fg:x="869" fg:w="3"/><text x="69.7144%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.5444%" y="469" width="0.1599%" height="15" fill="rgb(215,53,19)" fg:x="870" fg:w="2"/><text x="69.7944%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.5444%" y="453" width="0.1599%" height="15" fill="rgb(233,20,30)" fg:x="870" fg:w="2"/><text x="69.7944%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.5444%" y="437" width="0.1599%" height="15" fill="rgb(209,67,20)" fg:x="870" fg:w="2"/><text x="69.7944%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.6243%" y="421" width="0.0799%" height="15" fill="rgb(227,181,50)" fg:x="871" fg:w="1"/><text x="69.8743%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.6243%" y="405" width="0.0799%" height="15" fill="rgb(252,75,38)" fg:x="871" fg:w="1"/><text x="69.8743%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.6243%" y="389" width="0.0799%" height="15" fill="rgb(235,9,33)" fg:x="871" fg:w="1"/><text x="69.8743%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.7042%" y="373" width="0.0799%" height="15" fill="rgb(208,87,30)" fg:x="872" fg:w="1"/><text x="69.9542%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.7042%" y="357" width="0.0799%" height="15" fill="rgb(215,199,39)" fg:x="872" fg:w="1"/><text x="69.9542%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7042%" y="341" width="0.0799%" height="15" fill="rgb(246,208,12)" fg:x="872" fg:w="1"/><text x="69.9542%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7042%" y="325" width="0.0799%" height="15" fill="rgb(206,195,10)" fg:x="872" fg:w="1"/><text x="69.9542%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7042%" y="309" width="0.0799%" height="15" fill="rgb(244,1,30)" fg:x="872" fg:w="1"/><text x="69.9542%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.96%)</title><rect x="68.9049%" y="533" width="0.9592%" height="15" fill="rgb(230,83,5)" fg:x="862" fg:w="12"/><text x="69.1549%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="69.7042%" y="517" width="0.1599%" height="15" fill="rgb(239,62,17)" fg:x="872" fg:w="2"/><text x="69.9542%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="69.7042%" y="501" width="0.1599%" height="15" fill="rgb(252,193,41)" fg:x="872" fg:w="2"/><text x="69.9542%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.7042%" y="485" width="0.1599%" height="15" fill="rgb(216,142,19)" fg:x="872" fg:w="2"/><text x="69.9542%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.7042%" y="469" width="0.1599%" height="15" fill="rgb(240,81,38)" fg:x="872" fg:w="2"/><text x="69.9542%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.7042%" y="453" width="0.1599%" height="15" fill="rgb(240,109,40)" fg:x="872" fg:w="2"/><text x="69.9542%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.7042%" y="437" width="0.1599%" height="15" fill="rgb(230,123,10)" fg:x="872" fg:w="2"/><text x="69.9542%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.7042%" y="421" width="0.1599%" height="15" fill="rgb(253,42,32)" fg:x="872" fg:w="2"/><text x="69.9542%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.7042%" y="405" width="0.1599%" height="15" fill="rgb(218,154,8)" fg:x="872" fg:w="2"/><text x="69.9542%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.7042%" y="389" width="0.1599%" height="15" fill="rgb(216,197,10)" fg:x="872" fg:w="2"/><text x="69.9542%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.7842%" y="373" width="0.0799%" height="15" fill="rgb(223,107,12)" fg:x="873" fg:w="1"/><text x="70.0342%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.7842%" y="357" width="0.0799%" height="15" fill="rgb(241,174,42)" fg:x="873" fg:w="1"/><text x="70.0342%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (148 samples, 11.83%)</title><rect x="58.1135%" y="549" width="11.8305%" height="15" fill="rgb(231,78,20)" fg:x="727" fg:w="148"/><text x="58.3635%" y="559.50">engine::session::S..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="69.8641%" y="533" width="0.0799%" height="15" fill="rgb(230,208,49)" fg:x="874" fg:w="1"/><text x="70.1141%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.8641%" y="517" width="0.0799%" height="15" fill="rgb(238,11,34)" fg:x="874" fg:w="1"/><text x="70.1141%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.0240%" y="533" width="0.0799%" height="15" fill="rgb(210,130,26)" fg:x="876" fg:w="1"/><text x="70.2740%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1039%" y="533" width="0.0799%" height="15" fill="rgb(242,131,11)" fg:x="877" fg:w="1"/><text x="70.3539%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2638%" y="501" width="0.0799%" height="15" fill="rgb(237,38,28)" fg:x="879" fg:w="1"/><text x="70.5138%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2638%" y="485" width="0.0799%" height="15" fill="rgb(244,180,43)" fg:x="879" fg:w="1"/><text x="70.5138%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2638%" y="469" width="0.0799%" height="15" fill="rgb(214,171,19)" fg:x="879" fg:w="1"/><text x="70.5138%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2638%" y="453" width="0.0799%" height="15" fill="rgb(252,101,45)" fg:x="879" fg:w="1"/><text x="70.5138%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2638%" y="437" width="0.0799%" height="15" fill="rgb(211,96,33)" fg:x="879" fg:w="1"/><text x="70.5138%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.2638%" y="421" width="0.0799%" height="15" fill="rgb(207,80,25)" fg:x="879" fg:w="1"/><text x="70.5138%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.2638%" y="405" width="0.0799%" height="15" fill="rgb(225,15,35)" fg:x="879" fg:w="1"/><text x="70.5138%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.2638%" y="389" width="0.0799%" height="15" fill="rgb(214,93,43)" fg:x="879" fg:w="1"/><text x="70.5138%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2638%" y="373" width="0.0799%" height="15" fill="rgb(248,42,37)" fg:x="879" fg:w="1"/><text x="70.5138%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2638%" y="357" width="0.0799%" height="15" fill="rgb(217,135,32)" fg:x="879" fg:w="1"/><text x="70.5138%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.2638%" y="341" width="0.0799%" height="15" fill="rgb(216,74,28)" fg:x="879" fg:w="1"/><text x="70.5138%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.2638%" y="325" width="0.0799%" height="15" fill="rgb(247,108,16)" fg:x="879" fg:w="1"/><text x="70.5138%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.2638%" y="309" width="0.0799%" height="15" fill="rgb(205,219,30)" fg:x="879" fg:w="1"/><text x="70.5138%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.2638%" y="293" width="0.0799%" height="15" fill="rgb(241,122,9)" fg:x="879" fg:w="1"/><text x="70.5138%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2638%" y="277" width="0.0799%" height="15" fill="rgb(216,148,50)" fg:x="879" fg:w="1"/><text x="70.5138%" y="287.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.3437%" y="469" width="0.0799%" height="15" fill="rgb(226,154,2)" fg:x="880" fg:w="1"/><text x="70.5937%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3437%" y="453" width="0.0799%" height="15" fill="rgb(220,128,1)" fg:x="880" fg:w="1"/><text x="70.5937%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.3437%" y="437" width="0.0799%" height="15" fill="rgb(245,185,29)" fg:x="880" fg:w="1"/><text x="70.5937%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.3437%" y="421" width="0.0799%" height="15" fill="rgb(243,161,2)" fg:x="880" fg:w="1"/><text x="70.5937%" y="431.50"></text></g><g><title>engine::users::model::username_to_key (7 samples, 0.56%)</title><rect x="69.9440%" y="549" width="0.5596%" height="15" fill="rgb(249,215,17)" fg:x="875" fg:w="7"/><text x="70.1940%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="70.1839%" y="533" width="0.3197%" height="15" fill="rgb(237,67,11)" fg:x="878" fg:w="4"/><text x="70.4339%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="70.1839%" y="517" width="0.3197%" height="15" fill="rgb(239,17,24)" fg:x="878" fg:w="4"/><text x="70.4339%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.3437%" y="501" width="0.1599%" height="15" fill="rgb(215,97,29)" fg:x="880" fg:w="2"/><text x="70.5937%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.3437%" y="485" width="0.1599%" height="15" fill="rgb(253,228,42)" fg:x="880" fg:w="2"/><text x="70.5937%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="70.4237%" y="469" width="0.0799%" height="15" fill="rgb(240,85,2)" fg:x="881" fg:w="1"/><text x="70.6737%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="70.5036%" y="517" width="0.0799%" height="15" fill="rgb(214,155,4)" fg:x="882" fg:w="1"/><text x="70.7536%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="70.5036%" y="533" width="0.2398%" height="15" fill="rgb(247,120,22)" fg:x="882" fg:w="3"/><text x="70.7536%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.5835%" y="517" width="0.1599%" height="15" fill="rgb(211,208,6)" fg:x="883" fg:w="2"/><text x="70.8335%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.5835%" y="501" width="0.1599%" height="15" fill="rgb(235,99,41)" fg:x="883" fg:w="2"/><text x="70.8335%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.5835%" y="485" width="0.1599%" height="15" fill="rgb(223,28,8)" fg:x="883" fg:w="2"/><text x="70.8335%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="70.5835%" y="469" width="0.1599%" height="15" fill="rgb(212,71,20)" fg:x="883" fg:w="2"/><text x="70.8335%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.5835%" y="453" width="0.1599%" height="15" fill="rgb(206,85,3)" fg:x="883" fg:w="2"/><text x="70.8335%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.6635%" y="437" width="0.0799%" height="15" fill="rgb(244,180,11)" fg:x="884" fg:w="1"/><text x="70.9135%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6635%" y="421" width="0.0799%" height="15" fill="rgb(223,16,21)" fg:x="884" fg:w="1"/><text x="70.9135%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="70.6635%" y="405" width="0.0799%" height="15" fill="rgb(238,85,42)" fg:x="884" fg:w="1"/><text x="70.9135%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="70.5036%" y="549" width="0.3997%" height="15" fill="rgb(205,85,8)" fg:x="882" fg:w="5"/><text x="70.7536%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="70.7434%" y="533" width="0.1599%" height="15" fill="rgb(217,190,15)" fg:x="885" fg:w="2"/><text x="70.9934%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.7434%" y="517" width="0.1599%" height="15" fill="rgb(243,192,23)" fg:x="885" fg:w="2"/><text x="70.9934%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.7434%" y="501" width="0.1599%" height="15" fill="rgb(223,220,37)" fg:x="885" fg:w="2"/><text x="70.9934%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.7434%" y="485" width="0.1599%" height="15" fill="rgb(208,41,17)" fg:x="885" fg:w="2"/><text x="70.9934%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="70.7434%" y="469" width="0.1599%" height="15" fill="rgb(224,188,7)" fg:x="885" fg:w="2"/><text x="70.9934%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.7434%" y="453" width="0.1599%" height="15" fill="rgb(236,16,50)" fg:x="885" fg:w="2"/><text x="70.9934%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8233%" y="437" width="0.0799%" height="15" fill="rgb(238,6,24)" fg:x="886" fg:w="1"/><text x="71.0733%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.8233%" y="421" width="0.0799%" height="15" fill="rgb(253,67,45)" fg:x="886" fg:w="1"/><text x="71.0733%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="70.9033%" y="517" width="0.0799%" height="15" fill="rgb(210,89,32)" fg:x="887" fg:w="1"/><text x="71.1533%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.9832%" y="469" width="0.1599%" height="15" fill="rgb(208,89,9)" fg:x="888" fg:w="2"/><text x="71.2332%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.9832%" y="453" width="0.1599%" height="15" fill="rgb(222,180,44)" fg:x="888" fg:w="2"/><text x="71.2332%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.9832%" y="437" width="0.1599%" height="15" fill="rgb(250,181,46)" fg:x="888" fg:w="2"/><text x="71.2332%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="70.9832%" y="421" width="0.1599%" height="15" fill="rgb(210,190,26)" fg:x="888" fg:w="2"/><text x="71.2332%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="70.9832%" y="405" width="0.1599%" height="15" fill="rgb(253,49,13)" fg:x="888" fg:w="2"/><text x="71.2332%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="70.9832%" y="389" width="0.1599%" height="15" fill="rgb(240,184,42)" fg:x="888" fg:w="2"/><text x="71.2332%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.9832%" y="373" width="0.1599%" height="15" fill="rgb(246,59,37)" fg:x="888" fg:w="2"/><text x="71.2332%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.9832%" y="357" width="0.1599%" height="15" fill="rgb(207,134,54)" fg:x="888" fg:w="2"/><text x="71.2332%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="70.9832%" y="341" width="0.1599%" height="15" fill="rgb(250,122,24)" fg:x="888" fg:w="2"/><text x="71.2332%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="70.9832%" y="325" width="0.1599%" height="15" fill="rgb(239,206,3)" fg:x="888" fg:w="2"/><text x="71.2332%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="70.9832%" y="309" width="0.1599%" height="15" fill="rgb(253,220,32)" fg:x="888" fg:w="2"/><text x="71.2332%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="70.9832%" y="293" width="0.1599%" height="15" fill="rgb(209,217,48)" fg:x="888" fg:w="2"/><text x="71.2332%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.9832%" y="277" width="0.1599%" height="15" fill="rgb(242,91,39)" fg:x="888" fg:w="2"/><text x="71.2332%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="70.9832%" y="501" width="0.2398%" height="15" fill="rgb(228,4,13)" fg:x="888" fg:w="3"/><text x="71.2332%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="70.9832%" y="485" width="0.2398%" height="15" fill="rgb(223,133,4)" fg:x="888" fg:w="3"/><text x="71.2332%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.1431%" y="469" width="0.0799%" height="15" fill="rgb(215,105,30)" fg:x="890" fg:w="1"/><text x="71.3931%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.1431%" y="453" width="0.0799%" height="15" fill="rgb(230,9,4)" fg:x="890" fg:w="1"/><text x="71.3931%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.1431%" y="437" width="0.0799%" height="15" fill="rgb(248,15,2)" fg:x="890" fg:w="1"/><text x="71.3931%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.1431%" y="421" width="0.0799%" height="15" fill="rgb(208,210,22)" fg:x="890" fg:w="1"/><text x="71.3931%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.1431%" y="405" width="0.0799%" height="15" fill="rgb(208,112,41)" fg:x="890" fg:w="1"/><text x="71.3931%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.1431%" y="389" width="0.0799%" height="15" fill="rgb(232,83,14)" fg:x="890" fg:w="1"/><text x="71.3931%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.1431%" y="373" width="0.0799%" height="15" fill="rgb(229,65,11)" fg:x="890" fg:w="1"/><text x="71.3931%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="71.2230%" y="501" width="0.0799%" height="15" fill="rgb(228,126,24)" fg:x="891" fg:w="1"/><text x="71.4730%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2230%" y="485" width="0.0799%" height="15" fill="rgb(218,66,33)" fg:x="891" fg:w="1"/><text x="71.4730%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="71.3030%" y="501" width="0.0799%" height="15" fill="rgb(251,49,52)" fg:x="892" fg:w="1"/><text x="71.5530%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3030%" y="485" width="0.0799%" height="15" fill="rgb(219,46,37)" fg:x="892" fg:w="1"/><text x="71.5530%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4628%" y="453" width="0.0799%" height="15" fill="rgb(213,53,49)" fg:x="894" fg:w="1"/><text x="71.7128%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.5428%" y="453" width="0.0799%" height="15" fill="rgb(214,134,1)" fg:x="895" fg:w="1"/><text x="71.7928%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.7026%" y="421" width="0.0799%" height="15" fill="rgb(208,139,43)" fg:x="897" fg:w="1"/><text x="71.9526%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7026%" y="405" width="0.0799%" height="15" fill="rgb(231,105,35)" fg:x="897" fg:w="1"/><text x="71.9526%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="71.8625%" y="341" width="0.1599%" height="15" fill="rgb(247,189,9)" fg:x="899" fg:w="2"/><text x="72.1125%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.9424%" y="325" width="0.0799%" height="15" fill="rgb(252,48,51)" fg:x="900" fg:w="1"/><text x="72.1924%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.9424%" y="309" width="0.0799%" height="15" fill="rgb(209,121,1)" fg:x="900" fg:w="1"/><text x="72.1924%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="71.8625%" y="373" width="0.2398%" height="15" fill="rgb(231,40,26)" fg:x="899" fg:w="3"/><text x="72.1125%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.8625%" y="357" width="0.2398%" height="15" fill="rgb(251,8,13)" fg:x="899" fg:w="3"/><text x="72.1125%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="72.0224%" y="341" width="0.0799%" height="15" fill="rgb(231,110,2)" fg:x="901" fg:w="1"/><text x="72.2724%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.0224%" y="325" width="0.0799%" height="15" fill="rgb(216,153,22)" fg:x="901" fg:w="1"/><text x="72.2724%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.0224%" y="309" width="0.0799%" height="15" fill="rgb(249,116,49)" fg:x="901" fg:w="1"/><text x="72.2724%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0224%" y="293" width="0.0799%" height="15" fill="rgb(230,89,2)" fg:x="901" fg:w="1"/><text x="72.2724%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0224%" y="277" width="0.0799%" height="15" fill="rgb(231,125,23)" fg:x="901" fg:w="1"/><text x="72.2724%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="72.0224%" y="261" width="0.0799%" height="15" fill="rgb(212,217,18)" fg:x="901" fg:w="1"/><text x="72.2724%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="72.1023%" y="373" width="0.0799%" height="15" fill="rgb(210,21,33)" fg:x="902" fg:w="1"/><text x="72.3523%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.1023%" y="357" width="0.0799%" height="15" fill="rgb(241,97,9)" fg:x="902" fg:w="1"/><text x="72.3523%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="71.7826%" y="405" width="0.4796%" height="15" fill="rgb(221,35,31)" fg:x="898" fg:w="6"/><text x="72.0326%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="71.8625%" y="389" width="0.3997%" height="15" fill="rgb(251,23,23)" fg:x="899" fg:w="5"/><text x="72.1125%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.1823%" y="373" width="0.0799%" height="15" fill="rgb(227,165,2)" fg:x="903" fg:w="1"/><text x="72.4323%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2622%" y="373" width="0.0799%" height="15" fill="rgb(242,24,2)" fg:x="904" fg:w="1"/><text x="72.5122%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="72.2622%" y="405" width="0.1599%" height="15" fill="rgb(242,138,51)" fg:x="904" fg:w="2"/><text x="72.5122%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="72.2622%" y="389" width="0.1599%" height="15" fill="rgb(220,219,5)" fg:x="904" fg:w="2"/><text x="72.5122%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="72.3421%" y="373" width="0.0799%" height="15" fill="rgb(247,53,29)" fg:x="905" fg:w="1"/><text x="72.5921%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3421%" y="357" width="0.0799%" height="15" fill="rgb(233,43,39)" fg:x="905" fg:w="1"/><text x="72.5921%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.5020%" y="325" width="0.0799%" height="15" fill="rgb(230,128,54)" fg:x="907" fg:w="1"/><text x="72.7520%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.5020%" y="309" width="0.0799%" height="15" fill="rgb(218,20,12)" fg:x="907" fg:w="1"/><text x="72.7520%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.04%)</title><rect x="71.6227%" y="453" width="1.0392%" height="15" fill="rgb(206,51,14)" fg:x="896" fg:w="13"/><text x="71.8727%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="71.6227%" y="437" width="1.0392%" height="15" fill="rgb(223,16,35)" fg:x="896" fg:w="13"/><text x="71.8727%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.88%)</title><rect x="71.7826%" y="421" width="0.8793%" height="15" fill="rgb(226,165,37)" fg:x="898" fg:w="11"/><text x="72.0326%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.4221%" y="405" width="0.2398%" height="15" fill="rgb(240,26,21)" fg:x="906" fg:w="3"/><text x="72.6721%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="72.4221%" y="389" width="0.2398%" height="15" fill="rgb(240,72,46)" fg:x="906" fg:w="3"/><text x="72.6721%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="72.4221%" y="373" width="0.2398%" height="15" fill="rgb(211,33,41)" fg:x="906" fg:w="3"/><text x="72.6721%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.4221%" y="357" width="0.2398%" height="15" fill="rgb(224,157,46)" fg:x="906" fg:w="3"/><text x="72.6721%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.5020%" y="341" width="0.1599%" height="15" fill="rgb(223,59,19)" fg:x="907" fg:w="2"/><text x="72.7520%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="72.5819%" y="325" width="0.0799%" height="15" fill="rgb(239,187,1)" fg:x="908" fg:w="1"/><text x="72.8319%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5819%" y="309" width="0.0799%" height="15" fill="rgb(226,95,9)" fg:x="908" fg:w="1"/><text x="72.8319%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.5819%" y="293" width="0.0799%" height="15" fill="rgb(234,61,54)" fg:x="908" fg:w="1"/><text x="72.8319%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (17 samples, 1.36%)</title><rect x="71.3829%" y="501" width="1.3589%" height="15" fill="rgb(205,209,47)" fg:x="893" fg:w="17"/><text x="71.6329%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.36%)</title><rect x="71.3829%" y="485" width="1.3589%" height="15" fill="rgb(228,7,43)" fg:x="893" fg:w="17"/><text x="71.6329%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.36%)</title><rect x="71.3829%" y="469" width="1.3589%" height="15" fill="rgb(240,217,52)" fg:x="893" fg:w="17"/><text x="71.6329%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.6619%" y="453" width="0.0799%" height="15" fill="rgb(211,178,21)" fg:x="909" fg:w="1"/><text x="72.9119%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.6619%" y="437" width="0.0799%" height="15" fill="rgb(205,25,34)" fg:x="909" fg:w="1"/><text x="72.9119%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="72.7418%" y="405" width="0.1599%" height="15" fill="rgb(209,57,11)" fg:x="910" fg:w="2"/><text x="72.9918%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.8217%" y="389" width="0.0799%" height="15" fill="rgb(221,99,2)" fg:x="911" fg:w="1"/><text x="73.0717%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.8217%" y="373" width="0.0799%" height="15" fill="rgb(232,79,22)" fg:x="911" fg:w="1"/><text x="73.0717%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.8217%" y="357" width="0.0799%" height="15" fill="rgb(221,145,32)" fg:x="911" fg:w="1"/><text x="73.0717%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.8217%" y="341" width="0.0799%" height="15" fill="rgb(236,133,36)" fg:x="911" fg:w="1"/><text x="73.0717%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.9017%" y="405" width="0.0799%" height="15" fill="rgb(208,224,44)" fg:x="912" fg:w="1"/><text x="73.1517%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="72.9017%" y="389" width="0.0799%" height="15" fill="rgb(235,143,15)" fg:x="912" fg:w="1"/><text x="73.1517%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="72.7418%" y="437" width="0.3197%" height="15" fill="rgb(249,83,27)" fg:x="910" fg:w="4"/><text x="72.9918%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="72.7418%" y="421" width="0.3197%" height="15" fill="rgb(238,226,19)" fg:x="910" fg:w="4"/><text x="72.9918%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.9816%" y="405" width="0.0799%" height="15" fill="rgb(226,206,27)" fg:x="913" fg:w="1"/><text x="73.2316%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (28 samples, 2.24%)</title><rect x="70.9033%" y="533" width="2.2382%" height="15" fill="rgb(251,182,9)" fg:x="887" fg:w="28"/><text x="71.1533%" y="543.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.16%)</title><rect x="70.9832%" y="517" width="2.1583%" height="15" fill="rgb(212,140,41)" fg:x="888" fg:w="27"/><text x="71.2332%" y="527.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="72.7418%" y="501" width="0.3997%" height="15" fill="rgb(220,106,18)" fg:x="910" fg:w="5"/><text x="72.9918%" y="511.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="72.7418%" y="485" width="0.3997%" height="15" fill="rgb(252,46,41)" fg:x="910" fg:w="5"/><text x="72.9918%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="72.7418%" y="469" width="0.3997%" height="15" fill="rgb(209,222,15)" fg:x="910" fg:w="5"/><text x="72.9918%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="72.7418%" y="453" width="0.3997%" height="15" fill="rgb(233,83,50)" fg:x="910" fg:w="5"/><text x="72.9918%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.0616%" y="437" width="0.0799%" height="15" fill="rgb(205,212,0)" fg:x="914" fg:w="1"/><text x="73.3116%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1415%" y="501" width="0.0799%" height="15" fill="rgb(235,117,51)" fg:x="915" fg:w="1"/><text x="73.3915%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2214%" y="437" width="0.0799%" height="15" fill="rgb(233,133,48)" fg:x="916" fg:w="1"/><text x="73.4714%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.2214%" y="469" width="0.1599%" height="15" fill="rgb(219,3,2)" fg:x="916" fg:w="2"/><text x="73.4714%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.2214%" y="453" width="0.1599%" height="15" fill="rgb(225,80,52)" fg:x="916" fg:w="2"/><text x="73.4714%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.3014%" y="437" width="0.0799%" height="15" fill="rgb(235,195,42)" fg:x="917" fg:w="1"/><text x="73.5514%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="73.2214%" y="485" width="0.2398%" height="15" fill="rgb(240,207,46)" fg:x="916" fg:w="3"/><text x="73.4714%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3813%" y="469" width="0.0799%" height="15" fill="rgb(236,112,50)" fg:x="918" fg:w="1"/><text x="73.6313%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3813%" y="453" width="0.0799%" height="15" fill="rgb(249,151,27)" fg:x="918" fg:w="1"/><text x="73.6313%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.3813%" y="437" width="0.0799%" height="15" fill="rgb(253,223,52)" fg:x="918" fg:w="1"/><text x="73.6313%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.3813%" y="421" width="0.0799%" height="15" fill="rgb(215,55,33)" fg:x="918" fg:w="1"/><text x="73.6313%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.3813%" y="405" width="0.0799%" height="15" fill="rgb(207,24,17)" fg:x="918" fg:w="1"/><text x="73.6313%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="73.3813%" y="389" width="0.0799%" height="15" fill="rgb(218,169,32)" fg:x="918" fg:w="1"/><text x="73.6313%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.3813%" y="373" width="0.0799%" height="15" fill="rgb(209,210,6)" fg:x="918" fg:w="1"/><text x="73.6313%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.4612%" y="485" width="0.0799%" height="15" fill="rgb(225,208,8)" fg:x="919" fg:w="1"/><text x="73.7112%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.4612%" y="469" width="0.0799%" height="15" fill="rgb(238,14,32)" fg:x="919" fg:w="1"/><text x="73.7112%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.4612%" y="453" width="0.0799%" height="15" fill="rgb(211,137,3)" fg:x="919" fg:w="1"/><text x="73.7112%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.5412%" y="453" width="0.0799%" height="15" fill="rgb(207,171,19)" fg:x="920" fg:w="1"/><text x="73.7912%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5412%" y="437" width="0.0799%" height="15" fill="rgb(250,80,8)" fg:x="920" fg:w="1"/><text x="73.7912%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.6211%" y="421" width="0.1599%" height="15" fill="rgb(209,103,53)" fg:x="921" fg:w="2"/><text x="73.8711%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="73.6211%" y="405" width="0.1599%" height="15" fill="rgb(233,198,10)" fg:x="921" fg:w="2"/><text x="73.8711%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="73.1415%" y="517" width="0.7194%" height="15" fill="rgb(236,125,25)" fg:x="915" fg:w="9"/><text x="73.3915%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="73.2214%" y="501" width="0.6395%" height="15" fill="rgb(254,182,48)" fg:x="916" fg:w="8"/><text x="73.4714%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="73.5412%" y="485" width="0.3197%" height="15" fill="rgb(216,108,44)" fg:x="920" fg:w="4"/><text x="73.7912%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="73.5412%" y="469" width="0.3197%" height="15" fill="rgb(222,72,39)" fg:x="920" fg:w="4"/><text x="73.7912%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="73.6211%" y="453" width="0.2398%" height="15" fill="rgb(252,70,39)" fg:x="921" fg:w="3"/><text x="73.8711%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="73.6211%" y="437" width="0.2398%" height="15" fill="rgb(243,99,34)" fg:x="921" fg:w="3"/><text x="73.8711%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.7810%" y="421" width="0.0799%" height="15" fill="rgb(252,109,12)" fg:x="923" fg:w="1"/><text x="74.0310%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7810%" y="405" width="0.0799%" height="15" fill="rgb(211,186,10)" fg:x="923" fg:w="1"/><text x="74.0310%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9408%" y="501" width="0.0799%" height="15" fill="rgb(246,90,8)" fg:x="925" fg:w="1"/><text x="74.1908%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="74.0208%" y="501" width="0.0799%" height="15" fill="rgb(226,91,24)" fg:x="926" fg:w="1"/><text x="74.2708%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.1007%" y="485" width="0.0799%" height="15" fill="rgb(216,28,44)" fg:x="927" fg:w="1"/><text x="74.3507%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.1007%" y="469" width="0.0799%" height="15" fill="rgb(229,36,0)" fg:x="927" fg:w="1"/><text x="74.3507%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.1007%" y="453" width="0.0799%" height="15" fill="rgb(245,97,18)" fg:x="927" fg:w="1"/><text x="74.3507%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.1807%" y="421" width="0.1599%" height="15" fill="rgb(241,97,54)" fg:x="928" fg:w="2"/><text x="74.4307%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="74.1807%" y="405" width="0.1599%" height="15" fill="rgb(234,125,17)" fg:x="928" fg:w="2"/><text x="74.4307%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="73.8609%" y="517" width="0.5596%" height="15" fill="rgb(228,172,39)" fg:x="924" fg:w="7"/><text x="74.1109%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="74.1007%" y="501" width="0.3197%" height="15" fill="rgb(227,169,1)" fg:x="927" fg:w="4"/><text x="74.3507%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.1807%" y="485" width="0.2398%" height="15" fill="rgb(206,13,35)" fg:x="928" fg:w="3"/><text x="74.4307%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1807%" y="469" width="0.2398%" height="15" fill="rgb(211,117,30)" fg:x="928" fg:w="3"/><text x="74.4307%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="74.1807%" y="453" width="0.2398%" height="15" fill="rgb(230,198,4)" fg:x="928" fg:w="3"/><text x="74.4307%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1807%" y="437" width="0.2398%" height="15" fill="rgb(213,87,54)" fg:x="928" fg:w="3"/><text x="74.4307%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.3405%" y="421" width="0.0799%" height="15" fill="rgb(248,43,22)" fg:x="930" fg:w="1"/><text x="74.5905%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3405%" y="405" width="0.0799%" height="15" fill="rgb(213,175,48)" fg:x="930" fg:w="1"/><text x="74.5905%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.3405%" y="389" width="0.0799%" height="15" fill="rgb(252,55,9)" fg:x="930" fg:w="1"/><text x="74.5905%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.4205%" y="469" width="0.0799%" height="15" fill="rgb(231,72,33)" fg:x="931" fg:w="1"/><text x="74.6705%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.4205%" y="453" width="0.0799%" height="15" fill="rgb(213,2,54)" fg:x="931" fg:w="1"/><text x="74.6705%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="74.4205%" y="437" width="0.0799%" height="15" fill="rgb(208,88,25)" fg:x="931" fg:w="1"/><text x="74.6705%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="74.4205%" y="421" width="0.0799%" height="15" fill="rgb(215,117,13)" fg:x="931" fg:w="1"/><text x="74.6705%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="74.4205%" y="405" width="0.0799%" height="15" fill="rgb(243,147,21)" fg:x="931" fg:w="1"/><text x="74.6705%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="74.4205%" y="389" width="0.0799%" height="15" fill="rgb(208,215,36)" fg:x="931" fg:w="1"/><text x="74.6705%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.4205%" y="373" width="0.0799%" height="15" fill="rgb(238,187,24)" fg:x="931" fg:w="1"/><text x="74.6705%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.4205%" y="357" width="0.0799%" height="15" fill="rgb(214,173,11)" fg:x="931" fg:w="1"/><text x="74.6705%" y="367.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (241 samples, 19.26%)</title><rect x="55.3157%" y="581" width="19.2646%" height="15" fill="rgb(222,71,20)" fg:x="692" fg:w="241"/><text x="55.5657%" y="591.50">engine::session::Session::eval..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (241 samples, 19.26%)</title><rect x="55.3157%" y="565" width="19.2646%" height="15" fill="rgb(242,125,4)" fg:x="692" fg:w="241"/><text x="55.5657%" y="575.50">engine::session::Session::eval..</text></g><g><title>kernel::model::entry::EntryResolver::world (46 samples, 3.68%)</title><rect x="70.9033%" y="549" width="3.6771%" height="15" fill="rgb(217,101,52)" fg:x="887" fg:w="46"/><text x="71.1533%" y="559.50">kern..</text></g><g><title>kernel::model::entry::Entry::new (18 samples, 1.44%)</title><rect x="73.1415%" y="533" width="1.4388%" height="15" fill="rgb(223,2,50)" fg:x="915" fg:w="18"/><text x="73.3915%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="74.4205%" y="517" width="0.1599%" height="15" fill="rgb(225,197,9)" fg:x="931" fg:w="2"/><text x="74.6705%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="74.4205%" y="501" width="0.1599%" height="15" fill="rgb(234,76,27)" fg:x="931" fg:w="2"/><text x="74.6705%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="74.4205%" y="485" width="0.1599%" height="15" fill="rgb(213,161,26)" fg:x="931" fg:w="2"/><text x="74.6705%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.5004%" y="469" width="0.0799%" height="15" fill="rgb(210,228,2)" fg:x="932" fg:w="1"/><text x="74.7504%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="74.5004%" y="453" width="0.0799%" height="15" fill="rgb(235,4,16)" fg:x="932" fg:w="1"/><text x="74.7504%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.5004%" y="437" width="0.0799%" height="15" fill="rgb(235,83,42)" fg:x="932" fg:w="1"/><text x="74.7504%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.5004%" y="421" width="0.0799%" height="15" fill="rgb(207,116,39)" fg:x="932" fg:w="1"/><text x="74.7504%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.08%)</title><rect x="74.5004%" y="405" width="0.0799%" height="15" fill="rgb(253,206,9)" fg:x="932" fg:w="1"/><text x="74.7504%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.08%)</title><rect x="74.5004%" y="389" width="0.0799%" height="15" fill="rgb(234,32,47)" fg:x="932" fg:w="1"/><text x="74.7504%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.5803%" y="565" width="0.0799%" height="15" fill="rgb(247,40,39)" fg:x="933" fg:w="1"/><text x="74.8303%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (935 samples, 74.74%)</title><rect x="0.0000%" y="629" width="74.7402%" height="15" fill="rgb(236,199,13)" fg:x="0" fg:w="935"/><text x="0.2500%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (935 samples, 74.74%)</title><rect x="0.0000%" y="613" width="74.7402%" height="15" fill="rgb(240,127,44)" fg:x="0" fg:w="935"/><text x="0.2500%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (935 samples, 74.74%)</title><rect x="0.0000%" y="597" width="74.7402%" height="15" fill="rgb(248,220,47)" fg:x="0" fg:w="935"/><text x="0.2500%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="74.5803%" y="581" width="0.1599%" height="15" fill="rgb(240,78,9)" fg:x="933" fg:w="2"/><text x="74.8303%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="74.6603%" y="565" width="0.0799%" height="15" fill="rgb(245,119,5)" fg:x="934" fg:w="1"/><text x="74.9103%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.6603%" y="549" width="0.0799%" height="15" fill="rgb(238,175,31)" fg:x="934" fg:w="1"/><text x="74.9103%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.6603%" y="533" width="0.0799%" height="15" fill="rgb(232,140,42)" fg:x="934" fg:w="1"/><text x="74.9103%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.7402%" y="533" width="0.0799%" height="15" fill="rgb(218,179,7)" fg:x="935" fg:w="1"/><text x="74.9902%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.8201%" y="485" width="0.0799%" height="15" fill="rgb(232,79,27)" fg:x="936" fg:w="1"/><text x="75.0701%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9001%" y="469" width="0.0799%" height="15" fill="rgb(247,11,19)" fg:x="937" fg:w="1"/><text x="75.1501%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="74.9800%" y="469" width="0.1599%" height="15" fill="rgb(216,171,54)" fg:x="938" fg:w="2"/><text x="75.2300%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.0600%" y="453" width="0.0799%" height="15" fill="rgb(233,158,36)" fg:x="939" fg:w="1"/><text x="75.3100%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="74.8201%" y="501" width="0.4796%" height="15" fill="rgb(215,48,47)" fg:x="936" fg:w="6"/><text x="75.0701%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="74.9001%" y="485" width="0.3997%" height="15" fill="rgb(230,223,15)" fg:x="937" fg:w="5"/><text x="75.1501%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.1399%" y="469" width="0.1599%" height="15" fill="rgb(234,49,19)" fg:x="940" fg:w="2"/><text x="75.3899%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.1399%" y="453" width="0.1599%" height="15" fill="rgb(232,89,25)" fg:x="940" fg:w="2"/><text x="75.3899%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.2198%" y="437" width="0.0799%" height="15" fill="rgb(237,206,28)" fg:x="941" fg:w="1"/><text x="75.4698%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="74.7402%" y="581" width="0.7994%" height="15" fill="rgb(249,68,37)" fg:x="935" fg:w="10"/><text x="74.9902%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (10 samples, 0.80%)</title><rect x="74.7402%" y="565" width="0.7994%" height="15" fill="rgb(226,99,43)" fg:x="935" fg:w="10"/><text x="74.9902%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="74.7402%" y="549" width="0.7994%" height="15" fill="rgb(216,46,28)" fg:x="935" fg:w="10"/><text x="74.9902%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (9 samples, 0.72%)</title><rect x="74.8201%" y="533" width="0.7194%" height="15" fill="rgb(216,33,9)" fg:x="936" fg:w="9"/><text x="75.0701%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="74.8201%" y="517" width="0.7194%" height="15" fill="rgb(216,129,4)" fg:x="936" fg:w="9"/><text x="75.0701%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="75.2998%" y="501" width="0.2398%" height="15" fill="rgb(216,106,3)" fg:x="942" fg:w="3"/><text x="75.5498%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="75.2998%" y="485" width="0.2398%" height="15" fill="rgb(217,79,45)" fg:x="942" fg:w="3"/><text x="75.5498%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.2998%" y="469" width="0.2398%" height="15" fill="rgb(239,98,13)" fg:x="942" fg:w="3"/><text x="75.5498%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.4596%" y="453" width="0.0799%" height="15" fill="rgb(221,115,4)" fg:x="944" fg:w="1"/><text x="75.7096%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.4596%" y="437" width="0.0799%" height="15" fill="rgb(215,85,0)" fg:x="944" fg:w="1"/><text x="75.7096%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.5396%" y="533" width="0.0799%" height="15" fill="rgb(230,62,15)" fg:x="945" fg:w="1"/><text x="75.7896%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5396%" y="517" width="0.0799%" height="15" fill="rgb(247,162,2)" fg:x="945" fg:w="1"/><text x="75.7896%" y="527.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="75.6994%" y="469" width="0.0799%" height="15" fill="rgb(212,112,32)" fg:x="947" fg:w="1"/><text x="75.9494%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (4 samples, 0.32%)</title><rect x="75.6195%" y="517" width="0.3197%" height="15" fill="rgb(216,137,9)" fg:x="946" fg:w="4"/><text x="75.8695%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.24%)</title><rect x="75.6994%" y="501" width="0.2398%" height="15" fill="rgb(250,149,33)" fg:x="947" fg:w="3"/><text x="75.9494%" y="511.50"></text></g><g><title>libloading::safe::Library::new (3 samples, 0.24%)</title><rect x="75.6994%" y="485" width="0.2398%" height="15" fill="rgb(246,124,31)" fg:x="947" fg:w="3"/><text x="75.9494%" y="495.50"></text></g><g><title>dlopen (2 samples, 0.16%)</title><rect x="75.7794%" y="469" width="0.1599%" height="15" fill="rgb(216,210,22)" fg:x="948" fg:w="2"/><text x="76.0294%" y="479.50"></text></g><g><title>_dl_catch_error (1 samples, 0.08%)</title><rect x="75.8593%" y="453" width="0.0799%" height="15" fill="rgb(228,128,36)" fg:x="949" fg:w="1"/><text x="76.1093%" y="463.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="75.8593%" y="437" width="0.0799%" height="15" fill="rgb(231,41,0)" fg:x="949" fg:w="1"/><text x="76.1093%" y="447.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="75.8593%" y="421" width="0.0799%" height="15" fill="rgb(232,61,26)" fg:x="949" fg:w="1"/><text x="76.1093%" y="431.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="75.8593%" y="405" width="0.0799%" height="15" fill="rgb(217,60,9)" fg:x="949" fg:w="1"/><text x="76.1093%" y="415.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (6 samples, 0.48%)</title><rect x="75.5396%" y="581" width="0.4796%" height="15" fill="rgb(233,41,35)" fg:x="945" fg:w="6"/><text x="75.7896%" y="591.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (6 samples, 0.48%)</title><rect x="75.5396%" y="565" width="0.4796%" height="15" fill="rgb(253,139,43)" fg:x="945" fg:w="6"/><text x="75.7896%" y="575.50"></text></g><g><title>engine::session::Session::new (6 samples, 0.48%)</title><rect x="75.5396%" y="549" width="0.4796%" height="15" fill="rgb(245,100,51)" fg:x="945" fg:w="6"/><text x="75.7896%" y="559.50"></text></g><g><title>engine::session::Session::initialize (5 samples, 0.40%)</title><rect x="75.6195%" y="533" width="0.3997%" height="15" fill="rgb(250,208,18)" fg:x="946" fg:w="5"/><text x="75.8695%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="75.9392%" y="517" width="0.0799%" height="15" fill="rgb(245,33,2)" fg:x="950" fg:w="1"/><text x="76.1892%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="75.9392%" y="501" width="0.0799%" height="15" fill="rgb(244,171,31)" fg:x="950" fg:w="1"/><text x="76.1892%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.9392%" y="485" width="0.0799%" height="15" fill="rgb(229,1,43)" fg:x="950" fg:w="1"/><text x="76.1892%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="76.0192%" y="549" width="0.0799%" height="15" fill="rgb(223,153,28)" fg:x="951" fg:w="1"/><text x="76.2692%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.0192%" y="533" width="0.0799%" height="15" fill="rgb(241,4,46)" fg:x="951" fg:w="1"/><text x="76.2692%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.0192%" y="517" width="0.0799%" height="15" fill="rgb(230,81,11)" fg:x="951" fg:w="1"/><text x="76.2692%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.0991%" y="389" width="0.0799%" height="15" fill="rgb(253,204,39)" fg:x="952" fg:w="1"/><text x="76.3491%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.0991%" y="373" width="0.0799%" height="15" fill="rgb(250,96,8)" fg:x="952" fg:w="1"/><text x="76.3491%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.0991%" y="357" width="0.0799%" height="15" fill="rgb(219,89,54)" fg:x="952" fg:w="1"/><text x="76.3491%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.0991%" y="341" width="0.0799%" height="15" fill="rgb(235,136,39)" fg:x="952" fg:w="1"/><text x="76.3491%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.0991%" y="325" width="0.0799%" height="15" fill="rgb(230,155,37)" fg:x="952" fg:w="1"/><text x="76.3491%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.0991%" y="309" width="0.0799%" height="15" fill="rgb(235,199,50)" fg:x="952" fg:w="1"/><text x="76.3491%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0991%" y="293" width="0.0799%" height="15" fill="rgb(227,81,32)" fg:x="952" fg:w="1"/><text x="76.3491%" y="303.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="76.0991%" y="517" width="0.1599%" height="15" fill="rgb(225,6,28)" fg:x="952" fg:w="2"/><text x="76.3491%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="76.0991%" y="501" width="0.1599%" height="15" fill="rgb(207,211,17)" fg:x="952" fg:w="2"/><text x="76.3491%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="76.0991%" y="485" width="0.1599%" height="15" fill="rgb(228,31,49)" fg:x="952" fg:w="2"/><text x="76.3491%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="76.0991%" y="469" width="0.1599%" height="15" fill="rgb(230,185,3)" fg:x="952" fg:w="2"/><text x="76.3491%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="76.0991%" y="453" width="0.1599%" height="15" fill="rgb(206,167,15)" fg:x="952" fg:w="2"/><text x="76.3491%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="76.0991%" y="437" width="0.1599%" height="15" fill="rgb(234,2,36)" fg:x="952" fg:w="2"/><text x="76.3491%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="76.0991%" y="421" width="0.1599%" height="15" fill="rgb(239,160,29)" fg:x="952" fg:w="2"/><text x="76.3491%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="76.0991%" y="405" width="0.1599%" height="15" fill="rgb(236,117,2)" fg:x="952" fg:w="2"/><text x="76.3491%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="76.1791%" y="389" width="0.0799%" height="15" fill="rgb(215,117,37)" fg:x="953" fg:w="1"/><text x="76.4291%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.1791%" y="373" width="0.0799%" height="15" fill="rgb(244,48,36)" fg:x="953" fg:w="1"/><text x="76.4291%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="76.2590%" y="405" width="0.1599%" height="15" fill="rgb(223,101,37)" fg:x="954" fg:w="2"/><text x="76.5090%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="76.2590%" y="389" width="0.1599%" height="15" fill="rgb(205,200,1)" fg:x="954" fg:w="2"/><text x="76.5090%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3389%" y="373" width="0.0799%" height="15" fill="rgb(209,193,20)" fg:x="955" fg:w="1"/><text x="76.5889%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.3389%" y="357" width="0.0799%" height="15" fill="rgb(214,63,13)" fg:x="955" fg:w="1"/><text x="76.5889%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="76.2590%" y="437" width="0.2398%" height="15" fill="rgb(253,113,46)" fg:x="954" fg:w="3"/><text x="76.5090%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="76.2590%" y="421" width="0.2398%" height="15" fill="rgb(237,103,34)" fg:x="954" fg:w="3"/><text x="76.5090%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.4189%" y="405" width="0.0799%" height="15" fill="rgb(223,38,25)" fg:x="956" fg:w="1"/><text x="76.6689%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.4189%" y="389" width="0.0799%" height="15" fill="rgb(251,32,32)" fg:x="956" fg:w="1"/><text x="76.6689%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.4189%" y="373" width="0.0799%" height="15" fill="rgb(228,65,22)" fg:x="956" fg:w="1"/><text x="76.6689%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.4189%" y="357" width="0.0799%" height="15" fill="rgb(205,11,46)" fg:x="956" fg:w="1"/><text x="76.6689%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.4189%" y="341" width="0.0799%" height="15" fill="rgb(220,35,2)" fg:x="956" fg:w="1"/><text x="76.6689%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.4189%" y="325" width="0.0799%" height="15" fill="rgb(217,151,17)" fg:x="956" fg:w="1"/><text x="76.6689%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.4988%" y="437" width="0.0799%" height="15" fill="rgb(243,227,35)" fg:x="957" fg:w="1"/><text x="76.7488%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.4988%" y="421" width="0.0799%" height="15" fill="rgb(214,0,34)" fg:x="957" fg:w="1"/><text x="76.7488%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.4988%" y="405" width="0.0799%" height="15" fill="rgb(209,42,37)" fg:x="957" fg:w="1"/><text x="76.7488%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.4988%" y="389" width="0.0799%" height="15" fill="rgb(251,176,30)" fg:x="957" fg:w="1"/><text x="76.7488%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.4988%" y="373" width="0.0799%" height="15" fill="rgb(223,64,40)" fg:x="957" fg:w="1"/><text x="76.7488%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.4988%" y="357" width="0.0799%" height="15" fill="rgb(227,180,23)" fg:x="957" fg:w="1"/><text x="76.7488%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4988%" y="341" width="0.0799%" height="15" fill="rgb(220,137,31)" fg:x="957" fg:w="1"/><text x="76.7488%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="76.2590%" y="469" width="0.3997%" height="15" fill="rgb(245,124,25)" fg:x="954" fg:w="5"/><text x="76.5090%" y="479.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (5 samples, 0.40%)</title><rect x="76.2590%" y="453" width="0.3997%" height="15" fill="rgb(217,157,5)" fg:x="954" fg:w="5"/><text x="76.5090%" y="463.50"></text></g><g><title>kernel::model::any_entity_changes (1 samples, 0.08%)</title><rect x="76.5787%" y="437" width="0.0799%" height="15" fill="rgb(225,59,2)" fg:x="958" fg:w="1"/><text x="76.8287%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5787%" y="421" width="0.0799%" height="15" fill="rgb(220,182,9)" fg:x="958" fg:w="1"/><text x="76.8287%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.5787%" y="405" width="0.0799%" height="15" fill="rgb(249,54,24)" fg:x="958" fg:w="1"/><text x="76.8287%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5787%" y="389" width="0.0799%" height="15" fill="rgb(216,89,17)" fg:x="958" fg:w="1"/><text x="76.8287%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="76.6587%" y="437" width="0.1599%" height="15" fill="rgb(245,20,45)" fg:x="959" fg:w="2"/><text x="76.9087%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.6587%" y="421" width="0.1599%" height="15" fill="rgb(230,83,14)" fg:x="959" fg:w="2"/><text x="76.9087%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.6587%" y="405" width="0.1599%" height="15" fill="rgb(246,109,11)" fg:x="959" fg:w="2"/><text x="76.9087%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.7386%" y="389" width="0.0799%" height="15" fill="rgb(235,85,23)" fg:x="960" fg:w="1"/><text x="76.9886%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.8985%" y="421" width="0.0799%" height="15" fill="rgb(215,101,36)" fg:x="962" fg:w="1"/><text x="77.1485%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.9784%" y="421" width="0.0799%" height="15" fill="rgb(228,140,31)" fg:x="963" fg:w="1"/><text x="77.2284%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.0584%" y="405" width="0.1599%" height="15" fill="rgb(234,162,37)" fg:x="964" fg:w="2"/><text x="77.3084%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.0584%" y="389" width="0.1599%" height="15" fill="rgb(221,0,24)" fg:x="964" fg:w="2"/><text x="77.3084%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.0584%" y="373" width="0.1599%" height="15" fill="rgb(230,161,41)" fg:x="964" fg:w="2"/><text x="77.3084%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.1383%" y="357" width="0.0799%" height="15" fill="rgb(224,46,24)" fg:x="965" fg:w="1"/><text x="77.3883%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.1383%" y="341" width="0.0799%" height="15" fill="rgb(205,59,32)" fg:x="965" fg:w="1"/><text x="77.3883%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.1383%" y="325" width="0.0799%" height="15" fill="rgb(239,31,20)" fg:x="965" fg:w="1"/><text x="77.3883%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.1383%" y="309" width="0.0799%" height="15" fill="rgb(233,149,44)" fg:x="965" fg:w="1"/><text x="77.3883%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.2182%" y="389" width="0.0799%" height="15" fill="rgb(243,47,26)" fg:x="966" fg:w="1"/><text x="77.4682%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="77.2182%" y="405" width="0.1599%" height="15" fill="rgb(233,107,5)" fg:x="966" fg:w="2"/><text x="77.4682%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="77.2982%" y="389" width="0.0799%" height="15" fill="rgb(248,140,33)" fg:x="967" fg:w="1"/><text x="77.5482%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.2982%" y="373" width="0.0799%" height="15" fill="rgb(228,178,19)" fg:x="967" fg:w="1"/><text x="77.5482%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.2982%" y="357" width="0.0799%" height="15" fill="rgb(224,39,49)" fg:x="967" fg:w="1"/><text x="77.5482%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.2982%" y="341" width="0.0799%" height="15" fill="rgb(246,56,47)" fg:x="967" fg:w="1"/><text x="77.5482%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.2982%" y="325" width="0.0799%" height="15" fill="rgb(220,73,27)" fg:x="967" fg:w="1"/><text x="77.5482%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="77.0584%" y="421" width="0.3997%" height="15" fill="rgb(239,112,21)" fg:x="964" fg:w="5"/><text x="77.3084%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.3781%" y="405" width="0.0799%" height="15" fill="rgb(253,14,51)" fg:x="968" fg:w="1"/><text x="77.6281%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="76.6587%" y="453" width="0.9592%" height="15" fill="rgb(215,58,12)" fg:x="959" fg:w="12"/><text x="76.9087%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="76.8185%" y="437" width="0.7994%" height="15" fill="rgb(207,181,19)" fg:x="961" fg:w="10"/><text x="77.0685%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.4580%" y="421" width="0.1599%" height="15" fill="rgb(211,214,34)" fg:x="969" fg:w="2"/><text x="77.7080%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.4580%" y="405" width="0.1599%" height="15" fill="rgb(243,124,39)" fg:x="969" fg:w="2"/><text x="77.7080%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.4580%" y="389" width="0.1599%" height="15" fill="rgb(248,135,21)" fg:x="969" fg:w="2"/><text x="77.7080%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.5380%" y="373" width="0.0799%" height="15" fill="rgb(245,218,3)" fg:x="970" fg:w="1"/><text x="77.7880%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.5380%" y="357" width="0.0799%" height="15" fill="rgb(225,144,22)" fg:x="970" fg:w="1"/><text x="77.7880%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.5380%" y="341" width="0.0799%" height="15" fill="rgb(250,90,15)" fg:x="970" fg:w="1"/><text x="77.7880%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6179%" y="421" width="0.0799%" height="15" fill="rgb(224,64,29)" fg:x="971" fg:w="1"/><text x="77.8679%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="77.6978%" y="405" width="0.1599%" height="15" fill="rgb(217,50,47)" fg:x="972" fg:w="2"/><text x="77.9478%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="77.6179%" y="453" width="0.3197%" height="15" fill="rgb(231,159,47)" fg:x="971" fg:w="4"/><text x="77.8679%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="77.6179%" y="437" width="0.3197%" height="15" fill="rgb(213,89,29)" fg:x="971" fg:w="4"/><text x="77.8679%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="77.6978%" y="421" width="0.2398%" height="15" fill="rgb(243,90,23)" fg:x="972" fg:w="3"/><text x="77.9478%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.8577%" y="405" width="0.0799%" height="15" fill="rgb(213,21,6)" fg:x="974" fg:w="1"/><text x="78.1077%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.8577%" y="389" width="0.0799%" height="15" fill="rgb(237,139,17)" fg:x="974" fg:w="1"/><text x="78.1077%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.8577%" y="373" width="0.0799%" height="15" fill="rgb(250,147,17)" fg:x="974" fg:w="1"/><text x="78.1077%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8577%" y="357" width="0.0799%" height="15" fill="rgb(212,208,42)" fg:x="974" fg:w="1"/><text x="78.1077%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="77.9376%" y="405" width="0.0799%" height="15" fill="rgb(215,229,40)" fg:x="975" fg:w="1"/><text x="78.1876%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="77.9376%" y="389" width="0.0799%" height="15" fill="rgb(206,204,1)" fg:x="975" fg:w="1"/><text x="78.1876%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.0176%" y="373" width="0.0799%" height="15" fill="rgb(230,62,32)" fg:x="976" fg:w="1"/><text x="78.2676%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.1775%" y="341" width="0.0799%" height="15" fill="rgb(223,22,42)" fg:x="978" fg:w="1"/><text x="78.4275%" y="351.50"></text></g><g><title>engine::session::Session::flush (29 samples, 2.32%)</title><rect x="76.0192%" y="565" width="2.3181%" height="15" fill="rgb(244,6,23)" fg:x="951" fg:w="29"/><text x="76.2692%" y="575.50">e..</text></g><g><title>engine::session::state::State::close (28 samples, 2.24%)</title><rect x="76.0991%" y="549" width="2.2382%" height="15" fill="rgb(240,221,42)" fg:x="952" fg:w="28"/><text x="76.3491%" y="559.50">e..</text></g><g><title>engine::session::state::State::flush_entities (28 samples, 2.24%)</title><rect x="76.0991%" y="533" width="2.2382%" height="15" fill="rgb(222,74,7)" fg:x="952" fg:w="28"/><text x="76.3491%" y="543.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (26 samples, 2.08%)</title><rect x="76.2590%" y="517" width="2.0783%" height="15" fill="rgb(227,191,38)" fg:x="954" fg:w="26"/><text x="76.5090%" y="527.50">e..</text></g><g><title>core::iter::adapters::try_process (26 samples, 2.08%)</title><rect x="76.2590%" y="501" width="2.0783%" height="15" fill="rgb(227,89,34)" fg:x="954" fg:w="26"/><text x="76.5090%" y="511.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 2.08%)</title><rect x="76.2590%" y="485" width="2.0783%" height="15" fill="rgb(215,153,25)" fg:x="954" fg:w="26"/><text x="76.5090%" y="495.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (21 samples, 1.68%)</title><rect x="76.6587%" y="469" width="1.6787%" height="15" fill="rgb(215,153,46)" fg:x="959" fg:w="21"/><text x="76.9087%" y="479.50"></text></g><g><title>kernel::model::any_entity_changes (5 samples, 0.40%)</title><rect x="77.9376%" y="453" width="0.3997%" height="15" fill="rgb(242,38,52)" fg:x="975" fg:w="5"/><text x="78.1876%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="77.9376%" y="437" width="0.3997%" height="15" fill="rgb(218,112,4)" fg:x="975" fg:w="5"/><text x="78.1876%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="77.9376%" y="421" width="0.3997%" height="15" fill="rgb(231,210,31)" fg:x="975" fg:w="5"/><text x="78.1876%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="78.0176%" y="405" width="0.3197%" height="15" fill="rgb(245,223,36)" fg:x="976" fg:w="4"/><text x="78.2676%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="78.0176%" y="389" width="0.3197%" height="15" fill="rgb(246,41,2)" fg:x="976" fg:w="4"/><text x="78.2676%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="78.0975%" y="373" width="0.2398%" height="15" fill="rgb(227,51,31)" fg:x="977" fg:w="3"/><text x="78.3475%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="78.1775%" y="357" width="0.1599%" height="15" fill="rgb(222,95,26)" fg:x="978" fg:w="2"/><text x="78.4275%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.2574%" y="341" width="0.0799%" height="15" fill="rgb(224,190,1)" fg:x="979" fg:w="1"/><text x="78.5074%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.3373%" y="517" width="0.0799%" height="15" fill="rgb(209,90,42)" fg:x="980" fg:w="1"/><text x="78.5873%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.3373%" y="501" width="0.0799%" height="15" fill="rgb(232,225,50)" fg:x="980" fg:w="1"/><text x="78.5873%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3373%" y="485" width="0.0799%" height="15" fill="rgb(239,89,47)" fg:x="980" fg:w="1"/><text x="78.5873%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="78.4173%" y="501" width="0.1599%" height="15" fill="rgb(230,212,50)" fg:x="981" fg:w="2"/><text x="78.6673%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="78.4173%" y="485" width="0.1599%" height="15" fill="rgb(252,1,27)" fg:x="981" fg:w="2"/><text x="78.6673%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="78.4173%" y="469" width="0.1599%" height="15" fill="rgb(237,179,41)" fg:x="981" fg:w="2"/><text x="78.6673%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="78.4173%" y="453" width="0.1599%" height="15" fill="rgb(214,151,37)" fg:x="981" fg:w="2"/><text x="78.6673%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="78.4173%" y="437" width="0.1599%" height="15" fill="rgb(211,74,11)" fg:x="981" fg:w="2"/><text x="78.6673%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="78.4173%" y="421" width="0.1599%" height="15" fill="rgb(242,21,21)" fg:x="981" fg:w="2"/><text x="78.6673%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="78.4972%" y="405" width="0.0799%" height="15" fill="rgb(226,106,43)" fg:x="982" fg:w="1"/><text x="78.7472%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="78.4972%" y="389" width="0.0799%" height="15" fill="rgb(229,162,39)" fg:x="982" fg:w="1"/><text x="78.7472%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.4972%" y="373" width="0.0799%" height="15" fill="rgb(228,159,25)" fg:x="982" fg:w="1"/><text x="78.7472%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.4972%" y="357" width="0.0799%" height="15" fill="rgb(237,32,23)" fg:x="982" fg:w="1"/><text x="78.7472%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.4972%" y="341" width="0.0799%" height="15" fill="rgb(212,35,32)" fg:x="982" fg:w="1"/><text x="78.7472%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="78.4173%" y="517" width="0.2398%" height="15" fill="rgb(215,199,1)" fg:x="981" fg:w="3"/><text x="78.6673%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="78.5771%" y="501" width="0.0799%" height="15" fill="rgb(215,67,13)" fg:x="983" fg:w="1"/><text x="78.8271%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.5771%" y="485" width="0.0799%" height="15" fill="rgb(216,20,47)" fg:x="983" fg:w="1"/><text x="78.8271%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="78.5771%" y="469" width="0.0799%" height="15" fill="rgb(249,183,48)" fg:x="983" fg:w="1"/><text x="78.8271%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="78.5771%" y="453" width="0.0799%" height="15" fill="rgb(208,86,37)" fg:x="983" fg:w="1"/><text x="78.8271%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.5771%" y="437" width="0.0799%" height="15" fill="rgb(251,192,7)" fg:x="983" fg:w="1"/><text x="78.8271%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.5771%" y="421" width="0.0799%" height="15" fill="rgb(234,196,3)" fg:x="983" fg:w="1"/><text x="78.8271%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.5771%" y="405" width="0.0799%" height="15" fill="rgb(229,150,39)" fg:x="983" fg:w="1"/><text x="78.8271%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.5771%" y="389" width="0.0799%" height="15" fill="rgb(226,19,29)" fg:x="983" fg:w="1"/><text x="78.8271%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.5771%" y="373" width="0.0799%" height="15" fill="rgb(226,222,2)" fg:x="983" fg:w="1"/><text x="78.8271%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5771%" y="357" width="0.0799%" height="15" fill="rgb(235,85,29)" fg:x="983" fg:w="1"/><text x="78.8271%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5771%" y="341" width="0.0799%" height="15" fill="rgb(237,194,43)" fg:x="983" fg:w="1"/><text x="78.8271%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.6571%" y="517" width="0.0799%" height="15" fill="rgb(211,4,42)" fg:x="984" fg:w="1"/><text x="78.9071%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.6571%" y="501" width="0.0799%" height="15" fill="rgb(221,80,37)" fg:x="984" fg:w="1"/><text x="78.9071%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="78.6571%" y="485" width="0.0799%" height="15" fill="rgb(222,47,31)" fg:x="984" fg:w="1"/><text x="78.9071%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="78.3373%" y="533" width="0.4796%" height="15" fill="rgb(249,82,52)" fg:x="980" fg:w="6"/><text x="78.5873%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="78.7370%" y="517" width="0.0799%" height="15" fill="rgb(218,203,2)" fg:x="985" fg:w="1"/><text x="78.9870%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.7370%" y="501" width="0.0799%" height="15" fill="rgb(210,175,14)" fg:x="985" fg:w="1"/><text x="78.9870%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.7370%" y="485" width="0.0799%" height="15" fill="rgb(216,210,12)" fg:x="985" fg:w="1"/><text x="78.9870%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.7370%" y="469" width="0.0799%" height="15" fill="rgb(229,120,18)" fg:x="985" fg:w="1"/><text x="78.9870%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.7370%" y="453" width="0.0799%" height="15" fill="rgb(231,174,12)" fg:x="985" fg:w="1"/><text x="78.9870%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7370%" y="437" width="0.0799%" height="15" fill="rgb(214,101,53)" fg:x="985" fg:w="1"/><text x="78.9870%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.7370%" y="421" width="0.0799%" height="15" fill="rgb(246,89,43)" fg:x="985" fg:w="1"/><text x="78.9870%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7370%" y="405" width="0.0799%" height="15" fill="rgb(222,9,51)" fg:x="985" fg:w="1"/><text x="78.9870%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.7370%" y="389" width="0.0799%" height="15" fill="rgb(252,221,9)" fg:x="985" fg:w="1"/><text x="78.9870%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7370%" y="373" width="0.0799%" height="15" fill="rgb(248,28,15)" fg:x="985" fg:w="1"/><text x="78.9870%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="78.3373%" y="549" width="0.5596%" height="15" fill="rgb(213,54,52)" fg:x="980" fg:w="7"/><text x="78.5873%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.8169%" y="533" width="0.0799%" height="15" fill="rgb(240,3,45)" fg:x="986" fg:w="1"/><text x="79.0669%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.8169%" y="517" width="0.0799%" height="15" fill="rgb(239,138,24)" fg:x="986" fg:w="1"/><text x="79.0669%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.8169%" y="501" width="0.0799%" height="15" fill="rgb(233,45,54)" fg:x="986" fg:w="1"/><text x="79.0669%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="78.8969%" y="517" width="0.0799%" height="15" fill="rgb(220,131,2)" fg:x="987" fg:w="1"/><text x="79.1469%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.8969%" y="501" width="0.0799%" height="15" fill="rgb(240,154,36)" fg:x="987" fg:w="1"/><text x="79.1469%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="78.9768%" y="517" width="0.0799%" height="15" fill="rgb(251,221,1)" fg:x="988" fg:w="1"/><text x="79.2268%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="78.9768%" y="501" width="0.0799%" height="15" fill="rgb(225,217,1)" fg:x="988" fg:w="1"/><text x="79.2268%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.9768%" y="485" width="0.0799%" height="15" fill="rgb(241,105,49)" fg:x="988" fg:w="1"/><text x="79.2268%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.9768%" y="469" width="0.0799%" height="15" fill="rgb(215,44,32)" fg:x="988" fg:w="1"/><text x="79.2268%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9768%" y="453" width="0.0799%" height="15" fill="rgb(213,222,14)" fg:x="988" fg:w="1"/><text x="79.2268%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9768%" y="437" width="0.0799%" height="15" fill="rgb(207,99,52)" fg:x="988" fg:w="1"/><text x="79.2268%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9768%" y="421" width="0.0799%" height="15" fill="rgb(214,208,52)" fg:x="988" fg:w="1"/><text x="79.2268%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9768%" y="405" width="0.0799%" height="15" fill="rgb(244,169,0)" fg:x="988" fg:w="1"/><text x="79.2268%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9768%" y="389" width="0.0799%" height="15" fill="rgb(216,193,37)" fg:x="988" fg:w="1"/><text x="79.2268%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.9768%" y="373" width="0.0799%" height="15" fill="rgb(212,158,10)" fg:x="988" fg:w="1"/><text x="79.2268%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.9768%" y="357" width="0.0799%" height="15" fill="rgb(213,110,20)" fg:x="988" fg:w="1"/><text x="79.2268%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.9768%" y="341" width="0.0799%" height="15" fill="rgb(226,5,42)" fg:x="988" fg:w="1"/><text x="79.2268%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="78.9768%" y="325" width="0.0799%" height="15" fill="rgb(211,93,8)" fg:x="988" fg:w="1"/><text x="79.2268%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.9768%" y="309" width="0.0799%" height="15" fill="rgb(240,208,12)" fg:x="988" fg:w="1"/><text x="79.2268%" y="319.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="78.8969%" y="533" width="0.2398%" height="15" fill="rgb(233,127,50)" fg:x="987" fg:w="3"/><text x="79.1469%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="79.0568%" y="517" width="0.0799%" height="15" fill="rgb(227,199,53)" fg:x="989" fg:w="1"/><text x="79.3068%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.0568%" y="501" width="0.0799%" height="15" fill="rgb(235,199,10)" fg:x="989" fg:w="1"/><text x="79.3068%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="79.0568%" y="485" width="0.0799%" height="15" fill="rgb(228,148,35)" fg:x="989" fg:w="1"/><text x="79.3068%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.88%)</title><rect x="78.3373%" y="565" width="0.8793%" height="15" fill="rgb(217,87,19)" fg:x="980" fg:w="11"/><text x="78.5873%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="78.8969%" y="549" width="0.3197%" height="15" fill="rgb(239,9,32)" fg:x="987" fg:w="4"/><text x="79.1469%" y="559.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="79.1367%" y="533" width="0.0799%" height="15" fill="rgb(229,101,29)" fg:x="990" fg:w="1"/><text x="79.3867%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="79.1367%" y="517" width="0.0799%" height="15" fill="rgb(208,143,26)" fg:x="990" fg:w="1"/><text x="79.3867%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="79.1367%" y="501" width="0.0799%" height="15" fill="rgb(214,10,2)" fg:x="990" fg:w="1"/><text x="79.3867%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1367%" y="485" width="0.0799%" height="15" fill="rgb(254,203,30)" fg:x="990" fg:w="1"/><text x="79.3867%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="79.2166%" y="517" width="0.0799%" height="15" fill="rgb(242,45,3)" fg:x="991" fg:w="1"/><text x="79.4666%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="79.2166%" y="501" width="0.0799%" height="15" fill="rgb(209,146,51)" fg:x="991" fg:w="1"/><text x="79.4666%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="79.2166%" y="485" width="0.0799%" height="15" fill="rgb(222,80,5)" fg:x="991" fg:w="1"/><text x="79.4666%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.2166%" y="469" width="0.0799%" height="15" fill="rgb(252,80,35)" fg:x="991" fg:w="1"/><text x="79.4666%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="79.2166%" y="453" width="0.0799%" height="15" fill="rgb(246,125,28)" fg:x="991" fg:w="1"/><text x="79.4666%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="79.2166%" y="437" width="0.0799%" height="15" fill="rgb(224,143,51)" fg:x="991" fg:w="1"/><text x="79.4666%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="79.2166%" y="533" width="0.1599%" height="15" fill="rgb(205,24,17)" fg:x="991" fg:w="2"/><text x="79.4666%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.2966%" y="517" width="0.0799%" height="15" fill="rgb(253,128,30)" fg:x="992" fg:w="1"/><text x="79.5466%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.2966%" y="501" width="0.0799%" height="15" fill="rgb(214,153,25)" fg:x="992" fg:w="1"/><text x="79.5466%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.2966%" y="485" width="0.0799%" height="15" fill="rgb(214,4,28)" fg:x="992" fg:w="1"/><text x="79.5466%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.2966%" y="469" width="0.0799%" height="15" fill="rgb(235,179,52)" fg:x="992" fg:w="1"/><text x="79.5466%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="79.2166%" y="549" width="0.2398%" height="15" fill="rgb(233,27,42)" fg:x="991" fg:w="3"/><text x="79.4666%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="79.3765%" y="533" width="0.0799%" height="15" fill="rgb(238,35,25)" fg:x="993" fg:w="1"/><text x="79.6265%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.3765%" y="517" width="0.0799%" height="15" fill="rgb(227,44,31)" fg:x="993" fg:w="1"/><text x="79.6265%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.3765%" y="501" width="0.0799%" height="15" fill="rgb(232,201,13)" fg:x="993" fg:w="1"/><text x="79.6265%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.3765%" y="485" width="0.0799%" height="15" fill="rgb(224,172,52)" fg:x="993" fg:w="1"/><text x="79.6265%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3765%" y="469" width="0.0799%" height="15" fill="rgb(214,27,26)" fg:x="993" fg:w="1"/><text x="79.6265%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3765%" y="453" width="0.0799%" height="15" fill="rgb(210,185,52)" fg:x="993" fg:w="1"/><text x="79.6265%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3765%" y="437" width="0.0799%" height="15" fill="rgb(249,59,32)" fg:x="993" fg:w="1"/><text x="79.6265%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.3765%" y="421" width="0.0799%" height="15" fill="rgb(242,209,18)" fg:x="993" fg:w="1"/><text x="79.6265%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.3765%" y="405" width="0.0799%" height="15" fill="rgb(229,0,18)" fg:x="993" fg:w="1"/><text x="79.6265%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.3765%" y="389" width="0.0799%" height="15" fill="rgb(217,138,29)" fg:x="993" fg:w="1"/><text x="79.6265%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.3765%" y="373" width="0.0799%" height="15" fill="rgb(215,72,42)" fg:x="993" fg:w="1"/><text x="79.6265%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.3765%" y="357" width="0.0799%" height="15" fill="rgb(254,115,11)" fg:x="993" fg:w="1"/><text x="79.6265%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.3765%" y="341" width="0.0799%" height="15" fill="rgb(205,133,39)" fg:x="993" fg:w="1"/><text x="79.6265%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.3765%" y="325" width="0.0799%" height="15" fill="rgb(211,36,27)" fg:x="993" fg:w="1"/><text x="79.6265%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.3765%" y="309" width="0.0799%" height="15" fill="rgb(221,48,10)" fg:x="993" fg:w="1"/><text x="79.6265%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.3765%" y="293" width="0.0799%" height="15" fill="rgb(230,172,50)" fg:x="993" fg:w="1"/><text x="79.6265%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.3765%" y="277" width="0.0799%" height="15" fill="rgb(249,72,18)" fg:x="993" fg:w="1"/><text x="79.6265%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.3765%" y="261" width="0.0799%" height="15" fill="rgb(237,58,48)" fg:x="993" fg:w="1"/><text x="79.6265%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3765%" y="245" width="0.0799%" height="15" fill="rgb(242,123,3)" fg:x="993" fg:w="1"/><text x="79.6265%" y="255.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="79.2166%" y="565" width="0.3197%" height="15" fill="rgb(232,111,32)" fg:x="991" fg:w="4"/><text x="79.4666%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.4564%" y="549" width="0.0799%" height="15" fill="rgb(229,108,3)" fg:x="994" fg:w="1"/><text x="79.7064%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.4564%" y="533" width="0.0799%" height="15" fill="rgb(222,158,10)" fg:x="994" fg:w="1"/><text x="79.7064%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.4564%" y="517" width="0.0799%" height="15" fill="rgb(205,34,49)" fg:x="994" fg:w="1"/><text x="79.7064%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.4564%" y="501" width="0.0799%" height="15" fill="rgb(232,21,14)" fg:x="994" fg:w="1"/><text x="79.7064%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.4564%" y="485" width="0.0799%" height="15" fill="rgb(229,127,44)" fg:x="994" fg:w="1"/><text x="79.7064%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="79.5364%" y="437" width="0.0799%" height="15" fill="rgb(232,171,4)" fg:x="995" fg:w="1"/><text x="79.7864%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="79.5364%" y="421" width="0.0799%" height="15" fill="rgb(250,92,16)" fg:x="995" fg:w="1"/><text x="79.7864%" y="431.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="79.5364%" y="405" width="0.0799%" height="15" fill="rgb(230,103,38)" fg:x="995" fg:w="1"/><text x="79.7864%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.5364%" y="389" width="0.0799%" height="15" fill="rgb(253,167,9)" fg:x="995" fg:w="1"/><text x="79.7864%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.5364%" y="373" width="0.0799%" height="15" fill="rgb(222,118,11)" fg:x="995" fg:w="1"/><text x="79.7864%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.5364%" y="357" width="0.0799%" height="15" fill="rgb(240,202,0)" fg:x="995" fg:w="1"/><text x="79.7864%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.5364%" y="341" width="0.0799%" height="15" fill="rgb(236,124,4)" fg:x="995" fg:w="1"/><text x="79.7864%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="79.5364%" y="453" width="0.3197%" height="15" fill="rgb(244,128,18)" fg:x="995" fg:w="4"/><text x="79.7864%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="79.6163%" y="437" width="0.2398%" height="15" fill="rgb(231,206,5)" fg:x="996" fg:w="3"/><text x="79.8663%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="79.6163%" y="421" width="0.2398%" height="15" fill="rgb(237,111,8)" fg:x="996" fg:w="3"/><text x="79.8663%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="79.6962%" y="405" width="0.1599%" height="15" fill="rgb(225,127,3)" fg:x="997" fg:w="2"/><text x="79.9462%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="79.6962%" y="389" width="0.1599%" height="15" fill="rgb(222,85,48)" fg:x="997" fg:w="2"/><text x="79.9462%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="79.6962%" y="373" width="0.1599%" height="15" fill="rgb(221,108,37)" fg:x="997" fg:w="2"/><text x="79.9462%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.7762%" y="357" width="0.0799%" height="15" fill="rgb(226,169,36)" fg:x="998" fg:w="1"/><text x="80.0262%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.7762%" y="341" width="0.0799%" height="15" fill="rgb(237,76,12)" fg:x="998" fg:w="1"/><text x="80.0262%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.7762%" y="325" width="0.0799%" height="15" fill="rgb(210,227,32)" fg:x="998" fg:w="1"/><text x="80.0262%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.7762%" y="309" width="0.0799%" height="15" fill="rgb(214,117,20)" fg:x="998" fg:w="1"/><text x="80.0262%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.8561%" y="437" width="0.0799%" height="15" fill="rgb(234,119,41)" fg:x="999" fg:w="1"/><text x="80.1061%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.8561%" y="421" width="0.0799%" height="15" fill="rgb(230,130,47)" fg:x="999" fg:w="1"/><text x="80.1061%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.8561%" y="405" width="0.0799%" height="15" fill="rgb(215,21,41)" fg:x="999" fg:w="1"/><text x="80.1061%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.8561%" y="389" width="0.0799%" height="15" fill="rgb(226,26,53)" fg:x="999" fg:w="1"/><text x="80.1061%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.8561%" y="373" width="0.0799%" height="15" fill="rgb(221,92,23)" fg:x="999" fg:w="1"/><text x="80.1061%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.8561%" y="357" width="0.0799%" height="15" fill="rgb(213,156,21)" fg:x="999" fg:w="1"/><text x="80.1061%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="79.8561%" y="453" width="0.1599%" height="15" fill="rgb(254,166,29)" fg:x="999" fg:w="2"/><text x="80.1061%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.9361%" y="437" width="0.0799%" height="15" fill="rgb(213,71,1)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.9361%" y="421" width="0.0799%" height="15" fill="rgb(245,8,13)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.9361%" y="405" width="0.0799%" height="15" fill="rgb(213,32,32)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.9361%" y="389" width="0.0799%" height="15" fill="rgb(251,86,50)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.9361%" y="373" width="0.0799%" height="15" fill="rgb(252,92,41)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="79.9361%" y="357" width="0.0799%" height="15" fill="rgb(234,70,35)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="79.9361%" y="341" width="0.0799%" height="15" fill="rgb(210,157,19)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="79.9361%" y="325" width="0.0799%" height="15" fill="rgb(206,20,45)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="79.9361%" y="309" width="0.0799%" height="15" fill="rgb(207,34,7)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.9361%" y="293" width="0.0799%" height="15" fill="rgb(253,151,14)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="303.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="80.0160%" y="437" width="0.0799%" height="15" fill="rgb(252,1,18)" fg:x="1001" fg:w="1"/><text x="80.2660%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="79.5364%" y="469" width="0.6395%" height="15" fill="rgb(214,77,52)" fg:x="995" fg:w="8"/><text x="79.7864%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="80.0160%" y="453" width="0.1599%" height="15" fill="rgb(254,106,35)" fg:x="1001" fg:w="2"/><text x="80.2660%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="80.0959%" y="437" width="0.0799%" height="15" fill="rgb(212,67,40)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.0959%" y="421" width="0.0799%" height="15" fill="rgb(228,76,23)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.0959%" y="405" width="0.0799%" height="15" fill="rgb(250,198,5)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.0959%" y="389" width="0.0799%" height="15" fill="rgb(209,20,25)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0959%" y="373" width="0.0799%" height="15" fill="rgb(236,32,4)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.0959%" y="357" width="0.0799%" height="15" fill="rgb(215,31,6)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0959%" y="341" width="0.0799%" height="15" fill="rgb(207,186,49)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.0959%" y="325" width="0.0799%" height="15" fill="rgb(211,212,49)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0959%" y="309" width="0.0799%" height="15" fill="rgb(229,51,41)" fg:x="1002" fg:w="1"/><text x="80.3459%" y="319.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.80%)</title><rect x="79.5364%" y="485" width="0.7994%" height="15" fill="rgb(205,225,36)" fg:x="995" fg:w="10"/><text x="79.7864%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.1759%" y="469" width="0.1599%" height="15" fill="rgb(209,213,45)" fg:x="1003" fg:w="2"/><text x="80.4259%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.1759%" y="453" width="0.1599%" height="15" fill="rgb(219,35,49)" fg:x="1003" fg:w="2"/><text x="80.4259%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.1759%" y="437" width="0.1599%" height="15" fill="rgb(215,205,22)" fg:x="1003" fg:w="2"/><text x="80.4259%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.1759%" y="421" width="0.1599%" height="15" fill="rgb(248,204,34)" fg:x="1003" fg:w="2"/><text x="80.4259%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.1759%" y="405" width="0.1599%" height="15" fill="rgb(219,223,31)" fg:x="1003" fg:w="2"/><text x="80.4259%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="80.2558%" y="389" width="0.0799%" height="15" fill="rgb(236,14,8)" fg:x="1004" fg:w="1"/><text x="80.5058%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="80.2558%" y="373" width="0.0799%" height="15" fill="rgb(243,129,23)" fg:x="1004" fg:w="1"/><text x="80.5058%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.88%)</title><rect x="79.5364%" y="549" width="0.8793%" height="15" fill="rgb(205,204,5)" fg:x="995" fg:w="11"/><text x="79.7864%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="79.5364%" y="533" width="0.8793%" height="15" fill="rgb(244,115,32)" fg:x="995" fg:w="11"/><text x="79.7864%" y="543.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.88%)</title><rect x="79.5364%" y="517" width="0.8793%" height="15" fill="rgb(229,123,14)" fg:x="995" fg:w="11"/><text x="79.7864%" y="527.50"></text></g><g><title>plugins_core::build::Build::leads_to (11 samples, 0.88%)</title><rect x="79.5364%" y="501" width="0.8793%" height="15" fill="rgb(250,85,1)" fg:x="995" fg:w="11"/><text x="79.7864%" y="511.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="80.3357%" y="485" width="0.0799%" height="15" fill="rgb(209,141,54)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="80.3357%" y="469" width="0.0799%" height="15" fill="rgb(244,107,39)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3357%" y="453" width="0.0799%" height="15" fill="rgb(230,68,26)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="80.4157%" y="453" width="0.0799%" height="15" fill="rgb(220,178,33)" fg:x="1006" fg:w="1"/><text x="80.6657%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="80.4157%" y="485" width="0.1599%" height="15" fill="rgb(220,77,53)" fg:x="1006" fg:w="2"/><text x="80.6657%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="80.4157%" y="469" width="0.1599%" height="15" fill="rgb(224,108,19)" fg:x="1006" fg:w="2"/><text x="80.6657%" y="479.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="80.4956%" y="453" width="0.0799%" height="15" fill="rgb(223,203,27)" fg:x="1007" fg:w="1"/><text x="80.7456%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4956%" y="437" width="0.0799%" height="15" fill="rgb(211,32,46)" fg:x="1007" fg:w="1"/><text x="80.7456%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.7354%" y="373" width="0.0799%" height="15" fill="rgb(240,101,27)" fg:x="1010" fg:w="1"/><text x="80.9854%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="80.6555%" y="405" width="0.2398%" height="15" fill="rgb(217,210,11)" fg:x="1009" fg:w="3"/><text x="80.9055%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.6555%" y="389" width="0.2398%" height="15" fill="rgb(236,130,21)" fg:x="1009" fg:w="3"/><text x="80.9055%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8153%" y="373" width="0.0799%" height="15" fill="rgb(250,136,8)" fg:x="1011" fg:w="1"/><text x="81.0653%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8153%" y="357" width="0.0799%" height="15" fill="rgb(243,223,36)" fg:x="1011" fg:w="1"/><text x="81.0653%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8153%" y="341" width="0.0799%" height="15" fill="rgb(246,184,8)" fg:x="1011" fg:w="1"/><text x="81.0653%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="80.9752%" y="389" width="0.0799%" height="15" fill="rgb(222,158,36)" fg:x="1013" fg:w="1"/><text x="81.2252%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.9752%" y="373" width="0.0799%" height="15" fill="rgb(210,220,19)" fg:x="1013" fg:w="1"/><text x="81.2252%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9752%" y="357" width="0.0799%" height="15" fill="rgb(246,44,38)" fg:x="1013" fg:w="1"/><text x="81.2252%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="80.6555%" y="437" width="0.4796%" height="15" fill="rgb(246,186,14)" fg:x="1009" fg:w="6"/><text x="80.9055%" y="447.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (6 samples, 0.48%)</title><rect x="80.6555%" y="421" width="0.4796%" height="15" fill="rgb(233,193,20)" fg:x="1009" fg:w="6"/><text x="80.9055%" y="431.50"></text></g><g><title>kernel::model::any_entity_changes (3 samples, 0.24%)</title><rect x="80.8953%" y="405" width="0.2398%" height="15" fill="rgb(215,60,5)" fg:x="1012" fg:w="3"/><text x="81.1453%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0552%" y="389" width="0.0799%" height="15" fill="rgb(207,128,10)" fg:x="1014" fg:w="1"/><text x="81.3052%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0552%" y="373" width="0.0799%" height="15" fill="rgb(238,84,54)" fg:x="1014" fg:w="1"/><text x="81.3052%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0552%" y="357" width="0.0799%" height="15" fill="rgb(213,130,11)" fg:x="1014" fg:w="1"/><text x="81.3052%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0552%" y="341" width="0.0799%" height="15" fill="rgb(235,62,9)" fg:x="1014" fg:w="1"/><text x="81.3052%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="81.1351%" y="421" width="0.0799%" height="15" fill="rgb(222,64,24)" fg:x="1015" fg:w="1"/><text x="81.3851%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="81.1351%" y="405" width="0.0799%" height="15" fill="rgb(238,193,42)" fg:x="1015" fg:w="1"/><text x="81.3851%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.1351%" y="389" width="0.0799%" height="15" fill="rgb(243,204,46)" fg:x="1015" fg:w="1"/><text x="81.3851%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.1351%" y="373" width="0.0799%" height="15" fill="rgb(243,196,11)" fg:x="1015" fg:w="1"/><text x="81.3851%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.1351%" y="357" width="0.0799%" height="15" fill="rgb(232,77,22)" fg:x="1015" fg:w="1"/><text x="81.3851%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.2150%" y="389" width="0.0799%" height="15" fill="rgb(215,80,25)" fg:x="1016" fg:w="1"/><text x="81.4650%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="81.2150%" y="405" width="0.3197%" height="15" fill="rgb(210,173,7)" fg:x="1016" fg:w="4"/><text x="81.4650%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="81.2950%" y="389" width="0.2398%" height="15" fill="rgb(207,101,10)" fg:x="1017" fg:w="3"/><text x="81.5450%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.3749%" y="373" width="0.1599%" height="15" fill="rgb(246,57,48)" fg:x="1018" fg:w="2"/><text x="81.6249%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="81.3749%" y="357" width="0.1599%" height="15" fill="rgb(236,184,40)" fg:x="1018" fg:w="2"/><text x="81.6249%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="81.5348%" y="389" width="0.1599%" height="15" fill="rgb(210,205,13)" fg:x="1020" fg:w="2"/><text x="81.7848%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.6946%" y="389" width="0.0799%" height="15" fill="rgb(231,129,42)" fg:x="1022" fg:w="1"/><text x="81.9446%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="81.7746%" y="389" width="0.2398%" height="15" fill="rgb(220,229,54)" fg:x="1023" fg:w="3"/><text x="82.0246%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="81.7746%" y="373" width="0.2398%" height="15" fill="rgb(230,192,26)" fg:x="1023" fg:w="3"/><text x="82.0246%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.9345%" y="357" width="0.0799%" height="15" fill="rgb(253,18,30)" fg:x="1025" fg:w="1"/><text x="82.1845%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.9345%" y="341" width="0.0799%" height="15" fill="rgb(216,62,53)" fg:x="1025" fg:w="1"/><text x="82.1845%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.0144%" y="341" width="0.0799%" height="15" fill="rgb(230,79,29)" fg:x="1026" fg:w="1"/><text x="82.2644%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.0144%" y="325" width="0.0799%" height="15" fill="rgb(242,26,26)" fg:x="1026" fg:w="1"/><text x="82.2644%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="82.0144%" y="373" width="0.1599%" height="15" fill="rgb(227,125,21)" fg:x="1026" fg:w="2"/><text x="82.2644%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.0144%" y="357" width="0.1599%" height="15" fill="rgb(229,93,26)" fg:x="1026" fg:w="2"/><text x="82.2644%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0943%" y="341" width="0.0799%" height="15" fill="rgb(227,228,8)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.1743%" y="373" width="0.1599%" height="15" fill="rgb(233,56,0)" fg:x="1028" fg:w="2"/><text x="82.4243%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.2542%" y="357" width="0.0799%" height="15" fill="rgb(225,185,17)" fg:x="1029" fg:w="1"/><text x="82.5042%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="81.2150%" y="421" width="1.2790%" height="15" fill="rgb(238,202,30)" fg:x="1016" fg:w="16"/><text x="81.4650%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="81.5348%" y="405" width="0.9592%" height="15" fill="rgb(236,60,13)" fg:x="1020" fg:w="12"/><text x="81.7848%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="82.0144%" y="389" width="0.4796%" height="15" fill="rgb(244,92,0)" fg:x="1026" fg:w="6"/><text x="82.2644%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.3341%" y="373" width="0.1599%" height="15" fill="rgb(225,57,15)" fg:x="1030" fg:w="2"/><text x="82.5841%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.4141%" y="357" width="0.0799%" height="15" fill="rgb(228,5,28)" fg:x="1031" fg:w="1"/><text x="82.6641%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.4141%" y="341" width="0.0799%" height="15" fill="rgb(252,34,51)" fg:x="1031" fg:w="1"/><text x="82.6641%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.4141%" y="325" width="0.0799%" height="15" fill="rgb(235,58,7)" fg:x="1031" fg:w="1"/><text x="82.6641%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="82.4940%" y="389" width="0.1599%" height="15" fill="rgb(250,132,20)" fg:x="1032" fg:w="2"/><text x="82.7440%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6539%" y="309" width="0.0799%" height="15" fill="rgb(217,164,0)" fg:x="1034" fg:w="1"/><text x="82.9039%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="82.6539%" y="341" width="0.1599%" height="15" fill="rgb(208,220,35)" fg:x="1034" fg:w="2"/><text x="82.9039%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="82.6539%" y="325" width="0.1599%" height="15" fill="rgb(227,42,51)" fg:x="1034" fg:w="2"/><text x="82.9039%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.7338%" y="309" width="0.0799%" height="15" fill="rgb(225,146,38)" fg:x="1035" fg:w="1"/><text x="82.9838%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="82.4940%" y="421" width="0.3997%" height="15" fill="rgb(252,108,37)" fg:x="1032" fg:w="5"/><text x="82.7440%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="82.4940%" y="405" width="0.3997%" height="15" fill="rgb(244,101,24)" fg:x="1032" fg:w="5"/><text x="82.7440%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.6539%" y="389" width="0.2398%" height="15" fill="rgb(213,161,50)" fg:x="1034" fg:w="3"/><text x="82.9039%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.6539%" y="373" width="0.2398%" height="15" fill="rgb(248,159,19)" fg:x="1034" fg:w="3"/><text x="82.9039%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.6539%" y="357" width="0.2398%" height="15" fill="rgb(233,179,15)" fg:x="1034" fg:w="3"/><text x="82.9039%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8137%" y="341" width="0.0799%" height="15" fill="rgb(248,178,3)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.8137%" y="325" width="0.0799%" height="15" fill="rgb(245,190,41)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="82.9736%" y="373" width="0.2398%" height="15" fill="rgb(218,151,19)" fg:x="1038" fg:w="3"/><text x="83.2236%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1335%" y="357" width="0.0799%" height="15" fill="rgb(245,25,44)" fg:x="1040" fg:w="1"/><text x="83.3835%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2134%" y="373" width="0.0799%" height="15" fill="rgb(235,172,47)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="83.2134%" y="357" width="0.0799%" height="15" fill="rgb(246,33,12)" fg:x="1041" fg:w="1"/><text x="83.4634%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="83.2934%" y="357" width="0.0799%" height="15" fill="rgb(214,124,7)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="83.2934%" y="341" width="0.0799%" height="15" fill="rgb(246,186,18)" fg:x="1042" fg:w="1"/><text x="83.5434%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.3733%" y="341" width="0.0799%" height="15" fill="rgb(231,94,1)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.4532%" y="325" width="0.0799%" height="15" fill="rgb(208,33,48)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4532%" y="309" width="0.0799%" height="15" fill="rgb(208,195,44)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.4532%" y="293" width="0.0799%" height="15" fill="rgb(226,13,52)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4532%" y="277" width="0.0799%" height="15" fill="rgb(217,219,45)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4532%" y="261" width="0.0799%" height="15" fill="rgb(223,45,25)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="83.5332%" y="293" width="0.2398%" height="15" fill="rgb(241,163,0)" fg:x="1045" fg:w="3"/><text x="83.7832%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.6131%" y="277" width="0.1599%" height="15" fill="rgb(216,68,47)" fg:x="1046" fg:w="2"/><text x="83.8631%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6930%" y="261" width="0.0799%" height="15" fill="rgb(236,119,45)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="83.5332%" y="309" width="0.3197%" height="15" fill="rgb(209,188,24)" fg:x="1045" fg:w="4"/><text x="83.7832%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.7730%" y="293" width="0.0799%" height="15" fill="rgb(221,118,7)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.7730%" y="277" width="0.0799%" height="15" fill="rgb(213,148,43)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7730%" y="261" width="0.0799%" height="15" fill="rgb(231,21,43)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7730%" y="245" width="0.0799%" height="15" fill="rgb(232,213,43)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7730%" y="229" width="0.0799%" height="15" fill="rgb(239,145,50)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="239.50"></text></g><g><title>engine::session::Session::flush (44 samples, 3.52%)</title><rect x="80.4157%" y="549" width="3.5172%" height="15" fill="rgb(222,131,18)" fg:x="1006" fg:w="44"/><text x="80.6657%" y="559.50">eng..</text></g><g><title>engine::session::Session::save_changes (44 samples, 3.52%)</title><rect x="80.4157%" y="533" width="3.5172%" height="15" fill="rgb(243,181,13)" fg:x="1006" fg:w="44"/><text x="80.6657%" y="543.50">eng..</text></g><g><title>engine::session::state::State::close (44 samples, 3.52%)</title><rect x="80.4157%" y="517" width="3.5172%" height="15" fill="rgb(212,74,41)" fg:x="1006" fg:w="44"/><text x="80.6657%" y="527.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (44 samples, 3.52%)</title><rect x="80.4157%" y="501" width="3.5172%" height="15" fill="rgb(237,143,34)" fg:x="1006" fg:w="44"/><text x="80.6657%" y="511.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (42 samples, 3.36%)</title><rect x="80.5755%" y="485" width="3.3573%" height="15" fill="rgb(228,139,0)" fg:x="1008" fg:w="42"/><text x="80.8255%" y="495.50">eng..</text></g><g><title>core::iter::adapters::try_process (42 samples, 3.36%)</title><rect x="80.5755%" y="469" width="3.3573%" height="15" fill="rgb(227,214,11)" fg:x="1008" fg:w="42"/><text x="80.8255%" y="479.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 3.36%)</title><rect x="80.5755%" y="453" width="3.3573%" height="15" fill="rgb(228,118,39)" fg:x="1008" fg:w="42"/><text x="80.8255%" y="463.50">&lt;al..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (35 samples, 2.80%)</title><rect x="81.1351%" y="437" width="2.7978%" height="15" fill="rgb(207,117,22)" fg:x="1015" fg:w="35"/><text x="81.3851%" y="447.50">en..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 1.04%)</title><rect x="82.8937%" y="421" width="1.0392%" height="15" fill="rgb(225,91,8)" fg:x="1037" fg:w="13"/><text x="83.1437%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.04%)</title><rect x="82.8937%" y="405" width="1.0392%" height="15" fill="rgb(230,219,48)" fg:x="1037" fg:w="13"/><text x="83.1437%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.04%)</title><rect x="82.8937%" y="389" width="1.0392%" height="15" fill="rgb(244,0,23)" fg:x="1037" fg:w="13"/><text x="83.1437%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="83.2934%" y="373" width="0.6395%" height="15" fill="rgb(206,212,23)" fg:x="1042" fg:w="8"/><text x="83.5434%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="83.3733%" y="357" width="0.5596%" height="15" fill="rgb(254,62,10)" fg:x="1043" fg:w="7"/><text x="83.6233%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="83.4532%" y="341" width="0.4796%" height="15" fill="rgb(236,58,8)" fg:x="1044" fg:w="6"/><text x="83.7032%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.5332%" y="325" width="0.3997%" height="15" fill="rgb(232,212,17)" fg:x="1045" fg:w="5"/><text x="83.7832%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8529%" y="309" width="0.0799%" height="15" fill="rgb(206,132,9)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.9329%" y="485" width="0.0799%" height="15" fill="rgb(234,97,28)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.9329%" y="469" width="0.0799%" height="15" fill="rgb(254,144,9)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.9329%" y="453" width="0.0799%" height="15" fill="rgb(244,204,43)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9329%" y="437" width="0.0799%" height="15" fill="rgb(248,177,16)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.9329%" y="421" width="0.0799%" height="15" fill="rgb(219,110,15)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9329%" y="405" width="0.0799%" height="15" fill="rgb(212,203,25)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.9329%" y="389" width="0.0799%" height="15" fill="rgb(205,50,1)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9329%" y="373" width="0.0799%" height="15" fill="rgb(222,152,41)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.9329%" y="357" width="0.0799%" height="15" fill="rgb(236,83,3)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="83.9329%" y="517" width="0.2398%" height="15" fill="rgb(214,30,54)" fg:x="1050" fg:w="3"/><text x="84.1829%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="83.9329%" y="501" width="0.2398%" height="15" fill="rgb(250,117,31)" fg:x="1050" fg:w="3"/><text x="84.1829%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.0128%" y="485" width="0.1599%" height="15" fill="rgb(228,77,14)" fg:x="1051" fg:w="2"/><text x="84.2628%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.0128%" y="469" width="0.1599%" height="15" fill="rgb(241,3,28)" fg:x="1051" fg:w="2"/><text x="84.2628%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0927%" y="453" width="0.0799%" height="15" fill="rgb(221,175,52)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.0927%" y="437" width="0.0799%" height="15" fill="rgb(237,91,6)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0927%" y="421" width="0.0799%" height="15" fill="rgb(246,46,42)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0927%" y="405" width="0.0799%" height="15" fill="rgb(235,199,0)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.0927%" y="389" width="0.0799%" height="15" fill="rgb(224,44,40)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.1727%" y="517" width="0.0799%" height="15" fill="rgb(209,24,35)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1727%" y="501" width="0.0799%" height="15" fill="rgb(244,46,22)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1727%" y="485" width="0.0799%" height="15" fill="rgb(235,99,8)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.1727%" y="469" width="0.0799%" height="15" fill="rgb(218,127,36)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1727%" y="453" width="0.0799%" height="15" fill="rgb(238,47,46)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1727%" y="437" width="0.0799%" height="15" fill="rgb(233,65,17)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1727%" y="421" width="0.0799%" height="15" fill="rgb(239,22,33)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1727%" y="405" width="0.0799%" height="15" fill="rgb(243,66,43)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.1727%" y="389" width="0.0799%" height="15" fill="rgb(235,210,28)" fg:x="1053" fg:w="1"/><text x="84.4227%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2526%" y="501" width="0.0799%" height="15" fill="rgb(205,191,50)" fg:x="1054" fg:w="1"/><text x="84.5026%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.3325%" y="453" width="0.0799%" height="15" fill="rgb(251,217,19)" fg:x="1055" fg:w="1"/><text x="84.5825%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="84.2526%" y="517" width="0.2398%" height="15" fill="rgb(205,174,37)" fg:x="1054" fg:w="3"/><text x="84.5026%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.3325%" y="501" width="0.1599%" height="15" fill="rgb(212,158,42)" fg:x="1055" fg:w="2"/><text x="84.5825%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.3325%" y="485" width="0.1599%" height="15" fill="rgb(212,208,51)" fg:x="1055" fg:w="2"/><text x="84.5825%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.3325%" y="469" width="0.1599%" height="15" fill="rgb(225,198,20)" fg:x="1055" fg:w="2"/><text x="84.5825%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.4125%" y="453" width="0.0799%" height="15" fill="rgb(247,41,44)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4125%" y="437" width="0.0799%" height="15" fill="rgb(228,33,41)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4125%" y="421" width="0.0799%" height="15" fill="rgb(215,47,52)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.4125%" y="405" width="0.0799%" height="15" fill="rgb(248,106,37)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4125%" y="389" width="0.0799%" height="15" fill="rgb(238,91,29)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.4924%" y="501" width="0.0799%" height="15" fill="rgb(226,111,40)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.72%)</title><rect x="83.9329%" y="549" width="0.7194%" height="15" fill="rgb(229,159,36)" fg:x="1050" fg:w="9"/><text x="84.1829%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="83.9329%" y="533" width="0.7194%" height="15" fill="rgb(221,109,4)" fg:x="1050" fg:w="9"/><text x="84.1829%" y="543.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="84.4924%" y="517" width="0.1599%" height="15" fill="rgb(236,56,25)" fg:x="1057" fg:w="2"/><text x="84.7424%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.5723%" y="501" width="0.0799%" height="15" fill="rgb(244,113,23)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="511.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5723%" y="485" width="0.0799%" height="15" fill="rgb(249,132,2)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5723%" y="469" width="0.0799%" height="15" fill="rgb(205,185,21)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5723%" y="453" width="0.0799%" height="15" fill="rgb(245,130,2)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="84.6523%" y="469" width="0.0799%" height="15" fill="rgb(246,71,26)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="84.6523%" y="453" width="0.0799%" height="15" fill="rgb(234,194,6)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6523%" y="437" width="0.0799%" height="15" fill="rgb(206,24,32)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6523%" y="421" width="0.0799%" height="15" fill="rgb(233,7,54)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.6523%" y="405" width="0.0799%" height="15" fill="rgb(252,46,1)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.6523%" y="389" width="0.0799%" height="15" fill="rgb(216,113,53)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.6523%" y="373" width="0.0799%" height="15" fill="rgb(215,40,24)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.6523%" y="357" width="0.0799%" height="15" fill="rgb(233,222,8)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6523%" y="341" width="0.0799%" height="15" fill="rgb(248,73,28)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="351.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="84.6523%" y="549" width="0.1599%" height="15" fill="rgb(247,126,28)" fg:x="1059" fg:w="2"/><text x="84.9023%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="84.6523%" y="533" width="0.1599%" height="15" fill="rgb(242,173,54)" fg:x="1059" fg:w="2"/><text x="84.9023%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="84.6523%" y="517" width="0.1599%" height="15" fill="rgb(244,186,22)" fg:x="1059" fg:w="2"/><text x="84.9023%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="84.6523%" y="501" width="0.1599%" height="15" fill="rgb(231,187,4)" fg:x="1059" fg:w="2"/><text x="84.9023%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="84.6523%" y="485" width="0.1599%" height="15" fill="rgb(252,66,47)" fg:x="1059" fg:w="2"/><text x="84.9023%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.7322%" y="469" width="0.0799%" height="15" fill="rgb(240,228,28)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.7322%" y="453" width="0.0799%" height="15" fill="rgb(237,63,43)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="463.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="84.7322%" y="437" width="0.0799%" height="15" fill="rgb(214,1,44)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.8122%" y="453" width="0.0799%" height="15" fill="rgb(212,2,46)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.8122%" y="437" width="0.0799%" height="15" fill="rgb(213,142,5)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8122%" y="421" width="0.0799%" height="15" fill="rgb(229,135,1)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.8122%" y="405" width="0.0799%" height="15" fill="rgb(252,98,38)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8122%" y="389" width="0.0799%" height="15" fill="rgb(206,89,40)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8122%" y="373" width="0.0799%" height="15" fill="rgb(219,73,36)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8122%" y="357" width="0.0799%" height="15" fill="rgb(207,168,32)" fg:x="1061" fg:w="1"/><text x="85.0622%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="84.8122%" y="501" width="0.1599%" height="15" fill="rgb(215,113,21)" fg:x="1061" fg:w="2"/><text x="85.0622%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="84.8122%" y="485" width="0.1599%" height="15" fill="rgb(217,144,43)" fg:x="1061" fg:w="2"/><text x="85.0622%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="84.8122%" y="469" width="0.1599%" height="15" fill="rgb(249,48,50)" fg:x="1061" fg:w="2"/><text x="85.0622%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.8921%" y="453" width="0.0799%" height="15" fill="rgb(242,1,26)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8921%" y="437" width="0.0799%" height="15" fill="rgb(231,167,42)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8921%" y="421" width="0.0799%" height="15" fill="rgb(242,177,45)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="84.9720%" y="501" width="0.0799%" height="15" fill="rgb(232,121,42)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.9720%" y="485" width="0.0799%" height="15" fill="rgb(205,8,42)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="84.9720%" y="469" width="0.0799%" height="15" fill="rgb(238,199,24)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.0520%" y="469" width="0.0799%" height="15" fill="rgb(228,112,2)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.0520%" y="453" width="0.0799%" height="15" fill="rgb(215,115,33)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0520%" y="437" width="0.0799%" height="15" fill="rgb(230,209,34)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.0520%" y="421" width="0.0799%" height="15" fill="rgb(246,76,12)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0520%" y="405" width="0.0799%" height="15" fill="rgb(240,110,9)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0520%" y="389" width="0.0799%" height="15" fill="rgb(224,94,46)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.0520%" y="373" width="0.0799%" height="15" fill="rgb(247,150,22)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0520%" y="357" width="0.0799%" height="15" fill="rgb(249,85,13)" fg:x="1064" fg:w="1"/><text x="85.3020%" y="367.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="84.8122%" y="533" width="0.3997%" height="15" fill="rgb(208,77,41)" fg:x="1061" fg:w="5"/><text x="85.0622%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="84.8122%" y="517" width="0.3997%" height="15" fill="rgb(240,42,44)" fg:x="1061" fg:w="5"/><text x="85.0622%" y="527.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="85.0520%" y="501" width="0.1599%" height="15" fill="rgb(222,10,51)" fg:x="1064" fg:w="2"/><text x="85.3020%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="85.0520%" y="485" width="0.1599%" height="15" fill="rgb(208,146,53)" fg:x="1064" fg:w="2"/><text x="85.3020%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.1319%" y="469" width="0.0799%" height="15" fill="rgb(236,162,23)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.1319%" y="453" width="0.0799%" height="15" fill="rgb(218,66,21)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1319%" y="437" width="0.0799%" height="15" fill="rgb(233,6,47)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1319%" y="421" width="0.0799%" height="15" fill="rgb(236,59,51)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1319%" y="405" width="0.0799%" height="15" fill="rgb(242,12,46)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="85.1319%" y="389" width="0.0799%" height="15" fill="rgb(243,142,19)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="85.1319%" y="373" width="0.0799%" height="15" fill="rgb(217,28,17)" fg:x="1065" fg:w="1"/><text x="85.3819%" y="383.50"></text></g><g><title>plugins_core::build::Build::occupying (6 samples, 0.48%)</title><rect x="84.8122%" y="549" width="0.4796%" height="15" fill="rgb(228,2,27)" fg:x="1061" fg:w="6"/><text x="85.0622%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="85.2118%" y="533" width="0.0799%" height="15" fill="rgb(214,221,4)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.2118%" y="517" width="0.0799%" height="15" fill="rgb(224,69,26)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2118%" y="501" width="0.0799%" height="15" fill="rgb(219,70,4)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2118%" y="485" width="0.0799%" height="15" fill="rgb(218,157,39)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2118%" y="469" width="0.0799%" height="15" fill="rgb(238,36,28)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2118%" y="453" width="0.0799%" height="15" fill="rgb(232,29,0)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2118%" y="437" width="0.0799%" height="15" fill="rgb(243,138,46)" fg:x="1066" fg:w="1"/><text x="85.4618%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="85.2918%" y="501" width="0.0799%" height="15" fill="rgb(232,186,41)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.2918%" y="485" width="0.0799%" height="15" fill="rgb(252,166,17)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.2918%" y="469" width="0.0799%" height="15" fill="rgb(228,179,12)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2918%" y="453" width="0.0799%" height="15" fill="rgb(254,205,53)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2918%" y="437" width="0.0799%" height="15" fill="rgb(224,163,47)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2918%" y="421" width="0.0799%" height="15" fill="rgb(208,43,47)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2918%" y="405" width="0.0799%" height="15" fill="rgb(224,198,38)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2918%" y="389" width="0.0799%" height="15" fill="rgb(234,12,40)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.2918%" y="373" width="0.0799%" height="15" fill="rgb(237,212,39)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.2918%" y="357" width="0.0799%" height="15" fill="rgb(253,2,33)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.2918%" y="341" width="0.0799%" height="15" fill="rgb(251,29,16)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2918%" y="325" width="0.0799%" height="15" fill="rgb(214,38,29)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2918%" y="309" width="0.0799%" height="15" fill="rgb(226,226,29)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.2918%" y="293" width="0.0799%" height="15" fill="rgb(236,79,42)" fg:x="1067" fg:w="1"/><text x="85.5418%" y="303.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="85.3717%" y="485" width="0.0799%" height="15" fill="rgb(222,12,36)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.3717%" y="469" width="0.0799%" height="15" fill="rgb(232,123,44)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3717%" y="453" width="0.0799%" height="15" fill="rgb(234,93,50)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3717%" y="437" width="0.0799%" height="15" fill="rgb(210,86,49)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3717%" y="421" width="0.0799%" height="15" fill="rgb(224,91,54)" fg:x="1068" fg:w="1"/><text x="85.6217%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="85.4516%" y="485" width="0.0799%" height="15" fill="rgb(239,169,9)" fg:x="1069" fg:w="1"/><text x="85.7016%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4516%" y="469" width="0.0799%" height="15" fill="rgb(238,29,17)" fg:x="1069" fg:w="1"/><text x="85.7016%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.4516%" y="453" width="0.0799%" height="15" fill="rgb(227,160,22)" fg:x="1069" fg:w="1"/><text x="85.7016%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="85.3717%" y="501" width="0.2398%" height="15" fill="rgb(231,129,52)" fg:x="1068" fg:w="3"/><text x="85.6217%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="85.5316%" y="485" width="0.0799%" height="15" fill="rgb(241,184,9)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5316%" y="469" width="0.0799%" height="15" fill="rgb(217,43,48)" fg:x="1070" fg:w="1"/><text x="85.7816%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.6115%" y="485" width="0.0799%" height="15" fill="rgb(213,49,1)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.6115%" y="469" width="0.0799%" height="15" fill="rgb(223,79,39)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6115%" y="453" width="0.0799%" height="15" fill="rgb(228,227,46)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6115%" y="437" width="0.0799%" height="15" fill="rgb(245,89,41)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6115%" y="421" width="0.0799%" height="15" fill="rgb(253,83,21)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6115%" y="405" width="0.0799%" height="15" fill="rgb(229,116,51)" fg:x="1071" fg:w="1"/><text x="85.8615%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6914%" y="453" width="0.0799%" height="15" fill="rgb(246,67,26)" fg:x="1072" fg:w="1"/><text x="85.9414%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6914%" y="437" width="0.0799%" height="15" fill="rgb(250,117,20)" fg:x="1072" fg:w="1"/><text x="85.9414%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="85.6115%" y="501" width="0.2398%" height="15" fill="rgb(207,88,17)" fg:x="1071" fg:w="3"/><text x="85.8615%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.6914%" y="485" width="0.1599%" height="15" fill="rgb(212,98,36)" fg:x="1072" fg:w="2"/><text x="85.9414%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.6914%" y="469" width="0.1599%" height="15" fill="rgb(221,72,6)" fg:x="1072" fg:w="2"/><text x="85.9414%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7714%" y="453" width="0.0799%" height="15" fill="rgb(235,129,19)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7714%" y="437" width="0.0799%" height="15" fill="rgb(237,200,6)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.7714%" y="421" width="0.0799%" height="15" fill="rgb(239,69,54)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7714%" y="405" width="0.0799%" height="15" fill="rgb(214,68,45)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.7714%" y="389" width="0.0799%" height="15" fill="rgb(254,160,8)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.8513%" y="469" width="0.0799%" height="15" fill="rgb(215,226,31)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.8513%" y="453" width="0.0799%" height="15" fill="rgb(253,6,35)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8513%" y="437" width="0.0799%" height="15" fill="rgb(219,96,42)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8513%" y="421" width="0.0799%" height="15" fill="rgb(207,170,13)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9313%" y="437" width="0.0799%" height="15" fill="rgb(239,101,5)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9313%" y="421" width="0.0799%" height="15" fill="rgb(228,183,34)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9313%" y="405" width="0.0799%" height="15" fill="rgb(205,28,31)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9313%" y="389" width="0.0799%" height="15" fill="rgb(214,118,50)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="85.2918%" y="517" width="0.7994%" height="15" fill="rgb(213,108,51)" fg:x="1067" fg:w="10"/><text x="85.5418%" y="527.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="85.8513%" y="501" width="0.2398%" height="15" fill="rgb(238,56,37)" fg:x="1074" fg:w="3"/><text x="86.1013%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="85.8513%" y="485" width="0.2398%" height="15" fill="rgb(214,136,28)" fg:x="1074" fg:w="3"/><text x="86.1013%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.9313%" y="469" width="0.1599%" height="15" fill="rgb(221,201,54)" fg:x="1075" fg:w="2"/><text x="86.1813%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.9313%" y="453" width="0.1599%" height="15" fill="rgb(228,216,39)" fg:x="1075" fg:w="2"/><text x="86.1813%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0112%" y="437" width="0.0799%" height="15" fill="rgb(207,229,49)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0112%" y="421" width="0.0799%" height="15" fill="rgb(224,23,43)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.0112%" y="405" width="0.0799%" height="15" fill="rgb(247,97,18)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0112%" y="389" width="0.0799%" height="15" fill="rgb(232,53,32)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0112%" y="373" width="0.0799%" height="15" fill="rgb(247,38,23)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0112%" y="357" width="0.0799%" height="15" fill="rgb(228,101,52)" fg:x="1076" fg:w="1"/><text x="86.2612%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.0911%" y="421" width="0.0799%" height="15" fill="rgb(231,45,36)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (84 samples, 6.71%)</title><rect x="79.5364%" y="565" width="6.7146%" height="15" fill="rgb(221,183,50)" fg:x="995" fg:w="84"/><text x="79.7864%" y="575.50">plugins_c..</text></g><g><title>plugins_core::build::Build::wearing (12 samples, 0.96%)</title><rect x="85.2918%" y="549" width="0.9592%" height="15" fill="rgb(251,132,12)" fg:x="1067" fg:w="12"/><text x="85.5418%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.96%)</title><rect x="85.2918%" y="533" width="0.9592%" height="15" fill="rgb(252,50,16)" fg:x="1067" fg:w="12"/><text x="85.5418%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.0911%" y="517" width="0.1599%" height="15" fill="rgb(224,60,15)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.0911%" y="501" width="0.1599%" height="15" fill="rgb(254,2,34)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.0911%" y="485" width="0.1599%" height="15" fill="rgb(232,154,8)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.0911%" y="469" width="0.1599%" height="15" fill="rgb(235,190,52)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="86.0911%" y="453" width="0.1599%" height="15" fill="rgb(213,218,38)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.0911%" y="437" width="0.1599%" height="15" fill="rgb(237,50,37)" fg:x="1077" fg:w="2"/><text x="86.3411%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.1711%" y="421" width="0.0799%" height="15" fill="rgb(235,51,35)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.1711%" y="405" width="0.0799%" height="15" fill="rgb(244,40,52)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="415.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="86.2510%" y="517" width="0.0799%" height="15" fill="rgb(217,225,45)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2510%" y="501" width="0.0799%" height="15" fill="rgb(247,191,36)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2510%" y="485" width="0.0799%" height="15" fill="rgb(251,144,31)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="86.2510%" y="469" width="0.0799%" height="15" fill="rgb(227,155,41)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="86.2510%" y="533" width="0.1599%" height="15" fill="rgb(236,121,36)" fg:x="1079" fg:w="2"/><text x="86.5010%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.3309%" y="517" width="0.0799%" height="15" fill="rgb(221,128,28)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.3309%" y="501" width="0.0799%" height="15" fill="rgb(249,67,50)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.4109%" y="501" width="0.0799%" height="15" fill="rgb(241,126,38)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.4109%" y="485" width="0.0799%" height="15" fill="rgb(239,33,14)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.4109%" y="469" width="0.0799%" height="15" fill="rgb(207,221,54)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.4109%" y="453" width="0.0799%" height="15" fill="rgb(242,138,43)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.4109%" y="437" width="0.0799%" height="15" fill="rgb(231,118,19)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.4109%" y="421" width="0.0799%" height="15" fill="rgb(214,128,54)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.4908%" y="501" width="0.0799%" height="15" fill="rgb(236,136,6)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.5707%" y="501" width="0.0799%" height="15" fill="rgb(247,30,38)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.5707%" y="485" width="0.0799%" height="15" fill="rgb(249,189,40)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.5707%" y="469" width="0.0799%" height="15" fill="rgb(247,179,7)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5707%" y="453" width="0.0799%" height="15" fill="rgb(239,46,52)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5707%" y="437" width="0.0799%" height="15" fill="rgb(225,28,52)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5707%" y="421" width="0.0799%" height="15" fill="rgb(217,208,44)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5707%" y="405" width="0.0799%" height="15" fill="rgb(224,11,34)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5707%" y="389" width="0.0799%" height="15" fill="rgb(205,134,17)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.5707%" y="373" width="0.0799%" height="15" fill="rgb(237,125,9)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.5707%" y="357" width="0.0799%" height="15" fill="rgb(208,139,47)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.5707%" y="341" width="0.0799%" height="15" fill="rgb(242,5,5)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5707%" y="325" width="0.0799%" height="15" fill="rgb(218,78,2)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5707%" y="309" width="0.0799%" height="15" fill="rgb(217,75,16)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.5707%" y="293" width="0.0799%" height="15" fill="rgb(212,56,17)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.5707%" y="277" width="0.0799%" height="15" fill="rgb(228,61,29)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.5707%" y="261" width="0.0799%" height="15" fill="rgb(247,202,38)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.5707%" y="245" width="0.0799%" height="15" fill="rgb(211,216,43)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.5707%" y="229" width="0.0799%" height="15" fill="rgb(220,7,49)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="239.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="86.6507%" y="485" width="0.0799%" height="15" fill="rgb(219,158,7)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="86.6507%" y="469" width="0.0799%" height="15" fill="rgb(206,127,9)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="86.4109%" y="517" width="0.3997%" height="15" fill="rgb(206,103,43)" fg:x="1081" fg:w="5"/><text x="86.6609%" y="527.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="86.6507%" y="501" width="0.1599%" height="15" fill="rgb(240,108,41)" fg:x="1084" fg:w="2"/><text x="86.9007%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.7306%" y="485" width="0.0799%" height="15" fill="rgb(252,212,6)" fg:x="1085" fg:w="1"/><text x="86.9806%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.7306%" y="469" width="0.0799%" height="15" fill="rgb(248,105,31)" fg:x="1085" fg:w="1"/><text x="86.9806%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.7306%" y="453" width="0.0799%" height="15" fill="rgb(241,123,4)" fg:x="1085" fg:w="1"/><text x="86.9806%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7306%" y="437" width="0.0799%" height="15" fill="rgb(223,74,37)" fg:x="1085" fg:w="1"/><text x="86.9806%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.64%)</title><rect x="86.2510%" y="565" width="0.6395%" height="15" fill="rgb(251,219,28)" fg:x="1079" fg:w="8"/><text x="86.5010%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="86.2510%" y="549" width="0.6395%" height="15" fill="rgb(218,36,31)" fg:x="1079" fg:w="8"/><text x="86.5010%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="86.4109%" y="533" width="0.4796%" height="15" fill="rgb(229,40,15)" fg:x="1081" fg:w="6"/><text x="86.6609%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.8106%" y="517" width="0.0799%" height="15" fill="rgb(208,138,37)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.8106%" y="501" width="0.0799%" height="15" fill="rgb(208,40,52)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.8106%" y="485" width="0.0799%" height="15" fill="rgb(246,181,48)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8106%" y="469" width="0.0799%" height="15" fill="rgb(253,178,36)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.8106%" y="453" width="0.0799%" height="15" fill="rgb(210,170,6)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8106%" y="437" width="0.0799%" height="15" fill="rgb(243,62,22)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.8106%" y="421" width="0.0799%" height="15" fill="rgb(213,145,26)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8106%" y="405" width="0.0799%" height="15" fill="rgb(237,177,23)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8106%" y="389" width="0.0799%" height="15" fill="rgb(252,5,24)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.9704%" y="517" width="0.0799%" height="15" fill="rgb(230,108,54)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.9704%" y="501" width="0.0799%" height="15" fill="rgb(252,192,41)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9704%" y="485" width="0.0799%" height="15" fill="rgb(218,125,20)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9704%" y="469" width="0.0799%" height="15" fill="rgb(230,223,15)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9704%" y="453" width="0.0799%" height="15" fill="rgb(239,99,47)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9704%" y="437" width="0.0799%" height="15" fill="rgb(222,214,23)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9704%" y="421" width="0.0799%" height="15" fill="rgb(250,98,43)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.9704%" y="405" width="0.0799%" height="15" fill="rgb(226,140,11)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.9704%" y="389" width="0.0799%" height="15" fill="rgb(239,2,22)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.9704%" y="373" width="0.0799%" height="15" fill="rgb(209,106,26)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9704%" y="357" width="0.0799%" height="15" fill="rgb(209,135,11)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9704%" y="341" width="0.0799%" height="15" fill="rgb(241,58,6)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.9704%" y="325" width="0.0799%" height="15" fill="rgb(214,78,1)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.9704%" y="309" width="0.0799%" height="15" fill="rgb(229,135,33)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.9704%" y="293" width="0.0799%" height="15" fill="rgb(245,87,50)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.9704%" y="277" width="0.0799%" height="15" fill="rgb(222,222,8)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9704%" y="261" width="0.0799%" height="15" fill="rgb(214,97,50)" fg:x="1088" fg:w="1"/><text x="87.2204%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0504%" y="437" width="0.0799%" height="15" fill="rgb(244,161,51)" fg:x="1089" fg:w="1"/><text x="87.3004%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.0504%" y="421" width="0.0799%" height="15" fill="rgb(225,17,4)" fg:x="1089" fg:w="1"/><text x="87.3004%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0504%" y="405" width="0.0799%" height="15" fill="rgb(238,10,13)" fg:x="1089" fg:w="1"/><text x="87.3004%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0504%" y="389" width="0.0799%" height="15" fill="rgb(239,169,14)" fg:x="1089" fg:w="1"/><text x="87.3004%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0504%" y="373" width="0.0799%" height="15" fill="rgb(213,105,25)" fg:x="1089" fg:w="1"/><text x="87.3004%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1303%" y="437" width="0.0799%" height="15" fill="rgb(233,4,17)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.1303%" y="421" width="0.0799%" height="15" fill="rgb(212,5,35)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="87.0504%" y="501" width="0.2398%" height="15" fill="rgb(216,3,14)" fg:x="1089" fg:w="3"/><text x="87.3004%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="87.0504%" y="485" width="0.2398%" height="15" fill="rgb(240,105,33)" fg:x="1089" fg:w="3"/><text x="87.3004%" y="495.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="87.0504%" y="469" width="0.2398%" height="15" fill="rgb(216,73,0)" fg:x="1089" fg:w="3"/><text x="87.3004%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="87.0504%" y="453" width="0.2398%" height="15" fill="rgb(217,153,48)" fg:x="1089" fg:w="3"/><text x="87.3004%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2102%" y="437" width="0.0799%" height="15" fill="rgb(218,180,8)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.2102%" y="421" width="0.0799%" height="15" fill="rgb(252,168,2)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.2102%" y="405" width="0.0799%" height="15" fill="rgb(224,116,33)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2102%" y="389" width="0.0799%" height="15" fill="rgb(229,205,17)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.2102%" y="373" width="0.0799%" height="15" fill="rgb(234,1,41)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.2102%" y="357" width="0.0799%" height="15" fill="rgb(244,185,8)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.2102%" y="341" width="0.0799%" height="15" fill="rgb(248,51,21)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="87.0504%" y="517" width="0.3197%" height="15" fill="rgb(248,157,31)" fg:x="1089" fg:w="4"/><text x="87.3004%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2902%" y="501" width="0.0799%" height="15" fill="rgb(210,34,47)" fg:x="1092" fg:w="1"/><text x="87.5402%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.2902%" y="485" width="0.0799%" height="15" fill="rgb(227,139,53)" fg:x="1092" fg:w="1"/><text x="87.5402%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2902%" y="469" width="0.0799%" height="15" fill="rgb(232,211,37)" fg:x="1092" fg:w="1"/><text x="87.5402%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.3701%" y="501" width="0.0799%" height="15" fill="rgb(236,133,10)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.3701%" y="485" width="0.0799%" height="15" fill="rgb(243,202,25)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3701%" y="469" width="0.0799%" height="15" fill="rgb(224,59,9)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3701%" y="453" width="0.0799%" height="15" fill="rgb(206,146,16)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.3701%" y="437" width="0.0799%" height="15" fill="rgb(220,47,2)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3701%" y="421" width="0.0799%" height="15" fill="rgb(225,124,51)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3701%" y="405" width="0.0799%" height="15" fill="rgb(241,220,50)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3701%" y="389" width="0.0799%" height="15" fill="rgb(232,168,5)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="87.3701%" y="517" width="0.1599%" height="15" fill="rgb(243,90,22)" fg:x="1093" fg:w="2"/><text x="87.6201%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.4500%" y="501" width="0.0799%" height="15" fill="rgb(223,153,32)" fg:x="1094" fg:w="1"/><text x="87.7000%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.4500%" y="485" width="0.0799%" height="15" fill="rgb(243,124,20)" fg:x="1094" fg:w="1"/><text x="87.7000%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.4500%" y="469" width="0.0799%" height="15" fill="rgb(246,168,39)" fg:x="1094" fg:w="1"/><text x="87.7000%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.4500%" y="453" width="0.0799%" height="15" fill="rgb(222,165,54)" fg:x="1094" fg:w="1"/><text x="87.7000%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.4500%" y="437" width="0.0799%" height="15" fill="rgb(251,142,27)" fg:x="1094" fg:w="1"/><text x="87.7000%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.4500%" y="421" width="0.0799%" height="15" fill="rgb(207,168,50)" fg:x="1094" fg:w="1"/><text x="87.7000%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.4500%" y="405" width="0.0799%" height="15" fill="rgb(250,139,25)" fg:x="1094" fg:w="1"/><text x="87.7000%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="86.9704%" y="533" width="0.6395%" height="15" fill="rgb(214,194,48)" fg:x="1088" fg:w="8"/><text x="87.2204%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="87.5300%" y="517" width="0.0799%" height="15" fill="rgb(227,138,47)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="527.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="87.5300%" y="501" width="0.0799%" height="15" fill="rgb(250,162,5)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="86.9704%" y="549" width="0.7194%" height="15" fill="rgb(229,74,25)" fg:x="1088" fg:w="9"/><text x="87.2204%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.6099%" y="533" width="0.0799%" height="15" fill="rgb(221,124,34)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.6099%" y="517" width="0.0799%" height="15" fill="rgb(225,94,25)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.6099%" y="501" width="0.0799%" height="15" fill="rgb(210,100,12)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6099%" y="485" width="0.0799%" height="15" fill="rgb(206,62,48)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.6099%" y="469" width="0.0799%" height="15" fill="rgb(222,181,9)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6099%" y="453" width="0.0799%" height="15" fill="rgb(248,42,38)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6099%" y="437" width="0.0799%" height="15" fill="rgb(213,40,6)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="87.6898%" y="517" width="0.0799%" height="15" fill="rgb(211,108,15)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.6898%" y="501" width="0.0799%" height="15" fill="rgb(249,62,9)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.6898%" y="485" width="0.0799%" height="15" fill="rgb(233,26,54)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.6898%" y="469" width="0.0799%" height="15" fill="rgb(210,175,26)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.6898%" y="453" width="0.0799%" height="15" fill="rgb(210,43,33)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.6898%" y="437" width="0.0799%" height="15" fill="rgb(224,46,17)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="87.6898%" y="421" width="0.0799%" height="15" fill="rgb(254,24,38)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="87.6898%" y="405" width="0.0799%" height="15" fill="rgb(248,32,0)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="415.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="87.6898%" y="533" width="0.1599%" height="15" fill="rgb(224,37,41)" fg:x="1097" fg:w="2"/><text x="87.9398%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.7698%" y="517" width="0.0799%" height="15" fill="rgb(252,70,22)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.7698%" y="501" width="0.0799%" height="15" fill="rgb(241,123,50)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.7698%" y="485" width="0.0799%" height="15" fill="rgb(246,138,33)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (149 samples, 11.91%)</title><rect x="76.0192%" y="581" width="11.9105%" height="15" fill="rgb(218,39,32)" fg:x="951" fg:w="149"/><text x="76.2692%" y="591.50">&lt;tests::HoldingKey..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (13 samples, 1.04%)</title><rect x="86.8905%" y="565" width="1.0392%" height="15" fill="rgb(241,229,10)" fg:x="1087" fg:w="13"/><text x="87.1405%" y="575.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="87.6898%" y="549" width="0.2398%" height="15" fill="rgb(212,160,10)" fg:x="1097" fg:w="3"/><text x="87.9398%" y="559.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="87.8497%" y="533" width="0.0799%" height="15" fill="rgb(227,48,51)" fg:x="1099" fg:w="1"/><text x="88.0997%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="87.9297%" y="565" width="0.0799%" height="15" fill="rgb(238,159,21)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9297%" y="549" width="0.0799%" height="15" fill="rgb(216,1,10)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.9297%" y="533" width="0.0799%" height="15" fill="rgb(209,228,25)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.9297%" y="517" width="0.0799%" height="15" fill="rgb(234,160,10)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="88.0096%" y="565" width="0.0799%" height="15" fill="rgb(212,66,25)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="575.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="88.0096%" y="549" width="0.0799%" height="15" fill="rgb(254,121,18)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="559.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="88.0096%" y="533" width="0.0799%" height="15" fill="rgb(219,127,1)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="543.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="88.0096%" y="517" width="0.0799%" height="15" fill="rgb(219,224,42)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="88.0096%" y="501" width="0.0799%" height="15" fill="rgb(253,130,22)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="88.0096%" y="485" width="0.0799%" height="15" fill="rgb(253,39,28)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="88.0096%" y="469" width="0.0799%" height="15" fill="rgb(231,126,37)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="479.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="88.0096%" y="453" width="0.0799%" height="15" fill="rgb(251,145,14)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="88.0895%" y="501" width="0.0799%" height="15" fill="rgb(229,164,30)" fg:x="1102" fg:w="1"/><text x="88.3395%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="88.0895%" y="533" width="0.1599%" height="15" fill="rgb(233,227,54)" fg:x="1102" fg:w="2"/><text x="88.3395%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="88.0895%" y="517" width="0.1599%" height="15" fill="rgb(240,94,22)" fg:x="1102" fg:w="2"/><text x="88.3395%" y="527.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="88.1695%" y="501" width="0.0799%" height="15" fill="rgb(217,56,16)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="511.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="88.1695%" y="485" width="0.0799%" height="15" fill="rgb(229,133,38)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.2494%" y="453" width="0.0799%" height="15" fill="rgb(225,139,35)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.2494%" y="437" width="0.0799%" height="15" fill="rgb(223,100,16)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.2494%" y="421" width="0.0799%" height="15" fill="rgb(207,43,50)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.2494%" y="405" width="0.0799%" height="15" fill="rgb(237,221,9)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.2494%" y="389" width="0.0799%" height="15" fill="rgb(236,134,24)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="88.2494%" y="373" width="0.0799%" height="15" fill="rgb(222,173,4)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.2494%" y="357" width="0.0799%" height="15" fill="rgb(234,144,52)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.2494%" y="341" width="0.0799%" height="15" fill="rgb(223,41,7)" fg:x="1104" fg:w="1"/><text x="88.4994%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.3293%" y="373" width="0.0799%" height="15" fill="rgb(226,143,9)" fg:x="1105" fg:w="1"/><text x="88.5793%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.4093%" y="373" width="0.0799%" height="15" fill="rgb(234,43,37)" fg:x="1106" fg:w="1"/><text x="88.6593%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4093%" y="357" width="0.0799%" height="15" fill="rgb(224,188,11)" fg:x="1106" fg:w="1"/><text x="88.6593%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="88.3293%" y="437" width="0.2398%" height="15" fill="rgb(233,113,28)" fg:x="1105" fg:w="3"/><text x="88.5793%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.3293%" y="421" width="0.2398%" height="15" fill="rgb(215,16,1)" fg:x="1105" fg:w="3"/><text x="88.5793%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="88.3293%" y="405" width="0.2398%" height="15" fill="rgb(238,74,38)" fg:x="1105" fg:w="3"/><text x="88.5793%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.3293%" y="389" width="0.2398%" height="15" fill="rgb(221,66,35)" fg:x="1105" fg:w="3"/><text x="88.5793%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.4892%" y="373" width="0.0799%" height="15" fill="rgb(251,225,2)" fg:x="1107" fg:w="1"/><text x="88.7392%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.4892%" y="357" width="0.0799%" height="15" fill="rgb(240,169,18)" fg:x="1107" fg:w="1"/><text x="88.7392%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.4892%" y="341" width="0.0799%" height="15" fill="rgb(243,130,50)" fg:x="1107" fg:w="1"/><text x="88.7392%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4892%" y="325" width="0.0799%" height="15" fill="rgb(228,75,13)" fg:x="1107" fg:w="1"/><text x="88.7392%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6491%" y="405" width="0.0799%" height="15" fill="rgb(252,95,35)" fg:x="1109" fg:w="1"/><text x="88.8991%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6491%" y="389" width="0.0799%" height="15" fill="rgb(222,180,54)" fg:x="1109" fg:w="1"/><text x="88.8991%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6491%" y="373" width="0.0799%" height="15" fill="rgb(250,110,34)" fg:x="1109" fg:w="1"/><text x="88.8991%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="88.5691%" y="437" width="0.3997%" height="15" fill="rgb(208,100,21)" fg:x="1108" fg:w="5"/><text x="88.8191%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="88.5691%" y="421" width="0.3997%" height="15" fill="rgb(209,123,47)" fg:x="1108" fg:w="5"/><text x="88.8191%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="88.7290%" y="405" width="0.2398%" height="15" fill="rgb(237,147,9)" fg:x="1110" fg:w="3"/><text x="88.9790%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.8090%" y="389" width="0.1599%" height="15" fill="rgb(228,206,23)" fg:x="1111" fg:w="2"/><text x="89.0590%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.8090%" y="373" width="0.1599%" height="15" fill="rgb(217,174,46)" fg:x="1111" fg:w="2"/><text x="89.0590%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.8889%" y="357" width="0.0799%" height="15" fill="rgb(231,126,21)" fg:x="1112" fg:w="1"/><text x="89.1389%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.8889%" y="341" width="0.0799%" height="15" fill="rgb(245,26,1)" fg:x="1112" fg:w="1"/><text x="89.1389%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8889%" y="325" width="0.0799%" height="15" fill="rgb(224,138,39)" fg:x="1112" fg:w="1"/><text x="89.1389%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.9688%" y="373" width="0.0799%" height="15" fill="rgb(208,97,3)" fg:x="1113" fg:w="1"/><text x="89.2188%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.9688%" y="357" width="0.0799%" height="15" fill="rgb(222,77,29)" fg:x="1113" fg:w="1"/><text x="89.2188%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.88%)</title><rect x="88.2494%" y="485" width="0.8793%" height="15" fill="rgb(243,188,36)" fg:x="1104" fg:w="11"/><text x="88.4994%" y="495.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (11 samples, 0.88%)</title><rect x="88.2494%" y="469" width="0.8793%" height="15" fill="rgb(218,214,3)" fg:x="1104" fg:w="11"/><text x="88.4994%" y="479.50"></text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.80%)</title><rect x="88.3293%" y="453" width="0.7994%" height="15" fill="rgb(211,183,45)" fg:x="1105" fg:w="10"/><text x="88.5793%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="88.9688%" y="437" width="0.1599%" height="15" fill="rgb(230,218,25)" fg:x="1113" fg:w="2"/><text x="89.2188%" y="447.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="88.9688%" y="421" width="0.1599%" height="15" fill="rgb(233,86,6)" fg:x="1113" fg:w="2"/><text x="89.2188%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="88.9688%" y="405" width="0.1599%" height="15" fill="rgb(220,59,24)" fg:x="1113" fg:w="2"/><text x="89.2188%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.9688%" y="389" width="0.1599%" height="15" fill="rgb(227,60,1)" fg:x="1113" fg:w="2"/><text x="89.2188%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0488%" y="373" width="0.0799%" height="15" fill="rgb(216,212,54)" fg:x="1114" fg:w="1"/><text x="89.2988%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="89.1287%" y="453" width="0.1599%" height="15" fill="rgb(227,81,54)" fg:x="1115" fg:w="2"/><text x="89.3787%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.1287%" y="437" width="0.1599%" height="15" fill="rgb(206,204,43)" fg:x="1115" fg:w="2"/><text x="89.3787%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.2086%" y="421" width="0.0799%" height="15" fill="rgb(219,29,26)" fg:x="1116" fg:w="1"/><text x="89.4586%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.2086%" y="405" width="0.0799%" height="15" fill="rgb(252,40,36)" fg:x="1116" fg:w="1"/><text x="89.4586%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.2886%" y="437" width="0.0799%" height="15" fill="rgb(224,205,39)" fg:x="1117" fg:w="1"/><text x="89.5386%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.2886%" y="421" width="0.0799%" height="15" fill="rgb(222,13,21)" fg:x="1117" fg:w="1"/><text x="89.5386%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.3685%" y="437" width="0.1599%" height="15" fill="rgb(243,139,6)" fg:x="1118" fg:w="2"/><text x="89.6185%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.4484%" y="421" width="0.0799%" height="15" fill="rgb(237,101,11)" fg:x="1119" fg:w="1"/><text x="89.6984%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.4484%" y="405" width="0.0799%" height="15" fill="rgb(254,49,28)" fg:x="1119" fg:w="1"/><text x="89.6984%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.4484%" y="389" width="0.0799%" height="15" fill="rgb(223,41,21)" fg:x="1119" fg:w="1"/><text x="89.6984%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.5284%" y="421" width="0.0799%" height="15" fill="rgb(225,103,29)" fg:x="1120" fg:w="1"/><text x="89.7784%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.5284%" y="405" width="0.0799%" height="15" fill="rgb(244,82,43)" fg:x="1120" fg:w="1"/><text x="89.7784%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.5284%" y="389" width="0.0799%" height="15" fill="rgb(217,39,3)" fg:x="1120" fg:w="1"/><text x="89.7784%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="89.6083%" y="421" width="0.2398%" height="15" fill="rgb(239,128,25)" fg:x="1121" fg:w="3"/><text x="89.8583%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.6882%" y="405" width="0.1599%" height="15" fill="rgb(210,192,37)" fg:x="1122" fg:w="2"/><text x="89.9382%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.7682%" y="389" width="0.0799%" height="15" fill="rgb(219,98,18)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.7682%" y="373" width="0.0799%" height="15" fill="rgb(224,228,38)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.7682%" y="357" width="0.0799%" height="15" fill="rgb(241,129,43)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.7682%" y="341" width="0.0799%" height="15" fill="rgb(223,8,51)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.7682%" y="325" width="0.0799%" height="15" fill="rgb(233,76,24)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="89.5284%" y="437" width="0.3997%" height="15" fill="rgb(219,115,10)" fg:x="1120" fg:w="5"/><text x="89.7784%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8481%" y="421" width="0.0799%" height="15" fill="rgb(222,137,12)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.8481%" y="405" width="0.0799%" height="15" fill="rgb(216,192,16)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.8481%" y="389" width="0.0799%" height="15" fill="rgb(247,6,27)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="89.1287%" y="469" width="0.9592%" height="15" fill="rgb(254,39,44)" fg:x="1115" fg:w="12"/><text x="89.3787%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="89.2886%" y="453" width="0.7994%" height="15" fill="rgb(251,116,35)" fg:x="1117" fg:w="10"/><text x="89.5386%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.9281%" y="437" width="0.1599%" height="15" fill="rgb(208,61,44)" fg:x="1125" fg:w="2"/><text x="90.1781%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="89.9281%" y="421" width="0.1599%" height="15" fill="rgb(250,34,5)" fg:x="1125" fg:w="2"/><text x="90.1781%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.0080%" y="405" width="0.0799%" height="15" fill="rgb(241,40,15)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.0080%" y="389" width="0.0799%" height="15" fill="rgb(229,182,2)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.0080%" y="373" width="0.0799%" height="15" fill="rgb(244,148,52)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.0080%" y="357" width="0.0799%" height="15" fill="rgb(225,211,4)" fg:x="1126" fg:w="1"/><text x="90.2580%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0879%" y="437" width="0.0799%" height="15" fill="rgb(208,222,47)" fg:x="1127" fg:w="1"/><text x="90.3379%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.1679%" y="437" width="0.0799%" height="15" fill="rgb(233,162,0)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.2478%" y="405" width="0.0799%" height="15" fill="rgb(241,54,13)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2478%" y="389" width="0.0799%" height="15" fill="rgb(213,89,18)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="90.0879%" y="469" width="0.3197%" height="15" fill="rgb(215,170,37)" fg:x="1127" fg:w="4"/><text x="90.3379%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="90.0879%" y="453" width="0.3197%" height="15" fill="rgb(216,133,15)" fg:x="1127" fg:w="4"/><text x="90.3379%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.2478%" y="437" width="0.1599%" height="15" fill="rgb(230,42,19)" fg:x="1129" fg:w="2"/><text x="90.4978%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.2478%" y="421" width="0.1599%" height="15" fill="rgb(221,103,41)" fg:x="1129" fg:w="2"/><text x="90.4978%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.3277%" y="405" width="0.0799%" height="15" fill="rgb(220,142,31)" fg:x="1130" fg:w="1"/><text x="90.5777%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.3277%" y="389" width="0.0799%" height="15" fill="rgb(239,218,4)" fg:x="1130" fg:w="1"/><text x="90.5777%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.3277%" y="373" width="0.0799%" height="15" fill="rgb(232,16,4)" fg:x="1130" fg:w="1"/><text x="90.5777%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.4876%" y="389" width="0.0799%" height="15" fill="rgb(226,213,25)" fg:x="1132" fg:w="1"/><text x="90.7376%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="90.5675%" y="373" width="0.1599%" height="15" fill="rgb(235,135,19)" fg:x="1133" fg:w="2"/><text x="90.8175%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6475%" y="357" width="0.0799%" height="15" fill="rgb(240,107,29)" fg:x="1134" fg:w="1"/><text x="90.8975%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7274%" y="357" width="0.0799%" height="15" fill="rgb(206,164,44)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.8074%" y="341" width="0.0799%" height="15" fill="rgb(210,23,48)" fg:x="1136" fg:w="1"/><text x="91.0574%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8074%" y="325" width="0.0799%" height="15" fill="rgb(212,138,25)" fg:x="1136" fg:w="1"/><text x="91.0574%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="90.4077%" y="437" width="0.5596%" height="15" fill="rgb(224,152,3)" fg:x="1131" fg:w="7"/><text x="90.6577%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="90.4077%" y="421" width="0.5596%" height="15" fill="rgb(214,38,23)" fg:x="1131" fg:w="7"/><text x="90.6577%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="90.4077%" y="405" width="0.5596%" height="15" fill="rgb(215,161,10)" fg:x="1131" fg:w="7"/><text x="90.6577%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="90.5675%" y="389" width="0.3997%" height="15" fill="rgb(240,185,7)" fg:x="1133" fg:w="5"/><text x="90.8175%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.7274%" y="373" width="0.2398%" height="15" fill="rgb(244,104,25)" fg:x="1135" fg:w="3"/><text x="90.9774%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.8074%" y="357" width="0.1599%" height="15" fill="rgb(242,140,44)" fg:x="1136" fg:w="2"/><text x="91.0574%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="90.8873%" y="341" width="0.0799%" height="15" fill="rgb(245,30,19)" fg:x="1137" fg:w="1"/><text x="91.1373%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="90.4077%" y="453" width="0.7194%" height="15" fill="rgb(219,208,35)" fg:x="1131" fg:w="9"/><text x="90.6577%" y="463.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="90.9672%" y="437" width="0.1599%" height="15" fill="rgb(235,200,7)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.9672%" y="421" width="0.1599%" height="15" fill="rgb(220,193,10)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.9672%" y="405" width="0.1599%" height="15" fill="rgb(212,216,39)" fg:x="1138" fg:w="2"/><text x="91.2172%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1271%" y="421" width="0.0799%" height="15" fill="rgb(212,134,19)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2070%" y="421" width="0.0799%" height="15" fill="rgb(230,57,24)" fg:x="1141" fg:w="1"/><text x="91.4570%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2070%" y="405" width="0.0799%" height="15" fill="rgb(238,209,37)" fg:x="1141" fg:w="1"/><text x="91.4570%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.2070%" y="389" width="0.0799%" height="15" fill="rgb(247,11,45)" fg:x="1141" fg:w="1"/><text x="91.4570%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="91.2870%" y="421" width="0.0799%" height="15" fill="rgb(222,126,6)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.2870%" y="405" width="0.0799%" height="15" fill="rgb(245,77,24)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.2870%" y="389" width="0.0799%" height="15" fill="rgb(227,14,24)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5268%" y="405" width="0.0799%" height="15" fill="rgb(211,112,42)" fg:x="1145" fg:w="1"/><text x="91.7768%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5268%" y="389" width="0.0799%" height="15" fill="rgb(230,103,42)" fg:x="1145" fg:w="1"/><text x="91.7768%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.6067%" y="373" width="0.0799%" height="15" fill="rgb(228,125,42)" fg:x="1146" fg:w="1"/><text x="91.8567%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="91.6067%" y="357" width="0.0799%" height="15" fill="rgb(243,33,6)" fg:x="1146" fg:w="1"/><text x="91.8567%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="91.6067%" y="341" width="0.0799%" height="15" fill="rgb(231,2,40)" fg:x="1146" fg:w="1"/><text x="91.8567%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.6867%" y="357" width="0.0799%" height="15" fill="rgb(224,200,53)" fg:x="1147" fg:w="1"/><text x="91.9367%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="91.7666%" y="341" width="0.2398%" height="15" fill="rgb(215,116,36)" fg:x="1148" fg:w="3"/><text x="92.0166%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.8465%" y="325" width="0.1599%" height="15" fill="rgb(240,23,51)" fg:x="1149" fg:w="2"/><text x="92.0965%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.8465%" y="309" width="0.1599%" height="15" fill="rgb(221,72,5)" fg:x="1149" fg:w="2"/><text x="92.0965%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="92.0064%" y="325" width="0.2398%" height="15" fill="rgb(245,142,9)" fg:x="1151" fg:w="3"/><text x="92.2564%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.0863%" y="309" width="0.1599%" height="15" fill="rgb(207,34,16)" fg:x="1152" fg:w="2"/><text x="92.3363%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1663%" y="293" width="0.0799%" height="15" fill="rgb(252,101,12)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1663%" y="277" width="0.0799%" height="15" fill="rgb(239,89,37)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="91.7666%" y="357" width="0.5596%" height="15" fill="rgb(252,227,37)" fg:x="1148" fg:w="7"/><text x="92.0166%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="92.0064%" y="341" width="0.3197%" height="15" fill="rgb(212,164,17)" fg:x="1151" fg:w="4"/><text x="92.2564%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2462%" y="325" width="0.0799%" height="15" fill="rgb(240,86,13)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="335.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="91.1271%" y="453" width="1.2790%" height="15" fill="rgb(233,183,32)" fg:x="1140" fg:w="16"/><text x="91.3771%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="91.1271%" y="437" width="1.2790%" height="15" fill="rgb(205,201,38)" fg:x="1140" fg:w="16"/><text x="91.3771%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="91.3669%" y="421" width="1.0392%" height="15" fill="rgb(210,122,38)" fg:x="1143" fg:w="13"/><text x="91.6169%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="91.6067%" y="405" width="0.7994%" height="15" fill="rgb(241,174,26)" fg:x="1146" fg:w="10"/><text x="91.8567%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="91.6067%" y="389" width="0.7994%" height="15" fill="rgb(219,89,7)" fg:x="1146" fg:w="10"/><text x="91.8567%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="91.6867%" y="373" width="0.7194%" height="15" fill="rgb(246,9,24)" fg:x="1147" fg:w="9"/><text x="91.9367%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3261%" y="357" width="0.0799%" height="15" fill="rgb(205,132,21)" fg:x="1155" fg:w="1"/><text x="92.5761%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.5659%" y="325" width="0.1599%" height="15" fill="rgb(210,11,17)" fg:x="1158" fg:w="2"/><text x="92.8159%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.5659%" y="309" width="0.1599%" height="15" fill="rgb(226,138,14)" fg:x="1158" fg:w="2"/><text x="92.8159%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.6459%" y="293" width="0.0799%" height="15" fill="rgb(224,108,44)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6459%" y="277" width="0.0799%" height="15" fill="rgb(247,114,36)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="92.5659%" y="357" width="0.2398%" height="15" fill="rgb(231,183,14)" fg:x="1158" fg:w="3"/><text x="92.8159%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.5659%" y="341" width="0.2398%" height="15" fill="rgb(218,168,4)" fg:x="1158" fg:w="3"/><text x="92.8159%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.7258%" y="325" width="0.0799%" height="15" fill="rgb(210,8,3)" fg:x="1160" fg:w="1"/><text x="92.9758%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7258%" y="309" width="0.0799%" height="15" fill="rgb(216,165,0)" fg:x="1160" fg:w="1"/><text x="92.9758%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="92.4061%" y="389" width="0.5596%" height="15" fill="rgb(245,120,5)" fg:x="1156" fg:w="7"/><text x="92.6561%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="92.5659%" y="373" width="0.3997%" height="15" fill="rgb(249,121,32)" fg:x="1158" fg:w="5"/><text x="92.8159%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="92.8058%" y="357" width="0.1599%" height="15" fill="rgb(211,55,33)" fg:x="1161" fg:w="2"/><text x="93.0558%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="92.8058%" y="341" width="0.1599%" height="15" fill="rgb(254,46,35)" fg:x="1161" fg:w="2"/><text x="93.0558%" y="351.50"></text></g><g><title>engine::session::Session::close (65 samples, 5.20%)</title><rect x="87.9297%" y="581" width="5.1958%" height="15" fill="rgb(213,213,19)" fg:x="1100" fg:w="65"/><text x="88.1797%" y="591.50">engine..</text></g><g><title>engine::session::state::State::close (63 samples, 5.04%)</title><rect x="88.0895%" y="565" width="5.0360%" height="15" fill="rgb(207,152,44)" fg:x="1102" fg:w="63"/><text x="88.3395%" y="575.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (63 samples, 5.04%)</title><rect x="88.0895%" y="549" width="5.0360%" height="15" fill="rgb(227,195,36)" fg:x="1102" fg:w="63"/><text x="88.3395%" y="559.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (61 samples, 4.88%)</title><rect x="88.2494%" y="533" width="4.8761%" height="15" fill="rgb(210,137,36)" fg:x="1104" fg:w="61"/><text x="88.4994%" y="543.50">engine..</text></g><g><title>core::iter::adapters::try_process (61 samples, 4.88%)</title><rect x="88.2494%" y="517" width="4.8761%" height="15" fill="rgb(253,47,47)" fg:x="1104" fg:w="61"/><text x="88.4994%" y="527.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (61 samples, 4.88%)</title><rect x="88.2494%" y="501" width="4.8761%" height="15" fill="rgb(230,147,18)" fg:x="1104" fg:w="61"/><text x="88.4994%" y="511.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (50 samples, 4.00%)</title><rect x="89.1287%" y="485" width="3.9968%" height="15" fill="rgb(247,33,49)" fg:x="1115" fg:w="50"/><text x="89.3787%" y="495.50">engi..</text></g><g><title>kernel::model::any_entity_changes (34 samples, 2.72%)</title><rect x="90.4077%" y="469" width="2.7178%" height="15" fill="rgb(239,26,29)" fg:x="1131" fg:w="34"/><text x="90.6577%" y="479.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="92.4061%" y="453" width="0.7194%" height="15" fill="rgb(245,145,52)" fg:x="1156" fg:w="9"/><text x="92.6561%" y="463.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="92.4061%" y="437" width="0.7194%" height="15" fill="rgb(224,139,32)" fg:x="1156" fg:w="9"/><text x="92.6561%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="92.4061%" y="421" width="0.7194%" height="15" fill="rgb(238,202,19)" fg:x="1156" fg:w="9"/><text x="92.6561%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="92.4061%" y="405" width="0.7194%" height="15" fill="rgb(249,211,53)" fg:x="1156" fg:w="9"/><text x="92.6561%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.9656%" y="389" width="0.1599%" height="15" fill="rgb(237,229,33)" fg:x="1163" fg:w="2"/><text x="93.2156%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.9656%" y="373" width="0.1599%" height="15" fill="rgb(208,97,40)" fg:x="1163" fg:w="2"/><text x="93.2156%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="93.0456%" y="357" width="0.0799%" height="15" fill="rgb(254,36,16)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="367.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (1 samples, 0.08%)</title><rect x="93.2054%" y="469" width="0.0799%" height="15" fill="rgb(221,7,12)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="479.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="93.2054%" y="453" width="0.0799%" height="15" fill="rgb(205,11,12)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="463.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (1 samples, 0.08%)</title><rect x="93.2054%" y="437" width="0.0799%" height="15" fill="rgb(227,72,28)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="93.2054%" y="421" width="0.0799%" height="15" fill="rgb(228,7,34)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="93.2054%" y="405" width="0.0799%" height="15" fill="rgb(230,52,42)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="93.2054%" y="389" width="0.0799%" height="15" fill="rgb(219,177,53)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.2054%" y="373" width="0.0799%" height="15" fill="rgb(243,196,34)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.2054%" y="357" width="0.0799%" height="15" fill="rgb(213,66,49)" fg:x="1166" fg:w="1"/><text x="93.4554%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2854%" y="389" width="0.0799%" height="15" fill="rgb(233,11,50)" fg:x="1167" fg:w="1"/><text x="93.5354%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.2854%" y="373" width="0.0799%" height="15" fill="rgb(235,190,6)" fg:x="1167" fg:w="1"/><text x="93.5354%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2854%" y="357" width="0.0799%" height="15" fill="rgb(212,64,44)" fg:x="1167" fg:w="1"/><text x="93.5354%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2854%" y="341" width="0.0799%" height="15" fill="rgb(206,95,44)" fg:x="1167" fg:w="1"/><text x="93.5354%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="93.2854%" y="421" width="0.1599%" height="15" fill="rgb(227,136,25)" fg:x="1167" fg:w="2"/><text x="93.5354%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.2854%" y="405" width="0.1599%" height="15" fill="rgb(206,178,17)" fg:x="1167" fg:w="2"/><text x="93.5354%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.3653%" y="389" width="0.0799%" height="15" fill="rgb(208,168,35)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.3653%" y="373" width="0.0799%" height="15" fill="rgb(213,210,40)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.3653%" y="357" width="0.0799%" height="15" fill="rgb(236,60,6)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.3653%" y="341" width="0.0799%" height="15" fill="rgb(220,186,36)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.3653%" y="325" width="0.0799%" height="15" fill="rgb(225,120,49)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.3653%" y="309" width="0.0799%" height="15" fill="rgb(250,115,20)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="319.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (4 samples, 0.32%)</title><rect x="93.2054%" y="485" width="0.3197%" height="15" fill="rgb(207,214,23)" fg:x="1166" fg:w="4"/><text x="93.4554%" y="495.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="93.2854%" y="469" width="0.2398%" height="15" fill="rgb(240,9,18)" fg:x="1167" fg:w="3"/><text x="93.5354%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="93.2854%" y="453" width="0.2398%" height="15" fill="rgb(232,170,48)" fg:x="1167" fg:w="3"/><text x="93.5354%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="93.2854%" y="437" width="0.2398%" height="15" fill="rgb(236,149,23)" fg:x="1167" fg:w="3"/><text x="93.5354%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.4452%" y="421" width="0.0799%" height="15" fill="rgb(210,125,42)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.4452%" y="405" width="0.0799%" height="15" fill="rgb(207,201,52)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.4452%" y="389" width="0.0799%" height="15" fill="rgb(250,187,37)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.4452%" y="373" width="0.0799%" height="15" fill="rgb(214,186,2)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.4452%" y="357" width="0.0799%" height="15" fill="rgb(207,189,15)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.4452%" y="341" width="0.0799%" height="15" fill="rgb(221,99,21)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.4452%" y="325" width="0.0799%" height="15" fill="rgb(212,67,18)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (6 samples, 0.48%)</title><rect x="93.1255%" y="549" width="0.4796%" height="15" fill="rgb(226,24,24)" fg:x="1165" fg:w="6"/><text x="93.3755%" y="559.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (6 samples, 0.48%)</title><rect x="93.1255%" y="533" width="0.4796%" height="15" fill="rgb(252,123,31)" fg:x="1165" fg:w="6"/><text x="93.3755%" y="543.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="93.2054%" y="517" width="0.3997%" height="15" fill="rgb(251,227,47)" fg:x="1166" fg:w="5"/><text x="93.4554%" y="527.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (5 samples, 0.40%)</title><rect x="93.2054%" y="501" width="0.3997%" height="15" fill="rgb(233,84,53)" fg:x="1166" fg:w="5"/><text x="93.4554%" y="511.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="93.5252%" y="485" width="0.0799%" height="15" fill="rgb(228,57,19)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="93.5252%" y="469" width="0.0799%" height="15" fill="rgb(251,81,5)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="479.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="93.5252%" y="453" width="0.0799%" height="15" fill="rgb(236,211,27)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="93.5252%" y="437" width="0.0799%" height="15" fill="rgb(218,21,6)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="447.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="93.5252%" y="421" width="0.0799%" height="15" fill="rgb(239,104,19)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="93.5252%" y="405" width="0.0799%" height="15" fill="rgb(234,179,27)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="415.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="93.5252%" y="389" width="0.0799%" height="15" fill="rgb(221,154,39)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="93.5252%" y="373" width="0.0799%" height="15" fill="rgb(228,190,1)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.5252%" y="357" width="0.0799%" height="15" fill="rgb(244,122,33)" fg:x="1170" fg:w="1"/><text x="93.7752%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="93.6051%" y="549" width="0.0799%" height="15" fill="rgb(227,56,37)" fg:x="1171" fg:w="1"/><text x="93.8551%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="93.6851%" y="501" width="0.0799%" height="15" fill="rgb(207,158,16)" fg:x="1172" fg:w="1"/><text x="93.9351%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8449%" y="421" width="0.0799%" height="15" fill="rgb(251,222,30)" fg:x="1174" fg:w="1"/><text x="94.0949%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.9249%" y="341" width="0.1599%" height="15" fill="rgb(240,22,49)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.9249%" y="325" width="0.1599%" height="15" fill="rgb(224,207,37)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="93.9249%" y="309" width="0.1599%" height="15" fill="rgb(249,188,40)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="93.9249%" y="293" width="0.1599%" height="15" fill="rgb(254,141,11)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="93.9249%" y="277" width="0.1599%" height="15" fill="rgb(231,177,6)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="93.9249%" y="261" width="0.1599%" height="15" fill="rgb(241,6,16)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.9249%" y="245" width="0.1599%" height="15" fill="rgb(230,50,14)" fg:x="1175" fg:w="2"/><text x="94.1749%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="93.9249%" y="421" width="0.2398%" height="15" fill="rgb(254,36,3)" fg:x="1175" fg:w="3"/><text x="94.1749%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="93.9249%" y="405" width="0.2398%" height="15" fill="rgb(226,149,37)" fg:x="1175" fg:w="3"/><text x="94.1749%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="93.9249%" y="389" width="0.2398%" height="15" fill="rgb(253,49,27)" fg:x="1175" fg:w="3"/><text x="94.1749%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="93.9249%" y="373" width="0.2398%" height="15" fill="rgb(249,182,52)" fg:x="1175" fg:w="3"/><text x="94.1749%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="93.9249%" y="357" width="0.2398%" height="15" fill="rgb(223,42,15)" fg:x="1175" fg:w="3"/><text x="94.1749%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="94.0847%" y="341" width="0.0799%" height="15" fill="rgb(232,31,42)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.0847%" y="325" width="0.0799%" height="15" fill="rgb(233,56,46)" fg:x="1177" fg:w="1"/><text x="94.3347%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="93.7650%" y="485" width="0.4796%" height="15" fill="rgb(241,143,21)" fg:x="1173" fg:w="6"/><text x="94.0150%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="93.7650%" y="469" width="0.4796%" height="15" fill="rgb(251,222,15)" fg:x="1173" fg:w="6"/><text x="94.0150%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="93.8449%" y="453" width="0.3997%" height="15" fill="rgb(242,101,40)" fg:x="1174" fg:w="5"/><text x="94.0949%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="93.8449%" y="437" width="0.3997%" height="15" fill="rgb(247,60,44)" fg:x="1174" fg:w="5"/><text x="94.0949%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1647%" y="421" width="0.0799%" height="15" fill="rgb(254,48,47)" fg:x="1178" fg:w="1"/><text x="94.4147%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="94.2446%" y="485" width="0.1599%" height="15" fill="rgb(253,30,33)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.2446%" y="469" width="0.1599%" height="15" fill="rgb(253,214,47)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.2446%" y="453" width="0.1599%" height="15" fill="rgb(241,108,29)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.2446%" y="437" width="0.1599%" height="15" fill="rgb(240,36,2)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.2446%" y="421" width="0.1599%" height="15" fill="rgb(243,198,24)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.2446%" y="405" width="0.1599%" height="15" fill="rgb(225,98,27)" fg:x="1179" fg:w="2"/><text x="94.4946%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3245%" y="389" width="0.0799%" height="15" fill="rgb(208,86,30)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.3245%" y="373" width="0.0799%" height="15" fill="rgb(242,157,11)" fg:x="1180" fg:w="1"/><text x="94.5745%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="94.4045%" y="485" width="0.0799%" height="15" fill="rgb(244,84,16)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4045%" y="469" width="0.0799%" height="15" fill="rgb(247,20,46)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4045%" y="453" width="0.0799%" height="15" fill="rgb(240,157,20)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.4045%" y="437" width="0.0799%" height="15" fill="rgb(212,151,38)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4045%" y="421" width="0.0799%" height="15" fill="rgb(233,197,14)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4045%" y="405" width="0.0799%" height="15" fill="rgb(226,148,28)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.4045%" y="389" width="0.0799%" height="15" fill="rgb(244,141,30)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4045%" y="373" width="0.0799%" height="15" fill="rgb(215,73,38)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.4045%" y="357" width="0.0799%" height="15" fill="rgb(230,148,29)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4045%" y="341" width="0.0799%" height="15" fill="rgb(250,41,52)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.4045%" y="325" width="0.0799%" height="15" fill="rgb(215,48,1)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4045%" y="309" width="0.0799%" height="15" fill="rgb(205,223,38)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.4045%" y="293" width="0.0799%" height="15" fill="rgb(213,51,8)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="94.4045%" y="277" width="0.0799%" height="15" fill="rgb(248,53,11)" fg:x="1181" fg:w="1"/><text x="94.6545%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.4844%" y="325" width="0.1599%" height="15" fill="rgb(218,140,4)" fg:x="1182" fg:w="2"/><text x="94.7344%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5643%" y="309" width="0.0799%" height="15" fill="rgb(248,161,31)" fg:x="1183" fg:w="1"/><text x="94.8143%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5643%" y="293" width="0.0799%" height="15" fill="rgb(239,88,32)" fg:x="1183" fg:w="1"/><text x="94.8143%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="94.6443%" y="309" width="0.1599%" height="15" fill="rgb(234,14,28)" fg:x="1184" fg:w="2"/><text x="94.8943%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="94.4844%" y="357" width="0.3997%" height="15" fill="rgb(235,173,11)" fg:x="1182" fg:w="5"/><text x="94.7344%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="94.4844%" y="341" width="0.3997%" height="15" fill="rgb(222,70,2)" fg:x="1182" fg:w="5"/><text x="94.7344%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="94.6443%" y="325" width="0.2398%" height="15" fill="rgb(228,196,41)" fg:x="1184" fg:w="3"/><text x="94.8943%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8042%" y="309" width="0.0799%" height="15" fill="rgb(249,19,9)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.8841%" y="357" width="0.0799%" height="15" fill="rgb(221,16,43)" fg:x="1187" fg:w="1"/><text x="95.1341%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (17 samples, 1.36%)</title><rect x="93.6851%" y="517" width="1.3589%" height="15" fill="rgb(225,207,6)" fg:x="1172" fg:w="17"/><text x="93.9351%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="93.7650%" y="501" width="1.2790%" height="15" fill="rgb(249,32,32)" fg:x="1173" fg:w="16"/><text x="94.0150%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.56%)</title><rect x="94.4844%" y="485" width="0.5596%" height="15" fill="rgb(232,163,43)" fg:x="1182" fg:w="7"/><text x="94.7344%" y="495.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="94.4844%" y="469" width="0.5596%" height="15" fill="rgb(236,158,54)" fg:x="1182" fg:w="7"/><text x="94.7344%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="94.4844%" y="453" width="0.5596%" height="15" fill="rgb(205,126,44)" fg:x="1182" fg:w="7"/><text x="94.7344%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="94.4844%" y="437" width="0.5596%" height="15" fill="rgb(210,162,12)" fg:x="1182" fg:w="7"/><text x="94.7344%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="94.4844%" y="421" width="0.5596%" height="15" fill="rgb(218,156,48)" fg:x="1182" fg:w="7"/><text x="94.7344%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="94.4844%" y="405" width="0.5596%" height="15" fill="rgb(248,210,3)" fg:x="1182" fg:w="7"/><text x="94.7344%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="94.4844%" y="389" width="0.5596%" height="15" fill="rgb(212,43,27)" fg:x="1182" fg:w="7"/><text x="94.7344%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="94.4844%" y="373" width="0.5596%" height="15" fill="rgb(241,52,6)" fg:x="1182" fg:w="7"/><text x="94.7344%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9640%" y="357" width="0.0799%" height="15" fill="rgb(222,178,35)" fg:x="1188" fg:w="1"/><text x="95.2140%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9640%" y="341" width="0.0799%" height="15" fill="rgb(205,121,46)" fg:x="1188" fg:w="1"/><text x="95.2140%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9640%" y="325" width="0.0799%" height="15" fill="rgb(249,67,1)" fg:x="1188" fg:w="1"/><text x="95.2140%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0440%" y="485" width="0.0799%" height="15" fill="rgb(238,168,42)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0440%" y="469" width="0.0799%" height="15" fill="rgb(205,36,48)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0440%" y="453" width="0.0799%" height="15" fill="rgb(240,85,12)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0440%" y="437" width="0.0799%" height="15" fill="rgb(245,27,39)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0440%" y="421" width="0.0799%" height="15" fill="rgb(218,129,34)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0440%" y="405" width="0.0799%" height="15" fill="rgb(221,157,12)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.0440%" y="389" width="0.0799%" height="15" fill="rgb(213,206,20)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.0440%" y="373" width="0.0799%" height="15" fill="rgb(227,115,30)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.0440%" y="357" width="0.0799%" height="15" fill="rgb(221,40,47)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0440%" y="341" width="0.0799%" height="15" fill="rgb(239,96,49)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0440%" y="325" width="0.0799%" height="15" fill="rgb(223,24,38)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.0440%" y="309" width="0.0799%" height="15" fill="rgb(242,35,45)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.0440%" y="293" width="0.0799%" height="15" fill="rgb(236,20,9)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.0440%" y="277" width="0.0799%" height="15" fill="rgb(239,124,8)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.0440%" y="261" width="0.0799%" height="15" fill="rgb(228,92,29)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0440%" y="245" width="0.0799%" height="15" fill="rgb(251,53,39)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3637%" y="405" width="0.0799%" height="15" fill="rgb(224,44,10)" fg:x="1193" fg:w="1"/><text x="95.6137%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3637%" y="389" width="0.0799%" height="15" fill="rgb(254,10,15)" fg:x="1193" fg:w="1"/><text x="95.6137%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="95.2838%" y="437" width="0.2398%" height="15" fill="rgb(245,173,6)" fg:x="1192" fg:w="3"/><text x="95.5338%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.3637%" y="421" width="0.1599%" height="15" fill="rgb(228,74,0)" fg:x="1193" fg:w="2"/><text x="95.6137%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4436%" y="405" width="0.0799%" height="15" fill="rgb(206,138,29)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4436%" y="389" width="0.0799%" height="15" fill="rgb(253,27,43)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4436%" y="373" width="0.0799%" height="15" fill="rgb(231,73,0)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4436%" y="357" width="0.0799%" height="15" fill="rgb(218,9,23)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.4436%" y="341" width="0.0799%" height="15" fill="rgb(251,55,29)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.4436%" y="325" width="0.0799%" height="15" fill="rgb(223,180,22)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.4436%" y="309" width="0.0799%" height="15" fill="rgb(223,29,21)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4436%" y="293" width="0.0799%" height="15" fill="rgb(251,103,37)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4436%" y="277" width="0.0799%" height="15" fill="rgb(214,11,21)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.4436%" y="261" width="0.0799%" height="15" fill="rgb(205,137,13)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.4436%" y="245" width="0.0799%" height="15" fill="rgb(225,58,47)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.4436%" y="229" width="0.0799%" height="15" fill="rgb(222,197,14)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.4436%" y="213" width="0.0799%" height="15" fill="rgb(215,210,33)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4436%" y="197" width="0.0799%" height="15" fill="rgb(242,13,9)" fg:x="1194" fg:w="1"/><text x="95.6936%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6035%" y="293" width="0.0799%" height="15" fill="rgb(218,31,39)" fg:x="1196" fg:w="1"/><text x="95.8535%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="95.5236%" y="341" width="0.2398%" height="15" fill="rgb(211,214,23)" fg:x="1195" fg:w="3"/><text x="95.7736%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="95.5236%" y="325" width="0.2398%" height="15" fill="rgb(237,92,14)" fg:x="1195" fg:w="3"/><text x="95.7736%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="95.6035%" y="309" width="0.1599%" height="15" fill="rgb(220,78,5)" fg:x="1196" fg:w="2"/><text x="95.8535%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6835%" y="293" width="0.0799%" height="15" fill="rgb(237,23,21)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6835%" y="277" width="0.0799%" height="15" fill="rgb(251,207,51)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.6835%" y="261" width="0.0799%" height="15" fill="rgb(249,206,18)" fg:x="1197" fg:w="1"/><text x="95.9335%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.5236%" y="389" width="0.3197%" height="15" fill="rgb(236,20,19)" fg:x="1195" fg:w="4"/><text x="95.7736%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="95.5236%" y="373" width="0.3197%" height="15" fill="rgb(214,227,29)" fg:x="1195" fg:w="4"/><text x="95.7736%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="95.5236%" y="357" width="0.3197%" height="15" fill="rgb(209,183,4)" fg:x="1195" fg:w="4"/><text x="95.7736%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.7634%" y="341" width="0.0799%" height="15" fill="rgb(233,111,23)" fg:x="1198" fg:w="1"/><text x="96.0134%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.7634%" y="325" width="0.0799%" height="15" fill="rgb(238,121,27)" fg:x="1198" fg:w="1"/><text x="96.0134%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.7634%" y="309" width="0.0799%" height="15" fill="rgb(236,120,41)" fg:x="1198" fg:w="1"/><text x="96.0134%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7634%" y="293" width="0.0799%" height="15" fill="rgb(241,143,10)" fg:x="1198" fg:w="1"/><text x="96.0134%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.8433%" y="357" width="0.0799%" height="15" fill="rgb(224,86,31)" fg:x="1199" fg:w="1"/><text x="96.0933%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9233%" y="325" width="0.0799%" height="15" fill="rgb(236,212,27)" fg:x="1200" fg:w="1"/><text x="96.1733%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="95.5236%" y="437" width="0.5596%" height="15" fill="rgb(219,43,51)" fg:x="1195" fg:w="7"/><text x="95.7736%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.56%)</title><rect x="95.5236%" y="421" width="0.5596%" height="15" fill="rgb(232,216,8)" fg:x="1195" fg:w="7"/><text x="95.7736%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="95.5236%" y="405" width="0.5596%" height="15" fill="rgb(206,222,39)" fg:x="1195" fg:w="7"/><text x="95.7736%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.8433%" y="389" width="0.2398%" height="15" fill="rgb(209,149,48)" fg:x="1199" fg:w="3"/><text x="96.0933%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.8433%" y="373" width="0.2398%" height="15" fill="rgb(229,155,21)" fg:x="1199" fg:w="3"/><text x="96.0933%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="95.9233%" y="357" width="0.1599%" height="15" fill="rgb(246,152,26)" fg:x="1200" fg:w="2"/><text x="96.1733%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="95.9233%" y="341" width="0.1599%" height="15" fill="rgb(206,70,42)" fg:x="1200" fg:w="2"/><text x="96.1733%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0032%" y="325" width="0.0799%" height="15" fill="rgb(236,9,11)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0032%" y="309" width="0.0799%" height="15" fill="rgb(238,145,47)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.04%)</title><rect x="95.1239%" y="485" width="1.0392%" height="15" fill="rgb(252,189,7)" fg:x="1190" fg:w="13"/><text x="95.3739%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.96%)</title><rect x="95.2038%" y="469" width="0.9592%" height="15" fill="rgb(254,168,51)" fg:x="1191" fg:w="12"/><text x="95.4538%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (12 samples, 0.96%)</title><rect x="95.2038%" y="453" width="0.9592%" height="15" fill="rgb(227,105,46)" fg:x="1191" fg:w="12"/><text x="95.4538%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0831%" y="437" width="0.0799%" height="15" fill="rgb(227,74,30)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0831%" y="421" width="0.0799%" height="15" fill="rgb(206,212,44)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0831%" y="405" width="0.0799%" height="15" fill="rgb(252,69,11)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.0831%" y="389" width="0.0799%" height="15" fill="rgb(239,116,0)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0831%" y="373" width="0.0799%" height="15" fill="rgb(246,189,23)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="96.1631%" y="453" width="0.1599%" height="15" fill="rgb(229,50,41)" fg:x="1203" fg:w="2"/><text x="96.4131%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.1631%" y="437" width="0.1599%" height="15" fill="rgb(214,66,37)" fg:x="1203" fg:w="2"/><text x="96.4131%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2430%" y="421" width="0.0799%" height="15" fill="rgb(226,28,6)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2430%" y="405" width="0.0799%" height="15" fill="rgb(239,154,0)" fg:x="1204" fg:w="1"/><text x="96.4930%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3229%" y="453" width="0.0799%" height="15" fill="rgb(233,97,11)" fg:x="1205" fg:w="1"/><text x="96.5729%" y="463.50"></text></g><g><title>engine::session::internal::Added::find_refs (18 samples, 1.44%)</title><rect x="95.0440%" y="517" width="1.4388%" height="15" fill="rgb(236,215,16)" fg:x="1189" fg:w="18"/><text x="95.2940%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (18 samples, 1.44%)</title><rect x="95.0440%" y="501" width="1.4388%" height="15" fill="rgb(246,188,29)" fg:x="1189" fg:w="18"/><text x="95.2940%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="96.1631%" y="485" width="0.3197%" height="15" fill="rgb(207,7,29)" fg:x="1203" fg:w="4"/><text x="96.4131%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.1631%" y="469" width="0.3197%" height="15" fill="rgb(238,112,43)" fg:x="1203" fg:w="4"/><text x="96.4131%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="96.4029%" y="453" width="0.0799%" height="15" fill="rgb(230,110,32)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="96.4029%" y="437" width="0.0799%" height="15" fill="rgb(218,197,32)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="447.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="96.4029%" y="421" width="0.0799%" height="15" fill="rgb(252,61,9)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="431.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="96.4029%" y="405" width="0.0799%" height="15" fill="rgb(244,140,14)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.4029%" y="389" width="0.0799%" height="15" fill="rgb(216,14,47)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="399.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="96.4029%" y="373" width="0.0799%" height="15" fill="rgb(224,130,52)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="96.4029%" y="357" width="0.0799%" height="15" fill="rgb(210,229,51)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4029%" y="341" width="0.0799%" height="15" fill="rgb(242,13,9)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4029%" y="325" width="0.0799%" height="15" fill="rgb(252,71,50)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.4029%" y="309" width="0.0799%" height="15" fill="rgb(218,225,6)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.4029%" y="293" width="0.0799%" height="15" fill="rgb(219,27,35)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.4029%" y="277" width="0.0799%" height="15" fill="rgb(226,30,1)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.4029%" y="261" width="0.0799%" height="15" fill="rgb(227,164,34)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4029%" y="245" width="0.0799%" height="15" fill="rgb(206,103,4)" fg:x="1206" fg:w="1"/><text x="96.6529%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.4828%" y="501" width="0.1599%" height="15" fill="rgb(214,166,19)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.4828%" y="485" width="0.1599%" height="15" fill="rgb(240,56,20)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.4828%" y="469" width="0.1599%" height="15" fill="rgb(224,25,3)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="96.4828%" y="453" width="0.1599%" height="15" fill="rgb(216,206,54)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="96.4828%" y="437" width="0.1599%" height="15" fill="rgb(225,142,10)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="96.4828%" y="421" width="0.1599%" height="15" fill="rgb(246,9,18)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.4828%" y="405" width="0.1599%" height="15" fill="rgb(247,140,18)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.4828%" y="389" width="0.1599%" height="15" fill="rgb(239,184,22)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="96.4828%" y="373" width="0.1599%" height="15" fill="rgb(227,94,44)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="96.4828%" y="357" width="0.1599%" height="15" fill="rgb(219,43,3)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="96.4828%" y="341" width="0.1599%" height="15" fill="rgb(210,76,31)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="96.4828%" y="325" width="0.1599%" height="15" fill="rgb(225,85,12)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.4828%" y="309" width="0.1599%" height="15" fill="rgb(214,191,28)" fg:x="1207" fg:w="2"/><text x="96.7328%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6427%" y="373" width="0.0799%" height="15" fill="rgb(214,43,14)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6427%" y="357" width="0.0799%" height="15" fill="rgb(253,117,5)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6427%" y="341" width="0.0799%" height="15" fill="rgb(208,124,26)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6427%" y="325" width="0.0799%" height="15" fill="rgb(228,208,39)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6427%" y="309" width="0.0799%" height="15" fill="rgb(206,180,39)" fg:x="1209" fg:w="1"/><text x="96.8927%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.6427%" y="405" width="0.1599%" height="15" fill="rgb(205,111,37)" fg:x="1209" fg:w="2"/><text x="96.8927%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.6427%" y="389" width="0.1599%" height="15" fill="rgb(208,121,24)" fg:x="1209" fg:w="2"/><text x="96.8927%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.7226%" y="373" width="0.0799%" height="15" fill="rgb(218,215,32)" fg:x="1210" fg:w="1"/><text x="96.9726%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.8026%" y="405" width="0.0799%" height="15" fill="rgb(244,168,53)" fg:x="1211" fg:w="1"/><text x="97.0526%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.8026%" y="389" width="0.0799%" height="15" fill="rgb(214,9,36)" fg:x="1211" fg:w="1"/><text x="97.0526%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.8026%" y="373" width="0.0799%" height="15" fill="rgb(231,4,34)" fg:x="1211" fg:w="1"/><text x="97.0526%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="96.9624%" y="357" width="0.1599%" height="15" fill="rgb(210,83,51)" fg:x="1213" fg:w="2"/><text x="97.2124%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="96.9624%" y="341" width="0.1599%" height="15" fill="rgb(224,112,1)" fg:x="1213" fg:w="2"/><text x="97.2124%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9624%" y="325" width="0.1599%" height="15" fill="rgb(216,33,41)" fg:x="1213" fg:w="2"/><text x="97.2124%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.9624%" y="309" width="0.1599%" height="15" fill="rgb(215,179,42)" fg:x="1213" fg:w="2"/><text x="97.2124%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.0424%" y="293" width="0.0799%" height="15" fill="rgb(205,81,48)" fg:x="1214" fg:w="1"/><text x="97.2924%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="96.6427%" y="453" width="0.6395%" height="15" fill="rgb(246,17,30)" fg:x="1209" fg:w="8"/><text x="96.8927%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="96.6427%" y="437" width="0.6395%" height="15" fill="rgb(226,19,16)" fg:x="1209" fg:w="8"/><text x="96.8927%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="96.6427%" y="421" width="0.6395%" height="15" fill="rgb(207,3,14)" fg:x="1209" fg:w="8"/><text x="96.8927%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="96.8825%" y="405" width="0.3997%" height="15" fill="rgb(226,77,12)" fg:x="1212" fg:w="5"/><text x="97.1325%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="96.8825%" y="389" width="0.3997%" height="15" fill="rgb(226,76,25)" fg:x="1212" fg:w="5"/><text x="97.1325%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="96.9624%" y="373" width="0.3197%" height="15" fill="rgb(217,216,25)" fg:x="1213" fg:w="4"/><text x="97.2124%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.1223%" y="357" width="0.1599%" height="15" fill="rgb(247,127,42)" fg:x="1215" fg:w="2"/><text x="97.3723%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.1223%" y="341" width="0.1599%" height="15" fill="rgb(226,10,34)" fg:x="1215" fg:w="2"/><text x="97.3723%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.2022%" y="325" width="0.0799%" height="15" fill="rgb(249,78,0)" fg:x="1216" fg:w="1"/><text x="97.4522%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2022%" y="309" width="0.0799%" height="15" fill="rgb(226,218,38)" fg:x="1216" fg:w="1"/><text x="97.4522%" y="319.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="97.2022%" y="293" width="0.0799%" height="15" fill="rgb(240,92,1)" fg:x="1216" fg:w="1"/><text x="97.4522%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.72%)</title><rect x="96.6427%" y="501" width="0.7194%" height="15" fill="rgb(237,224,33)" fg:x="1209" fg:w="9"/><text x="96.8927%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="96.6427%" y="485" width="0.7194%" height="15" fill="rgb(211,46,1)" fg:x="1209" fg:w="9"/><text x="96.8927%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="96.6427%" y="469" width="0.7194%" height="15" fill="rgb(239,190,4)" fg:x="1209" fg:w="9"/><text x="96.8927%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2822%" y="453" width="0.0799%" height="15" fill="rgb(221,50,22)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2822%" y="437" width="0.0799%" height="15" fill="rgb(207,176,8)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.3621%" y="309" width="0.0799%" height="15" fill="rgb(244,114,50)" fg:x="1218" fg:w="1"/><text x="97.6121%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3621%" y="437" width="0.1599%" height="15" fill="rgb(226,206,19)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3621%" y="421" width="0.1599%" height="15" fill="rgb(208,199,16)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3621%" y="405" width="0.1599%" height="15" fill="rgb(208,38,14)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3621%" y="389" width="0.1599%" height="15" fill="rgb(221,211,49)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3621%" y="373" width="0.1599%" height="15" fill="rgb(227,214,34)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3621%" y="357" width="0.1599%" height="15" fill="rgb(234,5,54)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3621%" y="341" width="0.1599%" height="15" fill="rgb(236,215,22)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3621%" y="325" width="0.1599%" height="15" fill="rgb(244,0,11)" fg:x="1218" fg:w="2"/><text x="97.6121%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4420%" y="309" width="0.0799%" height="15" fill="rgb(212,140,16)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4420%" y="293" width="0.0799%" height="15" fill="rgb(238,101,37)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="303.50"></text></g><g><title>engine::session::Session::load_entity (49 samples, 3.92%)</title><rect x="93.6851%" y="533" width="3.9169%" height="15" fill="rgb(247,46,3)" fg:x="1172" fg:w="49"/><text x="93.9351%" y="543.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.12%)</title><rect x="96.4828%" y="517" width="1.1191%" height="15" fill="rgb(208,106,19)" fg:x="1207" fg:w="14"/><text x="96.7328%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="97.3621%" y="501" width="0.2398%" height="15" fill="rgb(240,227,15)" fg:x="1218" fg:w="3"/><text x="97.6121%" y="511.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.3621%" y="485" width="0.2398%" height="15" fill="rgb(226,173,6)" fg:x="1218" fg:w="3"/><text x="97.6121%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.3621%" y="469" width="0.2398%" height="15" fill="rgb(213,191,1)" fg:x="1218" fg:w="3"/><text x="97.6121%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.3621%" y="453" width="0.2398%" height="15" fill="rgb(246,51,36)" fg:x="1218" fg:w="3"/><text x="97.6121%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5220%" y="437" width="0.0799%" height="15" fill="rgb(238,40,32)" fg:x="1220" fg:w="1"/><text x="97.7720%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6019%" y="469" width="0.0799%" height="15" fill="rgb(208,126,27)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6019%" y="453" width="0.0799%" height="15" fill="rgb(227,117,38)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6019%" y="437" width="0.0799%" height="15" fill="rgb(232,16,1)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6019%" y="421" width="0.0799%" height="15" fill="rgb(212,111,31)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6019%" y="405" width="0.0799%" height="15" fill="rgb(253,227,2)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6019%" y="389" width="0.0799%" height="15" fill="rgb(216,122,17)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6019%" y="373" width="0.0799%" height="15" fill="rgb(227,37,2)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6019%" y="357" width="0.0799%" height="15" fill="rgb(244,113,40)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6019%" y="341" width="0.0799%" height="15" fill="rgb(217,193,34)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6019%" y="325" width="0.0799%" height="15" fill="rgb(212,223,15)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.6019%" y="309" width="0.0799%" height="15" fill="rgb(238,143,18)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.6019%" y="293" width="0.0799%" height="15" fill="rgb(231,18,49)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.6019%" y="277" width="0.0799%" height="15" fill="rgb(249,122,4)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.6019%" y="261" width="0.0799%" height="15" fill="rgb(245,138,54)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6019%" y="245" width="0.0799%" height="15" fill="rgb(218,130,18)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.6019%" y="501" width="0.1599%" height="15" fill="rgb(235,94,13)" fg:x="1221" fg:w="2"/><text x="97.8519%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.6019%" y="485" width="0.1599%" height="15" fill="rgb(247,143,5)" fg:x="1221" fg:w="2"/><text x="97.8519%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6819%" y="469" width="0.0799%" height="15" fill="rgb(212,59,54)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6819%" y="453" width="0.0799%" height="15" fill="rgb(206,121,24)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6819%" y="437" width="0.0799%" height="15" fill="rgb(235,38,8)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6819%" y="421" width="0.0799%" height="15" fill="rgb(227,102,26)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6819%" y="405" width="0.0799%" height="15" fill="rgb(240,183,46)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6819%" y="389" width="0.0799%" height="15" fill="rgb(208,177,23)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6819%" y="373" width="0.0799%" height="15" fill="rgb(216,152,5)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.6819%" y="357" width="0.0799%" height="15" fill="rgb(238,199,2)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.6819%" y="341" width="0.0799%" height="15" fill="rgb(235,142,28)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.6819%" y="325" width="0.0799%" height="15" fill="rgb(225,97,25)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.6819%" y="309" width="0.0799%" height="15" fill="rgb(208,75,46)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6819%" y="293" width="0.0799%" height="15" fill="rgb(240,136,15)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8417%" y="453" width="0.1599%" height="15" fill="rgb(235,36,27)" fg:x="1224" fg:w="2"/><text x="98.0917%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9217%" y="437" width="0.0799%" height="15" fill="rgb(231,132,23)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (6 samples, 0.48%)</title><rect x="97.6019%" y="533" width="0.4796%" height="15" fill="rgb(205,208,20)" fg:x="1221" fg:w="6"/><text x="97.8519%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="97.6019%" y="517" width="0.4796%" height="15" fill="rgb(215,26,40)" fg:x="1221" fg:w="6"/><text x="97.8519%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="97.7618%" y="501" width="0.3197%" height="15" fill="rgb(238,183,34)" fg:x="1223" fg:w="4"/><text x="98.0118%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="97.7618%" y="485" width="0.3197%" height="15" fill="rgb(207,96,10)" fg:x="1223" fg:w="4"/><text x="98.0118%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="97.7618%" y="469" width="0.3197%" height="15" fill="rgb(218,88,6)" fg:x="1223" fg:w="4"/><text x="98.0118%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0016%" y="453" width="0.0799%" height="15" fill="rgb(217,22,49)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0016%" y="437" width="0.0799%" height="15" fill="rgb(240,195,14)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0016%" y="421" width="0.0799%" height="15" fill="rgb(229,48,27)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0016%" y="405" width="0.0799%" height="15" fill="rgb(220,194,45)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0016%" y="389" width="0.0799%" height="15" fill="rgb(252,60,20)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="98.0016%" y="373" width="0.0799%" height="15" fill="rgb(244,169,33)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0815%" y="517" width="0.0799%" height="15" fill="rgb(234,141,34)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0815%" y="501" width="0.0799%" height="15" fill="rgb(241,141,9)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0815%" y="485" width="0.0799%" height="15" fill="rgb(246,27,36)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0815%" y="469" width="0.0799%" height="15" fill="rgb(216,188,42)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0815%" y="453" width="0.0799%" height="15" fill="rgb(234,205,22)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0815%" y="437" width="0.0799%" height="15" fill="rgb(210,202,32)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0815%" y="421" width="0.0799%" height="15" fill="rgb(217,0,48)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0815%" y="405" width="0.0799%" height="15" fill="rgb(207,115,37)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0815%" y="389" width="0.0799%" height="15" fill="rgb(237,221,44)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0815%" y="373" width="0.0799%" height="15" fill="rgb(249,78,2)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0815%" y="357" width="0.0799%" height="15" fill="rgb(211,169,23)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0815%" y="341" width="0.0799%" height="15" fill="rgb(207,116,29)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0815%" y="325" width="0.0799%" height="15" fill="rgb(240,84,33)" fg:x="1227" fg:w="1"/><text x="98.3315%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="98.1615%" y="517" width="0.1599%" height="15" fill="rgb(229,224,31)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.1615%" y="501" width="0.1599%" height="15" fill="rgb(227,90,31)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1615%" y="485" width="0.1599%" height="15" fill="rgb(249,22,41)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.1615%" y="469" width="0.1599%" height="15" fill="rgb(239,65,11)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1615%" y="453" width="0.1599%" height="15" fill="rgb(205,5,23)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.1615%" y="437" width="0.1599%" height="15" fill="rgb(254,78,52)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.1615%" y="421" width="0.1599%" height="15" fill="rgb(214,156,33)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.1615%" y="405" width="0.1599%" height="15" fill="rgb(208,20,30)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="98.1615%" y="389" width="0.1599%" height="15" fill="rgb(223,133,18)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.1615%" y="373" width="0.1599%" height="15" fill="rgb(222,91,41)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2414%" y="357" width="0.0799%" height="15" fill="rgb(247,137,48)" fg:x="1229" fg:w="1"/><text x="98.4914%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2414%" y="341" width="0.0799%" height="15" fill="rgb(239,156,11)" fg:x="1229" fg:w="1"/><text x="98.4914%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.2414%" y="325" width="0.0799%" height="15" fill="rgb(244,56,26)" fg:x="1229" fg:w="1"/><text x="98.4914%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3213%" y="421" width="0.0799%" height="15" fill="rgb(205,131,49)" fg:x="1230" fg:w="1"/><text x="98.5713%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.3213%" y="405" width="0.0799%" height="15" fill="rgb(224,0,2)" fg:x="1230" fg:w="1"/><text x="98.5713%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (60 samples, 4.80%)</title><rect x="93.6851%" y="549" width="4.7962%" height="15" fill="rgb(247,59,36)" fg:x="1172" fg:w="60"/><text x="93.9351%" y="559.50">engine..</text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="98.0815%" y="533" width="0.3997%" height="15" fill="rgb(215,4,47)" fg:x="1227" fg:w="5"/><text x="98.3315%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="98.3213%" y="517" width="0.1599%" height="15" fill="rgb(242,72,42)" fg:x="1230" fg:w="2"/><text x="98.5713%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.3213%" y="501" width="0.1599%" height="15" fill="rgb(232,145,44)" fg:x="1230" fg:w="2"/><text x="98.5713%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.3213%" y="485" width="0.1599%" height="15" fill="rgb(205,108,43)" fg:x="1230" fg:w="2"/><text x="98.5713%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3213%" y="469" width="0.1599%" height="15" fill="rgb(215,190,17)" fg:x="1230" fg:w="2"/><text x="98.5713%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.3213%" y="453" width="0.1599%" height="15" fill="rgb(223,90,34)" fg:x="1230" fg:w="2"/><text x="98.5713%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3213%" y="437" width="0.1599%" height="15" fill="rgb(216,25,0)" fg:x="1230" fg:w="2"/><text x="98.5713%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4013%" y="421" width="0.0799%" height="15" fill="rgb(223,51,28)" fg:x="1231" fg:w="1"/><text x="98.6513%" y="431.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="98.4812%" y="549" width="0.0799%" height="15" fill="rgb(227,131,7)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="98.4812%" y="533" width="0.0799%" height="15" fill="rgb(216,72,36)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.4812%" y="517" width="0.0799%" height="15" fill="rgb(243,158,40)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4812%" y="501" width="0.0799%" height="15" fill="rgb(218,60,54)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="98.5612%" y="517" width="0.0799%" height="15" fill="rgb(230,15,46)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.5612%" y="501" width="0.0799%" height="15" fill="rgb(250,22,26)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="98.5612%" y="533" width="0.3197%" height="15" fill="rgb(239,194,40)" fg:x="1233" fg:w="4"/><text x="98.8112%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.6411%" y="517" width="0.2398%" height="15" fill="rgb(219,62,9)" fg:x="1234" fg:w="3"/><text x="98.8911%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.7210%" y="501" width="0.1599%" height="15" fill="rgb(228,45,21)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.7210%" y="485" width="0.1599%" height="15" fill="rgb(242,56,44)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.7210%" y="469" width="0.1599%" height="15" fill="rgb(239,170,14)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.7210%" y="453" width="0.1599%" height="15" fill="rgb(236,150,13)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.7210%" y="437" width="0.1599%" height="15" fill="rgb(228,15,30)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="98.7210%" y="421" width="0.1599%" height="15" fill="rgb(217,43,28)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="98.7210%" y="405" width="0.1599%" height="15" fill="rgb(246,223,1)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="98.7210%" y="389" width="0.1599%" height="15" fill="rgb(247,103,7)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="98.7210%" y="373" width="0.1599%" height="15" fill="rgb(205,105,39)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="98.7210%" y="357" width="0.1599%" height="15" fill="rgb(216,134,18)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="98.7210%" y="341" width="0.1599%" height="15" fill="rgb(226,139,50)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="98.7210%" y="325" width="0.1599%" height="15" fill="rgb(251,152,38)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="98.7210%" y="309" width="0.1599%" height="15" fill="rgb(222,63,15)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="98.7210%" y="293" width="0.1599%" height="15" fill="rgb(212,198,28)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.7210%" y="277" width="0.1599%" height="15" fill="rgb(216,93,38)" fg:x="1235" fg:w="2"/><text x="98.9710%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.8809%" y="533" width="0.0799%" height="15" fill="rgb(247,202,44)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.8809%" y="517" width="0.0799%" height="15" fill="rgb(237,204,46)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8809%" y="501" width="0.0799%" height="15" fill="rgb(224,98,48)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8809%" y="485" width="0.0799%" height="15" fill="rgb(247,105,21)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.8809%" y="469" width="0.0799%" height="15" fill="rgb(212,137,52)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8809%" y="453" width="0.0799%" height="15" fill="rgb(223,76,33)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8809%" y="437" width="0.0799%" height="15" fill="rgb(209,156,27)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8809%" y="421" width="0.0799%" height="15" fill="rgb(249,81,54)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="98.5612%" y="549" width="0.4796%" height="15" fill="rgb(241,46,29)" fg:x="1233" fg:w="6"/><text x="98.8112%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.9608%" y="533" width="0.0799%" height="15" fill="rgb(213,193,39)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.9608%" y="517" width="0.0799%" height="15" fill="rgb(214,85,16)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.9608%" y="501" width="0.0799%" height="15" fill="rgb(216,184,17)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.9608%" y="485" width="0.0799%" height="15" fill="rgb(254,219,29)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="98.9608%" y="469" width="0.0799%" height="15" fill="rgb(209,148,34)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="98.9608%" y="453" width="0.0799%" height="15" fill="rgb(253,215,11)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.9608%" y="437" width="0.0799%" height="15" fill="rgb(232,126,20)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.9608%" y="421" width="0.0799%" height="15" fill="rgb(248,118,51)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="98.9608%" y="405" width="0.0799%" height="15" fill="rgb(226,121,21)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="98.9608%" y="389" width="0.0799%" height="15" fill="rgb(216,128,16)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="98.9608%" y="373" width="0.0799%" height="15" fill="rgb(205,17,9)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="98.9608%" y="357" width="0.0799%" height="15" fill="rgb(206,197,21)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.0408%" y="501" width="0.1599%" height="15" fill="rgb(212,202,9)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="99.0408%" y="485" width="0.1599%" height="15" fill="rgb(241,131,50)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="99.0408%" y="469" width="0.1599%" height="15" fill="rgb(228,115,51)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="99.0408%" y="453" width="0.1599%" height="15" fill="rgb(237,209,8)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="99.0408%" y="437" width="0.1599%" height="15" fill="rgb(241,121,28)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="99.0408%" y="421" width="0.1599%" height="15" fill="rgb(238,194,51)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="99.0408%" y="405" width="0.1599%" height="15" fill="rgb(208,41,39)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="99.0408%" y="389" width="0.1599%" height="15" fill="rgb(223,95,44)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="99.0408%" y="373" width="0.1599%" height="15" fill="rgb(253,98,40)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="99.0408%" y="357" width="0.1599%" height="15" fill="rgb(210,5,12)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="99.0408%" y="341" width="0.1599%" height="15" fill="rgb(233,201,23)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="99.0408%" y="325" width="0.1599%" height="15" fill="rgb(251,68,15)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="99.0408%" y="309" width="0.1599%" height="15" fill="rgb(243,10,46)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.2006%" y="501" width="0.0799%" height="15" fill="rgb(253,130,44)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.2006%" y="485" width="0.0799%" height="15" fill="rgb(244,5,26)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2006%" y="469" width="0.0799%" height="15" fill="rgb(220,126,20)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2006%" y="453" width="0.0799%" height="15" fill="rgb(212,188,29)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2006%" y="437" width="0.0799%" height="15" fill="rgb(227,194,48)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2006%" y="421" width="0.0799%" height="15" fill="rgb(245,64,28)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2006%" y="405" width="0.0799%" height="15" fill="rgb(205,44,7)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.2006%" y="389" width="0.0799%" height="15" fill="rgb(213,193,11)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.2006%" y="373" width="0.0799%" height="15" fill="rgb(238,157,6)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.2006%" y="357" width="0.0799%" height="15" fill="rgb(222,73,7)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.2006%" y="341" width="0.0799%" height="15" fill="rgb(224,78,15)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.2006%" y="325" width="0.0799%" height="15" fill="rgb(218,149,46)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.2006%" y="309" width="0.0799%" height="15" fill="rgb(218,175,44)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.2006%" y="293" width="0.0799%" height="15" fill="rgb(215,183,45)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.2006%" y="277" width="0.0799%" height="15" fill="rgb(226,116,37)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.2006%" y="261" width="0.0799%" height="15" fill="rgb(252,224,12)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2006%" y="245" width="0.0799%" height="15" fill="rgb(232,212,21)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="255.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="99.2806%" y="501" width="0.0799%" height="15" fill="rgb(226,191,16)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2806%" y="485" width="0.0799%" height="15" fill="rgb(231,156,11)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2806%" y="469" width="0.0799%" height="15" fill="rgb(225,134,49)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.2806%" y="453" width="0.0799%" height="15" fill="rgb(254,55,32)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2806%" y="437" width="0.0799%" height="15" fill="rgb(242,195,29)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2806%" y="421" width="0.0799%" height="15" fill="rgb(210,155,20)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2806%" y="405" width="0.0799%" height="15" fill="rgb(243,170,23)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2806%" y="389" width="0.0799%" height="15" fill="rgb(242,197,51)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2806%" y="373" width="0.0799%" height="15" fill="rgb(248,48,13)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2806%" y="357" width="0.0799%" height="15" fill="rgb(221,185,15)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.2806%" y="341" width="0.0799%" height="15" fill="rgb(244,49,7)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2806%" y="325" width="0.0799%" height="15" fill="rgb(213,182,52)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2806%" y="309" width="0.0799%" height="15" fill="rgb(209,15,45)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="99.2806%" y="293" width="0.0799%" height="15" fill="rgb(233,23,44)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3605%" y="405" width="0.0799%" height="15" fill="rgb(220,182,30)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3605%" y="389" width="0.0799%" height="15" fill="rgb(219,116,33)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3605%" y="373" width="0.0799%" height="15" fill="rgb(231,15,21)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3605%" y="357" width="0.0799%" height="15" fill="rgb(238,119,25)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3605%" y="341" width="0.0799%" height="15" fill="rgb(232,30,39)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3605%" y="325" width="0.0799%" height="15" fill="rgb(241,26,30)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.3605%" y="309" width="0.0799%" height="15" fill="rgb(234,154,4)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.3605%" y="293" width="0.0799%" height="15" fill="rgb(229,199,39)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="303.50"></text></g><g><title>engine::session::Session::load_entity (6 samples, 0.48%)</title><rect x="99.0408%" y="533" width="0.4796%" height="15" fill="rgb(236,213,10)" fg:x="1239" fg:w="6"/><text x="99.2908%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="99.0408%" y="517" width="0.4796%" height="15" fill="rgb(247,28,19)" fg:x="1239" fg:w="6"/><text x="99.2908%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="99.3605%" y="501" width="0.1599%" height="15" fill="rgb(239,199,24)" fg:x="1243" fg:w="2"/><text x="99.6105%" y="511.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.3605%" y="485" width="0.1599%" height="15" fill="rgb(246,122,13)" fg:x="1243" fg:w="2"/><text x="99.6105%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.3605%" y="469" width="0.1599%" height="15" fill="rgb(210,203,29)" fg:x="1243" fg:w="2"/><text x="99.6105%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3605%" y="453" width="0.1599%" height="15" fill="rgb(218,4,50)" fg:x="1243" fg:w="2"/><text x="99.6105%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.3605%" y="437" width="0.1599%" height="15" fill="rgb(236,142,48)" fg:x="1243" fg:w="2"/><text x="99.6105%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3605%" y="421" width="0.1599%" height="15" fill="rgb(245,173,2)" fg:x="1243" fg:w="2"/><text x="99.6105%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4404%" y="405" width="0.0799%" height="15" fill="rgb(244,196,18)" fg:x="1244" fg:w="1"/><text x="99.6904%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="99.5204%" y="501" width="0.0799%" height="15" fill="rgb(221,27,33)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6003%" y="485" width="0.0799%" height="15" fill="rgb(210,206,16)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6003%" y="469" width="0.0799%" height="15" fill="rgb(238,161,34)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6003%" y="453" width="0.0799%" height="15" fill="rgb(243,118,39)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6003%" y="437" width="0.0799%" height="15" fill="rgb(234,126,9)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6003%" y="421" width="0.0799%" height="15" fill="rgb(234,167,42)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.6003%" y="405" width="0.0799%" height="15" fill="rgb(238,54,48)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.6003%" y="389" width="0.0799%" height="15" fill="rgb(226,105,2)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.6003%" y="373" width="0.0799%" height="15" fill="rgb(223,95,23)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6003%" y="357" width="0.0799%" height="15" fill="rgb(249,212,19)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6003%" y="341" width="0.0799%" height="15" fill="rgb(234,158,54)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.6003%" y="325" width="0.0799%" height="15" fill="rgb(247,114,32)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.6003%" y="309" width="0.0799%" height="15" fill="rgb(250,68,44)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.6003%" y="293" width="0.0799%" height="15" fill="rgb(242,3,15)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.6003%" y="277" width="0.0799%" height="15" fill="rgb(223,110,32)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6803%" y="485" width="0.0799%" height="15" fill="rgb(216,26,54)" fg:x="1247" fg:w="1"/><text x="99.9303%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.7602%" y="485" width="0.0799%" height="15" fill="rgb(209,145,42)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="99.7602%" y="469" width="0.0799%" height="15" fill="rgb(240,111,53)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.7602%" y="453" width="0.0799%" height="15" fill="rgb(209,101,4)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.7602%" y="437" width="0.0799%" height="15" fill="rgb(231,74,29)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="99.5204%" y="517" width="0.3997%" height="15" fill="rgb(223,12,12)" fg:x="1245" fg:w="5"/><text x="99.7704%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="99.6003%" y="501" width="0.3197%" height="15" fill="rgb(207,162,2)" fg:x="1246" fg:w="4"/><text x="99.8503%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.8401%" y="485" width="0.0799%" height="15" fill="rgb(230,152,0)" fg:x="1249" fg:w="1"/><text x="100.0901%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8401%" y="469" width="0.0799%" height="15" fill="rgb(254,156,19)" fg:x="1249" fg:w="1"/><text x="100.0901%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.8401%" y="453" width="0.0799%" height="15" fill="rgb(250,28,0)" fg:x="1249" fg:w="1"/><text x="100.0901%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8401%" y="437" width="0.0799%" height="15" fill="rgb(253,27,5)" fg:x="1249" fg:w="1"/><text x="100.0901%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8401%" y="421" width="0.0799%" height="15" fill="rgb(244,154,7)" fg:x="1249" fg:w="1"/><text x="100.0901%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8401%" y="405" width="0.0799%" height="15" fill="rgb(242,108,21)" fg:x="1249" fg:w="1"/><text x="100.0901%" y="415.50"></text></g><g><title>all (1,251 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(254,200,38)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="943.50"></text></g><g><title>simple-d06cd706 (1,251 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(250,145,41)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="927.50">simple-d06cd706</text></g><g><title>_start (1,251 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(235,136,31)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="911.50">_start</text></g><g><title>__libc_start_main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(215,13,18)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="895.50">__libc_start_main</text></g><g><title>main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(238,199,12)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (1,251 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(242,179,49)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(214,10,44)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(229,181,11)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(244,155,10)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(254,13,48)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(210,164,6)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(216,187,40)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(208,143,21)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,251 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(211,73,41)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(244,69,21)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,251 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(230,152,32)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(208,110,18)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="687.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,251 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(214,201,49)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="671.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,251 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(253,153,27)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="655.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (316 samples, 25.26%)</title><rect x="74.7402%" y="629" width="25.2598%" height="15" fill="rgb(238,61,11)" fg:x="935" fg:w="316"/><text x="74.9902%" y="639.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as ..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (316 samples, 25.26%)</title><rect x="74.7402%" y="613" width="25.2598%" height="15" fill="rgb(227,84,2)" fg:x="935" fg:w="316"/><text x="74.9902%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (316 samples, 25.26%)</title><rect x="74.7402%" y="597" width="25.2598%" height="15" fill="rgb(233,52,8)" fg:x="935" fg:w="316"/><text x="74.9902%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (86 samples, 6.87%)</title><rect x="93.1255%" y="581" width="6.8745%" height="15" fill="rgb(209,136,13)" fg:x="1165" fg:w="86"/><text x="93.3755%" y="591.50">engine::s..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (86 samples, 6.87%)</title><rect x="93.1255%" y="565" width="6.8745%" height="15" fill="rgb(229,86,25)" fg:x="1165" fg:w="86"/><text x="93.3755%" y="575.50">engine::s..</text></g><g><title>kernel::model::entry::EntryResolver::world (12 samples, 0.96%)</title><rect x="99.0408%" y="549" width="0.9592%" height="15" fill="rgb(235,47,16)" fg:x="1239" fg:w="12"/><text x="99.2908%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="99.5204%" y="533" width="0.4796%" height="15" fill="rgb(231,186,4)" fg:x="1245" fg:w="6"/><text x="99.7704%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="99.9201%" y="517" width="0.0799%" height="15" fill="rgb(209,213,23)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.9201%" y="501" width="0.0799%" height="15" fill="rgb(212,142,47)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="511.50"></text></g></svg></svg>